<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1605"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1605"> </text>
<g id="frames">
<g>
<title>all (7,467 samples, 100.00%)</title><rect x="10.0" y="1571.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1582.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (5 samples, 0.07%)</title><rect x="10.0" y="1555.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1566.0"></text>
</g>
<g>
<title>async_page_fault (2 samples, 0.03%)</title><rect x="10.3" y="1539.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.3" y="1550.0"></text>
</g>
<g>
<title>do_async_page_fault (2 samples, 0.03%)</title><rect x="10.3" y="1523.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.3" y="1534.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="10.3" y="1507.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.3" y="1518.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="10.3" y="1491.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="13.3" y="1502.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="10.3" y="1475.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.3" y="1486.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="10.3" y="1459.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.3" y="1470.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="10.3" y="1443.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.3" y="1454.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="10.3" y="1427.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.3" y="1438.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (14 samples, 0.19%)</title><rect x="10.8" y="1555.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.8" y="1566.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (9 samples, 0.12%)</title><rect x="11.3" y="1539.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.3" y="1550.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (5 samples, 0.07%)</title><rect x="11.9" y="1523.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.9" y="1534.0"></text>
</g>
<g>
<title>Method::is_accessor() const (2 samples, 0.03%)</title><rect x="11.9" y="1507.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.9" y="1518.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="12.7" y="1539.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.7" y="1550.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.03%)</title><rect x="12.7" y="1523.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.7" y="1534.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.03%)</title><rect x="12.7" y="1507.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.7" y="1518.0"></text>
</g>
<g>
<title>[no_Java_frame] (17 samples, 0.23%)</title><rect x="13.5" y="1555.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.5" y="1566.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.11%)</title><rect x="16.2" y="1555.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.2" y="1566.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="16.2" y="1539.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.2" y="1550.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="16.2" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.2" y="1534.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (3 samples, 0.04%)</title><rect x="16.8" y="1539.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.8" y="1550.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.03%)</title><rect x="17.0" y="1523.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.0" y="1534.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.75%)</title><rect x="17.4" y="1555.0" width="8.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.4" y="1566.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="17.4" y="1539.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="20.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="17.9" y="1539.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.9" y="1550.0"></text>
</g>
<g>
<title>__fxstat64 (4 samples, 0.05%)</title><rect x="18.1" y="1523.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="21.1" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="18.1" y="1507.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.1" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="18.1" y="1491.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.1" y="1502.0"></text>
</g>
<g>
<title>sys_newfstat (3 samples, 0.04%)</title><rect x="18.2" y="1475.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.2" y="1486.0"></text>
</g>
<g>
<title>SYSC_newfstat (3 samples, 0.04%)</title><rect x="18.2" y="1459.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.2" y="1470.0"></text>
</g>
<g>
<title>vfs_statx_fd (2 samples, 0.03%)</title><rect x="18.4" y="1443.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="21.4" y="1454.0"></text>
</g>
<g>
<title>vfs_getattr (2 samples, 0.03%)</title><rect x="18.4" y="1427.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="21.4" y="1438.0"></text>
</g>
<g>
<title>vfs_getattr_nosec (2 samples, 0.03%)</title><rect x="18.4" y="1411.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.4" y="1422.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="19.0" y="1539.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.0" y="1550.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="19.0" y="1523.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.0" y="1534.0"></text>
</g>
<g>
<title>__close_nocancel (7 samples, 0.09%)</title><rect x="19.3" y="1539.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.3" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="19.5" y="1523.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.5" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="19.5" y="1507.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.5" y="1518.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.08%)</title><rect x="19.5" y="1491.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.5" y="1502.0"></text>
</g>
<g>
<title>task_work_run (6 samples, 0.08%)</title><rect x="19.5" y="1475.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.5" y="1486.0"></text>
</g>
<g>
<title>____fput (5 samples, 0.07%)</title><rect x="19.6" y="1459.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.6" y="1470.0"></text>
</g>
<g>
<title>__fput (4 samples, 0.05%)</title><rect x="19.6" y="1443.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.6" y="1454.0"></text>
</g>
<g>
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="19.8" y="1427.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="22.8" y="1438.0"></text>
</g>
<g>
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="19.8" y="1411.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.8" y="1422.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.09%)</title><rect x="20.4" y="1539.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.4" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.09%)</title><rect x="20.4" y="1523.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="23.4" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.09%)</title><rect x="20.4" y="1507.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.4" y="1518.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.08%)</title><rect x="20.6" y="1491.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.6" y="1502.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.08%)</title><rect x="20.6" y="1475.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.6" y="1486.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.08%)</title><rect x="20.6" y="1459.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.6" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.08%)</title><rect x="20.6" y="1443.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.6" y="1454.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.08%)</title><rect x="20.6" y="1427.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.6" y="1438.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.07%)</title><rect x="20.7" y="1411.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.7" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.07%)</title><rect x="20.7" y="1395.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.7" y="1406.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (3 samples, 0.04%)</title><rect x="22.0" y="1539.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="25.0" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="22.0" y="1523.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.0" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="22.0" y="1507.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="25.0" y="1518.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="22.0" y="1491.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.0" y="1502.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="22.0" y="1475.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.0" y="1486.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="22.0" y="1459.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.0" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="22.0" y="1443.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.0" y="1454.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="22.0" y="1427.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.0" y="1438.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="22.0" y="1411.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.0" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="22.0" y="1395.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.0" y="1406.0"></text>
</g>
<g>
<title>open64 (24 samples, 0.32%)</title><rect x="22.5" y="1539.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="25.5" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.32%)</title><rect x="22.5" y="1523.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.5" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.32%)</title><rect x="22.5" y="1507.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="25.5" y="1518.0"></text>
</g>
<g>
<title>sys_openat (24 samples, 0.32%)</title><rect x="22.5" y="1491.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.5" y="1502.0"></text>
</g>
<g>
<title>do_sys_open (24 samples, 0.32%)</title><rect x="22.5" y="1475.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="25.5" y="1486.0"></text>
</g>
<g>
<title>do_filp_open (21 samples, 0.28%)</title><rect x="22.5" y="1459.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.5" y="1470.0"></text>
</g>
<g>
<title>path_openat (21 samples, 0.28%)</title><rect x="22.5" y="1443.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.5" y="1454.0"></text>
</g>
<g>
<title>get_empty_filp (2 samples, 0.03%)</title><rect x="22.5" y="1427.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.5" y="1438.0"></text>
</g>
<g>
<title>link_path_walk (13 samples, 0.17%)</title><rect x="22.8" y="1427.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.8" y="1438.0"></text>
</g>
<g>
<title>inode_permission (3 samples, 0.04%)</title><rect x="23.0" y="1411.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="26.0" y="1422.0"></text>
</g>
<g>
<title>__inode_permission (3 samples, 0.04%)</title><rect x="23.0" y="1395.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.0" y="1406.0"></text>
</g>
<g>
<title>unlazy_walk (2 samples, 0.03%)</title><rect x="23.4" y="1411.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.4" y="1422.0"></text>
</g>
<g>
<title>walk_component (7 samples, 0.09%)</title><rect x="23.7" y="1411.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="26.7" y="1422.0"></text>
</g>
<g>
<title>dput (2 samples, 0.03%)</title><rect x="23.7" y="1395.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.7" y="1406.0"></text>
</g>
<g>
<title>lockref_put_return (2 samples, 0.03%)</title><rect x="23.7" y="1379.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="26.7" y="1390.0"></text>
</g>
<g>
<title>lookup_fast (5 samples, 0.07%)</title><rect x="24.1" y="1395.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.1" y="1406.0"></text>
</g>
<g>
<title>follow_managed (2 samples, 0.03%)</title><rect x="24.4" y="1379.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.4" y="1390.0"></text>
</g>
<g>
<title>lookup_mnt (2 samples, 0.03%)</title><rect x="24.4" y="1363.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.4" y="1374.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.03%)</title><rect x="24.9" y="1427.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.9" y="1438.0"></text>
</g>
<g>
<title>kernfs_dop_revalidate (2 samples, 0.03%)</title><rect x="24.9" y="1411.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.9" y="1422.0"></text>
</g>
<g>
<title>vfs_open (4 samples, 0.05%)</title><rect x="25.2" y="1427.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.2" y="1438.0"></text>
</g>
<g>
<title>do_dentry_open (4 samples, 0.05%)</title><rect x="25.2" y="1411.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.2" y="1422.0"></text>
</g>
<g>
<title>kernfs_fop_open (2 samples, 0.03%)</title><rect x="25.3" y="1395.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.3" y="1406.0"></text>
</g>
<g>
<title>get_unused_fd_flags (2 samples, 0.03%)</title><rect x="25.8" y="1459.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.8" y="1470.0"></text>
</g>
<g>
<title>__alloc_fd (2 samples, 0.03%)</title><rect x="25.8" y="1443.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.8" y="1454.0"></text>
</g>
<g>
<title>[unknown_Java] (86 samples, 1.15%)</title><rect x="26.3" y="1555.0" width="13.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="29.3" y="1566.0"></text>
</g>
<g>
<title>Interpreter (62 samples, 0.83%)</title><rect x="26.6" y="1539.0" width="9.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="29.6" y="1550.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="36.4" y="1539.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.4" y="1550.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (2 samples, 0.03%)</title><rect x="36.4" y="1523.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="36.9" y="1539.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="39.9" y="1550.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="36.9" y="1523.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.9" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="37.5" y="1539.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="40.5" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="37.5" y="1523.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.5" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="37.5" y="1507.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.5" y="1518.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (13 samples, 0.17%)</title><rect x="37.8" y="1539.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="40.8" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.19%)</title><rect x="40.0" y="1555.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.0" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.17%)</title><rect x="40.2" y="1539.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.2" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.16%)</title><rect x="40.2" y="1523.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.2" y="1534.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.16%)</title><rect x="40.2" y="1507.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.2" y="1518.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.15%)</title><rect x="40.3" y="1491.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.3" y="1502.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.13%)</title><rect x="40.5" y="1475.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.5" y="1486.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.13%)</title><rect x="40.5" y="1459.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.5" y="1470.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.11%)</title><rect x="40.8" y="1443.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.8" y="1454.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.11%)</title><rect x="40.8" y="1427.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.8" y="1438.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.11%)</title><rect x="40.8" y="1411.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.8" y="1422.0"></text>
</g>
<g>
<title>__vsnprintf_chk (3 samples, 0.04%)</title><rect x="42.2" y="1555.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="45.2" y="1566.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="42.2" y="1539.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="45.2" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (6 samples, 0.08%)</title><rect x="43.5" y="1555.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.5" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.08%)</title><rect x="43.5" y="1539.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.5" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.08%)</title><rect x="43.5" y="1523.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.5" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.07%)</title><rect x="43.7" y="1507.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.7" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.07%)</title><rect x="43.7" y="1491.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.7" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 0.07%)</title><rect x="43.7" y="1475.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.7" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (4 samples, 0.05%)</title><rect x="43.8" y="1459.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.8" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (4 samples, 0.05%)</title><rect x="43.8" y="1443.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (4 samples, 0.05%)</title><rect x="43.8" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.8" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (3 samples, 0.04%)</title><rect x="44.0" y="1411.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.0" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (3 samples, 0.04%)</title><rect x="44.0" y="1395.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.0" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (2 samples, 0.03%)</title><rect x="44.1" y="1379.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.1" y="1390.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.03%)</title><rect x="44.1" y="1363.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.1" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.03%)</title><rect x="44.1" y="1347.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.1" y="1358.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.03%)</title><rect x="44.1" y="1331.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.1" y="1342.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.03%)</title><rect x="44.1" y="1315.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.1" y="1326.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (2 samples, 0.03%)</title><rect x="44.1" y="1299.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.1" y="1310.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (2 samples, 0.03%)</title><rect x="44.1" y="1283.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.1" y="1294.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (2 samples, 0.03%)</title><rect x="44.1" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.1" y="1278.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (2 samples, 0.03%)</title><rect x="44.1" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.1" y="1262.0"></text>
</g>
<g>
<title>free (5 samples, 0.07%)</title><rect x="44.5" y="1555.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="47.5" y="1566.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main.main (104 samples, 1.39%)</title><rect x="45.2" y="1555.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.2" y="1566.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.main (104 samples, 1.39%)</title><rect x="45.2" y="1539.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.2" y="1550.0"></text>
</g>
<g>
<title>scala/App.main$ (104 samples, 1.39%)</title><rect x="45.2" y="1523.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.2" y="1534.0"></text>
</g>
<g>
<title>scala/App.main (104 samples, 1.39%)</title><rect x="45.2" y="1507.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.2" y="1518.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (103 samples, 1.38%)</title><rect x="45.2" y="1491.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (103 samples, 1.38%)</title><rect x="45.2" y="1475.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (103 samples, 1.38%)</title><rect x="45.2" y="1459.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.2" y="1470.0"></text>
</g>
<g>
<title>scala/App$$Lambda$1/874088044.apply (103 samples, 1.38%)</title><rect x="45.2" y="1443.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.2" y="1454.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1$adapted (103 samples, 1.38%)</title><rect x="45.2" y="1427.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.2" y="1438.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1 (103 samples, 1.38%)</title><rect x="45.2" y="1411.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.2" y="1422.0"></text>
</g>
<g>
<title>scala/runtime/AbstractFunction0.apply$mcV$sp (103 samples, 1.38%)</title><rect x="45.2" y="1395.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.2" y="1406.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp$ (103 samples, 1.38%)</title><rect x="45.2" y="1379.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.2" y="1390.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp (103 samples, 1.38%)</title><rect x="45.2" y="1363.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.2" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$delayedInit$body.apply (103 samples, 1.38%)</title><rect x="45.2" y="1347.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="1358.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.delayedEndpoint$io$bernhardt$akka$rapid$Main$1 (103 samples, 1.38%)</title><rect x="45.2" y="1331.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.2" y="1342.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.start (103 samples, 1.38%)</title><rect x="45.2" y="1315.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.2" y="1326.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.startClusterSystem (103 samples, 1.38%)</title><rect x="45.2" y="1299.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.2" y="1310.0"></text>
</g>
<g>
<title>scala/Option.map (101 samples, 1.35%)</title><rect x="45.6" y="1283.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.6" y="1294.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$692/913746983.apply (101 samples, 1.35%)</title><rect x="45.6" y="1267.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.6" y="1278.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$1 (101 samples, 1.35%)</title><rect x="45.6" y="1251.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (96 samples, 1.29%)</title><rect x="45.6" y="1235.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (96 samples, 1.29%)</title><rect x="45.6" y="1219.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (96 samples, 1.29%)</title><rect x="45.6" y="1203.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.&lt;init&gt; (32 samples, 0.43%)</title><rect x="45.6" y="1187.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$Settings.&lt;init&gt; (5 samples, 0.07%)</title><rect x="45.6" y="1171.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.6" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (5 samples, 0.07%)</title><rect x="45.6" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.6" y="1166.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (5 samples, 0.07%)</title><rect x="45.6" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.6" y="1150.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (5 samples, 0.07%)</title><rect x="45.6" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.6" y="1134.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (4 samples, 0.05%)</title><rect x="45.6" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.6" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (4 samples, 0.05%)</title><rect x="45.6" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.6" y="1102.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (2 samples, 0.03%)</title><rect x="45.6" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.6" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (2 samples, 0.03%)</title><rect x="45.6" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.6" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.entrySet (2 samples, 0.03%)</title><rect x="45.6" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="45.6" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="45.6" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="45.6" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.6" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.hashCode (2 samples, 0.03%)</title><rect x="45.6" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.6" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.hashCode (2 samples, 0.03%)</title><rect x="45.6" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mapHash (2 samples, 0.03%)</title><rect x="45.6" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.6" y="958.0"></text>
</g>
<g>
<title>java/util/Collections.sort (2 samples, 0.03%)</title><rect x="45.6" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.6" y="942.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.entrySet (2 samples, 0.03%)</title><rect x="45.9" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="45.9" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="45.9" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="45.9" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.9" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.hashCode (2 samples, 0.03%)</title><rect x="45.9" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.9" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.hashCode (2 samples, 0.03%)</title><rect x="45.9" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mapHash (2 samples, 0.03%)</title><rect x="45.9" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree1$1 (23 samples, 0.31%)</title><rect x="46.3" y="1171.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (23 samples, 0.31%)</title><rect x="46.3" y="1155.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.getClassFor (2 samples, 0.03%)</title><rect x="46.3" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.3" y="1150.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (2 samples, 0.03%)</title><rect x="46.3" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$82/1870209957.apply (2 samples, 0.03%)</title><rect x="46.3" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$getClassFor$1 (2 samples, 0.03%)</title><rect x="46.3" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.03%)</title><rect x="46.3" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (2 samples, 0.03%)</title><rect x="46.3" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="46.3" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="46.3" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="46.3" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="46.3" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="46.3" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="46.3" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.3" y="974.0"></text>
</g>
<g>
<title>scala/util/Success.flatMap (21 samples, 0.28%)</title><rect x="46.7" y="1139.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$83/2107543287.apply (21 samples, 0.28%)</title><rect x="46.7" y="1123.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$5 (21 samples, 0.28%)</title><rect x="46.7" y="1107.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (21 samples, 0.28%)</title><rect x="46.7" y="1091.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="1102.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (21 samples, 0.28%)</title><rect x="46.7" y="1075.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$84/252738640.apply (21 samples, 0.28%)</title><rect x="46.7" y="1059.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$1 (21 samples, 0.28%)</title><rect x="46.7" y="1043.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructor (4 samples, 0.05%)</title><rect x="46.7" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.05%)</title><rect x="46.7" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.05%)</title><rect x="46.7" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (4 samples, 0.05%)</title><rect x="46.7" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.7" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.04%)</title><rect x="46.8" y="963.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.04%)</title><rect x="46.8" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.04%)</title><rect x="46.8" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.04%)</title><rect x="46.8" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.04%)</title><rect x="46.8" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.04%)</title><rect x="46.8" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.8" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.04%)</title><rect x="46.8" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.8" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.04%)</title><rect x="46.8" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.04%)</title><rect x="46.8" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.8" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.03%)</title><rect x="46.8" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.8" y="830.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.03%)</title><rect x="46.8" y="803.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="49.8" y="814.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.03%)</title><rect x="46.8" y="787.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="49.8" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.03%)</title><rect x="46.8" y="771.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.8" y="782.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.03%)</title><rect x="46.8" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="49.8" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.03%)</title><rect x="46.8" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="49.8" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (2 samples, 0.03%)</title><rect x="46.8" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.8" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (17 samples, 0.23%)</title><rect x="47.3" y="1027.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (17 samples, 0.23%)</title><rect x="47.3" y="1011.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (17 samples, 0.23%)</title><rect x="47.3" y="995.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (17 samples, 0.23%)</title><rect x="47.3" y="979.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.3" y="990.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.&lt;init&gt; (17 samples, 0.23%)</title><rect x="47.3" y="963.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.3" y="974.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.&lt;init&gt; (17 samples, 0.23%)</title><rect x="47.3" y="947.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.3" y="958.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createDeployer (3 samples, 0.04%)</title><rect x="47.5" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.5" y="942.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createDeployer (3 samples, 0.04%)</title><rect x="47.5" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.5" y="926.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDeployer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="47.5" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.5" y="910.0"></text>
</g>
<g>
<title>akka/remote/RemoteDeployer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="47.5" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.5" y="894.0"></text>
</g>
<g>
<title>akka/actor/Deployer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="47.5" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.5" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.flatMap (2 samples, 0.03%)</title><rect x="47.5" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.5" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.flatMap$ (2 samples, 0.03%)</title><rect x="47.5" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.5" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.flatMap (2 samples, 0.03%)</title><rect x="47.5" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.5" y="830.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$Delegate.from (2 samples, 0.03%)</title><rect x="47.5" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.5" y="814.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer$.from (2 samples, 0.03%)</title><rect x="47.5" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.5" y="798.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer$.from (2 samples, 0.03%)</title><rect x="47.5" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.5" y="782.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.addAll (2 samples, 0.03%)</title><rect x="47.5" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.5" y="766.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuffer.addAll (2 samples, 0.03%)</title><rect x="47.5" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.5" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="47.5" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.5" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.03%)</title><rect x="47.5" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.5" y="718.0"></text>
</g>
<g>
<title>akka/remote/RemoteSettings.&lt;init&gt; (12 samples, 0.16%)</title><rect x="47.9" y="931.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.9" y="942.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$.apply (2 samples, 0.03%)</title><rect x="48.1" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (7 samples, 0.09%)</title><rect x="48.6" y="915.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (7 samples, 0.09%)</title><rect x="48.6" y="899.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (7 samples, 0.09%)</title><rect x="48.6" y="883.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (7 samples, 0.09%)</title><rect x="48.6" y="867.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (7 samples, 0.09%)</title><rect x="48.6" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (7 samples, 0.09%)</title><rect x="48.6" y="835.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="48.6" y="819.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (7 samples, 0.09%)</title><rect x="48.6" y="803.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (7 samples, 0.09%)</title><rect x="48.6" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (5 samples, 0.07%)</title><rect x="48.6" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (3 samples, 0.04%)</title><rect x="48.7" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (3 samples, 0.04%)</title><rect x="48.7" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.7" y="750.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (3 samples, 0.04%)</title><rect x="48.7" y="723.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="51.7" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (3 samples, 0.04%)</title><rect x="48.7" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (2 samples, 0.03%)</title><rect x="48.7" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="51.7" y="702.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (2 samples, 0.03%)</title><rect x="48.7" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="51.7" y="686.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.getObjectFor (2 samples, 0.03%)</title><rect x="50.0" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.getClassFor (2 samples, 0.03%)</title><rect x="50.0" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="1166.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (2 samples, 0.03%)</title><rect x="50.0" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$82/1870209957.apply (2 samples, 0.03%)</title><rect x="50.0" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$getClassFor$1 (2 samples, 0.03%)</title><rect x="50.0" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.03%)</title><rect x="50.0" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (2 samples, 0.03%)</title><rect x="50.0" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="50.0" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="50.0" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="50.0" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="50.0" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="50.0" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.03%)</title><rect x="50.0" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (2 samples, 0.03%)</title><rect x="50.0" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.0" y="974.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (2 samples, 0.03%)</title><rect x="50.0" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.0" y="958.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (2 samples, 0.03%)</title><rect x="50.0" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="942.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (2 samples, 0.03%)</title><rect x="50.0" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (2 samples, 0.03%)</title><rect x="50.0" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="910.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (2 samples, 0.03%)</title><rect x="50.0" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.0" y="894.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.start (64 samples, 0.86%)</title><rect x="50.6" y="1187.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start (64 samples, 0.86%)</title><rect x="50.6" y="1171.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start$lzycompute (64 samples, 0.86%)</title><rect x="50.6" y="1155.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree2$1 (64 samples, 0.86%)</title><rect x="50.6" y="1139.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.6" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.init (60 samples, 0.80%)</title><rect x="50.6" y="1123.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.6" y="1134.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.init (60 samples, 0.80%)</title><rect x="50.6" y="1107.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.6" y="1118.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.createOrNone (23 samples, 0.31%)</title><rect x="51.2" y="1091.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.2" y="1102.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$$Lambda$846/2024945312.apply (22 samples, 0.29%)</title><rect x="51.2" y="1075.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.2" y="1086.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.$anonfun$init$1 (22 samples, 0.29%)</title><rect x="51.2" y="1059.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.2" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createRemoteWatcher (22 samples, 0.29%)</title><rect x="51.2" y="1043.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.2" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.apply (22 samples, 0.29%)</title><rect x="51.2" y="1027.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (22 samples, 0.29%)</title><rect x="51.2" y="1011.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (22 samples, 0.29%)</title><rect x="51.2" y="995.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (22 samples, 0.29%)</title><rect x="51.2" y="979.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.2" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (22 samples, 0.29%)</title><rect x="51.2" y="963.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.2" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (22 samples, 0.29%)</title><rect x="51.2" y="947.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.2" y="958.0"></text>
</g>
<g>
<title>akka/cluster/Cluster.&lt;init&gt; (22 samples, 0.29%)</title><rect x="51.2" y="931.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.2" y="942.0"></text>
</g>
<g>
<title>akka/cluster/ClusterJmx.&lt;init&gt; (17 samples, 0.23%)</title><rect x="51.2" y="915.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.2" y="926.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getPlatformMBeanServer (17 samples, 0.23%)</title><rect x="51.2" y="899.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (15 samples, 0.20%)</title><rect x="51.4" y="883.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.20%)</title><rect x="51.4" y="867.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (15 samples, 0.20%)</title><rect x="51.4" y="851.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (15 samples, 0.20%)</title><rect x="51.4" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (15 samples, 0.20%)</title><rect x="51.4" y="819.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.20%)</title><rect x="51.4" y="803.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (15 samples, 0.20%)</title><rect x="51.4" y="787.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (15 samples, 0.20%)</title><rect x="51.4" y="771.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (15 samples, 0.20%)</title><rect x="51.4" y="755.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.4" y="766.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$904/1101451553.apply (7 samples, 0.09%)</title><rect x="51.4" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.4" y="750.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$getPlatformMBeanServer$0 (7 samples, 0.09%)</title><rect x="51.4" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.4" y="734.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider$5.nameToMBeanMap (2 samples, 0.03%)</title><rect x="51.7" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.03%)</title><rect x="51.7" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="51.7" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.03%)</title><rect x="51.7" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="51.7" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="51.7" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="51.7" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.03%)</title><rect x="51.7" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.forEach (8 samples, 0.11%)</title><rect x="52.5" y="739.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.5" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$2.forEachRemaining (7 samples, 0.09%)</title><rect x="52.5" y="723.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$2.tryAdvance (7 samples, 0.09%)</title><rect x="52.5" y="707.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (7 samples, 0.09%)</title><rect x="52.5" y="691.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.5" y="702.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$905/1329897103.accept (7 samples, 0.09%)</title><rect x="52.5" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.5" y="686.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$getPlatformMBeanServer$1 (7 samples, 0.09%)</title><rect x="52.5" y="659.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.5" y="670.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.addMXBean (7 samples, 0.09%)</title><rect x="52.5" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.5" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.09%)</title><rect x="52.5" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="638.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$906/1923810797.run (7 samples, 0.09%)</title><rect x="52.5" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.5" y="622.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$addMXBean$7 (7 samples, 0.09%)</title><rect x="52.5" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.5" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.registerMBean (2 samples, 0.03%)</title><rect x="52.5" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.5" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.registerMBean (2 samples, 0.03%)</title><rect x="52.5" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.5" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getNewMBeanClassName (2 samples, 0.03%)</title><rect x="52.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.5" y="558.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.&lt;init&gt; (4 samples, 0.05%)</title><rect x="53.0" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.0" y="590.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.construct (4 samples, 0.05%)</title><rect x="53.0" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.0" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanSupport.&lt;init&gt; (4 samples, 0.05%)</title><rect x="53.0" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.0" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.&lt;init&gt; (4 samples, 0.05%)</title><rect x="53.0" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.0" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.getPerInterface (3 samples, 0.04%)</title><rect x="53.0" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.0" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.getAnalyzer (2 samples, 0.03%)</title><rect x="53.1" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.1" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.analyzer (2 samples, 0.03%)</title><rect x="53.1" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.1" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="53.1" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.1" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.initMaps (2 samples, 0.03%)</title><rect x="53.1" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.1" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (2 samples, 0.03%)</title><rect x="53.1" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.1" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (2 samples, 0.03%)</title><rect x="53.1" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.1" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.from (2 samples, 0.03%)</title><rect x="53.1" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.1" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.&lt;init&gt; (2 samples, 0.03%)</title><rect x="53.1" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.1" y="398.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView.&lt;init&gt; (2 samples, 0.03%)</title><rect x="54.1" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.1" y="926.0"></text>
</g>
<g>
<title>akka/remote/RemoteSettings.configureDispatcher (3 samples, 0.04%)</title><rect x="54.9" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.9" y="1102.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Advanced (3 samples, 0.04%)</title><rect x="54.9" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.9" y="1086.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Advanced$lzycompute$1 (3 samples, 0.04%)</title><rect x="54.9" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="1070.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$Advanced$.&lt;init&gt; (3 samples, 0.04%)</title><rect x="54.9" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (2 samples, 0.03%)</title><rect x="55.0" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (2 samples, 0.03%)</title><rect x="55.0" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (2 samples, 0.03%)</title><rect x="55.0" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (2 samples, 0.03%)</title><rect x="55.0" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (2 samples, 0.03%)</title><rect x="55.0" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (2 samples, 0.03%)</title><rect x="55.0" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="55.0" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (2 samples, 0.03%)</title><rect x="55.0" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (2 samples, 0.03%)</title><rect x="55.0" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.0" y="910.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.start (20 samples, 0.27%)</title><rect x="55.5" y="1091.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.5" y="1102.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.bindInboundStreams (3 samples, 0.04%)</title><rect x="55.5" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.5" y="1086.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundStreams (17 samples, 0.23%)</title><rect x="56.0" y="1075.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.0" y="1086.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundControlStream (7 samples, 0.09%)</title><rect x="56.0" y="1059.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (4 samples, 0.05%)</title><rect x="56.5" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (4 samples, 0.05%)</title><rect x="56.5" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (4 samples, 0.05%)</title><rect x="56.5" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (4 samples, 0.05%)</title><rect x="56.5" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (3 samples, 0.04%)</title><rect x="56.5" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (3 samples, 0.04%)</title><rect x="56.5" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.5" y="974.0"></text>
</g>
<g>
<title>akka/remote/artery/Decoder.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="56.5" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.5" y="958.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundOrdinaryMessagesStream (7 samples, 0.09%)</title><rect x="57.1" y="1059.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (3 samples, 0.04%)</title><rect x="57.1" y="1043.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.04%)</title><rect x="57.1" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.04%)</title><rect x="57.1" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.04%)</title><rect x="57.1" y="995.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (2 samples, 0.03%)</title><rect x="57.1" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="57.1" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/PartitionHub.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="57.1" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (2 samples, 0.03%)</title><rect x="57.7" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (2 samples, 0.03%)</title><rect x="57.7" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (2 samples, 0.03%)</title><rect x="57.7" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (2 samples, 0.03%)</title><rect x="57.7" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (2 samples, 0.03%)</title><rect x="57.7" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (2 samples, 0.03%)</title><rect x="57.7" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="57.7" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (2 samples, 0.03%)</title><rect x="57.7" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (2 samples, 0.03%)</title><rect x="57.7" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.7" y="926.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.&lt;init&gt; (8 samples, 0.11%)</title><rect x="58.7" y="1091.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.7" y="1102.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.&lt;init&gt; (8 samples, 0.11%)</title><rect x="58.7" y="1075.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.7" y="1086.0"></text>
</g>
<g>
<title>akka/remote/artery/compress/InboundCompressionsImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="58.8" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/KillSwitches$.shared (3 samples, 0.04%)</title><rect x="59.1" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/SharedKillSwitch.&lt;init&gt; (3 samples, 0.04%)</title><rect x="59.1" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/TerminationSignal.&lt;init&gt; (3 samples, 0.04%)</title><rect x="59.1" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/concurrent/TrieMap$.empty (2 samples, 0.03%)</title><rect x="59.3" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/concurrent/TrieMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="59.3" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.3" y="1006.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.apply (4 samples, 0.05%)</title><rect x="60.1" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (4 samples, 0.05%)</title><rect x="60.1" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (4 samples, 0.05%)</title><rect x="60.1" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (4 samples, 0.05%)</title><rect x="60.1" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.1" y="1086.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.createExtension (4 samples, 0.05%)</title><rect x="60.1" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.1" y="1070.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.createExtension (4 samples, 0.05%)</title><rect x="60.1" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.1" y="1054.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo.&lt;init&gt; (4 samples, 0.05%)</title><rect x="60.1" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.1" y="1038.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo.liftedTree2$1 (4 samples, 0.05%)</title><rect x="60.1" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.03%)</title><rect x="60.1" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (2 samples, 0.03%)</title><rect x="60.1" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="990.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (2 samples, 0.03%)</title><rect x="60.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.1" y="974.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.1" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.1" y="958.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.1" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.1" y="942.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (2 samples, 0.03%)</title><rect x="60.1" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.1" y="926.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.1" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.1" y="910.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.1" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.1" y="894.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.1" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.1" y="878.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.4" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.4" y="1006.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.&lt;init&gt; (2 samples, 0.03%)</title><rect x="60.4" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.4" y="990.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.read (2 samples, 0.03%)</title><rect x="60.4" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.4" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (5 samples, 0.07%)</title><rect x="60.7" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.7" y="1246.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (5 samples, 0.07%)</title><rect x="60.7" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.7" y="1230.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl.computeCachedConfig (5 samples, 0.07%)</title><rect x="60.7" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="1214.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl$LoaderCache.getOrElseUpdate (5 samples, 0.07%)</title><rect x="60.7" y="1187.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.7" y="1198.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory$1.call (5 samples, 0.07%)</title><rect x="60.7" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.7" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory$1.call (5 samples, 0.07%)</title><rect x="60.7" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.7" y="1166.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.defaultApplication (2 samples, 0.03%)</title><rect x="60.7" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.7" y="1150.0"></text>
</g>
<g>
<title>com/typesafe/config/DefaultConfigLoadingStrategy.parseApplicationConfig (2 samples, 0.03%)</title><rect x="60.7" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.7" y="1134.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.parseResourcesAnySyntax (2 samples, 0.03%)</title><rect x="60.7" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl.parseResourcesAnySyntax (2 samples, 0.03%)</title><rect x="60.7" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="1102.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleIncluder.fromBasename (2 samples, 0.03%)</title><rect x="60.7" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.7" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parse (2 samples, 0.03%)</title><rect x="60.7" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.7" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable$ParseableResources.rawParseValue (2 samples, 0.03%)</title><rect x="60.7" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable$ParseableResources.rawParseValue (2 samples, 0.03%)</title><rect x="60.7" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.7" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.7" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.7" y="958.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (2 samples, 0.03%)</title><rect x="60.7" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.7" y="942.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (2 samples, 0.03%)</title><rect x="60.7" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.7" y="926.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser.parse (2 samples, 0.03%)</title><rect x="60.7" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.7" y="910.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parse (2 samples, 0.03%)</title><rect x="60.7" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="894.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (2 samples, 0.03%)</title><rect x="60.7" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.7" y="878.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.7" y="862.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (2 samples, 0.03%)</title><rect x="60.7" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.7" y="846.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.7" y="830.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (2 samples, 0.03%)</title><rect x="60.7" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.7" y="814.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseValue (2 samples, 0.03%)</title><rect x="60.7" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.7" y="798.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (2 samples, 0.03%)</title><rect x="60.7" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="782.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (3 samples, 0.04%)</title><rect x="61.0" y="1139.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.0" y="1150.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (3 samples, 0.04%)</title><rect x="61.0" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="1134.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (3 samples, 0.04%)</title><rect x="61.0" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.0" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (3 samples, 0.04%)</title><rect x="61.0" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.0" y="1102.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolveWith (3 samples, 0.04%)</title><rect x="61.0" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.0" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.0" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.04%)</title><rect x="61.0" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.0" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.04%)</title><rect x="61.0" y="1011.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.0" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.0" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.0" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.04%)</title><rect x="61.0" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.0" y="958.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.04%)</title><rect x="61.0" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.0" y="942.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.0" y="926.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.0" y="910.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.0" y="894.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.04%)</title><rect x="61.0" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.0" y="878.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.04%)</title><rect x="61.0" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.0" y="862.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.0" y="846.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="830.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.0" y="814.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.04%)</title><rect x="61.0" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.0" y="798.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.04%)</title><rect x="61.0" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="782.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.0" y="766.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.0" y="750.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.0" y="734.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.04%)</title><rect x="61.0" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="718.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.04%)</title><rect x="61.0" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.0" y="702.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.0" y="686.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.04%)</title><rect x="61.0" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.0" y="670.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.04%)</title><rect x="61.0" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (498 samples, 6.67%)</title><rect x="61.7" y="1555.0" width="78.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.7" y="1566.0">java/lang..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (49 samples, 0.66%)</title><rect x="61.7" y="1539.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.7" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (49 samples, 0.66%)</title><rect x="61.7" y="1523.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.7" y="1534.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (8 samples, 0.11%)</title><rect x="61.8" y="1507.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.8" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (5 samples, 0.07%)</title><rect x="62.3" y="1491.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.3" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (23 samples, 0.31%)</title><rect x="63.1" y="1507.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.1" y="1518.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (19 samples, 0.25%)</title><rect x="63.7" y="1491.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.7" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (18 samples, 0.24%)</title><rect x="63.9" y="1475.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (18 samples, 0.24%)</title><rect x="63.9" y="1459.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.9" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (18 samples, 0.24%)</title><rect x="63.9" y="1443.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.batchable (3 samples, 0.04%)</title><rect x="64.0" y="1427.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.batchable$ (2 samples, 0.03%)</title><rect x="64.2" y="1411.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.batchable (2 samples, 0.03%)</title><rect x="64.2" y="1395.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.2" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (14 samples, 0.19%)</title><rect x="64.5" y="1427.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (12 samples, 0.16%)</title><rect x="64.7" y="1411.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.16%)</title><rect x="64.7" y="1395.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.7" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.16%)</title><rect x="64.7" y="1379.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.7" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.16%)</title><rect x="64.7" y="1363.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.7" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.16%)</title><rect x="64.7" y="1347.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.16%)</title><rect x="64.7" y="1331.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.16%)</title><rect x="64.7" y="1315.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (12 samples, 0.16%)</title><rect x="64.7" y="1299.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.16%)</title><rect x="64.7" y="1283.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.16%)</title><rect x="64.7" y="1267.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.16%)</title><rect x="64.7" y="1251.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.7" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="64.7" y="1235.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.7" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="64.8" y="1219.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="67.8" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.09%)</title><rect x="65.5" y="1235.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="68.5" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="65.6" y="1219.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.6" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="65.6" y="1203.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="68.6" y="1214.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="65.8" y="1187.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="68.8" y="1198.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="65.8" y="1171.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.8" y="1182.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="65.8" y="1155.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.8" y="1166.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.05%)</title><rect x="65.9" y="1139.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.9" y="1150.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.05%)</title><rect x="65.9" y="1123.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.9" y="1134.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="65.9" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="68.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (16 samples, 0.21%)</title><rect x="66.7" y="1507.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (16 samples, 0.21%)</title><rect x="66.7" y="1491.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.7" y="1502.0"></text>
</g>
<g>
<title>JVM_Sleep (9 samples, 0.12%)</title><rect x="66.9" y="1475.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="69.9" y="1486.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="67.2" y="1459.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="70.2" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="67.2" y="1443.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.2" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="67.2" y="1427.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.2" y="1438.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (2 samples, 0.03%)</title><rect x="67.5" y="1459.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="70.5" y="1470.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="68.0" y="1459.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="71.0" y="1470.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.07%)</title><rect x="68.5" y="1475.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="71.5" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="68.6" y="1459.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="71.6" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="68.6" y="1443.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.6" y="1454.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="68.6" y="1427.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="71.6" y="1438.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="68.6" y="1411.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.6" y="1422.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="68.6" y="1395.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.6" y="1406.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="68.9" y="1379.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (449 samples, 6.01%)</title><rect x="69.4" y="1539.0" width="71.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.4" y="1550.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (449 samples, 6.01%)</title><rect x="69.4" y="1523.0" width="71.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.4" y="1534.0">java/uti..</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (106 samples, 1.42%)</title><rect x="70.1" y="1507.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.1" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.04%)</title><rect x="70.1" y="1491.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="70.1" y="1475.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.04%)</title><rect x="70.1" y="1459.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="70.1" y="1443.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="70.1" y="1427.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="70.2" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.03%)</title><rect x="70.2" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.2" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (102 samples, 1.37%)</title><rect x="70.5" y="1491.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.5" y="1502.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (102 samples, 1.37%)</title><rect x="70.5" y="1475.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.5" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (102 samples, 1.37%)</title><rect x="70.5" y="1459.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.5" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (102 samples, 1.37%)</title><rect x="70.5" y="1443.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (102 samples, 1.37%)</title><rect x="70.5" y="1427.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (102 samples, 1.37%)</title><rect x="70.5" y="1411.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (102 samples, 1.37%)</title><rect x="70.5" y="1395.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="71.2" y="1379.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="71.2" y="1363.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="71.2" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="71.2" y="1331.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="71.2" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="71.2" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="71.2" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="71.2" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="71.2" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="71.2" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="71.2" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="71.2" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="71.2" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="71.2" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="71.2" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="71.2" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="71.2" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="71.2" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="71.2" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.2" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="71.2" y="1075.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="74.2" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="71.2" y="1059.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="71.2" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.2" y="1054.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="71.2" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.2" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="71.2" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.2" y="1022.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="71.2" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.2" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="71.2" y="979.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.2" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="71.2" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="74.2" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="71.2" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.2" y="958.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.akka$io$InetAddressDnsResolver$$addressToRecords (2 samples, 0.03%)</title><rect x="71.5" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.collect (2 samples, 0.03%)</title><rect x="71.5" y="1363.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.collect (2 samples, 0.03%)</title><rect x="71.5" y="1347.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$akka$io$InetAddressDnsResolver$$addressToRecords$1.applyOrElse (2 samples, 0.03%)</title><rect x="71.5" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.5" y="1342.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$akka$io$InetAddressDnsResolver$$addressToRecords$1.applyOrElse (2 samples, 0.03%)</title><rect x="71.5" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.5" y="1326.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.put (9 samples, 0.12%)</title><rect x="71.9" y="1379.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.put (9 samples, 0.12%)</title><rect x="71.9" y="1363.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (4 samples, 0.05%)</title><rect x="72.1" y="1347.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (4 samples, 0.05%)</title><rect x="72.1" y="1331.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (4 samples, 0.05%)</title><rect x="72.1" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.05%)</title><rect x="72.1" y="1299.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.05%)</title><rect x="72.1" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="72.1" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (4 samples, 0.05%)</title><rect x="72.7" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (4 samples, 0.05%)</title><rect x="72.7" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (4 samples, 0.05%)</title><rect x="72.7" y="1315.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (3 samples, 0.04%)</title><rect x="72.9" y="1299.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (3 samples, 0.04%)</title><rect x="72.9" y="1283.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="72.9" y="1267.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1251.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1219.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1203.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1187.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="72.9" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="72.9" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="72.9" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="72.9" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="72.9" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="72.9" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="1070.0"></text>
</g>
<g>
<title>akka/io/dns/DnsProtocol$Resolved$.apply (2 samples, 0.03%)</title><rect x="73.4" y="1379.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.4" y="1390.0"></text>
</g>
<g>
<title>akka/io/dns/DnsProtocol$Resolved.&lt;init&gt; (2 samples, 0.03%)</title><rect x="73.4" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (80 samples, 1.07%)</title><rect x="73.8" y="1379.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.8" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (79 samples, 1.06%)</title><rect x="74.0" y="1363.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.0" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (79 samples, 1.06%)</title><rect x="74.0" y="1347.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.0" y="1358.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (77 samples, 1.03%)</title><rect x="74.0" y="1331.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.0" y="1342.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (76 samples, 1.02%)</title><rect x="74.0" y="1315.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.0" y="1326.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (76 samples, 1.02%)</title><rect x="74.0" y="1299.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.0" y="1310.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (76 samples, 1.02%)</title><rect x="74.0" y="1283.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.0" y="1294.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (13 samples, 0.17%)</title><rect x="74.5" y="1267.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="77.5" y="1278.0"></text>
</g>
<g>
<title>getaddrinfo (4 samples, 0.05%)</title><rect x="74.6" y="1251.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="77.6" y="1262.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="74.8" y="1235.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="77.8" y="1246.0"></text>
</g>
<g>
<title>tsearch (2 samples, 0.03%)</title><rect x="74.8" y="1219.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="77.8" y="1230.0"></text>
</g>
<g>
<title>jni_NewObject (5 samples, 0.07%)</title><rect x="75.6" y="1251.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="78.6" y="1262.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (3 samples, 0.04%)</title><rect x="75.9" y="1235.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="78.9" y="1246.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="75.9" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="78.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.58%)</title><rect x="76.5" y="1267.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="79.5" y="1278.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="76.5" y="1251.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="79.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="77.5" y="1251.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="80.5" y="1262.0"></text>
</g>
<g>
<title>__res_context_search (2 samples, 0.03%)</title><rect x="77.5" y="1235.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="80.5" y="1246.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libresolv-2.27.so (2 samples, 0.03%)</title><rect x="77.5" y="1219.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="80.5" y="1230.0"></text>
</g>
<g>
<title>__xstat64 (6 samples, 0.08%)</title><rect x="77.8" y="1235.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="80.8" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="77.8" y="1219.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.8" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="77.8" y="1203.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.8" y="1214.0"></text>
</g>
<g>
<title>sys_newstat (6 samples, 0.08%)</title><rect x="77.8" y="1187.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.8" y="1198.0"></text>
</g>
<g>
<title>SYSC_newstat (6 samples, 0.08%)</title><rect x="77.8" y="1171.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.8" y="1182.0"></text>
</g>
<g>
<title>vfs_statx (6 samples, 0.08%)</title><rect x="77.8" y="1155.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.8" y="1166.0"></text>
</g>
<g>
<title>user_path_at_empty (5 samples, 0.07%)</title><rect x="77.8" y="1139.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.8" y="1150.0"></text>
</g>
<g>
<title>filename_lookup (4 samples, 0.05%)</title><rect x="77.8" y="1123.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="80.8" y="1134.0"></text>
</g>
<g>
<title>path_lookupat (3 samples, 0.04%)</title><rect x="78.0" y="1107.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="81.0" y="1118.0"></text>
</g>
<g>
<title>__connect (2 samples, 0.03%)</title><rect x="78.7" y="1251.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="81.7" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="78.7" y="1235.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.7" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="78.7" y="1219.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.7" y="1230.0"></text>
</g>
<g>
<title>sys_connect (2 samples, 0.03%)</title><rect x="78.7" y="1203.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.7" y="1214.0"></text>
</g>
<g>
<title>SYSC_connect (2 samples, 0.03%)</title><rect x="78.7" y="1187.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.7" y="1198.0"></text>
</g>
<g>
<title>inet_dgram_connect (2 samples, 0.03%)</title><rect x="78.7" y="1171.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.7" y="1182.0"></text>
</g>
<g>
<title>__open_nocancel (3 samples, 0.04%)</title><rect x="79.1" y="1251.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="82.1" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="79.1" y="1235.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.1" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="79.1" y="1219.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.1" y="1230.0"></text>
</g>
<g>
<title>sys_openat (3 samples, 0.04%)</title><rect x="79.1" y="1203.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.1" y="1214.0"></text>
</g>
<g>
<title>do_sys_open (3 samples, 0.04%)</title><rect x="79.1" y="1187.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.1" y="1198.0"></text>
</g>
<g>
<title>do_filp_open (3 samples, 0.04%)</title><rect x="79.1" y="1171.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.1" y="1182.0"></text>
</g>
<g>
<title>path_openat (3 samples, 0.04%)</title><rect x="79.1" y="1155.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.1" y="1166.0"></text>
</g>
<g>
<title>get_empty_filp (2 samples, 0.03%)</title><rect x="79.1" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="82.1" y="1150.0"></text>
</g>
<g>
<title>__sendmmsg (20 samples, 0.27%)</title><rect x="79.5" y="1251.0" width="3.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="82.5" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.25%)</title><rect x="79.7" y="1235.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.7" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.25%)</title><rect x="79.7" y="1219.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.7" y="1230.0"></text>
</g>
<g>
<title>sys_sendmmsg (19 samples, 0.25%)</title><rect x="79.7" y="1203.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.7" y="1214.0"></text>
</g>
<g>
<title>__sys_sendmmsg (19 samples, 0.25%)</title><rect x="79.7" y="1187.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.7" y="1198.0"></text>
</g>
<g>
<title>___sys_sendmsg (14 samples, 0.19%)</title><rect x="79.8" y="1171.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.8" y="1182.0"></text>
</g>
<g>
<title>sock_sendmsg (14 samples, 0.19%)</title><rect x="79.8" y="1155.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.8" y="1166.0"></text>
</g>
<g>
<title>inet_sendmsg (13 samples, 0.17%)</title><rect x="79.8" y="1139.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="82.8" y="1150.0"></text>
</g>
<g>
<title>udp_sendmsg (13 samples, 0.17%)</title><rect x="79.8" y="1123.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.8" y="1134.0"></text>
</g>
<g>
<title>ip_make_skb (2 samples, 0.03%)</title><rect x="80.0" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.0" y="1118.0"></text>
</g>
<g>
<title>udp_send_skb (10 samples, 0.13%)</title><rect x="80.3" y="1107.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.3" y="1118.0"></text>
</g>
<g>
<title>ip_send_skb (10 samples, 0.13%)</title><rect x="80.3" y="1091.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.3" y="1102.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.13%)</title><rect x="80.3" y="1075.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.3" y="1086.0"></text>
</g>
<g>
<title>ip_output (10 samples, 0.13%)</title><rect x="80.3" y="1059.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.3" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 0.13%)</title><rect x="80.3" y="1043.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.3" y="1054.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 0.12%)</title><rect x="80.5" y="1027.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.5" y="1038.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.08%)</title><rect x="80.5" y="1011.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="83.5" y="1022.0"></text>
</g>
<g>
<title>do_softirq.part.17 (6 samples, 0.08%)</title><rect x="80.5" y="995.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.5" y="1006.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.08%)</title><rect x="80.5" y="979.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.5" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.08%)</title><rect x="80.5" y="963.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.5" y="974.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.08%)</title><rect x="80.5" y="947.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.5" y="958.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.08%)</title><rect x="80.5" y="931.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.5" y="942.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 0.08%)</title><rect x="80.5" y="915.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.5" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.08%)</title><rect x="80.5" y="899.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.5" y="910.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.07%)</title><rect x="80.6" y="883.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="83.6" y="894.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.07%)</title><rect x="80.6" y="867.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="83.6" y="878.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.07%)</title><rect x="80.6" y="851.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.6" y="862.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.07%)</title><rect x="80.6" y="835.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.6" y="846.0"></text>
</g>
<g>
<title>udp_rcv (4 samples, 0.05%)</title><rect x="80.8" y="819.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.8" y="830.0"></text>
</g>
<g>
<title>__udp4_lib_rcv (4 samples, 0.05%)</title><rect x="80.8" y="803.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.8" y="814.0"></text>
</g>
<g>
<title>udp_unicast_rcv_skb (3 samples, 0.04%)</title><rect x="81.0" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.0" y="798.0"></text>
</g>
<g>
<title>udp_queue_rcv_skb (3 samples, 0.04%)</title><rect x="81.0" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="84.0" y="782.0"></text>
</g>
<g>
<title>__udp_enqueue_schedule_skb (3 samples, 0.04%)</title><rect x="81.0" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="84.0" y="766.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.04%)</title><rect x="81.0" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="84.0" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="81.0" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="84.0" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.04%)</title><rect x="81.0" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="81.0" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.0" y="702.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="81.4" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="84.4" y="1022.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="81.4" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.4" y="1006.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.04%)</title><rect x="81.4" y="979.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="84.4" y="990.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="81.4" y="963.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="84.4" y="974.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="81.4" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.4" y="958.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="81.4" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.4" y="942.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.05%)</title><rect x="82.1" y="1171.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.1" y="1182.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.05%)</title><rect x="82.1" y="1155.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.1" y="1166.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="82.1" y="1139.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="85.1" y="1150.0"></text>
</g>
<g>
<title>ioctl (4 samples, 0.05%)</title><rect x="82.7" y="1251.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.7" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="82.9" y="1235.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.9" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="82.9" y="1219.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.9" y="1230.0"></text>
</g>
<g>
<title>sys_ioctl (2 samples, 0.03%)</title><rect x="83.0" y="1203.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.0" y="1214.0"></text>
</g>
<g>
<title>poll (5 samples, 0.07%)</title><rect x="84.3" y="1267.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="87.3" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="84.3" y="1251.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.3" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="84.3" y="1235.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.3" y="1246.0"></text>
</g>
<g>
<title>sys_poll (5 samples, 0.07%)</title><rect x="84.3" y="1219.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.3" y="1230.0"></text>
</g>
<g>
<title>do_sys_poll (5 samples, 0.07%)</title><rect x="84.3" y="1203.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.3" y="1214.0"></text>
</g>
<g>
<title>poll_schedule_timeout (2 samples, 0.03%)</title><rect x="84.7" y="1187.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="87.7" y="1198.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="84.7" y="1171.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.7" y="1182.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="84.7" y="1155.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.7" y="1166.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="84.7" y="1139.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.7" y="1150.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="84.7" y="1123.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="87.7" y="1134.0"></text>
</g>
<g>
<title>socket (5 samples, 0.07%)</title><rect x="85.2" y="1267.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="88.2" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="85.2" y="1251.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.2" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="85.2" y="1235.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.2" y="1246.0"></text>
</g>
<g>
<title>sys_socket (5 samples, 0.07%)</title><rect x="85.2" y="1219.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.2" y="1230.0"></text>
</g>
<g>
<title>__sock_create (5 samples, 0.07%)</title><rect x="85.2" y="1203.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.2" y="1214.0"></text>
</g>
<g>
<title>inet_create (2 samples, 0.03%)</title><rect x="85.2" y="1187.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.2" y="1198.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.03%)</title><rect x="85.2" y="1171.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.2" y="1182.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.03%)</title><rect x="85.5" y="1187.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.5" y="1198.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.03%)</title><rect x="85.5" y="1171.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.5" y="1182.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.03%)</title><rect x="85.5" y="1155.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.5" y="1166.0"></text>
</g>
<g>
<title>sock_alloc_inode (2 samples, 0.03%)</title><rect x="85.5" y="1139.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="88.5" y="1150.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="85.5" y="1123.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.remove (2 samples, 0.03%)</title><rect x="86.2" y="1331.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.remove (2 samples, 0.03%)</title><rect x="86.2" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doRemove (2 samples, 0.03%)</title><rect x="86.2" y="1299.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (236 samples, 3.16%)</title><rect x="86.8" y="1507.0" width="37.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="1518.0">akk..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (236 samples, 3.16%)</title><rect x="86.8" y="1491.0" width="37.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.8" y="1502.0">akk..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (236 samples, 3.16%)</title><rect x="86.8" y="1475.0" width="37.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.8" y="1486.0">akk..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="88.2" y="1459.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.poll (3 samples, 0.04%)</title><rect x="88.5" y="1459.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (2 samples, 0.03%)</title><rect x="88.7" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (189 samples, 2.53%)</title><rect x="89.0" y="1459.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.0" y="1470.0">ak..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (184 samples, 2.46%)</title><rect x="89.3" y="1443.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.3" y="1454.0">ak..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (184 samples, 2.46%)</title><rect x="89.3" y="1427.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.3" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (22 samples, 0.29%)</title><rect x="90.0" y="1411.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (22 samples, 0.29%)</title><rect x="90.0" y="1395.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (22 samples, 0.29%)</title><rect x="90.0" y="1379.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (22 samples, 0.29%)</title><rect x="90.0" y="1363.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (20 samples, 0.27%)</title><rect x="90.1" y="1347.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (20 samples, 0.27%)</title><rect x="90.1" y="1331.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (19 samples, 0.25%)</title><rect x="90.3" y="1315.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (17 samples, 0.23%)</title><rect x="90.6" y="1299.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.13%)</title><rect x="90.8" y="1283.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="90.8" y="1267.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.13%)</title><rect x="90.8" y="1251.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="90.8" y="1235.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.13%)</title><rect x="90.8" y="1219.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.13%)</title><rect x="90.8" y="1203.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.13%)</title><rect x="90.8" y="1187.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.11%)</title><rect x="91.1" y="1171.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.11%)</title><rect x="91.1" y="1155.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.11%)</title><rect x="91.1" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.11%)</title><rect x="91.1" y="1123.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.1" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.09%)</title><rect x="91.2" y="1107.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="94.2" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="91.5" y="1091.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.5" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="91.5" y="1075.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.5" y="1086.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="91.5" y="1059.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.5" y="1070.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="91.5" y="1043.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.5" y="1054.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="91.5" y="1027.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.5" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="91.9" y="1011.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="94.9" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="91.9" y="995.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.9" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="91.9" y="979.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (5 samples, 0.07%)</title><rect x="92.3" y="1283.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (5 samples, 0.07%)</title><rect x="92.3" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (3 samples, 0.04%)</title><rect x="92.3" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (3 samples, 0.04%)</title><rect x="92.3" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (3 samples, 0.04%)</title><rect x="92.3" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (3 samples, 0.04%)</title><rect x="92.3" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="92.3" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (2 samples, 0.03%)</title><rect x="92.8" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (149 samples, 2.00%)</title><rect x="93.8" y="1411.0" width="23.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="1422.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (148 samples, 1.98%)</title><rect x="93.9" y="1395.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="1406.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (147 samples, 1.97%)</title><rect x="94.1" y="1379.0" width="23.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.1" y="1390.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (47 samples, 0.63%)</title><rect x="94.9" y="1363.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="95.3" y="1347.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="98.3" y="1358.0"></text>
</g>
<g>
<title>epoll_wait (43 samples, 0.58%)</title><rect x="95.5" y="1331.0" width="6.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="98.5" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.52%)</title><rect x="96.1" y="1315.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.1" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.51%)</title><rect x="96.1" y="1299.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.1" y="1310.0"></text>
</g>
<g>
<title>sys_epoll_wait (37 samples, 0.50%)</title><rect x="96.3" y="1283.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.3" y="1294.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.46%)</title><rect x="96.3" y="1267.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.3" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="96.3" y="1251.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.3" y="1262.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (7 samples, 0.09%)</title><rect x="96.6" y="1251.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.6" y="1262.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.08%)</title><rect x="96.8" y="1235.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.8" y="1246.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (3 samples, 0.04%)</title><rect x="96.9" y="1219.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.9" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (20 samples, 0.27%)</title><rect x="98.0" y="1251.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.0" y="1262.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 0.27%)</title><rect x="98.0" y="1235.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.0" y="1246.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.03%)</title><rect x="98.2" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.2" y="1230.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="98.2" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.2" y="1214.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.23%)</title><rect x="98.5" y="1219.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.5" y="1230.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.23%)</title><rect x="98.5" y="1203.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.5" y="1214.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.21%)</title><rect x="98.7" y="1187.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.7" y="1198.0"></text>
</g>
<g>
<title>select_estimate_accuracy (3 samples, 0.04%)</title><rect x="101.2" y="1251.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="104.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (32 samples, 0.43%)</title><rect x="102.3" y="1363.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="102.8" y="1347.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.8" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="102.8" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.8" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="103.2" y="1331.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (2 samples, 0.03%)</title><rect x="103.2" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.2" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (16 samples, 0.21%)</title><rect x="103.7" y="1347.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (15 samples, 0.20%)</title><rect x="103.9" y="1331.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="103.9" y="1315.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="106.9" y="1326.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (6 samples, 0.08%)</title><rect x="103.9" y="1299.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="106.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="103.9" y="1283.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="106.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="103.9" y="1267.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="106.9" y="1278.0"></text>
</g>
<g>
<title>__read (6 samples, 0.08%)</title><rect x="103.9" y="1251.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.9" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="104.2" y="1235.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.2" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="104.2" y="1219.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.2" y="1230.0"></text>
</g>
<g>
<title>sys_read (4 samples, 0.05%)</title><rect x="104.2" y="1203.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.2" y="1214.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.03%)</title><rect x="104.5" y="1187.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="107.5" y="1198.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.03%)</title><rect x="104.5" y="1171.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.5" y="1182.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="104.5" y="1155.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="107.5" y="1166.0"></text>
</g>
<g>
<title>__read (8 samples, 0.11%)</title><rect x="105.0" y="1315.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.0" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="105.3" y="1299.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="105.3" y="1283.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="108.3" y="1294.0"></text>
</g>
<g>
<title>sys_read (5 samples, 0.07%)</title><rect x="105.4" y="1267.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.4" y="1278.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.07%)</title><rect x="105.4" y="1251.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="108.4" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.03%)</title><rect x="105.6" y="1235.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.6" y="1246.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="105.6" y="1219.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="108.6" y="1230.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="105.9" y="1235.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.9" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.09%)</title><rect x="106.2" y="1347.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="106.2" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.2" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="106.2" y="1315.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.2" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="106.2" y="1299.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.2" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="106.4" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (2 samples, 0.03%)</title><rect x="106.7" y="1331.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.03%)</title><rect x="107.0" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.translateAndSetReadyOps (2 samples, 0.03%)</title><rect x="107.0" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.translateReadyOps (2 samples, 0.03%)</title><rect x="107.0" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (31 samples, 0.42%)</title><rect x="107.3" y="1363.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (2 samples, 0.03%)</title><rect x="107.8" y="1347.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.8" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="107.8" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.8" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (24 samples, 0.32%)</title><rect x="108.1" y="1347.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.1" y="1358.0"></text>
</g>
<g>
<title>epoll_ctl (24 samples, 0.32%)</title><rect x="108.1" y="1331.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="111.1" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.28%)</title><rect x="108.6" y="1315.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.6" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.28%)</title><rect x="108.6" y="1299.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.6" y="1310.0"></text>
</g>
<g>
<title>sys_epoll_ctl (21 samples, 0.28%)</title><rect x="108.6" y="1283.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.6" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (6 samples, 0.08%)</title><rect x="110.0" y="1267.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.0" y="1278.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.08%)</title><rect x="110.0" y="1251.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.0" y="1262.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="110.2" y="1235.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.2" y="1246.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (3 samples, 0.04%)</title><rect x="110.3" y="1219.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.3" y="1230.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="110.5" y="1203.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.5" y="1214.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="110.5" y="1187.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.5" y="1198.0"></text>
</g>
<g>
<title>ep_remove (3 samples, 0.04%)</title><rect x="111.0" y="1267.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="114.0" y="1278.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="111.5" y="1267.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.03%)</title><rect x="112.2" y="1363.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.2" y="1374.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.03%)</title><rect x="112.2" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.2" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.07%)</title><rect x="112.6" y="1363.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.6" y="1374.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.07%)</title><rect x="112.6" y="1347.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="1358.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.07%)</title><rect x="112.6" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.07%)</title><rect x="112.6" y="1315.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.07%)</title><rect x="112.6" y="1299.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.currentThread (2 samples, 0.03%)</title><rect x="113.0" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.0" y="1294.0"></text>
</g>
<g>
<title>JVM_CurrentThread (2 samples, 0.03%)</title><rect x="113.0" y="1267.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="116.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (25 samples, 0.33%)</title><rect x="113.4" y="1363.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.4" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (3 samples, 0.04%)</title><rect x="114.1" y="1347.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.1" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (3 samples, 0.04%)</title><rect x="114.1" y="1331.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.1" y="1342.0"></text>
</g>
<g>
<title>epoll_ctl (3 samples, 0.04%)</title><rect x="114.1" y="1315.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="117.1" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="114.3" y="1299.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="114.3" y="1283.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.3" y="1294.0"></text>
</g>
<g>
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="114.3" y="1267.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.3" y="1278.0"></text>
</g>
<g>
<title>ep_remove (2 samples, 0.03%)</title><rect x="114.3" y="1251.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.3" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (17 samples, 0.23%)</title><rect x="114.6" y="1347.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (16 samples, 0.21%)</title><rect x="114.8" y="1331.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.8" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (16 samples, 0.21%)</title><rect x="114.8" y="1315.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.8" y="1326.0"></text>
</g>
<g>
<title>close (16 samples, 0.21%)</title><rect x="114.8" y="1299.0" width="2.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="117.8" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.21%)</title><rect x="114.8" y="1283.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.8" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.21%)</title><rect x="114.8" y="1267.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.8" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.20%)</title><rect x="114.8" y="1251.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.8" y="1262.0"></text>
</g>
<g>
<title>task_work_run (15 samples, 0.20%)</title><rect x="114.8" y="1235.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.8" y="1246.0"></text>
</g>
<g>
<title>____fput (15 samples, 0.20%)</title><rect x="114.8" y="1219.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.8" y="1230.0"></text>
</g>
<g>
<title>__fput (15 samples, 0.20%)</title><rect x="114.8" y="1203.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.8" y="1214.0"></text>
</g>
<g>
<title>dput (3 samples, 0.04%)</title><rect x="114.9" y="1187.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="117.9" y="1198.0"></text>
</g>
<g>
<title>dput.part.26 (3 samples, 0.04%)</title><rect x="114.9" y="1171.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.9" y="1182.0"></text>
</g>
<g>
<title>__dentry_kill (3 samples, 0.04%)</title><rect x="114.9" y="1155.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.9" y="1166.0"></text>
</g>
<g>
<title>dentry_unlink_inode (3 samples, 0.04%)</title><rect x="114.9" y="1139.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.9" y="1150.0"></text>
</g>
<g>
<title>iput (2 samples, 0.03%)</title><rect x="115.1" y="1123.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.1" y="1134.0"></text>
</g>
<g>
<title>evict (2 samples, 0.03%)</title><rect x="115.1" y="1107.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.1" y="1118.0"></text>
</g>
<g>
<title>destroy_inode (2 samples, 0.03%)</title><rect x="115.1" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.1" y="1102.0"></text>
</g>
<g>
<title>sock_destroy_inode (2 samples, 0.03%)</title><rect x="115.1" y="1075.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.1" y="1086.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="115.1" y="1059.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="118.1" y="1070.0"></text>
</g>
<g>
<title>sock_close (10 samples, 0.13%)</title><rect x="115.6" y="1187.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.6" y="1198.0"></text>
</g>
<g>
<title>__sock_release (10 samples, 0.13%)</title><rect x="115.6" y="1171.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.6" y="1182.0"></text>
</g>
<g>
<title>inet6_release (9 samples, 0.12%)</title><rect x="115.6" y="1155.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.6" y="1166.0"></text>
</g>
<g>
<title>inet_release (9 samples, 0.12%)</title><rect x="115.6" y="1139.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.6" y="1150.0"></text>
</g>
<g>
<title>tcp_close (9 samples, 0.12%)</title><rect x="115.6" y="1123.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.6" y="1134.0"></text>
</g>
<g>
<title>inet_csk_destroy_sock (2 samples, 0.03%)</title><rect x="115.6" y="1107.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.6" y="1118.0"></text>
</g>
<g>
<title>tcp_v6_destroy_sock (2 samples, 0.03%)</title><rect x="115.6" y="1091.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.6" y="1102.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="115.9" y="1107.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.9" y="1118.0"></text>
</g>
<g>
<title>__sk_free (2 samples, 0.03%)</title><rect x="115.9" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.9" y="1102.0"></text>
</g>
<g>
<title>sk_destruct (2 samples, 0.03%)</title><rect x="115.9" y="1075.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.9" y="1086.0"></text>
</g>
<g>
<title>tcp_disconnect (5 samples, 0.07%)</title><rect x="116.2" y="1107.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="119.2" y="1118.0"></text>
</g>
<g>
<title>tcp_send_active_reset (5 samples, 0.07%)</title><rect x="116.2" y="1091.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.2" y="1102.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.07%)</title><rect x="116.2" y="1075.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="119.2" y="1086.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.05%)</title><rect x="116.4" y="1059.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.4" y="1070.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="116.4" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="119.4" y="1054.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="116.4" y="1027.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.4" y="1038.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="116.4" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.4" y="1022.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="116.4" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.4" y="1006.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="116.7" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (6 samples, 0.08%)</title><rect x="117.5" y="1411.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.5" y="1422.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.07%)</title><rect x="117.6" y="1395.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="1406.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="117.6" y="1379.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="120.6" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="117.9" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="117.9" y="1363.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="117.9" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.9" y="1358.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (3 samples, 0.04%)</title><rect x="118.4" y="1443.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (2 samples, 0.03%)</title><rect x="118.4" y="1427.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="118.4" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (33 samples, 0.44%)</title><rect x="118.9" y="1459.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.9" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (13 samples, 0.17%)</title><rect x="119.0" y="1443.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (4 samples, 0.05%)</title><rect x="119.0" y="1427.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.05%)</title><rect x="119.0" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.05%)</title><rect x="119.0" y="1395.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.05%)</title><rect x="119.0" y="1379.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.05%)</title><rect x="119.0" y="1363.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.05%)</title><rect x="119.0" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.05%)</title><rect x="119.0" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.05%)</title><rect x="119.0" y="1315.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.05%)</title><rect x="119.0" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="119.0" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="119.0" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="119.0" y="1251.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.0" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="119.0" y="1235.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="119.0" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="119.0" y="1203.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="119.0" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="119.4" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="119.4" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="119.4" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="119.4" y="1123.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="122.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="119.4" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="122.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="119.4" y="1091.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="122.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (8 samples, 0.11%)</title><rect x="119.7" y="1427.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.7" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (5 samples, 0.07%)</title><rect x="120.1" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (3 samples, 0.04%)</title><rect x="120.3" y="1395.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.03%)</title><rect x="120.5" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.5" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$6.tryRun (2 samples, 0.03%)</title><rect x="121.1" y="1443.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.1" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (12 samples, 0.16%)</title><rect x="121.4" y="1443.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.4" y="1454.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (11 samples, 0.15%)</title><rect x="121.6" y="1427.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.6" y="1438.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (11 samples, 0.15%)</title><rect x="121.6" y="1411.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.6" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$685/1373816728.apply$mcV$sp (9 samples, 0.12%)</title><rect x="121.7" y="1395.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (9 samples, 0.12%)</title><rect x="121.7" y="1379.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.7" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (9 samples, 0.12%)</title><rect x="121.7" y="1363.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.7" y="1374.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (8 samples, 0.11%)</title><rect x="121.9" y="1347.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (8 samples, 0.11%)</title><rect x="121.9" y="1331.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.9" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (5 samples, 0.07%)</title><rect x="122.0" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (4 samples, 0.05%)</title><rect x="122.2" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.2" y="1310.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (2 samples, 0.03%)</title><rect x="122.4" y="1283.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="125.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (2 samples, 0.03%)</title><rect x="122.8" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.8" y="1326.0"></text>
</g>
<g>
<title>shutdown (2 samples, 0.03%)</title><rect x="122.8" y="1299.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="125.8" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (5 samples, 0.07%)</title><rect x="123.3" y="1443.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.3" y="1454.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1230/1964720643.apply$mcV$sp (5 samples, 0.07%)</title><rect x="123.3" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.3" y="1438.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (5 samples, 0.07%)</title><rect x="123.3" y="1411.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (5 samples, 0.07%)</title><rect x="123.3" y="1395.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="123.3" y="1379.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.07%)</title><rect x="123.3" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.07%)</title><rect x="123.3" y="1347.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="123.3" y="1331.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (5 samples, 0.07%)</title><rect x="123.3" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (5 samples, 0.07%)</title><rect x="123.3" y="1299.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (5 samples, 0.07%)</title><rect x="123.3" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.07%)</title><rect x="123.3" y="1267.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="123.3" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="123.3" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.3" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="123.3" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="123.3" y="1203.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="123.3" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="123.3" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="123.3" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="123.3" y="1139.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="123.3" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="123.3" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.3" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="123.3" y="1091.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="126.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="123.5" y="1075.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="126.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="123.5" y="1059.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.5" y="1070.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="123.6" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="126.6" y="1054.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (9 samples, 0.12%)</title><rect x="124.1" y="1507.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.1" y="1518.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (5 samples, 0.07%)</title><rect x="124.1" y="1491.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.1" y="1502.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (5 samples, 0.07%)</title><rect x="124.1" y="1475.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.1" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (3 samples, 0.04%)</title><rect x="124.4" y="1459.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.4" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (3 samples, 0.04%)</title><rect x="124.4" y="1443.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.4" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (3 samples, 0.04%)</title><rect x="124.4" y="1427.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (3 samples, 0.04%)</title><rect x="124.4" y="1411.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (3 samples, 0.04%)</title><rect x="124.4" y="1395.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.4" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (3 samples, 0.04%)</title><rect x="124.4" y="1379.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.4" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (3 samples, 0.04%)</title><rect x="124.4" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.4" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (3 samples, 0.04%)</title><rect x="124.4" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.4" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (3 samples, 0.04%)</title><rect x="124.4" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (3 samples, 0.04%)</title><rect x="124.4" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (3 samples, 0.04%)</title><rect x="124.4" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (3 samples, 0.04%)</title><rect x="124.4" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.4" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (3 samples, 0.04%)</title><rect x="124.4" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (3 samples, 0.04%)</title><rect x="124.4" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="124.4" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.04%)</title><rect x="124.4" y="1219.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.4" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="124.4" y="1203.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.04%)</title><rect x="124.4" y="1187.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.04%)</title><rect x="124.4" y="1171.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.04%)</title><rect x="124.4" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.04%)</title><rect x="124.4" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="124.4" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="124.4" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="124.4" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.4" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="124.4" y="1075.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="127.4" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="124.4" y="1059.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.4" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="124.4" y="1043.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="127.4" y="1054.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="124.4" y="1027.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="127.4" y="1038.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="124.4" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.4" y="1022.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="124.4" y="995.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.4" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="124.4" y="979.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.4" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="124.4" y="963.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.4" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="124.4" y="947.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.getDone (4 samples, 0.05%)</title><rect x="124.9" y="1491.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.9" y="1502.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkState (2 samples, 0.03%)</title><rect x="124.9" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.9" y="1486.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.isDone (2 samples, 0.03%)</title><rect x="124.9" y="1459.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.9" y="1470.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Uninterruptibles.getUninterruptibly (2 samples, 0.03%)</title><rect x="125.2" y="1475.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.2" y="1486.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.get (2 samples, 0.03%)</title><rect x="125.2" y="1459.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.2" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1295/1667385228.run (32 samples, 0.43%)</title><rect x="125.5" y="1507.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (32 samples, 0.43%)</title><rect x="125.5" y="1491.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.5" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (31 samples, 0.42%)</title><rect x="125.5" y="1475.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.5" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (31 samples, 0.42%)</title><rect x="125.5" y="1459.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (30 samples, 0.40%)</title><rect x="125.5" y="1443.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.5" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (30 samples, 0.40%)</title><rect x="125.5" y="1427.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.5" y="1438.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (30 samples, 0.40%)</title><rect x="125.5" y="1411.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.5" y="1422.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (17 samples, 0.23%)</title><rect x="126.2" y="1395.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.2" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (17 samples, 0.23%)</title><rect x="126.2" y="1379.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.2" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (17 samples, 0.23%)</title><rect x="126.2" y="1363.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.2" y="1374.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (17 samples, 0.23%)</title><rect x="126.2" y="1347.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.2" y="1358.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (17 samples, 0.23%)</title><rect x="126.2" y="1331.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.2" y="1342.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (17 samples, 0.23%)</title><rect x="126.2" y="1315.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$391/1798419160.apply (16 samples, 0.21%)</title><rect x="126.3" y="1299.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (16 samples, 0.21%)</title><rect x="126.3" y="1283.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (16 samples, 0.21%)</title><rect x="126.3" y="1267.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (16 samples, 0.21%)</title><rect x="126.3" y="1251.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (15 samples, 0.20%)</title><rect x="126.3" y="1235.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (10 samples, 0.13%)</title><rect x="126.5" y="1219.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (6 samples, 0.08%)</title><rect x="126.5" y="1203.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (4 samples, 0.05%)</title><rect x="126.5" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (2 samples, 0.03%)</title><rect x="126.8" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (2 samples, 0.03%)</title><rect x="126.8" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (2 samples, 0.03%)</title><rect x="126.8" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (2 samples, 0.03%)</title><rect x="126.8" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.port (2 samples, 0.03%)</title><rect x="127.1" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (4 samples, 0.05%)</title><rect x="127.4" y="1203.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (4 samples, 0.05%)</title><rect x="127.4" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.path$minusabempty (4 samples, 0.05%)</title><rect x="128.0" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.slashSegments (4 samples, 0.05%)</title><rect x="128.0" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$10 (3 samples, 0.04%)</title><rect x="128.2" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ConnectionPoolSettings.withMaxRetries (3 samples, 0.04%)</title><rect x="128.8" y="1395.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.8" y="1406.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (6 samples, 0.08%)</title><rect x="129.3" y="1395.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.3" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (3 samples, 0.04%)</title><rect x="129.6" y="1379.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.6" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (3 samples, 0.04%)</title><rect x="129.6" y="1363.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.6" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (3 samples, 0.04%)</title><rect x="129.6" y="1347.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (2 samples, 0.03%)</title><rect x="129.8" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1305/1708672146.run (18 samples, 0.24%)</title><rect x="130.6" y="1507.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.6" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (17 samples, 0.23%)</title><rect x="130.7" y="1491.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (16 samples, 0.21%)</title><rect x="130.9" y="1475.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.9" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (14 samples, 0.19%)</title><rect x="130.9" y="1459.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.9" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$1239/1502660073.accept (9 samples, 0.12%)</title><rect x="131.0" y="1443.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.0" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (9 samples, 0.12%)</title><rect x="131.0" y="1427.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1238/44908835.accept (5 samples, 0.07%)</title><rect x="131.0" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (5 samples, 0.07%)</title><rect x="131.0" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.0" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.respondToJoiners (3 samples, 0.04%)</title><rect x="131.2" y="1379.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.2" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager.getAllMetadata (2 samples, 0.03%)</title><rect x="131.2" y="1363.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.2" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1319/2022769141.accept (4 samples, 0.05%)</title><rect x="131.8" y="1411.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.8" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (4 samples, 0.05%)</title><rect x="131.8" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.respondToJoiners (2 samples, 0.03%)</title><rect x="131.8" y="1379.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.8" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.04%)</title><rect x="132.6" y="1443.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.6" y="1454.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.equals (2 samples, 0.03%)</title><rect x="132.8" y="1427.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.equals (2 samples, 0.03%)</title><rect x="132.8" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.8" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.equalsRange (2 samples, 0.03%)</title><rect x="132.8" y="1395.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidResponse (2 samples, 0.03%)</title><rect x="133.1" y="1459.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (2 samples, 0.03%)</title><rect x="133.6" y="1507.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (2 samples, 0.03%)</title><rect x="133.6" y="1491.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.03%)</title><rect x="133.6" y="1475.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (2 samples, 0.03%)</title><rect x="133.6" y="1459.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.6" y="1470.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.sendHeartBeatHttpMessaging (2 samples, 0.03%)</title><rect x="133.6" y="1443.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.6" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (2 samples, 0.03%)</title><rect x="133.6" y="1427.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="1438.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.03%)</title><rect x="133.6" y="1411.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.03%)</title><rect x="133.9" y="1507.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.9" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.03%)</title><rect x="134.2" y="1507.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.2" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (36 samples, 0.48%)</title><rect x="134.7" y="1507.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.7" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (15 samples, 0.20%)</title><rect x="135.2" y="1491.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (13 samples, 0.17%)</title><rect x="135.3" y="1475.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (12 samples, 0.16%)</title><rect x="135.5" y="1459.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.15%)</title><rect x="135.6" y="1443.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.6" y="1454.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="135.6" y="1427.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="138.6" y="1438.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="135.6" y="1411.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.6" y="1422.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.11%)</title><rect x="136.1" y="1427.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="139.1" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.09%)</title><rect x="136.3" y="1411.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.3" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.09%)</title><rect x="136.3" y="1395.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.3" y="1406.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="136.3" y="1379.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.3" y="1390.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="136.6" y="1379.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="139.6" y="1390.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="136.6" y="1363.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.6" y="1374.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.07%)</title><rect x="136.6" y="1347.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.6" y="1358.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="136.7" y="1331.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="139.7" y="1342.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="136.9" y="1315.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="139.9" y="1326.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="136.9" y="1299.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="139.9" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="136.9" y="1283.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.21%)</title><rect x="137.5" y="1491.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.19%)</title><rect x="137.7" y="1475.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="137.8" y="1459.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.15%)</title><rect x="138.2" y="1459.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.15%)</title><rect x="138.2" y="1443.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.2" y="1454.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="138.2" y="1427.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="141.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="138.5" y="1427.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="141.5" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.12%)</title><rect x="138.5" y="1411.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="141.5" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.11%)</title><rect x="138.6" y="1395.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.6" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.11%)</title><rect x="138.6" y="1379.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="141.6" y="1390.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.11%)</title><rect x="138.6" y="1363.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.6" y="1374.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.11%)</title><rect x="138.6" y="1347.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="141.6" y="1358.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.11%)</title><rect x="138.6" y="1331.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.6" y="1342.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.11%)</title><rect x="138.6" y="1315.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.6" y="1326.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.11%)</title><rect x="138.6" y="1299.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="141.6" y="1310.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.11%)</title><rect x="138.6" y="1283.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="141.6" y="1294.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.09%)</title><rect x="138.8" y="1267.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (2 samples, 0.03%)</title><rect x="140.1" y="1491.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (2 samples, 0.03%)</title><rect x="140.1" y="1475.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (2 samples, 0.03%)</title><rect x="140.1" y="1459.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.11%)</title><rect x="140.4" y="1555.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.make (2 samples, 0.03%)</title><rect x="140.5" y="1539.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.&lt;init&gt; (2 samples, 0.03%)</title><rect x="140.5" y="1523.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (2 samples, 0.03%)</title><rect x="140.5" y="1507.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (2 samples, 0.03%)</title><rect x="140.5" y="1491.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (2 samples, 0.03%)</title><rect x="140.5" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (2 samples, 0.03%)</title><rect x="140.5" y="1459.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (2 samples, 0.03%)</title><rect x="140.5" y="1443.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (2 samples, 0.03%)</title><rect x="140.5" y="1427.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (2 samples, 0.03%)</title><rect x="140.5" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (2 samples, 0.03%)</title><rect x="140.5" y="1395.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (3 samples, 0.04%)</title><rect x="141.2" y="1539.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.2" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (3 samples, 0.04%)</title><rect x="141.2" y="1523.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (3 samples, 0.04%)</title><rect x="141.2" y="1507.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (3 samples, 0.04%)</title><rect x="141.2" y="1491.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,509 samples, 46.99%)</title><rect x="141.8" y="1555.0" width="554.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.8" y="1566.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,509 samples, 46.99%)</title><rect x="141.8" y="1539.0" width="554.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.8" y="1550.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.07%)</title><rect x="143.5" y="1523.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,266 samples, 43.74%)</title><rect x="144.5" y="1523.0" width="516.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.5" y="1534.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (5 samples, 0.07%)</title><rect x="145.6" y="1507.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (4 samples, 0.05%)</title><rect x="145.7" y="1491.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.7" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="146.1" y="1475.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,241 samples, 43.40%)</title><rect x="146.4" y="1507.0" width="512.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.4" y="1518.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (4 samples, 0.05%)</title><rect x="146.9" y="1491.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (2 samples, 0.03%)</title><rect x="147.2" y="1475.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (2 samples, 0.03%)</title><rect x="147.2" y="1459.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (5 samples, 0.07%)</title><rect x="147.5" y="1491.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (2 samples, 0.03%)</title><rect x="147.6" y="1475.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (2 samples, 0.03%)</title><rect x="148.0" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.0" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,229 samples, 43.24%)</title><rect x="148.3" y="1491.0" width="510.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.3" y="1502.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (343 samples, 4.59%)</title><rect x="148.7" y="1475.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.7" y="1486.0">akka/..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (342 samples, 4.58%)</title><rect x="148.9" y="1459.0" width="54.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="1470.0">akka/..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (24 samples, 0.32%)</title><rect x="148.9" y="1443.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (3 samples, 0.04%)</title><rect x="149.1" y="1427.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (2 samples, 0.03%)</title><rect x="149.2" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.2" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$541/619471650.run (19 samples, 0.25%)</title><rect x="149.7" y="1427.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.7" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (19 samples, 0.25%)</title><rect x="149.7" y="1411.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.7" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (19 samples, 0.25%)</title><rect x="149.7" y="1395.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (19 samples, 0.25%)</title><rect x="149.7" y="1379.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (16 samples, 0.21%)</title><rect x="149.7" y="1363.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.7" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (13 samples, 0.17%)</title><rect x="150.2" y="1347.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (13 samples, 0.17%)</title><rect x="150.2" y="1331.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (13 samples, 0.17%)</title><rect x="150.2" y="1315.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (12 samples, 0.16%)</title><rect x="150.2" y="1299.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.16%)</title><rect x="150.2" y="1283.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.15%)</title><rect x="150.3" y="1267.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.15%)</title><rect x="150.3" y="1251.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.15%)</title><rect x="150.3" y="1235.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (11 samples, 0.15%)</title><rect x="150.3" y="1219.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (11 samples, 0.15%)</title><rect x="150.3" y="1203.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (11 samples, 0.15%)</title><rect x="150.3" y="1187.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.07%)</title><rect x="150.5" y="1171.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.5" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="150.5" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.07%)</title><rect x="150.5" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="150.5" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.07%)</title><rect x="150.5" y="1107.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.07%)</title><rect x="150.5" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.07%)</title><rect x="150.5" y="1075.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.07%)</title><rect x="150.5" y="1059.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.07%)</title><rect x="150.5" y="1043.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="150.6" y="1027.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="150.6" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="150.8" y="995.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="153.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="151.0" y="979.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="151.0" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.0" y="974.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="151.0" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.0" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="151.0" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="151.0" y="915.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (5 samples, 0.07%)</title><rect x="151.3" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (5 samples, 0.07%)</title><rect x="151.3" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (5 samples, 0.07%)</title><rect x="151.3" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (5 samples, 0.07%)</title><rect x="151.3" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (5 samples, 0.07%)</title><rect x="151.3" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (5 samples, 0.07%)</title><rect x="151.3" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.05%)</title><rect x="151.3" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="151.3" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (3 samples, 0.04%)</title><rect x="152.2" y="1363.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="152.4" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.4" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (314 samples, 4.21%)</title><rect x="152.7" y="1443.0" width="49.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.7" y="1454.0">akka/..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="153.3" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="153.3" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.3" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (308 samples, 4.12%)</title><rect x="153.6" y="1427.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.6" y="1438.0">scal..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (306 samples, 4.10%)</title><rect x="154.0" y="1411.0" width="48.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.0" y="1422.0">scal..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$502/325786756.apply$mcV$sp (306 samples, 4.10%)</title><rect x="154.0" y="1395.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.0" y="1406.0">akka..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (305 samples, 4.08%)</title><rect x="154.1" y="1379.0" width="48.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.1" y="1390.0">akka..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (304 samples, 4.07%)</title><rect x="154.1" y="1363.0" width="48.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.1" y="1374.0">akka..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (302 samples, 4.04%)</title><rect x="154.4" y="1347.0" width="47.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.4" y="1358.0">scal..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1036/1408926917.apply (113 samples, 1.51%)</title><rect x="154.6" y="1331.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.6" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (113 samples, 1.51%)</title><rect x="154.6" y="1315.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (5 samples, 0.07%)</title><rect x="154.8" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.8" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (2 samples, 0.03%)</title><rect x="154.8" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (2 samples, 0.03%)</title><rect x="155.1" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (2 samples, 0.03%)</title><rect x="155.1" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (2 samples, 0.03%)</title><rect x="155.1" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (4 samples, 0.05%)</title><rect x="155.5" y="1299.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.5" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (4 samples, 0.05%)</title><rect x="155.5" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (4 samples, 0.05%)</title><rect x="155.5" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (4 samples, 0.05%)</title><rect x="155.5" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (4 samples, 0.05%)</title><rect x="155.5" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (3 samples, 0.04%)</title><rect x="155.7" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (3 samples, 0.04%)</title><rect x="155.7" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (101 samples, 1.35%)</title><rect x="156.2" y="1299.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1062/1687739710.apply (99 samples, 1.33%)</title><rect x="156.5" y="1283.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (98 samples, 1.31%)</title><rect x="156.7" y="1267.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (96 samples, 1.29%)</title><rect x="157.0" y="1251.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1062/1687739710.apply (96 samples, 1.29%)</title><rect x="157.0" y="1235.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (95 samples, 1.27%)</title><rect x="157.1" y="1219.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1064/177563161.apply (2 samples, 0.03%)</title><rect x="157.3" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (2 samples, 0.03%)</title><rect x="157.3" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (92 samples, 1.23%)</title><rect x="157.6" y="1203.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1066/419901328.apply (92 samples, 1.23%)</title><rect x="157.6" y="1187.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (91 samples, 1.22%)</title><rect x="157.8" y="1171.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (90 samples, 1.21%)</title><rect x="157.9" y="1155.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (23 samples, 0.31%)</title><rect x="158.1" y="1139.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (4 samples, 0.05%)</title><rect x="158.2" y="1123.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (4 samples, 0.05%)</title><rect x="158.2" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (4 samples, 0.05%)</title><rect x="158.2" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (2 samples, 0.03%)</title><rect x="158.4" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (4 samples, 0.05%)</title><rect x="158.9" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.05%)</title><rect x="158.9" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.05%)</title><rect x="158.9" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (10 samples, 0.13%)</title><rect x="159.5" y="1123.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (10 samples, 0.13%)</title><rect x="159.5" y="1107.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (3 samples, 0.04%)</title><rect x="159.7" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (6 samples, 0.08%)</title><rect x="160.1" y="1091.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (5 samples, 0.07%)</title><rect x="160.1" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (2 samples, 0.03%)</title><rect x="160.3" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (2 samples, 0.03%)</title><rect x="160.3" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (2 samples, 0.03%)</title><rect x="160.3" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (2 samples, 0.03%)</title><rect x="160.3" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (2 samples, 0.03%)</title><rect x="160.3" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="160.3" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.03%)</title><rect x="160.3" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="160.6" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="160.6" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="160.6" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.6" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (4 samples, 0.05%)</title><rect x="161.1" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (3 samples, 0.04%)</title><rect x="161.1" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.1" y="1118.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (2 samples, 0.03%)</title><rect x="161.2" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (66 samples, 0.88%)</title><rect x="161.7" y="1139.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (63 samples, 0.84%)</title><rect x="161.7" y="1123.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (63 samples, 0.84%)</title><rect x="161.7" y="1107.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (63 samples, 0.84%)</title><rect x="161.7" y="1091.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (63 samples, 0.84%)</title><rect x="161.7" y="1075.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (7 samples, 0.09%)</title><rect x="161.9" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (4 samples, 0.05%)</title><rect x="162.3" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.prependToList (2 samples, 0.03%)</title><rect x="162.7" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (2 samples, 0.03%)</title><rect x="162.7" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (2 samples, 0.03%)</title><rect x="162.7" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/428746855.invoke_MT (2 samples, 0.03%)</title><rect x="162.7" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.7" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (4 samples, 0.05%)</title><rect x="163.1" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/Attributes.nameOrDefault (2 samples, 0.03%)</title><rect x="163.1" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="163.4" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (41 samples, 0.55%)</title><rect x="163.8" y="1059.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (33 samples, 0.44%)</title><rect x="163.9" y="1043.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.9" y="1054.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (32 samples, 0.43%)</title><rect x="164.1" y="1027.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (32 samples, 0.43%)</title><rect x="164.1" y="1011.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (32 samples, 0.43%)</title><rect x="164.1" y="995.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (29 samples, 0.39%)</title><rect x="164.6" y="979.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.6" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (5 samples, 0.07%)</title><rect x="164.9" y="963.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (5 samples, 0.07%)</title><rect x="164.9" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.9" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (5 samples, 0.07%)</title><rect x="164.9" y="931.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.9" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (5 samples, 0.07%)</title><rect x="164.9" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (2 samples, 0.03%)</title><rect x="164.9" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (2 samples, 0.03%)</title><rect x="164.9" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.9" y="894.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (2 samples, 0.03%)</title><rect x="164.9" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.9" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="164.9" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.9" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="164.9" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.9" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="164.9" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.9" y="830.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="164.9" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.9" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.04%)</title><rect x="165.2" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.2" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="165.2" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.2" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="165.2" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.2" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="165.2" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.2" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.2" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.2" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.2" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.2" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.2" y="782.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.2" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.2" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="165.2" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.2" y="734.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (22 samples, 0.29%)</title><rect x="165.7" y="963.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.7" y="974.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (3 samples, 0.04%)</title><rect x="166.1" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.1" y="958.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (2 samples, 0.03%)</title><rect x="166.3" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.3" y="942.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (10 samples, 0.13%)</title><rect x="166.6" y="947.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.6" y="958.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (2 samples, 0.03%)</title><rect x="166.8" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.8" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (3 samples, 0.04%)</title><rect x="167.1" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.1" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookupConfigurator (2 samples, 0.03%)</title><rect x="167.2" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.2" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (4 samples, 0.05%)</title><rect x="167.6" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (4 samples, 0.05%)</title><rect x="168.2" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (3 samples, 0.04%)</title><rect x="168.3" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (3 samples, 0.04%)</title><rect x="168.3" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (3 samples, 0.04%)</title><rect x="168.3" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.3" y="910.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (3 samples, 0.04%)</title><rect x="168.3" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.3" y="894.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (3 samples, 0.04%)</title><rect x="168.3" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.3" y="878.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (2 samples, 0.03%)</title><rect x="168.5" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.5" y="862.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (2 samples, 0.03%)</title><rect x="168.5" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.5" y="846.0"></text>
</g>
<g>
<title>scala/collection/Iterator$.apply (2 samples, 0.03%)</title><rect x="168.8" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.8" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/ArraySeq$ofRef.iterator (2 samples, 0.03%)</title><rect x="168.8" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$ArrayIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="168.8" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.8" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.getLength (2 samples, 0.03%)</title><rect x="168.8" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.8" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (5 samples, 0.07%)</title><rect x="169.1" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.1" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (4 samples, 0.05%)</title><rect x="169.1" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (4 samples, 0.05%)</title><rect x="169.1" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (4 samples, 0.05%)</title><rect x="169.1" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (3 samples, 0.04%)</title><rect x="169.3" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (3 samples, 0.04%)</title><rect x="169.3" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (3 samples, 0.04%)</title><rect x="169.3" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="169.3" y="931.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.3" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (2 samples, 0.03%)</title><rect x="170.2" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (2 samples, 0.03%)</title><rect x="170.2" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (2 samples, 0.03%)</title><rect x="170.2" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (2 samples, 0.03%)</title><rect x="170.7" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (3 samples, 0.04%)</title><rect x="171.7" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.7" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1074/1236001722.apply (3 samples, 0.04%)</title><rect x="172.5" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.5" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$2$adapted (3 samples, 0.04%)</title><rect x="172.5" y="1315.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.5" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$2 (3 samples, 0.04%)</title><rect x="172.5" y="1299.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.5" y="1310.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (3 samples, 0.04%)</title><rect x="172.5" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.5" y="1294.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (3 samples, 0.04%)</title><rect x="172.5" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.5" y="1278.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (2 samples, 0.03%)</title><rect x="172.6" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1087/1464971506.apply (3 samples, 0.04%)</title><rect x="172.9" y="1331.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.9" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3$adapted (2 samples, 0.03%)</title><rect x="172.9" y="1315.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3 (2 samples, 0.03%)</title><rect x="172.9" y="1299.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.removeConnection (2 samples, 0.03%)</title><rect x="172.9" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1149/1778082104.apply (171 samples, 2.29%)</title><rect x="173.4" y="1331.0" width="27.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (170 samples, 2.28%)</title><rect x="173.6" y="1315.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.6" y="1326.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (154 samples, 2.06%)</title><rect x="173.6" y="1299.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.6" y="1310.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1105/1887101962.apply (2 samples, 0.03%)</title><rect x="173.6" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWithPF$1 (2 samples, 0.03%)</title><rect x="173.6" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (36 samples, 0.48%)</title><rect x="173.9" y="1283.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (34 samples, 0.46%)</title><rect x="174.2" y="1267.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.2" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1058/1109651354.apply (19 samples, 0.25%)</title><rect x="174.2" y="1251.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.2" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (19 samples, 0.25%)</title><rect x="174.2" y="1235.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.2" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (19 samples, 0.25%)</title><rect x="174.2" y="1219.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.2" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (19 samples, 0.25%)</title><rect x="174.2" y="1203.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.2" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (19 samples, 0.25%)</title><rect x="174.2" y="1187.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.2" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (19 samples, 0.25%)</title><rect x="174.2" y="1171.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.2" y="1182.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (19 samples, 0.25%)</title><rect x="174.2" y="1155.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.2" y="1166.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (18 samples, 0.24%)</title><rect x="174.3" y="1139.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.3" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (17 samples, 0.23%)</title><rect x="174.3" y="1123.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.3" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (17 samples, 0.23%)</title><rect x="174.3" y="1107.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.3" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (17 samples, 0.23%)</title><rect x="174.3" y="1091.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.3" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (17 samples, 0.23%)</title><rect x="174.3" y="1075.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.3" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (14 samples, 0.19%)</title><rect x="174.7" y="1059.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.7" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (13 samples, 0.17%)</title><rect x="174.8" y="1043.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.8" y="1054.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (13 samples, 0.17%)</title><rect x="174.8" y="1027.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.8" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (13 samples, 0.17%)</title><rect x="174.8" y="1011.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.8" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (13 samples, 0.17%)</title><rect x="174.8" y="995.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.8" y="1006.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (13 samples, 0.17%)</title><rect x="174.8" y="979.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.8" y="990.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (10 samples, 0.13%)</title><rect x="174.8" y="963.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.8" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (10 samples, 0.13%)</title><rect x="174.8" y="947.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.8" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (10 samples, 0.13%)</title><rect x="174.8" y="931.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.8" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (10 samples, 0.13%)</title><rect x="174.8" y="915.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.8" y="926.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseEntry (10 samples, 0.13%)</title><rect x="174.8" y="899.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.8" y="910.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseField (10 samples, 0.13%)</title><rect x="174.8" y="883.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.8" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (9 samples, 0.12%)</title><rect x="174.8" y="867.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.8" y="878.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (9 samples, 0.12%)</title><rect x="174.8" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.8" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (8 samples, 0.11%)</title><rect x="175.0" y="835.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.0" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="175.0" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.0" y="830.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="175.0" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.0" y="814.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (3 samples, 0.04%)</title><rect x="175.0" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="798.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (3 samples, 0.04%)</title><rect x="175.0" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.0" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="175.1" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.1" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="175.1" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.1" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="175.1" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.1" y="734.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (4 samples, 0.05%)</title><rect x="175.5" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="178.5" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField.mergeFrom (4 samples, 0.05%)</title><rect x="175.5" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.5" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/MapFieldLite.copy (2 samples, 0.03%)</title><rect x="175.6" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.6" y="798.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="176.4" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.4" y="974.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="176.4" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.4" y="958.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (2 samples, 0.03%)</title><rect x="176.4" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.4" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (2 samples, 0.03%)</title><rect x="176.4" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.4" y="926.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (2 samples, 0.03%)</title><rect x="176.4" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.4" y="910.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (2 samples, 0.03%)</title><rect x="176.4" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.4" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (2 samples, 0.03%)</title><rect x="176.4" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.4" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1136/1770440470.apply (8 samples, 0.11%)</title><rect x="177.2" y="1251.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.2" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (7 samples, 0.09%)</title><rect x="177.4" y="1235.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.4" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (7 samples, 0.09%)</title><rect x="177.4" y="1219.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.4" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (7 samples, 0.09%)</title><rect x="177.4" y="1203.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.4" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (6 samples, 0.08%)</title><rect x="177.5" y="1187.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.5" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (6 samples, 0.08%)</title><rect x="177.5" y="1171.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.5" y="1182.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (6 samples, 0.08%)</title><rect x="177.5" y="1155.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.5" y="1166.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (4 samples, 0.05%)</title><rect x="177.8" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.8" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="178.0" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.0" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="178.0" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.0" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (3 samples, 0.04%)</title><rect x="178.0" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.0" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (3 samples, 0.04%)</title><rect x="178.0" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.0" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="178.1" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="178.1" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.1" y="1054.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="178.1" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.1" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="178.1" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.1" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="178.1" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.1" y="1006.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="178.1" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.1" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1055/2083376872.apply (4 samples, 0.05%)</title><rect x="178.6" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteArrayUnmarshaller$1 (4 samples, 0.05%)</title><rect x="178.6" y="1235.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.6" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString.toArray (3 samples, 0.04%)</title><rect x="178.8" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.8" y="1230.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.copyToArray (3 samples, 0.04%)</title><rect x="178.8" y="1203.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.8" y="1214.0"></text>
</g>
<g>
<title>scala/Array$.copy (2 samples, 0.03%)</title><rect x="178.9" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1071/1734729519.apply (2 samples, 0.03%)</title><rect x="179.2" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (2 samples, 0.03%)</title><rect x="179.2" y="1235.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1151/1018458507.apply (114 samples, 1.53%)</title><rect x="179.6" y="1283.0" width="18.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (112 samples, 1.50%)</title><rect x="179.9" y="1267.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1150/388563910.apply (109 samples, 1.46%)</title><rect x="180.4" y="1251.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (109 samples, 1.46%)</title><rect x="180.4" y="1235.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$987/307451012.apply (6 samples, 0.08%)</title><rect x="180.7" y="1219.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (5 samples, 0.07%)</title><rect x="180.8" y="1203.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$982/563894090.apply (5 samples, 0.07%)</title><rect x="180.8" y="1187.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (5 samples, 0.07%)</title><rect x="180.8" y="1171.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1144/14712307.apply (4 samples, 0.05%)</title><rect x="180.8" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$3 (3 samples, 0.04%)</title><rect x="180.8" y="1139.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.provide (3 samples, 0.04%)</title><rect x="180.8" y="1123.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.provide$ (3 samples, 0.04%)</title><rect x="180.8" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.provide (2 samples, 0.03%)</title><rect x="181.0" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (61 samples, 0.82%)</title><rect x="181.6" y="1219.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (61 samples, 0.82%)</title><rect x="181.6" y="1203.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1162/14236032.apply (59 samples, 0.79%)</title><rect x="181.9" y="1187.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (59 samples, 0.79%)</title><rect x="181.9" y="1171.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.9" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1159/343213702.apply (6 samples, 0.08%)</title><rect x="181.9" y="1155.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.9" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$7 (5 samples, 0.07%)</title><rect x="182.1" y="1139.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.liftMarshaller (4 samples, 0.05%)</title><rect x="182.3" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/LowPriorityToResponseMarshallerImplicits.liftMarshaller$ (3 samples, 0.04%)</title><rect x="182.4" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="185.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/LowPriorityToResponseMarshallerImplicits.liftMarshaller (3 samples, 0.04%)</title><rect x="182.4" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.fromToEntityMarshaller (3 samples, 0.04%)</title><rect x="182.4" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.fromToEntityMarshaller$ (3 samples, 0.04%)</title><rect x="182.4" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.fromToEntityMarshaller (2 samples, 0.03%)</title><rect x="182.6" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (53 samples, 0.71%)</title><rect x="182.9" y="1155.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (53 samples, 0.71%)</title><rect x="182.9" y="1139.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (53 samples, 0.71%)</title><rect x="182.9" y="1123.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (53 samples, 0.71%)</title><rect x="182.9" y="1107.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (53 samples, 0.71%)</title><rect x="182.9" y="1091.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (13 samples, 0.17%)</title><rect x="182.9" y="1075.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1194/1788017632.apply (12 samples, 0.16%)</title><rect x="183.0" y="1059.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$2 (12 samples, 0.16%)</title><rect x="183.0" y="1043.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (12 samples, 0.16%)</title><rect x="183.0" y="1027.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1197/158098953.apply (10 samples, 0.13%)</title><rect x="183.4" y="1011.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$2 (8 samples, 0.11%)</title><rect x="183.7" y="995.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (7 samples, 0.09%)</title><rect x="183.8" y="979.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (7 samples, 0.09%)</title><rect x="183.8" y="963.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (7 samples, 0.09%)</title><rect x="183.8" y="947.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (7 samples, 0.09%)</title><rect x="183.8" y="931.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (7 samples, 0.09%)</title><rect x="183.8" y="915.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1199/1354352427.apply (7 samples, 0.09%)</title><rect x="183.8" y="899.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$3 (7 samples, 0.09%)</title><rect x="183.8" y="883.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.8" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (4 samples, 0.05%)</title><rect x="184.3" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (12 samples, 0.16%)</title><rect x="184.9" y="1075.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (11 samples, 0.15%)</title><rect x="185.1" y="1059.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (5 samples, 0.07%)</title><rect x="185.3" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (3 samples, 0.04%)</title><rect x="185.6" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="185.6" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="185.6" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (3 samples, 0.04%)</title><rect x="185.6" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (3 samples, 0.04%)</title><rect x="185.6" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/View$FlatMap.iterator (2 samples, 0.03%)</title><rect x="185.7" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (5 samples, 0.07%)</title><rect x="186.0" y="1043.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (3 samples, 0.04%)</title><rect x="186.4" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="186.4" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="186.4" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (3 samples, 0.04%)</title><rect x="186.4" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (3 samples, 0.04%)</title><rect x="186.4" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (2 samples, 0.03%)</title><rect x="186.4" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.4" y="958.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (2 samples, 0.03%)</title><rect x="186.4" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.4" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (28 samples, 0.37%)</title><rect x="186.8" y="1075.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (28 samples, 0.37%)</title><rect x="186.8" y="1059.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (28 samples, 0.37%)</title><rect x="186.8" y="1043.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (28 samples, 0.37%)</title><rect x="186.8" y="1027.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.8" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (28 samples, 0.37%)</title><rect x="186.8" y="1011.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$1203/325865917.apply (28 samples, 0.37%)</title><rect x="186.8" y="995.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (27 samples, 0.36%)</title><rect x="187.0" y="979.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1303/1882308444.apply (2 samples, 0.03%)</title><rect x="187.2" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (2 samples, 0.03%)</title><rect x="187.2" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1178/858103520.apply (2 samples, 0.03%)</title><rect x="187.2" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (2 samples, 0.03%)</title><rect x="187.2" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (2 samples, 0.03%)</title><rect x="187.2" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.2" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType$$Lambda$1202/1539124506.apply (11 samples, 0.15%)</title><rect x="187.5" y="963.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType.$anonfun$map$5 (11 samples, 0.15%)</title><rect x="187.5" y="947.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2$$Lambda$1198/2044648268.apply (9 samples, 0.12%)</title><rect x="187.5" y="931.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.5" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.$anonfun$apply$1 (9 samples, 0.12%)</title><rect x="187.5" y="915.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.5" y="926.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$1183/583340548.apply (9 samples, 0.12%)</title><rect x="187.5" y="899.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.5" y="910.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (8 samples, 0.11%)</title><rect x="187.6" y="883.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.6" y="894.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1182/1410633697.apply (5 samples, 0.07%)</title><rect x="187.6" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.6" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseMarshaller$1 (5 samples, 0.07%)</title><rect x="187.6" y="851.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.6" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (5 samples, 0.07%)</title><rect x="187.6" y="835.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.6" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.getSerializedSize (2 samples, 0.03%)</title><rect x="187.9" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.9" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers$$Lambda$1166/562429815.apply (3 samples, 0.04%)</title><rect x="188.4" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers.$anonfun$byteArrayMarshaller$1 (3 samples, 0.04%)</title><rect x="188.4" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (3 samples, 0.04%)</title><rect x="188.4" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.4" y="846.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="188.6" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="830.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (2 samples, 0.03%)</title><rect x="188.6" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="188.6" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.6" y="798.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.03%)</title><rect x="188.6" y="771.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="191.6" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1201/175218166.apply (2 samples, 0.03%)</title><rect x="188.9" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$5 (2 samples, 0.03%)</title><rect x="188.9" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeAndEntityResponse (2 samples, 0.03%)</title><rect x="188.9" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.pickContentType (6 samples, 0.08%)</title><rect x="189.2" y="963.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (2 samples, 0.03%)</title><rect x="189.7" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (4 samples, 0.05%)</title><rect x="190.6" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (4 samples, 0.05%)</title><rect x="190.6" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (4 samples, 0.05%)</title><rect x="190.6" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (4 samples, 0.05%)</title><rect x="190.6" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (4 samples, 0.05%)</title><rect x="190.6" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (4 samples, 0.05%)</title><rect x="190.6" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (4 samples, 0.05%)</title><rect x="190.6" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (4 samples, 0.05%)</title><rect x="190.6" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="862.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$7.hasNext (3 samples, 0.04%)</title><rect x="190.6" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1123/134129059.apply (35 samples, 0.47%)</title><rect x="191.3" y="1219.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (35 samples, 0.47%)</title><rect x="191.3" y="1203.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1103/442266103.apply (7 samples, 0.09%)</title><rect x="191.3" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (7 samples, 0.09%)</title><rect x="191.3" y="1171.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1022/321716597.apply (6 samples, 0.08%)</title><rect x="191.4" y="1155.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (6 samples, 0.08%)</title><rect x="191.4" y="1139.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.4" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1139/329356349.apply (6 samples, 0.08%)</title><rect x="191.4" y="1123.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.4" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$4 (4 samples, 0.05%)</title><rect x="191.7" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="192.0" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="192.0" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1145/856551974.apply (28 samples, 0.37%)</title><rect x="192.4" y="1187.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (28 samples, 0.37%)</title><rect x="192.4" y="1171.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.4" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1154/1413093436.apply (19 samples, 0.25%)</title><rect x="192.5" y="1155.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.5" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (19 samples, 0.25%)</title><rect x="192.5" y="1139.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.5" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (19 samples, 0.25%)</title><rect x="192.5" y="1123.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.5" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (3 samples, 0.04%)</title><rect x="192.8" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.8" y="1118.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (3 samples, 0.04%)</title><rect x="192.8" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.8" y="1102.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.addListener (3 samples, 0.04%)</title><rect x="192.8" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.8" y="1086.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.addListener (3 samples, 0.04%)</title><rect x="192.8" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.8" y="1070.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (3 samples, 0.04%)</title><rect x="192.8" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (3 samples, 0.04%)</title><rect x="192.8" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="192.8" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.04%)</title><rect x="192.8" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.04%)</title><rect x="192.8" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="193.0" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="193.0" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="193.0" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="193.0" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="193.0" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.0" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="193.0" y="883.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="196.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="193.0" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="193.0" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="196.0" y="862.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="193.0" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="196.0" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="193.0" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.0" y="830.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="193.0" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.0" y="814.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (11 samples, 0.15%)</title><rect x="193.3" y="1107.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.3" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (7 samples, 0.09%)</title><rect x="193.3" y="1091.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (7 samples, 0.09%)</title><rect x="193.3" y="1075.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.09%)</title><rect x="193.3" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.08%)</title><rect x="193.3" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.08%)</title><rect x="193.3" y="1027.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="193.3" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="193.3" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.05%)</title><rect x="193.6" y="1011.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="193.6" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.05%)</title><rect x="193.6" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="193.6" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="193.6" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.6" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="193.8" y="931.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="196.8" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="193.8" y="915.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.8" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="193.8" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.8" y="910.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="193.8" y="883.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.8" y="894.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="193.8" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.8" y="878.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="193.8" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.8" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (2 samples, 0.03%)</title><rect x="194.4" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 0.03%)</title><rect x="194.4" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Enum.ordinal (2 samples, 0.03%)</title><rect x="194.7" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.7" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$ContentCase.forNumber (2 samples, 0.03%)</title><rect x="194.7" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.7" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.andThen (2 samples, 0.03%)</title><rect x="195.2" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.2" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/Future.andThen$ (2 samples, 0.03%)</title><rect x="195.2" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (8 samples, 0.11%)</title><rect x="195.5" y="1155.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (8 samples, 0.11%)</title><rect x="195.5" y="1139.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (6 samples, 0.08%)</title><rect x="195.5" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1151/1018458507.apply (6 samples, 0.08%)</title><rect x="195.5" y="1107.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (6 samples, 0.08%)</title><rect x="195.5" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1150/388563910.apply (6 samples, 0.08%)</title><rect x="195.5" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (6 samples, 0.08%)</title><rect x="195.5" y="1059.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (6 samples, 0.08%)</title><rect x="195.5" y="1043.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (6 samples, 0.08%)</title><rect x="195.5" y="1027.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1162/14236032.apply (6 samples, 0.08%)</title><rect x="195.5" y="1011.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (6 samples, 0.08%)</title><rect x="195.5" y="995.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (5 samples, 0.07%)</title><rect x="195.7" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (5 samples, 0.07%)</title><rect x="195.7" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (5 samples, 0.07%)</title><rect x="195.7" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (5 samples, 0.07%)</title><rect x="195.7" y="931.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (4 samples, 0.05%)</title><rect x="195.8" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (2 samples, 0.03%)</title><rect x="195.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1194/1788017632.apply (2 samples, 0.03%)</title><rect x="195.8" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$2 (2 samples, 0.03%)</title><rect x="195.8" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (2 samples, 0.03%)</title><rect x="195.8" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1197/158098953.apply (2 samples, 0.03%)</title><rect x="195.8" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$2 (2 samples, 0.03%)</title><rect x="195.8" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="196.5" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="196.5" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1149/1778082104.get$Lambda (2 samples, 0.03%)</title><rect x="196.5" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1022/321716597.apply (5 samples, 0.07%)</title><rect x="196.8" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (5 samples, 0.07%)</title><rect x="196.8" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.8" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1158/189929038.apply (4 samples, 0.05%)</title><rect x="196.9" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.9" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$6 (4 samples, 0.05%)</title><rect x="196.9" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.complete (4 samples, 0.05%)</title><rect x="196.9" y="1155.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.complete$ (4 samples, 0.05%)</title><rect x="196.9" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.complete (3 samples, 0.04%)</title><rect x="197.1" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$.apply (2 samples, 0.03%)</title><rect x="197.1" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.1" y="1118.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="197.6" y="1283.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="200.6" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (16 samples, 0.21%)</title><rect x="197.9" y="1299.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.9" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (16 samples, 0.21%)</title><rect x="197.9" y="1283.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.9" y="1294.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="198.5" y="1267.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="201.5" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (10 samples, 0.13%)</title><rect x="198.8" y="1267.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.8" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (10 samples, 0.13%)</title><rect x="198.8" y="1251.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.8" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (10 samples, 0.13%)</title><rect x="198.8" y="1235.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (9 samples, 0.12%)</title><rect x="198.8" y="1219.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (9 samples, 0.12%)</title><rect x="198.8" y="1203.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (9 samples, 0.12%)</title><rect x="198.8" y="1187.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (8 samples, 0.11%)</title><rect x="199.0" y="1171.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (8 samples, 0.11%)</title><rect x="199.0" y="1155.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (8 samples, 0.11%)</title><rect x="199.0" y="1139.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (8 samples, 0.11%)</title><rect x="199.0" y="1123.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1031/1318323835.apply (6 samples, 0.08%)</title><rect x="199.3" y="1107.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (6 samples, 0.08%)</title><rect x="199.3" y="1091.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (6 samples, 0.08%)</title><rect x="199.3" y="1075.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (5 samples, 0.07%)</title><rect x="199.5" y="1059.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (5 samples, 0.07%)</title><rect x="199.5" y="1043.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.04%)</title><rect x="199.6" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.6" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (3 samples, 0.04%)</title><rect x="199.6" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.6" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.04%)</title><rect x="199.6" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (3 samples, 0.04%)</title><rect x="199.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.6" y="990.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (3 samples, 0.04%)</title><rect x="199.6" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.6" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.04%)</title><rect x="199.6" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.6" y="958.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.04%)</title><rect x="199.6" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.6" y="942.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.04%)</title><rect x="199.6" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.04%)</title><rect x="199.6" y="899.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.6" y="910.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.04%)</title><rect x="199.6" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.6" y="894.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.04%)</title><rect x="199.6" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.04%)</title><rect x="199.6" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.6" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="199.6" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="199.6" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.6" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="199.6" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.6" y="814.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="199.6" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.6" y="798.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="199.6" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="199.6" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="199.6" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="199.6" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="199.6" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="199.6" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="199.6" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.6" y="686.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/793293778.apply (3 samples, 0.04%)</title><rect x="200.4" y="1331.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.4" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/Future.$anonfun$andThen$1 (3 samples, 0.04%)</title><rect x="200.4" y="1315.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.4" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.09%)</title><rect x="200.9" y="1331.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.9" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.09%)</title><rect x="200.9" y="1315.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.9" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.09%)</title><rect x="200.9" y="1299.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (7 samples, 0.09%)</title><rect x="200.9" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.9" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.09%)</title><rect x="200.9" y="1267.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.09%)</title><rect x="200.9" y="1251.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (6 samples, 0.08%)</title><rect x="200.9" y="1235.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (6 samples, 0.08%)</title><rect x="200.9" y="1219.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (5 samples, 0.07%)</title><rect x="200.9" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.9" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (5 samples, 0.07%)</title><rect x="200.9" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$534/1438444452.apply (5 samples, 0.07%)</title><rect x="200.9" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1$adapted (5 samples, 0.07%)</title><rect x="200.9" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1 (5 samples, 0.07%)</title><rect x="200.9" y="1139.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (4 samples, 0.05%)</title><rect x="201.1" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (4 samples, 0.05%)</title><rect x="201.1" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.04%)</title><rect x="201.1" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (3 samples, 0.04%)</title><rect x="201.1" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.04%)</title><rect x="201.1" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.03%)</title><rect x="201.2" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.2" y="1054.0"></text>
</g>
<g>
<title>scala/util/control/NonFatal$.unapply (2 samples, 0.03%)</title><rect x="202.6" y="1443.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (2,877 samples, 38.53%)</title><rect x="203.0" y="1475.0" width="454.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.0" y="1486.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (2,877 samples, 38.53%)</title><rect x="203.0" y="1459.0" width="454.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.0" y="1470.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.12%)</title><rect x="203.1" y="1443.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (9 samples, 0.12%)</title><rect x="203.1" y="1427.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.1" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.hasSystemMessages (3 samples, 0.04%)</title><rect x="203.4" y="1411.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.4" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages$ (3 samples, 0.04%)</title><rect x="203.4" y="1395.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.4" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages (3 samples, 0.04%)</title><rect x="203.4" y="1379.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.4" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.hasMessages (3 samples, 0.04%)</title><rect x="203.9" y="1411.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.9" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (3 samples, 0.04%)</title><rect x="203.9" y="1395.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.9" y="1406.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="204.1" y="1379.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="207.1" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (357 samples, 4.78%)</title><rect x="204.5" y="1443.0" width="56.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.5" y="1454.0">akka/d..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (343 samples, 4.59%)</title><rect x="204.5" y="1427.0" width="54.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.5" y="1438.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (2 samples, 0.03%)</title><rect x="204.5" y="1411.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (341 samples, 4.57%)</title><rect x="204.8" y="1411.0" width="53.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.8" y="1422.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (10 samples, 0.13%)</title><rect x="205.2" y="1395.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (10 samples, 0.13%)</title><rect x="205.2" y="1379.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (10 samples, 0.13%)</title><rect x="205.2" y="1363.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (3 samples, 0.04%)</title><rect x="205.2" y="1347.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (6 samples, 0.08%)</title><rect x="205.6" y="1347.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (5 samples, 0.07%)</title><rect x="205.8" y="1331.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$139/1322471955.apply$mcV$sp (5 samples, 0.07%)</title><rect x="205.8" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (4 samples, 0.05%)</title><rect x="206.0" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (3 samples, 0.04%)</title><rect x="206.1" y="1283.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (3 samples, 0.04%)</title><rect x="206.1" y="1267.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (3 samples, 0.04%)</title><rect x="206.1" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="206.3" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="206.3" y="1219.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="206.3" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (2 samples, 0.03%)</title><rect x="206.7" y="1395.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (2 samples, 0.03%)</title><rect x="206.7" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (2 samples, 0.03%)</title><rect x="206.7" y="1363.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (214 samples, 2.87%)</title><rect x="207.1" y="1395.0" width="33.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.1" y="1406.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (77 samples, 1.03%)</title><rect x="207.4" y="1379.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (69 samples, 0.92%)</title><rect x="207.5" y="1363.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (50 samples, 0.67%)</title><rect x="207.5" y="1347.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.5" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (50 samples, 0.67%)</title><rect x="207.5" y="1331.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (39 samples, 0.52%)</title><rect x="207.7" y="1315.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (38 samples, 0.51%)</title><rect x="207.9" y="1299.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (15 samples, 0.20%)</title><rect x="207.9" y="1283.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (15 samples, 0.20%)</title><rect x="207.9" y="1267.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (4 samples, 0.05%)</title><rect x="208.2" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (4 samples, 0.05%)</title><rect x="208.2" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.04%)</title><rect x="208.3" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.3" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.03%)</title><rect x="208.5" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="208.5" y="1187.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="211.5" y="1198.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="208.5" y="1171.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="211.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="208.5" y="1155.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="211.5" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="208.5" y="1139.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.5" y="1150.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="208.5" y="1123.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="211.5" y="1134.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="208.5" y="1107.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="211.5" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="208.5" y="1091.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.5" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="208.5" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="211.5" y="1086.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="208.5" y="1059.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.5" y="1070.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="208.5" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.5" y="1054.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="208.5" y="1027.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.5" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="208.5" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="211.5" y="1022.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="208.8" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.8" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (7 samples, 0.09%)</title><rect x="209.1" y="1251.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (6 samples, 0.08%)</title><rect x="209.1" y="1235.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (6 samples, 0.08%)</title><rect x="209.1" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (6 samples, 0.08%)</title><rect x="209.1" y="1203.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (5 samples, 0.07%)</title><rect x="209.3" y="1187.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.3" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.05%)</title><rect x="209.4" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$132/1153455185.apply$mcV$sp (4 samples, 0.05%)</title><rect x="209.4" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (4 samples, 0.05%)</title><rect x="209.4" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (4 samples, 0.05%)</title><rect x="209.4" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (4 samples, 0.05%)</title><rect x="209.4" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (2 samples, 0.03%)</title><rect x="209.7" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.7" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="209.7" y="1075.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$547/678324713.apply$mcV$sp (2 samples, 0.03%)</title><rect x="209.7" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (22 samples, 0.29%)</title><rect x="210.2" y="1283.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (22 samples, 0.29%)</title><rect x="210.2" y="1267.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.2" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (6 samples, 0.08%)</title><rect x="210.4" y="1251.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.4" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (5 samples, 0.07%)</title><rect x="210.5" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.07%)</title><rect x="210.5" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.07%)</title><rect x="210.5" y="1203.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="210.5" y="1187.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="213.5" y="1198.0"></text>
</g>
<g>
<title>__write (5 samples, 0.07%)</title><rect x="210.5" y="1171.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="213.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="210.5" y="1155.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.5" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="210.5" y="1139.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.5" y="1150.0"></text>
</g>
<g>
<title>sys_write (5 samples, 0.07%)</title><rect x="210.5" y="1123.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.5" y="1134.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.07%)</title><rect x="210.5" y="1107.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.5" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.05%)</title><rect x="210.5" y="1091.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.5" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.05%)</title><rect x="210.5" y="1075.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.5" y="1086.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.05%)</title><rect x="210.5" y="1059.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.5" y="1070.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="210.9" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="213.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (9 samples, 0.12%)</title><rect x="211.5" y="1251.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (9 samples, 0.12%)</title><rect x="211.5" y="1235.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (9 samples, 0.12%)</title><rect x="211.5" y="1219.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (7 samples, 0.09%)</title><rect x="211.8" y="1203.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (7 samples, 0.09%)</title><rect x="211.8" y="1187.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.8" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (6 samples, 0.08%)</title><rect x="212.0" y="1171.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.0" y="1182.0"></text>
</g>
<g>
<title>setsockopt (2 samples, 0.03%)</title><rect x="212.0" y="1155.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="215.0" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="212.0" y="1139.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="215.0" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="212.0" y="1123.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.0" y="1134.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.03%)</title><rect x="212.0" y="1107.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.0" y="1118.0"></text>
</g>
<g>
<title>socket (4 samples, 0.05%)</title><rect x="212.3" y="1155.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="215.3" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="212.3" y="1139.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="215.3" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="212.3" y="1123.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.3" y="1134.0"></text>
</g>
<g>
<title>sys_socket (4 samples, 0.05%)</title><rect x="212.3" y="1107.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.3" y="1118.0"></text>
</g>
<g>
<title>__sock_create (3 samples, 0.04%)</title><rect x="212.3" y="1091.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="215.3" y="1102.0"></text>
</g>
<g>
<title>inet6_create (2 samples, 0.03%)</title><rect x="212.3" y="1075.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.3" y="1086.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.03%)</title><rect x="212.3" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="215.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (2 samples, 0.03%)</title><rect x="213.4" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.setAccessible (3 samples, 0.04%)</title><rect x="213.9" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (3 samples, 0.04%)</title><rect x="213.9" y="1299.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.9" y="1310.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (2 samples, 0.03%)</title><rect x="214.0" y="1283.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="217.0" y="1294.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (2 samples, 0.03%)</title><rect x="214.0" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="217.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (7 samples, 0.09%)</title><rect x="214.3" y="1315.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (7 samples, 0.09%)</title><rect x="214.3" y="1299.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (7 samples, 0.09%)</title><rect x="214.3" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (4 samples, 0.05%)</title><rect x="214.6" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (4 samples, 0.05%)</title><rect x="214.6" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (4 samples, 0.05%)</title><rect x="214.6" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder$ofRef.addOne (2 samples, 0.03%)</title><rect x="215.0" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder$ofRef.addOne (2 samples, 0.03%)</title><rect x="215.0" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.ensureSize (2 samples, 0.03%)</title><rect x="215.0" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder$ofRef.resize (2 samples, 0.03%)</title><rect x="215.0" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/NoArgsReflectConstructor.produce (5 samples, 0.07%)</title><rect x="215.4" y="1347.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.4" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (5 samples, 0.07%)</title><rect x="215.4" y="1331.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.07%)</title><rect x="215.4" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (5 samples, 0.07%)</title><rect x="215.4" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (5 samples, 0.07%)</title><rect x="215.4" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (5 samples, 0.07%)</title><rect x="215.4" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.4" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.&lt;init&gt; (4 samples, 0.05%)</title><rect x="215.6" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.6" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/ClusterSettings.MultiDataCenter (2 samples, 0.03%)</title><rect x="215.6" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.6" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/ClusterSettings.MultiDataCenter$lzycompute$1 (2 samples, 0.03%)</title><rect x="215.6" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.6" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/Gossip$.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="215.9" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.9" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/Gossip$.$lessinit$greater$default$3 (2 samples, 0.03%)</title><rect x="215.9" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.9" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/VectorClock$.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="215.9" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="215.9" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="215.9" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="215.9" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="215.9" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="215.9" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (14 samples, 0.19%)</title><rect x="216.2" y="1347.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.2" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$$Lambda$921/2118571592.apply (4 samples, 0.05%)</title><rect x="216.5" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.5" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$.$anonfun$props$1 (4 samples, 0.05%)</title><rect x="216.5" y="1315.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="216.9" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="216.9" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="216.9" y="1267.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="216.9" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="216.9" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="216.9" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.9" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="216.9" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="216.9" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.03%)</title><rect x="216.9" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$482/2147243919.apply (8 samples, 0.11%)</title><rect x="217.2" y="1331.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (6 samples, 0.08%)</title><rect x="217.5" y="1315.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (6 samples, 0.08%)</title><rect x="217.5" y="1299.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (3 samples, 0.04%)</title><rect x="217.5" y="1283.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="218.0" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="218.0" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="218.0" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (3 samples, 0.04%)</title><rect x="219.1" y="1363.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (3 samples, 0.04%)</title><rect x="219.1" y="1347.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.1" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (2 samples, 0.03%)</title><rect x="219.2" y="1331.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/428746855.invoke_MT (2 samples, 0.03%)</title><rect x="219.2" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.checkCustomized (2 samples, 0.03%)</title><rect x="219.2" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (133 samples, 1.78%)</title><rect x="219.7" y="1379.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.7" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (131 samples, 1.75%)</title><rect x="220.0" y="1363.0" width="20.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (131 samples, 1.75%)</title><rect x="220.0" y="1347.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.0" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (131 samples, 1.75%)</title><rect x="220.0" y="1331.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (3 samples, 0.04%)</title><rect x="220.2" y="1315.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (2 samples, 0.03%)</title><rect x="220.3" y="1299.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (2 samples, 0.03%)</title><rect x="220.3" y="1283.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (11 samples, 0.15%)</title><rect x="220.7" y="1315.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (10 samples, 0.13%)</title><rect x="220.7" y="1299.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (10 samples, 0.13%)</title><rect x="220.7" y="1283.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (10 samples, 0.13%)</title><rect x="220.7" y="1267.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (10 samples, 0.13%)</title><rect x="220.7" y="1251.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (10 samples, 0.13%)</title><rect x="220.7" y="1235.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (9 samples, 0.12%)</title><rect x="220.7" y="1219.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (9 samples, 0.12%)</title><rect x="220.7" y="1203.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.7" y="1214.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (9 samples, 0.12%)</title><rect x="220.7" y="1187.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.7" y="1198.0"></text>
</g>
<g>
<title>akka/remote/MessageSerializer$.serializeForArtery (3 samples, 0.04%)</title><rect x="220.7" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.7" y="1182.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.toBinary (3 samples, 0.04%)</title><rect x="220.7" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.7" y="1166.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.serializeHandshakeReq (2 samples, 0.03%)</title><rect x="220.8" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.8" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/EnvelopeBufferPool.acquire (5 samples, 0.07%)</title><rect x="221.1" y="1171.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocateDirect (5 samples, 0.07%)</title><rect x="221.1" y="1155.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="221.1" y="1139.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (5 samples, 0.07%)</title><rect x="221.1" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (5 samples, 0.07%)</title><rect x="221.1" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory0 (5 samples, 0.07%)</title><rect x="221.1" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.1" y="1102.0"></text>
</g>
<g>
<title>Unsafe_SetMemory0 (5 samples, 0.07%)</title><rect x="221.1" y="1075.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="224.1" y="1086.0"></text>
</g>
<g>
<title>Copy::fill_to_memory_atomic(void*, unsigned long, unsigned char) (5 samples, 0.07%)</title><rect x="221.1" y="1059.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="224.1" y="1070.0"></text>
</g>
<g>
<title>async_page_fault (5 samples, 0.07%)</title><rect x="221.1" y="1043.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.1" y="1054.0"></text>
</g>
<g>
<title>do_async_page_fault (5 samples, 0.07%)</title><rect x="221.1" y="1027.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="224.1" y="1038.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.07%)</title><rect x="221.1" y="1011.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.1" y="1022.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.07%)</title><rect x="221.1" y="995.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="224.1" y="1006.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="221.4" y="979.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="224.4" y="990.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.04%)</title><rect x="221.4" y="963.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.4" y="974.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="221.4" y="947.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="224.4" y="958.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="221.4" y="931.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="224.4" y="942.0"></text>
</g>
<g>
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="221.4" y="915.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.4" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (115 samples, 1.54%)</title><rect x="222.4" y="1315.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (110 samples, 1.47%)</title><rect x="222.7" y="1299.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (45 samples, 0.60%)</title><rect x="222.7" y="1283.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.preStart (2 samples, 0.03%)</title><rect x="223.0" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (2 samples, 0.03%)</title><rect x="223.0" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="226.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (2 samples, 0.03%)</title><rect x="223.0" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.getTimerAsyncCallback (2 samples, 0.03%)</title><rect x="223.0" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getAsyncCallback (2 samples, 0.03%)</title><rect x="223.0" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.preStart (2 samples, 0.03%)</title><rect x="223.3" y="1267.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback (2 samples, 0.03%)</title><rect x="223.3" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback$lzycompute (2 samples, 0.03%)</title><rect x="223.3" y="1235.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getAsyncCallback (2 samples, 0.03%)</title><rect x="223.3" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (8 samples, 0.11%)</title><rect x="224.0" y="1267.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (3 samples, 0.04%)</title><rect x="224.0" y="1251.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (5 samples, 0.07%)</title><rect x="224.4" y="1251.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (2 samples, 0.03%)</title><rect x="224.4" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.update (2 samples, 0.03%)</title><rect x="224.9" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (5 samples, 0.07%)</title><rect x="225.2" y="1267.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.isStageCompleted (5 samples, 0.07%)</title><rect x="225.2" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.preStart (3 samples, 0.04%)</title><rect x="225.6" y="1235.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (17 samples, 0.23%)</title><rect x="226.3" y="1267.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (8 samples, 0.11%)</title><rect x="226.7" y="1251.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (8 samples, 0.11%)</title><rect x="226.7" y="1235.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="226.7" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="226.7" y="1203.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$540/1035254785.apply$mcV$sp (3 samples, 0.04%)</title><rect x="226.7" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$watch$1 (2 samples, 0.03%)</title><rect x="226.8" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.03%)</title><rect x="226.8" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (4 samples, 0.05%)</title><rect x="227.1" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (4 samples, 0.05%)</title><rect x="227.1" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (4 samples, 0.05%)</title><rect x="227.1" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (4 samples, 0.05%)</title><rect x="227.1" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (4 samples, 0.05%)</title><rect x="227.1" y="1155.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.04%)</title><rect x="227.3" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="227.3" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.04%)</title><rect x="227.3" y="1107.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="227.3" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.04%)</title><rect x="227.3" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.04%)</title><rect x="227.3" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.04%)</title><rect x="227.3" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.04%)</title><rect x="227.3" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="227.3" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="227.3" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="227.3" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="227.3" y="963.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="230.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="227.3" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="227.3" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="230.3" y="942.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (7 samples, 0.09%)</title><rect x="227.9" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (7 samples, 0.09%)</title><rect x="227.9" y="1235.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (7 samples, 0.09%)</title><rect x="227.9" y="1219.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (5 samples, 0.07%)</title><rect x="227.9" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (5 samples, 0.07%)</title><rect x="227.9" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (4 samples, 0.05%)</title><rect x="228.1" y="1171.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.randomName (2 samples, 0.03%)</title><rect x="228.1" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.randomName$ (2 samples, 0.03%)</title><rect x="228.1" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.1" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="228.1" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="231.1" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="228.1" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="231.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (2 samples, 0.03%)</title><rect x="228.4" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="228.4" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RestartWithBackoffLogic.preStart (2 samples, 0.03%)</title><rect x="229.0" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RestartWithBackoffFlow$$anon$1.startGraph (2 samples, 0.03%)</title><rect x="229.0" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.0" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport$$Lambda$1328/394045641.apply (2 samples, 0.03%)</title><rect x="229.0" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.0" y="1246.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.$anonfun$outboundTransportSink$5 (2 samples, 0.03%)</title><rect x="229.0" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.0" y="1230.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.flow$1 (2 samples, 0.03%)</title><rect x="229.0" y="1203.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (2 samples, 0.03%)</title><rect x="229.3" y="1267.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.03%)</title><rect x="229.3" y="1251.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$496/813114021.apply (2 samples, 0.03%)</title><rect x="229.3" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (2 samples, 0.03%)</title><rect x="229.3" y="1219.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (2 samples, 0.03%)</title><rect x="229.3" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (2 samples, 0.03%)</title><rect x="229.3" y="1187.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (2 samples, 0.03%)</title><rect x="229.3" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (20 samples, 0.27%)</title><rect x="229.8" y="1283.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (20 samples, 0.27%)</title><rect x="229.8" y="1267.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (5 samples, 0.07%)</title><rect x="230.0" y="1251.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.0" y="1262.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (3 samples, 0.04%)</title><rect x="230.3" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.3" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (3 samples, 0.04%)</title><rect x="230.3" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="230.4" y="1203.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (14 samples, 0.19%)</title><rect x="230.8" y="1251.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (14 samples, 0.19%)</title><rect x="230.8" y="1235.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (14 samples, 0.19%)</title><rect x="230.8" y="1219.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (12 samples, 0.16%)</title><rect x="231.1" y="1203.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.1" y="1214.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (9 samples, 0.12%)</title><rect x="231.4" y="1187.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.4" y="1198.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (9 samples, 0.12%)</title><rect x="231.4" y="1171.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (8 samples, 0.11%)</title><rect x="231.6" y="1155.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (8 samples, 0.11%)</title><rect x="231.6" y="1139.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (4 samples, 0.05%)</title><rect x="231.7" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (4 samples, 0.05%)</title><rect x="231.7" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (2 samples, 0.03%)</title><rect x="232.0" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (3 samples, 0.04%)</title><rect x="232.3" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (2 samples, 0.03%)</title><rect x="232.5" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.fillNull (2 samples, 0.03%)</title><rect x="232.5" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.5" y="1102.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.03%)</title><rect x="232.5" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (45 samples, 0.60%)</title><rect x="233.0" y="1283.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (45 samples, 0.60%)</title><rect x="233.0" y="1267.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (3 samples, 0.04%)</title><rect x="233.5" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (3 samples, 0.04%)</title><rect x="233.5" y="1235.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (26 samples, 0.35%)</title><rect x="233.9" y="1251.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (3 samples, 0.04%)</title><rect x="234.2" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (2 samples, 0.03%)</title><rect x="234.4" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="234.4" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="234.4" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="234.4" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="234.4" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="234.4" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="234.4" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="234.4" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="234.4" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (21 samples, 0.28%)</title><rect x="234.7" y="1235.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (20 samples, 0.27%)</title><rect x="234.7" y="1219.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (4 samples, 0.05%)</title><rect x="234.7" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (4 samples, 0.05%)</title><rect x="234.7" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (4 samples, 0.05%)</title><rect x="234.7" y="1171.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (4 samples, 0.05%)</title><rect x="234.7" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (4 samples, 0.05%)</title><rect x="234.7" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="234.9" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.9" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (16 samples, 0.21%)</title><rect x="235.3" y="1203.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.3" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (15 samples, 0.20%)</title><rect x="235.5" y="1187.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.5" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (15 samples, 0.20%)</title><rect x="235.5" y="1171.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.5" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (14 samples, 0.19%)</title><rect x="235.7" y="1155.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$.scala$concurrent$impl$Promise$$resolve (2 samples, 0.03%)</title><rect x="235.7" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (12 samples, 0.16%)</title><rect x="236.0" y="1139.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (11 samples, 0.15%)</title><rect x="236.1" y="1123.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.1" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (11 samples, 0.15%)</title><rect x="236.1" y="1107.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (11 samples, 0.15%)</title><rect x="236.1" y="1091.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (11 samples, 0.15%)</title><rect x="236.1" y="1075.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (11 samples, 0.15%)</title><rect x="236.1" y="1059.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (9 samples, 0.12%)</title><rect x="236.3" y="1043.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (9 samples, 0.12%)</title><rect x="236.3" y="1027.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (8 samples, 0.11%)</title><rect x="236.5" y="1011.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.5" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (8 samples, 0.11%)</title><rect x="236.5" y="995.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.5" y="1006.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.09%)</title><rect x="236.6" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.6" y="990.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.09%)</title><rect x="236.6" y="963.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.6" y="974.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.09%)</title><rect x="236.6" y="947.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.6" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (7 samples, 0.09%)</title><rect x="236.6" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.09%)</title><rect x="236.6" y="915.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.09%)</title><rect x="236.6" y="899.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.6" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (3 samples, 0.04%)</title><rect x="237.1" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (3 samples, 0.04%)</title><rect x="237.1" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.1" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="237.1" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.1" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.04%)</title><rect x="237.1" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.1" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.04%)</title><rect x="237.1" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.1" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="237.2" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="237.2" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="237.2" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="237.2" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="237.2" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="237.2" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="237.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.2" y="718.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (8 samples, 0.11%)</title><rect x="238.0" y="1251.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (3 samples, 0.04%)</title><rect x="238.4" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (3 samples, 0.04%)</title><rect x="238.4" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="238.5" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.5" y="1214.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="239.5" y="1251.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="242.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.03%)</title><rect x="240.2" y="1299.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleFailure (2 samples, 0.03%)</title><rect x="240.9" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleFailure$ (2 samples, 0.03%)</title><rect x="240.9" y="1379.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (4 samples, 0.05%)</title><rect x="241.2" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (4 samples, 0.05%)</title><rect x="241.2" y="1379.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (4 samples, 0.05%)</title><rect x="241.2" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (2 samples, 0.03%)</title><rect x="241.4" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (30 samples, 0.40%)</title><rect x="241.8" y="1395.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (27 samples, 0.36%)</title><rect x="241.8" y="1379.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (26 samples, 0.35%)</title><rect x="242.0" y="1363.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (12 samples, 0.16%)</title><rect x="242.0" y="1347.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (12 samples, 0.16%)</title><rect x="242.0" y="1331.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (11 samples, 0.15%)</title><rect x="242.1" y="1315.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (11 samples, 0.15%)</title><rect x="242.1" y="1299.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (11 samples, 0.15%)</title><rect x="242.1" y="1283.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (11 samples, 0.15%)</title><rect x="242.1" y="1267.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="242.1" y="1251.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.13%)</title><rect x="242.1" y="1235.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="242.1" y="1219.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.13%)</title><rect x="242.1" y="1203.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.13%)</title><rect x="242.1" y="1187.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.13%)</title><rect x="242.1" y="1171.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.13%)</title><rect x="242.1" y="1155.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.13%)</title><rect x="242.1" y="1139.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.13%)</title><rect x="242.1" y="1123.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.13%)</title><rect x="242.1" y="1107.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.1" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.12%)</title><rect x="242.3" y="1091.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="245.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.12%)</title><rect x="242.3" y="1075.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="245.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.12%)</title><rect x="242.3" y="1059.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.3" y="1070.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.11%)</title><rect x="242.5" y="1043.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.5" y="1054.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.09%)</title><rect x="242.6" y="1027.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="245.6" y="1038.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.09%)</title><rect x="242.6" y="1011.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.6" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.08%)</title><rect x="242.8" y="995.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.8" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.08%)</title><rect x="242.8" y="979.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.8" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.08%)</title><rect x="242.8" y="963.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.8" y="974.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (12 samples, 0.16%)</title><rect x="243.9" y="1347.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.&lt;init&gt; (2 samples, 0.03%)</title><rect x="244.0" y="1331.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (9 samples, 0.12%)</title><rect x="244.4" y="1331.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (9 samples, 0.12%)</title><rect x="244.4" y="1315.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (9 samples, 0.12%)</title><rect x="244.4" y="1299.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (4 samples, 0.05%)</title><rect x="244.7" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (4 samples, 0.05%)</title><rect x="244.7" y="1267.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (4 samples, 0.05%)</title><rect x="244.7" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.7" y="1262.0"></text>
</g>
<g>
<title>scala/Predef$.assert (3 samples, 0.04%)</title><rect x="244.8" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.8" y="1246.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="244.8" y="1219.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="247.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.createMailbox (2 samples, 0.03%)</title><rect x="245.3" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.replaceWith (2 samples, 0.03%)</title><rect x="245.8" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.locked (2 samples, 0.03%)</title><rect x="245.8" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (3 samples, 0.04%)</title><rect x="246.1" y="1379.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (3 samples, 0.04%)</title><rect x="246.1" y="1363.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (3 samples, 0.04%)</title><rect x="246.1" y="1347.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (36 samples, 0.48%)</title><rect x="246.6" y="1395.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (36 samples, 0.48%)</title><rect x="246.6" y="1379.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (36 samples, 0.48%)</title><rect x="246.6" y="1363.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setReceiveTimeout (2 samples, 0.03%)</title><rect x="246.9" y="1347.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout$ (2 samples, 0.03%)</title><rect x="246.9" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (31 samples, 0.42%)</title><rect x="247.2" y="1347.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (5 samples, 0.07%)</title><rect x="247.4" y="1331.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.4" y="1342.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (5 samples, 0.07%)</title><rect x="247.4" y="1315.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.4" y="1326.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (2 samples, 0.03%)</title><rect x="247.4" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (2 samples, 0.03%)</title><rect x="247.4" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (3 samples, 0.04%)</title><rect x="247.7" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (3 samples, 0.04%)</title><rect x="247.7" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (3 samples, 0.04%)</title><rect x="247.7" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (3 samples, 0.04%)</title><rect x="247.7" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (2 samples, 0.03%)</title><rect x="247.8" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (2 samples, 0.03%)</title><rect x="247.8" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (7 samples, 0.09%)</title><rect x="248.1" y="1331.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (7 samples, 0.09%)</title><rect x="248.1" y="1315.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.1" y="1326.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (7 samples, 0.09%)</title><rect x="248.1" y="1299.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.1" y="1310.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (6 samples, 0.08%)</title><rect x="248.1" y="1283.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.setAccessible (4 samples, 0.05%)</title><rect x="248.5" y="1267.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (4 samples, 0.05%)</title><rect x="248.5" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.5" y="1262.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (3 samples, 0.04%)</title><rect x="248.5" y="1235.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="251.5" y="1246.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_next() (2 samples, 0.03%)</title><rect x="248.6" y="1219.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="251.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (5 samples, 0.07%)</title><rect x="249.7" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (5 samples, 0.07%)</title><rect x="249.7" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (4 samples, 0.05%)</title><rect x="249.7" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (2 samples, 0.03%)</title><rect x="249.9" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.9" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (2 samples, 0.03%)</title><rect x="249.9" y="1267.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (2 samples, 0.03%)</title><rect x="249.9" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (2 samples, 0.03%)</title><rect x="249.9" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (9 samples, 0.12%)</title><rect x="250.5" y="1331.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (9 samples, 0.12%)</title><rect x="250.5" y="1315.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (9 samples, 0.12%)</title><rect x="250.5" y="1299.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (9 samples, 0.12%)</title><rect x="250.5" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (7 samples, 0.09%)</title><rect x="250.5" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.08%)</title><rect x="250.7" y="1251.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.07%)</title><rect x="250.7" y="1235.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (5 samples, 0.07%)</title><rect x="250.7" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="250.8" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="250.8" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="251.6" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="251.6" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$Lambda$614/1297685155.get$Lambda (2 samples, 0.03%)</title><rect x="251.6" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (40 samples, 0.54%)</title><rect x="252.3" y="1395.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (40 samples, 0.54%)</title><rect x="252.3" y="1379.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (40 samples, 0.54%)</title><rect x="252.3" y="1363.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (22 samples, 0.29%)</title><rect x="252.4" y="1347.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (22 samples, 0.29%)</title><rect x="252.4" y="1331.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (22 samples, 0.29%)</title><rect x="252.4" y="1315.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (12 samples, 0.16%)</title><rect x="253.0" y="1299.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (12 samples, 0.16%)</title><rect x="253.0" y="1283.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (12 samples, 0.16%)</title><rect x="253.0" y="1267.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (12 samples, 0.16%)</title><rect x="253.0" y="1251.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (12 samples, 0.16%)</title><rect x="253.0" y="1235.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (11 samples, 0.15%)</title><rect x="253.0" y="1219.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (11 samples, 0.15%)</title><rect x="253.0" y="1203.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (11 samples, 0.15%)</title><rect x="253.0" y="1187.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (11 samples, 0.15%)</title><rect x="253.0" y="1171.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (11 samples, 0.15%)</title><rect x="253.0" y="1155.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (10 samples, 0.13%)</title><rect x="253.0" y="1139.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (9 samples, 0.12%)</title><rect x="253.2" y="1123.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (4 samples, 0.05%)</title><rect x="253.2" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (4 samples, 0.05%)</title><rect x="253.2" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (4 samples, 0.05%)</title><rect x="253.2" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="253.4" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (3 samples, 0.04%)</title><rect x="253.4" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="253.4" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (3 samples, 0.04%)</title><rect x="253.4" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="253.4" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="253.4" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="253.4" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (5 samples, 0.07%)</title><rect x="253.8" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (4 samples, 0.05%)</title><rect x="254.0" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (4 samples, 0.05%)</title><rect x="254.0" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (4 samples, 0.05%)</title><rect x="254.0" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.04%)</title><rect x="254.2" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="254.2" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.04%)</title><rect x="254.2" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="254.2" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.04%)</title><rect x="254.2" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="254.2" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.04%)</title><rect x="254.2" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.04%)</title><rect x="254.2" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.03%)</title><rect x="254.3" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="254.3" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.3" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/StreamSupervisor.supervisorStrategy (3 samples, 0.04%)</title><rect x="255.1" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.1" y="1310.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="255.6" y="1299.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="258.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (3 samples, 0.04%)</title><rect x="256.1" y="1347.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.04%)</title><rect x="256.1" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.04%)</title><rect x="256.1" y="1315.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.04%)</title><rect x="256.1" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.04%)</title><rect x="256.1" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.get (2 samples, 0.03%)</title><rect x="256.1" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (2 samples, 0.03%)</title><rect x="256.5" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (2 samples, 0.03%)</title><rect x="256.5" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (4 samples, 0.05%)</title><rect x="256.8" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.8" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.05%)</title><rect x="256.8" y="1331.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$653/1827930265.apply$mcV$sp (4 samples, 0.05%)</title><rect x="256.8" y="1315.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (4 samples, 0.05%)</title><rect x="256.8" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="257.2" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (5 samples, 0.07%)</title><rect x="257.8" y="1347.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (4 samples, 0.05%)</title><rect x="257.9" y="1331.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.getNode (3 samples, 0.04%)</title><rect x="258.1" y="1315.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (6 samples, 0.08%)</title><rect x="258.7" y="1427.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.7" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (6 samples, 0.08%)</title><rect x="258.7" y="1411.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (6 samples, 0.08%)</title><rect x="258.7" y="1395.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.7" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (3 samples, 0.04%)</title><rect x="259.1" y="1379.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.1" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (3 samples, 0.04%)</title><rect x="259.1" y="1363.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.1" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (4 samples, 0.05%)</title><rect x="259.7" y="1427.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.7" y="1438.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="260.0" y="1411.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="263.0" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.isClosed (2 samples, 0.03%)</title><rect x="260.3" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.3" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (2 samples, 0.03%)</title><rect x="260.3" y="1411.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.3" y="1422.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (2 samples, 0.03%)</title><rect x="260.3" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.3" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (2,510 samples, 33.61%)</title><rect x="260.9" y="1443.0" width="396.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.9" y="1454.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (2,438 samples, 32.65%)</title><rect x="261.9" y="1427.0" width="385.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.9" y="1438.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeoutIfNeeded (9 samples, 0.12%)</title><rect x="262.5" y="1411.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded$ (9 samples, 0.12%)</title><rect x="262.5" y="1395.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded (8 samples, 0.11%)</title><rect x="262.5" y="1379.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (6 samples, 0.08%)</title><rect x="262.5" y="1363.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (6 samples, 0.08%)</title><rect x="262.5" y="1347.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (6 samples, 0.08%)</title><rect x="262.5" y="1331.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.akka$actor$dungeon$ReceiveTimeout$$receiveTimeoutData_$eq (2 samples, 0.03%)</title><rect x="262.5" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.5" y="1326.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="263.0" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.hasTimeoutData (2 samples, 0.03%)</title><rect x="263.5" y="1363.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (24 samples, 0.32%)</title><rect x="264.0" y="1411.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (24 samples, 0.32%)</title><rect x="264.0" y="1395.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (24 samples, 0.32%)</title><rect x="264.0" y="1379.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (10 samples, 0.13%)</title><rect x="264.0" y="1363.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (10 samples, 0.13%)</title><rect x="264.0" y="1347.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (10 samples, 0.13%)</title><rect x="264.0" y="1331.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (5 samples, 0.07%)</title><rect x="264.6" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (4 samples, 0.05%)</title><rect x="264.6" y="1299.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (4 samples, 0.05%)</title><rect x="264.6" y="1283.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (4 samples, 0.05%)</title><rect x="264.6" y="1267.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (4 samples, 0.05%)</title><rect x="264.6" y="1251.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (4 samples, 0.05%)</title><rect x="264.6" y="1235.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.6" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (3 samples, 0.04%)</title><rect x="264.7" y="1219.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.7" y="1230.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (3 samples, 0.04%)</title><rect x="264.7" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.7" y="1214.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (3 samples, 0.04%)</title><rect x="264.7" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (3 samples, 0.04%)</title><rect x="264.7" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.7" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (2 samples, 0.03%)</title><rect x="265.8" y="1363.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.8" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (2 samples, 0.03%)</title><rect x="266.3" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.3" y="1374.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.09%)</title><rect x="266.6" y="1363.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="269.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.currentMessage_$eq (4 samples, 0.05%)</title><rect x="267.7" y="1411.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (2,397 samples, 32.10%)</title><rect x="268.4" y="1411.0" width="378.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.4" y="1422.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.aroundReceive (89 samples, 1.19%)</title><rect x="268.5" y="1395.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (89 samples, 1.19%)</title><rect x="268.5" y="1379.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (89 samples, 1.19%)</title><rect x="268.5" y="1363.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.5" y="1374.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (89 samples, 1.19%)</title><rect x="268.5" y="1347.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.5" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$anonfun$tryingToJoin$1.applyOrElse (89 samples, 1.19%)</title><rect x="268.5" y="1331.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.5" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.join (89 samples, 1.19%)</title><rect x="268.5" y="1315.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.5" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (75 samples, 1.00%)</title><rect x="268.5" y="1299.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.5" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.createRapidClusterBuilder$1 (18 samples, 0.24%)</title><rect x="268.5" y="1283.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.5" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="268.5" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.5" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/Internal.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="268.5" y="1251.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.5" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.setMetadata (14 samples, 0.19%)</title><rect x="268.9" y="1267.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.9" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.putAllMetadata (13 samples, 0.17%)</title><rect x="268.9" y="1251.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.9" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.internalGetMutableMetadata (13 samples, 0.17%)</title><rect x="268.9" y="1235.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.9" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$MetadataDefaultEntryHolder.&lt;clinit&gt; (12 samples, 0.16%)</title><rect x="269.0" y="1219.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.0" y="1230.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Remoting.&lt;clinit&gt; (12 samples, 0.16%)</title><rect x="269.0" y="1203.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.0" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.internalBuildGeneratedFileFrom (12 samples, 0.16%)</title><rect x="269.0" y="1187.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.0" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.parseFrom (7 samples, 0.09%)</title><rect x="269.2" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.2" y="1182.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (7 samples, 0.09%)</title><rect x="269.2" y="1155.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="1166.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (7 samples, 0.09%)</title><rect x="269.2" y="1139.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.2" y="1150.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (7 samples, 0.09%)</title><rect x="269.2" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.2" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (7 samples, 0.09%)</title><rect x="269.2" y="1107.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.2" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (7 samples, 0.09%)</title><rect x="269.2" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.2" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto$1.parsePartialFrom (7 samples, 0.09%)</title><rect x="269.2" y="1075.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.2" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto$1.parsePartialFrom (7 samples, 0.09%)</title><rect x="269.2" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="1070.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.&lt;init&gt; (7 samples, 0.09%)</title><rect x="269.2" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.2" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.&lt;init&gt; (7 samples, 0.09%)</title><rect x="269.2" y="1027.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.2" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 0.04%)</title><rect x="269.2" y="1011.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="272.2" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (3 samples, 0.04%)</title><rect x="269.2" y="995.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="272.2" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (3 samples, 0.04%)</title><rect x="269.2" y="979.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="272.2" y="990.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (3 samples, 0.04%)</title><rect x="269.2" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="272.2" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (3 samples, 0.04%)</title><rect x="269.2" y="947.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="272.2" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (3 samples, 0.04%)</title><rect x="269.2" y="931.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="272.2" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (2 samples, 0.03%)</title><rect x="269.2" y="915.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="272.2" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (2 samples, 0.03%)</title><rect x="269.2" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.2" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="269.2" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="272.2" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (4 samples, 0.05%)</title><rect x="269.6" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.6" y="1022.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="269.6" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.6" y="1006.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="269.6" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.6" y="990.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (3 samples, 0.04%)</title><rect x="269.6" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.6" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (3 samples, 0.04%)</title><rect x="269.6" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.6" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.buildFrom (3 samples, 0.04%)</title><rect x="270.3" y="1171.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.3" y="1182.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.&lt;init&gt; (3 samples, 0.04%)</title><rect x="270.3" y="1155.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.3" y="1166.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.getPackage (2 samples, 0.03%)</title><rect x="270.4" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.4" y="1150.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.getPackage (2 samples, 0.03%)</title><rect x="270.4" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.4" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.isValidUtf8 (2 samples, 0.03%)</title><rect x="270.4" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.4" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="270.4" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="271.1" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="271.1" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="271.1" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="271.1" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="271.1" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="271.1" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.1" y="1198.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="271.1" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="271.1" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.03%)</title><rect x="271.1" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.1" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (56 samples, 0.75%)</title><rect x="271.5" y="1283.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.5" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (56 samples, 0.75%)</title><rect x="271.5" y="1267.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.5" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (9 samples, 0.12%)</title><rect x="271.5" y="1251.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.bindAndHandle (2 samples, 0.03%)</title><rect x="271.7" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteResult$.route2HandlerFlow$default$7 (2 samples, 0.03%)</title><rect x="272.2" y="1235.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RejectionHandler$.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="272.2" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.03%)</title><rect x="272.5" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply$ (2 samples, 0.03%)</title><rect x="272.5" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply (2 samples, 0.03%)</title><rect x="272.5" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.03%)</title><rect x="272.5" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.03%)</title><rect x="272.5" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/SettingsCompanionImpl.apply (2 samples, 0.03%)</title><rect x="272.5" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (2 samples, 0.03%)</title><rect x="272.5" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (2 samples, 0.03%)</title><rect x="272.5" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.5" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (46 samples, 0.62%)</title><rect x="273.0" y="1251.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.0" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.03%)</title><rect x="273.0" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.0" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.03%)</title><rect x="273.0" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="1230.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.createClusterFromJoinResponse (40 samples, 0.54%)</title><rect x="273.3" y="1235.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.3" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.&lt;init&gt; (10 samples, 0.13%)</title><rect x="273.3" y="1219.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.3" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.07%)</title><rect x="274.1" y="1203.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.1" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1250/829546233.accept (5 samples, 0.07%)</title><rect x="274.1" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.1" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$new$2 (5 samples, 0.07%)</title><rect x="274.1" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.1" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$Lambda$989/1800512062.accept (5 samples, 0.07%)</title><rect x="274.1" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.1" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.$anonfun$join$1 (5 samples, 0.07%)</title><rect x="274.1" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.1" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.onViewChange (5 samples, 0.07%)</title><rect x="274.1" y="1123.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (2 samples, 0.03%)</title><rect x="274.2" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (2 samples, 0.03%)</title><rect x="274.2" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (2 samples, 0.03%)</title><rect x="274.2" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="274.2" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="274.2" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="274.2" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="274.2" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="274.2" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="274.2" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="274.2" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="274.2" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.03%)</title><rect x="274.5" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.5" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$Lambda$1252/1794489637.apply (2 samples, 0.03%)</title><rect x="274.5" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.$anonfun$onViewChange$1 (2 samples, 0.03%)</title><rect x="274.5" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.5" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="274.9" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.9" y="1230.0"></text>
</g>
<g>
<title>net/openhft/hashing/LongHashFunction.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="274.9" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.9" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.&lt;init&gt; (26 samples, 0.35%)</title><rect x="275.2" y="1219.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.2" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (26 samples, 0.35%)</title><rect x="275.2" y="1203.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.2" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (26 samples, 0.35%)</title><rect x="275.2" y="1187.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.2" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (26 samples, 0.35%)</title><rect x="275.2" y="1171.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.2" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.35%)</title><rect x="275.2" y="1155.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.2" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (20 samples, 0.27%)</title><rect x="275.3" y="1139.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.3" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (20 samples, 0.27%)</title><rect x="275.3" y="1123.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (14 samples, 0.19%)</title><rect x="276.3" y="1107.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.3" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1225/367264585.apply (2 samples, 0.03%)</title><rect x="276.6" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.6" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.computeHash (2 samples, 0.03%)</title><rect x="276.6" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.6" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (7 samples, 0.09%)</title><rect x="276.9" y="1091.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.9" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (2 samples, 0.03%)</title><rect x="277.4" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.4" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (2 samples, 0.03%)</title><rect x="277.7" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="278.0" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.0" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (3 samples, 0.04%)</title><rect x="279.6" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.6" y="1246.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.successfulAsList (2 samples, 0.03%)</title><rect x="279.8" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.8" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.&lt;init&gt; (10 samples, 0.13%)</title><rect x="280.4" y="1299.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.path (3 samples, 0.04%)</title><rect x="280.7" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.path$ (3 samples, 0.04%)</title><rect x="280.7" y="1267.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.path (3 samples, 0.04%)</title><rect x="280.7" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.pathPrefix (2 samples, 0.03%)</title><rect x="280.7" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.pathPrefix$ (2 samples, 0.03%)</title><rect x="280.7" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.pathPrefix (2 samples, 0.03%)</title><rect x="280.7" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.rawPathPrefix (2 samples, 0.03%)</title><rect x="280.7" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.rawPathPrefix$ (2 samples, 0.03%)</title><rect x="280.7" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.rawPathPrefix (2 samples, 0.03%)</title><rect x="280.7" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.&lt;clinit&gt; (2 samples, 0.03%)</title><rect x="280.7" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.05%)</title><rect x="281.3" y="1283.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.05%)</title><rect x="281.3" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.05%)</title><rect x="281.3" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.05%)</title><rect x="281.3" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (4 samples, 0.05%)</title><rect x="281.3" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (4 samples, 0.05%)</title><rect x="281.3" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.3" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 0.05%)</title><rect x="281.3" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 0.05%)</title><rect x="281.3" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 0.05%)</title><rect x="281.3" y="1155.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.04%)</title><rect x="281.5" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.04%)</title><rect x="281.5" y="1123.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.04%)</title><rect x="281.5" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.04%)</title><rect x="281.5" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.04%)</title><rect x="281.5" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.04%)</title><rect x="281.5" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.5" y="1070.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="281.5" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="281.5" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.03%)</title><rect x="281.5" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="281.5" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="281.5" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="281.5" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="281.5" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="281.5" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="281.5" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.5" y="926.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="281.5" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.5" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="281.5" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.03%)</title><rect x="281.5" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.5" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.03%)</title><rect x="281.5" y="851.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="284.5" y="862.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.03%)</title><rect x="281.5" y="835.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="284.5" y="846.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.03%)</title><rect x="281.5" y="819.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="284.5" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.03%)</title><rect x="281.5" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="284.5" y="814.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.03%)</title><rect x="281.5" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="284.5" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.03%)</title><rect x="281.5" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="284.5" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (2 samples, 0.03%)</title><rect x="281.5" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="284.5" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.03%)</title><rect x="281.5" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="284.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="282.3" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="282.3" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="282.3" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="282.3" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="282.3" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="282.3" y="1219.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.3" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (18 samples, 0.24%)</title><rect x="282.8" y="1395.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (18 samples, 0.24%)</title><rect x="282.8" y="1379.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (18 samples, 0.24%)</title><rect x="282.8" y="1363.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.8" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (18 samples, 0.24%)</title><rect x="282.8" y="1347.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.8" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (15 samples, 0.20%)</title><rect x="282.8" y="1331.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.8" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (15 samples, 0.20%)</title><rect x="282.8" y="1315.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.8" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffLeader (2 samples, 0.03%)</title><rect x="282.9" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.9" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/MembershipState.leader (2 samples, 0.03%)</title><rect x="282.9" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.9" y="1294.0"></text>
</g>
<g>
<title>akka/cluster/MembershipState.leaderOf (2 samples, 0.03%)</title><rect x="282.9" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filter (2 samples, 0.03%)</title><rect x="282.9" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filter (2 samples, 0.03%)</title><rect x="282.9" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.filterKeys (2 samples, 0.03%)</title><rect x="282.9" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.fk$2 (2 samples, 0.03%)</title><rect x="282.9" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.9" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffMemberEvents (5 samples, 0.07%)</title><rect x="283.2" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.groupBy (3 samples, 0.04%)</title><rect x="283.2" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy$ (3 samples, 0.04%)</title><rect x="283.2" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy (3 samples, 0.04%)</title><rect x="283.2" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="283.4" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="283.4" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="283.4" y="1203.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffRolesLeader (3 samples, 0.04%)</title><rect x="284.0" y="1299.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (2 samples, 0.03%)</title><rect x="284.8" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (2 samples, 0.03%)</title><rect x="284.8" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (2 samples, 0.03%)</title><rect x="284.8" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.8" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$Lambda$1258/1225204251.apply (2 samples, 0.03%)</title><rect x="284.8" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.8" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.$anonfun$publishChanges$1$adapted (2 samples, 0.03%)</title><rect x="284.8" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.8" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.$anonfun$publishChanges$1 (2 samples, 0.03%)</title><rect x="284.8" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.8" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publish (2 samples, 0.03%)</title><rect x="284.8" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.8" y="1214.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (2 samples, 0.03%)</title><rect x="284.8" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.8" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (2 samples, 0.03%)</title><rect x="284.8" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.8" y="1182.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (2 samples, 0.03%)</title><rect x="284.8" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set2.foreach (2 samples, 0.03%)</title><rect x="284.8" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.8" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/1508181426.apply (2 samples, 0.03%)</title><rect x="284.8" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.8" y="1134.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (2 samples, 0.03%)</title><rect x="284.8" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.8" y="1118.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (2 samples, 0.03%)</title><rect x="284.8" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.8" y="1102.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (2 samples, 0.03%)</title><rect x="284.8" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.8" y="1086.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (2 samples, 0.03%)</title><rect x="284.8" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.8" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.subscribe (3 samples, 0.04%)</title><rect x="285.1" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.1" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.sendCurrentClusterState (3 samples, 0.04%)</title><rect x="285.1" y="1315.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.1" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1.aroundReceive (3 samples, 0.04%)</title><rect x="285.6" y="1395.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.04%)</title><rect x="285.6" y="1379.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.04%)</title><rect x="285.6" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.6" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1$$anonfun$receive$1.applyOrElse (3 samples, 0.04%)</title><rect x="285.6" y="1347.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.6" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (7 samples, 0.09%)</title><rect x="286.1" y="1395.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (7 samples, 0.09%)</title><rect x="286.1" y="1379.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (7 samples, 0.09%)</title><rect x="286.1" y="1363.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1374.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (7 samples, 0.09%)</title><rect x="286.1" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.1" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (7 samples, 0.09%)</title><rect x="286.1" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (3 samples, 0.04%)</title><rect x="286.1" y="1315.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (3 samples, 0.04%)</title><rect x="286.1" y="1299.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (3 samples, 0.04%)</title><rect x="286.1" y="1283.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (3 samples, 0.04%)</title><rect x="286.1" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (3 samples, 0.04%)</title><rect x="286.1" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (3 samples, 0.04%)</title><rect x="286.1" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (3 samples, 0.04%)</title><rect x="286.1" y="1219.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (3 samples, 0.04%)</title><rect x="286.1" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (3 samples, 0.04%)</title><rect x="286.1" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (3 samples, 0.04%)</title><rect x="286.1" y="1171.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="286.1" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="286.1" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.1" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.1" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.1" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.1" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.1" y="974.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.init (3 samples, 0.04%)</title><rect x="286.6" y="1315.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.6" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState$.init (3 samples, 0.04%)</title><rect x="286.6" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.map (2 samples, 0.03%)</title><rect x="286.7" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedMapOps.map$ (2 samples, 0.03%)</title><rect x="286.7" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedMapOps.map (2 samples, 0.03%)</title><rect x="286.7" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.7" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState$$$Lambda$1265/1446024019.apply (2 samples, 0.03%)</title><rect x="286.7" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.7" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState$.$anonfun$init$3 (2 samples, 0.03%)</title><rect x="286.7" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.union (2 samples, 0.03%)</title><rect x="286.7" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/SetOps.union$ (2 samples, 0.03%)</title><rect x="286.7" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/SetOps.union (2 samples, 0.03%)</title><rect x="286.7" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="286.7" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="286.7" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="286.7" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.7" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.7" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.7" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="286.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.7" y="1070.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (3 samples, 0.04%)</title><rect x="287.2" y="1395.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.04%)</title><rect x="287.2" y="1379.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.04%)</title><rect x="287.2" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.2" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (3 samples, 0.04%)</title><rect x="287.2" y="1347.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="1358.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (2 samples, 0.03%)</title><rect x="287.3" y="1331.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (432 samples, 5.79%)</title><rect x="287.7" y="1395.0" width="68.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.7" y="1406.0">akka/ht..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (432 samples, 5.79%)</title><rect x="287.7" y="1379.0" width="68.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.7" y="1390.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (432 samples, 5.79%)</title><rect x="287.7" y="1363.0" width="68.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.7" y="1374.0">akka/ac..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (432 samples, 5.79%)</title><rect x="287.7" y="1347.0" width="68.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.7" y="1358.0">akka/ht..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (5 samples, 0.07%)</title><rect x="288.0" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.0" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.foreach (2 samples, 0.03%)</title><rect x="288.4" y="1315.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (408 samples, 5.46%)</title><rect x="288.8" y="1331.0" width="64.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.8" y="1342.0">akka/ht..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (391 samples, 5.24%)</title><rect x="288.8" y="1315.0" width="61.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.8" y="1326.0">akka/h..</text>
</g>
<g>
<title>akka/event/BusLogging.debug (2 samples, 0.03%)</title><rect x="288.8" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.8" y="1310.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (2 samples, 0.03%)</title><rect x="288.8" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.8" y="1294.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (2 samples, 0.03%)</title><rect x="288.8" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.03%)</title><rect x="288.8" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (2 samples, 0.03%)</title><rect x="288.8" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (2 samples, 0.03%)</title><rect x="289.1" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.1" y="1310.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.03%)</title><rect x="289.1" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$$anon$1.genString (2 samples, 0.03%)</title><rect x="289.1" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$$anon$1.genString (2 samples, 0.03%)</title><rect x="289.1" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$$anon$1.genString (2 samples, 0.03%)</title><rect x="289.1" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$.apply (3 samples, 0.04%)</title><rect x="289.4" y="1299.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage.&lt;init&gt; (3 samples, 0.04%)</title><rect x="289.4" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (287 samples, 3.84%)</title><rect x="290.2" y="1299.0" width="45.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.2" y="1310.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (286 samples, 3.83%)</title><rect x="290.3" y="1283.0" width="45.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.3" y="1294.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (51 samples, 0.68%)</title><rect x="290.8" y="1267.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (41 samples, 0.55%)</title><rect x="291.1" y="1251.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (40 samples, 0.54%)</title><rect x="291.1" y="1235.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (25 samples, 0.33%)</title><rect x="291.4" y="1219.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow$.bidirectionalIdleTimeout (3 samples, 0.04%)</title><rect x="291.4" y="1203.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow$.fromGraph (2 samples, 0.03%)</title><rect x="291.6" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow$.fromFlows (2 samples, 0.03%)</title><rect x="291.9" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow$.fromFlowsMat (2 samples, 0.03%)</title><rect x="291.9" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (16 samples, 0.21%)</title><rect x="292.2" y="1203.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (16 samples, 0.21%)</title><rect x="292.2" y="1187.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (4 samples, 0.05%)</title><rect x="292.6" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (4 samples, 0.05%)</title><rect x="292.6" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (10 samples, 0.13%)</title><rect x="293.2" y="1171.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (9 samples, 0.12%)</title><rect x="293.2" y="1155.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (5 samples, 0.07%)</title><rect x="293.3" y="1139.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (3 samples, 0.04%)</title><rect x="293.5" y="1123.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.toMap (3 samples, 0.04%)</title><rect x="293.5" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (2 samples, 0.03%)</title><rect x="293.7" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (2 samples, 0.03%)</title><rect x="293.7" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (2 samples, 0.03%)</title><rect x="293.7" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.mapError (4 samples, 0.05%)</title><rect x="294.8" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError$ (4 samples, 0.05%)</title><rect x="294.8" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError (3 samples, 0.04%)</title><rect x="294.9" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError.&lt;init&gt; (3 samples, 0.04%)</title><rect x="294.9" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SimpleLinearGraphStage.&lt;init&gt; (3 samples, 0.04%)</title><rect x="294.9" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="295.1" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="295.1" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.1" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="295.1" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (3 samples, 0.04%)</title><rect x="295.4" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (3 samples, 0.04%)</title><rect x="295.4" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.initialAttributes (2 samples, 0.03%)</title><rect x="295.6" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (8 samples, 0.11%)</title><rect x="295.9" y="1219.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (8 samples, 0.11%)</title><rect x="295.9" y="1203.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (3 samples, 0.04%)</title><rect x="295.9" y="1187.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.03%)</title><rect x="295.9" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.9" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="295.9" y="1155.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="298.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.03%)</title><rect x="296.3" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map2.updated (2 samples, 0.03%)</title><rect x="296.3" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map2.updated (2 samples, 0.03%)</title><rect x="296.3" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (3 samples, 0.04%)</title><rect x="296.7" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (3 samples, 0.04%)</title><rect x="296.7" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (3 samples, 0.04%)</title><rect x="296.7" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (3 samples, 0.04%)</title><rect x="296.7" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.joinMat (7 samples, 0.09%)</title><rect x="297.8" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (3 samples, 0.04%)</title><rect x="297.9" y="1235.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.03%)</title><rect x="297.9" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (2 samples, 0.03%)</title><rect x="298.6" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="298.6" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (217 samples, 2.91%)</title><rect x="298.9" y="1267.0" width="34.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="1278.0">ak..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (217 samples, 2.91%)</title><rect x="298.9" y="1251.0" width="34.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="1262.0">ak..</text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$.apply (3 samples, 0.04%)</title><rect x="299.2" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi.&lt;init&gt; (2 samples, 0.03%)</title><rect x="299.2" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Inlet$.apply (2 samples, 0.03%)</title><rect x="299.2" y="1203.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (10 samples, 0.13%)</title><rect x="299.8" y="1235.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (10 samples, 0.13%)</title><rect x="299.8" y="1219.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (3 samples, 0.04%)</title><rect x="300.1" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (5 samples, 0.07%)</title><rect x="300.6" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="300.6" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="300.6" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (201 samples, 2.69%)</title><rect x="301.4" y="1235.0" width="31.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.4" y="1246.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (200 samples, 2.68%)</title><rect x="301.6" y="1219.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.6" y="1230.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (200 samples, 2.68%)</title><rect x="301.6" y="1203.0" width="31.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.6" y="1214.0">ak..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$411/1230750343.apply (191 samples, 2.56%)</title><rect x="301.7" y="1187.0" width="30.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.7" y="1198.0">ak..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (191 samples, 2.56%)</title><rect x="301.7" y="1171.0" width="30.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.7" y="1182.0">ak..</text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (77 samples, 1.03%)</title><rect x="302.4" y="1155.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (75 samples, 1.00%)</title><rect x="302.5" y="1139.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (41 samples, 0.55%)</title><rect x="302.7" y="1123.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (26 samples, 0.35%)</title><rect x="302.8" y="1107.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (14 samples, 0.19%)</title><rect x="302.8" y="1091.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (2 samples, 0.03%)</title><rect x="303.0" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (6 samples, 0.08%)</title><rect x="303.5" y="1075.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (3 samples, 0.04%)</title><rect x="303.5" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (3 samples, 0.04%)</title><rect x="303.5" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (3 samples, 0.04%)</title><rect x="303.5" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (2 samples, 0.03%)</title><rect x="303.6" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.03%)</title><rect x="303.6" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (3 samples, 0.04%)</title><rect x="303.9" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (3 samples, 0.04%)</title><rect x="303.9" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (3 samples, 0.04%)</title><rect x="303.9" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (3 samples, 0.04%)</title><rect x="303.9" y="1011.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.apply (3 samples, 0.04%)</title><rect x="303.9" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.9" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.04%)</title><rect x="303.9" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.9" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.04%)</title><rect x="303.9" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.9" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.04%)</title><rect x="303.9" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14$$Lambda$433/613559442.apply (3 samples, 0.04%)</title><rect x="303.9" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.$anonfun$apply$14 (3 samples, 0.04%)</title><rect x="303.9" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.accept (3 samples, 0.04%)</title><rect x="303.9" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept$ (3 samples, 0.04%)</title><rect x="303.9" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept (3 samples, 0.04%)</title><rect x="303.9" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.9" y="878.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (3 samples, 0.04%)</title><rect x="304.6" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.6" y="1086.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (3 samples, 0.04%)</title><rect x="304.6" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.6" y="1070.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (3 samples, 0.04%)</title><rect x="304.6" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.6" y="1054.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C$.apply (2 samples, 0.03%)</title><rect x="304.6" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.6" y="1038.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.&lt;init&gt; (2 samples, 0.03%)</title><rect x="304.6" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.6" y="1022.0"></text>
</g>
<g>
<title>akka/util/CompactByteString.&lt;init&gt; (2 samples, 0.03%)</title><rect x="304.6" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.6" y="1006.0"></text>
</g>
<g>
<title>akka/util/ByteString.&lt;init&gt; (2 samples, 0.03%)</title><rect x="304.6" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (11 samples, 0.15%)</title><rect x="305.2" y="1091.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (3 samples, 0.04%)</title><rect x="305.2" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (3 samples, 0.04%)</title><rect x="305.2" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (3 samples, 0.04%)</title><rect x="305.2" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (3 samples, 0.04%)</title><rect x="305.2" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.2" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (3 samples, 0.04%)</title><rect x="305.2" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.apply (2 samples, 0.03%)</title><rect x="305.4" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.4" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="305.4" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.4" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="305.4" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.4" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="305.4" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19$$Lambda$429/746930682.apply (2 samples, 0.03%)</title><rect x="305.4" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.4" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.$anonfun$apply$19 (2 samples, 0.03%)</title><rect x="305.4" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.connection (2 samples, 0.03%)</title><rect x="305.4" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection$ (2 samples, 0.03%)</title><rect x="305.4" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.4" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection (2 samples, 0.03%)</title><rect x="305.4" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.4" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.rec$16 (2 samples, 0.03%)</title><rect x="305.4" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (2 samples, 0.03%)</title><rect x="305.4" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.4" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (2 samples, 0.03%)</title><rect x="305.4" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.4" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (2 samples, 0.03%)</title><rect x="305.4" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.4" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (7 samples, 0.09%)</title><rect x="305.7" y="1075.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (7 samples, 0.09%)</title><rect x="305.7" y="1059.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (7 samples, 0.09%)</title><rect x="305.7" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (7 samples, 0.09%)</title><rect x="305.7" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (6 samples, 0.08%)</title><rect x="305.7" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.7" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (5 samples, 0.07%)</title><rect x="305.8" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.8" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (5 samples, 0.07%)</title><rect x="305.8" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.8" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (5 samples, 0.07%)</title><rect x="305.8" y="963.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$431/446462323.apply (5 samples, 0.07%)</title><rect x="305.8" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (5 samples, 0.07%)</title><rect x="305.8" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (5 samples, 0.07%)</title><rect x="305.8" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (5 samples, 0.07%)</title><rect x="305.8" y="899.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (5 samples, 0.07%)</title><rect x="305.8" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.rec$2 (4 samples, 0.05%)</title><rect x="306.0" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.0" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minusdirective (4 samples, 0.05%)</title><rect x="306.0" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.0" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective$ (4 samples, 0.05%)</title><rect x="306.0" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.0" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective (4 samples, 0.05%)</title><rect x="306.0" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.0" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.delta$minusseconds (2 samples, 0.03%)</title><rect x="306.1" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.1" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.delta$minusseconds$ (2 samples, 0.03%)</title><rect x="306.1" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.delta$minusseconds (2 samples, 0.03%)</title><rect x="306.1" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.longNumberCappedAtIntMaxValue (2 samples, 0.03%)</title><rect x="306.1" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.longNumberCappedAtIntMaxValue$ (2 samples, 0.03%)</title><rect x="306.1" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.longNumberCappedAtIntMaxValue (2 samples, 0.03%)</title><rect x="306.1" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.1" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (12 samples, 0.16%)</title><rect x="306.9" y="1107.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (12 samples, 0.16%)</title><rect x="306.9" y="1091.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (11 samples, 0.15%)</title><rect x="306.9" y="1075.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (2 samples, 0.03%)</title><rect x="307.1" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (8 samples, 0.11%)</title><rect x="307.4" y="1059.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (7 samples, 0.09%)</title><rect x="307.6" y="1043.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.apply (4 samples, 0.05%)</title><rect x="307.6" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.6" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.05%)</title><rect x="307.6" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.05%)</title><rect x="307.6" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.6" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.05%)</title><rect x="307.6" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19$$Lambda$429/746930682.apply (4 samples, 0.05%)</title><rect x="307.6" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.$anonfun$apply$19 (4 samples, 0.05%)</title><rect x="307.6" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.connection (4 samples, 0.05%)</title><rect x="307.6" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection$ (4 samples, 0.05%)</title><rect x="307.6" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection (4 samples, 0.05%)</title><rect x="307.6" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.rec$16 (3 samples, 0.04%)</title><rect x="307.6" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (3 samples, 0.04%)</title><rect x="307.6" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.6" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (2 samples, 0.03%)</title><rect x="307.7" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.7" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (2 samples, 0.03%)</title><rect x="307.7" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="308.4" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="308.4" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.4" y="1022.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="308.8" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.8" y="1118.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="308.8" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.8" y="1102.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (2 samples, 0.03%)</title><rect x="308.8" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$.specializedHeaderValueParsers (3 samples, 0.04%)</title><rect x="309.1" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.apply (3 samples, 0.04%)</title><rect x="309.1" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.apply (3 samples, 0.04%)</title><rect x="309.1" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (2 samples, 0.03%)</title><rect x="309.1" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (2 samples, 0.03%)</title><rect x="309.1" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="309.1" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="309.1" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (15 samples, 0.20%)</title><rect x="309.6" y="1123.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (15 samples, 0.20%)</title><rect x="309.6" y="1107.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (15 samples, 0.20%)</title><rect x="309.6" y="1091.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (15 samples, 0.20%)</title><rect x="309.6" y="1075.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (15 samples, 0.20%)</title><rect x="309.6" y="1059.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (15 samples, 0.20%)</title><rect x="309.6" y="1043.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.from (15 samples, 0.20%)</title><rect x="309.6" y="1027.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (15 samples, 0.20%)</title><rect x="309.6" y="1011.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (15 samples, 0.20%)</title><rect x="309.6" y="995.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (15 samples, 0.20%)</title><rect x="309.6" y="979.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.6" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (14 samples, 0.19%)</title><rect x="309.6" y="963.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (14 samples, 0.19%)</title><rect x="309.6" y="947.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (14 samples, 0.19%)</title><rect x="309.6" y="931.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (10 samples, 0.13%)</title><rect x="310.3" y="915.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$$$Lambda$422/1961315513.apply (9 samples, 0.12%)</title><rect x="310.3" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.$anonfun$prime$2 (8 samples, 0.11%)</title><rect x="310.4" y="883.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.4" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="310.4" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.4" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.lookupParser (2 samples, 0.03%)</title><rect x="310.4" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$62.lookup (2 samples, 0.03%)</title><rect x="310.4" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.4" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.03%)</title><rect x="310.4" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.4" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="310.4" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.4" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="310.4" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.4" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.headerValueCacheLimit (5 samples, 0.07%)</title><rect x="310.9" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.9" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.getOrElse (5 samples, 0.07%)</title><rect x="310.9" y="851.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.9" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/Node$.indexFrom (2 samples, 0.03%)</title><rect x="311.0" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.0" y="846.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.03%)</title><rect x="311.4" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.4" y="846.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (9 samples, 0.12%)</title><rect x="312.0" y="1123.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (9 samples, 0.12%)</title><rect x="312.0" y="1107.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (9 samples, 0.12%)</title><rect x="312.0" y="1091.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (9 samples, 0.12%)</title><rect x="312.0" y="1075.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (9 samples, 0.12%)</title><rect x="312.0" y="1059.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (9 samples, 0.12%)</title><rect x="312.0" y="1043.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (9 samples, 0.12%)</title><rect x="312.0" y="1027.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (9 samples, 0.12%)</title><rect x="312.0" y="1011.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (9 samples, 0.12%)</title><rect x="312.0" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (5 samples, 0.07%)</title><rect x="312.0" y="979.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.0" y="990.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (5 samples, 0.07%)</title><rect x="312.0" y="963.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.0" y="974.0"></text>
</g>
<g>
<title>java/util/TimSort.&lt;init&gt; (2 samples, 0.03%)</title><rect x="312.0" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.copyToArray (3 samples, 0.04%)</title><rect x="312.8" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (3 samples, 0.04%)</title><rect x="312.8" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.8" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (3 samples, 0.04%)</title><rect x="312.8" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.8" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.copyToArray (3 samples, 0.04%)</title><rect x="312.8" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (3 samples, 0.04%)</title><rect x="312.8" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.8" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (2 samples, 0.03%)</title><rect x="312.9" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.filter (4 samples, 0.05%)</title><rect x="313.4" y="1123.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.filter (4 samples, 0.05%)</title><rect x="313.4" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$$$Lambda$421/831170633.apply (3 samples, 0.04%)</title><rect x="313.4" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (2 samples, 0.03%)</title><rect x="314.0" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (2 samples, 0.03%)</title><rect x="314.0" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (2 samples, 0.03%)</title><rect x="314.0" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (2 samples, 0.03%)</title><rect x="314.0" y="1075.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (2 samples, 0.03%)</title><rect x="314.0" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (2 samples, 0.03%)</title><rect x="314.0" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="314.5" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$init$ (3 samples, 0.04%)</title><rect x="314.5" y="1139.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.completionHandling_$eq (2 samples, 0.03%)</title><rect x="314.7" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$.apply (11 samples, 0.15%)</title><rect x="315.0" y="1155.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.&lt;init&gt; (11 samples, 0.15%)</title><rect x="315.0" y="1139.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape$.apply (8 samples, 0.11%)</title><rect x="315.0" y="1123.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.&lt;init&gt; (3 samples, 0.04%)</title><rect x="315.0" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (3 samples, 0.04%)</title><rect x="315.0" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape$$Lambda$415/844628400.apply (3 samples, 0.04%)</title><rect x="315.0" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.$anonfun$new$1$adapted (3 samples, 0.04%)</title><rect x="315.0" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.$anonfun$new$1 (3 samples, 0.04%)</title><rect x="315.0" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/FanOutShape.newOutlet (2 samples, 0.03%)</title><rect x="315.0" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.$colon$plus (2 samples, 0.03%)</title><rect x="315.0" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.$colon$plus$ (2 samples, 0.03%)</title><rect x="315.0" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.$colon$plus (2 samples, 0.03%)</title><rect x="315.0" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.appended (2 samples, 0.03%)</title><rect x="315.0" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.appended (2 samples, 0.03%)</title><rect x="315.0" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (5 samples, 0.07%)</title><rect x="315.5" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (5 samples, 0.07%)</title><rect x="315.5" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (5 samples, 0.07%)</title><rect x="315.5" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (5 samples, 0.07%)</title><rect x="315.5" y="1059.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (5 samples, 0.07%)</title><rect x="315.5" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (5 samples, 0.07%)</title><rect x="315.5" y="1027.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (3 samples, 0.04%)</title><rect x="315.6" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.tabulate (3 samples, 0.04%)</title><rect x="316.3" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSeqFactory.tabulate$ (3 samples, 0.04%)</title><rect x="316.3" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSeqFactory.tabulate (2 samples, 0.03%)</title><rect x="316.4" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.collect (3 samples, 0.04%)</title><rect x="316.7" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.collect$ (3 samples, 0.04%)</title><rect x="316.7" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.collect (3 samples, 0.04%)</title><rect x="316.7" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (3 samples, 0.04%)</title><rect x="316.7" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (3 samples, 0.04%)</title><rect x="316.7" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (3 samples, 0.04%)</title><rect x="316.7" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.flatMapConcat (4 samples, 0.05%)</title><rect x="317.2" y="1155.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.flatMapConcat$ (4 samples, 0.05%)</title><rect x="317.2" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.flatMapConcat (3 samples, 0.04%)</title><rect x="317.4" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.03%)</title><rect x="317.5" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.03%)</title><rect x="317.5" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (2 samples, 0.03%)</title><rect x="317.5" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="317.5" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="317.5" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.map (6 samples, 0.08%)</title><rect x="317.8" y="1155.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.map$ (6 samples, 0.08%)</title><rect x="317.8" y="1139.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.map (6 samples, 0.08%)</title><rect x="317.8" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map.&lt;init&gt; (2 samples, 0.03%)</title><rect x="317.8" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (4 samples, 0.05%)</title><rect x="318.2" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (4 samples, 0.05%)</title><rect x="318.2" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (4 samples, 0.05%)</title><rect x="318.2" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.mapConcat (5 samples, 0.07%)</title><rect x="318.8" y="1155.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapConcat$ (5 samples, 0.07%)</title><rect x="318.8" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapConcat (5 samples, 0.07%)</title><rect x="318.8" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.statefulMapConcat (5 samples, 0.07%)</title><rect x="318.8" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.statefulMapConcat$ (5 samples, 0.07%)</title><rect x="318.8" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.statefulMapConcat (4 samples, 0.05%)</title><rect x="318.9" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (3 samples, 0.04%)</title><rect x="319.1" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (3 samples, 0.04%)</title><rect x="319.1" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (3 samples, 0.04%)</title><rect x="319.1" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.03%)</title><rect x="319.3" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.mapError (4 samples, 0.05%)</title><rect x="319.6" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError$ (4 samples, 0.05%)</title><rect x="319.6" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError (3 samples, 0.04%)</title><rect x="319.7" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.03%)</title><rect x="319.9" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.03%)</title><rect x="319.9" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (2 samples, 0.03%)</title><rect x="319.9" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="319.9" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (2 samples, 0.03%)</title><rect x="319.9" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.9" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.addMatCompose (2 samples, 0.03%)</title><rect x="319.9" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.named (5 samples, 0.07%)</title><rect x="320.2" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (5 samples, 0.07%)</title><rect x="320.2" y="1139.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (3 samples, 0.04%)</title><rect x="320.5" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.5" y="1134.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (2 samples, 0.03%)</title><rect x="320.5" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (40 samples, 0.54%)</title><rect x="321.2" y="1155.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (3 samples, 0.04%)</title><rect x="321.3" y="1139.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (3 samples, 0.04%)</title><rect x="321.3" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/FanInShape.deepCopy (3 samples, 0.04%)</title><rect x="321.3" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.construct (2 samples, 0.03%)</title><rect x="321.3" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="321.3" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.deepCopy (2 samples, 0.03%)</title><rect x="321.8" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.deepCopy (2 samples, 0.03%)</title><rect x="321.8" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/FanOutShape.deepCopy (2 samples, 0.03%)</title><rect x="321.8" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.map (2 samples, 0.03%)</title><rect x="321.8" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (2 samples, 0.03%)</title><rect x="321.8" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map (2 samples, 0.03%)</title><rect x="321.8" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (6 samples, 0.08%)</title><rect x="322.1" y="1139.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (5 samples, 0.07%)</title><rect x="322.3" y="1123.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (15 samples, 0.20%)</title><rect x="323.1" y="1139.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (5 samples, 0.07%)</title><rect x="323.5" y="1123.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (5 samples, 0.07%)</title><rect x="323.5" y="1107.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="323.5" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="323.7" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.7" y="1086.0"></text>
</g>
<g>
<title>scala/Array$.apply (2 samples, 0.03%)</title><rect x="323.7" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="324.0" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/InPort.hashCode (2 samples, 0.03%)</title><rect x="324.0" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.03%)</title><rect x="324.0" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (4 samples, 0.05%)</title><rect x="324.6" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (4 samples, 0.05%)</title><rect x="324.6" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (3 samples, 0.04%)</title><rect x="324.8" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="324.8" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (5 samples, 0.07%)</title><rect x="325.7" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.03%)</title><rect x="326.1" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (2 samples, 0.03%)</title><rect x="326.1" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.$plus$plus$eq (5 samples, 0.07%)</title><rect x="326.7" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$plus$eq$ (5 samples, 0.07%)</title><rect x="326.7" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$plus$eq (5 samples, 0.07%)</title><rect x="326.7" y="1107.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addAll (5 samples, 0.07%)</title><rect x="326.7" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addAll (5 samples, 0.07%)</title><rect x="326.7" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="326.7" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.sizeHint (3 samples, 0.04%)</title><rect x="327.0" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (26 samples, 0.35%)</title><rect x="327.5" y="1155.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (26 samples, 0.35%)</title><rect x="327.5" y="1139.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (25 samples, 0.33%)</title><rect x="327.6" y="1123.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (4 samples, 0.05%)</title><rect x="327.6" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.03%)</title><rect x="327.8" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (20 samples, 0.27%)</title><rect x="328.3" y="1107.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (19 samples, 0.25%)</title><rect x="328.4" y="1091.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (11 samples, 0.15%)</title><rect x="328.4" y="1075.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (4 samples, 0.05%)</title><rect x="328.4" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (3 samples, 0.04%)</title><rect x="329.4" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (3 samples, 0.04%)</title><rect x="329.4" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (3 samples, 0.04%)</title><rect x="329.4" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="329.5" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="329.5" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="329.5" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="329.9" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="329.9" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="329.9" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (6 samples, 0.08%)</title><rect x="330.5" y="1075.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (6 samples, 0.08%)</title><rect x="330.5" y="1059.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (6 samples, 0.08%)</title><rect x="330.5" y="1043.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (6 samples, 0.08%)</title><rect x="330.5" y="1027.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (6 samples, 0.08%)</title><rect x="330.5" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (5 samples, 0.07%)</title><rect x="330.6" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndRemoveValue (2 samples, 0.03%)</title><rect x="330.8" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="331.1" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="331.1" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.1" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="331.6" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="331.6" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.createGraph (8 samples, 0.11%)</title><rect x="331.9" y="1187.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.result (7 samples, 0.09%)</title><rect x="332.1" y="1171.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toSet (4 samples, 0.05%)</title><rect x="332.2" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toSet$ (4 samples, 0.05%)</title><rect x="332.2" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toSet (4 samples, 0.05%)</title><rect x="332.2" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (4 samples, 0.05%)</title><rect x="332.2" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (4 samples, 0.05%)</title><rect x="332.2" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (4 samples, 0.05%)</title><rect x="332.2" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (4 samples, 0.05%)</title><rect x="332.2" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addOne (4 samples, 0.05%)</title><rect x="332.2" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addOne (3 samples, 0.04%)</title><rect x="332.4" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.equals (2 samples, 0.03%)</title><rect x="332.9" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/Set.equals$ (2 samples, 0.03%)</title><rect x="332.9" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Set.equals (2 samples, 0.03%)</title><rect x="332.9" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.subsetOf (2 samples, 0.03%)</title><rect x="332.9" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/SetOps.subsetOf$ (2 samples, 0.03%)</title><rect x="332.9" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.9" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="332.9" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="335.9" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="332.9" y="1059.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="335.9" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (2 samples, 0.03%)</title><rect x="332.9" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="335.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (10 samples, 0.13%)</title><rect x="333.2" y="1267.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (10 samples, 0.13%)</title><rect x="333.2" y="1251.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (10 samples, 0.13%)</title><rect x="333.2" y="1235.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.2" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (10 samples, 0.13%)</title><rect x="333.2" y="1219.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.2" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (9 samples, 0.12%)</title><rect x="333.2" y="1203.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.2" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (9 samples, 0.12%)</title><rect x="333.2" y="1187.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$405/933376074.apply (9 samples, 0.12%)</title><rect x="333.2" y="1171.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (9 samples, 0.12%)</title><rect x="333.2" y="1155.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (8 samples, 0.11%)</title><rect x="333.3" y="1139.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (5 samples, 0.07%)</title><rect x="333.5" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (5 samples, 0.07%)</title><rect x="333.5" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (5 samples, 0.07%)</title><rect x="333.5" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (5 samples, 0.07%)</title><rect x="333.5" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ch16o$1 (2 samples, 0.03%)</title><rect x="333.6" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16c$1 (2 samples, 0.03%)</title><rect x="334.0" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16$1 (2 samples, 0.03%)</title><rect x="334.0" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (2 samples, 0.03%)</title><rect x="334.3" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.joinMat (5 samples, 0.07%)</title><rect x="334.7" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (3 samples, 0.04%)</title><rect x="335.1" y="1251.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (3 samples, 0.04%)</title><rect x="335.1" y="1235.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="335.1" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="335.1" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="335.1" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (93 samples, 1.25%)</title><rect x="335.9" y="1299.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (93 samples, 1.25%)</title><rect x="335.9" y="1283.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (93 samples, 1.25%)</title><rect x="335.9" y="1267.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (93 samples, 1.25%)</title><rect x="335.9" y="1251.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (59 samples, 0.79%)</title><rect x="335.9" y="1235.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (48 samples, 0.64%)</title><rect x="335.9" y="1219.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (47 samples, 0.63%)</title><rect x="335.9" y="1203.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/BufferOverflowException.&lt;init&gt; (4 samples, 0.05%)</title><rect x="336.0" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.05%)</title><rect x="336.0" y="1171.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.05%)</title><rect x="336.0" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.05%)</title><rect x="336.0" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.05%)</title><rect x="336.0" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.05%)</title><rect x="336.0" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.0" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.05%)</title><rect x="336.0" y="1091.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="339.0" y="1102.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.05%)</title><rect x="336.0" y="1075.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="339.0" y="1086.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.05%)</title><rect x="336.0" y="1059.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="339.0" y="1070.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (4 samples, 0.05%)</title><rect x="336.0" y="1043.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="339.0" y="1054.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="336.2" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="339.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="336.6" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/MapFactory$Delegate.apply (2 samples, 0.03%)</title><rect x="336.6" y="1171.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.apply (2 samples, 0.03%)</title><rect x="336.6" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/MapFactory.apply$ (2 samples, 0.03%)</title><rect x="336.6" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/MapFactory.apply (2 samples, 0.03%)</title><rect x="336.6" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.from (2 samples, 0.03%)</title><rect x="336.6" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.from (2 samples, 0.03%)</title><rect x="336.6" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (39 samples, 0.52%)</title><rect x="337.0" y="1187.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="337.0" y="1171.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="337.0" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.0" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="337.0" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (36 samples, 0.48%)</title><rect x="337.4" y="1171.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (36 samples, 0.48%)</title><rect x="337.4" y="1155.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.4" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (36 samples, 0.48%)</title><rect x="337.4" y="1139.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (36 samples, 0.48%)</title><rect x="337.4" y="1123.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (36 samples, 0.48%)</title><rect x="337.4" y="1107.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (36 samples, 0.48%)</title><rect x="337.4" y="1091.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (35 samples, 0.47%)</title><rect x="337.4" y="1075.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (35 samples, 0.47%)</title><rect x="337.4" y="1059.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (35 samples, 0.47%)</title><rect x="337.4" y="1043.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (35 samples, 0.47%)</title><rect x="337.4" y="1027.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (35 samples, 0.47%)</title><rect x="337.4" y="1011.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (35 samples, 0.47%)</title><rect x="337.4" y="995.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (35 samples, 0.47%)</title><rect x="337.4" y="979.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (34 samples, 0.46%)</title><rect x="337.6" y="963.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (34 samples, 0.46%)</title><rect x="337.6" y="947.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (34 samples, 0.46%)</title><rect x="337.6" y="931.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (34 samples, 0.46%)</title><rect x="337.6" y="915.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (34 samples, 0.46%)</title><rect x="337.6" y="899.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (34 samples, 0.46%)</title><rect x="337.6" y="883.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (34 samples, 0.46%)</title><rect x="337.6" y="867.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (34 samples, 0.46%)</title><rect x="337.6" y="851.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.6" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (33 samples, 0.44%)</title><rect x="337.6" y="835.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.6" y="846.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (33 samples, 0.44%)</title><rect x="337.6" y="819.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.6" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (32 samples, 0.43%)</title><rect x="337.8" y="803.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.8" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (32 samples, 0.43%)</title><rect x="337.8" y="787.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.8" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (32 samples, 0.43%)</title><rect x="337.8" y="771.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.8" y="782.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (32 samples, 0.43%)</title><rect x="337.8" y="755.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="766.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (32 samples, 0.43%)</title><rect x="337.8" y="739.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.8" y="750.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (32 samples, 0.43%)</title><rect x="337.8" y="723.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (32 samples, 0.43%)</title><rect x="337.8" y="707.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (32 samples, 0.43%)</title><rect x="337.8" y="691.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (30 samples, 0.40%)</title><rect x="337.8" y="675.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="686.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (30 samples, 0.40%)</title><rect x="337.8" y="659.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.8" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (30 samples, 0.40%)</title><rect x="337.8" y="643.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.8" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (30 samples, 0.40%)</title><rect x="337.8" y="627.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.8" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (30 samples, 0.40%)</title><rect x="337.8" y="611.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="622.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (29 samples, 0.39%)</title><rect x="337.8" y="595.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.8" y="606.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (29 samples, 0.39%)</title><rect x="337.8" y="579.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.8" y="590.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (28 samples, 0.37%)</title><rect x="337.9" y="563.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (27 samples, 0.36%)</title><rect x="337.9" y="547.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (27 samples, 0.36%)</title><rect x="337.9" y="531.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.9" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.toString (15 samples, 0.20%)</title><rect x="337.9" y="515.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.9" y="526.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (15 samples, 0.20%)</title><rect x="337.9" y="499.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.9" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (15 samples, 0.20%)</title><rect x="337.9" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (15 samples, 0.20%)</title><rect x="337.9" y="467.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.9" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (15 samples, 0.20%)</title><rect x="337.9" y="451.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (15 samples, 0.20%)</title><rect x="337.9" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (15 samples, 0.20%)</title><rect x="337.9" y="419.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.9" y="430.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (15 samples, 0.20%)</title><rect x="337.9" y="403.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.19%)</title><rect x="337.9" y="387.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (13 samples, 0.17%)</title><rect x="337.9" y="371.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.toString (6 samples, 0.08%)</title><rect x="338.2" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/Map.toString$ (6 samples, 0.08%)</title><rect x="338.2" y="339.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.2" y="350.0"></text>
</g>
<g>
<title>scala/collection/Map.toString (6 samples, 0.08%)</title><rect x="338.2" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.2" y="334.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (6 samples, 0.08%)</title><rect x="338.2" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (6 samples, 0.08%)</title><rect x="338.2" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.mkString (6 samples, 0.08%)</title><rect x="338.2" y="275.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (6 samples, 0.08%)</title><rect x="338.2" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.2" y="270.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (6 samples, 0.08%)</title><rect x="338.2" y="243.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.addString (6 samples, 0.08%)</title><rect x="338.2" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.2" y="238.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString$ (6 samples, 0.08%)</title><rect x="338.2" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString (5 samples, 0.07%)</title><rect x="338.4" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (5 samples, 0.07%)</title><rect x="338.4" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (5 samples, 0.07%)</title><rect x="338.4" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.4" y="174.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (5 samples, 0.07%)</title><rect x="338.4" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.4" y="158.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (5 samples, 0.07%)</title><rect x="338.4" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.4" y="142.0"></text>
</g>
<g>
<title>scala/collection/MapOps$$Lambda$478/1596047148.apply (3 samples, 0.04%)</title><rect x="338.5" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.5" y="126.0"></text>
</g>
<g>
<title>scala/collection/MapOps.$anonfun$addString$1 (3 samples, 0.04%)</title><rect x="338.5" y="99.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="338.7" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.7" y="94.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.toString (5 samples, 0.07%)</title><rect x="339.2" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/Set.toString$ (5 samples, 0.07%)</title><rect x="339.2" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.2" y="350.0"></text>
</g>
<g>
<title>scala/collection/Set.toString (3 samples, 0.04%)</title><rect x="339.5" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (3 samples, 0.04%)</title><rect x="339.5" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (3 samples, 0.04%)</title><rect x="339.5" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.5" y="302.0"></text>
</g>
<g>
<title>akka/http/impl/settings/WebSocketSettingsImpl.toString (3 samples, 0.04%)</title><rect x="340.3" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.3" y="526.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.03%)</title><rect x="340.4" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.4" y="510.0"></text>
</g>
<g>
<title>scala/Some.toString (8 samples, 0.11%)</title><rect x="340.8" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.8" y="526.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (8 samples, 0.11%)</title><rect x="340.8" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.8" y="510.0"></text>
</g>
<g>
<title>scala/Some.productIterator (2 samples, 0.03%)</title><rect x="340.9" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.9" y="494.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (5 samples, 0.07%)</title><rect x="341.2" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (5 samples, 0.07%)</title><rect x="341.2" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (5 samples, 0.07%)</title><rect x="341.2" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.2" y="462.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (4 samples, 0.05%)</title><rect x="341.2" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (4 samples, 0.05%)</title><rect x="341.2" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (4 samples, 0.05%)</title><rect x="341.2" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="341.2" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.05%)</title><rect x="341.2" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.2" y="382.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader.toString (4 samples, 0.05%)</title><rect x="341.2" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.2" y="366.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString$ (3 samples, 0.04%)</title><rect x="341.4" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.4" y="350.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString (3 samples, 0.04%)</title><rect x="341.4" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.4" y="334.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (3 samples, 0.04%)</title><rect x="341.4" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.4" y="318.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (3 samples, 0.04%)</title><rect x="341.4" y="291.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.4" y="302.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (3 samples, 0.04%)</title><rect x="341.4" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.4" y="286.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (2 samples, 0.03%)</title><rect x="341.5" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.5" y="270.0"></text>
</g>
<g>
<title>akka/http/impl/util/StringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="341.5" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.5" y="254.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (11 samples, 0.15%)</title><rect x="343.4" y="1219.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (11 samples, 0.15%)</title><rect x="343.4" y="1203.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage.createLogic (5 samples, 0.07%)</title><rect x="343.4" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.&lt;init&gt; (5 samples, 0.07%)</title><rect x="343.4" y="1171.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.createLogic (6 samples, 0.08%)</title><rect x="344.2" y="1187.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.&lt;init&gt; (6 samples, 0.08%)</title><rect x="344.2" y="1171.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.nameOrDefault (2 samples, 0.03%)</title><rect x="344.2" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$2 (2 samples, 0.03%)</title><rect x="344.2" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (2 samples, 0.03%)</title><rect x="344.2" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/Buffer$.apply (2 samples, 0.03%)</title><rect x="344.5" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (26 samples, 0.35%)</title><rect x="345.2" y="1235.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (17 samples, 0.23%)</title><rect x="345.5" y="1219.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (16 samples, 0.21%)</title><rect x="345.7" y="1203.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (16 samples, 0.21%)</title><rect x="345.7" y="1187.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (16 samples, 0.21%)</title><rect x="345.7" y="1171.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (15 samples, 0.20%)</title><rect x="345.8" y="1155.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (4 samples, 0.05%)</title><rect x="346.1" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (4 samples, 0.05%)</title><rect x="346.1" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (4 samples, 0.05%)</title><rect x="346.1" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (4 samples, 0.05%)</title><rect x="346.1" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (2 samples, 0.03%)</title><rect x="346.1" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (2 samples, 0.03%)</title><rect x="346.1" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (2 samples, 0.03%)</title><rect x="346.1" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="346.1" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="346.1" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="346.1" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.1" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="346.1" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.03%)</title><rect x="346.4" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="346.4" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="346.4" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.4" y="1054.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (9 samples, 0.12%)</title><rect x="346.8" y="1139.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (6 samples, 0.08%)</title><rect x="346.9" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (2 samples, 0.03%)</title><rect x="346.9" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="346.9" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="346.9" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.9" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="346.9" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.9" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="346.9" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="346.9" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="346.9" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="346.9" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="346.9" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="346.9" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.9" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="346.9" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="346.9" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="346.9" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="346.9" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="346.9" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (3 samples, 0.04%)</title><rect x="347.4" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (6 samples, 0.08%)</title><rect x="348.2" y="1219.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (3 samples, 0.04%)</title><rect x="348.2" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (3 samples, 0.04%)</title><rect x="348.2" y="1187.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (3 samples, 0.04%)</title><rect x="348.2" y="1171.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (3 samples, 0.04%)</title><rect x="348.2" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (2 samples, 0.03%)</title><rect x="348.3" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (2 samples, 0.03%)</title><rect x="348.3" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.get1stArg$1 (2 samples, 0.03%)</title><rect x="348.3" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (3 samples, 0.04%)</title><rect x="348.7" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (3 samples, 0.04%)</title><rect x="348.7" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.7" y="1198.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.04%)</title><rect x="348.7" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.04%)</title><rect x="348.7" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.7" y="1166.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (3 samples, 0.04%)</title><rect x="348.7" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.7" y="1150.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (3 samples, 0.04%)</title><rect x="348.7" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="1134.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="348.8" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.8" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="348.8" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (4 samples, 0.05%)</title><rect x="349.3" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.nextIslandName (2 samples, 0.03%)</title><rect x="349.3" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (2 samples, 0.03%)</title><rect x="349.6" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (2 samples, 0.03%)</title><rect x="349.6" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.6" y="1214.0"></text>
</g>
<g>
<title>scala/Array$.empty (2 samples, 0.03%)</title><rect x="349.6" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.6" y="1198.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$GenericClassTag.newArray (2 samples, 0.03%)</title><rect x="349.6" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.03%)</title><rect x="349.6" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (2 samples, 0.03%)</title><rect x="349.6" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (15 samples, 0.20%)</title><rect x="350.7" y="1315.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (15 samples, 0.20%)</title><rect x="350.7" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (15 samples, 0.20%)</title><rect x="350.7" y="1283.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (15 samples, 0.20%)</title><rect x="350.7" y="1267.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (14 samples, 0.19%)</title><rect x="350.9" y="1251.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="350.9" y="1235.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="351.0" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="351.0" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.0" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (11 samples, 0.15%)</title><rect x="351.3" y="1235.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (11 samples, 0.15%)</title><rect x="351.3" y="1219.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (9 samples, 0.12%)</title><rect x="351.7" y="1203.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.12%)</title><rect x="351.7" y="1187.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (9 samples, 0.12%)</title><rect x="351.7" y="1171.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.7" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (9 samples, 0.12%)</title><rect x="351.7" y="1155.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.7" y="1166.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (9 samples, 0.12%)</title><rect x="351.7" y="1139.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.7" y="1150.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (9 samples, 0.12%)</title><rect x="351.7" y="1123.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.12%)</title><rect x="351.7" y="1107.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (9 samples, 0.12%)</title><rect x="351.7" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.7" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (9 samples, 0.12%)</title><rect x="351.7" y="1075.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (7 samples, 0.09%)</title><rect x="351.8" y="1059.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.8" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.09%)</title><rect x="351.8" y="1043.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (5 samples, 0.07%)</title><rect x="351.8" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.8" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.07%)</title><rect x="351.8" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.hashCode (2 samples, 0.03%)</title><rect x="352.0" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Set.hashCode$ (2 samples, 0.03%)</title><rect x="352.0" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (2 samples, 0.03%)</title><rect x="352.3" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.3" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (2 samples, 0.03%)</title><rect x="352.3" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.foreach (2 samples, 0.03%)</title><rect x="352.3" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (2 samples, 0.03%)</title><rect x="352.3" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (2 samples, 0.03%)</title><rect x="352.3" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="942.0"></text>
</g>
<g>
<title>scala/Some.hashCode (2 samples, 0.03%)</title><rect x="352.6" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.6" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.03%)</title><rect x="352.6" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.6" y="1022.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.03%)</title><rect x="352.6" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.6" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="352.6" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.hashCode (2 samples, 0.03%)</title><rect x="352.6" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (16 samples, 0.21%)</title><rect x="353.4" y="1331.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (3 samples, 0.04%)</title><rect x="353.4" y="1315.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.4" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (13 samples, 0.17%)</title><rect x="353.9" y="1315.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (13 samples, 0.17%)</title><rect x="353.9" y="1299.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (13 samples, 0.17%)</title><rect x="353.9" y="1283.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.9" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (12 samples, 0.16%)</title><rect x="354.0" y="1267.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (12 samples, 0.16%)</title><rect x="354.0" y="1251.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.0" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (12 samples, 0.16%)</title><rect x="354.0" y="1235.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.0" y="1246.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (12 samples, 0.16%)</title><rect x="354.0" y="1219.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.0" y="1230.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (11 samples, 0.15%)</title><rect x="354.2" y="1203.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.2" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (11 samples, 0.15%)</title><rect x="354.2" y="1187.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (11 samples, 0.15%)</title><rect x="354.2" y="1171.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.2" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (11 samples, 0.15%)</title><rect x="354.2" y="1155.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (11 samples, 0.15%)</title><rect x="354.2" y="1139.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.2" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (10 samples, 0.13%)</title><rect x="354.2" y="1123.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (6 samples, 0.08%)</title><rect x="354.5" y="1107.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.07%)</title><rect x="354.7" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (4 samples, 0.05%)</title><rect x="354.8" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.8" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (4 samples, 0.05%)</title><rect x="354.8" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.foreach (3 samples, 0.04%)</title><rect x="355.0" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (3 samples, 0.04%)</title><rect x="355.0" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (3 samples, 0.04%)</title><rect x="355.0" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.next (2 samples, 0.03%)</title><rect x="355.0" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.next (2 samples, 0.03%)</title><rect x="355.0" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.0" y="990.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (3 samples, 0.04%)</title><rect x="355.9" y="1395.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.04%)</title><rect x="355.9" y="1379.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.04%)</title><rect x="355.9" y="1363.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (3 samples, 0.04%)</title><rect x="355.9" y="1347.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (147 samples, 1.97%)</title><rect x="356.4" y="1395.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.4" y="1406.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (147 samples, 1.97%)</title><rect x="356.4" y="1379.0" width="23.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.4" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (147 samples, 1.97%)</title><rect x="356.4" y="1363.0" width="23.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.4" y="1374.0">a..</text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (146 samples, 1.96%)</title><rect x="356.6" y="1347.0" width="23.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.6" y="1358.0">a..</text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (146 samples, 1.96%)</title><rect x="356.6" y="1331.0" width="23.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.6" y="1342.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (86 samples, 1.15%)</title><rect x="356.9" y="1315.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.9" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (85 samples, 1.14%)</title><rect x="357.0" y="1299.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (85 samples, 1.14%)</title><rect x="357.0" y="1283.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (84 samples, 1.12%)</title><rect x="357.2" y="1267.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell$.newUid (2 samples, 0.03%)</title><rect x="357.7" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (6 samples, 0.08%)</title><rect x="358.1" y="1251.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (6 samples, 0.08%)</title><rect x="358.1" y="1235.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (6 samples, 0.08%)</title><rect x="358.1" y="1219.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (4 samples, 0.05%)</title><rect x="358.3" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.04%)</title><rect x="358.5" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="358.5" y="1171.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="358.5" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="358.5" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="358.5" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (7 samples, 0.09%)</title><rect x="359.1" y="1251.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (7 samples, 0.09%)</title><rect x="359.1" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (7 samples, 0.09%)</title><rect x="359.1" y="1219.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (7 samples, 0.09%)</title><rect x="359.1" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (6 samples, 0.08%)</title><rect x="359.2" y="1187.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (6 samples, 0.08%)</title><rect x="359.2" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.08%)</title><rect x="359.2" y="1155.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="359.4" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="359.4" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="359.4" y="1107.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="359.4" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="359.4" y="1075.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.05%)</title><rect x="359.6" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.05%)</title><rect x="359.6" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="359.7" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="359.7" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="359.9" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="359.9" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="359.9" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (9 samples, 0.12%)</title><rect x="360.3" y="1251.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (9 samples, 0.12%)</title><rect x="360.3" y="1235.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (9 samples, 0.12%)</title><rect x="360.3" y="1219.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (9 samples, 0.12%)</title><rect x="360.3" y="1203.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (9 samples, 0.12%)</title><rect x="360.3" y="1187.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.12%)</title><rect x="360.3" y="1171.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.11%)</title><rect x="360.3" y="1155.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.11%)</title><rect x="360.3" y="1139.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.11%)</title><rect x="360.3" y="1123.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.11%)</title><rect x="360.3" y="1107.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.11%)</title><rect x="360.3" y="1091.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.09%)</title><rect x="360.5" y="1075.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.09%)</title><rect x="360.5" y="1059.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.09%)</title><rect x="360.5" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.09%)</title><rect x="360.5" y="1027.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.09%)</title><rect x="360.5" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.09%)</title><rect x="360.5" y="995.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.09%)</title><rect x="360.5" y="979.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="363.5" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="360.7" y="963.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.7" y="974.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="361.0" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.0" y="958.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="361.0" y="931.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="361.0" y="915.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.0" y="926.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.05%)</title><rect x="361.0" y="899.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.0" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.05%)</title><rect x="361.0" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.0" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="361.0" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="364.0" y="878.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (55 samples, 0.74%)</title><rect x="361.8" y="1251.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.elements (3 samples, 0.04%)</title><rect x="362.1" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$1 (3 samples, 0.04%)</title><rect x="362.1" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (7 samples, 0.09%)</title><rect x="362.6" y="1235.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.6" y="1246.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (7 samples, 0.09%)</title><rect x="362.6" y="1219.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.6" y="1230.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (3 samples, 0.04%)</title><rect x="362.6" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.03%)</title><rect x="362.7" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.7" y="1198.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithTerminalDoubleWildcard (2 samples, 0.03%)</title><rect x="363.0" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.0" y="1214.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.isEmpty (2 samples, 0.03%)</title><rect x="363.4" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (33 samples, 0.44%)</title><rect x="363.7" y="1235.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (12 samples, 0.16%)</title><rect x="363.7" y="1219.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (10 samples, 0.13%)</title><rect x="363.7" y="1203.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (10 samples, 0.13%)</title><rect x="363.7" y="1187.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (10 samples, 0.13%)</title><rect x="363.7" y="1171.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.swapMailbox (3 samples, 0.04%)</title><rect x="363.7" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="364.1" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="364.1" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="364.1" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (3 samples, 0.04%)</title><rect x="364.6" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.6" y="1166.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (3 samples, 0.04%)</title><rect x="364.6" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.6" y="1150.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (3 samples, 0.04%)</title><rect x="364.6" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.newActorCell (2 samples, 0.03%)</title><rect x="365.2" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.&lt;init&gt; (2 samples, 0.03%)</title><rect x="365.2" y="1187.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.$init$ (2 samples, 0.03%)</title><rect x="365.2" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (21 samples, 0.28%)</title><rect x="365.6" y="1219.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (3 samples, 0.04%)</title><rect x="366.2" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.2" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (3 samples, 0.04%)</title><rect x="366.2" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.2" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (3 samples, 0.04%)</title><rect x="366.2" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (2 samples, 0.03%)</title><rect x="366.4" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (12 samples, 0.16%)</title><rect x="367.0" y="1203.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.actorRequirement$1 (4 samples, 0.05%)</title><rect x="367.1" y="1187.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.1" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.actorRequirement$lzycompute$1 (4 samples, 0.05%)</title><rect x="367.1" y="1171.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (4 samples, 0.05%)</title><rect x="367.1" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.1" y="1166.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (4 samples, 0.05%)</title><rect x="367.1" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.1" y="1150.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (4 samples, 0.05%)</title><rect x="367.1" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getGenericInterfaces (2 samples, 0.03%)</title><rect x="367.1" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.1" y="1118.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/ClassRepository.getSuperInterfaces (2 samples, 0.03%)</title><rect x="367.1" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="367.1" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.1" y="1086.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.03%)</title><rect x="367.1" y="1059.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="370.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (2 samples, 0.03%)</title><rect x="367.5" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (7 samples, 0.09%)</title><rect x="367.8" y="1187.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (6 samples, 0.08%)</title><rect x="367.8" y="1171.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getProducedMessageQueueType (5 samples, 0.07%)</title><rect x="367.8" y="1155.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.8" y="1166.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (2 samples, 0.03%)</title><rect x="367.9" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.9" y="1150.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (2 samples, 0.03%)</title><rect x="367.9" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getGenericInterfaces (2 samples, 0.03%)</title><rect x="367.9" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.9" y="1118.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/ClassRepository.getSuperInterfaces (2 samples, 0.03%)</title><rect x="367.9" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="367.9" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (2 samples, 0.03%)</title><rect x="369.2" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (2 samples, 0.03%)</title><rect x="369.2" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (2 samples, 0.03%)</title><rect x="369.2" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (2 samples, 0.03%)</title><rect x="369.2" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (2 samples, 0.03%)</title><rect x="369.2" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (2 samples, 0.03%)</title><rect x="369.2" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (4 samples, 0.05%)</title><rect x="369.5" y="1235.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (3 samples, 0.04%)</title><rect x="369.7" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.drop$ (3 samples, 0.04%)</title><rect x="369.7" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.drop (3 samples, 0.04%)</title><rect x="369.7" y="1187.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.loop$2 (2 samples, 0.03%)</title><rect x="369.8" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (18 samples, 0.24%)</title><rect x="370.5" y="1315.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (18 samples, 0.24%)</title><rect x="370.5" y="1299.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (18 samples, 0.24%)</title><rect x="370.5" y="1283.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (12 samples, 0.16%)</title><rect x="370.8" y="1267.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.8" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (11 samples, 0.15%)</title><rect x="370.9" y="1251.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$132/1153455185.apply$mcV$sp (10 samples, 0.13%)</title><rect x="370.9" y="1235.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (10 samples, 0.13%)</title><rect x="370.9" y="1219.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="370.9" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="370.9" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="370.9" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="370.9" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="370.9" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.9" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="370.9" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="370.9" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="370.9" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (8 samples, 0.11%)</title><rect x="371.3" y="1203.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (7 samples, 0.09%)</title><rect x="371.4" y="1187.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (7 samples, 0.09%)</title><rect x="371.4" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (6 samples, 0.08%)</title><rect x="371.6" y="1155.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (6 samples, 0.08%)</title><rect x="371.6" y="1139.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (6 samples, 0.08%)</title><rect x="371.6" y="1123.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndSetNode (2 samples, 0.03%)</title><rect x="371.7" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="372.0" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (3 samples, 0.04%)</title><rect x="372.8" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (3 samples, 0.04%)</title><rect x="373.3" y="1315.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (3 samples, 0.04%)</title><rect x="373.3" y="1299.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.3" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.04%)</title><rect x="373.3" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.3" y="1294.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.04%)</title><rect x="373.3" y="1267.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.3" y="1278.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (3 samples, 0.04%)</title><rect x="373.3" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.3" y="1262.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (3 samples, 0.04%)</title><rect x="373.3" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.3" y="1246.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.04%)</title><rect x="373.3" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.3" y="1230.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="373.5" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Props.withDispatcher (4 samples, 0.05%)</title><rect x="373.8" y="1315.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.copy (4 samples, 0.05%)</title><rect x="373.8" y="1299.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (4 samples, 0.05%)</title><rect x="373.8" y="1283.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (4 samples, 0.05%)</title><rect x="373.8" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (4 samples, 0.05%)</title><rect x="373.8" y="1251.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (4 samples, 0.05%)</title><rect x="373.8" y="1235.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.8" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (4 samples, 0.05%)</title><rect x="373.8" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (3 samples, 0.04%)</title><rect x="373.9" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.9" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (3 samples, 0.04%)</title><rect x="373.9" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.9" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (3 samples, 0.04%)</title><rect x="373.9" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.9" y="1182.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (3 samples, 0.04%)</title><rect x="373.9" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getParameterTypes (2 samples, 0.03%)</title><rect x="373.9" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="373.9" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.9" y="1134.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.03%)</title><rect x="373.9" y="1107.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="376.9" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="373.9" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="376.9" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="373.9" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="376.9" y="1086.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$1078/154939135.apply (20 samples, 0.27%)</title><rect x="374.4" y="1315.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.4" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (19 samples, 0.25%)</title><rect x="374.4" y="1299.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (2 samples, 0.03%)</title><rect x="374.6" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.6" y="1294.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (2 samples, 0.03%)</title><rect x="374.6" y="1267.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="377.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (16 samples, 0.21%)</title><rect x="374.9" y="1283.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (16 samples, 0.21%)</title><rect x="374.9" y="1267.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (11 samples, 0.15%)</title><rect x="374.9" y="1251.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (11 samples, 0.15%)</title><rect x="374.9" y="1235.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (11 samples, 0.15%)</title><rect x="374.9" y="1219.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (11 samples, 0.15%)</title><rect x="374.9" y="1203.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.9" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (11 samples, 0.15%)</title><rect x="374.9" y="1187.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (5 samples, 0.07%)</title><rect x="375.0" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.copyConstructors (5 samples, 0.07%)</title><rect x="375.0" y="1155.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="375.0" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.0" y="1150.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;540784ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)9, 540784ul&gt;::access_barrier(oopDesc*, oopDesc*, unsigned long) (2 samples, 0.03%)</title><rect x="375.0" y="1123.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="378.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2 samples, 0.03%)</title><rect x="375.5" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2 samples, 0.03%)</title><rect x="375.5" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2 samples, 0.03%)</title><rect x="375.5" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (4 samples, 0.05%)</title><rect x="376.0" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.0" y="1182.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (3 samples, 0.04%)</title><rect x="376.0" y="1155.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.0" y="1166.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (3 samples, 0.04%)</title><rect x="376.0" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.0" y="1150.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (3 samples, 0.04%)</title><rect x="376.0" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.forall (2 samples, 0.03%)</title><rect x="376.2" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall$ (2 samples, 0.03%)</title><rect x="376.2" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall (2 samples, 0.03%)</title><rect x="376.2" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.2" y="1086.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$125/1408279755.apply (2 samples, 0.03%)</title><rect x="376.2" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.2" y="1070.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5$adapted (2 samples, 0.03%)</title><rect x="376.2" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.2" y="1054.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5 (2 samples, 0.03%)</title><rect x="376.2" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (5 samples, 0.07%)</title><rect x="376.6" y="1251.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (5 samples, 0.07%)</title><rect x="376.6" y="1235.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (5 samples, 0.07%)</title><rect x="376.6" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (5 samples, 0.07%)</title><rect x="376.6" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (4 samples, 0.05%)</title><rect x="376.8" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (4 samples, 0.05%)</title><rect x="376.8" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.8" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1$$Lambda$546/232169161.apply (10 samples, 0.13%)</title><rect x="377.6" y="1315.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.$anonfun$applyOrElse$1 (10 samples, 0.13%)</title><rect x="377.6" y="1299.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (9 samples, 0.12%)</title><rect x="377.6" y="1283.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (7 samples, 0.09%)</title><rect x="377.6" y="1267.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (7 samples, 0.09%)</title><rect x="377.6" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (7 samples, 0.09%)</title><rect x="377.6" y="1235.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (5 samples, 0.07%)</title><rect x="377.7" y="1219.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.7" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (5 samples, 0.07%)</title><rect x="377.7" y="1203.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors (2 samples, 0.03%)</title><rect x="377.7" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.copyConstructors (2 samples, 0.03%)</title><rect x="377.7" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (2 samples, 0.03%)</title><rect x="378.2" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (2 samples, 0.03%)</title><rect x="378.7" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (2 samples, 0.03%)</title><rect x="378.7" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (2 samples, 0.03%)</title><rect x="378.7" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="378.7" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.03%)</title><rect x="379.3" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (7 samples, 0.09%)</title><rect x="379.6" y="1395.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (7 samples, 0.09%)</title><rect x="379.6" y="1379.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (7 samples, 0.09%)</title><rect x="379.6" y="1363.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (7 samples, 0.09%)</title><rect x="379.6" y="1347.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (7 samples, 0.09%)</title><rect x="379.6" y="1331.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (7 samples, 0.09%)</title><rect x="379.6" y="1315.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (7 samples, 0.09%)</title><rect x="379.6" y="1299.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="379.6" y="1283.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.09%)</title><rect x="379.6" y="1267.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.09%)</title><rect x="379.6" y="1251.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.6" y="1262.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (7 samples, 0.09%)</title><rect x="379.6" y="1235.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.6" y="1246.0"></text>
</g>
<g>
<title>akka/routing/Router.route (6 samples, 0.08%)</title><rect x="379.8" y="1219.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.8" y="1230.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.select (5 samples, 0.07%)</title><rect x="379.8" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.8" y="1214.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.target$1 (4 samples, 0.05%)</title><rect x="379.9" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.9" y="1198.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHash.nodeFor (2 samples, 0.03%)</title><rect x="380.1" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.1" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (298 samples, 3.99%)</title><rect x="380.7" y="1395.0" width="47.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.7" y="1406.0">akka..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (298 samples, 3.99%)</title><rect x="380.7" y="1379.0" width="47.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.7" y="1390.0">akka..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (298 samples, 3.99%)</title><rect x="380.7" y="1363.0" width="47.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.7" y="1374.0">akka..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$unregistering$1.applyOrElse (3 samples, 0.04%)</title><rect x="380.7" y="1347.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (3 samples, 0.04%)</title><rect x="380.7" y="1331.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (2 samples, 0.03%)</title><rect x="380.9" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.9" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (2 samples, 0.03%)</title><rect x="380.9" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.9" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (20 samples, 0.27%)</title><rect x="381.2" y="1347.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (3 samples, 0.04%)</title><rect x="381.7" y="1331.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become$ (2 samples, 0.03%)</title><rect x="381.8" y="1315.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become (2 samples, 0.03%)</title><rect x="381.8" y="1299.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (2 samples, 0.03%)</title><rect x="381.8" y="1283.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.8" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (14 samples, 0.19%)</title><rect x="382.2" y="1331.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (4 samples, 0.05%)</title><rect x="382.2" y="1315.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (4 samples, 0.05%)</title><rect x="382.2" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (4 samples, 0.05%)</title><rect x="382.2" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (4 samples, 0.05%)</title><rect x="382.2" y="1267.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.2" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="382.3" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$132/1153455185.apply$mcV$sp (3 samples, 0.04%)</title><rect x="382.3" y="1235.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (3 samples, 0.04%)</title><rect x="382.3" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (3 samples, 0.04%)</title><rect x="382.3" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (3 samples, 0.04%)</title><rect x="382.3" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="382.3" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.3" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="382.3" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$547/678324713.apply$mcV$sp (3 samples, 0.04%)</title><rect x="382.3" y="1139.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$addWatcher$1 (3 samples, 0.04%)</title><rect x="382.3" y="1123.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (3 samples, 0.04%)</title><rect x="382.3" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (3 samples, 0.04%)</title><rect x="382.3" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (3 samples, 0.04%)</title><rect x="382.3" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="382.3" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="382.3" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (3 samples, 0.04%)</title><rect x="382.3" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.copyAndInsertValue (3 samples, 0.04%)</title><rect x="382.3" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.3" y="1022.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (10 samples, 0.13%)</title><rect x="382.8" y="1315.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (9 samples, 0.12%)</title><rect x="382.8" y="1299.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (9 samples, 0.12%)</title><rect x="382.8" y="1283.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (9 samples, 0.12%)</title><rect x="382.8" y="1267.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (4 samples, 0.05%)</title><rect x="383.1" y="1251.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (4 samples, 0.05%)</title><rect x="383.1" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="383.3" y="1219.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="383.3" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$667/1419749629.apply$mcV$sp (3 samples, 0.04%)</title><rect x="383.3" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$remWatcher$1 (3 samples, 0.04%)</title><rect x="383.3" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (3 samples, 0.04%)</title><rect x="383.3" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (3 samples, 0.04%)</title><rect x="383.3" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (3 samples, 0.04%)</title><rect x="383.3" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (2 samples, 0.03%)</title><rect x="383.4" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (2 samples, 0.03%)</title><rect x="383.4" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (2 samples, 0.03%)</title><rect x="383.4" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.4" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="383.7" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.7" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="383.9" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$649/1056058828.apply$mcV$sp (2 samples, 0.03%)</title><rect x="383.9" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.9" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (27 samples, 0.36%)</title><rect x="384.4" y="1347.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (26 samples, 0.35%)</title><rect x="384.5" y="1331.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (3 samples, 0.04%)</title><rect x="384.7" y="1315.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become$ (3 samples, 0.04%)</title><rect x="384.7" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become (3 samples, 0.04%)</title><rect x="384.7" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (3 samples, 0.04%)</title><rect x="384.7" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setReceiveTimeout (2 samples, 0.03%)</title><rect x="385.2" y="1315.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout$ (2 samples, 0.03%)</title><rect x="385.2" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout (2 samples, 0.03%)</title><rect x="385.2" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (11 samples, 0.15%)</title><rect x="385.5" y="1315.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/1922673440.apply (11 samples, 0.15%)</title><rect x="385.5" y="1299.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (10 samples, 0.13%)</title><rect x="385.6" y="1283.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (10 samples, 0.13%)</title><rect x="385.6" y="1267.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (10 samples, 0.13%)</title><rect x="385.6" y="1251.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (10 samples, 0.13%)</title><rect x="385.6" y="1235.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.11%)</title><rect x="386.0" y="1219.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (7 samples, 0.09%)</title><rect x="386.1" y="1203.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.09%)</title><rect x="386.1" y="1187.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.09%)</title><rect x="386.1" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (7 samples, 0.09%)</title><rect x="386.1" y="1155.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="386.1" y="1139.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.09%)</title><rect x="386.1" y="1123.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.09%)</title><rect x="386.1" y="1107.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="386.1" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.09%)</title><rect x="386.1" y="1075.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.09%)</title><rect x="386.1" y="1059.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.09%)</title><rect x="386.1" y="1043.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.09%)</title><rect x="386.1" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.09%)</title><rect x="386.1" y="1011.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.09%)</title><rect x="386.1" y="995.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.09%)</title><rect x="386.1" y="979.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.1" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.09%)</title><rect x="386.1" y="963.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.09%)</title><rect x="386.1" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.08%)</title><rect x="386.3" y="931.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.08%)</title><rect x="386.3" y="915.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.07%)</title><rect x="386.4" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="386.4" y="883.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="386.4" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.4" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="386.4" y="851.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="389.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="386.4" y="835.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="386.4" y="819.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.4" y="830.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="386.4" y="803.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.4" y="814.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="386.4" y="787.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="389.4" y="798.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="386.4" y="771.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="389.4" y="782.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.05%)</title><rect x="386.6" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="389.6" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="386.7" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="386.7" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.7" y="734.0"></text>
</g>
<g>
<title>java/net/Socket.getRemoteSocketAddress (2 samples, 0.03%)</title><rect x="387.5" y="1315.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.5" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (4 samples, 0.05%)</title><rect x="387.8" y="1315.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.8" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (4 samples, 0.05%)</title><rect x="387.8" y="1299.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (4 samples, 0.05%)</title><rect x="387.8" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (4 samples, 0.05%)</title><rect x="387.8" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketOptionRegistry.findOption (3 samples, 0.04%)</title><rect x="388.0" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.0" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="388.0" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.0" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="388.0" y="1219.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.0" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (26 samples, 0.35%)</title><rect x="388.6" y="1347.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (26 samples, 0.35%)</title><rect x="388.6" y="1331.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$574/1861882835.apply$mcV$sp (26 samples, 0.35%)</title><rect x="388.6" y="1315.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (26 samples, 0.35%)</title><rect x="388.6" y="1299.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.6" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (3 samples, 0.04%)</title><rect x="388.8" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.8" y="1294.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (3 samples, 0.04%)</title><rect x="388.8" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (2 samples, 0.03%)</title><rect x="389.0" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.0" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (12 samples, 0.16%)</title><rect x="389.3" y="1283.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (2 samples, 0.03%)</title><rect x="389.3" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become$ (2 samples, 0.03%)</title><rect x="389.3" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become (2 samples, 0.03%)</title><rect x="389.3" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (2 samples, 0.03%)</title><rect x="389.3" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.3" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (6 samples, 0.08%)</title><rect x="390.2" y="1267.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.2" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (6 samples, 0.08%)</title><rect x="390.2" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (6 samples, 0.08%)</title><rect x="390.2" y="1235.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (6 samples, 0.08%)</title><rect x="390.2" y="1219.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.2" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (2 samples, 0.03%)</title><rect x="390.7" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.7" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (9 samples, 0.12%)</title><rect x="391.3" y="1283.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="391.3" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (4 samples, 0.05%)</title><rect x="391.6" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.6" y="1278.0"></text>
</g>
<g>
<title>getsockopt (2 samples, 0.03%)</title><rect x="391.6" y="1251.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="394.6" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="391.6" y="1235.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="394.6" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="391.6" y="1219.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.6" y="1230.0"></text>
</g>
<g>
<title>sys_getsockopt (2 samples, 0.03%)</title><rect x="391.6" y="1203.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.6" y="1214.0"></text>
</g>
<g>
<title>sock_getsockopt (2 samples, 0.03%)</title><rect x="391.6" y="1187.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.6" y="1198.0"></text>
</g>
<g>
<title>poll (2 samples, 0.03%)</title><rect x="392.0" y="1251.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="395.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (3 samples, 0.04%)</title><rect x="392.3" y="1267.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (2 samples, 0.03%)</title><rect x="392.4" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (2 samples, 0.03%)</title><rect x="392.4" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.4" y="1246.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (2 samples, 0.03%)</title><rect x="392.4" y="1219.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="395.4" y="1230.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (2 samples, 0.03%)</title><rect x="392.4" y="1203.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="395.4" y="1214.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.03%)</title><rect x="392.4" y="1187.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="395.4" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (29 samples, 0.39%)</title><rect x="392.7" y="1347.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (28 samples, 0.37%)</title><rect x="392.9" y="1331.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$551/194910304.apply$mcV$sp (26 samples, 0.35%)</title><rect x="393.2" y="1315.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (26 samples, 0.35%)</title><rect x="393.2" y="1299.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (6 samples, 0.08%)</title><rect x="393.5" y="1283.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.5" y="1294.0"></text>
</g>
<g>
<title>akka/io/Dns.resolve (5 samples, 0.07%)</title><rect x="393.7" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.7" y="1278.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.cached (4 samples, 0.05%)</title><rect x="393.9" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="1262.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.get (4 samples, 0.05%)</title><rect x="393.9" y="1235.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (3 samples, 0.04%)</title><rect x="394.0" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.0" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="394.2" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.2" y="1214.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (2 samples, 0.03%)</title><rect x="394.2" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.2" y="1198.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.03%)</title><rect x="394.2" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.2" y="1182.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.03%)</title><rect x="394.2" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.2" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (12 samples, 0.16%)</title><rect x="394.5" y="1283.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (12 samples, 0.16%)</title><rect x="394.5" y="1267.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (12 samples, 0.16%)</title><rect x="394.5" y="1251.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.5" y="1262.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (12 samples, 0.16%)</title><rect x="394.5" y="1235.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.5" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (11 samples, 0.15%)</title><rect x="394.6" y="1219.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (10 samples, 0.13%)</title><rect x="394.6" y="1203.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.6" y="1214.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (10 samples, 0.13%)</title><rect x="394.6" y="1187.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.6" y="1198.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (10 samples, 0.13%)</title><rect x="394.6" y="1171.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.6" y="1182.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (10 samples, 0.13%)</title><rect x="394.6" y="1155.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (10 samples, 0.13%)</title><rect x="394.6" y="1139.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (6 samples, 0.08%)</title><rect x="394.8" y="1123.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (5 samples, 0.07%)</title><rect x="394.8" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (4 samples, 0.05%)</title><rect x="395.0" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.0" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringLength (2 samples, 0.03%)</title><rect x="395.7" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="395.7" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.7" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (6 samples, 0.08%)</title><rect x="396.4" y="1283.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.4" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (6 samples, 0.08%)</title><rect x="396.4" y="1267.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.4" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$573/314433445.apply$mcV$sp (6 samples, 0.08%)</title><rect x="396.4" y="1251.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.4" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (6 samples, 0.08%)</title><rect x="396.4" y="1235.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (5 samples, 0.07%)</title><rect x="396.5" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (3 samples, 0.04%)</title><rect x="396.9" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.9" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (3 samples, 0.04%)</title><rect x="396.9" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.9" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (3 samples, 0.04%)</title><rect x="396.9" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="397.0" y="1155.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="400.0" y="1166.0"></text>
</g>
<g>
<title>__connect (2 samples, 0.03%)</title><rect x="397.0" y="1139.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="400.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="397.0" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="397.0" y="1107.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="400.0" y="1118.0"></text>
</g>
<g>
<title>sys_connect (2 samples, 0.03%)</title><rect x="397.0" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.0" y="1102.0"></text>
</g>
<g>
<title>SYSC_connect (2 samples, 0.03%)</title><rect x="397.0" y="1075.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.0" y="1086.0"></text>
</g>
<g>
<title>inet_stream_connect (2 samples, 0.03%)</title><rect x="397.0" y="1059.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.0" y="1070.0"></text>
</g>
<g>
<title>__inet_stream_connect (2 samples, 0.03%)</title><rect x="397.0" y="1043.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="400.0" y="1054.0"></text>
</g>
<g>
<title>tcp_v6_connect (2 samples, 0.03%)</title><rect x="397.0" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.0" y="1038.0"></text>
</g>
<g>
<title>tcp_v4_connect (2 samples, 0.03%)</title><rect x="397.0" y="1011.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.0" y="1022.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (14 samples, 0.19%)</title><rect x="397.3" y="1347.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (14 samples, 0.19%)</title><rect x="397.3" y="1331.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$572/1170952134.apply$mcV$sp (14 samples, 0.19%)</title><rect x="397.3" y="1315.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (14 samples, 0.19%)</title><rect x="397.3" y="1299.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.3" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (13 samples, 0.17%)</title><rect x="397.5" y="1283.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.5" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (11 samples, 0.15%)</title><rect x="397.6" y="1267.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$573/314433445.apply$mcV$sp (11 samples, 0.15%)</title><rect x="397.6" y="1251.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.6" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (11 samples, 0.15%)</title><rect x="397.6" y="1235.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (8 samples, 0.11%)</title><rect x="398.1" y="1219.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (7 samples, 0.09%)</title><rect x="398.3" y="1203.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (7 samples, 0.09%)</title><rect x="398.3" y="1187.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.3" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (7 samples, 0.09%)</title><rect x="398.3" y="1171.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="398.3" y="1155.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="401.3" y="1166.0"></text>
</g>
<g>
<title>__connect (6 samples, 0.08%)</title><rect x="398.3" y="1139.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="401.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="398.4" y="1123.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.4" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="398.4" y="1107.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="401.4" y="1118.0"></text>
</g>
<g>
<title>sys_connect (5 samples, 0.07%)</title><rect x="398.4" y="1091.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.4" y="1102.0"></text>
</g>
<g>
<title>SYSC_connect (5 samples, 0.07%)</title><rect x="398.4" y="1075.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.4" y="1086.0"></text>
</g>
<g>
<title>inet_stream_connect (5 samples, 0.07%)</title><rect x="398.4" y="1059.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.4" y="1070.0"></text>
</g>
<g>
<title>__inet_stream_connect (5 samples, 0.07%)</title><rect x="398.4" y="1043.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="401.4" y="1054.0"></text>
</g>
<g>
<title>tcp_v6_connect (5 samples, 0.07%)</title><rect x="398.4" y="1027.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.4" y="1038.0"></text>
</g>
<g>
<title>tcp_v4_connect (5 samples, 0.07%)</title><rect x="398.4" y="1011.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.4" y="1022.0"></text>
</g>
<g>
<title>tcp_connect (4 samples, 0.05%)</title><rect x="398.6" y="995.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.6" y="1006.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="398.8" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="401.8" y="990.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="398.8" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.8" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="398.8" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="401.8" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="399.5" y="1347.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="402.5" y="1358.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (177 samples, 2.37%)</title><rect x="399.9" y="1347.0" width="27.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.9" y="1358.0">s..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (109 samples, 1.46%)</title><rect x="400.2" y="1331.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (76 samples, 1.02%)</title><rect x="400.2" y="1315.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (2 samples, 0.03%)</title><rect x="400.3" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.3" y="1310.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (2 samples, 0.03%)</title><rect x="400.3" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.3" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (9 samples, 0.12%)</title><rect x="400.6" y="1299.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (8 samples, 0.11%)</title><rect x="400.8" y="1283.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.8" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (2 samples, 0.03%)</title><rect x="400.8" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.8" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (2 samples, 0.03%)</title><rect x="400.8" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.8" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.03%)</title><rect x="400.8" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.03%)</title><rect x="400.8" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.8" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.03%)</title><rect x="400.8" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="400.8" y="1187.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="403.8" y="1198.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="400.8" y="1171.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.8" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="400.8" y="1155.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.8" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="400.8" y="1139.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.8" y="1150.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="400.8" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.8" y="1134.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="400.8" y="1107.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.8" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="400.8" y="1091.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.8" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="400.8" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.8" y="1086.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="400.8" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.8" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (6 samples, 0.08%)</title><rect x="401.1" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (6 samples, 0.08%)</title><rect x="401.1" y="1251.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (6 samples, 0.08%)</title><rect x="401.1" y="1235.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (6 samples, 0.08%)</title><rect x="401.1" y="1219.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (2 samples, 0.03%)</title><rect x="401.1" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="401.4" y="1203.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (2 samples, 0.03%)</title><rect x="401.4" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.4" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (64 samples, 0.86%)</title><rect x="402.1" y="1299.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (11 samples, 0.15%)</title><rect x="402.1" y="1283.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/1922673440.apply (11 samples, 0.15%)</title><rect x="402.1" y="1267.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (11 samples, 0.15%)</title><rect x="402.1" y="1251.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (11 samples, 0.15%)</title><rect x="402.1" y="1235.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (10 samples, 0.13%)</title><rect x="402.2" y="1219.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (10 samples, 0.13%)</title><rect x="402.2" y="1203.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (7 samples, 0.09%)</title><rect x="402.7" y="1187.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (7 samples, 0.09%)</title><rect x="402.7" y="1171.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.09%)</title><rect x="402.7" y="1155.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.09%)</title><rect x="402.7" y="1139.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (6 samples, 0.08%)</title><rect x="402.7" y="1123.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.05%)</title><rect x="402.7" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.05%)</title><rect x="402.7" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.05%)</title><rect x="402.7" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.05%)</title><rect x="402.7" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.05%)</title><rect x="402.7" y="1043.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.05%)</title><rect x="402.7" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.05%)</title><rect x="402.7" y="1011.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.05%)</title><rect x="402.7" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="402.7" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="402.7" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.7" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="402.7" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.7" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="402.7" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="402.7" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="402.7" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="402.7" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="402.7" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="402.7" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="402.7" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.7" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="402.7" y="819.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="405.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="402.9" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="405.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="402.9" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="405.9" y="798.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="402.9" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.9" y="782.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="402.9" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="402.9" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="405.9" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="402.9" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.9" y="734.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.sendMessage (2 samples, 0.03%)</title><rect x="403.3" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="403.3" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="403.3" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.sendMessage (2 samples, 0.03%)</title><rect x="403.3" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.3" y="1070.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (4 samples, 0.05%)</title><rect x="404.4" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.4" y="1294.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (4 samples, 0.05%)</title><rect x="404.4" y="1267.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.04%)</title><rect x="404.6" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.6" y="1262.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.04%)</title><rect x="404.6" y="1235.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (44 samples, 0.59%)</title><rect x="405.2" y="1283.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 0.55%)</title><rect x="405.5" y="1267.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 0.55%)</title><rect x="405.5" y="1251.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (41 samples, 0.55%)</title><rect x="405.5" y="1235.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (41 samples, 0.55%)</title><rect x="405.5" y="1219.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (41 samples, 0.55%)</title><rect x="405.5" y="1203.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="405.9" y="1187.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="408.9" y="1198.0"></text>
</g>
<g>
<title>__read (12 samples, 0.16%)</title><rect x="406.2" y="1171.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="409.2" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.16%)</title><rect x="406.2" y="1155.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.2" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.16%)</title><rect x="406.2" y="1139.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="409.2" y="1150.0"></text>
</g>
<g>
<title>sys_read (11 samples, 0.15%)</title><rect x="406.3" y="1123.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.3" y="1134.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.15%)</title><rect x="406.3" y="1107.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.3" y="1118.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.09%)</title><rect x="406.3" y="1091.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.3" y="1102.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.09%)</title><rect x="406.3" y="1075.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.3" y="1086.0"></text>
</g>
<g>
<title>sock_read_iter (6 samples, 0.08%)</title><rect x="406.3" y="1059.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.3" y="1070.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.08%)</title><rect x="406.3" y="1043.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="409.3" y="1054.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.07%)</title><rect x="406.3" y="1027.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.3" y="1038.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.05%)</title><rect x="406.5" y="1011.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.5" y="1022.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="406.5" y="995.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.5" y="1006.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="407.4" y="1091.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.4" y="1102.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="407.4" y="1075.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.4" y="1086.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="407.4" y="1059.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.4" y="1070.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="407.4" y="1043.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.4" y="1054.0"></text>
</g>
<g>
<title>__vsnprintf_chk (4 samples, 0.05%)</title><rect x="408.2" y="1187.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="411.2" y="1198.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="408.2" y="1171.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="411.2" y="1182.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.03%)</title><rect x="408.5" y="1171.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="411.5" y="1182.0"></text>
</g>
<g>
<title>convertReturnVal (12 samples, 0.16%)</title><rect x="408.9" y="1187.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.9" y="1198.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (12 samples, 0.16%)</title><rect x="408.9" y="1171.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="411.9" y="1182.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (4 samples, 0.05%)</title><rect x="408.9" y="1155.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="411.9" y="1166.0"></text>
</g>
<g>
<title>jni_NewObjectV (2 samples, 0.03%)</title><rect x="409.2" y="1139.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="412.2" y="1150.0"></text>
</g>
<g>
<title>JNU_NewStringPlatform (4 samples, 0.05%)</title><rect x="409.5" y="1155.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="412.5" y="1166.0"></text>
</g>
<g>
<title>newSizedString8859_1 (4 samples, 0.05%)</title><rect x="409.5" y="1139.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="412.5" y="1150.0"></text>
</g>
<g>
<title>jni_NewString (4 samples, 0.05%)</title><rect x="409.5" y="1123.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="412.5" y="1134.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_unicode(unsigned short*, int, Thread*) (2 samples, 0.03%)</title><rect x="409.8" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="412.8" y="1118.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (2 samples, 0.03%)</title><rect x="409.8" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="412.8" y="1102.0"></text>
</g>
<g>
<title>jni_Throw (3 samples, 0.04%)</title><rect x="410.1" y="1155.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="413.1" y="1166.0"></text>
</g>
<g>
<title>Exceptions::_throw_oop(Thread*, char const*, int, oopDesc*) (3 samples, 0.04%)</title><rect x="410.1" y="1139.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="413.1" y="1150.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (3 samples, 0.04%)</title><rect x="410.1" y="1123.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="413.1" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (2 samples, 0.03%)</title><rect x="410.1" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="413.1" y="1118.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (2 samples, 0.03%)</title><rect x="410.1" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="413.1" y="1102.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (2 samples, 0.03%)</title><rect x="410.1" y="1075.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="413.1" y="1086.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (8 samples, 0.11%)</title><rect x="410.8" y="1187.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.11%)</title><rect x="410.8" y="1171.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.11%)</title><rect x="410.8" y="1155.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (7 samples, 0.09%)</title><rect x="410.9" y="1139.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.08%)</title><rect x="410.9" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.9" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 0.08%)</title><rect x="410.9" y="1107.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="413.9" y="1118.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 0.08%)</title><rect x="410.9" y="1091.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="413.9" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (6 samples, 0.08%)</title><rect x="410.9" y="1075.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="413.9" y="1086.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (6 samples, 0.08%)</title><rect x="410.9" y="1059.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="413.9" y="1070.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="411.4" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="414.4" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (12 samples, 0.16%)</title><rect x="412.2" y="1315.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (12 samples, 0.16%)</title><rect x="412.2" y="1299.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (6 samples, 0.08%)</title><rect x="412.2" y="1283.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (3 samples, 0.04%)</title><rect x="412.5" y="1267.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (3 samples, 0.04%)</title><rect x="412.5" y="1251.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (3 samples, 0.04%)</title><rect x="412.5" y="1235.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (3 samples, 0.04%)</title><rect x="412.5" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (3 samples, 0.04%)</title><rect x="412.5" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (3 samples, 0.04%)</title><rect x="412.5" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.5" y="1198.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (2 samples, 0.03%)</title><rect x="412.5" y="1171.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="415.5" y="1182.0"></text>
</g>
<g>
<title>setsockopt (2 samples, 0.03%)</title><rect x="412.5" y="1155.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="415.5" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="412.5" y="1139.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="412.5" y="1123.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="415.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (3 samples, 0.04%)</title><rect x="413.1" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (3 samples, 0.04%)</title><rect x="413.1" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (3 samples, 0.04%)</title><rect x="413.1" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (3 samples, 0.04%)</title><rect x="413.1" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (3 samples, 0.04%)</title><rect x="413.1" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (3 samples, 0.04%)</title><rect x="413.1" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.apply (2 samples, 0.03%)</title><rect x="413.6" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (2 samples, 0.03%)</title><rect x="413.6" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (2 samples, 0.03%)</title><rect x="413.6" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (2 samples, 0.03%)</title><rect x="413.6" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (2 samples, 0.03%)</title><rect x="413.6" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.6" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (20 samples, 0.27%)</title><rect x="414.1" y="1315.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (19 samples, 0.25%)</title><rect x="414.2" y="1299.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (18 samples, 0.24%)</title><rect x="414.4" y="1283.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.4" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (17 samples, 0.23%)</title><rect x="414.6" y="1267.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.21%)</title><rect x="414.7" y="1251.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.7" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (16 samples, 0.21%)</title><rect x="414.7" y="1235.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="414.9" y="1219.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="417.9" y="1230.0"></text>
</g>
<g>
<title>__write (15 samples, 0.20%)</title><rect x="414.9" y="1203.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="417.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.19%)</title><rect x="415.0" y="1187.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.0" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.17%)</title><rect x="415.0" y="1171.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.0" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="415.0" y="1155.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.0" y="1166.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="415.0" y="1139.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="418.0" y="1150.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="415.0" y="1123.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.0" y="1134.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="415.0" y="1107.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.0" y="1118.0"></text>
</g>
<g>
<title>sys_write (11 samples, 0.15%)</title><rect x="415.3" y="1155.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.3" y="1166.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.13%)</title><rect x="415.5" y="1139.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.5" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.13%)</title><rect x="415.5" y="1123.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="418.5" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.12%)</title><rect x="415.5" y="1107.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.5" y="1118.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.12%)</title><rect x="415.5" y="1091.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.5" y="1102.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.11%)</title><rect x="415.7" y="1075.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.7" y="1086.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.11%)</title><rect x="415.7" y="1059.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="418.7" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.11%)</title><rect x="415.7" y="1043.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.7" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (63 samples, 0.84%)</title><rect x="417.4" y="1331.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (23 samples, 0.31%)</title><rect x="417.4" y="1315.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (23 samples, 0.31%)</title><rect x="417.4" y="1299.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.4" y="1310.0"></text>
</g>
<g>
<title>akka/io/Tcp$Write.equals (2 samples, 0.03%)</title><rect x="417.6" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.6" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (18 samples, 0.24%)</title><rect x="417.9" y="1283.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.&lt;init&gt; (2 samples, 0.03%)</title><rect x="418.3" y="1267.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.3" y="1278.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.copyToBuffer (2 samples, 0.03%)</title><rect x="418.7" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.7" y="1278.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (2 samples, 0.03%)</title><rect x="418.7" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.7" y="1262.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="418.7" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="418.7" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="418.7" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.7" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.drop (2 samples, 0.03%)</title><rect x="419.0" y="1267.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.0" y="1278.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (8 samples, 0.11%)</title><rect x="419.3" y="1267.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.3" y="1278.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyItToTheBuffer$1 (8 samples, 0.11%)</title><rect x="419.3" y="1251.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (6 samples, 0.08%)</title><rect x="419.6" y="1235.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.6" y="1246.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.07%)</title><rect x="419.8" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.05%)</title><rect x="419.9" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.04%)</title><rect x="420.1" y="1187.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.03%)</title><rect x="420.2" y="1171.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.03%)</title><rect x="420.2" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.03%)</title><rect x="420.2" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.2" y="1150.0"></text>
</g>
<g>
<title>akka/util/ByteString.nonEmpty (2 samples, 0.03%)</title><rect x="420.7" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (2 samples, 0.03%)</title><rect x="420.7" y="1267.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (2 samples, 0.03%)</title><rect x="420.7" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (2 samples, 0.03%)</title><rect x="420.7" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (2 samples, 0.03%)</title><rect x="420.7" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (2 samples, 0.03%)</title><rect x="420.7" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.7" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (2 samples, 0.03%)</title><rect x="420.7" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (2 samples, 0.03%)</title><rect x="420.7" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (2 samples, 0.03%)</title><rect x="420.7" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.7" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (38 samples, 0.51%)</title><rect x="421.0" y="1315.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.0" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (38 samples, 0.51%)</title><rect x="421.0" y="1299.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.0" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (38 samples, 0.51%)</title><rect x="421.0" y="1283.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (9 samples, 0.12%)</title><rect x="421.0" y="1267.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/1922673440.apply (8 samples, 0.11%)</title><rect x="421.2" y="1251.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.11%)</title><rect x="421.2" y="1235.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.11%)</title><rect x="421.2" y="1219.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.11%)</title><rect x="421.2" y="1203.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.11%)</title><rect x="421.2" y="1187.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.11%)</title><rect x="421.2" y="1171.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (8 samples, 0.11%)</title><rect x="421.2" y="1155.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (8 samples, 0.11%)</title><rect x="421.2" y="1139.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (8 samples, 0.11%)</title><rect x="421.2" y="1123.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.11%)</title><rect x="421.2" y="1107.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="421.2" y="1091.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.09%)</title><rect x="421.2" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.09%)</title><rect x="421.2" y="1059.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="421.2" y="1043.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.09%)</title><rect x="421.2" y="1027.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.09%)</title><rect x="421.2" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.2" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.09%)</title><rect x="421.2" y="995.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.08%)</title><rect x="421.2" y="979.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.2" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.08%)</title><rect x="421.2" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.08%)</title><rect x="421.2" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.08%)</title><rect x="421.2" y="931.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.2" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.08%)</title><rect x="421.2" y="915.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.07%)</title><rect x="421.3" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.07%)</title><rect x="421.3" y="883.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.07%)</title><rect x="421.3" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="421.5" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="421.5" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="421.5" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.5" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="421.7" y="803.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="424.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="421.7" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="424.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="421.7" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="424.7" y="782.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="421.8" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.8" y="766.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="421.8" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.8" y="750.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="421.8" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="424.8" y="734.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="421.8" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="424.8" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="421.8" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="421.8" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (27 samples, 0.36%)</title><rect x="422.8" y="1267.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (22 samples, 0.29%)</title><rect x="423.4" y="1251.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (21 samples, 0.28%)</title><rect x="423.6" y="1235.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (21 samples, 0.28%)</title><rect x="423.6" y="1219.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.6" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (20 samples, 0.27%)</title><rect x="423.7" y="1203.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.7" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (20 samples, 0.27%)</title><rect x="423.7" y="1187.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="423.7" y="1171.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="426.7" y="1182.0"></text>
</g>
<g>
<title>__write (20 samples, 0.27%)</title><rect x="423.7" y="1155.0" width="3.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="426.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.27%)</title><rect x="423.7" y="1139.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="426.7" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.27%)</title><rect x="423.7" y="1123.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="426.7" y="1134.0"></text>
</g>
<g>
<title>sys_write (19 samples, 0.25%)</title><rect x="423.9" y="1107.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="426.9" y="1118.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.23%)</title><rect x="424.2" y="1091.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.2" y="1102.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.21%)</title><rect x="424.4" y="1075.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.4" y="1086.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.21%)</title><rect x="424.4" y="1059.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.4" y="1070.0"></text>
</g>
<g>
<title>sock_write_iter (15 samples, 0.20%)</title><rect x="424.5" y="1043.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.5" y="1054.0"></text>
</g>
<g>
<title>sock_sendmsg (15 samples, 0.20%)</title><rect x="424.5" y="1027.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.5" y="1038.0"></text>
</g>
<g>
<title>inet_sendmsg (14 samples, 0.19%)</title><rect x="424.5" y="1011.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.5" y="1022.0"></text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 0.19%)</title><rect x="424.5" y="995.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.5" y="1006.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 0.19%)</title><rect x="424.5" y="979.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.5" y="990.0"></text>
</g>
<g>
<title>tcp_push (9 samples, 0.12%)</title><rect x="425.0" y="963.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="428.0" y="974.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (8 samples, 0.11%)</title><rect x="425.0" y="947.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.0" y="958.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.09%)</title><rect x="425.1" y="931.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.1" y="942.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.07%)</title><rect x="425.1" y="915.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.1" y="926.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.07%)</title><rect x="425.1" y="899.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.1" y="910.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.07%)</title><rect x="425.1" y="883.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.1" y="894.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.07%)</title><rect x="425.1" y="867.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.1" y="878.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.07%)</title><rect x="425.1" y="851.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.1" y="862.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.07%)</title><rect x="425.1" y="835.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.1" y="846.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.07%)</title><rect x="425.1" y="819.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.1" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.07%)</title><rect x="425.1" y="803.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.1" y="814.0"></text>
</g>
<g>
<title>sch_direct_xmit (3 samples, 0.04%)</title><rect x="425.5" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.5" y="798.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (2 samples, 0.03%)</title><rect x="425.6" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.6" y="782.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="425.6" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="428.6" y="766.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="425.9" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.9" y="926.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="425.9" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.9" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="427.5" y="1331.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="430.5" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (53 samples, 0.71%)</title><rect x="427.8" y="1395.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (53 samples, 0.71%)</title><rect x="427.8" y="1379.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (53 samples, 0.71%)</title><rect x="427.8" y="1363.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (53 samples, 0.71%)</title><rect x="427.8" y="1347.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.8" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (4 samples, 0.05%)</title><rect x="427.8" y="1331.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (4 samples, 0.05%)</title><rect x="427.8" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.8" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (3 samples, 0.04%)</title><rect x="428.0" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.04%)</title><rect x="428.0" y="1283.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.04%)</title><rect x="428.0" y="1267.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="428.0" y="1251.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="431.0" y="1262.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="428.0" y="1235.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="431.0" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="428.0" y="1219.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.0" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="428.0" y="1203.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.0" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (49 samples, 0.66%)</title><rect x="428.5" y="1331.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (14 samples, 0.19%)</title><rect x="428.8" y="1315.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.17%)</title><rect x="428.8" y="1299.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.16%)</title><rect x="428.9" y="1283.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.16%)</title><rect x="428.9" y="1267.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.9" y="1278.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (11 samples, 0.15%)</title><rect x="429.1" y="1251.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.1" y="1262.0"></text>
</g>
<g>
<title>akka/routing/Router.route (10 samples, 0.13%)</title><rect x="429.1" y="1235.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.1" y="1246.0"></text>
</g>
<g>
<title>akka/routing/RandomRoutingLogic.select (2 samples, 0.03%)</title><rect x="429.3" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.3" y="1230.0"></text>
</g>
<g>
<title>akka/routing/Router.send (7 samples, 0.09%)</title><rect x="429.6" y="1219.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.6" y="1230.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (5 samples, 0.07%)</title><rect x="429.6" y="1203.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (5 samples, 0.07%)</title><rect x="429.6" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (5 samples, 0.07%)</title><rect x="429.6" y="1171.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="429.6" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.07%)</title><rect x="429.6" y="1139.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.07%)</title><rect x="429.6" y="1123.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="429.6" y="1107.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.6" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (5 samples, 0.07%)</title><rect x="429.6" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (5 samples, 0.07%)</title><rect x="429.6" y="1075.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (5 samples, 0.07%)</title><rect x="429.6" y="1059.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.6" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.07%)</title><rect x="429.6" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="429.6" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="429.6" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="429.6" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="429.6" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="429.6" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="429.6" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.05%)</title><rect x="429.6" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="429.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="429.6" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="429.6" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="429.7" y="867.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="432.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="429.7" y="851.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="429.7" y="835.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="432.7" y="846.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="429.7" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.7" y="830.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="429.7" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.7" y="814.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="429.7" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="429.9" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.9" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="429.9" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="429.9" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.9" y="750.0"></text>
</g>
<g>
<title>akka/routing/Router.unwrap (2 samples, 0.03%)</title><rect x="430.4" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (2 samples, 0.03%)</title><rect x="431.0" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.0" y="1326.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (3 samples, 0.04%)</title><rect x="431.3" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.3" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (3 samples, 0.04%)</title><rect x="431.3" y="1299.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.3" y="1310.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (3 samples, 0.04%)</title><rect x="431.3" y="1283.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.3" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (3 samples, 0.04%)</title><rect x="431.3" y="1267.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (3 samples, 0.04%)</title><rect x="431.3" y="1251.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.3" y="1262.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (3 samples, 0.04%)</title><rect x="431.3" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.3" y="1246.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (2 samples, 0.03%)</title><rect x="431.5" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.5" y="1230.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (2 samples, 0.03%)</title><rect x="431.5" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.5" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (2 samples, 0.03%)</title><rect x="431.5" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.5" y="1198.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (2 samples, 0.03%)</title><rect x="431.5" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.5" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (27 samples, 0.36%)</title><rect x="431.9" y="1315.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (20 samples, 0.27%)</title><rect x="432.3" y="1299.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.3" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (20 samples, 0.27%)</title><rect x="432.3" y="1283.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.3" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (8 samples, 0.11%)</title><rect x="432.3" y="1267.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="435.3" y="1278.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (7 samples, 0.09%)</title><rect x="432.3" y="1251.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="435.3" y="1262.0"></text>
</g>
<g>
<title>jni_NewObject (7 samples, 0.09%)</title><rect x="432.3" y="1235.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="435.3" y="1246.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (2 samples, 0.03%)</title><rect x="433.0" y="1219.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="436.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="433.5" y="1267.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="436.5" y="1278.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.03%)</title><rect x="433.5" y="1251.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="436.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="433.5" y="1235.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="436.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="433.5" y="1219.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="436.5" y="1230.0"></text>
</g>
<g>
<title>accept (2 samples, 0.03%)</title><rect x="433.5" y="1203.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="436.5" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="433.5" y="1187.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.5" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="433.5" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.5" y="1182.0"></text>
</g>
<g>
<title>sys_accept (2 samples, 0.03%)</title><rect x="433.5" y="1155.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.5" y="1166.0"></text>
</g>
<g>
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="433.5" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="433.8" y="1251.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="436.8" y="1262.0"></text>
</g>
<g>
<title>accept (5 samples, 0.07%)</title><rect x="433.8" y="1235.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="436.8" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="433.8" y="1219.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.8" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="433.8" y="1203.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.8" y="1214.0"></text>
</g>
<g>
<title>sys_accept (5 samples, 0.07%)</title><rect x="433.8" y="1187.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.8" y="1198.0"></text>
</g>
<g>
<title>SYSC_accept4 (5 samples, 0.07%)</title><rect x="433.8" y="1171.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.8" y="1182.0"></text>
</g>
<g>
<title>sock_alloc_file (3 samples, 0.04%)</title><rect x="434.1" y="1155.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.1" y="1166.0"></text>
</g>
<g>
<title>accept (2 samples, 0.03%)</title><rect x="434.6" y="1251.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="437.6" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="434.6" y="1235.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="437.6" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="434.6" y="1219.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.6" y="1230.0"></text>
</g>
<g>
<title>sys_accept (2 samples, 0.03%)</title><rect x="434.6" y="1203.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="437.6" y="1214.0"></text>
</g>
<g>
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="434.6" y="1187.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="437.6" y="1198.0"></text>
</g>
<g>
<title>inet_accept (2 samples, 0.03%)</title><rect x="434.6" y="1171.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.6" y="1182.0"></text>
</g>
<g>
<title>accept (2 samples, 0.03%)</title><rect x="434.9" y="1267.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="437.9" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="434.9" y="1251.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.9" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="434.9" y="1235.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.9" y="1246.0"></text>
</g>
<g>
<title>sys_accept (2 samples, 0.03%)</title><rect x="434.9" y="1219.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.9" y="1230.0"></text>
</g>
<g>
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="434.9" y="1203.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.9" y="1214.0"></text>
</g>
<g>
<title>sock_alloc_file (2 samples, 0.03%)</title><rect x="434.9" y="1187.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.9" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (2 samples, 0.03%)</title><rect x="435.4" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (3 samples, 0.04%)</title><rect x="435.7" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (2 samples, 0.03%)</title><rect x="435.9" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.9" y="1294.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemotingTerminator.aroundReceive (2 samples, 0.03%)</title><rect x="436.2" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.03%)</title><rect x="436.2" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.03%)</title><rect x="436.2" y="1363.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/FSM$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="436.2" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.2" y="1358.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (9 samples, 0.12%)</title><rect x="436.5" y="1395.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.12%)</title><rect x="436.5" y="1379.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.12%)</title><rect x="436.5" y="1363.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.5" y="1374.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (9 samples, 0.12%)</title><rect x="436.5" y="1347.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.5" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (7 samples, 0.09%)</title><rect x="436.5" y="1331.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.5" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.delayedQuarantine (4 samples, 0.05%)</title><rect x="436.5" y="1315.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.5" y="1326.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.quarantine (4 samples, 0.05%)</title><rect x="436.5" y="1299.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.5" y="1310.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.quarantine (4 samples, 0.05%)</title><rect x="436.5" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.5" y="1294.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.association (4 samples, 0.05%)</title><rect x="436.5" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.5" y="1278.0"></text>
</g>
<g>
<title>akka/remote/artery/AssociationRegistry.association (4 samples, 0.05%)</title><rect x="436.5" y="1251.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.5" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.associate (3 samples, 0.04%)</title><rect x="436.7" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.7" y="1246.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.runOutboundStreams (3 samples, 0.04%)</title><rect x="436.7" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.7" y="1230.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.runOutboundControlStream (3 samples, 0.04%)</title><rect x="436.7" y="1203.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.7" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.memberUp (2 samples, 0.03%)</title><rect x="437.3" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.3" y="1326.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="437.6" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.6" y="1342.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.reapUnreachable (2 samples, 0.03%)</title><rect x="437.6" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (2 samples, 0.03%)</title><rect x="437.6" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (2 samples, 0.03%)</title><rect x="437.6" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (2 samples, 0.03%)</title><rect x="437.6" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/MapOps$KeySet.iterator (2 samples, 0.03%)</title><rect x="437.6" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/MapOps$GenKeySet.iterator$ (2 samples, 0.03%)</title><rect x="437.6" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (1,321 samples, 17.69%)</title><rect x="437.9" y="1395.0" width="208.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.9" y="1406.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1,321 samples, 17.69%)</title><rect x="437.9" y="1379.0" width="208.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.9" y="1390.0">akka/actor/Actor.aroundRece..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1,321 samples, 17.69%)</title><rect x="437.9" y="1363.0" width="208.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.9" y="1374.0">akka/actor/Actor.aroundRece..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (1,319 samples, 17.66%)</title><rect x="438.1" y="1347.0" width="208.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.1" y="1358.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (1,112 samples, 14.89%)</title><rect x="439.7" y="1331.0" width="175.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.7" y="1342.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (1,110 samples, 14.87%)</title><rect x="440.0" y="1315.0" width="175.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.0" y="1326.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (1,110 samples, 14.87%)</title><rect x="440.0" y="1299.0" width="175.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.0" y="1310.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (157 samples, 2.10%)</title><rect x="440.0" y="1283.0" width="24.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.0" y="1294.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$480/419454983.apply (28 samples, 0.37%)</title><rect x="440.5" y="1267.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (27 samples, 0.36%)</title><rect x="440.6" y="1251.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (27 samples, 0.36%)</title><rect x="440.6" y="1235.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (2 samples, 0.03%)</title><rect x="440.8" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (2 samples, 0.03%)</title><rect x="440.8" y="1203.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.8" y="1214.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.03%)</title><rect x="440.8" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$499/182168955.apply (2 samples, 0.03%)</title><rect x="440.8" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$cancelTimer$1 (2 samples, 0.03%)</title><rect x="440.8" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.cancel (2 samples, 0.03%)</title><rect x="440.8" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.extractTask (2 samples, 0.03%)</title><rect x="440.8" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (4 samples, 0.05%)</title><rect x="441.1" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (2 samples, 0.03%)</title><rect x="441.1" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.equals (2 samples, 0.03%)</title><rect x="441.1" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.equals (2 samples, 0.03%)</title><rect x="441.1" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaType.equals (2 samples, 0.03%)</title><rect x="441.1" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="441.4" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.withUri (2 samples, 0.03%)</title><rect x="441.9" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.copy (2 samples, 0.03%)</title><rect x="441.9" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (14 samples, 0.19%)</title><rect x="442.2" y="1219.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (14 samples, 0.19%)</title><rect x="442.2" y="1203.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="442.2" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (12 samples, 0.16%)</title><rect x="442.5" y="1187.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.5" y="1198.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (12 samples, 0.16%)</title><rect x="442.5" y="1171.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.5" y="1182.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (10 samples, 0.13%)</title><rect x="442.5" y="1155.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.5" y="1166.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (10 samples, 0.13%)</title><rect x="442.5" y="1139.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$405/933376074.apply (10 samples, 0.13%)</title><rect x="442.5" y="1123.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (10 samples, 0.13%)</title><rect x="442.5" y="1107.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (10 samples, 0.13%)</title><rect x="442.5" y="1091.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (8 samples, 0.11%)</title><rect x="442.5" y="1075.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (8 samples, 0.11%)</title><rect x="442.5" y="1059.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (8 samples, 0.11%)</title><rect x="442.5" y="1043.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (8 samples, 0.11%)</title><rect x="442.5" y="1027.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ch16o$1 (5 samples, 0.07%)</title><rect x="442.8" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h16$1 (2 samples, 0.03%)</title><rect x="443.2" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.h8$1 (2 samples, 0.03%)</title><rect x="443.2" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (2 samples, 0.03%)</title><rect x="443.8" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$476/964854332.apply (17 samples, 0.23%)</title><rect x="444.9" y="1267.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (17 samples, 0.23%)</title><rect x="444.9" y="1251.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (17 samples, 0.23%)</title><rect x="444.9" y="1235.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$584/497868953.apply$mcV$sp (17 samples, 0.23%)</title><rect x="444.9" y="1219.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (17 samples, 0.23%)</title><rect x="444.9" y="1203.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$533/2016085864.apply (17 samples, 0.23%)</title><rect x="444.9" y="1187.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (17 samples, 0.23%)</title><rect x="444.9" y="1171.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (16 samples, 0.21%)</title><rect x="445.1" y="1155.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (16 samples, 0.21%)</title><rect x="445.1" y="1139.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$585/1196482379.apply (16 samples, 0.21%)</title><rect x="445.1" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (16 samples, 0.21%)</title><rect x="445.1" y="1107.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (16 samples, 0.21%)</title><rect x="445.1" y="1091.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (2 samples, 0.03%)</title><rect x="445.4" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.4" y="1086.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.03%)</title><rect x="445.4" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (10 samples, 0.13%)</title><rect x="445.7" y="1075.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (10 samples, 0.13%)</title><rect x="445.7" y="1059.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (10 samples, 0.13%)</title><rect x="445.7" y="1043.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (10 samples, 0.13%)</title><rect x="445.7" y="1027.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.pushRequest (2 samples, 0.03%)</title><rect x="446.5" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onConnectionAttemptSucceeded (2 samples, 0.03%)</title><rect x="447.3" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (2 samples, 0.03%)</title><rect x="447.6" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (15 samples, 0.20%)</title><rect x="447.9" y="1267.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (15 samples, 0.20%)</title><rect x="447.9" y="1251.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.postStop (2 samples, 0.03%)</title><rect x="447.9" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="447.9" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="447.9" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.03%)</title><rect x="447.9" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="447.9" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.03%)</title><rect x="447.9" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.03%)</title><rect x="447.9" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.9" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.03%)</title><rect x="447.9" y="1123.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="450.9" y="1134.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.03%)</title><rect x="447.9" y="1107.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="450.9" y="1118.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.03%)</title><rect x="447.9" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.9" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="447.9" y="1075.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (9 samples, 0.12%)</title><rect x="448.4" y="1235.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (8 samples, 0.11%)</title><rect x="448.5" y="1219.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (8 samples, 0.11%)</title><rect x="448.5" y="1203.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (8 samples, 0.11%)</title><rect x="448.5" y="1187.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (8 samples, 0.11%)</title><rect x="448.5" y="1171.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (8 samples, 0.11%)</title><rect x="448.5" y="1155.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (5 samples, 0.07%)</title><rect x="448.7" y="1139.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (5 samples, 0.07%)</title><rect x="448.7" y="1123.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unsubscribeAddressTerminated (2 samples, 0.03%)</title><rect x="448.8" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.8" y="1118.0"></text>
</g>
<g>
<title>akka/event/AddressTerminatedTopic.unsubscribe (2 samples, 0.03%)</title><rect x="448.8" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (2 samples, 0.03%)</title><rect x="449.2" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$679/579972994.apply (2 samples, 0.03%)</title><rect x="449.2" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (2 samples, 0.03%)</title><rect x="449.2" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (2 samples, 0.03%)</title><rect x="449.2" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (2 samples, 0.03%)</title><rect x="449.2" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="449.2" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="449.2" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="449.2" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="449.2" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.2" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="449.2" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.2" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="449.2" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="449.5" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (2 samples, 0.03%)</title><rect x="449.5" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (2 samples, 0.03%)</title><rect x="449.5" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="449.5" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="449.5" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="449.5" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="449.5" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="449.5" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (2 samples, 0.03%)</title><rect x="450.0" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (2 samples, 0.03%)</title><rect x="450.0" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1030/972719228.apply (3 samples, 0.04%)</title><rect x="450.4" y="1267.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6$adapted (3 samples, 0.04%)</title><rect x="450.4" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6 (3 samples, 0.04%)</title><rect x="450.4" y="1235.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.futureCompleted (3 samples, 0.04%)</title><rect x="450.4" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1981198156.apply (50 samples, 0.67%)</title><rect x="451.1" y="1267.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (50 samples, 0.67%)</title><rect x="451.1" y="1251.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (50 samples, 0.67%)</title><rect x="451.1" y="1235.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (50 samples, 0.67%)</title><rect x="451.1" y="1219.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$796/2077808389.apply (18 samples, 0.24%)</title><rect x="451.1" y="1203.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (17 samples, 0.23%)</title><rect x="451.1" y="1187.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (17 samples, 0.23%)</title><rect x="451.1" y="1171.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (17 samples, 0.23%)</title><rect x="451.1" y="1155.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (16 samples, 0.21%)</title><rect x="451.1" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (10 samples, 0.13%)</title><rect x="451.4" y="1123.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (3 samples, 0.04%)</title><rect x="451.5" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.05%)</title><rect x="452.2" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (3 samples, 0.04%)</title><rect x="452.2" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (2 samples, 0.03%)</title><rect x="452.3" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (3 samples, 0.04%)</title><rect x="453.0" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (3 samples, 0.04%)</title><rect x="453.0" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.0" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1088/979695891.apply (2 samples, 0.03%)</title><rect x="453.9" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2$adapted (2 samples, 0.03%)</title><rect x="453.9" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2 (2 samples, 0.03%)</title><rect x="453.9" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (2 samples, 0.03%)</title><rect x="453.9" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/StreamTcpException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="453.9" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$536/279887830.apply (24 samples, 0.32%)</title><rect x="454.2" y="1203.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (23 samples, 0.31%)</title><rect x="454.4" y="1187.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (23 samples, 0.31%)</title><rect x="454.4" y="1171.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (23 samples, 0.31%)</title><rect x="454.4" y="1155.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="454.5" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="454.5" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="454.5" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="454.5" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="454.5" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="454.5" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="454.5" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="454.5" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.bytesOut (2 samples, 0.03%)</title><rect x="454.9" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (7 samples, 0.09%)</title><rect x="455.2" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (7 samples, 0.09%)</title><rect x="455.2" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (2 samples, 0.03%)</title><rect x="455.2" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.2" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="455.2" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (5 samples, 0.07%)</title><rect x="455.5" y="1107.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (5 samples, 0.07%)</title><rect x="455.5" y="1091.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (5 samples, 0.07%)</title><rect x="455.5" y="1075.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (5 samples, 0.07%)</title><rect x="455.5" y="1059.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (4 samples, 0.05%)</title><rect x="455.6" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="455.6" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="455.6" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="455.6" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="456.0" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="456.0" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="456.0" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="456.0" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.0" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="456.0" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="456.0" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="456.0" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="456.0" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="456.0" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="456.0" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="456.0" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.0" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="456.0" y="851.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="459.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="456.0" y="835.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="459.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="456.0" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.0" y="830.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (10 samples, 0.13%)</title><rect x="456.4" y="1139.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.4" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (10 samples, 0.13%)</title><rect x="456.4" y="1123.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.4" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (10 samples, 0.13%)</title><rect x="456.4" y="1107.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.4" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (10 samples, 0.13%)</title><rect x="456.4" y="1091.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.4" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (10 samples, 0.13%)</title><rect x="456.4" y="1075.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.4" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (10 samples, 0.13%)</title><rect x="456.4" y="1059.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.4" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (9 samples, 0.12%)</title><rect x="456.6" y="1043.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.6" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (9 samples, 0.12%)</title><rect x="456.6" y="1027.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.6" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (9 samples, 0.12%)</title><rect x="456.6" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.6" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (9 samples, 0.12%)</title><rect x="456.6" y="995.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (9 samples, 0.12%)</title><rect x="456.6" y="979.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.6" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (9 samples, 0.12%)</title><rect x="456.6" y="963.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.6" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (9 samples, 0.12%)</title><rect x="456.6" y="947.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.6" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (6 samples, 0.08%)</title><rect x="456.7" y="931.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.7" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (6 samples, 0.08%)</title><rect x="456.7" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.7" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (5 samples, 0.07%)</title><rect x="456.7" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.7" y="910.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (5 samples, 0.07%)</title><rect x="456.7" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.7" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$582/1169211746.apply (5 samples, 0.07%)</title><rect x="458.0" y="1203.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1$adapted (5 samples, 0.07%)</title><rect x="458.0" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1 (5 samples, 0.07%)</title><rect x="458.0" y="1171.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (5 samples, 0.07%)</title><rect x="458.0" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.akka$stream$impl$io$TcpConnectionStage$TcpStreamLogic$$fail (3 samples, 0.04%)</title><rect x="458.3" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.reportExceptionToPromise (2 samples, 0.03%)</title><rect x="458.3" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$500/1647057915.apply (22 samples, 0.29%)</title><rect x="459.0" y="1267.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (21 samples, 0.28%)</title><rect x="459.1" y="1251.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (21 samples, 0.28%)</title><rect x="459.1" y="1235.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (21 samples, 0.28%)</title><rect x="459.1" y="1219.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (14 samples, 0.19%)</title><rect x="459.4" y="1203.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (2 samples, 0.03%)</title><rect x="459.4" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="459.4" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="459.4" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (11 samples, 0.15%)</title><rect x="459.9" y="1187.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 0.13%)</title><rect x="459.9" y="1171.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 0.13%)</title><rect x="459.9" y="1155.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.13%)</title><rect x="459.9" y="1139.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.13%)</title><rect x="459.9" y="1123.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.9" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (10 samples, 0.13%)</title><rect x="459.9" y="1107.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="462.9" y="1118.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (10 samples, 0.13%)</title><rect x="459.9" y="1091.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="462.9" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (10 samples, 0.13%)</title><rect x="459.9" y="1075.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="462.9" y="1086.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (10 samples, 0.13%)</title><rect x="459.9" y="1059.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="462.9" y="1070.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.03%)</title><rect x="460.2" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="463.2" y="1054.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.03%)</title><rect x="460.2" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="463.2" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.08%)</title><rect x="460.5" y="1043.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="463.5" y="1054.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.08%)</title><rect x="460.5" y="1027.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="463.5" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.07%)</title><rect x="460.5" y="1011.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="463.5" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.07%)</title><rect x="460.5" y="995.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="463.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (4 samples, 0.05%)</title><rect x="461.8" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.09%)</title><rect x="462.6" y="1267.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.08%)</title><rect x="462.8" y="1251.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="463.2" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.2" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (7 samples, 0.09%)</title><rect x="463.7" y="1267.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (7 samples, 0.09%)</title><rect x="463.7" y="1251.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (7 samples, 0.09%)</title><rect x="463.7" y="1235.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (6 samples, 0.08%)</title><rect x="463.7" y="1219.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (6 samples, 0.08%)</title><rect x="463.7" y="1203.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (6 samples, 0.08%)</title><rect x="463.7" y="1187.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (6 samples, 0.08%)</title><rect x="463.7" y="1171.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.08%)</title><rect x="463.7" y="1155.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (6 samples, 0.08%)</title><rect x="463.7" y="1139.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (6 samples, 0.08%)</title><rect x="463.7" y="1123.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.7" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (6 samples, 0.08%)</title><rect x="463.7" y="1107.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.7" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (6 samples, 0.08%)</title><rect x="463.7" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.7" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (5 samples, 0.07%)</title><rect x="463.9" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.9" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (5 samples, 0.07%)</title><rect x="463.9" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.9" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (5 samples, 0.07%)</title><rect x="463.9" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (5 samples, 0.07%)</title><rect x="463.9" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (5 samples, 0.07%)</title><rect x="463.9" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (5 samples, 0.07%)</title><rect x="463.9" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (4 samples, 0.05%)</title><rect x="463.9" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (4 samples, 0.05%)</title><rect x="463.9" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.9" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="463.9" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.9" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="463.9" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.9" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="463.9" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.9" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="463.9" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="463.9" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.04%)</title><rect x="464.0" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="464.2" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="464.2" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.2" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (952 samples, 12.75%)</title><rect x="465.0" y="1283.0" width="150.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.0" y="1294.0">akka/stream/impl/fu..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (951 samples, 12.74%)</title><rect x="465.0" y="1267.0" width="150.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.0" y="1278.0">akka/stream/impl/fu..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (16 samples, 0.21%)</title><rect x="465.3" y="1251.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (16 samples, 0.21%)</title><rect x="465.3" y="1235.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (8 samples, 0.11%)</title><rect x="465.9" y="1219.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (7 samples, 0.09%)</title><rect x="465.9" y="1203.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (7 samples, 0.09%)</title><rect x="465.9" y="1187.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (7 samples, 0.09%)</title><rect x="465.9" y="1171.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (7 samples, 0.09%)</title><rect x="465.9" y="1155.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (7 samples, 0.09%)</title><rect x="465.9" y="1139.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (5 samples, 0.07%)</title><rect x="465.9" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (5 samples, 0.07%)</title><rect x="465.9" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (2 samples, 0.03%)</title><rect x="466.4" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="466.7" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (2 samples, 0.03%)</title><rect x="466.7" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (2 samples, 0.03%)</title><rect x="466.7" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="466.7" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="466.7" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="466.7" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="466.7" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="466.7" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.7" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (3 samples, 0.04%)</title><rect x="467.3" y="1219.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (260 samples, 3.48%)</title><rect x="467.8" y="1251.0" width="41.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.8" y="1262.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onUpstreamFinish (3 samples, 0.04%)</title><rect x="468.0" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.shouldComplete$ (2 samples, 0.03%)</title><rect x="468.1" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (3 samples, 0.04%)</title><rect x="468.6" y="1235.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$4.onDownstreamFinish (3 samples, 0.04%)</title><rect x="469.1" y="1235.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="469.1" y="1219.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="469.1" y="1203.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$4.onDownstreamFinish (2 samples, 0.03%)</title><rect x="469.1" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (22 samples, 0.29%)</title><rect x="469.7" y="1235.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.7" y="1246.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.11%)</title><rect x="471.9" y="1219.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="474.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (179 samples, 2.40%)</title><rect x="473.2" y="1235.0" width="28.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.2" y="1246.0">ak..</text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (2 samples, 0.03%)</title><rect x="473.2" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.2" y="1230.0"></text>
</g>
<g>
<title>akka/remote/MessageSerializer$.serializeForArtery (2 samples, 0.03%)</title><rect x="473.2" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.2" y="1214.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.toBinary (2 samples, 0.03%)</title><rect x="473.2" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (3 samples, 0.04%)</title><rect x="473.5" y="1219.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onPush (2 samples, 0.03%)</title><rect x="473.5" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (164 samples, 2.20%)</title><rect x="474.0" y="1219.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.0" y="1230.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1028/377236660.apply (162 samples, 2.17%)</title><rect x="474.0" y="1203.0" width="25.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.0" y="1214.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (161 samples, 2.16%)</title><rect x="474.1" y="1187.0" width="25.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.1" y="1198.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.watchTermination (17 samples, 0.23%)</title><rect x="474.6" y="1171.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination$ (17 samples, 0.23%)</title><rect x="474.6" y="1155.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.6" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="474.6" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="477.6" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="474.6" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="477.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination (15 samples, 0.20%)</title><rect x="474.9" y="1139.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (15 samples, 0.20%)</title><rect x="474.9" y="1123.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (15 samples, 0.20%)</title><rect x="474.9" y="1107.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (15 samples, 0.20%)</title><rect x="474.9" y="1091.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (14 samples, 0.19%)</title><rect x="475.1" y="1075.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (10 samples, 0.13%)</title><rect x="475.2" y="1059.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.11%)</title><rect x="475.4" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.11%)</title><rect x="475.4" y="1027.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.4" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.11%)</title><rect x="475.4" y="1011.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.4" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.11%)</title><rect x="475.4" y="995.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.completeIfPossible (2 samples, 0.03%)</title><rect x="475.4" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.4" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="475.9" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="476.2" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.2" y="990.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (138 samples, 1.85%)</title><rect x="477.3" y="1171.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.3" y="1182.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (138 samples, 1.85%)</title><rect x="477.3" y="1155.0" width="21.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.3" y="1166.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (138 samples, 1.85%)</title><rect x="477.3" y="1139.0" width="21.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.3" y="1150.0">a..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (138 samples, 1.85%)</title><rect x="477.3" y="1123.0" width="21.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.3" y="1134.0">a..</text>
</g>
<g>
<title>akka/stream/Attributes.and (16 samples, 0.21%)</title><rect x="478.6" y="1107.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (10 samples, 0.13%)</title><rect x="479.2" y="1091.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.isEmpty (2 samples, 0.03%)</title><rect x="479.2" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (5 samples, 0.07%)</title><rect x="479.5" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (5 samples, 0.07%)</title><rect x="479.5" y="1059.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.prependToList (3 samples, 0.04%)</title><rect x="480.3" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="481.1" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="481.1" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Compose.apply (3 samples, 0.04%)</title><rect x="481.4" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1080/1148468894.apply (2 samples, 0.03%)</title><rect x="481.6" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$2 (2 samples, 0.03%)</title><rect x="481.6" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.6" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (39 samples, 0.52%)</title><rect x="481.9" y="1107.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="481.9" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="481.9" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (37 samples, 0.50%)</title><rect x="482.2" y="1091.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage.createLogicAndMaterializedValue (3 samples, 0.04%)</title><rect x="482.2" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.3" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="482.7" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (32 samples, 0.43%)</title><rect x="483.0" y="1075.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$.createLogic (4 samples, 0.05%)</title><rect x="483.3" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="483.3" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.DontClose (2 samples, 0.03%)</title><rect x="483.3" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="483.6" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (2 samples, 0.03%)</title><rect x="483.6" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (2 samples, 0.03%)</title><rect x="483.6" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (2 samples, 0.03%)</title><rect x="483.6" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.6" y="990.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="483.6" y="963.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="486.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests.createLogic (5 samples, 0.07%)</title><rect x="484.1" y="1059.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="484.2" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/Attributes.get (2 samples, 0.03%)</title><rect x="484.2" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (2 samples, 0.03%)</title><rect x="484.2" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst$ (2 samples, 0.03%)</title><rect x="484.2" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst (2 samples, 0.03%)</title><rect x="484.2" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage.createLogic (3 samples, 0.04%)</title><rect x="484.9" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15.&lt;init&gt; (3 samples, 0.04%)</title><rect x="484.9" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport.createLogic (4 samples, 0.05%)</title><rect x="485.4" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3.&lt;init&gt; (4 samples, 0.05%)</title><rect x="485.4" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (3 samples, 0.04%)</title><rect x="486.1" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.&lt;init&gt; (3 samples, 0.04%)</title><rect x="486.1" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.&lt;init&gt; (3 samples, 0.04%)</title><rect x="486.1" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/MapFactory$Delegate.apply (2 samples, 0.03%)</title><rect x="486.3" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.apply (2 samples, 0.03%)</title><rect x="486.3" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/MapFactory.apply$ (2 samples, 0.03%)</title><rect x="486.3" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/MapFactory.apply (2 samples, 0.03%)</title><rect x="486.3" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.from (2 samples, 0.03%)</title><rect x="486.3" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$.from (2 samples, 0.03%)</title><rect x="486.3" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.addAll (2 samples, 0.03%)</title><rect x="486.3" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.3" y="926.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (5 samples, 0.07%)</title><rect x="487.2" y="1059.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (39 samples, 0.52%)</title><rect x="488.0" y="1107.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (30 samples, 0.40%)</title><rect x="488.0" y="1091.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.0" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (29 samples, 0.39%)</title><rect x="488.2" y="1075.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (29 samples, 0.39%)</title><rect x="488.2" y="1059.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (29 samples, 0.39%)</title><rect x="488.2" y="1043.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (29 samples, 0.39%)</title><rect x="488.2" y="1027.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (2 samples, 0.03%)</title><rect x="488.5" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (2 samples, 0.03%)</title><rect x="488.5" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (2 samples, 0.03%)</title><rect x="488.5" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (2 samples, 0.03%)</title><rect x="488.5" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.5" y="974.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (24 samples, 0.32%)</title><rect x="489.0" y="1011.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.0" y="1022.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (18 samples, 0.24%)</title><rect x="489.1" y="995.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (11 samples, 0.15%)</title><rect x="489.3" y="979.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (11 samples, 0.15%)</title><rect x="489.3" y="963.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.3" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (11 samples, 0.15%)</title><rect x="489.3" y="947.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.3" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (11 samples, 0.15%)</title><rect x="489.3" y="931.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.3" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (11 samples, 0.15%)</title><rect x="489.3" y="915.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.3" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (11 samples, 0.15%)</title><rect x="489.3" y="899.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.3" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="489.3" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.3" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="489.3" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.3" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="489.3" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.3" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.12%)</title><rect x="489.6" y="883.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.12%)</title><rect x="489.6" y="867.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.12%)</title><rect x="489.6" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.6" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.12%)</title><rect x="489.6" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.6" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.12%)</title><rect x="489.6" y="819.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.12%)</title><rect x="489.6" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.12%)</title><rect x="489.6" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (8 samples, 0.11%)</title><rect x="489.8" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.08%)</title><rect x="490.1" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="490.1" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.08%)</title><rect x="490.1" y="723.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="490.2" y="707.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="493.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="490.4" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="490.4" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.4" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="490.4" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.4" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="490.4" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="490.4" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="490.6" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="490.6" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="490.6" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.6" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (2 samples, 0.03%)</title><rect x="491.0" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.0" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (4 samples, 0.05%)</title><rect x="491.4" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (3 samples, 0.04%)</title><rect x="492.3" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (3 samples, 0.04%)</title><rect x="492.3" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (3 samples, 0.04%)</title><rect x="492.3" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (3 samples, 0.04%)</title><rect x="492.3" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (3 samples, 0.04%)</title><rect x="492.3" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (3 samples, 0.04%)</title><rect x="492.3" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.3" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (8 samples, 0.11%)</title><rect x="492.8" y="1091.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.8" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (3 samples, 0.04%)</title><rect x="492.8" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (3 samples, 0.04%)</title><rect x="492.8" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (3 samples, 0.04%)</title><rect x="492.8" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (2 samples, 0.03%)</title><rect x="492.8" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (2 samples, 0.03%)</title><rect x="492.8" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.8" y="1022.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (2 samples, 0.03%)</title><rect x="492.8" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.8" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (5 samples, 0.07%)</title><rect x="493.3" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (5 samples, 0.07%)</title><rect x="493.3" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (5 samples, 0.07%)</title><rect x="493.3" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.3" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (5 samples, 0.07%)</title><rect x="493.3" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (5 samples, 0.07%)</title><rect x="493.3" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.3" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (4 samples, 0.05%)</title><rect x="493.4" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.4" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="493.7" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.7" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="493.7" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (2 samples, 0.03%)</title><rect x="494.2" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (2 samples, 0.03%)</title><rect x="494.2" y="1091.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (2 samples, 0.03%)</title><rect x="494.2" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (2 samples, 0.03%)</title><rect x="494.5" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (2 samples, 0.03%)</title><rect x="494.5" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="494.5" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="494.5" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.03%)</title><rect x="494.5" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (8 samples, 0.11%)</title><rect x="494.8" y="1107.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (6 samples, 0.08%)</title><rect x="495.1" y="1091.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (4 samples, 0.05%)</title><rect x="495.1" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (4 samples, 0.05%)</title><rect x="495.1" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (3 samples, 0.04%)</title><rect x="495.1" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.1" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (2 samples, 0.03%)</title><rect x="495.8" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (3 samples, 0.04%)</title><rect x="496.1" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (2 samples, 0.03%)</title><rect x="496.1" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (9 samples, 0.12%)</title><rect x="496.6" y="1107.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1081/928401030.apply (8 samples, 0.11%)</title><rect x="496.7" y="1091.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (7 samples, 0.09%)</title><rect x="496.9" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (7 samples, 0.09%)</title><rect x="496.9" y="1059.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (5 samples, 0.07%)</title><rect x="497.2" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (5 samples, 0.07%)</title><rect x="497.2" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (5 samples, 0.07%)</title><rect x="497.2" y="1011.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (5 samples, 0.07%)</title><rect x="497.2" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (5 samples, 0.07%)</title><rect x="497.2" y="979.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (3 samples, 0.04%)</title><rect x="497.2" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="497.4" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.4" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="497.4" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.4" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="497.7" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.03%)</title><rect x="497.7" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.7" y="958.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.03%)</title><rect x="497.7" y="931.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="500.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="498.0" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.0" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (4 samples, 0.05%)</title><rect x="498.3" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (3 samples, 0.04%)</title><rect x="498.5" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.5" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.grow (2 samples, 0.03%)</title><rect x="498.6" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.6" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.recover (2 samples, 0.03%)</title><rect x="499.3" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.3" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="499.6" y="1203.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="502.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (10 samples, 0.13%)</title><rect x="499.9" y="1219.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.09%)</title><rect x="499.9" y="1203.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="499.9" y="1187.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.09%)</title><rect x="499.9" y="1171.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.09%)</title><rect x="499.9" y="1155.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="499.9" y="1139.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.09%)</title><rect x="499.9" y="1123.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.09%)</title><rect x="499.9" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.09%)</title><rect x="499.9" y="1091.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.09%)</title><rect x="499.9" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.09%)</title><rect x="499.9" y="1059.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.09%)</title><rect x="499.9" y="1043.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.09%)</title><rect x="499.9" y="1027.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.09%)</title><rect x="499.9" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.09%)</title><rect x="499.9" y="995.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.09%)</title><rect x="499.9" y="979.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.09%)</title><rect x="499.9" y="963.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.08%)</title><rect x="500.0" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="500.0" y="931.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.08%)</title><rect x="500.0" y="915.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.0" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="500.0" y="899.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="503.0" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="500.4" y="899.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="503.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="500.4" y="883.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="500.5" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="503.5" y="878.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="500.5" y="851.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.5" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="500.5" y="835.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="503.5" y="846.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="500.5" y="819.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.5" y="830.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="500.7" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="500.7" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="503.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="500.7" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.7" y="782.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (2 samples, 0.03%)</title><rect x="501.2" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.2" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (2 samples, 0.03%)</title><rect x="501.2" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (2 samples, 0.03%)</title><rect x="501.2" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (2 samples, 0.03%)</title><rect x="501.2" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.2" y="1166.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (2 samples, 0.03%)</title><rect x="501.2" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (2 samples, 0.03%)</title><rect x="501.2" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (2 samples, 0.03%)</title><rect x="501.2" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.04%)</title><rect x="501.6" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="501.6" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="501.6" y="1203.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.04%)</title><rect x="501.6" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="501.6" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="501.6" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.04%)</title><rect x="501.6" y="1139.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="501.8" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (6 samples, 0.08%)</title><rect x="502.4" y="1235.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (6 samples, 0.08%)</title><rect x="502.4" y="1219.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (6 samples, 0.08%)</title><rect x="502.4" y="1203.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (6 samples, 0.08%)</title><rect x="502.4" y="1187.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (6 samples, 0.08%)</title><rect x="502.4" y="1171.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (6 samples, 0.08%)</title><rect x="502.4" y="1155.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.4" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (6 samples, 0.08%)</title><rect x="502.4" y="1139.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.4" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (6 samples, 0.08%)</title><rect x="502.4" y="1123.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.4" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.08%)</title><rect x="502.4" y="1107.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.4" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (6 samples, 0.08%)</title><rect x="502.4" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.4" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (6 samples, 0.08%)</title><rect x="502.4" y="1075.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (6 samples, 0.08%)</title><rect x="502.4" y="1059.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.08%)</title><rect x="502.4" y="1043.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.08%)</title><rect x="502.4" y="1027.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (6 samples, 0.08%)</title><rect x="502.4" y="1011.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (6 samples, 0.08%)</title><rect x="502.4" y="995.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (6 samples, 0.08%)</title><rect x="502.4" y="979.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.4" y="990.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (6 samples, 0.08%)</title><rect x="502.4" y="963.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1031/1318323835.apply (3 samples, 0.04%)</title><rect x="502.6" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.6" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (3 samples, 0.04%)</title><rect x="502.6" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.6" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (3 samples, 0.04%)</title><rect x="502.6" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.6" y="926.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (3 samples, 0.04%)</title><rect x="502.6" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.6" y="910.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (3 samples, 0.04%)</title><rect x="502.6" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.6" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.03%)</title><rect x="502.7" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.7" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (2 samples, 0.03%)</title><rect x="502.7" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.7" y="862.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.03%)</title><rect x="502.7" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.7" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.03%)</title><rect x="502.7" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.7" y="830.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.03%)</title><rect x="502.7" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.7" y="814.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="502.7" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.7" y="798.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="502.7" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.7" y="782.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="502.7" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.7" y="766.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="502.7" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.7" y="750.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="502.7" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.7" y="734.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="502.7" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.7" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="502.7" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.7" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="502.7" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.7" y="686.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="502.7" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.7" y="670.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="502.7" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.7" y="654.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="502.7" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.7" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="502.7" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="502.7" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="502.7" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="502.7" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="502.7" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="502.7" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="502.7" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.7" y="526.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="502.7" y="499.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="505.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="502.7" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="502.7" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.7" y="478.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.linkRootOf (2 samples, 0.03%)</title><rect x="503.0" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.0" y="958.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.03%)</title><rect x="503.0" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.0" y="942.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.03%)</title><rect x="503.0" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="926.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.03%)</title><rect x="503.0" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.0" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (2 samples, 0.03%)</title><rect x="503.0" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.0" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.03%)</title><rect x="503.0" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.0" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.03%)</title><rect x="503.0" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="503.0" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="503.0" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="503.0" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="814.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (2 samples, 0.03%)</title><rect x="503.4" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.03%)</title><rect x="503.4" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.03%)</title><rect x="503.4" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (4 samples, 0.05%)</title><rect x="503.8" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.8" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (4 samples, 0.05%)</title><rect x="503.8" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (3 samples, 0.04%)</title><rect x="504.0" y="1203.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (3 samples, 0.04%)</title><rect x="504.0" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="504.2" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (7 samples, 0.09%)</title><rect x="504.5" y="1235.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.log (4 samples, 0.05%)</title><rect x="504.9" y="1219.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log$ (4 samples, 0.05%)</title><rect x="504.9" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log (4 samples, 0.05%)</title><rect x="504.9" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.makeLogger (2 samples, 0.03%)</title><rect x="505.1" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.1" y="1182.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (2 samples, 0.03%)</title><rect x="505.1" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.1" y="1166.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.03%)</title><rect x="505.1" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.1" y="1150.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.03%)</title><rect x="505.1" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (15 samples, 0.20%)</title><rect x="505.6" y="1235.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.6" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (11 samples, 0.15%)</title><rect x="505.7" y="1219.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (11 samples, 0.15%)</title><rect x="505.7" y="1203.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (11 samples, 0.15%)</title><rect x="505.7" y="1187.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.7" y="1198.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (4 samples, 0.05%)</title><rect x="505.7" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.7" y="1182.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (4 samples, 0.05%)</title><rect x="505.7" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.7" y="1166.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (3 samples, 0.04%)</title><rect x="505.9" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.9" y="1150.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (3 samples, 0.04%)</title><rect x="505.9" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.9" y="1134.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (6 samples, 0.08%)</title><rect x="506.4" y="1171.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.4" y="1182.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.07%)</title><rect x="506.5" y="1155.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.5" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (5 samples, 0.07%)</title><rect x="506.5" y="1139.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.5" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (5 samples, 0.07%)</title><rect x="506.5" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (5 samples, 0.07%)</title><rect x="506.5" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.5" y="1118.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/1508181426.apply (5 samples, 0.07%)</title><rect x="506.5" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.5" y="1102.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (5 samples, 0.07%)</title><rect x="506.5" y="1075.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.5" y="1086.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (5 samples, 0.07%)</title><rect x="506.5" y="1059.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.5" y="1070.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.07%)</title><rect x="506.5" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.5" y="1054.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.07%)</title><rect x="506.5" y="1027.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (4 samples, 0.05%)</title><rect x="506.5" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.05%)</title><rect x="506.5" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.05%)</title><rect x="506.5" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.05%)</title><rect x="506.5" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.5" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.04%)</title><rect x="506.7" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.04%)</title><rect x="506.7" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.7" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.04%)</title><rect x="506.7" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.7" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.04%)</title><rect x="506.7" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.7" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="506.7" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.7" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="506.7" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.7" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="506.7" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.7" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="506.7" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.7" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="506.7" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="506.7" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="506.7" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (3 samples, 0.04%)</title><rect x="507.5" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (3 samples, 0.04%)</title><rect x="507.5" y="1203.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (2 samples, 0.03%)</title><rect x="507.6" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (4 samples, 0.05%)</title><rect x="508.1" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onDownstreamFinish (2 samples, 0.03%)</title><rect x="508.3" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (23 samples, 0.31%)</title><rect x="508.9" y="1251.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (2 samples, 0.03%)</title><rect x="509.4" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.onPull (2 samples, 0.03%)</title><rect x="509.7" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.03%)</title><rect x="509.7" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.03%)</title><rect x="509.7" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (5 samples, 0.07%)</title><rect x="510.0" y="1235.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (5 samples, 0.07%)</title><rect x="510.0" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="510.0" y="1203.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.07%)</title><rect x="510.0" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.07%)</title><rect x="510.0" y="1171.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.07%)</title><rect x="510.0" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.0" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (5 samples, 0.07%)</title><rect x="510.0" y="1139.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (5 samples, 0.07%)</title><rect x="510.0" y="1123.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (5 samples, 0.07%)</title><rect x="510.0" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.07%)</title><rect x="510.0" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="510.0" y="1075.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.07%)</title><rect x="510.0" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="510.0" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.07%)</title><rect x="510.0" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.07%)</title><rect x="510.0" y="1011.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.07%)</title><rect x="510.0" y="995.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.07%)</title><rect x="510.0" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.07%)</title><rect x="510.0" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="510.0" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="510.0" y="931.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.0" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="510.0" y="915.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="513.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="510.2" y="899.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="510.2" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="513.2" y="894.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="510.3" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.3" y="878.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="510.3" y="851.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.3" y="862.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="510.3" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="513.3" y="846.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="510.3" y="819.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="513.3" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="510.3" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="513.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="510.3" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.3" y="798.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (11 samples, 0.15%)</title><rect x="510.8" y="1235.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (11 samples, 0.15%)</title><rect x="510.8" y="1219.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.15%)</title><rect x="510.8" y="1203.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.15%)</title><rect x="510.8" y="1187.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.15%)</title><rect x="510.8" y="1171.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.15%)</title><rect x="510.8" y="1155.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (11 samples, 0.15%)</title><rect x="510.8" y="1139.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (11 samples, 0.15%)</title><rect x="510.8" y="1123.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (11 samples, 0.15%)</title><rect x="510.8" y="1107.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.13%)</title><rect x="510.8" y="1091.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="510.8" y="1075.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.13%)</title><rect x="510.8" y="1059.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.8" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.13%)</title><rect x="510.8" y="1043.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.8" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.12%)</title><rect x="511.0" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.12%)</title><rect x="511.0" y="1011.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.12%)</title><rect x="511.0" y="995.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.11%)</title><rect x="511.1" y="979.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.09%)</title><rect x="511.3" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="511.4" y="947.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.08%)</title><rect x="511.4" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.4" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.08%)</title><rect x="511.4" y="915.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="514.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="511.6" y="899.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="511.6" y="883.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="514.6" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="511.6" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.6" y="878.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="511.6" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.6" y="862.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="511.6" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="514.6" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="511.6" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="514.6" y="830.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="511.9" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="514.9" y="878.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="511.9" y="851.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.9" y="862.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="511.9" y="835.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.9" y="846.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="511.9" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="514.9" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="511.9" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="511.9" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.9" y="798.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (632 samples, 8.46%)</title><rect x="512.5" y="1251.0" width="99.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.5" y="1262.0">akka/stream/..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onPush (4 samples, 0.05%)</title><rect x="512.7" y="1235.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.createEntity (3 samples, 0.04%)</title><rect x="512.8" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (95 samples, 1.27%)</title><rect x="513.3" y="1235.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (94 samples, 1.26%)</title><rect x="513.5" y="1219.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (94 samples, 1.26%)</title><rect x="513.5" y="1203.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (94 samples, 1.26%)</title><rect x="513.5" y="1187.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (90 samples, 1.21%)</title><rect x="513.8" y="1171.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (90 samples, 1.21%)</title><rect x="513.8" y="1155.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (90 samples, 1.21%)</title><rect x="513.8" y="1139.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (87 samples, 1.17%)</title><rect x="513.8" y="1123.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$593/58936580.apply (86 samples, 1.15%)</title><rect x="513.8" y="1107.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (86 samples, 1.15%)</title><rect x="513.8" y="1091.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$592/1442021445.apply (86 samples, 1.15%)</title><rect x="513.8" y="1075.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (86 samples, 1.15%)</title><rect x="513.8" y="1059.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (86 samples, 1.15%)</title><rect x="513.8" y="1043.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (86 samples, 1.15%)</title><rect x="513.8" y="1027.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.8" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (86 samples, 1.15%)</title><rect x="513.8" y="1011.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (86 samples, 1.15%)</title><rect x="513.8" y="995.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (86 samples, 1.15%)</title><rect x="513.8" y="979.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.8" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (81 samples, 1.08%)</title><rect x="513.8" y="963.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (81 samples, 1.08%)</title><rect x="513.8" y="947.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (81 samples, 1.08%)</title><rect x="513.8" y="931.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (65 samples, 0.87%)</title><rect x="513.8" y="915.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (6 samples, 0.08%)</title><rect x="514.0" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.0" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (4 samples, 0.05%)</title><rect x="514.1" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.1" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ValueBranch.withValueCountIncreased (2 samples, 0.03%)</title><rect x="514.4" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.4" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (58 samples, 0.78%)</title><rect x="514.9" y="899.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (57 samples, 0.76%)</title><rect x="514.9" y="883.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (4 samples, 0.05%)</title><rect x="515.2" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.2" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.asciiString (2 samples, 0.03%)</title><rect x="515.4" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.build$1 (2 samples, 0.03%)</title><rect x="515.4" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.4" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (50 samples, 0.67%)</title><rect x="515.8" y="867.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (50 samples, 0.67%)</title><rect x="515.8" y="851.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.8" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (8 samples, 0.11%)</title><rect x="515.8" y="835.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.8" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (8 samples, 0.11%)</title><rect x="515.8" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.8" y="830.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (8 samples, 0.11%)</title><rect x="515.8" y="803.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.8" y="814.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (8 samples, 0.11%)</title><rect x="515.8" y="787.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$603/2023804785.apply (8 samples, 0.11%)</title><rect x="515.8" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (8 samples, 0.11%)</title><rect x="515.8" y="755.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.8" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (8 samples, 0.11%)</title><rect x="515.8" y="739.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (8 samples, 0.11%)</title><rect x="515.8" y="723.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (8 samples, 0.11%)</title><rect x="515.8" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (4 samples, 0.05%)</title><rect x="516.2" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (3 samples, 0.04%)</title><rect x="516.3" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.3" y="686.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals$ (3 samples, 0.04%)</title><rect x="516.3" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.3" y="670.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals (3 samples, 0.04%)</title><rect x="516.3" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.3" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sameElements (2 samples, 0.03%)</title><rect x="516.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.3" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (2 samples, 0.03%)</title><rect x="516.8" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (2 samples, 0.03%)</title><rect x="516.8" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (2 samples, 0.03%)</title><rect x="516.8" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (20 samples, 0.27%)</title><rect x="517.1" y="835.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.1" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (20 samples, 0.27%)</title><rect x="517.1" y="819.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.1" y="830.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (20 samples, 0.27%)</title><rect x="517.1" y="803.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="814.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (20 samples, 0.27%)</title><rect x="517.1" y="787.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$596/150876175.apply (19 samples, 0.25%)</title><rect x="517.1" y="771.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (19 samples, 0.25%)</title><rect x="517.1" y="755.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (18 samples, 0.24%)</title><rect x="517.3" y="739.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.3" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (18 samples, 0.24%)</title><rect x="517.3" y="723.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (17 samples, 0.23%)</title><rect x="517.4" y="707.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.4" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (17 samples, 0.23%)</title><rect x="517.4" y="691.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.4" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (17 samples, 0.23%)</title><rect x="517.4" y="675.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.4" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (17 samples, 0.23%)</title><rect x="517.4" y="659.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.4" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (17 samples, 0.23%)</title><rect x="517.4" y="643.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.4" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (17 samples, 0.23%)</title><rect x="517.4" y="627.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (17 samples, 0.23%)</title><rect x="517.4" y="611.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.4" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.createDateTime (2 samples, 0.03%)</title><rect x="517.4" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.4" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/DateTime$.apply (2 samples, 0.03%)</title><rect x="517.4" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.4" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (8 samples, 0.11%)</title><rect x="517.7" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.7" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (7 samples, 0.09%)</title><rect x="517.9" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (7 samples, 0.09%)</title><rect x="517.9" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.9" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.month (3 samples, 0.04%)</title><rect x="518.1" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.1" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.month$ (3 samples, 0.04%)</title><rect x="518.1" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.1" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.month (3 samples, 0.04%)</title><rect x="518.1" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.1" y="526.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.year (3 samples, 0.04%)</title><rect x="518.5" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.5" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year$ (2 samples, 0.03%)</title><rect x="518.7" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.7" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year (2 samples, 0.03%)</title><rect x="518.7" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.7" y="526.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.digit4 (2 samples, 0.03%)</title><rect x="518.7" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="510.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname$minusl (3 samples, 0.04%)</title><rect x="519.0" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.0" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl$ (3 samples, 0.04%)</title><rect x="519.0" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.0" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl (3 samples, 0.04%)</title><rect x="519.0" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.0" y="574.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__matchString (2 samples, 0.03%)</title><rect x="519.2" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.2" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.time$minusof$minusday (4 samples, 0.05%)</title><rect x="519.5" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday$ (4 samples, 0.05%)</title><rect x="519.5" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.5" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday (3 samples, 0.04%)</title><rect x="519.6" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.6" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (17 samples, 0.23%)</title><rect x="520.3" y="835.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.3" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (17 samples, 0.23%)</title><rect x="520.3" y="819.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.3" y="830.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (16 samples, 0.21%)</title><rect x="520.3" y="803.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.3" y="814.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (16 samples, 0.21%)</title><rect x="520.3" y="787.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.3" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$594/2029741011.apply (15 samples, 0.20%)</title><rect x="520.3" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (15 samples, 0.20%)</title><rect x="520.3" y="755.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (15 samples, 0.20%)</title><rect x="520.3" y="739.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.3" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (15 samples, 0.20%)</title><rect x="520.3" y="723.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (14 samples, 0.19%)</title><rect x="520.4" y="707.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.4" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (14 samples, 0.19%)</title><rect x="520.4" y="691.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.4" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (14 samples, 0.19%)</title><rect x="520.4" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.4" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (13 samples, 0.17%)</title><rect x="520.6" y="659.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.6" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$68 (3 samples, 0.04%)</title><rect x="520.6" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.6" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (10 samples, 0.13%)</title><rect x="521.1" y="643.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.1" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (10 samples, 0.13%)</title><rect x="521.1" y="627.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.1" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (10 samples, 0.13%)</title><rect x="521.1" y="611.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.1" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product (6 samples, 0.08%)</title><rect x="521.4" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.4" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$ (6 samples, 0.08%)</title><rect x="521.4" y="579.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product (6 samples, 0.08%)</title><rect x="521.4" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.4" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (6 samples, 0.08%)</title><rect x="521.4" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.4" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (6 samples, 0.08%)</title><rect x="521.4" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.4" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (6 samples, 0.08%)</title><rect x="521.4" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.4" y="526.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.OWS (3 samples, 0.04%)</title><rect x="521.4" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.4" y="510.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.OWS$ (3 samples, 0.04%)</title><rect x="521.4" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.4" y="494.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.OWS (3 samples, 0.04%)</title><rect x="521.4" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.4" y="478.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$3 (3 samples, 0.04%)</title><rect x="521.4" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.4" y="462.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$4 (2 samples, 0.03%)</title><rect x="521.4" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.4" y="446.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$StringBasedParserInput.sliceString (2 samples, 0.03%)</title><rect x="522.0" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="523.1" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.1" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="523.1" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.1" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (14 samples, 0.19%)</title><rect x="524.1" y="915.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.1" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.emit (2 samples, 0.03%)</title><rect x="524.5" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Object.equals (2 samples, 0.03%)</title><rect x="524.5" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.5" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.emitResponseStart$1 (2 samples, 0.03%)</title><rect x="524.9" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.emit (2 samples, 0.03%)</title><rect x="524.9" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (3 samples, 0.04%)</title><rect x="525.3" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (3 samples, 0.04%)</title><rect x="525.3" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (3 samples, 0.04%)</title><rect x="525.3" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (3 samples, 0.04%)</title><rect x="525.3" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.continue (2 samples, 0.03%)</title><rect x="525.5" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.5" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue$ (2 samples, 0.03%)</title><rect x="525.5" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue (2 samples, 0.03%)</title><rect x="525.5" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.5" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.akka$http$impl$engine$parsing$HttpMessageParser$$state_$eq (2 samples, 0.03%)</title><rect x="525.5" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseStatus (4 samples, 0.05%)</title><rect x="526.6" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseStatusCode$1 (4 samples, 0.05%)</title><rect x="526.6" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.intValue$1 (3 samples, 0.04%)</title><rect x="526.8" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.8" y="942.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToCharacter (2 samples, 0.03%)</title><rect x="526.9" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.valueOf (2 samples, 0.03%)</title><rect x="526.9" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.doPull (2 samples, 0.03%)</title><rect x="527.7" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull$ (2 samples, 0.03%)</title><rect x="527.7" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull (2 samples, 0.03%)</title><rect x="527.7" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.7" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="528.0" y="1171.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="531.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (124 samples, 1.66%)</title><rect x="528.3" y="1235.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (121 samples, 1.62%)</title><rect x="528.7" y="1219.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (2 samples, 0.03%)</title><rect x="528.7" y="1203.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.log (2 samples, 0.03%)</title><rect x="528.7" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log$ (2 samples, 0.03%)</title><rect x="528.7" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log (2 samples, 0.03%)</title><rect x="528.7" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (117 samples, 1.57%)</title><rect x="529.0" y="1203.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (115 samples, 1.54%)</title><rect x="529.0" y="1187.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (115 samples, 1.54%)</title><rect x="529.0" y="1171.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (114 samples, 1.53%)</title><rect x="529.1" y="1155.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$511/1308968909.apply (110 samples, 1.47%)</title><rect x="529.3" y="1139.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (110 samples, 1.47%)</title><rect x="529.3" y="1123.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (110 samples, 1.47%)</title><rect x="529.3" y="1107.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (110 samples, 1.47%)</title><rect x="529.3" y="1091.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.3" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 0.04%)</title><rect x="529.3" y="1075.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="532.3" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (3 samples, 0.04%)</title><rect x="529.3" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="532.3" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (2 samples, 0.03%)</title><rect x="529.4" y="1043.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="532.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (107 samples, 1.43%)</title><rect x="529.8" y="1075.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (107 samples, 1.43%)</title><rect x="529.8" y="1059.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (107 samples, 1.43%)</title><rect x="529.8" y="1043.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (81 samples, 1.08%)</title><rect x="530.1" y="1027.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (81 samples, 1.08%)</title><rect x="530.1" y="1011.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (80 samples, 1.07%)</title><rect x="530.2" y="995.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.2" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (80 samples, 1.07%)</title><rect x="530.2" y="979.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.2" y="990.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (12 samples, 0.16%)</title><rect x="531.7" y="963.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (8 samples, 0.11%)</title><rect x="532.3" y="947.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (6 samples, 0.08%)</title><rect x="532.3" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (5 samples, 0.07%)</title><rect x="532.3" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.prependToList (2 samples, 0.03%)</title><rect x="533.2" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.2" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (32 samples, 0.43%)</title><rect x="533.5" y="963.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (4 samples, 0.05%)</title><rect x="533.5" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.5" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (28 samples, 0.37%)</title><rect x="534.2" y="947.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.2" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (27 samples, 0.36%)</title><rect x="534.3" y="931.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge.createLogic (3 samples, 0.04%)</title><rect x="534.5" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.5" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.&lt;init&gt; (2 samples, 0.03%)</title><rect x="534.7" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$.createLogic (3 samples, 0.04%)</title><rect x="535.0" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.0" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$$anon$1.&lt;init&gt; (3 samples, 0.04%)</title><rect x="535.0" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.0" y="910.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.passAlong (2 samples, 0.03%)</title><rect x="535.1" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.1" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$PassAlongHandler$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="535.1" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.1" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (3 samples, 0.04%)</title><rect x="535.6" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.6" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.&lt;init&gt; (3 samples, 0.04%)</title><rect x="535.6" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.6" y="910.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="535.8" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.8" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge.createLogic (3 samples, 0.04%)</title><rect x="536.2" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.2" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.&lt;init&gt; (3 samples, 0.04%)</title><rect x="536.2" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.2" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError.createLogic (2 samples, 0.03%)</title><rect x="536.7" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.7" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.&lt;init&gt; (2 samples, 0.03%)</title><rect x="536.7" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.7" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/StatefulMapConcat.createLogic (2 samples, 0.03%)</title><rect x="537.0" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.0" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/StatefulMapConcat$$anon$47.&lt;init&gt; (2 samples, 0.03%)</title><rect x="537.0" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.0" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.createLogic (3 samples, 0.04%)</title><rect x="537.3" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.3" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.&lt;init&gt; (2 samples, 0.03%)</title><rect x="537.5" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.5" y="910.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (2 samples, 0.03%)</title><rect x="537.8" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.8" y="926.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (2 samples, 0.03%)</title><rect x="537.8" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.8" y="910.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (3 samples, 0.04%)</title><rect x="538.1" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.1" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (3 samples, 0.04%)</title><rect x="538.8" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (3 samples, 0.04%)</title><rect x="538.8" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="538.8" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.8" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="538.8" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.03%)</title><rect x="538.9" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.9" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (8 samples, 0.11%)</title><rect x="539.2" y="963.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.2" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (3 samples, 0.04%)</title><rect x="539.9" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.9" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.03%)</title><rect x="540.0" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.0" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.03%)</title><rect x="540.0" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.0" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (10 samples, 0.13%)</title><rect x="540.5" y="963.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (3 samples, 0.04%)</title><rect x="541.6" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (3 samples, 0.04%)</title><rect x="541.6" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.04%)</title><rect x="541.6" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (3 samples, 0.04%)</title><rect x="541.6" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (3 samples, 0.04%)</title><rect x="541.6" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (3 samples, 0.04%)</title><rect x="541.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.6" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 0.04%)</title><rect x="541.6" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="544.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeLast (2 samples, 0.03%)</title><rect x="542.6" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="545.6" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (6 samples, 0.08%)</title><rect x="542.9" y="1027.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.05%)</title><rect x="543.2" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.2" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.03%)</title><rect x="543.2" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.2" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (14 samples, 0.19%)</title><rect x="543.8" y="1027.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.8" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (14 samples, 0.19%)</title><rect x="543.8" y="1011.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.8" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (8 samples, 0.11%)</title><rect x="543.8" y="995.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (8 samples, 0.11%)</title><rect x="543.8" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.8" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.08%)</title><rect x="543.8" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (5 samples, 0.07%)</title><rect x="544.0" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (5 samples, 0.07%)</title><rect x="544.0" y="931.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (4 samples, 0.05%)</title><rect x="544.0" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.toMap (3 samples, 0.04%)</title><rect x="544.1" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.1" y="910.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (3 samples, 0.04%)</title><rect x="544.1" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.1" y="894.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (3 samples, 0.04%)</title><rect x="544.1" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (3 samples, 0.04%)</title><rect x="544.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (3 samples, 0.04%)</title><rect x="544.1" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.1" y="846.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (3 samples, 0.04%)</title><rect x="544.1" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.1" y="830.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (3 samples, 0.04%)</title><rect x="544.1" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.1" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="544.3" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.3" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="544.3" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.3" y="782.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="544.3" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.3" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMapBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="544.3" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.3" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMapBuilder.newEmptyRootNode (2 samples, 0.03%)</title><rect x="544.3" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.3" y="734.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.&lt;init&gt; (2 samples, 0.03%)</title><rect x="544.3" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.3" y="718.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (2 samples, 0.03%)</title><rect x="544.3" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.3" y="702.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (6 samples, 0.08%)</title><rect x="545.1" y="995.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (6 samples, 0.08%)</title><rect x="545.1" y="979.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (2 samples, 0.03%)</title><rect x="545.4" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="545.7" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="545.7" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$$$Lambda$526/220424596.apply (2 samples, 0.03%)</title><rect x="545.7" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.$anonfun$atomic$1 (2 samples, 0.03%)</title><rect x="545.7" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (2 samples, 0.03%)</title><rect x="546.7" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.7" y="1150.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.03%)</title><rect x="546.7" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$Event (2 samples, 0.03%)</title><rect x="547.1" y="1187.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.Event$lzycompute$1 (2 samples, 0.03%)</title><rect x="547.1" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.&lt;init&gt; (2 samples, 0.03%)</title><rect x="547.1" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.event0 (2 samples, 0.03%)</title><rect x="547.1" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (111 samples, 1.49%)</title><rect x="547.9" y="1235.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.handleParserOutput (2 samples, 0.03%)</title><rect x="548.1" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (2 samples, 0.03%)</title><rect x="548.1" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (108 samples, 1.45%)</title><rect x="548.4" y="1219.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (108 samples, 1.45%)</title><rect x="548.4" y="1203.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (108 samples, 1.45%)</title><rect x="548.4" y="1187.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (104 samples, 1.39%)</title><rect x="548.7" y="1171.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (102 samples, 1.37%)</title><rect x="549.0" y="1155.0" width="16.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (102 samples, 1.37%)</title><rect x="549.0" y="1139.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (99 samples, 1.33%)</title><rect x="549.2" y="1123.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$437/1049319790.apply (98 samples, 1.31%)</title><rect x="549.4" y="1107.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (97 samples, 1.30%)</title><rect x="549.5" y="1091.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (97 samples, 1.30%)</title><rect x="549.5" y="1075.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (97 samples, 1.30%)</title><rect x="549.5" y="1059.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (97 samples, 1.30%)</title><rect x="549.5" y="1043.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (97 samples, 1.30%)</title><rect x="549.5" y="1027.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (78 samples, 1.04%)</title><rect x="549.5" y="1011.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (78 samples, 1.04%)</title><rect x="549.5" y="995.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (78 samples, 1.04%)</title><rect x="549.5" y="979.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (65 samples, 0.87%)</title><rect x="550.5" y="963.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (3 samples, 0.04%)</title><rect x="550.5" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (3 samples, 0.04%)</title><rect x="550.5" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (2 samples, 0.03%)</title><rect x="550.6" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (2 samples, 0.03%)</title><rect x="550.6" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (62 samples, 0.83%)</title><rect x="550.9" y="947.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (56 samples, 0.75%)</title><rect x="550.9" y="931.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (2 samples, 0.03%)</title><rect x="550.9" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/4499784.apply (53 samples, 0.71%)</title><rect x="551.2" y="915.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.2" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (52 samples, 0.70%)</title><rect x="551.4" y="899.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (16 samples, 0.21%)</title><rect x="551.6" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.6" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (16 samples, 0.21%)</title><rect x="551.6" y="867.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.6" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (16 samples, 0.21%)</title><rect x="551.6" y="851.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.6" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (16 samples, 0.21%)</title><rect x="551.6" y="835.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.6" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$603/2023804785.apply (16 samples, 0.21%)</title><rect x="551.6" y="819.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (15 samples, 0.20%)</title><rect x="551.7" y="803.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.7" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (15 samples, 0.20%)</title><rect x="551.7" y="787.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.7" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (15 samples, 0.20%)</title><rect x="551.7" y="771.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.7" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (15 samples, 0.20%)</title><rect x="551.7" y="755.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (8 samples, 0.11%)</title><rect x="551.7" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.7" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (2 samples, 0.03%)</title><rect x="551.9" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.9" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (2 samples, 0.03%)</title><rect x="551.9" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.9" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (2 samples, 0.03%)</title><rect x="551.9" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.9" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (5 samples, 0.07%)</title><rect x="552.2" y="723.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="734.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals$ (5 samples, 0.07%)</title><rect x="552.2" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.2" y="718.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals (5 samples, 0.07%)</title><rect x="552.2" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sameElements (4 samples, 0.05%)</title><rect x="552.2" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.2" y="686.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.sameElements$ (4 samples, 0.05%)</title><rect x="552.2" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.2" y="670.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.sameElements (4 samples, 0.05%)</title><rect x="552.2" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.2" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$LinearSeqOps$$super$sameElements (3 samples, 0.04%)</title><rect x="552.4" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.4" y="638.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sameElements$ (2 samples, 0.03%)</title><rect x="552.5" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.5" y="622.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sameElements (2 samples, 0.03%)</title><rect x="552.5" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.5" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (6 samples, 0.08%)</title><rect x="553.0" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (6 samples, 0.08%)</title><rect x="553.0" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.0" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (6 samples, 0.08%)</title><rect x="553.0" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.subtype (2 samples, 0.03%)</title><rect x="553.1" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.1" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.subtype$ (2 samples, 0.03%)</title><rect x="553.1" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.1" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.subtype (2 samples, 0.03%)</title><rect x="553.1" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.1" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (2 samples, 0.03%)</title><rect x="553.1" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.1" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (2 samples, 0.03%)</title><rect x="553.1" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.1" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (2 samples, 0.03%)</title><rect x="553.1" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.OWS (2 samples, 0.03%)</title><rect x="553.1" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.1" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.OWS$ (2 samples, 0.03%)</title><rect x="553.1" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.1" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.OWS (2 samples, 0.03%)</title><rect x="553.1" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.1" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.type (2 samples, 0.03%)</title><rect x="553.5" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.5" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.type$ (2 samples, 0.03%)</title><rect x="553.5" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.5" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.type (2 samples, 0.03%)</title><rect x="553.5" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.5" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (2 samples, 0.03%)</title><rect x="553.5" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.5" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (2 samples, 0.03%)</title><rect x="553.5" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.5" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (2 samples, 0.03%)</title><rect x="553.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="556.5" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (15 samples, 0.20%)</title><rect x="554.1" y="883.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.1" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (15 samples, 0.20%)</title><rect x="554.1" y="867.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.1" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (15 samples, 0.20%)</title><rect x="554.1" y="851.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.1" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (15 samples, 0.20%)</title><rect x="554.1" y="835.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.1" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31$$Lambda$1000/1958803952.apply (15 samples, 0.20%)</title><rect x="554.1" y="819.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.1" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.$anonfun$apply$31 (15 samples, 0.20%)</title><rect x="554.1" y="803.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.1" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.host (15 samples, 0.20%)</title><rect x="554.1" y="787.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host$ (15 samples, 0.20%)</title><rect x="554.1" y="771.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host (15 samples, 0.20%)</title><rect x="554.1" y="755.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort$minuspushed (14 samples, 0.19%)</title><rect x="554.1" y="739.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (14 samples, 0.19%)</title><rect x="554.1" y="723.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.1" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (11 samples, 0.15%)</title><rect x="554.3" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.3" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv4Host (3 samples, 0.04%)</title><rect x="554.4" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.4" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv4$minusaddress (3 samples, 0.04%)</title><rect x="554.4" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.4" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv4$minusaddress$ (3 samples, 0.04%)</title><rect x="554.4" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.4" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv4$minusaddress (3 samples, 0.04%)</title><rect x="554.4" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.4" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusnumber (2 samples, 0.03%)</title><rect x="554.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.6" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusnumber$ (2 samples, 0.03%)</title><rect x="554.6" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.6" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusnumber (2 samples, 0.03%)</title><rect x="554.6" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.6" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (7 samples, 0.09%)</title><rect x="554.9" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.9" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (5 samples, 0.07%)</title><rect x="555.2" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.2" y="686.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (3 samples, 0.04%)</title><rect x="555.5" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.5" y="670.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser$__SubParserInput.charAt (3 samples, 0.04%)</title><rect x="555.5" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.5" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (15 samples, 0.20%)</title><rect x="556.5" y="883.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.5" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (15 samples, 0.20%)</title><rect x="556.5" y="867.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.5" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (15 samples, 0.20%)</title><rect x="556.5" y="851.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.5" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (15 samples, 0.20%)</title><rect x="556.5" y="835.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.5" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$1093/472246723.apply (15 samples, 0.20%)</title><rect x="556.5" y="819.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (15 samples, 0.20%)</title><rect x="556.5" y="803.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.5" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (15 samples, 0.20%)</title><rect x="556.5" y="787.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (15 samples, 0.20%)</title><rect x="556.5" y="771.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (15 samples, 0.20%)</title><rect x="556.5" y="755.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (12 samples, 0.16%)</title><rect x="556.5" y="739.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.5" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (12 samples, 0.16%)</title><rect x="556.5" y="723.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (11 samples, 0.15%)</title><rect x="556.6" y="707.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.6" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$68 (2 samples, 0.03%)</title><rect x="556.8" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (2 samples, 0.03%)</title><rect x="556.8" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (2 samples, 0.03%)</title><rect x="556.8" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (2 samples, 0.03%)</title><rect x="556.8" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.8" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (5 samples, 0.07%)</title><rect x="557.1" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.1" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (5 samples, 0.07%)</title><rect x="557.1" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.1" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (4 samples, 0.05%)</title><rect x="557.1" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.1" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product (4 samples, 0.05%)</title><rect x="557.1" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$ (3 samples, 0.04%)</title><rect x="557.3" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.3" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product (3 samples, 0.04%)</title><rect x="557.3" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.3" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusversion (2 samples, 0.03%)</title><rect x="557.3" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.3" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusversion$ (2 samples, 0.03%)</title><rect x="557.3" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.3" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusversion (2 samples, 0.03%)</title><rect x="557.3" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.$plus$colon (3 samples, 0.04%)</title><rect x="557.9" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.9" y="702.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="557.9" y="675.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="560.9" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="558.4" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="559.1" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.1" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (4 samples, 0.05%)</title><rect x="559.8" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (4 samples, 0.05%)</title><rect x="559.8" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.unshareIfRequired (2 samples, 0.03%)</title><rect x="560.4" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.4" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="560.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (6 samples, 0.08%)</title><rect x="560.7" y="963.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.emitRequestStart$1 (2 samples, 0.03%)</title><rect x="560.7" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.strictEntity (4 samples, 0.05%)</title><rect x="561.0" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity$ (4 samples, 0.05%)</title><rect x="561.0" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity (4 samples, 0.05%)</title><rect x="561.0" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.0" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="561.4" y="899.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="564.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseProtocol (2 samples, 0.03%)</title><rect x="562.2" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol$ (2 samples, 0.03%)</title><rect x="562.2" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseProtocol (2 samples, 0.03%)</title><rect x="562.2" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.akka$http$impl$engine$parsing$HttpMessageParser$$protocol_$eq (2 samples, 0.03%)</title><rect x="562.2" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (15 samples, 0.20%)</title><rect x="562.5" y="1011.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (11 samples, 0.15%)</title><rect x="562.6" y="995.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (10 samples, 0.13%)</title><rect x="562.8" y="979.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.8" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (10 samples, 0.13%)</title><rect x="562.8" y="963.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.8" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (10 samples, 0.13%)</title><rect x="562.8" y="947.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.8" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (8 samples, 0.11%)</title><rect x="562.9" y="931.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1092/1914939408.apply (7 samples, 0.09%)</title><rect x="562.9" y="915.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (6 samples, 0.08%)</title><rect x="563.1" y="899.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (6 samples, 0.08%)</title><rect x="563.1" y="883.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.1" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (6 samples, 0.08%)</title><rect x="563.1" y="867.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.1" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (3 samples, 0.04%)</title><rect x="563.4" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.segment (2 samples, 0.03%)</title><rect x="563.6" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.6" y="846.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.slice (2 samples, 0.03%)</title><rect x="564.4" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.4" y="1006.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.take (2 samples, 0.03%)</title><rect x="564.4" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.4" y="990.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="565.2" y="1171.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="568.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (20 samples, 0.27%)</title><rect x="565.5" y="1235.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (18 samples, 0.24%)</title><rect x="565.8" y="1219.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (15 samples, 0.20%)</title><rect x="565.9" y="1203.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (2 samples, 0.03%)</title><rect x="566.3" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="566.3" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="566.3" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="566.3" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (4 samples, 0.05%)</title><rect x="566.6" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (5 samples, 0.07%)</title><rect x="567.2" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="567.2" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (5 samples, 0.07%)</title><rect x="567.2" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="567.2" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (5 samples, 0.07%)</title><rect x="567.2" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (4 samples, 0.05%)</title><rect x="567.2" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.render (4 samples, 0.05%)</title><rect x="567.2" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render$ (4 samples, 0.05%)</title><rect x="567.2" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render (4 samples, 0.05%)</title><rect x="567.2" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="567.2" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (4 samples, 0.05%)</title><rect x="567.2" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.2" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="567.2" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (4 samples, 0.05%)</title><rect x="567.2" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (3 samples, 0.04%)</title><rect x="568.8" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (5 samples, 0.07%)</title><rect x="569.3" y="1235.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (6 samples, 0.08%)</title><rect x="570.1" y="1235.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.apply (5 samples, 0.07%)</title><rect x="570.2" y="1219.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.&lt;init&gt; (4 samples, 0.05%)</title><rect x="570.4" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (9 samples, 0.12%)</title><rect x="571.2" y="1235.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (5 samples, 0.07%)</title><rect x="571.3" y="1219.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (4 samples, 0.05%)</title><rect x="571.5" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (4 samples, 0.05%)</title><rect x="571.5" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (4 samples, 0.05%)</title><rect x="571.5" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (4 samples, 0.05%)</title><rect x="571.5" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (4 samples, 0.05%)</title><rect x="571.5" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$1096/1494270623.apply (4 samples, 0.05%)</title><rect x="571.5" y="1123.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$new$1 (4 samples, 0.05%)</title><rect x="571.5" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.5" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Deadline$.now (2 samples, 0.03%)</title><rect x="571.8" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$6.onPush (4 samples, 0.05%)</title><rect x="572.6" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.clear (2 samples, 0.03%)</title><rect x="572.7" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.foreach$extension (2 samples, 0.03%)</title><rect x="572.7" y="1203.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="572.7" y="1187.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="572.7" y="1171.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (2 samples, 0.03%)</title><rect x="572.7" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (2 samples, 0.03%)</title><rect x="572.7" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (2 samples, 0.03%)</title><rect x="572.7" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$1216/1433291763.apply (2 samples, 0.03%)</title><rect x="572.7" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$clear$1$adapted (2 samples, 0.03%)</title><rect x="572.7" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$clear$1 (2 samples, 0.03%)</title><rect x="572.7" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.7" y="1086.0"></text>
</g>
<g>
<title>akka/remote/artery/Deserializer$$anon$3.onPush (3 samples, 0.04%)</title><rect x="573.8" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.8" y="1246.0"></text>
</g>
<g>
<title>akka/remote/MessageSerializer$.deserializeForArtery (2 samples, 0.03%)</title><rect x="573.8" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.8" y="1230.0"></text>
</g>
<g>
<title>akka/serialization/Serialization.deserializeByteBuffer (2 samples, 0.03%)</title><rect x="573.8" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.8" y="1214.0"></text>
</g>
<g>
<title>akka/serialization/Serialization.deserializeByteArray (2 samples, 0.03%)</title><rect x="573.8" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.8" y="1198.0"></text>
</g>
<g>
<title>akka/serialization/Serialization.withTransportInformation (2 samples, 0.03%)</title><rect x="573.8" y="1171.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.8" y="1182.0"></text>
</g>
<g>
<title>akka/serialization/Serialization$$Lambda$1375/313361288.apply (2 samples, 0.03%)</title><rect x="573.8" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.8" y="1166.0"></text>
</g>
<g>
<title>akka/serialization/Serialization.$anonfun$deserializeByteArray$1 (2 samples, 0.03%)</title><rect x="573.8" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.8" y="1150.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.fromBinary (2 samples, 0.03%)</title><rect x="573.8" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.8" y="1134.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (7 samples, 0.09%)</title><rect x="574.3" y="1235.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.3" y="1246.0"></text>
</g>
<g>
<title>akka/remote/MessageSerializer$.serializeForArtery (3 samples, 0.04%)</title><rect x="574.3" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.3" y="1230.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.toBinary (3 samples, 0.04%)</title><rect x="574.3" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.3" y="1214.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.serializeHandshakeReq (2 samples, 0.03%)</title><rect x="574.5" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.5" y="1198.0"></text>
</g>
<g>
<title>akka/remote/artery/EnvelopeBufferPool.acquire (4 samples, 0.05%)</title><rect x="574.8" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.8" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocateDirect (3 samples, 0.04%)</title><rect x="575.0" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="575.0" y="1187.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (3 samples, 0.04%)</title><rect x="575.0" y="1171.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory (3 samples, 0.04%)</title><rect x="575.0" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.setMemory0 (3 samples, 0.04%)</title><rect x="575.0" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="1150.0"></text>
</g>
<g>
<title>Unsafe_SetMemory0 (3 samples, 0.04%)</title><rect x="575.0" y="1123.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="578.0" y="1134.0"></text>
</g>
<g>
<title>Copy::fill_to_memory_atomic(void*, unsigned long, unsigned char) (3 samples, 0.04%)</title><rect x="575.0" y="1107.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="578.0" y="1118.0"></text>
</g>
<g>
<title>async_page_fault (3 samples, 0.04%)</title><rect x="575.0" y="1091.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="578.0" y="1102.0"></text>
</g>
<g>
<title>do_async_page_fault (3 samples, 0.04%)</title><rect x="575.0" y="1075.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="578.0" y="1086.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.04%)</title><rect x="575.0" y="1059.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.0" y="1070.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.04%)</title><rect x="575.0" y="1043.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.0" y="1054.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="575.1" y="1027.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.1" y="1038.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="575.1" y="1011.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (2 samples, 0.03%)</title><rect x="575.7" y="1235.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.akka$stream$impl$Timers$IdleTimeoutBidi$$anon$$onActivity (2 samples, 0.03%)</title><rect x="575.7" y="1219.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPush (2 samples, 0.03%)</title><rect x="576.2" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (13 samples, 0.17%)</title><rect x="576.5" y="1235.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="579.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$1026/1378370521.apply (8 samples, 0.11%)</title><rect x="576.5" y="1219.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (8 samples, 0.11%)</title><rect x="576.5" y="1203.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (8 samples, 0.11%)</title><rect x="576.5" y="1187.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (7 samples, 0.09%)</title><rect x="576.7" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.findHostAndWsUpgrade$1 (3 samples, 0.04%)</title><rect x="576.7" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (2 samples, 0.03%)</title><rect x="576.8" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri.toEffectiveRequestUri (2 samples, 0.03%)</title><rect x="577.2" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.effectiveRequestUri (2 samples, 0.03%)</title><rect x="577.2" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.collapseDotSegments (2 samples, 0.03%)</title><rect x="577.2" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/TLSPlacebo$$$Lambda$448/738514396.apply (2 samples, 0.03%)</title><rect x="577.8" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (2 samples, 0.03%)</title><rect x="578.3" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="578.3" y="1203.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/OutPort.id (2 samples, 0.03%)</title><rect x="578.3" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (211 samples, 2.83%)</title><rect x="578.6" y="1235.0" width="33.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.6" y="1246.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1024/354132212.apply (210 samples, 2.81%)</title><rect x="578.6" y="1219.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.6" y="1230.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (209 samples, 2.80%)</title><rect x="578.7" y="1203.0" width="33.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.7" y="1214.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$988/1355820930.apply (207 samples, 2.77%)</title><rect x="578.9" y="1187.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.9" y="1198.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (207 samples, 2.77%)</title><rect x="578.9" y="1171.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.9" y="1182.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1102/254451556.apply (199 samples, 2.67%)</title><rect x="578.9" y="1155.0" width="31.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="1166.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (199 samples, 2.67%)</title><rect x="578.9" y="1139.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.9" y="1150.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1101/1352321286.apply (2 samples, 0.03%)</title><rect x="579.1" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$988/1355820930.apply (193 samples, 2.58%)</title><rect x="579.4" y="1123.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.4" y="1134.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (193 samples, 2.58%)</title><rect x="579.4" y="1107.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.4" y="1118.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$987/307451012.apply (3 samples, 0.04%)</title><rect x="579.4" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (3 samples, 0.04%)</title><rect x="579.4" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$982/563894090.apply (3 samples, 0.04%)</title><rect x="579.4" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (3 samples, 0.04%)</title><rect x="579.4" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1098/1895256531.apply (3 samples, 0.04%)</title><rect x="579.4" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleRejections$1 (3 samples, 0.04%)</title><rect x="579.4" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.recoverRejectionsWith (3 samples, 0.04%)</title><rect x="579.4" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith$ (3 samples, 0.04%)</title><rect x="579.4" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.4" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith (2 samples, 0.03%)</title><rect x="579.5" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1107/1493621832.apply (190 samples, 2.54%)</title><rect x="579.9" y="1091.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.9" y="1102.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (190 samples, 2.54%)</title><rect x="579.9" y="1075.0" width="30.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.9" y="1086.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$988/1355820930.apply (188 samples, 2.52%)</title><rect x="580.0" y="1059.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.0" y="1070.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (188 samples, 2.52%)</title><rect x="580.0" y="1043.0" width="29.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.0" y="1054.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$987/307451012.apply (17 samples, 0.23%)</title><rect x="580.0" y="1027.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (17 samples, 0.23%)</title><rect x="580.0" y="1011.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (8 samples, 0.11%)</title><rect x="580.0" y="995.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1099/318823546.apply (8 samples, 0.11%)</title><rect x="580.0" y="979.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (8 samples, 0.11%)</title><rect x="580.0" y="963.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (7 samples, 0.09%)</title><rect x="580.0" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1110/1490431441.apply (5 samples, 0.07%)</title><rect x="580.0" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (5 samples, 0.07%)</title><rect x="580.0" y="915.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1101/1352321286.apply (5 samples, 0.07%)</title><rect x="580.0" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (5 samples, 0.07%)</title><rect x="580.0" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (5 samples, 0.07%)</title><rect x="580.0" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1113/2117508900.apply (5 samples, 0.07%)</title><rect x="580.0" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (5 samples, 0.07%)</title><rect x="580.0" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1103/442266103.apply (4 samples, 0.05%)</title><rect x="580.0" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (4 samples, 0.05%)</title><rect x="580.0" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$986/605168569.apply (4 samples, 0.05%)</title><rect x="580.0" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (3 samples, 0.04%)</title><rect x="580.2" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.2" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$985/1735855642.apply (2 samples, 0.03%)</title><rect x="580.2" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.2" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$1 (2 samples, 0.03%)</title><rect x="580.2" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.2" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.post (2 samples, 0.03%)</title><rect x="580.2" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.2" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MethodDirectives.post$ (2 samples, 0.03%)</title><rect x="580.2" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.2" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="580.8" y="931.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="583.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$982/563894090.apply (9 samples, 0.12%)</title><rect x="581.3" y="995.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (9 samples, 0.12%)</title><rect x="581.3" y="979.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.3" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$981/176650358.apply (8 samples, 0.11%)</title><rect x="581.4" y="963.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$2 (8 samples, 0.11%)</title><rect x="581.4" y="947.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.4" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRequestContext (3 samples, 0.04%)</title><rect x="581.7" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRequestContext$ (3 samples, 0.04%)</title><rect x="581.7" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRequestContext (2 samples, 0.03%)</title><rect x="581.9" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.tprovide (3 samples, 0.04%)</title><rect x="582.2" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.tprovide$ (3 samples, 0.04%)</title><rect x="582.2" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.tprovide (2 samples, 0.03%)</title><rect x="582.4" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1122/252364188.apply (166 samples, 2.22%)</title><rect x="582.7" y="1027.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.7" y="1038.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (165 samples, 2.21%)</title><rect x="582.9" y="1011.0" width="26.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.9" y="1022.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$988/1355820930.apply (163 samples, 2.18%)</title><rect x="582.9" y="995.0" width="25.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.9" y="1006.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (163 samples, 2.18%)</title><rect x="582.9" y="979.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.9" y="990.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$987/307451012.apply (4 samples, 0.05%)</title><rect x="582.9" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (4 samples, 0.05%)</title><rect x="582.9" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.03%)</title><rect x="582.9" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$982/563894090.apply (2 samples, 0.03%)</title><rect x="583.2" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (2 samples, 0.03%)</title><rect x="583.2" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1123/134129059.apply (158 samples, 2.12%)</title><rect x="583.5" y="963.0" width="25.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.5" y="974.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (157 samples, 2.10%)</title><rect x="583.6" y="947.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.6" y="958.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1103/442266103.apply (13 samples, 0.17%)</title><rect x="583.8" y="931.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (13 samples, 0.17%)</title><rect x="583.8" y="915.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$986/605168569.apply (13 samples, 0.17%)</title><rect x="583.8" y="899.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (13 samples, 0.17%)</title><rect x="583.8" y="883.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.8" y="894.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1121/978804481.apply (13 samples, 0.17%)</title><rect x="583.8" y="867.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.8" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (13 samples, 0.17%)</title><rect x="583.8" y="851.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$984/1451399284.apply (11 samples, 0.15%)</title><rect x="584.0" y="835.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (11 samples, 0.15%)</title><rect x="584.0" y="819.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (11 samples, 0.15%)</title><rect x="584.0" y="803.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1113/2117508900.apply (11 samples, 0.15%)</title><rect x="584.0" y="787.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (11 samples, 0.15%)</title><rect x="584.0" y="771.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.0" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$986/605168569.apply (10 samples, 0.13%)</title><rect x="584.0" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.0" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (10 samples, 0.13%)</title><rect x="584.0" y="739.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.0" y="750.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1135/1249828165.apply (10 samples, 0.13%)</title><rect x="584.0" y="723.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.0" y="734.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (10 samples, 0.13%)</title><rect x="584.0" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.0" y="718.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (2 samples, 0.03%)</title><rect x="584.3" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.3" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.entity (5 samples, 0.07%)</title><rect x="584.6" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity$ (5 samples, 0.07%)</title><rect x="584.6" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity (5 samples, 0.07%)</title><rect x="584.6" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1122/252364188.apply (142 samples, 1.90%)</title><rect x="585.9" y="931.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.9" y="942.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (142 samples, 1.90%)</title><rect x="585.9" y="915.0" width="22.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.9" y="926.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$988/1355820930.apply (123 samples, 1.65%)</title><rect x="586.0" y="899.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (123 samples, 1.65%)</title><rect x="586.0" y="883.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1145/856551974.apply (121 samples, 1.62%)</title><rect x="586.3" y="867.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (121 samples, 1.62%)</title><rect x="586.3" y="851.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.3" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1142/1687207371.apply (99 samples, 1.33%)</title><rect x="586.3" y="835.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.3" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (99 samples, 1.33%)</title><rect x="586.3" y="819.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.3" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (99 samples, 1.33%)</title><rect x="586.3" y="803.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.3" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1148/1794606704.apply (97 samples, 1.30%)</title><rect x="586.6" y="787.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.6" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (97 samples, 1.30%)</title><rect x="586.6" y="771.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.6" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (96 samples, 1.29%)</title><rect x="586.8" y="755.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.8" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1062/1687739710.apply (95 samples, 1.27%)</title><rect x="587.0" y="739.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (95 samples, 1.27%)</title><rect x="587.0" y="723.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1064/177563161.apply (2 samples, 0.03%)</title><rect x="587.0" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (2 samples, 0.03%)</title><rect x="587.0" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="587.0" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="587.0" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (2 samples, 0.03%)</title><rect x="587.0" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.0" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1073/811595869.apply (2 samples, 0.03%)</title><rect x="587.0" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.0" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (2 samples, 0.03%)</title><rect x="587.0" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.0" y="622.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1136/1770440470.apply (2 samples, 0.03%)</title><rect x="587.0" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.0" y="606.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (2 samples, 0.03%)</title><rect x="587.0" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.0" y="590.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (2 samples, 0.03%)</title><rect x="587.0" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.0" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.03%)</title><rect x="587.0" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.0" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.03%)</title><rect x="587.0" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.0" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.03%)</title><rect x="587.0" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.0" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.03%)</title><rect x="587.0" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.0" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (2 samples, 0.03%)</title><rect x="587.0" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.0" y="494.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="587.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="590.0" y="478.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="587.0" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.0" y="462.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (2 samples, 0.03%)</title><rect x="587.0" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.0" y="446.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (2 samples, 0.03%)</title><rect x="587.0" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="430.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="587.0" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.0" y="414.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (93 samples, 1.25%)</title><rect x="587.3" y="707.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.3" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1062/1687739710.apply (93 samples, 1.25%)</title><rect x="587.3" y="691.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.3" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (93 samples, 1.25%)</title><rect x="587.3" y="675.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.3" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1064/177563161.apply (2 samples, 0.03%)</title><rect x="587.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.3" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (2 samples, 0.03%)</title><rect x="587.3" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.3" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="587.3" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.3" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="587.3" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.3" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (91 samples, 1.22%)</title><rect x="587.6" y="659.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1066/419901328.apply (89 samples, 1.19%)</title><rect x="587.8" y="643.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.8" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (88 samples, 1.18%)</title><rect x="587.9" y="627.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.9" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (87 samples, 1.17%)</title><rect x="588.1" y="611.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (23 samples, 0.31%)</title><rect x="588.1" y="595.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.1" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (5 samples, 0.07%)</title><rect x="588.1" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (5 samples, 0.07%)</title><rect x="588.1" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (5 samples, 0.07%)</title><rect x="588.1" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.1" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (4 samples, 0.05%)</title><rect x="588.1" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (6 samples, 0.08%)</title><rect x="588.9" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.9" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (5 samples, 0.07%)</title><rect x="589.0" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.05%)</title><rect x="589.2" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (10 samples, 0.13%)</title><rect x="589.8" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.8" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (9 samples, 0.12%)</title><rect x="590.0" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (6 samples, 0.08%)</title><rect x="590.4" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (5 samples, 0.07%)</title><rect x="590.4" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (3 samples, 0.04%)</title><rect x="590.6" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (3 samples, 0.04%)</title><rect x="590.6" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="510.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (3 samples, 0.04%)</title><rect x="590.6" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (3 samples, 0.04%)</title><rect x="590.6" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (2 samples, 0.03%)</title><rect x="590.8" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="462.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="590.8" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.8" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.03%)</title><rect x="590.8" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.8" y="430.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (2 samples, 0.03%)</title><rect x="591.4" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (2 samples, 0.03%)</title><rect x="591.4" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (64 samples, 0.86%)</title><rect x="591.7" y="595.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.7" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (64 samples, 0.86%)</title><rect x="591.7" y="579.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.7" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (64 samples, 0.86%)</title><rect x="591.7" y="563.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (64 samples, 0.86%)</title><rect x="591.7" y="547.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (64 samples, 0.86%)</title><rect x="591.7" y="531.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (6 samples, 0.08%)</title><rect x="592.2" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.2" y="526.0"></text>
</g>
<g>
<title>akka/stream/Attributes.&lt;init&gt; (2 samples, 0.03%)</title><rect x="592.2" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (3 samples, 0.04%)</title><rect x="592.7" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.7" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.prependToList (2 samples, 0.03%)</title><rect x="592.8" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.8" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.next_$eq (2 samples, 0.03%)</title><rect x="592.8" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.8" y="478.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (9 samples, 0.12%)</title><rect x="593.1" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.1" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (7 samples, 0.09%)</title><rect x="593.3" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.3" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (3 samples, 0.04%)</title><rect x="593.3" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.3" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.&lt;init&gt; (2 samples, 0.03%)</title><rect x="593.4" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.4" y="478.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="593.4" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.4" y="462.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (4 samples, 0.05%)</title><rect x="593.8" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.8" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (38 samples, 0.51%)</title><rect x="594.5" y="515.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.5" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (28 samples, 0.37%)</title><rect x="594.7" y="499.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.7" y="510.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (27 samples, 0.36%)</title><rect x="594.9" y="483.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.9" y="494.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (27 samples, 0.36%)</title><rect x="594.9" y="467.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.9" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (27 samples, 0.36%)</title><rect x="594.9" y="451.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.9" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (26 samples, 0.35%)</title><rect x="595.0" y="435.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (7 samples, 0.09%)</title><rect x="595.3" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.3" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (6 samples, 0.08%)</title><rect x="595.5" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.5" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (6 samples, 0.08%)</title><rect x="595.5" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.5" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (6 samples, 0.08%)</title><rect x="595.5" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (3 samples, 0.04%)</title><rect x="595.5" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (3 samples, 0.04%)</title><rect x="595.5" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (3 samples, 0.04%)</title><rect x="595.5" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (3 samples, 0.04%)</title><rect x="595.5" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (3 samples, 0.04%)</title><rect x="595.5" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (3 samples, 0.04%)</title><rect x="595.5" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.5" y="286.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (3 samples, 0.04%)</title><rect x="595.5" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.5" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.04%)</title><rect x="596.0" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.0" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="596.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.0" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="596.0" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.0" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="596.0" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.0" y="318.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (16 samples, 0.21%)</title><rect x="596.4" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.4" y="430.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (2 samples, 0.03%)</title><rect x="596.6" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.6" y="414.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (2 samples, 0.03%)</title><rect x="596.6" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.6" y="398.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (6 samples, 0.08%)</title><rect x="596.9" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.9" y="414.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (2 samples, 0.03%)</title><rect x="597.1" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.1" y="398.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookupConfigurator (2 samples, 0.03%)</title><rect x="597.1" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.1" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (3 samples, 0.04%)</title><rect x="597.4" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.4" y="398.0"></text>
</g>
<g>
<title>akka/actor/Props.actorClass (2 samples, 0.03%)</title><rect x="597.4" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.4" y="382.0"></text>
</g>
<g>
<title>akka/actor/Props.cachedActorClass (2 samples, 0.03%)</title><rect x="597.4" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.4" y="366.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.actorClass (2 samples, 0.03%)</title><rect x="597.4" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.4" y="350.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (7 samples, 0.09%)</title><rect x="597.9" y="403.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (7 samples, 0.09%)</title><rect x="597.9" y="387.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.9" y="398.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (7 samples, 0.09%)</title><rect x="597.9" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (7 samples, 0.09%)</title><rect x="597.9" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.9" y="366.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (7 samples, 0.09%)</title><rect x="597.9" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.9" y="350.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (7 samples, 0.09%)</title><rect x="597.9" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.9" y="334.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.isEmpty (3 samples, 0.04%)</title><rect x="598.2" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="601.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty$ (2 samples, 0.03%)</title><rect x="598.3" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty (2 samples, 0.03%)</title><rect x="598.3" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (2 samples, 0.03%)</title><rect x="598.3" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (2 samples, 0.03%)</title><rect x="598.7" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (2 samples, 0.03%)</title><rect x="598.7" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.7" y="302.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIteratorCell.headIterator (2 samples, 0.03%)</title><rect x="598.7" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.7" y="286.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (8 samples, 0.11%)</title><rect x="599.1" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.1" y="510.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (7 samples, 0.09%)</title><rect x="599.3" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.3" y="494.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (6 samples, 0.08%)</title><rect x="599.3" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.3" y="478.0"></text>
</g>
<g>
<title>akka/actor/Deploy$.apply (2 samples, 0.03%)</title><rect x="599.3" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.3" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (4 samples, 0.05%)</title><rect x="599.6" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.6" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (4 samples, 0.05%)</title><rect x="599.6" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.6" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (4 samples, 0.05%)</title><rect x="599.6" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.6" y="430.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (4 samples, 0.05%)</title><rect x="599.6" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.6" y="414.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.04%)</title><rect x="599.8" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.8" y="398.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="599.9" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.9" y="382.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (6 samples, 0.08%)</title><rect x="600.6" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (6 samples, 0.08%)</title><rect x="600.6" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.6" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (6 samples, 0.08%)</title><rect x="600.6" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.6" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.&lt;init&gt; (2 samples, 0.03%)</title><rect x="600.6" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.6" y="478.0"></text>
</g>
<g>
<title>scala/Array$.empty (4 samples, 0.05%)</title><rect x="600.9" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.9" y="478.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$GenericClassTag.newArray (4 samples, 0.05%)</title><rect x="600.9" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.9" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (4 samples, 0.05%)</title><rect x="600.9" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (4 samples, 0.05%)</title><rect x="600.9" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.9" y="430.0"></text>
</g>
<g>
<title>JVM_NewArray (4 samples, 0.05%)</title><rect x="600.9" y="403.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="603.9" y="414.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (2 samples, 0.03%)</title><rect x="601.2" y="387.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="604.2" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="601.2" y="371.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.2" y="382.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (22 samples, 0.29%)</title><rect x="602.0" y="835.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (21 samples, 0.28%)</title><rect x="602.0" y="819.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (21 samples, 0.28%)</title><rect x="602.0" y="803.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1151/1018458507.apply (19 samples, 0.25%)</title><rect x="602.1" y="787.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (19 samples, 0.25%)</title><rect x="602.1" y="771.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.1" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1150/388563910.apply (19 samples, 0.25%)</title><rect x="602.1" y="755.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (19 samples, 0.25%)</title><rect x="602.1" y="739.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.1" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$987/307451012.apply (2 samples, 0.03%)</title><rect x="602.1" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.1" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (2 samples, 0.03%)</title><rect x="602.1" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.1" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1123/134129059.apply (17 samples, 0.23%)</title><rect x="602.4" y="723.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.4" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (17 samples, 0.23%)</title><rect x="602.4" y="707.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.4" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1145/856551974.apply (16 samples, 0.21%)</title><rect x="602.6" y="691.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (16 samples, 0.21%)</title><rect x="602.6" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.6" y="686.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1154/1413093436.apply (5 samples, 0.07%)</title><rect x="602.6" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.6" y="670.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (5 samples, 0.07%)</title><rect x="602.6" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.6" y="654.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (4 samples, 0.05%)</title><rect x="602.8" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="638.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (2 samples, 0.03%)</title><rect x="602.8" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (2 samples, 0.03%)</title><rect x="602.8" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.addListener (2 samples, 0.03%)</title><rect x="602.8" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.addListener (2 samples, 0.03%)</title><rect x="602.8" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (2 samples, 0.03%)</title><rect x="602.8" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 0.03%)</title><rect x="602.8" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="602.8" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="602.8" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.8" y="510.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (2 samples, 0.03%)</title><rect x="603.1" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="622.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (2 samples, 0.03%)</title><rect x="603.1" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (2 samples, 0.03%)</title><rect x="603.1" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="603.1" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="603.1" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.03%)</title><rect x="603.1" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="603.1" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="603.1" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="603.1" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="603.1" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="603.1" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.1" y="462.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="603.1" y="435.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.1" y="446.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (11 samples, 0.15%)</title><rect x="603.4" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (11 samples, 0.15%)</title><rect x="603.4" y="643.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (11 samples, 0.15%)</title><rect x="603.4" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.4" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1151/1018458507.apply (11 samples, 0.15%)</title><rect x="603.4" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.4" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (11 samples, 0.15%)</title><rect x="603.4" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.4" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1150/388563910.apply (11 samples, 0.15%)</title><rect x="603.4" y="579.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.4" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (11 samples, 0.15%)</title><rect x="603.4" y="563.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.4" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.15%)</title><rect x="603.4" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.4" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.15%)</title><rect x="603.4" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.4" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1162/14236032.apply (11 samples, 0.15%)</title><rect x="603.4" y="515.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.4" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (11 samples, 0.15%)</title><rect x="603.4" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.4" y="510.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1159/343213702.apply (6 samples, 0.08%)</title><rect x="603.4" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.4" y="494.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$7 (6 samples, 0.08%)</title><rect x="603.4" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.4" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$.&lt;clinit&gt; (6 samples, 0.08%)</title><rect x="603.4" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.4" y="462.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.&lt;clinit&gt; (3 samples, 0.04%)</title><rect x="603.4" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.4" y="446.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers.$init$ (2 samples, 0.03%)</title><rect x="603.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.04%)</title><rect x="603.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.04%)</title><rect x="603.9" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.04%)</title><rect x="603.9" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.9" y="366.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.04%)</title><rect x="603.9" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.04%)</title><rect x="603.9" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.04%)</title><rect x="603.9" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.04%)</title><rect x="603.9" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.04%)</title><rect x="603.9" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.04%)</title><rect x="603.9" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.04%)</title><rect x="603.9" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.9" y="222.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="603.9" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.9" y="206.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="603.9" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.9" y="190.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.03%)</title><rect x="603.9" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.9" y="174.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.03%)</title><rect x="603.9" y="147.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="606.9" y="158.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.03%)</title><rect x="603.9" y="131.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="606.9" y="142.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.03%)</title><rect x="603.9" y="115.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="606.9" y="126.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.03%)</title><rect x="603.9" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="606.9" y="110.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.03%)</title><rect x="603.9" y="83.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="606.9" y="94.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.03%)</title><rect x="603.9" y="67.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="606.9" y="78.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (2 samples, 0.03%)</title><rect x="603.9" y="51.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="606.9" y="62.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.03%)</title><rect x="603.9" y="35.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="606.9" y="46.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (5 samples, 0.07%)</title><rect x="604.3" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.3" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (4 samples, 0.05%)</title><rect x="604.3" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.3" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (4 samples, 0.05%)</title><rect x="604.3" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.3" y="462.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (4 samples, 0.05%)</title><rect x="604.3" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.3" y="446.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (4 samples, 0.05%)</title><rect x="604.3" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.3" y="430.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (2 samples, 0.03%)</title><rect x="604.5" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.5" y="414.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="604.5" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.5" y="398.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="604.5" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (2 samples, 0.03%)</title><rect x="604.5" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (2 samples, 0.03%)</title><rect x="604.5" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (2 samples, 0.03%)</title><rect x="604.5" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (2 samples, 0.03%)</title><rect x="604.5" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (2 samples, 0.03%)</title><rect x="604.5" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (2 samples, 0.03%)</title><rect x="604.5" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="604.5" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (2 samples, 0.03%)</title><rect x="604.5" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (2 samples, 0.03%)</title><rect x="604.5" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (2 samples, 0.03%)</title><rect x="604.5" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (2 samples, 0.03%)</title><rect x="604.5" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (2 samples, 0.03%)</title><rect x="604.5" y="179.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.5" y="190.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1134/1036935740.apply (18 samples, 0.24%)</title><rect x="605.5" y="899.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.5" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (18 samples, 0.24%)</title><rect x="605.5" y="883.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.5" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (16 samples, 0.21%)</title><rect x="605.8" y="867.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1140/865883908.apply (16 samples, 0.21%)</title><rect x="605.8" y="851.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (16 samples, 0.21%)</title><rect x="605.8" y="835.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (16 samples, 0.21%)</title><rect x="605.8" y="819.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.8" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1141/718092672.apply (14 samples, 0.19%)</title><rect x="606.1" y="803.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.1" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (14 samples, 0.19%)</title><rect x="606.1" y="787.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (14 samples, 0.19%)</title><rect x="606.1" y="771.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.1" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (14 samples, 0.19%)</title><rect x="606.1" y="755.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (14 samples, 0.19%)</title><rect x="606.1" y="739.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.1" y="750.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (13 samples, 0.17%)</title><rect x="606.2" y="723.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.2" y="734.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (13 samples, 0.17%)</title><rect x="606.2" y="707.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.2" y="718.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (2 samples, 0.03%)</title><rect x="606.4" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.4" y="702.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (7 samples, 0.09%)</title><rect x="607.0" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.0" y="702.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (6 samples, 0.08%)</title><rect x="607.0" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.0" y="686.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (5 samples, 0.07%)</title><rect x="607.0" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.0" y="670.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="607.3" y="643.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="610.3" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$1111/2066248967.apply (2 samples, 0.03%)</title><rect x="608.6" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$3 (2 samples, 0.03%)</title><rect x="608.6" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$968/1321235715.apply (5 samples, 0.07%)</title><rect x="608.9" y="1027.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (5 samples, 0.07%)</title><rect x="608.9" y="1011.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$980/2098294507.apply (5 samples, 0.07%)</title><rect x="608.9" y="995.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (5 samples, 0.07%)</title><rect x="608.9" y="979.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (5 samples, 0.07%)</title><rect x="608.9" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (5 samples, 0.07%)</title><rect x="608.9" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$966/340123564.apply (3 samples, 0.04%)</title><rect x="608.9" y="931.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (3 samples, 0.04%)</title><rect x="608.9" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="608.9" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$1108/920942181.apply (2 samples, 0.03%)</title><rect x="608.9" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="608.9" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.9" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="608.9" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.9" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="608.9" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.9" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatchers$Slash$.apply (2 samples, 0.03%)</title><rect x="609.4" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatchers$Slash$.apply (2 samples, 0.03%)</title><rect x="609.4" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.4" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleException$1 (2 samples, 0.03%)</title><rect x="609.9" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ExceptionHandler$$anon$1.andThen (2 samples, 0.03%)</title><rect x="609.9" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.9" y="1118.0"></text>
</g>
<g>
<title>scala/PartialFunction.andThen$ (2 samples, 0.03%)</title><rect x="609.9" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1022/321716597.apply (8 samples, 0.11%)</title><rect x="610.4" y="1155.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (8 samples, 0.11%)</title><rect x="610.4" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1023/1908222349.apply (8 samples, 0.11%)</title><rect x="610.4" y="1123.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (8 samples, 0.11%)</title><rect x="610.4" y="1107.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$.handleRejections (2 samples, 0.03%)</title><rect x="611.1" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleRejections$ (2 samples, 0.03%)</title><rect x="611.1" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleRejections (2 samples, 0.03%)</title><rect x="611.1" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (2 samples, 0.03%)</title><rect x="611.9" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (2 samples, 0.03%)</title><rect x="612.4" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.4" y="1262.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.12%)</title><rect x="613.2" y="1251.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="616.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.05%)</title><rect x="614.6" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="614.6" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="614.6" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="614.9" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (197 samples, 2.64%)</title><rect x="615.4" y="1331.0" width="31.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.4" y="1342.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (133 samples, 1.78%)</title><rect x="615.6" y="1315.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.6" y="1326.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (133 samples, 1.78%)</title><rect x="615.6" y="1299.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.6" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (133 samples, 1.78%)</title><rect x="615.6" y="1283.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.6" y="1294.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (47 samples, 0.63%)</title><rect x="615.7" y="1267.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$524/860146723.apply (43 samples, 0.58%)</title><rect x="615.9" y="1251.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (42 samples, 0.56%)</title><rect x="616.0" y="1235.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (42 samples, 0.56%)</title><rect x="616.0" y="1219.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (27 samples, 0.36%)</title><rect x="616.0" y="1203.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (26 samples, 0.35%)</title><rect x="616.0" y="1187.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$609/757584451.apply (25 samples, 0.33%)</title><rect x="616.2" y="1171.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (25 samples, 0.33%)</title><rect x="616.2" y="1155.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (25 samples, 0.33%)</title><rect x="616.2" y="1139.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (25 samples, 0.33%)</title><rect x="616.2" y="1123.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (25 samples, 0.33%)</title><rect x="616.2" y="1107.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (25 samples, 0.33%)</title><rect x="616.2" y="1091.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (25 samples, 0.33%)</title><rect x="616.2" y="1075.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$507/473436676.apply (4 samples, 0.05%)</title><rect x="617.0" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (4 samples, 0.05%)</title><rect x="617.0" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$518/281761981.apply (3 samples, 0.04%)</title><rect x="617.1" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (3 samples, 0.04%)</title><rect x="617.1" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (3 samples, 0.04%)</title><rect x="617.1" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (3 samples, 0.04%)</title><rect x="617.1" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (3 samples, 0.04%)</title><rect x="617.1" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.1" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.header (2 samples, 0.03%)</title><rect x="617.1" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.1" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header$ (2 samples, 0.03%)</title><rect x="617.1" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.1" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header (2 samples, 0.03%)</title><rect x="617.1" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.1" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (6 samples, 0.08%)</title><rect x="618.1" y="1059.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (6 samples, 0.08%)</title><rect x="618.1" y="1043.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (6 samples, 0.08%)</title><rect x="618.1" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (6 samples, 0.08%)</title><rect x="618.1" y="1011.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (6 samples, 0.08%)</title><rect x="618.1" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (4 samples, 0.05%)</title><rect x="618.4" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (2 samples, 0.03%)</title><rect x="618.4" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (2 samples, 0.03%)</title><rect x="618.4" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.4" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.lengthCompare (2 samples, 0.03%)</title><rect x="618.4" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.4" y="942.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (2 samples, 0.03%)</title><rect x="618.4" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.4" y="926.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (2 samples, 0.03%)</title><rect x="618.4" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.4" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (2 samples, 0.03%)</title><rect x="618.7" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (2 samples, 0.03%)</title><rect x="618.7" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (2 samples, 0.03%)</title><rect x="618.7" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (2 samples, 0.03%)</title><rect x="618.7" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.7" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (2 samples, 0.03%)</title><rect x="618.7" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.07%)</title><rect x="619.2" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="619.2" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.03%)</title><rect x="619.5" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (14 samples, 0.19%)</title><rect x="620.3" y="1203.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (14 samples, 0.19%)</title><rect x="620.3" y="1187.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1233/1369886938.apply (14 samples, 0.19%)</title><rect x="620.3" y="1171.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (14 samples, 0.19%)</title><rect x="620.3" y="1155.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (14 samples, 0.19%)</title><rect x="620.3" y="1139.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (14 samples, 0.19%)</title><rect x="620.3" y="1123.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (14 samples, 0.19%)</title><rect x="620.3" y="1107.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (14 samples, 0.19%)</title><rect x="620.3" y="1091.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (14 samples, 0.19%)</title><rect x="620.3" y="1075.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (10 samples, 0.13%)</title><rect x="620.3" y="1059.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (10 samples, 0.13%)</title><rect x="620.3" y="1043.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.3" y="1054.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (10 samples, 0.13%)</title><rect x="620.3" y="1027.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$670/1718940335.apply (10 samples, 0.13%)</title><rect x="620.3" y="1011.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (10 samples, 0.13%)</title><rect x="620.3" y="995.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (10 samples, 0.13%)</title><rect x="620.3" y="979.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.3" y="990.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (10 samples, 0.13%)</title><rect x="620.3" y="963.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 0.13%)</title><rect x="620.3" y="947.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 0.13%)</title><rect x="620.3" y="931.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.13%)</title><rect x="620.3" y="915.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.13%)</title><rect x="620.3" y="899.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.3" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (9 samples, 0.12%)</title><rect x="620.5" y="883.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="623.5" y="894.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (9 samples, 0.12%)</title><rect x="620.5" y="867.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="623.5" y="878.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 0.12%)</title><rect x="620.5" y="851.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="623.5" y="862.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 0.12%)</title><rect x="620.5" y="835.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="623.5" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="620.9" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="623.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$numConnectedSlots (2 samples, 0.03%)</title><rect x="621.9" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet$$Lambda$523/1828931916.apply (2 samples, 0.03%)</title><rect x="622.7" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.$anonfun$callback$2$adapted (2 samples, 0.03%)</title><rect x="622.7" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.$anonfun$callback$2 (2 samples, 0.03%)</title><rect x="622.7" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (85 samples, 1.14%)</title><rect x="623.2" y="1267.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (83 samples, 1.11%)</title><rect x="623.2" y="1251.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (17 samples, 0.23%)</title><rect x="623.5" y="1235.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (2 samples, 0.03%)</title><rect x="623.5" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (15 samples, 0.20%)</title><rect x="623.8" y="1219.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (12 samples, 0.16%)</title><rect x="623.8" y="1203.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.afterRequestFinished (5 samples, 0.07%)</title><rect x="624.1" y="1187.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (5 samples, 0.07%)</title><rect x="624.1" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.shouldStopOnIdle (2 samples, 0.03%)</title><rect x="624.1" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (2 samples, 0.03%)</title><rect x="624.6" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.6" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (4 samples, 0.05%)</title><rect x="625.0" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (4 samples, 0.05%)</title><rect x="625.0" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (4 samples, 0.05%)</title><rect x="625.0" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (3 samples, 0.04%)</title><rect x="625.2" y="1139.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.2" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (3 samples, 0.04%)</title><rect x="625.2" y="1123.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.2" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (3 samples, 0.04%)</title><rect x="625.2" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.2" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (3 samples, 0.04%)</title><rect x="625.2" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (2 samples, 0.03%)</title><rect x="625.4" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.03%)</title><rect x="625.4" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.03%)</title><rect x="625.4" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (2 samples, 0.03%)</title><rect x="625.7" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (2 samples, 0.03%)</title><rect x="626.2" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$4.onPull (2 samples, 0.03%)</title><rect x="626.2" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (60 samples, 0.80%)</title><rect x="626.5" y="1235.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (5 samples, 0.07%)</title><rect x="626.5" y="1219.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.akka$http$impl$engine$client$OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$$drainParser (2 samples, 0.03%)</title><rect x="626.5" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (3 samples, 0.04%)</title><rect x="626.8" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (3 samples, 0.04%)</title><rect x="626.8" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (3 samples, 0.04%)</title><rect x="626.8" y="1171.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (2 samples, 0.03%)</title><rect x="627.4" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SupervisedGraphStageLogic.withSupervision (2 samples, 0.03%)</title><rect x="627.4" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6$$Lambda$530/425302686.apply (2 samples, 0.03%)</title><rect x="627.4" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (47 samples, 0.63%)</title><rect x="628.1" y="1219.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$418/659826756.apply (43 samples, 0.58%)</title><rect x="628.2" y="1203.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (43 samples, 0.58%)</title><rect x="628.2" y="1187.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (43 samples, 0.58%)</title><rect x="628.2" y="1171.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (5 samples, 0.07%)</title><rect x="628.2" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (5 samples, 0.07%)</title><rect x="628.2" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (5 samples, 0.07%)</title><rect x="628.2" y="1123.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (3 samples, 0.04%)</title><rect x="628.4" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (3 samples, 0.04%)</title><rect x="628.4" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (38 samples, 0.51%)</title><rect x="629.0" y="1155.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (4 samples, 0.05%)</title><rect x="629.0" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (20 samples, 0.27%)</title><rect x="629.6" y="1139.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (12 samples, 0.16%)</title><rect x="629.8" y="1123.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (12 samples, 0.16%)</title><rect x="629.8" y="1107.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (12 samples, 0.16%)</title><rect x="629.8" y="1091.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (12 samples, 0.16%)</title><rect x="629.8" y="1075.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (12 samples, 0.16%)</title><rect x="629.8" y="1059.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (12 samples, 0.16%)</title><rect x="629.8" y="1043.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.render (11 samples, 0.15%)</title><rect x="629.9" y="1027.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (11 samples, 0.15%)</title><rect x="629.9" y="1011.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (10 samples, 0.13%)</title><rect x="629.9" y="995.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (3 samples, 0.04%)</title><rect x="629.9" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="630.1" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="630.1" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="630.1" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.1" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="630.1" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.1" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (2 samples, 0.03%)</title><rect x="630.1" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.1" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.renderValue (7 samples, 0.09%)</title><rect x="630.4" y="979.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (7 samples, 0.09%)</title><rect x="630.4" y="963.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (6 samples, 0.08%)</title><rect x="630.4" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="630.6" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="630.6" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (4 samples, 0.05%)</title><rect x="630.6" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="630.6" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.6" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/CharUtils$.signedDecimalChars (2 samples, 0.03%)</title><rect x="630.9" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="631.7" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (5 samples, 0.07%)</title><rect x="631.7" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="631.7" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (5 samples, 0.07%)</title><rect x="631.7" y="1075.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (5 samples, 0.07%)</title><rect x="631.7" y="1059.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (5 samples, 0.07%)</title><rect x="631.7" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (5 samples, 0.07%)</title><rect x="631.7" y="1027.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (5 samples, 0.07%)</title><rect x="631.7" y="1011.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (5 samples, 0.07%)</title><rect x="631.7" y="995.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="631.7" y="979.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.7" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (5 samples, 0.07%)</title><rect x="631.7" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (5 samples, 0.07%)</title><rect x="631.7" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (5 samples, 0.07%)</title><rect x="631.7" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.7" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (5 samples, 0.07%)</title><rect x="631.7" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (5 samples, 0.07%)</title><rect x="631.7" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (5 samples, 0.07%)</title><rect x="631.7" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.7" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (5 samples, 0.07%)</title><rect x="631.7" y="867.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.7" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.render (5 samples, 0.07%)</title><rect x="631.7" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.7" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="631.8" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="631.8" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="631.8" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.rec$1 (2 samples, 0.03%)</title><rect x="631.8" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.8" y="798.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="631.8" y="771.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="634.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (6 samples, 0.08%)</title><rect x="632.8" y="1139.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="632.9" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (2 samples, 0.03%)</title><rect x="633.4" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (8 samples, 0.11%)</title><rect x="633.7" y="1139.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (7 samples, 0.09%)</title><rect x="633.9" y="1123.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (7 samples, 0.09%)</title><rect x="633.9" y="1107.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (7 samples, 0.09%)</title><rect x="633.9" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (7 samples, 0.09%)</title><rect x="633.9" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (7 samples, 0.09%)</title><rect x="633.9" y="1059.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.render (4 samples, 0.05%)</title><rect x="633.9" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render$ (4 samples, 0.05%)</title><rect x="633.9" y="1027.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render (4 samples, 0.05%)</title><rect x="633.9" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="633.9" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (4 samples, 0.05%)</title><rect x="633.9" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (4 samples, 0.05%)</title><rect x="633.9" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.9" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (4 samples, 0.05%)</title><rect x="633.9" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="633.9" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaType.render (2 samples, 0.03%)</title><rect x="633.9" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.9" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="634.2" y="931.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="637.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (3 samples, 0.04%)</title><rect x="634.5" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (3 samples, 0.04%)</title><rect x="634.5" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (3 samples, 0.04%)</title><rect x="634.5" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.5" y="1022.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.putByteArrayUnsafe (3 samples, 0.04%)</title><rect x="634.5" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.$plus$eq (3 samples, 0.04%)</title><rect x="634.5" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq$ (3 samples, 0.04%)</title><rect x="634.5" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.5" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="634.5" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="637.5" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (2 samples, 0.03%)</title><rect x="635.2" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="635.2" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/OutPort.id (2 samples, 0.03%)</title><rect x="635.2" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.2" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="635.2" y="1155.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="638.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (2 samples, 0.03%)</title><rect x="635.5" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (2 samples, 0.03%)</title><rect x="636.3" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (58 samples, 0.78%)</title><rect x="636.6" y="1315.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (58 samples, 0.78%)</title><rect x="636.6" y="1299.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (57 samples, 0.76%)</title><rect x="636.7" y="1283.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (44 samples, 0.59%)</title><rect x="636.7" y="1267.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.preStart (2 samples, 0.03%)</title><rect x="636.9" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (8 samples, 0.11%)</title><rect x="637.2" y="1251.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (3 samples, 0.04%)</title><rect x="637.2" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.2" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.second (2 samples, 0.03%)</title><rect x="637.4" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second$ (2 samples, 0.03%)</title><rect x="637.4" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second (2 samples, 0.03%)</title><rect x="637.4" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.seconds (2 samples, 0.03%)</title><rect x="637.4" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds$ (2 samples, 0.03%)</title><rect x="637.4" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.4" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds (2 samples, 0.03%)</title><rect x="637.4" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (5 samples, 0.07%)</title><rect x="637.7" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (3 samples, 0.04%)</title><rect x="637.7" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (2 samples, 0.03%)</title><rect x="637.8" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.preStart (2 samples, 0.03%)</title><rect x="638.5" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/Buffer$.apply (2 samples, 0.03%)</title><rect x="638.5" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (2 samples, 0.03%)</title><rect x="638.8" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.isStageCompleted (2 samples, 0.03%)</title><rect x="638.8" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.preStart (3 samples, 0.04%)</title><rect x="639.1" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="639.3" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="639.3" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (2 samples, 0.03%)</title><rect x="639.3" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (24 samples, 0.32%)</title><rect x="639.6" y="1251.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (10 samples, 0.13%)</title><rect x="639.7" y="1235.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (10 samples, 0.13%)</title><rect x="639.7" y="1219.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (4 samples, 0.05%)</title><rect x="639.7" y="1203.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.7" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="639.9" y="1187.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$540/1035254785.apply$mcV$sp (3 samples, 0.04%)</title><rect x="639.9" y="1171.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (6 samples, 0.08%)</title><rect x="640.4" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.08%)</title><rect x="640.4" y="1187.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (5 samples, 0.07%)</title><rect x="640.5" y="1171.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (5 samples, 0.07%)</title><rect x="640.5" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (5 samples, 0.07%)</title><rect x="640.5" y="1139.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.05%)</title><rect x="640.7" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="640.7" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="640.7" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="640.7" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="640.7" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="640.7" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="640.7" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="640.7" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="640.7" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="640.7" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="640.7" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.7" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="640.7" y="947.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="643.7" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="640.7" y="931.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.7" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="640.7" y="915.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="643.7" y="926.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="640.9" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.9" y="910.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="640.9" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="643.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="640.9" y="867.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="643.9" y="878.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="641.0" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.0" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="641.0" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="644.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="641.0" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.0" y="830.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (13 samples, 0.17%)</title><rect x="641.3" y="1235.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (13 samples, 0.17%)</title><rect x="641.3" y="1219.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (12 samples, 0.16%)</title><rect x="641.3" y="1203.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (11 samples, 0.15%)</title><rect x="641.3" y="1187.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (11 samples, 0.15%)</title><rect x="641.3" y="1171.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (11 samples, 0.15%)</title><rect x="641.3" y="1155.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.randomName (3 samples, 0.04%)</title><rect x="641.6" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.randomName$ (3 samples, 0.04%)</title><rect x="641.6" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (6 samples, 0.08%)</title><rect x="642.1" y="1139.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (5 samples, 0.07%)</title><rect x="642.3" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (5 samples, 0.07%)</title><rect x="642.3" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (5 samples, 0.07%)</title><rect x="642.3" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (5 samples, 0.07%)</title><rect x="642.3" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (5 samples, 0.07%)</title><rect x="642.3" y="1059.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="642.6" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="642.6" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="642.6" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="642.6" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (2 samples, 0.03%)</title><rect x="642.6" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (7 samples, 0.09%)</title><rect x="643.7" y="1267.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (7 samples, 0.09%)</title><rect x="643.7" y="1251.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="643.7" y="1235.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.7" y="1246.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (3 samples, 0.04%)</title><rect x="643.7" y="1219.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (3 samples, 0.04%)</title><rect x="644.2" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (3 samples, 0.04%)</title><rect x="644.2" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="1230.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (3 samples, 0.04%)</title><rect x="644.2" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.2" y="1214.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (3 samples, 0.04%)</title><rect x="644.2" y="1187.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.2" y="1198.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.04%)</title><rect x="644.2" y="1171.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.2" y="1182.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.04%)</title><rect x="644.2" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (3 samples, 0.04%)</title><rect x="644.2" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (3 samples, 0.04%)</title><rect x="644.2" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (3 samples, 0.04%)</title><rect x="644.2" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (3 samples, 0.04%)</title><rect x="644.2" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (3 samples, 0.04%)</title><rect x="644.2" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (6 samples, 0.08%)</title><rect x="644.8" y="1267.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (6 samples, 0.08%)</title><rect x="644.8" y="1251.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (3 samples, 0.04%)</title><rect x="645.0" y="1235.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onPull (2 samples, 0.03%)</title><rect x="645.0" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (4 samples, 0.05%)</title><rect x="645.9" y="1315.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (4 samples, 0.05%)</title><rect x="645.9" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (4 samples, 0.05%)</title><rect x="645.9" y="1283.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set2.isEmpty (3 samples, 0.04%)</title><rect x="646.1" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.1" y="1278.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (3 samples, 0.04%)</title><rect x="646.7" y="1395.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (3 samples, 0.04%)</title><rect x="646.7" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (3 samples, 0.04%)</title><rect x="646.7" y="1363.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.7" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (3 samples, 0.04%)</title><rect x="646.7" y="1347.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.04%)</title><rect x="646.7" y="1331.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.04%)</title><rect x="646.7" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.7" y="1326.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (3 samples, 0.04%)</title><rect x="646.7" y="1299.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (3 samples, 0.04%)</title><rect x="646.7" y="1283.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (3 samples, 0.04%)</title><rect x="646.7" y="1267.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count (3 samples, 0.04%)</title><rect x="646.7" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (2 samples, 0.03%)</title><rect x="646.9" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (8 samples, 0.11%)</title><rect x="647.2" y="1427.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (8 samples, 0.11%)</title><rect x="647.2" y="1411.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (8 samples, 0.11%)</title><rect x="647.2" y="1395.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.2" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (8 samples, 0.11%)</title><rect x="647.2" y="1379.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (6 samples, 0.08%)</title><rect x="647.5" y="1363.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casItem (5 samples, 0.07%)</title><rect x="647.6" y="1347.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.07%)</title><rect x="647.6" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.07%)</title><rect x="647.6" y="1315.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.6" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (58 samples, 0.78%)</title><rect x="648.4" y="1427.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (54 samples, 0.72%)</title><rect x="648.4" y="1411.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (53 samples, 0.71%)</title><rect x="648.6" y="1395.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (48 samples, 0.64%)</title><rect x="649.2" y="1379.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (48 samples, 0.64%)</title><rect x="649.2" y="1363.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (48 samples, 0.64%)</title><rect x="649.2" y="1347.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (46 samples, 0.62%)</title><rect x="649.5" y="1331.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (8 samples, 0.11%)</title><rect x="649.7" y="1315.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (7 samples, 0.09%)</title><rect x="649.9" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="1310.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (7 samples, 0.09%)</title><rect x="649.9" y="1283.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.9" y="1294.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (3 samples, 0.04%)</title><rect x="649.9" y="1267.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (2 samples, 0.03%)</title><rect x="650.0" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.set (2 samples, 0.03%)</title><rect x="650.0" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (4 samples, 0.05%)</title><rect x="650.3" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (3 samples, 0.04%)</title><rect x="650.3" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (2 samples, 0.03%)</title><rect x="650.5" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (2 samples, 0.03%)</title><rect x="650.5" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (2 samples, 0.03%)</title><rect x="651.0" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs$ (2 samples, 0.03%)</title><rect x="651.0" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs (2 samples, 0.03%)</title><rect x="651.0" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (6 samples, 0.08%)</title><rect x="651.3" y="1315.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (6 samples, 0.08%)</title><rect x="651.3" y="1299.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (6 samples, 0.08%)</title><rect x="651.3" y="1283.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="651.3" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.3" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="651.4" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$652/683924103.apply$mcV$sp (2 samples, 0.03%)</title><rect x="651.4" y="1235.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (3 samples, 0.04%)</title><rect x="651.8" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$651/1150005572.apply (3 samples, 0.04%)</title><rect x="651.8" y="1251.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$tellWatchersWeDied$2$adapted (2 samples, 0.03%)</title><rect x="651.9" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$tellWatchersWeDied$2 (2 samples, 0.03%)</title><rect x="651.9" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.sendTerminated$1 (2 samples, 0.03%)</title><rect x="651.9" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="651.9" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (2 samples, 0.03%)</title><rect x="651.9" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/1922673440.apply (2 samples, 0.03%)</title><rect x="651.9" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (2 samples, 0.03%)</title><rect x="651.9" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (2 samples, 0.03%)</title><rect x="651.9" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.03%)</title><rect x="651.9" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.03%)</title><rect x="651.9" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.08%)</title><rect x="652.2" y="1315.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (5 samples, 0.07%)</title><rect x="652.4" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (5 samples, 0.07%)</title><rect x="652.4" y="1283.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (5 samples, 0.07%)</title><rect x="652.4" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (5 samples, 0.07%)</title><rect x="652.4" y="1251.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.05%)</title><rect x="652.5" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="652.5" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.05%)</title><rect x="652.5" y="1203.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.5" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.05%)</title><rect x="652.5" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.5" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.05%)</title><rect x="652.5" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="652.5" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="652.5" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.05%)</title><rect x="652.5" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.05%)</title><rect x="652.5" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="652.5" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="652.5" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.5" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="652.7" y="1059.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="655.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="652.7" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="655.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="652.7" y="1027.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="655.7" y="1038.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="652.9" y="1011.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.9" y="1022.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="652.9" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="655.9" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="652.9" y="979.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.9" y="990.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="652.9" y="963.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="655.9" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="652.9" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="652.9" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.9" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (4 samples, 0.05%)</title><rect x="653.2" y="1315.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (4 samples, 0.05%)</title><rect x="653.2" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (4 samples, 0.05%)</title><rect x="653.2" y="1283.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (4 samples, 0.05%)</title><rect x="653.2" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (3 samples, 0.04%)</title><rect x="653.3" y="1251.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (2 samples, 0.03%)</title><rect x="653.5" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (2 samples, 0.03%)</title><rect x="653.5" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.03%)</title><rect x="653.5" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.5" y="1214.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemoteDeadLetterActorRef.$bang (2 samples, 0.03%)</title><rect x="653.5" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (2 samples, 0.03%)</title><rect x="653.5" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (2 samples, 0.03%)</title><rect x="653.5" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.specialHandle (2 samples, 0.03%)</title><rect x="653.5" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.5" y="1150.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (19 samples, 0.25%)</title><rect x="653.8" y="1315.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (19 samples, 0.25%)</title><rect x="653.8" y="1299.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (19 samples, 0.25%)</title><rect x="653.8" y="1283.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.8" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (19 samples, 0.25%)</title><rect x="653.8" y="1267.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.8" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (9 samples, 0.12%)</title><rect x="653.8" y="1251.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.8" y="1262.0"></text>
</g>
<g>
<title>scala/Option.foreach (9 samples, 0.12%)</title><rect x="653.8" y="1235.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.8" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$686/735379252.apply (9 samples, 0.12%)</title><rect x="653.8" y="1219.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="656.8" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (9 samples, 0.12%)</title><rect x="653.8" y="1203.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.8" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (9 samples, 0.12%)</title><rect x="653.8" y="1187.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (8 samples, 0.11%)</title><rect x="654.0" y="1171.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.0" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1231/442668647.apply (8 samples, 0.11%)</title><rect x="654.0" y="1155.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.0" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (8 samples, 0.11%)</title><rect x="654.0" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.0" y="1150.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (8 samples, 0.11%)</title><rect x="654.0" y="1123.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.11%)</title><rect x="654.0" y="1107.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/1922673440.apply (8 samples, 0.11%)</title><rect x="654.0" y="1091.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.11%)</title><rect x="654.0" y="1075.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.11%)</title><rect x="654.0" y="1059.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.11%)</title><rect x="654.0" y="1043.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.11%)</title><rect x="654.0" y="1027.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.0" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (7 samples, 0.09%)</title><rect x="654.1" y="1011.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.1" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$494/1982500534.apply (7 samples, 0.09%)</title><rect x="654.1" y="995.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.09%)</title><rect x="654.1" y="979.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.09%)</title><rect x="654.1" y="963.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.1" y="974.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (7 samples, 0.09%)</title><rect x="654.1" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.1" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="654.1" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.1" y="942.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.09%)</title><rect x="654.1" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.1" y="926.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.09%)</title><rect x="654.1" y="899.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.1" y="910.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.09%)</title><rect x="654.1" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.1" y="894.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.09%)</title><rect x="654.1" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.1" y="878.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.09%)</title><rect x="654.1" y="851.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.09%)</title><rect x="654.1" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.1" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.08%)</title><rect x="654.1" y="819.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.1" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.08%)</title><rect x="654.1" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.1" y="814.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.08%)</title><rect x="654.1" y="787.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.1" y="798.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.08%)</title><rect x="654.1" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.1" y="782.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.08%)</title><rect x="654.1" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.08%)</title><rect x="654.1" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.08%)</title><rect x="654.1" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.08%)</title><rect x="654.1" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.08%)</title><rect x="654.1" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="654.1" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.08%)</title><rect x="654.1" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.1" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="654.3" y="643.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="657.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="654.3" y="627.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="654.3" y="611.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.3" y="622.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="654.3" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.3" y="606.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="654.3" y="579.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.3" y="590.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="654.3" y="563.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.3" y="574.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="654.4" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.4" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="654.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="654.6" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="657.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.$plus$plus (6 samples, 0.08%)</title><rect x="655.2" y="1251.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus$ (6 samples, 0.08%)</title><rect x="655.2" y="1235.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus (6 samples, 0.08%)</title><rect x="655.2" y="1219.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.concat (6 samples, 0.08%)</title><rect x="655.2" y="1203.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat$ (6 samples, 0.08%)</title><rect x="655.2" y="1187.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat (5 samples, 0.07%)</title><rect x="655.4" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (4 samples, 0.05%)</title><rect x="655.5" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (4 samples, 0.05%)</title><rect x="655.5" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (4 samples, 0.05%)</title><rect x="655.5" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="658.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (4 samples, 0.05%)</title><rect x="655.5" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (4 samples, 0.05%)</title><rect x="655.5" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (2 samples, 0.03%)</title><rect x="655.5" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toSet (2 samples, 0.03%)</title><rect x="656.2" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toSet$ (2 samples, 0.03%)</title><rect x="656.2" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toSet (2 samples, 0.03%)</title><rect x="656.2" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (2 samples, 0.03%)</title><rect x="656.2" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.03%)</title><rect x="656.5" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.5" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (3 samples, 0.04%)</title><rect x="657.0" y="1411.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.0" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (3 samples, 0.04%)</title><rect x="657.0" y="1395.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.0" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (3 samples, 0.04%)</title><rect x="657.0" y="1379.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.0" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (2 samples, 0.03%)</title><rect x="657.1" y="1363.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask$RunnableExecuteAction.exec (2 samples, 0.03%)</title><rect x="657.6" y="1475.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.6" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/BatchingExecutor$AsyncBatch.run (2 samples, 0.03%)</title><rect x="657.6" y="1459.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.6" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.usingBlockContext (2 samples, 0.03%)</title><rect x="657.6" y="1443.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.6" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/BatchingExecutor$AsyncBatch.apply (2 samples, 0.03%)</title><rect x="657.6" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.6" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/BatchingExecutor$AsyncBatch.apply (2 samples, 0.03%)</title><rect x="657.6" y="1411.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.6" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/BatchingExecutor$AbstractBatch.runN (2 samples, 0.03%)</title><rect x="657.6" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.6" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (2 samples, 0.03%)</title><rect x="657.6" y="1379.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.6" y="1390.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$223/780843029.apply (2 samples, 0.03%)</title><rect x="657.6" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.6" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$waitForJVMs$3 (2 samples, 0.03%)</title><rect x="657.6" y="1347.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.terminate (2 samples, 0.03%)</title><rect x="657.6" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$.apply (2 samples, 0.03%)</title><rect x="657.6" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (2 samples, 0.03%)</title><rect x="657.6" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (2 samples, 0.03%)</title><rect x="657.6" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (2 samples, 0.03%)</title><rect x="657.6" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$.createExtension (2 samples, 0.03%)</title><rect x="657.6" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$.createExtension (2 samples, 0.03%)</title><rect x="657.6" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.setDone (4 samples, 0.05%)</title><rect x="657.9" y="1475.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (3 samples, 0.04%)</title><rect x="658.1" y="1459.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.getAndBitwiseOr (3 samples, 0.04%)</title><rect x="658.1" y="1443.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseOrInt (3 samples, 0.04%)</title><rect x="658.1" y="1427.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.1" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (2 samples, 0.03%)</title><rect x="658.1" y="1411.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.17%)</title><rect x="658.5" y="1507.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.16%)</title><rect x="658.5" y="1491.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.16%)</title><rect x="658.5" y="1475.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.5" y="1486.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="658.5" y="1459.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="661.5" y="1470.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.13%)</title><rect x="658.9" y="1459.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="661.9" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.11%)</title><rect x="659.2" y="1443.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.2" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.11%)</title><rect x="659.2" y="1427.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.2" y="1438.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.08%)</title><rect x="659.5" y="1411.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="662.5" y="1422.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.08%)</title><rect x="659.5" y="1395.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.5" y="1406.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.08%)</title><rect x="659.5" y="1379.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.5" y="1390.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="659.7" y="1363.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="662.7" y="1374.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="660.0" y="1363.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.0" y="1374.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="660.0" y="1347.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.0" y="1358.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="660.0" y="1331.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="663.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (177 samples, 2.37%)</title><rect x="660.6" y="1523.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.6" y="1534.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="660.6" y="1507.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (175 samples, 2.34%)</title><rect x="660.9" y="1507.0" width="27.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.9" y="1518.0">j..</text>
</g>
<g>
<title>Unsafe_Park (44 samples, 0.59%)</title><rect x="661.4" y="1491.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="664.4" y="1502.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.09%)</title><rect x="661.6" y="1475.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="664.6" y="1486.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.11%)</title><rect x="662.7" y="1475.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="665.7" y="1486.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="663.4" y="1459.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="666.4" y="1470.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.32%)</title><rect x="664.2" y="1475.0" width="3.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="667.2" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.16%)</title><rect x="666.1" y="1459.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.1" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.13%)</title><rect x="666.3" y="1443.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="669.3" y="1454.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.12%)</title><rect x="666.5" y="1427.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.5" y="1438.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.11%)</title><rect x="666.6" y="1411.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="669.6" y="1422.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.08%)</title><rect x="666.8" y="1395.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.8" y="1406.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="667.4" y="1379.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="670.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.70%)</title><rect x="668.3" y="1491.0" width="20.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="671.3" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_wait (122 samples, 1.63%)</title><rect x="668.5" y="1475.0" width="19.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="671.5" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 1.42%)</title><rect x="671.0" y="1459.0" width="16.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.0" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 1.41%)</title><rect x="671.0" y="1443.0" width="16.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.0" y="1454.0"></text>
</g>
<g>
<title>sys_futex (97 samples, 1.30%)</title><rect x="672.3" y="1427.0" width="15.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.3" y="1438.0"></text>
</g>
<g>
<title>do_futex (97 samples, 1.30%)</title><rect x="672.3" y="1411.0" width="15.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.3" y="1422.0"></text>
</g>
<g>
<title>futex_wait (96 samples, 1.29%)</title><rect x="672.5" y="1395.0" width="15.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.5" y="1406.0"></text>
</g>
<g>
<title>futex_wait_queue_me (87 samples, 1.17%)</title><rect x="672.9" y="1379.0" width="13.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.9" y="1390.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="673.7" y="1363.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.7" y="1374.0"></text>
</g>
<g>
<title>schedule (79 samples, 1.06%)</title><rect x="674.2" y="1363.0" width="12.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.2" y="1374.0"></text>
</g>
<g>
<title>__schedule (77 samples, 1.03%)</title><rect x="674.5" y="1347.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="677.5" y="1358.0"></text>
</g>
<g>
<title>finish_task_switch (75 samples, 1.00%)</title><rect x="674.8" y="1331.0" width="11.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.8" y="1342.0"></text>
</g>
<g>
<title>ret_from_intr (4 samples, 0.05%)</title><rect x="686.0" y="1315.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.0" y="1326.0"></text>
</g>
<g>
<title>do_IRQ (4 samples, 0.05%)</title><rect x="686.0" y="1299.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.0" y="1310.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.05%)</title><rect x="686.0" y="1283.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="689.0" y="1294.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.05%)</title><rect x="686.0" y="1267.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.0" y="1278.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="686.4" y="1251.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.4" y="1262.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (2 samples, 0.03%)</title><rect x="686.4" y="1235.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.4" y="1246.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (2 samples, 0.03%)</title><rect x="686.4" y="1219.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.4" y="1230.0"></text>
</g>
<g>
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="686.4" y="1203.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.4" y="1214.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="686.4" y="1187.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="689.4" y="1198.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="686.4" y="1171.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="689.4" y="1182.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="686.4" y="1155.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="689.4" y="1166.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="686.4" y="1139.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.4" y="1150.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="686.4" y="1123.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="689.4" y="1134.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.07%)</title><rect x="686.7" y="1379.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="689.7" y="1390.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="687.8" y="1475.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="690.8" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (49 samples, 0.66%)</title><rect x="688.6" y="1523.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 0.64%)</title><rect x="688.7" y="1507.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.7" y="1518.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.20%)</title><rect x="688.7" y="1491.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="691.7" y="1502.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.07%)</title><rect x="688.9" y="1475.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="691.9" y="1486.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.03%)</title><rect x="689.4" y="1459.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="692.4" y="1470.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.08%)</title><rect x="689.7" y="1475.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="692.7" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="690.3" y="1459.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.3" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="690.3" y="1443.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.3" y="1454.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="690.8" y="1475.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="693.8" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (31 samples, 0.42%)</title><rect x="691.4" y="1491.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="694.4" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.36%)</title><rect x="692.1" y="1475.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="695.1" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.35%)</title><rect x="692.1" y="1459.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="695.1" y="1470.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.31%)</title><rect x="692.5" y="1443.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.5" y="1454.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.29%)</title><rect x="692.5" y="1427.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.5" y="1438.0"></text>
</g>
<g>
<title>futex_wait (21 samples, 0.28%)</title><rect x="692.5" y="1411.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="695.5" y="1422.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.25%)</title><rect x="692.5" y="1395.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="695.5" y="1406.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.21%)</title><rect x="693.0" y="1379.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.0" y="1390.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.21%)</title><rect x="693.0" y="1363.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.0" y="1374.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.21%)</title><rect x="693.0" y="1347.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.0" y="1358.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (18 samples, 0.24%)</title><rect x="696.3" y="1555.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="699.3" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.23%)</title><rect x="696.5" y="1539.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.5" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.23%)</title><rect x="696.5" y="1523.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="699.5" y="1534.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="696.5" y="1507.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="699.5" y="1518.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="696.5" y="1491.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="699.5" y="1502.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="696.5" y="1475.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.5" y="1486.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.19%)</title><rect x="697.0" y="1507.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="700.0" y="1518.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.19%)</title><rect x="697.0" y="1491.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="700.0" y="1502.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.19%)</title><rect x="697.0" y="1475.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.0" y="1486.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.19%)</title><rect x="697.0" y="1459.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="700.0" y="1470.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.19%)</title><rect x="697.0" y="1443.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.0" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.19%)</title><rect x="697.0" y="1427.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.0" y="1438.0"></text>
</g>
<g>
<title>start_thread (3,105 samples, 41.58%)</title><rect x="699.3" y="1555.0" width="490.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="702.3" y="1566.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (3,105 samples, 41.58%)</title><rect x="699.3" y="1539.0" width="490.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="702.3" y="1550.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (3,105 samples, 41.58%)</title><rect x="699.3" y="1523.0" width="490.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="702.3" y="1534.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (113 samples, 1.51%)</title><rect x="699.3" y="1507.0" width="17.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="702.3" y="1518.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (109 samples, 1.46%)</title><rect x="699.3" y="1491.0" width="17.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="702.3" y="1502.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (106 samples, 1.42%)</title><rect x="699.3" y="1475.0" width="16.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="702.3" y="1486.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (104 samples, 1.39%)</title><rect x="699.6" y="1459.0" width="16.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="702.6" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (92 samples, 1.23%)</title><rect x="699.8" y="1443.0" width="14.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.8" y="1454.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (37 samples, 0.50%)</title><rect x="701.1" y="1427.0" width="5.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="704.1" y="1438.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (15 samples, 0.20%)</title><rect x="704.5" y="1411.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="707.5" y="1422.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (4 samples, 0.05%)</title><rect x="706.9" y="1427.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="709.9" y="1438.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (4 samples, 0.05%)</title><rect x="707.5" y="1427.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.5" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.04%)</title><rect x="708.3" y="1427.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="711.3" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="708.8" y="1427.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="711.8" y="1438.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (2 samples, 0.03%)</title><rect x="709.1" y="1427.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="712.1" y="1438.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (26 samples, 0.35%)</title><rect x="709.6" y="1427.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.6" y="1438.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.03%)</title><rect x="713.2" y="1411.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="716.2" y="1422.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (2 samples, 0.03%)</title><rect x="713.2" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="716.2" y="1406.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="713.7" y="1427.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="716.7" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (8 samples, 0.11%)</title><rect x="714.3" y="1443.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="717.3" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="715.6" y="1443.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.6" y="1454.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="716.1" y="1475.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="719.1" y="1486.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (4 samples, 0.05%)</title><rect x="716.5" y="1491.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="719.5" y="1502.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (3 samples, 0.04%)</title><rect x="716.5" y="1475.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="719.5" y="1486.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="716.5" y="1459.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="719.5" y="1470.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (3 samples, 0.04%)</title><rect x="716.5" y="1443.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="719.5" y="1454.0"></text>
</g>
<g>
<title>GangWorker::loop() (323 samples, 4.33%)</title><rect x="717.2" y="1507.0" width="51.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="720.2" y="1518.0">GangW..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.07%)</title><rect x="717.2" y="1491.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.2" y="1502.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.07%)</title><rect x="717.2" y="1475.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.2" y="1486.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.05%)</title><rect x="717.3" y="1459.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="720.3" y="1470.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (2 samples, 0.03%)</title><rect x="717.3" y="1443.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.3" y="1454.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="718.0" y="1491.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="721.0" y="1502.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (306 samples, 4.10%)</title><rect x="718.4" y="1491.0" width="48.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.4" y="1502.0">G1Pa..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (204 samples, 2.73%)</title><rect x="718.6" y="1475.0" width="32.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="721.6" y="1486.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (204 samples, 2.73%)</title><rect x="718.6" y="1459.0" width="32.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="721.6" y="1470.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (145 samples, 1.94%)</title><rect x="718.6" y="1443.0" width="22.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.6" y="1454.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (145 samples, 1.94%)</title><rect x="718.6" y="1427.0" width="22.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="721.6" y="1438.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (145 samples, 1.94%)</title><rect x="718.6" y="1411.0" width="22.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.6" y="1422.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.04%)</title><rect x="718.6" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.6" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (115 samples, 1.54%)</title><rect x="719.1" y="1395.0" width="18.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="722.1" y="1406.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (9 samples, 0.12%)</title><rect x="725.1" y="1379.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="728.1" y="1390.0"></text>
</g>
<g>
<title>async_page_fault (6 samples, 0.08%)</title><rect x="725.6" y="1363.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.6" y="1374.0"></text>
</g>
<g>
<title>do_async_page_fault (6 samples, 0.08%)</title><rect x="725.6" y="1347.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.6" y="1358.0"></text>
</g>
<g>
<title>do_page_fault (6 samples, 0.08%)</title><rect x="725.6" y="1331.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.6" y="1342.0"></text>
</g>
<g>
<title>__do_page_fault (6 samples, 0.08%)</title><rect x="725.6" y="1315.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.6" y="1326.0"></text>
</g>
<g>
<title>handle_mm_fault (4 samples, 0.05%)</title><rect x="725.9" y="1299.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="728.9" y="1310.0"></text>
</g>
<g>
<title>__handle_mm_fault (4 samples, 0.05%)</title><rect x="725.9" y="1283.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.9" y="1294.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="725.9" y="1267.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.9" y="1278.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="725.9" y="1251.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.9" y="1262.0"></text>
</g>
<g>
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="725.9" y="1235.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="728.9" y="1246.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="726.2" y="1267.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="729.2" y="1278.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (66 samples, 0.88%)</title><rect x="726.5" y="1379.0" width="10.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="729.5" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::do_oop_partial_array(oopDesc**) (2 samples, 0.03%)</title><rect x="731.6" y="1363.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="734.6" y="1374.0"></text>
</g>
<g>
<title>async_page_fault (5 samples, 0.07%)</title><rect x="731.9" y="1363.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.9" y="1374.0"></text>
</g>
<g>
<title>do_async_page_fault (5 samples, 0.07%)</title><rect x="731.9" y="1347.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.9" y="1358.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.07%)</title><rect x="731.9" y="1331.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.9" y="1342.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.07%)</title><rect x="731.9" y="1315.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.9" y="1326.0"></text>
</g>
<g>
<title>handle_mm_fault (5 samples, 0.07%)</title><rect x="731.9" y="1299.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="734.9" y="1310.0"></text>
</g>
<g>
<title>__handle_mm_fault (5 samples, 0.07%)</title><rect x="731.9" y="1283.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.9" y="1294.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (4 samples, 0.05%)</title><rect x="732.0" y="1267.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.0" y="1278.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (25 samples, 0.33%)</title><rect x="732.7" y="1363.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="735.7" y="1374.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="736.6" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="739.6" y="1374.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="736.9" y="1379.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="739.9" y="1390.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (27 samples, 0.36%)</title><rect x="737.2" y="1395.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="740.2" y="1406.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (26 samples, 0.35%)</title><rect x="737.2" y="1379.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.2" y="1390.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (12 samples, 0.16%)</title><rect x="738.5" y="1363.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.5" y="1374.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (10 samples, 0.13%)</title><rect x="738.8" y="1347.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="741.8" y="1358.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="740.6" y="1363.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="743.6" y="1374.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="741.0" y="1363.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="744.0" y="1374.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (59 samples, 0.79%)</title><rect x="741.5" y="1443.0" width="9.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="744.5" y="1454.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (59 samples, 0.79%)</title><rect x="741.5" y="1427.0" width="9.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="744.5" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (56 samples, 0.75%)</title><rect x="741.5" y="1411.0" width="8.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="744.5" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (4 samples, 0.05%)</title><rect x="744.2" y="1395.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="747.2" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (34 samples, 0.46%)</title><rect x="744.8" y="1395.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="747.8" y="1406.0"></text>
</g>
<g>
<title>async_page_fault (3 samples, 0.04%)</title><rect x="747.5" y="1379.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.5" y="1390.0"></text>
</g>
<g>
<title>do_async_page_fault (3 samples, 0.04%)</title><rect x="747.5" y="1363.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="750.5" y="1374.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.04%)</title><rect x="747.5" y="1347.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="750.5" y="1358.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.04%)</title><rect x="747.5" y="1331.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.5" y="1342.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="747.5" y="1315.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.5" y="1326.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.04%)</title><rect x="747.5" y="1299.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.5" y="1310.0"></text>
</g>
<g>
<title>alloc_pages_vma (3 samples, 0.04%)</title><rect x="747.5" y="1283.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.5" y="1294.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.04%)</title><rect x="747.5" y="1267.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.5" y="1278.0"></text>
</g>
<g>
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="747.5" y="1251.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.5" y="1262.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.16%)</title><rect x="748.2" y="1379.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="751.2" y="1390.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (3 samples, 0.04%)</title><rect x="750.4" y="1411.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="753.4" y="1422.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.04%)</title><rect x="750.4" y="1395.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="753.4" y="1406.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (65 samples, 0.87%)</title><rect x="750.8" y="1475.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="753.8" y="1486.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (65 samples, 0.87%)</title><rect x="750.8" y="1459.0" width="10.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="753.8" y="1470.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (65 samples, 0.87%)</title><rect x="750.8" y="1443.0" width="10.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="753.8" y="1454.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (65 samples, 0.87%)</title><rect x="750.8" y="1427.0" width="10.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="753.8" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (14 samples, 0.19%)</title><rect x="751.2" y="1411.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="754.2" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="751.5" y="1395.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="754.5" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.13%)</title><rect x="751.8" y="1395.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.8" y="1406.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="752.7" y="1379.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="755.7" y="1390.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (3 samples, 0.04%)</title><rect x="753.4" y="1411.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="756.4" y="1422.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (42 samples, 0.56%)</title><rect x="753.8" y="1411.0" width="6.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="756.8" y="1422.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (6 samples, 0.08%)</title><rect x="754.6" y="1395.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="757.6" y="1406.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.03%)</title><rect x="755.3" y="1379.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="758.3" y="1390.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.05%)</title><rect x="756.1" y="1395.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="759.1" y="1406.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.05%)</title><rect x="756.7" y="1395.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="759.7" y="1406.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (18 samples, 0.24%)</title><rect x="757.5" y="1395.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="760.5" y="1406.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (11 samples, 0.15%)</title><rect x="758.6" y="1379.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="761.6" y="1390.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.04%)</title><rect x="760.6" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="763.6" y="1422.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (36 samples, 0.48%)</title><rect x="761.1" y="1475.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="764.1" y="1486.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (34 samples, 0.46%)</title><rect x="761.3" y="1459.0" width="5.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="764.3" y="1470.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (7 samples, 0.09%)</title><rect x="761.3" y="1443.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="764.3" y="1454.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (7 samples, 0.09%)</title><rect x="761.3" y="1427.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.3" y="1438.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (7 samples, 0.09%)</title><rect x="761.3" y="1411.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="764.3" y="1422.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)1&gt;::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="761.4" y="1395.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.4" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.05%)</title><rect x="761.7" y="1395.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="764.7" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="762.1" y="1379.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="765.1" y="1390.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (27 samples, 0.36%)</title><rect x="762.4" y="1443.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="765.4" y="1454.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (27 samples, 0.36%)</title><rect x="762.4" y="1427.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="765.4" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.04%)</title><rect x="762.5" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="765.5" y="1422.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (8 samples, 0.11%)</title><rect x="763.0" y="1411.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="766.0" y="1422.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.11%)</title><rect x="763.0" y="1395.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="766.0" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.04%)</title><rect x="763.8" y="1379.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="766.8" y="1390.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="763.8" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="766.8" y="1374.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (14 samples, 0.19%)</title><rect x="764.3" y="1411.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.3" y="1422.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (14 samples, 0.19%)</title><rect x="764.3" y="1395.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="767.3" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (14 samples, 0.19%)</title><rect x="764.3" y="1379.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="767.3" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.13%)</title><rect x="764.9" y="1363.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="767.9" y="1374.0"></text>
</g>
<g>
<title>async_page_fault (2 samples, 0.03%)</title><rect x="765.2" y="1347.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.2" y="1358.0"></text>
</g>
<g>
<title>do_async_page_fault (2 samples, 0.03%)</title><rect x="765.2" y="1331.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.2" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="765.2" y="1315.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="768.2" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="765.2" y="1299.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="768.2" y="1310.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="765.2" y="1283.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="768.2" y="1294.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="765.2" y="1267.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.2" y="1278.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="765.2" y="1251.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.2" y="1262.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="765.5" y="1347.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="768.5" y="1358.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="766.8" y="1491.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="769.8" y="1502.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (3 samples, 0.04%)</title><rect x="767.1" y="1491.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="770.1" y="1502.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (3 samples, 0.04%)</title><rect x="767.1" y="1475.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="770.1" y="1486.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="767.1" y="1459.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="770.1" y="1470.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.04%)</title><rect x="767.7" y="1491.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="770.7" y="1502.0"></text>
</g>
<g>
<title>InlineCacheBuffer::update_inline_caches() (2 samples, 0.03%)</title><rect x="767.7" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="770.7" y="1486.0"></text>
</g>
<g>
<title>StubQueue::remove_all() (2 samples, 0.03%)</title><rect x="767.7" y="1459.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="770.7" y="1470.0"></text>
</g>
<g>
<title>ICStubInterface::finalize(Stub*) (2 samples, 0.03%)</title><rect x="767.7" y="1443.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="770.7" y="1454.0"></text>
</g>
<g>
<title>JavaThread::run() (2,643 samples, 35.40%)</title><rect x="768.2" y="1507.0" width="417.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="771.2" y="1518.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2,643 samples, 35.40%)</title><rect x="768.2" y="1491.0" width="417.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="771.2" y="1502.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2,606 samples, 34.90%)</title><rect x="768.2" y="1475.0" width="411.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="771.2" y="1486.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2,592 samples, 34.71%)</title><rect x="768.4" y="1459.0" width="409.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="771.4" y="1470.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2,131 samples, 28.54%)</title><rect x="768.4" y="1443.0" width="336.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="771.4" y="1454.0">C2Compiler::compile_method(ciEnv*, ciMethod*, ..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="768.4" y="1427.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="771.4" y="1438.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2,128 samples, 28.50%)</title><rect x="768.7" y="1427.0" width="336.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="771.7" y="1438.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (5 samples, 0.07%)</title><rect x="768.7" y="1411.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="771.7" y="1422.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (5 samples, 0.07%)</title><rect x="768.7" y="1395.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="771.7" y="1406.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (5 samples, 0.07%)</title><rect x="768.7" y="1379.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="771.7" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.07%)</title><rect x="768.7" y="1363.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="771.7" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.07%)</title><rect x="768.7" y="1347.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="771.7" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.07%)</title><rect x="768.7" y="1331.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="771.7" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.07%)</title><rect x="768.7" y="1315.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="771.7" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.07%)</title><rect x="768.7" y="1299.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="771.7" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.05%)</title><rect x="768.9" y="1283.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="771.9" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.05%)</title><rect x="768.9" y="1267.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.9" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="768.9" y="1251.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="771.9" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="768.9" y="1235.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="771.9" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="769.0" y="1219.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="772.0" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="769.0" y="1203.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="772.0" y="1214.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="769.0" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="772.0" y="1198.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="769.0" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="772.0" y="1182.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1,281 samples, 17.16%)</title><rect x="769.5" y="1411.0" width="202.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="772.5" y="1422.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (58 samples, 0.78%)</title><rect x="769.5" y="1395.0" width="9.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="772.5" y="1406.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="769.8" y="1379.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="772.8" y="1390.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (30 samples, 0.40%)</title><rect x="770.1" y="1379.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="773.1" y="1390.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (12 samples, 0.16%)</title><rect x="772.6" y="1363.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="775.6" y="1374.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (6 samples, 0.08%)</title><rect x="773.6" y="1347.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="776.6" y="1358.0"></text>
</g>
<g>
<title>Type::hashcons() (2 samples, 0.03%)</title><rect x="774.2" y="1331.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.2" y="1342.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (22 samples, 0.29%)</title><rect x="774.9" y="1379.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="777.9" y="1390.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (2 samples, 0.03%)</title><rect x="775.0" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="778.0" y="1374.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (2 samples, 0.03%)</title><rect x="775.0" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="778.0" y="1358.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (15 samples, 0.20%)</title><rect x="775.5" y="1363.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="778.5" y="1374.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (6 samples, 0.08%)</title><rect x="776.6" y="1347.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="779.6" y="1358.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (2 samples, 0.03%)</title><rect x="777.9" y="1363.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="780.9" y="1374.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (38 samples, 0.51%)</title><rect x="778.7" y="1395.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="781.7" y="1406.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (13 samples, 0.17%)</title><rect x="779.9" y="1379.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="782.9" y="1390.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (3 samples, 0.04%)</title><rect x="780.2" y="1363.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="783.2" y="1374.0"></text>
</g>
<g>
<title>Location::write_on(DebugInfoWriteStream*) (2 samples, 0.03%)</title><rect x="780.2" y="1347.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="783.2" y="1358.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (5 samples, 0.07%)</title><rect x="780.7" y="1363.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="783.7" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (3 samples, 0.04%)</title><rect x="781.0" y="1347.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="784.0" y="1358.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (6 samples, 0.08%)</title><rect x="782.8" y="1379.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="785.8" y="1390.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (5 samples, 0.07%)</title><rect x="782.9" y="1363.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="785.9" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.03%)</title><rect x="783.4" y="1347.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="786.4" y="1358.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (2 samples, 0.03%)</title><rect x="784.7" y="1395.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="787.7" y="1406.0"></text>
</g>
<g>
<title>Matcher::match() (111 samples, 1.49%)</title><rect x="785.1" y="1395.0" width="17.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="788.1" y="1406.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.04%)</title><rect x="785.1" y="1379.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="788.1" y="1390.0"></text>
</g>
<g>
<title>ConLNode::Opcode() const (2 samples, 0.03%)</title><rect x="785.8" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="788.8" y="1390.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (3 samples, 0.04%)</title><rect x="786.4" y="1379.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="789.4" y="1390.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (3 samples, 0.04%)</title><rect x="786.4" y="1363.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="789.4" y="1374.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (14 samples, 0.19%)</title><rect x="786.9" y="1379.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="789.9" y="1390.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (84 samples, 1.12%)</title><rect x="789.2" y="1379.0" width="13.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="792.2" y="1390.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="789.9" y="1363.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="792.9" y="1374.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (22 samples, 0.29%)</title><rect x="790.3" y="1363.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="793.3" y="1374.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (6 samples, 0.08%)</title><rect x="793.8" y="1363.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="796.8" y="1374.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.07%)</title><rect x="794.0" y="1347.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="797.0" y="1358.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="794.0" y="1331.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="797.0" y="1342.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="794.0" y="1315.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="797.0" y="1326.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="794.0" y="1299.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="797.0" y="1310.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.03%)</title><rect x="794.0" y="1283.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="797.0" y="1294.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (2 samples, 0.03%)</title><rect x="794.5" y="1331.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="797.5" y="1342.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (43 samples, 0.58%)</title><rect x="794.8" y="1363.0" width="6.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="797.8" y="1374.0"></text>
</g>
<g>
<title>MachNode::Expand(State*, Node_List&amp;, Node*) (2 samples, 0.03%)</title><rect x="796.2" y="1347.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.2" y="1358.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (22 samples, 0.29%)</title><rect x="796.5" y="1347.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="799.5" y="1358.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (11 samples, 0.15%)</title><rect x="797.0" y="1331.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.0" y="1342.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.05%)</title><rect x="797.6" y="1315.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="800.6" y="1326.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.03%)</title><rect x="798.4" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="801.4" y="1326.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (5 samples, 0.07%)</title><rect x="798.7" y="1331.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="801.7" y="1342.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (9 samples, 0.12%)</title><rect x="800.0" y="1347.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="803.0" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (3 samples, 0.04%)</title><rect x="800.0" y="1331.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.0" y="1342.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (3 samples, 0.04%)</title><rect x="800.6" y="1331.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="803.6" y="1342.0"></text>
</g>
<g>
<title>Node::clone() const (3 samples, 0.04%)</title><rect x="801.6" y="1363.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="804.6" y="1374.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (4 samples, 0.05%)</title><rect x="802.7" y="1395.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.7" y="1406.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.03%)</title><rect x="802.7" y="1379.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="805.7" y="1390.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (2 samples, 0.03%)</title><rect x="803.0" y="1379.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.0" y="1390.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (2 samples, 0.03%)</title><rect x="803.0" y="1363.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="806.0" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (7 samples, 0.09%)</title><rect x="803.3" y="1395.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (7 samples, 0.09%)</title><rect x="803.3" y="1379.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.3" y="1390.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.03%)</title><rect x="803.9" y="1363.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="806.9" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (146 samples, 1.96%)</title><rect x="804.4" y="1395.0" width="23.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="807.4" y="1406.0">P..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (2 samples, 0.03%)</title><rect x="804.4" y="1379.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="807.4" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (2 samples, 0.03%)</title><rect x="804.4" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="807.4" y="1374.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (2 samples, 0.03%)</title><rect x="804.4" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="807.4" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (142 samples, 1.90%)</title><rect x="804.7" y="1379.0" width="22.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="807.7" y="1390.0">P..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.09%)</title><rect x="804.9" y="1363.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="807.9" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (4 samples, 0.05%)</title><rect x="806.3" y="1363.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="809.3" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (6 samples, 0.08%)</title><rect x="806.9" y="1363.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="809.9" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (31 samples, 0.42%)</title><rect x="807.9" y="1363.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="810.9" y="1374.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (12 samples, 0.16%)</title><rect x="808.5" y="1347.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="811.5" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (3 samples, 0.04%)</title><rect x="810.4" y="1347.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="813.4" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (7 samples, 0.09%)</title><rect x="810.9" y="1347.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="813.9" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (4 samples, 0.05%)</title><rect x="812.0" y="1347.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="815.0" y="1358.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (2 samples, 0.03%)</title><rect x="812.3" y="1331.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="815.3" y="1342.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (28 samples, 0.37%)</title><rect x="812.8" y="1363.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="815.8" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::needed_for_next_call(Block*, Node*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="815.0" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="818.0" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (8 samples, 0.11%)</title><rect x="815.3" y="1347.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="818.3" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (3 samples, 0.04%)</title><rect x="816.6" y="1347.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="819.6" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (6 samples, 0.08%)</title><rect x="817.2" y="1363.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="820.2" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (23 samples, 0.31%)</title><rect x="818.2" y="1363.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="821.2" y="1374.0"></text>
</g>
<g>
<title>RegMask::Size() const (10 samples, 0.13%)</title><rect x="819.3" y="1347.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="822.3" y="1358.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (3 samples, 0.04%)</title><rect x="821.8" y="1363.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="824.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (5 samples, 0.07%)</title><rect x="822.3" y="1363.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="825.3" y="1374.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (4 samples, 0.05%)</title><rect x="822.4" y="1347.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="825.4" y="1358.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (23 samples, 0.31%)</title><rect x="823.1" y="1363.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="826.1" y="1374.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (11 samples, 0.15%)</title><rect x="824.8" y="1347.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="827.8" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="826.1" y="1331.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="829.1" y="1342.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (909 samples, 12.17%)</title><rect x="827.6" y="1395.0" width="143.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="830.6" y="1406.0">PhaseChaitin::Regi..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (9 samples, 0.12%)</title><rect x="828.0" y="1379.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="831.0" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (4 samples, 0.05%)</title><rect x="830.0" y="1379.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="833.0" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="830.6" y="1379.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="833.6" y="1390.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (3 samples, 0.04%)</title><rect x="831.1" y="1379.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.1" y="1390.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (3 samples, 0.04%)</title><rect x="831.7" y="1379.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="834.7" y="1390.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="832.2" y="1379.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.2" y="1390.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.03%)</title><rect x="832.9" y="1379.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="835.9" y="1390.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (22 samples, 0.29%)</title><rect x="833.2" y="1379.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="836.2" y="1390.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="836.3" y="1363.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.3" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="836.3" y="1347.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.3" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="836.3" y="1331.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.3" y="1342.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (33 samples, 0.44%)</title><rect x="836.6" y="1379.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="839.6" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.05%)</title><rect x="838.5" y="1363.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="841.5" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (12 samples, 0.16%)</title><rect x="839.3" y="1363.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="842.3" y="1374.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (3 samples, 0.04%)</title><rect x="839.8" y="1347.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="842.8" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.07%)</title><rect x="840.3" y="1347.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="843.3" y="1358.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (3 samples, 0.04%)</title><rect x="841.2" y="1363.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.2" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (32 samples, 0.43%)</title><rect x="841.9" y="1379.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="844.9" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (3 samples, 0.04%)</title><rect x="843.3" y="1363.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.3" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.07%)</title><rect x="843.8" y="1363.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="846.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (15 samples, 0.20%)</title><rect x="844.5" y="1363.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="847.5" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.07%)</title><rect x="846.1" y="1347.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.1" y="1358.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (101 samples, 1.35%)</title><rect x="846.9" y="1379.0" width="16.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="849.9" y="1390.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (5 samples, 0.07%)</title><rect x="858.5" y="1363.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="861.5" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.03%)</title><rect x="859.9" y="1363.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="862.9" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (6 samples, 0.08%)</title><rect x="860.2" y="1363.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="863.2" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::clone_projs(Block*, unsigned int, Node*, Node*, unsigned int&amp;) (4 samples, 0.05%)</title><rect x="860.2" y="1347.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="863.2" y="1358.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="860.5" y="1331.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="863.5" y="1342.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="860.5" y="1315.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.5" y="1326.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="860.5" y="1299.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="863.5" y="1310.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="860.5" y="1283.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.5" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (5 samples, 0.07%)</title><rect x="861.1" y="1363.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="864.1" y="1374.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="861.9" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="864.9" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (210 samples, 2.81%)</title><rect x="862.9" y="1379.0" width="33.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="865.9" y="1390.0">Ph..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.03%)</title><rect x="868.6" y="1363.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="871.6" y="1374.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (6 samples, 0.08%)</title><rect x="868.9" y="1363.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="871.9" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.08%)</title><rect x="869.8" y="1363.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.8" y="1374.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (2 samples, 0.03%)</title><rect x="870.9" y="1363.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="873.9" y="1374.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="871.3" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.3" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (29 samples, 0.39%)</title><rect x="871.6" y="1363.0" width="4.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="874.6" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (74 samples, 0.99%)</title><rect x="876.3" y="1363.0" width="11.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="879.3" y="1374.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="884.7" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="887.7" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (18 samples, 0.24%)</title><rect x="885.0" y="1347.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.0" y="1358.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (37 samples, 0.50%)</title><rect x="888.0" y="1363.0" width="5.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="891.0" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="889.9" y="1347.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="892.9" y="1358.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.05%)</title><rect x="890.4" y="1347.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.4" y="1358.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (18 samples, 0.24%)</title><rect x="891.0" y="1347.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="894.0" y="1358.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (11 samples, 0.15%)</title><rect x="894.0" y="1363.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="897.0" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (21 samples, 0.28%)</title><rect x="896.1" y="1379.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="899.1" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="897.0" y="1363.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="900.0" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (13 samples, 0.17%)</title><rect x="897.3" y="1363.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="900.3" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="898.9" y="1347.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.9" y="1358.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (2 samples, 0.03%)</title><rect x="899.5" y="1379.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="902.5" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (5 samples, 0.07%)</title><rect x="899.9" y="1379.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="902.9" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (2 samples, 0.03%)</title><rect x="900.6" y="1379.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="903.6" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (96 samples, 1.29%)</title><rect x="901.0" y="1379.0" width="15.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="904.0" y="1390.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (2 samples, 0.03%)</title><rect x="907.4" y="1363.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="910.4" y="1374.0"></text>
</g>
<g>
<title>RegMask::Size() const (33 samples, 0.44%)</title><rect x="907.8" y="1363.0" width="5.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.8" y="1374.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (3 samples, 0.04%)</title><rect x="913.0" y="1363.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="916.0" y="1374.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.03%)</title><rect x="913.4" y="1363.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.4" y="1374.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (4 samples, 0.05%)</title><rect x="913.8" y="1363.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="916.8" y="1374.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (5 samples, 0.07%)</title><rect x="914.4" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="917.4" y="1374.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="915.3" y="1363.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="918.3" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (27 samples, 0.36%)</title><rect x="916.1" y="1379.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="919.1" y="1390.0"></text>
</g>
<g>
<title>RegMask::Size() const (11 samples, 0.15%)</title><rect x="917.7" y="1363.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="920.7" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (17 samples, 0.23%)</title><rect x="920.4" y="1379.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="923.4" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (125 samples, 1.67%)</title><rect x="923.1" y="1379.0" width="19.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="926.1" y="1390.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (3 samples, 0.04%)</title><rect x="932.7" y="1363.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="935.7" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (46 samples, 0.62%)</title><rect x="933.4" y="1363.0" width="7.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="936.4" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (3 samples, 0.04%)</title><rect x="940.2" y="1347.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="943.2" y="1358.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (12 samples, 0.16%)</title><rect x="940.9" y="1363.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="943.9" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (7 samples, 0.09%)</title><rect x="942.8" y="1379.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.8" y="1390.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (36 samples, 0.48%)</title><rect x="943.9" y="1379.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.9" y="1390.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (7 samples, 0.09%)</title><rect x="943.9" y="1363.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="946.9" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (4 samples, 0.05%)</title><rect x="945.1" y="1363.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="948.1" y="1374.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (25 samples, 0.33%)</title><rect x="945.7" y="1363.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="948.7" y="1374.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (7 samples, 0.09%)</title><rect x="945.8" y="1347.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="948.8" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.03%)</title><rect x="947.1" y="1347.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="950.1" y="1358.0"></text>
</g>
<g>
<title>Block::has_uncommon_code() const (2 samples, 0.03%)</title><rect x="947.1" y="1331.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="950.1" y="1342.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (10 samples, 0.13%)</title><rect x="947.6" y="1347.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="950.6" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="948.8" y="1331.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="951.8" y="1342.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (2 samples, 0.03%)</title><rect x="949.2" y="1347.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="952.2" y="1358.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (18 samples, 0.24%)</title><rect x="949.8" y="1379.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="952.8" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.11%)</title><rect x="951.4" y="1363.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="954.4" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (24 samples, 0.32%)</title><rect x="952.6" y="1379.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="955.6" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="953.9" y="1363.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="956.9" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (14 samples, 0.19%)</title><rect x="954.2" y="1363.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="957.2" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (8 samples, 0.11%)</title><rect x="956.4" y="1379.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="959.4" y="1390.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.07%)</title><rect x="956.9" y="1363.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="959.9" y="1374.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (74 samples, 0.99%)</title><rect x="957.7" y="1379.0" width="11.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="960.7" y="1390.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (27 samples, 0.36%)</title><rect x="964.7" y="1363.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="967.7" y="1374.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.07%)</title><rect x="966.7" y="1347.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="969.7" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.12%)</title><rect x="967.5" y="1347.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="970.5" y="1358.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="969.1" y="1363.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="972.1" y="1374.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="969.4" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="972.4" y="1390.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (4 samples, 0.05%)</title><rect x="970.3" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.3" y="1390.0"></text>
</g>
<g>
<title>Compile::Optimize() (593 samples, 7.94%)</title><rect x="971.9" y="1411.0" width="93.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="974.9" y="1422.0">Compile::Op..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (8 samples, 0.11%)</title><rect x="972.2" y="1395.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.2" y="1406.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (8 samples, 0.11%)</title><rect x="972.2" y="1379.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="975.2" y="1390.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (3 samples, 0.04%)</title><rect x="972.9" y="1363.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="975.9" y="1374.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (5 samples, 0.07%)</title><rect x="973.5" y="1395.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="976.5" y="1406.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (2 samples, 0.03%)</title><rect x="973.5" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="976.5" y="1390.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="973.5" y="1363.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="976.5" y="1374.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (11 samples, 0.15%)</title><rect x="974.4" y="1395.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="977.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.05%)</title><rect x="975.1" y="1379.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="978.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.05%)</title><rect x="975.1" y="1363.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (2 samples, 0.03%)</title><rect x="975.7" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="978.7" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (18 samples, 0.24%)</title><rect x="976.2" y="1395.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.2" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (17 samples, 0.23%)</title><rect x="976.2" y="1379.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="979.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.171] (2 samples, 0.03%)</title><rect x="977.1" y="1363.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="980.1" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (2 samples, 0.03%)</title><rect x="977.1" y="1347.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="980.1" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="977.6" y="1363.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="980.6" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (2 samples, 0.03%)</title><rect x="977.6" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="980.6" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (2 samples, 0.03%)</title><rect x="978.1" y="1363.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.1" y="1374.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (2 samples, 0.03%)</title><rect x="978.1" y="1347.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="981.1" y="1358.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.03%)</title><rect x="978.1" y="1331.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="981.1" y="1342.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.03%)</title><rect x="978.1" y="1315.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="981.1" y="1326.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.03%)</title><rect x="978.1" y="1299.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="981.1" y="1310.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (2 samples, 0.03%)</title><rect x="978.1" y="1283.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="981.1" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="978.4" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="981.4" y="1374.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (17 samples, 0.23%)</title><rect x="979.3" y="1395.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="982.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (6 samples, 0.08%)</title><rect x="982.0" y="1395.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.0" y="1406.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (6 samples, 0.08%)</title><rect x="982.0" y="1379.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="985.0" y="1390.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (3 samples, 0.04%)</title><rect x="982.4" y="1363.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="985.4" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (393 samples, 5.26%)</title><rect x="983.0" y="1395.0" width="62.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="986.0" y="1406.0">PhaseI..</text>
</g>
<g>
<title>CProjNode::is_CFG() const (2 samples, 0.03%)</title><rect x="983.1" y="1379.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="986.1" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.05%)</title><rect x="983.6" y="1379.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.6" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="983.6" y="1363.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="986.6" y="1374.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="983.8" y="1347.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="986.8" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (5 samples, 0.07%)</title><rect x="984.2" y="1379.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="987.2" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (3 samples, 0.04%)</title><rect x="984.2" y="1363.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="987.2" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (2 samples, 0.03%)</title><rect x="984.4" y="1347.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.4" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (2 samples, 0.03%)</title><rect x="984.7" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="987.7" y="1374.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (2 samples, 0.03%)</title><rect x="984.7" y="1347.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.7" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::compute_profile_trip_cnt_helper(Node*) (2 samples, 0.03%)</title><rect x="984.7" y="1331.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="987.7" y="1342.0"></text>
</g>
<g>
<title>Node::is_CFG() const (5 samples, 0.07%)</title><rect x="985.0" y="1379.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.0" y="1390.0"></text>
</g>
<g>
<title>Node::pinned() const (7 samples, 0.09%)</title><rect x="985.8" y="1379.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (37 samples, 0.50%)</title><rect x="987.2" y="1379.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.2" y="1390.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (11 samples, 0.15%)</title><rect x="991.2" y="1363.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="994.2" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (23 samples, 0.31%)</title><rect x="993.1" y="1379.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="996.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.05%)</title><rect x="996.1" y="1363.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="999.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (183 samples, 2.45%)</title><rect x="996.7" y="1379.0" width="29.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="999.7" y="1390.0">Ph..</text>
</g>
<g>
<title>Node_List::push(Node*) (2 samples, 0.03%)</title><rect x="1002.4" y="1363.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1005.4" y="1374.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (2 samples, 0.03%)</title><rect x="1002.4" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.4" y="1358.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1002.4" y="1331.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1005.4" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (140 samples, 1.87%)</title><rect x="1002.7" y="1363.0" width="22.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1005.7" y="1374.0">P..</text>
</g>
<g>
<title>MergeMemNode::Opcode() const (2 samples, 0.03%)</title><rect x="1004.5" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1007.5" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.04%)</title><rect x="1005.1" y="1347.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1008.1" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (120 samples, 1.61%)</title><rect x="1005.6" y="1347.0" width="18.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.6" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (12 samples, 0.16%)</title><rect x="1008.0" y="1331.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.0" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (9 samples, 0.12%)</title><rect x="1008.3" y="1315.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.3" y="1326.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (3 samples, 0.04%)</title><rect x="1009.2" y="1299.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.2" y="1310.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1009.8" y="1331.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.8" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (90 samples, 1.21%)</title><rect x="1010.2" y="1331.0" width="14.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1013.2" y="1342.0"></text>
</g>
<g>
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1024.1" y="1315.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.1" y="1326.0"></text>
</g>
<g>
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1024.1" y="1299.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1027.1" y="1310.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="1024.1" y="1283.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1027.1" y="1294.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1024.1" y="1267.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.1" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1024.5" y="1347.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1027.5" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1025.0" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1028.0" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.03%)</title><rect x="1025.7" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1028.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (29 samples, 0.39%)</title><rect x="1026.0" y="1379.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.0" y="1390.0"></text>
</g>
<g>
<title>Node::is_CFG() const (2 samples, 0.03%)</title><rect x="1028.7" y="1363.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1031.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (7 samples, 0.09%)</title><rect x="1029.0" y="1363.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1032.0" y="1374.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (2 samples, 0.03%)</title><rect x="1030.1" y="1363.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1033.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (45 samples, 0.60%)</title><rect x="1030.7" y="1379.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1033.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (4 samples, 0.05%)</title><rect x="1032.8" y="1363.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_region(Node*, Node*) (2 samples, 0.03%)</title><rect x="1032.9" y="1347.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1035.9" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (7 samples, 0.09%)</title><rect x="1033.6" y="1363.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1036.6" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.03%)</title><rect x="1034.3" y="1347.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1037.3" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (18 samples, 0.24%)</title><rect x="1034.7" y="1363.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1037.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::conditional_move(Node*) (2 samples, 0.03%)</title><rect x="1035.1" y="1347.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.1" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (4 samples, 0.05%)</title><rect x="1035.6" y="1347.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.6" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (3 samples, 0.04%)</title><rect x="1036.2" y="1347.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1039.2" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.03%)</title><rect x="1036.4" y="1331.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.4" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.03%)</title><rect x="1036.7" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1039.7" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1037.2" y="1347.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1040.2" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (38 samples, 0.51%)</title><rect x="1037.8" y="1379.0" width="6.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1040.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (32 samples, 0.43%)</title><rect x="1038.5" y="1363.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.5" y="1374.0"></text>
</g>
<g>
<title>AddNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1039.4" y="1347.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1042.4" y="1358.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1041.0" y="1347.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.0" y="1358.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1041.0" y="1331.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.0" y="1342.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (2 samples, 0.03%)</title><rect x="1041.0" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.0" y="1326.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (2 samples, 0.03%)</title><rect x="1041.0" y="1299.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1044.0" y="1310.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1041.6" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.6" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.03%)</title><rect x="1041.9" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1044.9" y="1358.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (5 samples, 0.07%)</title><rect x="1042.7" y="1347.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1045.7" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (5 samples, 0.07%)</title><rect x="1042.7" y="1331.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1045.7" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1042.7" y="1315.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1045.7" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1042.7" y="1299.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1045.7" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1042.7" y="1283.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1045.7" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1042.7" y="1267.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1045.7" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1042.7" y="1251.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1045.7" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1042.7" y="1235.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1045.7" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1042.7" y="1219.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1045.7" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1042.7" y="1203.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.7" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1042.7" y="1187.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.7" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1042.7" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1045.7" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1042.7" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.7" y="1166.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1042.7" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.7" y="1150.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1042.7" y="1123.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1045.7" y="1134.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (4 samples, 0.05%)</title><rect x="1044.0" y="1379.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1047.0" y="1390.0"></text>
</g>
<g>
<title>StartNode::pinned() const (2 samples, 0.03%)</title><rect x="1044.8" y="1379.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1047.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (4 samples, 0.05%)</title><rect x="1045.1" y="1395.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.03%)</title><rect x="1045.4" y="1379.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1048.4" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (90 samples, 1.21%)</title><rect x="1045.7" y="1395.0" width="14.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1048.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (79 samples, 1.06%)</title><rect x="1047.3" y="1379.0" width="12.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.3" y="1390.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (10 samples, 0.13%)</title><rect x="1048.2" y="1363.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.2" y="1374.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (6 samples, 0.08%)</title><rect x="1048.9" y="1347.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1051.9" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (4 samples, 0.05%)</title><rect x="1049.0" y="1331.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.0" y="1342.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.03%)</title><rect x="1049.4" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.4" y="1326.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1050.0" y="1363.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1053.0" y="1374.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.03%)</title><rect x="1050.1" y="1347.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1053.1" y="1358.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1050.1" y="1331.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1053.1" y="1342.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1050.1" y="1315.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.1" y="1326.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (9 samples, 0.12%)</title><rect x="1051.1" y="1363.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (5 samples, 0.07%)</title><rect x="1052.7" y="1363.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1053.1" y="1347.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.1" y="1358.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (4 samples, 0.05%)</title><rect x="1053.5" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.5" y="1374.0"></text>
</g>
<g>
<title>PhiNode::hash() const (2 samples, 0.03%)</title><rect x="1054.3" y="1363.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.3" y="1374.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (15 samples, 0.20%)</title><rect x="1054.7" y="1363.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1055.0" y="1347.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.0" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.05%)</title><rect x="1055.4" y="1347.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.4" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (4 samples, 0.05%)</title><rect x="1055.4" y="1331.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.4" y="1342.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (4 samples, 0.05%)</title><rect x="1055.4" y="1315.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1058.4" y="1326.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (3 samples, 0.04%)</title><rect x="1056.0" y="1347.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.0" y="1358.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (3 samples, 0.04%)</title><rect x="1056.6" y="1347.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1059.6" y="1358.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (14 samples, 0.19%)</title><rect x="1057.1" y="1363.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1060.1" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (14 samples, 0.19%)</title><rect x="1057.1" y="1347.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1060.1" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.19%)</title><rect x="1057.1" y="1331.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.1" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.19%)</title><rect x="1057.1" y="1315.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.1" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.19%)</title><rect x="1057.1" y="1299.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.1" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.17%)</title><rect x="1057.1" y="1283.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1060.1" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.17%)</title><rect x="1057.1" y="1267.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.1" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.15%)</title><rect x="1057.1" y="1251.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1060.1" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.12%)</title><rect x="1057.1" y="1235.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.1" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.12%)</title><rect x="1057.1" y="1219.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.1" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.11%)</title><rect x="1057.1" y="1203.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.1" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.11%)</title><rect x="1057.1" y="1187.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.1" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.09%)</title><rect x="1057.1" y="1171.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.1" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.08%)</title><rect x="1057.1" y="1155.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1060.1" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.08%)</title><rect x="1057.1" y="1139.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1060.1" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.08%)</title><rect x="1057.1" y="1123.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1060.1" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1057.1" y="1107.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.1" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1057.1" y="1091.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1060.1" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1057.1" y="1075.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1060.1" y="1086.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (3 samples, 0.04%)</title><rect x="1057.4" y="1075.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.4" y="1086.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1057.4" y="1059.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.4" y="1070.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1058.5" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.5" y="1246.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1058.5" y="1219.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.5" y="1230.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1058.8" y="1251.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1061.8" y="1262.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1058.8" y="1235.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.8" y="1246.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (27 samples, 0.36%)</title><rect x="1059.9" y="1395.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1062.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (21 samples, 0.28%)</title><rect x="1060.1" y="1379.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (18 samples, 0.24%)</title><rect x="1060.6" y="1363.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1063.6" y="1374.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1061.8" y="1347.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.8" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1062.2" y="1347.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1065.2" y="1358.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1062.6" y="1347.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.6" y="1358.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (5 samples, 0.07%)</title><rect x="1063.4" y="1379.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1066.4" y="1390.0"></text>
</g>
<g>
<title>PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1063.9" y="1363.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.9" y="1374.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.05%)</title><rect x="1064.2" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.2" y="1406.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.05%)</title><rect x="1064.2" y="1379.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1067.2" y="1390.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1064.2" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1067.2" y="1374.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1064.5" y="1363.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.5" y="1374.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (5 samples, 0.07%)</title><rect x="1065.6" y="1411.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1068.6" y="1422.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.03%)</title><rect x="1065.6" y="1395.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1068.6" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1065.6" y="1379.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.6" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1065.6" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1065.6" y="1347.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1068.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1065.6" y="1331.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1068.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1065.6" y="1315.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1068.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1065.6" y="1299.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1068.6" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1065.6" y="1283.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1068.6" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1065.6" y="1267.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1068.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1065.6" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1065.6" y="1235.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1068.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1065.6" y="1219.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1065.6" y="1203.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1068.6" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1065.6" y="1187.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1068.6" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1065.6" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1068.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1065.6" y="1155.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1065.6" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1065.6" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1065.6" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1068.6" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1065.6" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.6" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1065.6" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1065.6" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1065.6" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1068.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1065.6" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1068.6" y="1038.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1065.9" y="1395.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1068.9" y="1406.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (5 samples, 0.07%)</title><rect x="1066.4" y="1411.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1069.4" y="1422.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (5 samples, 0.07%)</title><rect x="1066.4" y="1395.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.4" y="1406.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (3 samples, 0.04%)</title><rect x="1066.4" y="1379.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1069.4" y="1390.0"></text>
</g>
<g>
<title>Dict::doubhash() (2 samples, 0.03%)</title><rect x="1066.4" y="1363.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.4" y="1374.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (2 samples, 0.03%)</title><rect x="1066.9" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1069.9" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (208 samples, 2.79%)</title><rect x="1067.4" y="1411.0" width="32.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.4" y="1422.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (208 samples, 2.79%)</title><rect x="1067.4" y="1395.0" width="32.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1070.4" y="1406.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (202 samples, 2.71%)</title><rect x="1067.7" y="1379.0" width="31.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.7" y="1390.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (202 samples, 2.71%)</title><rect x="1067.7" y="1363.0" width="31.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.7" y="1374.0">Pa..</text>
</g>
<g>
<title>Parse::do_exceptions() (3 samples, 0.04%)</title><rect x="1067.7" y="1347.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.7" y="1358.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (2 samples, 0.03%)</title><rect x="1067.8" y="1331.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.8" y="1342.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (2 samples, 0.03%)</title><rect x="1067.8" y="1315.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.8" y="1326.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (2 samples, 0.03%)</title><rect x="1067.8" y="1299.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.8" y="1310.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (2 samples, 0.03%)</title><rect x="1067.8" y="1283.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.8" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (198 samples, 2.65%)</title><rect x="1068.2" y="1347.0" width="31.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1071.2" y="1358.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (178 samples, 2.38%)</title><rect x="1068.5" y="1331.0" width="28.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1071.5" y="1342.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.05%)</title><rect x="1068.5" y="1315.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1071.5" y="1326.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="1068.5" y="1299.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1071.5" y="1310.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1069.6" y="1315.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.6" y="1326.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (2 samples, 0.03%)</title><rect x="1069.6" y="1299.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1072.6" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (134 samples, 1.79%)</title><rect x="1069.9" y="1315.0" width="21.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1072.9" y="1326.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (134 samples, 1.79%)</title><rect x="1069.9" y="1299.0" width="21.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.9" y="1310.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (129 samples, 1.73%)</title><rect x="1070.4" y="1283.0" width="20.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1073.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (128 samples, 1.71%)</title><rect x="1070.4" y="1267.0" width="20.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1073.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (127 samples, 1.70%)</title><rect x="1070.4" y="1251.0" width="20.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1073.4" y="1262.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (3 samples, 0.04%)</title><rect x="1070.8" y="1235.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.8" y="1246.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (2 samples, 0.03%)</title><rect x="1071.0" y="1219.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1074.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (110 samples, 1.47%)</title><rect x="1071.3" y="1235.0" width="17.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.3" y="1246.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.09%)</title><rect x="1071.3" y="1219.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.3" y="1230.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.09%)</title><rect x="1071.3" y="1203.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.3" y="1214.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1071.5" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.5" y="1198.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (2 samples, 0.03%)</title><rect x="1071.5" y="1171.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.5" y="1182.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1071.5" y="1155.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1074.5" y="1166.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (2 samples, 0.03%)</title><rect x="1071.5" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1074.5" y="1150.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.05%)</title><rect x="1071.8" y="1187.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.8" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.05%)</title><rect x="1071.8" y="1171.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1074.8" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.05%)</title><rect x="1071.8" y="1155.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.8" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.05%)</title><rect x="1071.8" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.8" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.05%)</title><rect x="1071.8" y="1123.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.8" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (4 samples, 0.05%)</title><rect x="1071.8" y="1107.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1074.8" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (3 samples, 0.04%)</title><rect x="1072.0" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.0" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1072.0" y="1075.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.0" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1072.0" y="1059.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.0" y="1070.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1072.0" y="1043.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1075.0" y="1054.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.03%)</title><rect x="1072.1" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1075.1" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (2 samples, 0.03%)</title><rect x="1072.1" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.1" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (2 samples, 0.03%)</title><rect x="1072.1" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1075.1" y="1006.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1072.6" y="1219.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.6" y="1230.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (3 samples, 0.04%)</title><rect x="1072.6" y="1203.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.6" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (84 samples, 1.12%)</title><rect x="1073.1" y="1219.0" width="13.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.1" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (84 samples, 1.12%)</title><rect x="1073.1" y="1203.0" width="13.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.1" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (80 samples, 1.07%)</title><rect x="1073.4" y="1187.0" width="12.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (80 samples, 1.07%)</title><rect x="1073.4" y="1171.0" width="12.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (80 samples, 1.07%)</title><rect x="1073.4" y="1155.0" width="12.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.4" y="1166.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (2 samples, 0.03%)</title><rect x="1073.7" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.7" y="1150.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (2 samples, 0.03%)</title><rect x="1073.7" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (63 samples, 0.84%)</title><rect x="1074.2" y="1139.0" width="9.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1077.2" y="1150.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1074.2" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1077.2" y="1134.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="1074.2" y="1107.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1077.2" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1074.2" y="1091.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1077.2" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1074.2" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.2" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1074.2" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1077.2" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1074.2" y="1043.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1077.2" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1074.2" y="1027.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.2" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1074.2" y="1011.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.2" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="1074.3" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.3" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1074.3" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1077.3" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1074.3" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1077.3" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1074.3" y="947.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.3" y="958.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (2 samples, 0.03%)</title><rect x="1074.8" y="1123.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1077.8" y="1134.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1074.8" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.8" y="1118.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1075.3" y="1123.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.3" y="1134.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (3 samples, 0.04%)</title><rect x="1075.3" y="1107.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1078.3" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (45 samples, 0.60%)</title><rect x="1075.7" y="1123.0" width="7.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.7" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (45 samples, 0.60%)</title><rect x="1075.7" y="1107.0" width="7.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (39 samples, 0.52%)</title><rect x="1076.2" y="1091.0" width="6.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (38 samples, 0.51%)</title><rect x="1076.2" y="1075.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.2" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (38 samples, 0.51%)</title><rect x="1076.2" y="1059.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1079.2" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (36 samples, 0.48%)</title><rect x="1076.2" y="1043.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.2" y="1054.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.05%)</title><rect x="1076.4" y="1027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.4" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1076.4" y="1011.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.4" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1076.5" y="995.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1079.5" y="1006.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (2 samples, 0.03%)</title><rect x="1077.2" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.2" y="1038.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (2 samples, 0.03%)</title><rect x="1077.2" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.2" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (26 samples, 0.35%)</title><rect x="1077.5" y="1027.0" width="4.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (26 samples, 0.35%)</title><rect x="1077.5" y="1011.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1080.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (24 samples, 0.32%)</title><rect x="1077.6" y="995.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.32%)</title><rect x="1077.6" y="979.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.32%)</title><rect x="1077.6" y="963.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.25%)</title><rect x="1077.6" y="947.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.6" y="958.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1077.6" y="931.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.6" y="942.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1077.6" y="915.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.6" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.20%)</title><rect x="1078.0" y="931.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.0" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.20%)</title><rect x="1078.0" y="915.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.19%)</title><rect x="1078.0" y="899.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.19%)</title><rect x="1078.0" y="883.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.19%)</title><rect x="1078.0" y="867.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1081.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.16%)</title><rect x="1078.0" y="851.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1081.0" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.11%)</title><rect x="1078.3" y="835.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.3" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.11%)</title><rect x="1078.3" y="819.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1078.4" y="803.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1081.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1078.4" y="787.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1078.4" y="771.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1081.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="1078.4" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1081.4" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1078.6" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.6" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1078.6" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1081.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1078.6" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1078.6" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1078.6" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1078.7" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1079.2" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="1080.6" y="947.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1080.8" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.8" y="942.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1080.8" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.8" y="926.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1080.8" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1083.8" y="910.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1080.8" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1083.8" y="894.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (2 samples, 0.03%)</title><rect x="1080.8" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1083.8" y="878.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (2 samples, 0.03%)</title><rect x="1081.1" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.1" y="958.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (2 samples, 0.03%)</title><rect x="1081.1" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1084.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1081.9" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.9" y="1054.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (2 samples, 0.03%)</title><rect x="1082.4" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.4" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.09%)</title><rect x="1082.9" y="1123.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1085.9" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1082.9" y="1107.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1085.9" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1082.9" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1082.9" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1082.9" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.9" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1082.9" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1085.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1082.9" y="1027.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1085.9" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1082.9" y="1011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1085.9" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1082.9" y="995.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1082.9" y="979.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1082.9" y="963.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1085.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1082.9" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1085.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1082.9" y="931.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.9" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1082.9" y="915.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.9" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1082.9" y="899.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1085.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1083.0" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1086.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1083.0" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1083.0" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1083.0" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.0" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1083.6" y="1107.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1086.6" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1083.6" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.6" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1083.6" y="1075.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1086.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1083.6" y="1059.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1086.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1083.6" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1086.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1083.6" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1083.6" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.6" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1083.6" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.6" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1083.6" y="979.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.07%)</title><rect x="1084.1" y="1139.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1087.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1084.1" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1087.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1084.4" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1085.1" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1088.1" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (12 samples, 0.16%)</title><rect x="1086.3" y="1219.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.3" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.09%)</title><rect x="1086.3" y="1203.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.3" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.09%)</title><rect x="1086.3" y="1187.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1086.3" y="1171.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1086.3" y="1155.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1089.3" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1086.3" y="1139.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.3" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="1086.3" y="1123.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.3" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.09%)</title><rect x="1086.3" y="1107.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.3" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.09%)</title><rect x="1086.3" y="1091.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1086.3" y="1075.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1086.3" y="1059.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1086.3" y="1043.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="1086.3" y="1027.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.3" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.09%)</title><rect x="1086.3" y="1011.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.09%)</title><rect x="1086.3" y="995.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1086.3" y="979.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1086.3" y="963.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1086.3" y="947.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.08%)</title><rect x="1086.3" y="931.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.3" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1086.3" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1086.3" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1086.3" y="883.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1089.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1086.3" y="867.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1086.3" y="851.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1086.3" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1086.3" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1086.3" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1086.5" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1086.5" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1086.5" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1086.5" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.5" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1087.0" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.0" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1087.0" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.0" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1087.0" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1087.0" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1087.0" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1087.0" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1087.0" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.0" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1087.0" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1087.0" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1087.0" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1087.0" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1087.0" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1087.0" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.0" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1087.4" y="1203.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.4" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1087.6" y="1187.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.6" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1087.6" y="1171.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1087.6" y="1155.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1090.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1087.6" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1090.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1087.6" y="1123.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1087.6" y="1107.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.6" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1087.6" y="1091.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.6" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1087.6" y="1075.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1087.6" y="1059.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1087.6" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1087.6" y="1027.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1087.6" y="1011.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.6" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1087.6" y="995.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.6" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1087.6" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1087.8" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1087.8" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1087.8" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1087.8" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.07%)</title><rect x="1088.9" y="1235.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1091.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (3 samples, 0.04%)</title><rect x="1088.9" y="1219.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (2 samples, 0.03%)</title><rect x="1089.8" y="1235.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1092.8" y="1246.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (2 samples, 0.03%)</title><rect x="1089.8" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1092.8" y="1230.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.03%)</title><rect x="1090.1" y="1235.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.1" y="1246.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (32 samples, 0.43%)</title><rect x="1091.1" y="1315.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.1" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.24%)</title><rect x="1091.2" y="1299.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.2" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.24%)</title><rect x="1091.2" y="1283.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.23%)</title><rect x="1091.2" y="1267.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.23%)</title><rect x="1091.2" y="1251.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1094.2" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.23%)</title><rect x="1091.2" y="1235.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.2" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.21%)</title><rect x="1091.2" y="1219.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.2" y="1230.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1091.2" y="1203.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1094.2" y="1214.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1091.2" y="1187.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1094.2" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.13%)</title><rect x="1091.5" y="1203.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.5" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.13%)</title><rect x="1091.5" y="1187.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.11%)</title><rect x="1091.7" y="1171.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.11%)</title><rect x="1091.7" y="1155.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.11%)</title><rect x="1091.7" y="1139.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1094.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.11%)</title><rect x="1091.7" y="1123.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.7" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1091.7" y="1107.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1094.7" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1091.7" y="1091.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1094.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1091.7" y="1075.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1091.7" y="1059.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1091.7" y="1043.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1091.7" y="1027.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1091.7" y="1011.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.7" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1091.7" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1091.7" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1094.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1091.7" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1091.7" y="947.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1091.7" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1094.7" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1091.7" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.7" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1091.7" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1091.7" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1094.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1091.7" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1094.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1091.7" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1091.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1094.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1092.2" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1095.2" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1092.5" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1095.5" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1092.5" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.5" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1092.5" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1092.5" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1092.5" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1095.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1092.5" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1092.5" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1095.5" y="1022.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1093.1" y="1203.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.1" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.1" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.1" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1093.1" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1093.1" y="1155.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.1" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1093.1" y="1139.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1093.1" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1093.1" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.1" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.1" y="1091.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1096.1" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1093.1" y="1075.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1093.1" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1093.1" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1093.1" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1093.1" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.1" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.1" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.1" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1093.1" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1096.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1093.1" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1093.1" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1096.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1093.1" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1096.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1093.1" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.1" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.1" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1093.1" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1093.1" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1093.1" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1093.1" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.1" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.4" y="1187.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1096.4" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1093.4" y="1171.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.4" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1093.4" y="1155.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1096.4" y="1166.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (12 samples, 0.16%)</title><rect x="1094.1" y="1299.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1097.1" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.15%)</title><rect x="1094.1" y="1283.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1097.1" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.15%)</title><rect x="1094.1" y="1267.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.15%)</title><rect x="1094.1" y="1251.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.1" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.15%)</title><rect x="1094.1" y="1235.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.1" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.15%)</title><rect x="1094.1" y="1219.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.15%)</title><rect x="1094.1" y="1203.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.1" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.15%)</title><rect x="1094.1" y="1187.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.1" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.15%)</title><rect x="1094.1" y="1171.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1097.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.15%)</title><rect x="1094.1" y="1155.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.1" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.15%)</title><rect x="1094.1" y="1139.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1097.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.15%)</title><rect x="1094.1" y="1123.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.13%)</title><rect x="1094.1" y="1107.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.1" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.11%)</title><rect x="1094.4" y="1091.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1097.4" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.11%)</title><rect x="1094.4" y="1075.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1094.6" y="1059.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1097.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1094.6" y="1043.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1094.6" y="1027.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="1094.6" y="1011.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.6" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.08%)</title><rect x="1094.7" y="995.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.7" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.08%)</title><rect x="1094.7" y="979.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1097.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.08%)</title><rect x="1094.7" y="963.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1097.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.08%)</title><rect x="1094.7" y="947.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1097.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.08%)</title><rect x="1094.7" y="931.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1097.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1095.0" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.0" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1095.2" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1098.2" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1095.2" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1095.2" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1095.2" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1095.2" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1095.2" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1098.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1095.2" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1095.2" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1095.2" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1095.2" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1095.2" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1095.2" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1095.2" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1095.2" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1095.2" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1095.2" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1095.2" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (8 samples, 0.11%)</title><rect x="1096.6" y="1331.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1099.6" y="1342.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (8 samples, 0.11%)</title><rect x="1096.6" y="1315.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.6" y="1326.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1097.1" y="1299.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (6 samples, 0.08%)</title><rect x="1097.9" y="1331.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (3 samples, 0.04%)</title><rect x="1097.9" y="1315.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.9" y="1326.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1098.0" y="1299.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1101.0" y="1310.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1098.0" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1101.0" y="1294.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1098.0" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.0" y="1278.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1098.0" y="1251.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.0" y="1262.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1098.0" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.0" y="1246.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1098.0" y="1219.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.0" y="1230.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.03%)</title><rect x="1098.0" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.0" y="1214.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (3 samples, 0.04%)</title><rect x="1098.3" y="1315.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.3" y="1326.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1098.5" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1101.5" y="1310.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1098.5" y="1283.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.5" y="1294.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1098.5" y="1267.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.5" y="1278.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (2 samples, 0.03%)</title><rect x="1098.5" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1098.8" y="1331.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_exits() (2 samples, 0.03%)</title><rect x="1099.6" y="1379.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1102.6" y="1390.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (24 samples, 0.32%)</title><rect x="1100.2" y="1411.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.2" y="1422.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (10 samples, 0.13%)</title><rect x="1100.6" y="1395.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1103.6" y="1406.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (10 samples, 0.13%)</title><rect x="1102.1" y="1395.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.1" y="1406.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (2 samples, 0.03%)</title><rect x="1103.7" y="1395.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.7" y="1406.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (5 samples, 0.07%)</title><rect x="1104.2" y="1411.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.2" y="1422.0"></text>
</g>
<g>
<title>CodeBuffer::free_blob() (2 samples, 0.03%)</title><rect x="1104.2" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1107.2" y="1406.0"></text>
</g>
<g>
<title>BufferBlob::free(BufferBlob*) (2 samples, 0.03%)</title><rect x="1104.2" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.2" y="1390.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.04%)</title><rect x="1104.5" y="1395.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.5" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (5 samples, 0.07%)</title><rect x="1105.1" y="1443.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1108.1" y="1454.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (4 samples, 0.05%)</title><rect x="1106.1" y="1443.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1109.1" y="1454.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (3 samples, 0.04%)</title><rect x="1106.1" y="1427.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.1" y="1438.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (3 samples, 0.04%)</title><rect x="1106.1" y="1411.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.1" y="1422.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (433 samples, 5.80%)</title><rect x="1106.7" y="1443.0" width="68.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.7" y="1454.0">Compile..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (432 samples, 5.79%)</title><rect x="1106.7" y="1427.0" width="68.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.7" y="1438.0">Compila..</text>
</g>
<g>
<title>Compilation::compile_method() (431 samples, 5.77%)</title><rect x="1106.7" y="1411.0" width="68.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1109.7" y="1422.0">Compila..</text>
</g>
<g>
<title>Compilation::compile_java_method() (389 samples, 5.21%)</title><rect x="1106.9" y="1395.0" width="61.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.9" y="1406.0">Compil..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (187 samples, 2.50%)</title><rect x="1106.9" y="1379.0" width="29.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1109.9" y="1390.0">Co..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (18 samples, 0.24%)</title><rect x="1106.9" y="1363.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.9" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (13 samples, 0.17%)</title><rect x="1107.0" y="1347.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.0" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (11 samples, 0.15%)</title><rect x="1107.0" y="1331.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1110.0" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (6 samples, 0.08%)</title><rect x="1107.2" y="1315.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.2" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1107.2" y="1299.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1110.2" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1107.2" y="1283.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1110.2" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1107.2" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1110.2" y="1278.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (3 samples, 0.04%)</title><rect x="1107.7" y="1299.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1110.7" y="1310.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (3 samples, 0.04%)</title><rect x="1108.3" y="1315.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1111.3" y="1326.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (2 samples, 0.03%)</title><rect x="1109.2" y="1347.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.2" y="1358.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (149 samples, 2.00%)</title><rect x="1109.7" y="1363.0" width="23.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1112.7" y="1374.0">I..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (148 samples, 1.98%)</title><rect x="1109.7" y="1347.0" width="23.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.7" y="1358.0">I..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (147 samples, 1.97%)</title><rect x="1109.9" y="1331.0" width="23.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1112.9" y="1342.0">G..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.04%)</title><rect x="1109.9" y="1315.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1112.9" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="1109.9" y="1299.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1112.9" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1110.0" y="1283.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1113.0" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (6 samples, 0.08%)</title><rect x="1110.4" y="1315.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1113.4" y="1326.0"></text>
</g>
<g>
<title>BlockListBuilder::set_entries(int) (2 samples, 0.03%)</title><rect x="1110.4" y="1299.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1113.4" y="1310.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (4 samples, 0.05%)</title><rect x="1110.7" y="1299.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.7" y="1310.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (4 samples, 0.05%)</title><rect x="1110.7" y="1283.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.7" y="1294.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (4 samples, 0.05%)</title><rect x="1110.7" y="1267.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.7" y="1278.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.03%)</title><rect x="1111.0" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1114.0" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (134 samples, 1.79%)</title><rect x="1111.5" y="1315.0" width="21.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1114.5" y="1326.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (131 samples, 1.75%)</title><rect x="1111.6" y="1299.0" width="20.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1114.6" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (2 samples, 0.03%)</title><rect x="1111.8" y="1283.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.8" y="1294.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.03%)</title><rect x="1111.8" y="1267.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.8" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (8 samples, 0.11%)</title><rect x="1112.1" y="1283.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.1" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (7 samples, 0.09%)</title><rect x="1112.1" y="1267.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.1" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (6 samples, 0.08%)</title><rect x="1112.1" y="1251.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.1" y="1262.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (5 samples, 0.07%)</title><rect x="1112.2" y="1235.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.2" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1112.4" y="1219.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.4" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::check_cast(int) (2 samples, 0.03%)</title><rect x="1113.5" y="1283.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.5" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.03%)</title><rect x="1113.5" y="1267.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1116.5" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (115 samples, 1.54%)</title><rect x="1114.0" y="1283.0" width="18.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.0" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.03%)</title><rect x="1114.1" y="1267.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.1" y="1278.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.03%)</title><rect x="1114.1" y="1251.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.1" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (83 samples, 1.11%)</title><rect x="1114.6" y="1267.0" width="13.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.6" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (83 samples, 1.11%)</title><rect x="1114.6" y="1251.0" width="13.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.6" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (72 samples, 0.96%)</title><rect x="1114.6" y="1235.0" width="11.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.6" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (69 samples, 0.92%)</title><rect x="1114.9" y="1219.0" width="10.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.9" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (4 samples, 0.05%)</title><rect x="1115.1" y="1203.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.1" y="1214.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1115.4" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.4" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1115.7" y="1203.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.7" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1115.7" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.7" y="1198.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1115.7" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.7" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (57 samples, 0.76%)</title><rect x="1116.2" y="1203.0" width="9.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.2" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (41 samples, 0.55%)</title><rect x="1116.5" y="1187.0" width="6.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1119.5" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (37 samples, 0.50%)</title><rect x="1116.7" y="1171.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1119.7" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (36 samples, 0.48%)</title><rect x="1116.7" y="1155.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.7" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (35 samples, 0.47%)</title><rect x="1116.7" y="1139.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.7" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (4 samples, 0.05%)</title><rect x="1116.8" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.8" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1117.5" y="1123.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.5" y="1134.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 0.04%)</title><rect x="1117.5" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.5" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.03%)</title><rect x="1117.5" y="1091.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.5" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (25 samples, 0.33%)</title><rect x="1118.1" y="1123.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.1" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (22 samples, 0.29%)</title><rect x="1118.3" y="1107.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1121.3" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 0.25%)</title><rect x="1118.3" y="1091.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.3" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (17 samples, 0.23%)</title><rect x="1118.3" y="1075.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.3" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (17 samples, 0.23%)</title><rect x="1118.3" y="1059.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1121.3" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1118.4" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (13 samples, 0.17%)</title><rect x="1118.7" y="1043.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.7" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.13%)</title><rect x="1118.7" y="1027.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.7" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.13%)</title><rect x="1118.7" y="1011.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.7" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (10 samples, 0.13%)</title><rect x="1118.7" y="995.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.7" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (10 samples, 0.13%)</title><rect x="1118.7" y="979.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.7" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 0.12%)</title><rect x="1118.9" y="963.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.03%)</title><rect x="1118.9" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.9" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.07%)</title><rect x="1119.2" y="947.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.2" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.05%)</title><rect x="1119.2" y="931.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.2" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.04%)</title><rect x="1119.2" y="915.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1122.2" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.04%)</title><rect x="1119.2" y="899.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1122.2" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1119.2" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.2" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1119.4" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1122.4" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1119.4" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1122.4" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1119.4" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.4" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1119.4" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.4" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1120.0" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.0" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1120.0" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.0" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1120.0" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.0" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1120.3" y="1027.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.3" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1120.3" y="1011.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.3" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1120.3" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.3" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.04%)</title><rect x="1120.3" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.3" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1120.5" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.5" y="974.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1120.5" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.5" y="958.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="1120.5" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.5" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (3 samples, 0.04%)</title><rect x="1121.3" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.3" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1121.3" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.3" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1121.3" y="1059.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.3" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1121.3" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.3" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1121.3" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (3 samples, 0.04%)</title><rect x="1122.5" y="1171.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.5" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1122.5" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.5" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1122.5" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1125.5" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1122.5" y="1123.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.5" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1122.5" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.5" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1122.5" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.5" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1122.5" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.5" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1122.5" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.5" y="1070.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1122.5" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.5" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (12 samples, 0.16%)</title><rect x="1123.0" y="1187.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.0" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (12 samples, 0.16%)</title><rect x="1123.0" y="1171.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1126.0" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (12 samples, 0.16%)</title><rect x="1123.0" y="1155.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1126.0" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (8 samples, 0.11%)</title><rect x="1123.5" y="1139.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.5" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (8 samples, 0.11%)</title><rect x="1123.5" y="1123.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.5" y="1134.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 0.09%)</title><rect x="1123.6" y="1107.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.6" y="1118.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (6 samples, 0.08%)</title><rect x="1123.8" y="1091.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.8" y="1102.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (5 samples, 0.07%)</title><rect x="1123.9" y="1075.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1126.9" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (2 samples, 0.03%)</title><rect x="1123.9" y="1059.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.9" y="1070.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (2 samples, 0.03%)</title><rect x="1123.9" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1126.9" y="1054.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.03%)</title><rect x="1124.4" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.4" y="1070.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.03%)</title><rect x="1124.4" y="1043.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1127.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (2 samples, 0.03%)</title><rect x="1125.2" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.2" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (5 samples, 0.07%)</title><rect x="1126.0" y="1235.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.0" y="1246.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (4 samples, 0.05%)</title><rect x="1126.0" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1129.0" y="1230.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (3 samples, 0.04%)</title><rect x="1126.0" y="1203.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.0" y="1214.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.03%)</title><rect x="1126.2" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.2" y="1198.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.03%)</title><rect x="1126.2" y="1171.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.2" y="1182.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (5 samples, 0.07%)</title><rect x="1126.9" y="1235.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.9" y="1246.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (5 samples, 0.07%)</title><rect x="1126.9" y="1219.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.9" y="1230.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (3 samples, 0.04%)</title><rect x="1127.3" y="1203.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.3" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (24 samples, 0.32%)</title><rect x="1127.9" y="1267.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.9" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (24 samples, 0.32%)</title><rect x="1127.9" y="1251.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.9" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (23 samples, 0.31%)</title><rect x="1128.1" y="1235.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.1" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="1128.1" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.1" y="1230.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (6 samples, 0.08%)</title><rect x="1128.7" y="1219.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.7" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (3 samples, 0.04%)</title><rect x="1128.7" y="1203.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.7" y="1214.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (2 samples, 0.03%)</title><rect x="1129.2" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.2" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (13 samples, 0.17%)</title><rect x="1129.6" y="1219.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.6" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (12 samples, 0.16%)</title><rect x="1129.8" y="1203.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.8" y="1214.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (11 samples, 0.15%)</title><rect x="1129.9" y="1187.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.9" y="1198.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (8 samples, 0.11%)</title><rect x="1130.4" y="1171.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.4" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (7 samples, 0.09%)</title><rect x="1130.6" y="1155.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.6" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (3 samples, 0.04%)</title><rect x="1130.6" y="1139.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.6" y="1150.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (3 samples, 0.04%)</title><rect x="1130.6" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.6" y="1134.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (3 samples, 0.04%)</title><rect x="1131.2" y="1139.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.2" y="1150.0"></text>
</g>
<g>
<title>syscall (3 samples, 0.04%)</title><rect x="1131.2" y="1123.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1134.2" y="1134.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (3 samples, 0.04%)</title><rect x="1131.7" y="1267.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.7" y="1278.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (3 samples, 0.04%)</title><rect x="1131.7" y="1251.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.7" y="1262.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (3 samples, 0.04%)</title><rect x="1131.7" y="1235.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.7" y="1246.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (3 samples, 0.04%)</title><rect x="1131.7" y="1219.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.7" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="1131.7" y="1203.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.7" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.04%)</title><rect x="1131.7" y="1187.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.7" y="1198.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.03%)</title><rect x="1132.3" y="1299.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.3" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*) (2 samples, 0.03%)</title><rect x="1132.6" y="1315.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.6" y="1326.0"></text>
</g>
<g>
<title>IR::compute_code() (4 samples, 0.05%)</title><rect x="1133.3" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.3" y="1374.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (2 samples, 0.03%)</title><rect x="1133.3" y="1347.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.3" y="1358.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_dominators() (2 samples, 0.03%)</title><rect x="1133.6" y="1347.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.6" y="1358.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (2 samples, 0.03%)</title><rect x="1133.9" y="1363.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1136.9" y="1374.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (9 samples, 0.12%)</title><rect x="1134.2" y="1363.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.2" y="1374.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (9 samples, 0.12%)</title><rect x="1134.2" y="1347.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.2" y="1358.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (5 samples, 0.07%)</title><rect x="1134.4" y="1331.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.4" y="1342.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (3 samples, 0.04%)</title><rect x="1135.6" y="1363.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.6" y="1374.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (2 samples, 0.03%)</title><rect x="1135.8" y="1347.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.8" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.03%)</title><rect x="1135.8" y="1331.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.8" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1135.8" y="1315.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.8" y="1326.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (63 samples, 0.84%)</title><rect x="1136.4" y="1379.0" width="10.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.4" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (39 samples, 0.52%)</title><rect x="1136.7" y="1363.0" width="6.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.7" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::comp_op(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_Op2*) (4 samples, 0.05%)</title><rect x="1137.9" y="1347.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.9" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (8 samples, 0.11%)</title><rect x="1138.5" y="1347.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.5" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (5 samples, 0.07%)</title><rect x="1138.6" y="1331.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.6" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (4 samples, 0.05%)</title><rect x="1138.6" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.6" y="1326.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.03%)</title><rect x="1138.6" y="1299.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.6" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (8 samples, 0.11%)</title><rect x="1139.7" y="1347.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.7" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::stack2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType) (2 samples, 0.03%)</title><rect x="1140.7" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.7" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (7 samples, 0.09%)</title><rect x="1141.3" y="1347.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.3" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (5 samples, 0.07%)</title><rect x="1141.6" y="1331.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.6" y="1342.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (5 samples, 0.07%)</title><rect x="1141.6" y="1315.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1144.6" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (3 samples, 0.04%)</title><rect x="1142.0" y="1299.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.0" y="1310.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (2 samples, 0.03%)</title><rect x="1142.4" y="1347.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.4" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (2 samples, 0.03%)</title><rect x="1142.4" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.4" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (2 samples, 0.03%)</title><rect x="1142.4" y="1315.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1145.4" y="1326.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_exception_handler() (2 samples, 0.03%)</title><rect x="1143.1" y="1363.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.1" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (16 samples, 0.21%)</title><rect x="1143.4" y="1363.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.4" y="1374.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (3 samples, 0.04%)</title><rect x="1143.4" y="1347.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.4" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.04%)</title><rect x="1143.4" y="1331.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.4" y="1342.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (3 samples, 0.04%)</title><rect x="1143.4" y="1315.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.4" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.03%)</title><rect x="1143.5" y="1299.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.5" y="1310.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (6 samples, 0.08%)</title><rect x="1143.9" y="1347.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.9" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (6 samples, 0.08%)</title><rect x="1143.9" y="1331.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.9" y="1342.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (6 samples, 0.08%)</title><rect x="1143.9" y="1315.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.9" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (3 samples, 0.04%)</title><rect x="1144.0" y="1299.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.0" y="1310.0"></text>
</g>
<g>
<title>NewInstanceStub::emit_code(LIR_Assembler*) (4 samples, 0.05%)</title><rect x="1144.8" y="1347.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.8" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.04%)</title><rect x="1144.8" y="1331.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.8" y="1342.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (3 samples, 0.04%)</title><rect x="1144.8" y="1315.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.8" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.03%)</title><rect x="1144.8" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.8" y="1310.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.03%)</title><rect x="1144.8" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.8" y="1294.0"></text>
</g>
<g>
<title>SimpleExceptionStub::emit_code(LIR_Assembler*) (2 samples, 0.03%)</title><rect x="1145.6" y="1347.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.6" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1145.6" y="1331.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.6" y="1342.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.03%)</title><rect x="1145.6" y="1315.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.6" y="1326.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_unwind_handler() (2 samples, 0.03%)</title><rect x="1145.9" y="1363.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.9" y="1374.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (128 samples, 1.71%)</title><rect x="1146.4" y="1379.0" width="20.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.4" y="1390.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (35 samples, 0.47%)</title><rect x="1146.4" y="1363.0" width="5.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.4" y="1374.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (35 samples, 0.47%)</title><rect x="1146.4" y="1347.0" width="5.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.4" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (3 samples, 0.04%)</title><rect x="1146.7" y="1331.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.7" y="1342.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (2 samples, 0.03%)</title><rect x="1146.7" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.7" y="1326.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (13 samples, 0.17%)</title><rect x="1147.2" y="1331.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.2" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (9 samples, 0.12%)</title><rect x="1147.6" y="1315.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.6" y="1326.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (8 samples, 0.11%)</title><rect x="1147.8" y="1299.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.8" y="1310.0"></text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (2 samples, 0.03%)</title><rect x="1149.2" y="1331.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.2" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.03%)</title><rect x="1149.5" y="1331.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.5" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (3 samples, 0.04%)</title><rect x="1150.5" y="1331.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.5" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, LIR_OprDesc*, int, int, bool, bool) (3 samples, 0.04%)</title><rect x="1150.5" y="1315.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.5" y="1326.0"></text>
</g>
<g>
<title>LIRGenerator::do_StoreField(StoreField*) (4 samples, 0.05%)</title><rect x="1151.1" y="1331.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.1" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::access_store_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1151.1" y="1315.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.1" y="1326.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (92 samples, 1.23%)</title><rect x="1152.1" y="1363.0" width="14.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.1" y="1374.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (22 samples, 0.29%)</title><rect x="1152.2" y="1347.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.2" y="1358.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (21 samples, 0.28%)</title><rect x="1152.2" y="1331.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.2" y="1342.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (7 samples, 0.09%)</title><rect x="1152.4" y="1315.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1326.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (13 samples, 0.17%)</title><rect x="1153.5" y="1315.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.5" y="1326.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (9 samples, 0.12%)</title><rect x="1153.7" y="1299.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.7" y="1310.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (4 samples, 0.05%)</title><rect x="1154.3" y="1283.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.3" y="1294.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (3 samples, 0.04%)</title><rect x="1155.1" y="1299.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.1" y="1310.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (25 samples, 0.33%)</title><rect x="1155.7" y="1347.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.7" y="1358.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (24 samples, 0.32%)</title><rect x="1155.7" y="1331.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.7" y="1342.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (3 samples, 0.04%)</title><rect x="1156.3" y="1315.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.3" y="1326.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (6 samples, 0.08%)</title><rect x="1157.0" y="1315.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.0" y="1326.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.04%)</title><rect x="1157.4" y="1299.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.4" y="1310.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (9 samples, 0.12%)</title><rect x="1157.9" y="1315.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.9" y="1326.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (6 samples, 0.08%)</title><rect x="1158.4" y="1299.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.4" y="1310.0"></text>
</g>
<g>
<title>ValueStack::total_locks_size() const (2 samples, 0.03%)</title><rect x="1159.0" y="1283.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.0" y="1294.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (23 samples, 0.31%)</title><rect x="1159.7" y="1347.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.7" y="1358.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.03%)</title><rect x="1160.6" y="1331.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.6" y="1342.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (7 samples, 0.09%)</title><rect x="1161.6" y="1331.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.6" y="1342.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (2 samples, 0.03%)</title><rect x="1161.6" y="1315.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.6" y="1326.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (5 samples, 0.07%)</title><rect x="1161.9" y="1315.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.9" y="1326.0"></text>
</g>
<g>
<title>Interval::Interval(int) (5 samples, 0.07%)</title><rect x="1161.9" y="1299.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.9" y="1310.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="1162.3" y="1283.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.3" y="1294.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (13 samples, 0.17%)</title><rect x="1163.3" y="1347.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.3" y="1358.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (6 samples, 0.08%)</title><rect x="1164.2" y="1331.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.2" y="1342.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (3 samples, 0.04%)</title><rect x="1164.7" y="1315.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.7" y="1326.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (2 samples, 0.03%)</title><rect x="1165.3" y="1347.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.3" y="1358.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (2 samples, 0.03%)</title><rect x="1165.7" y="1347.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.7" y="1358.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.03%)</title><rect x="1166.1" y="1347.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.1" y="1358.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (9 samples, 0.12%)</title><rect x="1166.8" y="1379.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.8" y="1390.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (9 samples, 0.12%)</title><rect x="1166.8" y="1363.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.8" y="1374.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (4 samples, 0.05%)</title><rect x="1166.8" y="1347.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.8" y="1358.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (4 samples, 0.05%)</title><rect x="1166.8" y="1331.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.8" y="1342.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1166.8" y="1315.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1169.8" y="1326.0"></text>
</g>
<g>
<title>MethodData::initialize() (2 samples, 0.03%)</title><rect x="1167.1" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.1" y="1326.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (2 samples, 0.03%)</title><rect x="1167.4" y="1347.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="1358.0"></text>
</g>
<g>
<title>Compilation::initialize() (2 samples, 0.03%)</title><rect x="1168.4" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.4" y="1406.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (6 samples, 0.08%)</title><rect x="1168.7" y="1395.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.7" y="1406.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (31 samples, 0.42%)</title><rect x="1169.6" y="1395.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.6" y="1406.0"></text>
</g>
<g>
<title>nmethod::make_not_entrant_or_zombie(int) (2 samples, 0.03%)</title><rect x="1169.8" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.8" y="1390.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (27 samples, 0.36%)</title><rect x="1170.1" y="1379.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.1" y="1390.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (5 samples, 0.07%)</title><rect x="1170.1" y="1363.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.1" y="1374.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (5 samples, 0.07%)</title><rect x="1170.9" y="1363.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.9" y="1374.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (4 samples, 0.05%)</title><rect x="1170.9" y="1347.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.9" y="1358.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (15 samples, 0.20%)</title><rect x="1172.0" y="1363.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.0" y="1374.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1172.0" y="1347.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1175.0" y="1358.0"></text>
</g>
<g>
<title>async_page_fault (2 samples, 0.03%)</title><rect x="1172.0" y="1331.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.0" y="1342.0"></text>
</g>
<g>
<title>do_async_page_fault (2 samples, 0.03%)</title><rect x="1172.0" y="1315.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1175.0" y="1326.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1172.0" y="1299.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.0" y="1310.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="1172.0" y="1283.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.0" y="1294.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (6 samples, 0.08%)</title><rect x="1172.3" y="1347.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.3" y="1358.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (3 samples, 0.04%)</title><rect x="1172.3" y="1331.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1175.3" y="1342.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (2 samples, 0.03%)</title><rect x="1172.9" y="1331.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.9" y="1342.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (2 samples, 0.03%)</title><rect x="1172.9" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.9" y="1326.0"></text>
</g>
<g>
<title>Relocation::pd_call_destination(unsigned char*) (2 samples, 0.03%)</title><rect x="1172.9" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.9" y="1310.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.03%)</title><rect x="1173.2" y="1347.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (3 samples, 0.04%)</title><rect x="1173.7" y="1347.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.7" y="1358.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (3 samples, 0.04%)</title><rect x="1173.7" y="1331.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.7" y="1342.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (3 samples, 0.04%)</title><rect x="1173.7" y="1315.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.7" y="1326.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.04%)</title><rect x="1175.6" y="1443.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.6" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (2 samples, 0.03%)</title><rect x="1175.8" y="1427.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.8" y="1438.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (9 samples, 0.12%)</title><rect x="1176.1" y="1443.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.1" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (9 samples, 0.12%)</title><rect x="1176.1" y="1427.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.1" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (8 samples, 0.11%)</title><rect x="1176.3" y="1411.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.3" y="1422.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (6 samples, 0.08%)</title><rect x="1176.3" y="1395.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.3" y="1406.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (6 samples, 0.08%)</title><rect x="1176.3" y="1379.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.3" y="1390.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (4 samples, 0.05%)</title><rect x="1176.6" y="1363.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="1374.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1176.7" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.7" y="1358.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1176.7" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.7" y="1342.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (2 samples, 0.03%)</title><rect x="1176.7" y="1315.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.7" y="1326.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1177.2" y="1395.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.2" y="1406.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (3 samples, 0.04%)</title><rect x="1177.5" y="1443.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.5" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (2 samples, 0.03%)</title><rect x="1177.7" y="1427.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.7" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (6 samples, 0.08%)</title><rect x="1178.0" y="1459.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.0" y="1470.0"></text>
</g>
<g>
<title>os::available_memory() (5 samples, 0.07%)</title><rect x="1178.0" y="1443.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.0" y="1454.0"></text>
</g>
<g>
<title>OSContainer::memory_limit_in_bytes() (4 samples, 0.05%)</title><rect x="1178.1" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.1" y="1438.0"></text>
</g>
<g>
<title>CompileQueue::get() (6 samples, 0.08%)</title><rect x="1178.9" y="1459.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.9" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (4 samples, 0.05%)</title><rect x="1179.1" y="1443.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.1" y="1454.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (6 samples, 0.08%)</title><rect x="1180.0" y="1475.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.0" y="1486.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (5 samples, 0.07%)</title><rect x="1180.2" y="1459.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="1470.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (5 samples, 0.07%)</title><rect x="1180.2" y="1443.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="1454.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (4 samples, 0.05%)</title><rect x="1180.4" y="1427.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="1438.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (4 samples, 0.05%)</title><rect x="1180.4" y="1411.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.4" y="1422.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (31 samples, 0.42%)</title><rect x="1181.0" y="1475.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="1486.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (30 samples, 0.40%)</title><rect x="1181.0" y="1459.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.0" y="1470.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (20 samples, 0.27%)</title><rect x="1181.2" y="1443.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="1454.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (3 samples, 0.04%)</title><rect x="1181.5" y="1427.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.5" y="1438.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1181.5" y="1411.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.5" y="1422.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (15 samples, 0.20%)</title><rect x="1181.9" y="1427.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1184.9" y="1438.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (6 samples, 0.08%)</title><rect x="1182.7" y="1411.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1422.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (4 samples, 0.05%)</title><rect x="1182.9" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.9" y="1406.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="1184.0" y="1411.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.0" y="1422.0"></text>
</g>
<g>
<title>Profiler::addJavaMethod(void const*, int, _jmethodID*) (8 samples, 0.11%)</title><rect x="1184.3" y="1443.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.3" y="1454.0"></text>
</g>
<g>
<title>VMThread::run() (22 samples, 0.29%)</title><rect x="1185.9" y="1507.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="1518.0"></text>
</g>
<g>
<title>VMThread::loop() (22 samples, 0.29%)</title><rect x="1185.9" y="1491.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="1502.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (7 samples, 0.09%)</title><rect x="1185.9" y="1475.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.9" y="1486.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (8 samples, 0.11%)</title><rect x="1187.0" y="1475.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="1486.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (8 samples, 0.11%)</title><rect x="1187.0" y="1459.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="1470.0"></text>
</g>
<g>
<title>VM_BulkRevokeBias::doit() (2 samples, 0.03%)</title><rect x="1187.0" y="1443.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="1454.0"></text>
</g>
<g>
<title>bulk_revoke_or_rebias_at_safepoint(oopDesc*, bool, bool, JavaThread*) (2 samples, 0.03%)</title><rect x="1187.0" y="1427.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1190.0" y="1438.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) [clone .part.42] (2 samples, 0.03%)</title><rect x="1187.0" y="1411.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1190.0" y="1422.0"></text>
</g>
<g>
<title>vframe::java_sender() const (2 samples, 0.03%)</title><rect x="1187.0" y="1395.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="1406.0"></text>
</g>
<g>
<title>vframe::sender() const (2 samples, 0.03%)</title><rect x="1187.0" y="1379.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="1390.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.04%)</title><rect x="1187.5" y="1443.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.5" y="1454.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.04%)</title><rect x="1187.5" y="1427.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.5" y="1438.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (2 samples, 0.03%)</title><rect x="1187.6" y="1411.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.6" y="1422.0"></text>
</g>
<g>
<title>VM_RevokeBias::doit() (2 samples, 0.03%)</title><rect x="1187.9" y="1443.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.9" y="1454.0"></text>
</g>
<g>
<title>__sched_yield (7 samples, 0.09%)</title><rect x="1188.3" y="1475.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1191.3" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="1188.6" y="1459.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.6" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="1188.6" y="1443.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.6" y="1454.0"></text>
</g>
<g>
<title>sys_sched_yield (3 samples, 0.04%)</title><rect x="1188.9" y="1427.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.9" y="1438.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="1188.9" y="1411.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.9" y="1422.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="1188.9" y="1395.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1191.9" y="1406.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.05%)</title><rect x="1189.4" y="1507.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="1518.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.03%)</title><rect x="1189.4" y="1491.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1502.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (2 samples, 0.03%)</title><rect x="1189.4" y="1475.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="1486.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.7" y="1491.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="1502.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1189.7" y="1475.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.7" y="1486.0"></text>
</g>
</g>
</svg>
