<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (25,235 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (16 samples, 0.06%)</title><rect x="10.0" y="1603.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (12 samples, 0.05%)</title><rect x="10.8" y="1603.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1614.0"></text>
</g>
<g>
<title>[no_Java_frame] (13 samples, 0.05%)</title><rect x="11.6" y="1603.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.6" y="1614.0"></text>
</g>
<g>
<title>[not_walkable_Java] (17 samples, 0.07%)</title><rect x="12.2" y="1603.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.02%)</title><rect x="12.6" y="1587.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="15.6" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.02%)</title><rect x="12.6" y="1571.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.28%)</title><rect x="13.0" y="1603.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="16.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.03%)</title><rect x="13.3" y="1587.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.3" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.08%)</title><rect x="14.0" y="1587.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="17.0" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.06%)</title><rect x="14.2" y="1571.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.2" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.06%)</title><rect x="14.2" y="1555.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.2" y="1566.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.05%)</title><rect x="14.3" y="1539.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.3" y="1550.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.05%)</title><rect x="14.3" y="1523.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="17.3" y="1534.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.05%)</title><rect x="14.3" y="1507.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.3" y="1518.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.05%)</title><rect x="14.3" y="1491.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.3" y="1502.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.05%)</title><rect x="14.3" y="1475.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.3" y="1486.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.05%)</title><rect x="14.3" y="1459.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="17.3" y="1470.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.05%)</title><rect x="14.3" y="1443.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.3" y="1454.0"></text>
</g>
<g>
<title>open64 (20 samples, 0.08%)</title><rect x="15.3" y="1587.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.3" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.08%)</title><rect x="15.4" y="1571.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.4" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.08%)</title><rect x="15.4" y="1555.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="18.4" y="1566.0"></text>
</g>
<g>
<title>sys_openat (18 samples, 0.07%)</title><rect x="15.4" y="1539.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.4" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (18 samples, 0.07%)</title><rect x="15.4" y="1523.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.4" y="1534.0"></text>
</g>
<g>
<title>do_filp_open (18 samples, 0.07%)</title><rect x="15.4" y="1507.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.4" y="1518.0"></text>
</g>
<g>
<title>path_openat (17 samples, 0.07%)</title><rect x="15.5" y="1491.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.5" y="1502.0"></text>
</g>
<g>
<title>link_path_walk (11 samples, 0.04%)</title><rect x="15.5" y="1475.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.5" y="1486.0"></text>
</g>
<g>
<title>walk_component (8 samples, 0.03%)</title><rect x="15.7" y="1459.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.7" y="1470.0"></text>
</g>
<g>
<title>lookup_fast (8 samples, 0.03%)</title><rect x="15.7" y="1443.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.7" y="1454.0"></text>
</g>
<g>
<title>[unknown_Java] (184 samples, 0.73%)</title><rect x="16.3" y="1603.0" width="8.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="19.3" y="1614.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (6 samples, 0.02%)</title><rect x="16.5" y="1587.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.5" y="1598.0"></text>
</g>
<g>
<title>Interpreter (62 samples, 0.25%)</title><rect x="16.9" y="1587.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.9" y="1598.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.07%)</title><rect x="20.1" y="1587.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.1" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (14 samples, 0.06%)</title><rect x="20.1" y="1571.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.1" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (12 samples, 0.05%)</title><rect x="20.2" y="1555.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.2" y="1566.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.04%)</title><rect x="20.3" y="1539.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.3" y="1550.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.04%)</title><rect x="23.5" y="1587.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.5" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="23.6" y="1571.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.6" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.03%)</title><rect x="23.6" y="1555.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.6" y="1566.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (11 samples, 0.04%)</title><rect x="24.3" y="1587.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="27.3" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (26 samples, 0.10%)</title><rect x="25.2" y="1603.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.2" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.08%)</title><rect x="25.5" y="1587.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.5" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.08%)</title><rect x="25.5" y="1571.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="28.5" y="1582.0"></text>
</g>
<g>
<title>sys_futex (20 samples, 0.08%)</title><rect x="25.5" y="1555.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.5" y="1566.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.08%)</title><rect x="25.5" y="1539.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.5" y="1550.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.07%)</title><rect x="25.6" y="1523.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.6" y="1534.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.05%)</title><rect x="25.7" y="1507.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.7" y="1518.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.05%)</title><rect x="25.7" y="1491.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.7" y="1502.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.05%)</title><rect x="25.7" y="1475.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.7" y="1486.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.04%)</title><rect x="25.8" y="1459.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.8" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (76 samples, 0.30%)</title><rect x="27.2" y="1603.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.2" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (64 samples, 0.25%)</title><rect x="27.3" y="1587.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.3" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (64 samples, 0.25%)</title><rect x="27.3" y="1571.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.3" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (64 samples, 0.25%)</title><rect x="27.3" y="1555.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.3" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (64 samples, 0.25%)</title><rect x="27.3" y="1539.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.3" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.02%)</title><rect x="27.3" y="1523.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.3" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (6 samples, 0.02%)</title><rect x="27.3" y="1507.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.3" y="1518.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 0.02%)</title><rect x="27.3" y="1491.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.3" y="1502.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 0.02%)</title><rect x="27.3" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.3" y="1486.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (6 samples, 0.02%)</title><rect x="27.3" y="1459.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.3" y="1470.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (6 samples, 0.02%)</title><rect x="27.3" y="1443.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.3" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (58 samples, 0.23%)</title><rect x="27.6" y="1523.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.6" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (57 samples, 0.23%)</title><rect x="27.7" y="1507.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (17 samples, 0.07%)</title><rect x="27.7" y="1491.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.7" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (17 samples, 0.07%)</title><rect x="27.7" y="1475.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.7" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (13 samples, 0.05%)</title><rect x="27.8" y="1459.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.8" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (10 samples, 0.04%)</title><rect x="28.0" y="1443.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.0" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (9 samples, 0.04%)</title><rect x="28.0" y="1427.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.0" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (9 samples, 0.04%)</title><rect x="28.0" y="1411.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.0" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (9 samples, 0.04%)</title><rect x="28.0" y="1395.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.0" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (40 samples, 0.16%)</title><rect x="28.5" y="1491.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.5" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (40 samples, 0.16%)</title><rect x="28.5" y="1475.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.5" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (39 samples, 0.15%)</title><rect x="28.5" y="1459.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.5" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (39 samples, 0.15%)</title><rect x="28.5" y="1443.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.5" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (31 samples, 0.12%)</title><rect x="28.5" y="1427.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.5" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (31 samples, 0.12%)</title><rect x="28.5" y="1411.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.5" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (30 samples, 0.12%)</title><rect x="28.5" y="1395.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.5" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initialize (9 samples, 0.04%)</title><rect x="28.8" y="1379.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.8" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeDefaultCentury (6 samples, 0.02%)</title><rect x="28.9" y="1363.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.9" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (15 samples, 0.06%)</title><rect x="29.2" y="1379.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.2" y="1390.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (15 samples, 0.06%)</title><rect x="29.2" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.2" y="1374.0"></text>
</g>
<g>
<title>java/util/Calendar.createCalendar (7 samples, 0.03%)</title><rect x="29.2" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="1358.0"></text>
</g>
<g>
<title>java/util/Calendar.defaultTimeZone (8 samples, 0.03%)</title><rect x="29.5" y="1347.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.5" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (6 samples, 0.02%)</title><rect x="30.0" y="1427.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.0" y="1438.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (6 samples, 0.02%)</title><rect x="30.0" y="1411.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.0" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (6 samples, 0.02%)</title><rect x="30.0" y="1395.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.0" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (6 samples, 0.02%)</title><rect x="30.0" y="1379.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.0" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (6 samples, 0.02%)</title><rect x="30.0" y="1363.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.0" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (6 samples, 0.02%)</title><rect x="30.0" y="1347.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 0.03%)</title><rect x="30.4" y="1587.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.03%)</title><rect x="30.4" y="1571.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.4" y="1582.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main.main (78 samples, 0.31%)</title><rect x="30.9" y="1603.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.9" y="1614.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.main (78 samples, 0.31%)</title><rect x="30.9" y="1587.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.9" y="1598.0"></text>
</g>
<g>
<title>scala/App.main$ (78 samples, 0.31%)</title><rect x="30.9" y="1571.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.9" y="1582.0"></text>
</g>
<g>
<title>scala/App.main (78 samples, 0.31%)</title><rect x="30.9" y="1555.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.9" y="1566.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (77 samples, 0.31%)</title><rect x="31.0" y="1539.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (77 samples, 0.31%)</title><rect x="31.0" y="1523.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.0" y="1534.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (77 samples, 0.31%)</title><rect x="31.0" y="1507.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.0" y="1518.0"></text>
</g>
<g>
<title>scala/App$$Lambda$1/874088044.apply (77 samples, 0.31%)</title><rect x="31.0" y="1491.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.0" y="1502.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1$adapted (77 samples, 0.31%)</title><rect x="31.0" y="1475.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="1486.0"></text>
</g>
<g>
<title>scala/App.$anonfun$main$1 (77 samples, 0.31%)</title><rect x="31.0" y="1459.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/AbstractFunction0.apply$mcV$sp (77 samples, 0.31%)</title><rect x="31.0" y="1443.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.0" y="1454.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp$ (77 samples, 0.31%)</title><rect x="31.0" y="1427.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.0" y="1438.0"></text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp (77 samples, 0.31%)</title><rect x="31.0" y="1411.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$delayedInit$body.apply (77 samples, 0.31%)</title><rect x="31.0" y="1395.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.0" y="1406.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.delayedEndpoint$io$bernhardt$akka$rapid$Main$1 (77 samples, 0.31%)</title><rect x="31.0" y="1379.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.0" y="1390.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.start (77 samples, 0.31%)</title><rect x="31.0" y="1363.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.0" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.startClusterSystem (77 samples, 0.31%)</title><rect x="31.0" y="1347.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.0" y="1358.0"></text>
</g>
<g>
<title>scala/Option.map (77 samples, 0.31%)</title><rect x="31.0" y="1331.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.0" y="1342.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$697/817054343.apply (77 samples, 0.31%)</title><rect x="31.0" y="1315.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.0" y="1326.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$1 (77 samples, 0.31%)</title><rect x="31.0" y="1299.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (74 samples, 0.29%)</title><rect x="31.0" y="1283.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (74 samples, 0.29%)</title><rect x="31.0" y="1267.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (74 samples, 0.29%)</title><rect x="31.0" y="1251.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.&lt;init&gt; (18 samples, 0.07%)</title><rect x="31.0" y="1235.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree1$1 (11 samples, 0.04%)</title><rect x="31.3" y="1219.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (11 samples, 0.04%)</title><rect x="31.3" y="1203.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.3" y="1214.0"></text>
</g>
<g>
<title>scala/util/Success.flatMap (10 samples, 0.04%)</title><rect x="31.3" y="1187.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$83/2107543287.apply (10 samples, 0.04%)</title><rect x="31.3" y="1171.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$5 (10 samples, 0.04%)</title><rect x="31.3" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (10 samples, 0.04%)</title><rect x="31.3" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.3" y="1150.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (10 samples, 0.04%)</title><rect x="31.3" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$84/252738640.apply (10 samples, 0.04%)</title><rect x="31.3" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$1 (10 samples, 0.04%)</title><rect x="31.3" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.03%)</title><rect x="31.5" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (7 samples, 0.03%)</title><rect x="31.5" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (7 samples, 0.03%)</title><rect x="31.5" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (7 samples, 0.03%)</title><rect x="31.5" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.5" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.&lt;init&gt; (7 samples, 0.03%)</title><rect x="31.5" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.5" y="1022.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.&lt;init&gt; (7 samples, 0.03%)</title><rect x="31.5" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.5" y="1006.0"></text>
</g>
<g>
<title>akka/remote/RemoteSettings.&lt;init&gt; (6 samples, 0.02%)</title><rect x="31.5" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.start (56 samples, 0.22%)</title><rect x="31.9" y="1235.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start (56 samples, 0.22%)</title><rect x="31.9" y="1219.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start$lzycompute (56 samples, 0.22%)</title><rect x="31.9" y="1203.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree2$1 (56 samples, 0.22%)</title><rect x="31.9" y="1187.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.init (53 samples, 0.21%)</title><rect x="31.9" y="1171.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.9" y="1182.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.init (53 samples, 0.21%)</title><rect x="31.9" y="1155.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.9" y="1166.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.createOrNone (11 samples, 0.04%)</title><rect x="32.2" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.2" y="1150.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$$Lambda$851/2005706991.apply (11 samples, 0.04%)</title><rect x="32.2" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.2" y="1134.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.$anonfun$init$1 (11 samples, 0.04%)</title><rect x="32.2" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.2" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createRemoteWatcher (11 samples, 0.04%)</title><rect x="32.2" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.2" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.apply (10 samples, 0.04%)</title><rect x="32.2" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (10 samples, 0.04%)</title><rect x="32.2" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (10 samples, 0.04%)</title><rect x="32.2" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (10 samples, 0.04%)</title><rect x="32.2" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (10 samples, 0.04%)</title><rect x="32.2" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.2" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (10 samples, 0.04%)</title><rect x="32.2" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.2" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Cluster.&lt;init&gt; (9 samples, 0.04%)</title><rect x="32.3" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.3" y="990.0"></text>
</g>
<g>
<title>akka/cluster/ClusterJmx.&lt;init&gt; (6 samples, 0.02%)</title><rect x="32.3" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.3" y="974.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getPlatformMBeanServer (6 samples, 0.02%)</title><rect x="32.3" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.3" y="958.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.start (22 samples, 0.09%)</title><rect x="33.0" y="1139.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.0" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundStreams (20 samples, 0.08%)</title><rect x="33.0" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.0" y="1134.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundControlStream (10 samples, 0.04%)</title><rect x="33.1" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (7 samples, 0.03%)</title><rect x="33.2" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.03%)</title><rect x="33.2" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.03%)</title><rect x="33.2" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.03%)</title><rect x="33.2" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (6 samples, 0.02%)</title><rect x="33.2" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (6 samples, 0.02%)</title><rect x="33.2" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.2" y="1022.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundOrdinaryMessagesStream (6 samples, 0.02%)</title><rect x="33.5" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.5" y="1118.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.&lt;init&gt; (8 samples, 0.03%)</title><rect x="34.0" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.0" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.&lt;init&gt; (8 samples, 0.03%)</title><rect x="34.0" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,260 samples, 20.84%)</title><rect x="34.6" y="1603.0" width="246.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.6" y="1614.0">java/lang/Thread.run</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (263 samples, 1.04%)</title><rect x="34.6" y="1587.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.6" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (263 samples, 1.04%)</title><rect x="34.6" y="1571.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.6" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (41 samples, 0.16%)</title><rect x="35.3" y="1555.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.3" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (34 samples, 0.13%)</title><rect x="35.6" y="1539.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.6" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (84 samples, 0.33%)</title><rect x="37.2" y="1555.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.2" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (76 samples, 0.30%)</title><rect x="37.4" y="1539.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.4" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (75 samples, 0.30%)</title><rect x="37.4" y="1523.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.4" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (74 samples, 0.29%)</title><rect x="37.4" y="1507.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.4" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (74 samples, 0.29%)</title><rect x="37.4" y="1491.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.4" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (60 samples, 0.24%)</title><rect x="37.8" y="1475.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (40 samples, 0.16%)</title><rect x="38.7" y="1459.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (40 samples, 0.16%)</title><rect x="38.7" y="1443.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.7" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (40 samples, 0.16%)</title><rect x="38.7" y="1427.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.7" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (40 samples, 0.16%)</title><rect x="38.7" y="1411.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (38 samples, 0.15%)</title><rect x="38.7" y="1395.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (35 samples, 0.14%)</title><rect x="38.9" y="1379.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (35 samples, 0.14%)</title><rect x="38.9" y="1363.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (35 samples, 0.14%)</title><rect x="38.9" y="1347.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (29 samples, 0.11%)</title><rect x="39.1" y="1331.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.11%)</title><rect x="39.1" y="1315.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.11%)</title><rect x="39.1" y="1299.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.1" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (27 samples, 0.11%)</title><rect x="39.2" y="1283.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.2" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.09%)</title><rect x="39.4" y="1267.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.4" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.09%)</title><rect x="39.4" y="1251.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.4" y="1262.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.08%)</title><rect x="39.5" y="1235.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.5" y="1246.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.08%)</title><rect x="39.5" y="1219.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.5" y="1230.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.08%)</title><rect x="39.5" y="1203.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="42.5" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.07%)</title><rect x="39.6" y="1187.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.6" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.07%)</title><rect x="39.6" y="1171.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="42.6" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.07%)</title><rect x="39.6" y="1155.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (119 samples, 0.47%)</title><rect x="41.2" y="1555.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (119 samples, 0.47%)</title><rect x="41.2" y="1539.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.2" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (50 samples, 0.20%)</title><rect x="41.4" y="1523.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="44.4" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.03%)</title><rect x="41.8" y="1507.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="44.8" y="1518.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (20 samples, 0.08%)</title><rect x="42.5" y="1507.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.5" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.03%)</title><rect x="43.1" y="1491.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="46.1" y="1502.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.03%)</title><rect x="43.8" y="1523.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="46.8" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (47 samples, 0.19%)</title><rect x="44.2" y="1523.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="47.2" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.11%)</title><rect x="45.1" y="1507.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.1" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.11%)</title><rect x="45.1" y="1491.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.1" y="1502.0"></text>
</g>
<g>
<title>sys_futex (27 samples, 0.11%)</title><rect x="45.2" y="1475.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="48.2" y="1486.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.10%)</title><rect x="45.3" y="1459.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.3" y="1470.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.10%)</title><rect x="45.3" y="1443.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="48.3" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (22 samples, 0.09%)</title><rect x="45.4" y="1427.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.4" y="1438.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.07%)</title><rect x="45.5" y="1411.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.5" y="1422.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.07%)</title><rect x="45.5" y="1395.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.5" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.06%)</title><rect x="45.6" y="1379.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="48.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,995 samples, 19.79%)</title><rect x="47.0" y="1587.0" width="233.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.0" y="1598.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,995 samples, 19.79%)</title><rect x="47.0" y="1571.0" width="233.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.0" y="1582.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>I2C/C2I adapters (6 samples, 0.02%)</title><rect x="50.2" y="1555.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.2" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (205 samples, 0.81%)</title><rect x="50.4" y="1555.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.03%)</title><rect x="50.4" y="1539.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="50.4" y="1523.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.03%)</title><rect x="50.4" y="1507.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="50.4" y="1491.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.03%)</title><rect x="50.4" y="1475.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.03%)</title><rect x="50.4" y="1459.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.02%)</title><rect x="50.5" y="1443.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.5" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (198 samples, 0.78%)</title><rect x="50.8" y="1539.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.8" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (197 samples, 0.78%)</title><rect x="50.8" y="1523.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.8" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (195 samples, 0.77%)</title><rect x="50.9" y="1507.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.9" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (195 samples, 0.77%)</title><rect x="50.9" y="1491.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.9" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (195 samples, 0.77%)</title><rect x="50.9" y="1475.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (195 samples, 0.77%)</title><rect x="50.9" y="1459.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.9" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (195 samples, 0.77%)</title><rect x="50.9" y="1443.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.9" y="1454.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.put (23 samples, 0.09%)</title><rect x="51.4" y="1427.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.4" y="1438.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.put (19 samples, 0.08%)</title><rect x="51.6" y="1411.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.6" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (15 samples, 0.06%)</title><rect x="51.8" y="1395.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (14 samples, 0.06%)</title><rect x="51.8" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (14 samples, 0.06%)</title><rect x="51.8" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (14 samples, 0.06%)</title><rect x="51.8" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (14 samples, 0.06%)</title><rect x="51.8" y="1331.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (14 samples, 0.06%)</title><rect x="51.8" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.05%)</title><rect x="51.9" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.05%)</title><rect x="51.9" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="52.0" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.0" y="1278.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (155 samples, 0.61%)</title><rect x="52.6" y="1427.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.6" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (155 samples, 0.61%)</title><rect x="52.6" y="1411.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.6" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (154 samples, 0.61%)</title><rect x="52.6" y="1395.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.6" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (146 samples, 0.58%)</title><rect x="52.7" y="1379.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.7" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (142 samples, 0.56%)</title><rect x="52.7" y="1363.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (142 samples, 0.56%)</title><rect x="52.7" y="1347.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.7" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (142 samples, 0.56%)</title><rect x="52.7" y="1331.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.7" y="1342.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libresolv-2.27.so (6 samples, 0.02%)</title><rect x="52.8" y="1315.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="55.8" y="1326.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (22 samples, 0.09%)</title><rect x="53.1" y="1315.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="56.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.25%)</title><rect x="54.1" y="1315.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="57.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.05%)</title><rect x="54.3" y="1299.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="57.3" y="1310.0"></text>
</g>
<g>
<title>__xstat64 (8 samples, 0.03%)</title><rect x="54.6" y="1283.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="57.6" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="54.6" y="1267.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.6" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.03%)</title><rect x="54.6" y="1251.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.6" y="1262.0"></text>
</g>
<g>
<title>sys_newstat (8 samples, 0.03%)</title><rect x="54.6" y="1235.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.6" y="1246.0"></text>
</g>
<g>
<title>SYSC_newstat (8 samples, 0.03%)</title><rect x="54.6" y="1219.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.6" y="1230.0"></text>
</g>
<g>
<title>vfs_statx (7 samples, 0.03%)</title><rect x="54.6" y="1203.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.6" y="1214.0"></text>
</g>
<g>
<title>user_path_at_empty (7 samples, 0.03%)</title><rect x="54.6" y="1187.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.6" y="1198.0"></text>
</g>
<g>
<title>__connect (6 samples, 0.02%)</title><rect x="55.1" y="1299.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="58.1" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="55.1" y="1283.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.1" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="55.1" y="1267.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.1" y="1278.0"></text>
</g>
<g>
<title>sys_connect (6 samples, 0.02%)</title><rect x="55.1" y="1251.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.1" y="1262.0"></text>
</g>
<g>
<title>__open_nocancel (7 samples, 0.03%)</title><rect x="55.4" y="1299.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.4" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="55.4" y="1283.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.4" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="55.4" y="1267.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.4" y="1278.0"></text>
</g>
<g>
<title>sys_openat (7 samples, 0.03%)</title><rect x="55.4" y="1251.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.4" y="1262.0"></text>
</g>
<g>
<title>do_sys_open (7 samples, 0.03%)</title><rect x="55.4" y="1235.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.4" y="1246.0"></text>
</g>
<g>
<title>__sendmmsg (20 samples, 0.08%)</title><rect x="55.8" y="1299.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="58.8" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.08%)</title><rect x="55.8" y="1283.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.8" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.08%)</title><rect x="55.8" y="1267.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.8" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (20 samples, 0.08%)</title><rect x="55.8" y="1251.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.8" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (20 samples, 0.08%)</title><rect x="55.8" y="1235.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.8" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (13 samples, 0.05%)</title><rect x="55.8" y="1219.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.8" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (13 samples, 0.05%)</title><rect x="55.8" y="1203.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.8" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (13 samples, 0.05%)</title><rect x="55.8" y="1187.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.8" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (11 samples, 0.04%)</title><rect x="55.9" y="1171.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.9" y="1182.0"></text>
</g>
<g>
<title>udp_send_skb (9 samples, 0.04%)</title><rect x="56.0" y="1155.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.0" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (9 samples, 0.04%)</title><rect x="56.0" y="1139.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.0" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.04%)</title><rect x="56.0" y="1123.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.0" y="1134.0"></text>
</g>
<g>
<title>ip_output (9 samples, 0.04%)</title><rect x="56.0" y="1107.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.0" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.04%)</title><rect x="56.0" y="1091.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.0" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 0.03%)</title><rect x="56.0" y="1075.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.0" y="1086.0"></text>
</g>
<g>
<title>_cond_resched (7 samples, 0.03%)</title><rect x="56.4" y="1219.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.4" y="1230.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.03%)</title><rect x="56.4" y="1203.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.4" y="1214.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.03%)</title><rect x="56.4" y="1187.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.4" y="1198.0"></text>
</g>
<g>
<title>poll (11 samples, 0.04%)</title><rect x="58.2" y="1315.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="61.2" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="58.3" y="1299.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="58.3" y="1283.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.3" y="1294.0"></text>
</g>
<g>
<title>sys_poll (9 samples, 0.04%)</title><rect x="58.3" y="1267.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.3" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (9 samples, 0.04%)</title><rect x="58.3" y="1251.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.3" y="1262.0"></text>
</g>
<g>
<title>poll_schedule_timeout (7 samples, 0.03%)</title><rect x="58.4" y="1235.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.4" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.02%)</title><rect x="58.4" y="1219.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.4" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.02%)</title><rect x="58.4" y="1203.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.4" y="1214.0"></text>
</g>
<g>
<title>socket (9 samples, 0.04%)</title><rect x="58.9" y="1315.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="61.9" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="58.9" y="1299.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="61.9" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="58.9" y="1283.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.9" y="1294.0"></text>
</g>
<g>
<title>sys_socket (9 samples, 0.04%)</title><rect x="58.9" y="1267.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="1278.0"></text>
</g>
<g>
<title>__sock_create (6 samples, 0.02%)</title><rect x="58.9" y="1251.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (1,130 samples, 4.48%)</title><rect x="60.0" y="1555.0" width="52.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.0" y="1566.0">akka/..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (1,130 samples, 4.48%)</title><rect x="60.0" y="1539.0" width="52.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.0" y="1550.0">akka/..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (1,130 samples, 4.48%)</title><rect x="60.0" y="1523.0" width="52.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.0" y="1534.0">akka/..</text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.poll (13 samples, 0.05%)</title><rect x="60.6" y="1507.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.6" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (13 samples, 0.05%)</title><rect x="60.6" y="1491.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.6" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (1,017 samples, 4.03%)</title><rect x="61.2" y="1507.0" width="47.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.2" y="1518.0">akka..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (1,005 samples, 3.98%)</title><rect x="61.6" y="1491.0" width="47.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.6" y="1502.0">akka..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (1,005 samples, 3.98%)</title><rect x="61.6" y="1475.0" width="47.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.6" y="1486.0">akka..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (145 samples, 0.57%)</title><rect x="62.7" y="1459.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (145 samples, 0.57%)</title><rect x="62.7" y="1443.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (145 samples, 0.57%)</title><rect x="62.7" y="1427.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (145 samples, 0.57%)</title><rect x="62.7" y="1411.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (145 samples, 0.57%)</title><rect x="62.7" y="1395.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (145 samples, 0.57%)</title><rect x="62.7" y="1379.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (145 samples, 0.57%)</title><rect x="62.7" y="1363.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.7" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (145 samples, 0.57%)</title><rect x="62.7" y="1347.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.7" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (128 samples, 0.51%)</title><rect x="62.8" y="1331.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (128 samples, 0.51%)</title><rect x="62.8" y="1315.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (128 samples, 0.51%)</title><rect x="62.8" y="1299.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (128 samples, 0.51%)</title><rect x="62.8" y="1283.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (125 samples, 0.50%)</title><rect x="62.8" y="1267.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (125 samples, 0.50%)</title><rect x="62.8" y="1251.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (125 samples, 0.50%)</title><rect x="62.8" y="1235.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (125 samples, 0.50%)</title><rect x="62.8" y="1219.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (118 samples, 0.47%)</title><rect x="63.1" y="1203.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (116 samples, 0.46%)</title><rect x="63.1" y="1187.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (116 samples, 0.46%)</title><rect x="63.1" y="1171.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 0.09%)</title><rect x="63.3" y="1155.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="66.3" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (83 samples, 0.33%)</title><rect x="64.7" y="1155.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.27%)</title><rect x="65.4" y="1139.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.4" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 0.27%)</title><rect x="65.4" y="1123.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="68.4" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (8 samples, 0.03%)</title><rect x="65.4" y="1107.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="68.4" y="1118.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.03%)</title><rect x="65.4" y="1091.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.4" y="1102.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.03%)</title><rect x="65.4" y="1075.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.4" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.03%)</title><rect x="65.4" y="1059.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.4" y="1070.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.23%)</title><rect x="65.8" y="1107.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="68.8" y="1118.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.23%)</title><rect x="65.8" y="1091.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.8" y="1102.0"></text>
</g>
<g>
<title>futex_wake (59 samples, 0.23%)</title><rect x="65.8" y="1075.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.8" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (53 samples, 0.21%)</title><rect x="66.1" y="1059.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.1" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 0.21%)</title><rect x="66.1" y="1043.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="69.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 0.20%)</title><rect x="66.2" y="1027.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (13 samples, 0.05%)</title><rect x="68.8" y="1331.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (12 samples, 0.05%)</title><rect x="68.9" y="1315.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (12 samples, 0.05%)</title><rect x="68.9" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (12 samples, 0.05%)</title><rect x="68.9" y="1283.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (12 samples, 0.05%)</title><rect x="68.9" y="1267.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (12 samples, 0.05%)</title><rect x="68.9" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (10 samples, 0.04%)</title><rect x="69.0" y="1235.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (10 samples, 0.04%)</title><rect x="69.0" y="1219.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (10 samples, 0.04%)</title><rect x="69.0" y="1203.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.0" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (11 samples, 0.04%)</title><rect x="69.9" y="1459.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.9" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (9 samples, 0.04%)</title><rect x="70.0" y="1443.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (9 samples, 0.04%)</title><rect x="70.0" y="1427.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.0" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (738 samples, 2.92%)</title><rect x="70.4" y="1459.0" width="34.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.4" y="1470.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (737 samples, 2.92%)</title><rect x="70.5" y="1443.0" width="34.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.5" y="1454.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (736 samples, 2.92%)</title><rect x="70.5" y="1427.0" width="34.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.5" y="1438.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (267 samples, 1.06%)</title><rect x="70.8" y="1411.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (249 samples, 0.99%)</title><rect x="71.4" y="1395.0" width="11.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="74.4" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (247 samples, 0.98%)</title><rect x="71.5" y="1379.0" width="11.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="74.5" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (215 samples, 0.85%)</title><rect x="73.0" y="1363.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.0" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (211 samples, 0.84%)</title><rect x="73.0" y="1347.0" width="9.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.0" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (207 samples, 0.82%)</title><rect x="73.2" y="1331.0" width="9.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.2" y="1342.0"></text>
</g>
<g>
<title>ep_poll (192 samples, 0.76%)</title><rect x="73.4" y="1315.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.4" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (44 samples, 0.17%)</title><rect x="73.7" y="1299.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="76.7" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.04%)</title><rect x="73.9" y="1283.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.9" y="1294.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 0.11%)</title><rect x="74.4" y="1283.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="77.4" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (16 samples, 0.06%)</title><rect x="74.9" y="1267.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="77.9" y="1278.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.05%)</title><rect x="75.0" y="1251.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.0" y="1262.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (132 samples, 0.52%)</title><rect x="76.0" y="1299.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.0" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (132 samples, 0.52%)</title><rect x="76.0" y="1283.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="79.0" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (18 samples, 0.07%)</title><rect x="76.4" y="1267.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.4" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.07%)</title><rect x="76.4" y="1251.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.4" y="1262.0"></text>
</g>
<g>
<title>schedule (101 samples, 0.40%)</title><rect x="77.4" y="1267.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.4" y="1278.0"></text>
</g>
<g>
<title>__schedule (99 samples, 0.39%)</title><rect x="77.5" y="1251.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.5" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (98 samples, 0.39%)</title><rect x="77.6" y="1235.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (100 samples, 0.40%)</title><rect x="83.3" y="1411.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.3" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.06%)</title><rect x="83.5" y="1395.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.5" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.05%)</title><rect x="83.5" y="1379.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.5" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (60 samples, 0.24%)</title><rect x="84.4" y="1395.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.4" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (54 samples, 0.21%)</title><rect x="84.7" y="1379.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.16%)</title><rect x="84.9" y="1363.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="87.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.13%)</title><rect x="84.9" y="1347.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="87.9" y="1358.0"></text>
</g>
<g>
<title>__read (29 samples, 0.11%)</title><rect x="85.1" y="1331.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="88.1" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.09%)</title><rect x="85.4" y="1315.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.4" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.09%)</title><rect x="85.4" y="1299.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="88.4" y="1310.0"></text>
</g>
<g>
<title>sys_read (22 samples, 0.09%)</title><rect x="85.4" y="1283.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.4" y="1294.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.08%)</title><rect x="85.6" y="1267.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.6" y="1278.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.06%)</title><rect x="85.6" y="1251.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.6" y="1262.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.06%)</title><rect x="85.6" y="1235.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.6" y="1246.0"></text>
</g>
<g>
<title>pipe_read (13 samples, 0.05%)</title><rect x="85.7" y="1219.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.7" y="1230.0"></text>
</g>
<g>
<title>__read (6 samples, 0.02%)</title><rect x="86.5" y="1347.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="89.5" y="1358.0"></text>
</g>
<g>
<title>__read (10 samples, 0.04%)</title><rect x="86.7" y="1363.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="89.7" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.04%)</title><rect x="86.7" y="1347.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.7" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.04%)</title><rect x="86.7" y="1331.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="89.7" y="1342.0"></text>
</g>
<g>
<title>sys_read (9 samples, 0.04%)</title><rect x="86.8" y="1315.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="89.8" y="1326.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.03%)</title><rect x="86.8" y="1299.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.8" y="1310.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.02%)</title><rect x="86.9" y="1283.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.9" y="1294.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.02%)</title><rect x="86.9" y="1267.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (16 samples, 0.06%)</title><rect x="87.2" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.2" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.02%)</title><rect x="87.2" y="1379.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.02%)</title><rect x="87.2" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (263 samples, 1.04%)</title><rect x="87.9" y="1411.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (6 samples, 0.02%)</title><rect x="88.7" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.7" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (16 samples, 0.06%)</title><rect x="89.0" y="1395.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.05%)</title><rect x="89.2" y="1379.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.2" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (220 samples, 0.87%)</title><rect x="89.8" y="1395.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.8" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (213 samples, 0.84%)</title><rect x="90.1" y="1379.0" width="10.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="93.1" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 0.76%)</title><rect x="91.1" y="1363.0" width="9.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.1" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (188 samples, 0.74%)</title><rect x="91.1" y="1347.0" width="8.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="94.1" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (171 samples, 0.68%)</title><rect x="91.9" y="1331.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.9" y="1342.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.06%)</title><rect x="94.4" y="1315.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.4" y="1326.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.06%)</title><rect x="94.4" y="1299.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.4" y="1310.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.05%)</title><rect x="94.5" y="1283.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="97.5" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (45 samples, 0.18%)</title><rect x="95.2" y="1315.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.2" y="1326.0"></text>
</g>
<g>
<title>sock_poll (44 samples, 0.17%)</title><rect x="95.2" y="1299.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.2" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (29 samples, 0.11%)</title><rect x="95.9" y="1283.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.9" y="1294.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (22 samples, 0.09%)</title><rect x="96.2" y="1267.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="99.2" y="1278.0"></text>
</g>
<g>
<title>add_wait_queue (8 samples, 0.03%)</title><rect x="96.2" y="1251.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.2" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.03%)</title><rect x="96.2" y="1235.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.2" y="1246.0"></text>
</g>
<g>
<title>kmem_cache_alloc (14 samples, 0.06%)</title><rect x="96.6" y="1251.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.6" y="1262.0"></text>
</g>
<g>
<title>ep_remove (31 samples, 0.12%)</title><rect x="97.3" y="1315.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.3" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (18 samples, 0.07%)</title><rect x="97.6" y="1299.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.6" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.03%)</title><rect x="97.9" y="1283.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.9" y="1294.0"></text>
</g>
<g>
<title>rb_erase_cached (7 samples, 0.03%)</title><rect x="98.5" y="1299.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.5" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_alloc (16 samples, 0.06%)</title><rect x="98.8" y="1315.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.8" y="1326.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.02%)</title><rect x="99.2" y="1299.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.2" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (19 samples, 0.08%)</title><rect x="100.2" y="1411.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.2" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (19 samples, 0.08%)</title><rect x="100.2" y="1395.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.2" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (14 samples, 0.06%)</title><rect x="100.5" y="1379.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.06%)</title><rect x="100.5" y="1363.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.06%)</title><rect x="100.5" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (7 samples, 0.03%)</title><rect x="101.1" y="1411.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.1" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (6 samples, 0.02%)</title><rect x="101.2" y="1395.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.2" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.02%)</title><rect x="101.2" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.02%)</title><rect x="101.2" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.02%)</title><rect x="101.2" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.2" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (74 samples, 0.29%)</title><rect x="101.5" y="1411.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.5" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (13 samples, 0.05%)</title><rect x="102.2" y="1395.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.2" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (11 samples, 0.04%)</title><rect x="102.3" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.3" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (11 samples, 0.04%)</title><rect x="102.3" y="1363.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="105.3" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="102.5" y="1347.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.5" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="102.5" y="1331.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (45 samples, 0.18%)</title><rect x="102.8" y="1395.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (45 samples, 0.18%)</title><rect x="102.8" y="1379.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.8" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (45 samples, 0.18%)</title><rect x="102.8" y="1363.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.8" y="1374.0"></text>
</g>
<g>
<title>close (45 samples, 0.18%)</title><rect x="102.8" y="1347.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="105.8" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.17%)</title><rect x="103.0" y="1331.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.0" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.17%)</title><rect x="103.0" y="1315.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (42 samples, 0.17%)</title><rect x="103.0" y="1299.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.0" y="1310.0"></text>
</g>
<g>
<title>task_work_run (41 samples, 0.16%)</title><rect x="103.0" y="1283.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.0" y="1294.0"></text>
</g>
<g>
<title>____fput (41 samples, 0.16%)</title><rect x="103.0" y="1267.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.0" y="1278.0"></text>
</g>
<g>
<title>__fput (40 samples, 0.16%)</title><rect x="103.0" y="1251.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.0" y="1262.0"></text>
</g>
<g>
<title>dput (7 samples, 0.03%)</title><rect x="103.1" y="1235.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="106.1" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (6 samples, 0.02%)</title><rect x="103.1" y="1219.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.1" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (6 samples, 0.02%)</title><rect x="103.1" y="1203.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.1" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (6 samples, 0.02%)</title><rect x="103.1" y="1187.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.1" y="1198.0"></text>
</g>
<g>
<title>sock_close (30 samples, 0.12%)</title><rect x="103.5" y="1235.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.5" y="1246.0"></text>
</g>
<g>
<title>__sock_release (30 samples, 0.12%)</title><rect x="103.5" y="1219.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.5" y="1230.0"></text>
</g>
<g>
<title>inet6_release (30 samples, 0.12%)</title><rect x="103.5" y="1203.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.5" y="1214.0"></text>
</g>
<g>
<title>inet_release (29 samples, 0.11%)</title><rect x="103.5" y="1187.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.5" y="1198.0"></text>
</g>
<g>
<title>tcp_close (29 samples, 0.11%)</title><rect x="103.5" y="1171.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.5" y="1182.0"></text>
</g>
<g>
<title>tcp_disconnect (20 samples, 0.08%)</title><rect x="103.9" y="1155.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.9" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (16 samples, 0.06%)</title><rect x="103.9" y="1139.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.9" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 0.06%)</title><rect x="104.0" y="1123.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.0" y="1134.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 0.04%)</title><rect x="104.1" y="1107.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="107.1" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.03%)</title><rect x="104.1" y="1091.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.1" y="1102.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.03%)</title><rect x="104.1" y="1075.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.1" y="1086.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 0.03%)</title><rect x="104.1" y="1059.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.1" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.02%)</title><rect x="104.2" y="1043.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="107.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (10 samples, 0.04%)</title><rect x="105.0" y="1459.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.0" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (10 samples, 0.04%)</title><rect x="105.0" y="1443.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.0" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (10 samples, 0.04%)</title><rect x="105.0" y="1427.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.0" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (66 samples, 0.26%)</title><rect x="105.5" y="1459.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (66 samples, 0.26%)</title><rect x="105.5" y="1443.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.5" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (22 samples, 0.09%)</title><rect x="105.5" y="1427.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.5" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (20 samples, 0.08%)</title><rect x="105.6" y="1411.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.6" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (14 samples, 0.06%)</title><rect x="105.9" y="1395.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (12 samples, 0.05%)</title><rect x="106.6" y="1427.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.6" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.&lt;init&gt; (9 samples, 0.04%)</title><rect x="106.7" y="1411.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.7" y="1422.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (9 samples, 0.04%)</title><rect x="106.7" y="1395.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.7" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (9 samples, 0.04%)</title><rect x="106.7" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (9 samples, 0.04%)</title><rect x="106.7" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.7" y="1374.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.iterator (19 samples, 0.08%)</title><rect x="107.1" y="1427.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.1" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeyIterator.&lt;init&gt; (15 samples, 0.06%)</title><rect x="107.3" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.&lt;init&gt; (12 samples, 0.05%)</title><rect x="107.4" y="1395.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.keySet (12 samples, 0.05%)</title><rect x="108.0" y="1427.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.0" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.&lt;init&gt; (8 samples, 0.03%)</title><rect x="108.2" y="1411.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.2" y="1422.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (8 samples, 0.03%)</title><rect x="108.2" y="1395.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.2" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (8 samples, 0.03%)</title><rect x="108.2" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.2" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (81 samples, 0.32%)</title><rect x="108.8" y="1507.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.8" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (28 samples, 0.11%)</title><rect x="108.9" y="1491.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.9" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (11 samples, 0.04%)</title><rect x="108.9" y="1475.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.9" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.04%)</title><rect x="108.9" y="1459.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.04%)</title><rect x="108.9" y="1443.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.04%)</title><rect x="108.9" y="1427.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.04%)</title><rect x="108.9" y="1411.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (11 samples, 0.04%)</title><rect x="108.9" y="1395.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (11 samples, 0.04%)</title><rect x="108.9" y="1379.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.9" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (11 samples, 0.04%)</title><rect x="108.9" y="1363.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.04%)</title><rect x="108.9" y="1347.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.04%)</title><rect x="108.9" y="1331.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.04%)</title><rect x="108.9" y="1315.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.04%)</title><rect x="108.9" y="1299.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.03%)</title><rect x="108.9" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.03%)</title><rect x="108.9" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.03%)</title><rect x="108.9" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.03%)</title><rect x="108.9" y="1235.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.03%)</title><rect x="108.9" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.03%)</title><rect x="108.9" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.03%)</title><rect x="108.9" y="1187.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.9" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (15 samples, 0.06%)</title><rect x="109.5" y="1475.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.5" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (9 samples, 0.04%)</title><rect x="109.7" y="1459.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.7" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (8 samples, 0.03%)</title><rect x="109.7" y="1443.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (8 samples, 0.03%)</title><rect x="109.7" y="1427.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.02%)</title><rect x="109.7" y="1411.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.7" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$6.tryRun (14 samples, 0.06%)</title><rect x="110.2" y="1491.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.2" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (12 samples, 0.05%)</title><rect x="110.3" y="1475.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.3" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (7 samples, 0.03%)</title><rect x="110.3" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.3" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (6 samples, 0.02%)</title><rect x="110.3" y="1443.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.3" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (21 samples, 0.08%)</title><rect x="110.8" y="1491.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.8" y="1502.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (20 samples, 0.08%)</title><rect x="110.9" y="1475.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.9" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (20 samples, 0.08%)</title><rect x="110.9" y="1459.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.9" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$664/1858408873.apply$mcV$sp (8 samples, 0.03%)</title><rect x="110.9" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.9" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$1 (8 samples, 0.03%)</title><rect x="110.9" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.9" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (7 samples, 0.03%)</title><rect x="110.9" y="1411.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.9" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (7 samples, 0.03%)</title><rect x="110.9" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.03%)</title><rect x="110.9" y="1379.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.03%)</title><rect x="110.9" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$665/860059484.apply$mcV$sp (12 samples, 0.05%)</title><rect x="111.2" y="1443.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.2" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (12 samples, 0.05%)</title><rect x="111.2" y="1427.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.2" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (12 samples, 0.05%)</title><rect x="111.2" y="1411.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.2" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (12 samples, 0.05%)</title><rect x="111.2" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.2" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (12 samples, 0.05%)</title><rect x="111.2" y="1379.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.2" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (16 samples, 0.06%)</title><rect x="111.8" y="1491.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.8" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1351/1816365251.apply$mcV$sp (16 samples, 0.06%)</title><rect x="111.8" y="1475.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.8" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (16 samples, 0.06%)</title><rect x="111.8" y="1459.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.8" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (16 samples, 0.06%)</title><rect x="111.8" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (16 samples, 0.06%)</title><rect x="111.8" y="1427.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (16 samples, 0.06%)</title><rect x="111.8" y="1411.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (16 samples, 0.06%)</title><rect x="111.8" y="1395.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (16 samples, 0.06%)</title><rect x="111.8" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (16 samples, 0.06%)</title><rect x="111.8" y="1363.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (16 samples, 0.06%)</title><rect x="111.8" y="1347.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.8" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (16 samples, 0.06%)</title><rect x="111.8" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.06%)</title><rect x="111.8" y="1315.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (15 samples, 0.06%)</title><rect x="111.8" y="1299.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (15 samples, 0.06%)</title><rect x="111.8" y="1283.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (15 samples, 0.06%)</title><rect x="111.8" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.06%)</title><rect x="111.8" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.06%)</title><rect x="111.8" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.06%)</title><rect x="111.8" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (15 samples, 0.06%)</title><rect x="111.8" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.06%)</title><rect x="111.8" y="1187.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.06%)</title><rect x="111.8" y="1171.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.06%)</title><rect x="111.8" y="1155.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.8" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.05%)</title><rect x="111.9" y="1139.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="114.9" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="111.9" y="1123.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="114.9" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.04%)</title><rect x="111.9" y="1107.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.9" y="1118.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.03%)</title><rect x="112.1" y="1091.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="115.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.03%)</title><rect x="112.1" y="1075.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.1" y="1086.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.03%)</title><rect x="112.1" y="1059.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.1" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.03%)</title><rect x="112.1" y="1043.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.1" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.02%)</title><rect x="112.2" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="112.2" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.2" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1320/454109299.run (3,275 samples, 12.98%)</title><rect x="112.9" y="1555.0" width="153.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.9" y="1566.0">com/vrg/rapid/Membe..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (3,274 samples, 12.97%)</title><rect x="112.9" y="1539.0" width="153.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.9" y="1550.0">com/vrg/rapid/Membe..</text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (121 samples, 0.48%)</title><rect x="113.0" y="1523.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.0" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (121 samples, 0.48%)</title><rect x="113.0" y="1507.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (121 samples, 0.48%)</title><rect x="113.0" y="1491.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.0" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (118 samples, 0.47%)</title><rect x="113.2" y="1475.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (116 samples, 0.46%)</title><rect x="113.2" y="1459.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (115 samples, 0.46%)</title><rect x="113.3" y="1443.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.3" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (115 samples, 0.46%)</title><rect x="113.3" y="1427.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.3" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (108 samples, 0.43%)</title><rect x="113.5" y="1411.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (108 samples, 0.43%)</title><rect x="113.5" y="1395.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (108 samples, 0.43%)</title><rect x="113.5" y="1379.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.5" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (108 samples, 0.43%)</title><rect x="113.5" y="1363.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (108 samples, 0.43%)</title><rect x="113.5" y="1347.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (108 samples, 0.43%)</title><rect x="113.5" y="1331.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (108 samples, 0.43%)</title><rect x="113.5" y="1315.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (108 samples, 0.43%)</title><rect x="113.5" y="1299.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (108 samples, 0.43%)</title><rect x="113.5" y="1283.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (105 samples, 0.42%)</title><rect x="113.6" y="1267.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (105 samples, 0.42%)</title><rect x="113.6" y="1251.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (105 samples, 0.42%)</title><rect x="113.6" y="1235.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.6" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.05%)</title><rect x="113.8" y="1219.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="116.8" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (88 samples, 0.35%)</title><rect x="114.4" y="1219.0" width="4.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="117.4" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 0.31%)</title><rect x="114.8" y="1203.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 0.31%)</title><rect x="114.8" y="1187.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="117.8" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.03%)</title><rect x="115.0" y="1171.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="118.0" y="1182.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.03%)</title><rect x="115.0" y="1155.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="118.0" y="1166.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.02%)</title><rect x="115.1" y="1139.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.1" y="1150.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.02%)</title><rect x="115.1" y="1123.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.1" y="1134.0"></text>
</g>
<g>
<title>sys_futex (67 samples, 0.27%)</title><rect x="115.4" y="1171.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.4" y="1182.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.26%)</title><rect x="115.4" y="1155.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.4" y="1166.0"></text>
</g>
<g>
<title>futex_wake (65 samples, 0.26%)</title><rect x="115.4" y="1139.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.4" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (57 samples, 0.23%)</title><rect x="115.8" y="1123.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.8" y="1134.0"></text>
</g>
<g>
<title>try_to_wake_up (57 samples, 0.23%)</title><rect x="115.8" y="1107.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="118.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (56 samples, 0.22%)</title><rect x="115.8" y="1091.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.8" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (19 samples, 0.08%)</title><rect x="118.7" y="1523.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.7" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (19 samples, 0.08%)</title><rect x="118.7" y="1507.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.7" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (19 samples, 0.08%)</title><rect x="118.7" y="1491.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.7" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (19 samples, 0.08%)</title><rect x="118.7" y="1475.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.7" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (19 samples, 0.08%)</title><rect x="118.7" y="1459.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.7" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (12 samples, 0.05%)</title><rect x="119.0" y="1443.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.0" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (12 samples, 0.05%)</title><rect x="119.0" y="1427.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.0" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (12 samples, 0.05%)</title><rect x="119.0" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.0" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (12 samples, 0.05%)</title><rect x="119.0" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.0" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (12 samples, 0.05%)</title><rect x="119.0" y="1379.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.0" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (7 samples, 0.03%)</title><rect x="119.1" y="1363.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.1" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (6 samples, 0.02%)</title><rect x="119.1" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.1" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getCurrentConfigurationId (18 samples, 0.07%)</title><rect x="119.6" y="1523.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.03%)</title><rect x="119.9" y="1507.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.9" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.03%)</title><rect x="119.9" y="1491.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.9" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.02%)</title><rect x="120.0" y="1475.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.0" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.invalidateFailingEdges (2,795 samples, 11.08%)</title><rect x="120.6" y="1523.0" width="130.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.6" y="1534.0">com/vrg/rapid/Mu..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.copyOf (86 samples, 0.34%)</title><rect x="122.9" y="1507.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.9" y="1518.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.construct (6 samples, 0.02%)</title><rect x="123.1" y="1491.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.1" y="1502.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (75 samples, 0.30%)</title><rect x="123.4" y="1491.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.4" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (56 samples, 0.22%)</title><rect x="123.6" y="1475.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.6" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (53 samples, 0.21%)</title><rect x="123.8" y="1459.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.8" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.05%)</title><rect x="126.2" y="1475.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.2" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.05%)</title><rect x="126.2" y="1459.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.2" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (11 samples, 0.04%)</title><rect x="126.3" y="1443.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.3" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (11 samples, 0.04%)</title><rect x="126.3" y="1427.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.3" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (1,348 samples, 5.34%)</title><rect x="127.0" y="1507.0" width="63.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.0" y="1518.0">com/vrg..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (1,341 samples, 5.31%)</title><rect x="127.0" y="1491.0" width="62.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.0" y="1502.0">com/vr..</text>
</g>
<g>
<title>java/util/TreeSet.lower (1,321 samples, 5.23%)</title><rect x="128.0" y="1475.0" width="61.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.0" y="1486.0">java/u..</text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (1,317 samples, 5.22%)</title><rect x="128.2" y="1459.0" width="61.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.2" y="1470.0">java/u..</text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (1,312 samples, 5.20%)</title><rect x="128.2" y="1443.0" width="61.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.2" y="1454.0">java/u..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (25 samples, 0.10%)</title><rect x="129.3" y="1427.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.3" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1,261 samples, 5.00%)</title><rect x="130.5" y="1427.0" width="58.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.5" y="1438.0">java/u..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1,170 samples, 4.64%)</title><rect x="134.6" y="1411.0" width="54.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.6" y="1422.0">com/v..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1,113 samples, 4.41%)</title><rect x="137.1" y="1395.0" width="52.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.1" y="1406.0">com/v..</text>
</g>
<g>
<title>async_page_fault (7 samples, 0.03%)</title><rect x="139.4" y="1379.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.4" y="1390.0"></text>
</g>
<g>
<title>do_async_page_fault (7 samples, 0.03%)</title><rect x="139.4" y="1363.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="142.4" y="1374.0"></text>
</g>
<g>
<title>do_page_fault (7 samples, 0.03%)</title><rect x="139.4" y="1347.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.4" y="1358.0"></text>
</g>
<g>
<title>__do_page_fault (7 samples, 0.03%)</title><rect x="139.4" y="1331.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.4" y="1342.0"></text>
</g>
<g>
<title>handle_mm_fault (7 samples, 0.03%)</title><rect x="139.4" y="1315.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.4" y="1326.0"></text>
</g>
<g>
<title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="139.4" y="1299.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="142.4" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (45 samples, 0.18%)</title><rect x="139.8" y="1379.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/Long.compare (20 samples, 0.08%)</title><rect x="141.9" y="1379.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.11%)</title><rect x="142.9" y="1379.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.11%)</title><rect x="142.9" y="1363.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.9" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1282/2073285194.get$Lambda (13 samples, 0.05%)</title><rect x="142.9" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1283/1328333092.get$Lambda (16 samples, 0.06%)</title><rect x="143.5" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.5" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (959 samples, 3.80%)</title><rect x="144.2" y="1379.0" width="44.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.2" y="1390.0">java..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (154 samples, 0.61%)</title><rect x="169.3" y="1363.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (18 samples, 0.07%)</title><rect x="172.7" y="1347.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (13 samples, 0.05%)</title><rect x="172.8" y="1331.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (55 samples, 0.22%)</title><rect x="173.7" y="1347.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (36 samples, 0.14%)</title><rect x="174.6" y="1331.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.6" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (36 samples, 0.14%)</title><rect x="174.6" y="1315.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.6" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (34 samples, 0.13%)</title><rect x="176.5" y="1363.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.5" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (215 samples, 0.85%)</title><rect x="178.1" y="1363.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.1" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (179 samples, 0.71%)</title><rect x="179.7" y="1347.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (13 samples, 0.05%)</title><rect x="180.8" y="1331.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (140 samples, 0.55%)</title><rect x="181.4" y="1331.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.4" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (121 samples, 0.48%)</title><rect x="182.3" y="1315.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.3" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (121 samples, 0.48%)</title><rect x="182.3" y="1299.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.3" y="1310.0"></text>
</g>
<g>
<title>ret_from_intr (11 samples, 0.04%)</title><rect x="188.1" y="1363.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.1" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (11 samples, 0.04%)</title><rect x="188.1" y="1347.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.1" y="1358.0"></text>
</g>
<g>
<title>irq_exit (11 samples, 0.04%)</title><rect x="188.1" y="1331.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="191.1" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 0.04%)</title><rect x="188.1" y="1315.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.1" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.04%)</title><rect x="188.1" y="1299.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.1" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (11 samples, 0.04%)</title><rect x="188.1" y="1283.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="191.1" y="1294.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (11 samples, 0.04%)</title><rect x="188.1" y="1267.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="191.1" y="1278.0"></text>
</g>
<g>
<title>napi_gro_receive (8 samples, 0.03%)</title><rect x="188.3" y="1251.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.3" y="1262.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (7 samples, 0.03%)</title><rect x="188.3" y="1235.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.3" y="1246.0"></text>
</g>
<g>
<title>__netif_receive_skb (7 samples, 0.03%)</title><rect x="188.3" y="1219.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.3" y="1230.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.03%)</title><rect x="188.3" y="1203.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.3" y="1214.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 0.03%)</title><rect x="188.3" y="1187.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.3" y="1198.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 0.02%)</title><rect x="188.3" y="1171.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.3" y="1182.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.03%)</title><rect x="188.8" y="1363.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="191.8" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getObserversOf (280 samples, 1.11%)</title><rect x="190.0" y="1507.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (20 samples, 0.08%)</title><rect x="190.9" y="1491.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.9" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (18 samples, 0.07%)</title><rect x="191.0" y="1475.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.0" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (17 samples, 0.07%)</title><rect x="191.0" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (17 samples, 0.07%)</title><rect x="191.0" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.0" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (16 samples, 0.06%)</title><rect x="191.1" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.1" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (16 samples, 0.06%)</title><rect x="191.1" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.1" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (15 samples, 0.06%)</title><rect x="191.1" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.06%)</title><rect x="191.1" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (15 samples, 0.06%)</title><rect x="191.1" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (15 samples, 0.06%)</title><rect x="191.1" y="1347.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.04%)</title><rect x="191.3" y="1331.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.3" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.02%)</title><rect x="191.9" y="1491.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.9" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.02%)</title><rect x="191.9" y="1475.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.9" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (228 samples, 0.90%)</title><rect x="192.2" y="1491.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.2" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (227 samples, 0.90%)</title><rect x="192.2" y="1475.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.2" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (226 samples, 0.90%)</title><rect x="192.3" y="1459.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.3" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (213 samples, 0.84%)</title><rect x="192.8" y="1443.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.8" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (208 samples, 0.82%)</title><rect x="193.1" y="1427.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.1" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (206 samples, 0.82%)</title><rect x="193.2" y="1411.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.2" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (10 samples, 0.04%)</title><rect x="193.5" y="1395.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="194.2" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="194.2" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (177 samples, 0.70%)</title><rect x="194.5" y="1395.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.5" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (88 samples, 0.35%)</title><rect x="196.9" y="1379.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.9" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (58 samples, 0.23%)</title><rect x="197.2" y="1363.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.2" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (56 samples, 0.22%)</title><rect x="197.2" y="1347.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (24 samples, 0.10%)</title><rect x="199.9" y="1363.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (10 samples, 0.04%)</title><rect x="200.5" y="1347.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.5" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (10 samples, 0.04%)</title><rect x="200.5" y="1331.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.5" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (9 samples, 0.04%)</title><rect x="201.1" y="1379.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.1" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (22 samples, 0.09%)</title><rect x="201.5" y="1379.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.5" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (12 samples, 0.05%)</title><rect x="202.0" y="1363.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.0" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (7 samples, 0.03%)</title><rect x="202.2" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (828 samples, 3.28%)</title><rect x="203.1" y="1507.0" width="38.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.1" y="1518.0">com..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (6 samples, 0.02%)</title><rect x="203.4" y="1491.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.4" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (806 samples, 3.19%)</title><rect x="203.7" y="1491.0" width="37.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.7" y="1502.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (806 samples, 3.19%)</title><rect x="203.7" y="1475.0" width="37.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.7" y="1486.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (806 samples, 3.19%)</title><rect x="203.7" y="1459.0" width="37.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.7" y="1470.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (805 samples, 3.19%)</title><rect x="203.8" y="1443.0" width="37.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.8" y="1454.0">jav..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (762 samples, 3.02%)</title><rect x="205.7" y="1427.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.7" y="1438.0">com..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (724 samples, 2.87%)</title><rect x="207.5" y="1411.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.5" y="1422.0">co..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (26 samples, 0.10%)</title><rect x="208.4" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/Long.compare (10 samples, 0.04%)</title><rect x="209.6" y="1395.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.04%)</title><rect x="210.1" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="210.1" y="1379.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="213.1" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$1283/1328333092.get$Lambda (6 samples, 0.02%)</title><rect x="210.3" y="1363.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (657 samples, 2.60%)</title><rect x="210.6" y="1395.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.6" y="1406.0">ja..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (252 samples, 1.00%)</title><rect x="220.2" y="1379.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.2" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (127 samples, 0.50%)</title><rect x="221.5" y="1363.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.5" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (121 samples, 0.48%)</title><rect x="221.7" y="1347.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.7" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (87 samples, 0.34%)</title><rect x="227.7" y="1363.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.7" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (63 samples, 0.25%)</title><rect x="228.8" y="1347.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.8" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (62 samples, 0.25%)</title><rect x="228.8" y="1331.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.8" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (15 samples, 0.06%)</title><rect x="232.0" y="1379.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (171 samples, 0.68%)</title><rect x="232.7" y="1379.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.7" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (143 samples, 0.57%)</title><rect x="234.0" y="1363.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.0" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (17 samples, 0.07%)</title><rect x="234.3" y="1347.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.3" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.partialHash (12 samples, 0.05%)</title><rect x="234.5" y="1331.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.5" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/Internal.partialHash (12 samples, 0.05%)</title><rect x="234.5" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.5" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (118 samples, 0.47%)</title><rect x="235.1" y="1347.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.1" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (110 samples, 0.44%)</title><rect x="235.4" y="1331.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.4" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (97 samples, 0.38%)</title><rect x="235.4" y="1315.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.05%)</title><rect x="240.0" y="1315.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.05%)</title><rect x="240.0" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (12 samples, 0.05%)</title><rect x="240.0" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.0" y="1294.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.04%)</title><rect x="240.9" y="1379.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="243.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.03%)</title><rect x="241.4" y="1491.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.4" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.03%)</title><rect x="241.4" y="1475.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.03%)</title><rect x="241.4" y="1459.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.4" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (41 samples, 0.16%)</title><rect x="241.8" y="1507.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.8" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (26 samples, 0.10%)</title><rect x="242.2" y="1491.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.2" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (10 samples, 0.04%)</title><rect x="242.6" y="1475.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.6" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (6 samples, 0.02%)</title><rect x="242.7" y="1459.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.7" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (7 samples, 0.03%)</title><rect x="243.4" y="1491.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.4" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.03%)</title><rect x="243.4" y="1475.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.4" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (6 samples, 0.02%)</title><rect x="244.0" y="1507.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.0" y="1518.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (140 samples, 0.55%)</title><rect x="244.7" y="1507.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.7" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (139 samples, 0.55%)</title><rect x="244.7" y="1491.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.7" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (126 samples, 0.50%)</title><rect x="244.7" y="1475.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.7" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (17 samples, 0.07%)</title><rect x="249.6" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.05%)</title><rect x="250.6" y="1475.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.6" y="1486.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (10 samples, 0.04%)</title><rect x="251.3" y="1523.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="1534.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (8 samples, 0.03%)</title><rect x="251.4" y="1507.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.4" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toSet (6 samples, 0.02%)</title><rect x="251.9" y="1523.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.9" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (294 samples, 1.17%)</title><rect x="252.2" y="1523.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.2" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (292 samples, 1.16%)</title><rect x="252.3" y="1507.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.3" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (6 samples, 0.02%)</title><rect x="252.3" y="1491.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.3" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (286 samples, 1.13%)</title><rect x="252.5" y="1491.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.5" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (285 samples, 1.13%)</title><rect x="252.6" y="1475.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.6" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (266 samples, 1.05%)</title><rect x="252.6" y="1459.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.6" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (256 samples, 1.01%)</title><rect x="252.6" y="1443.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.6" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (255 samples, 1.01%)</title><rect x="252.6" y="1427.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.6" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1321/229658252.test (206 samples, 0.82%)</title><rect x="252.7" y="1411.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.7" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$6 (202 samples, 0.80%)</title><rect x="252.8" y="1395.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.filterAlertMessages (202 samples, 0.80%)</title><rect x="252.8" y="1379.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.8" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (168 samples, 0.67%)</title><rect x="253.4" y="1363.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.4" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (166 samples, 0.66%)</title><rect x="253.4" y="1347.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.4" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (166 samples, 0.66%)</title><rect x="253.4" y="1331.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.4" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (166 samples, 0.66%)</title><rect x="253.4" y="1315.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.4" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (166 samples, 0.66%)</title><rect x="253.4" y="1299.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.4" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (158 samples, 0.63%)</title><rect x="253.7" y="1283.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.7" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (141 samples, 0.56%)</title><rect x="254.5" y="1267.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.5" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (130 samples, 0.52%)</title><rect x="255.0" y="1251.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.0" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (30 samples, 0.12%)</title><rect x="257.9" y="1235.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.9" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (11 samples, 0.04%)</title><rect x="258.1" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.1" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (9 samples, 0.04%)</title><rect x="258.1" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.1" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (13 samples, 0.05%)</title><rect x="258.7" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.7" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (10 samples, 0.04%)</title><rect x="258.8" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.8" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (10 samples, 0.04%)</title><rect x="258.8" y="1187.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (32 samples, 0.13%)</title><rect x="259.5" y="1235.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.5" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (30 samples, 0.12%)</title><rect x="259.6" y="1219.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.6" y="1230.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (26 samples, 0.10%)</title><rect x="259.8" y="1203.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.8" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (23 samples, 0.09%)</title><rect x="259.9" y="1187.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.9" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (20 samples, 0.08%)</title><rect x="259.9" y="1171.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.04%)</title><rect x="261.9" y="1363.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.02%)</title><rect x="262.0" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.0" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (47 samples, 0.19%)</title><rect x="262.4" y="1411.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.4" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1322/2097900142.apply (36 samples, 0.14%)</title><rect x="262.4" y="1395.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.4" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (36 samples, 0.14%)</title><rect x="262.4" y="1379.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.4" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (35 samples, 0.14%)</title><rect x="262.4" y="1363.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.4" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (35 samples, 0.14%)</title><rect x="262.4" y="1347.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="265.4" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector$$Lambda$1324/1516250326.accept (35 samples, 0.14%)</title><rect x="262.4" y="1331.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.4" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.lambda$aggregateForProposal$0 (35 samples, 0.14%)</title><rect x="262.4" y="1315.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.4" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (32 samples, 0.13%)</title><rect x="262.5" y="1299.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.5" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (18 samples, 0.07%)</title><rect x="262.8" y="1283.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.8" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (6 samples, 0.02%)</title><rect x="263.7" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.7" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (11 samples, 0.04%)</title><rect x="264.0" y="1395.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.0" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (18 samples, 0.07%)</title><rect x="265.0" y="1459.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.0" y="1470.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.03%)</title><rect x="265.3" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.3" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1361/2079143386.run (35 samples, 0.14%)</title><rect x="266.1" y="1555.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.1" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (35 samples, 0.14%)</title><rect x="266.1" y="1539.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.1" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (31 samples, 0.12%)</title><rect x="266.2" y="1523.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.2" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (26 samples, 0.10%)</title><rect x="266.2" y="1507.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.2" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$1288/1701867757.accept (19 samples, 0.08%)</title><rect x="266.3" y="1491.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.3" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (19 samples, 0.08%)</title><rect x="266.3" y="1475.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.3" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1287/1279072022.accept (17 samples, 0.07%)</title><rect x="266.3" y="1459.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.3" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (17 samples, 0.07%)</title><rect x="266.3" y="1443.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.3" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (14 samples, 0.06%)</title><rect x="266.5" y="1427.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.5" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (11 samples, 0.04%)</title><rect x="266.5" y="1411.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.5" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (10 samples, 0.04%)</title><rect x="266.5" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.5" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (10 samples, 0.04%)</title><rect x="266.5" y="1379.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.5" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (10 samples, 0.04%)</title><rect x="266.5" y="1363.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.5" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (10 samples, 0.04%)</title><rect x="266.5" y="1347.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.5" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (8 samples, 0.03%)</title><rect x="266.6" y="1331.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.6" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (7 samples, 0.03%)</title><rect x="266.7" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (8 samples, 0.03%)</title><rect x="267.7" y="1555.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.02%)</title><rect x="267.8" y="1539.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (87 samples, 0.34%)</title><rect x="268.1" y="1555.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (85 samples, 0.34%)</title><rect x="268.1" y="1539.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (85 samples, 0.34%)</title><rect x="268.1" y="1523.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (7 samples, 0.03%)</title><rect x="268.1" y="1507.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.1" y="1518.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.sendHeartBeatHttpMessaging (7 samples, 0.03%)</title><rect x="268.1" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.1" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (7 samples, 0.03%)</title><rect x="268.1" y="1475.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.1" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (7 samples, 0.03%)</title><rect x="268.1" y="1459.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.1" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$AlertBatcher.run (77 samples, 0.31%)</title><rect x="268.4" y="1507.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (75 samples, 0.30%)</title><rect x="268.5" y="1491.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.5" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (70 samples, 0.28%)</title><rect x="268.6" y="1475.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (70 samples, 0.28%)</title><rect x="268.6" y="1459.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest (6 samples, 0.02%)</title><rect x="268.8" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.8" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequestImpl (6 samples, 0.02%)</title><rect x="268.8" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.8" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (37 samples, 0.15%)</title><rect x="269.2" y="1443.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.2" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (37 samples, 0.15%)</title><rect x="269.2" y="1427.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.2" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (36 samples, 0.14%)</title><rect x="269.2" y="1411.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (35 samples, 0.14%)</title><rect x="269.3" y="1395.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.3" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (35 samples, 0.14%)</title><rect x="269.3" y="1379.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.3" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (29 samples, 0.11%)</title><rect x="269.3" y="1363.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.3" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$390/933364435.apply (26 samples, 0.10%)</title><rect x="269.3" y="1347.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (25 samples, 0.10%)</title><rect x="269.3" y="1331.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (25 samples, 0.10%)</title><rect x="269.3" y="1315.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (25 samples, 0.10%)</title><rect x="269.3" y="1299.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (21 samples, 0.08%)</title><rect x="269.3" y="1283.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (18 samples, 0.07%)</title><rect x="269.3" y="1267.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (6 samples, 0.02%)</title><rect x="269.3" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (6 samples, 0.02%)</title><rect x="269.3" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (12 samples, 0.05%)</title><rect x="269.6" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (11 samples, 0.04%)</title><rect x="269.7" y="1235.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.7" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (6 samples, 0.02%)</title><rect x="270.6" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.6" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (16 samples, 0.06%)</title><rect x="270.9" y="1443.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (16 samples, 0.06%)</title><rect x="270.9" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.9" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (16 samples, 0.06%)</title><rect x="270.9" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.9" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (16 samples, 0.06%)</title><rect x="270.9" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.writeTo (16 samples, 0.06%)</title><rect x="270.9" y="1379.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.9" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (14 samples, 0.06%)</title><rect x="271.0" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (14 samples, 0.06%)</title><rect x="271.0" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.writeTo (14 samples, 0.06%)</title><rect x="271.0" y="1331.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.0" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (12 samples, 0.05%)</title><rect x="271.0" y="1315.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.0" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (12 samples, 0.05%)</title><rect x="271.0" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.0" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (7 samples, 0.03%)</title><rect x="271.1" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.1" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (7 samples, 0.03%)</title><rect x="271.1" y="1267.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.1" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (7 samples, 0.03%)</title><rect x="271.1" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.05%)</title><rect x="272.3" y="1555.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.3" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.04%)</title><rect x="272.3" y="1539.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (8 samples, 0.03%)</title><rect x="272.4" y="1523.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (6 samples, 0.02%)</title><rect x="272.4" y="1507.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (157 samples, 0.62%)</title><rect x="273.1" y="1555.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (32 samples, 0.13%)</title><rect x="273.3" y="1539.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (24 samples, 0.10%)</title><rect x="273.4" y="1523.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (20 samples, 0.08%)</title><rect x="273.6" y="1507.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.08%)</title><rect x="273.6" y="1491.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.6" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.03%)</title><rect x="273.6" y="1475.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="276.6" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.05%)</title><rect x="274.0" y="1475.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="277.0" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.04%)</title><rect x="274.1" y="1459.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.1" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.04%)</title><rect x="274.1" y="1443.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.1" y="1454.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.04%)</title><rect x="274.1" y="1427.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.1" y="1438.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.04%)</title><rect x="274.1" y="1411.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.1" y="1422.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.04%)</title><rect x="274.1" y="1395.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.1" y="1406.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.04%)</title><rect x="274.1" y="1379.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.1" y="1390.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.03%)</title><rect x="274.1" y="1363.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.1" y="1374.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.03%)</title><rect x="274.1" y="1347.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="277.1" y="1358.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.03%)</title><rect x="274.1" y="1331.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (110 samples, 0.44%)</title><rect x="274.8" y="1539.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (103 samples, 0.41%)</title><rect x="274.9" y="1523.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (97 samples, 0.38%)</title><rect x="275.2" y="1507.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 0.38%)</title><rect x="275.3" y="1491.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.3" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (37 samples, 0.15%)</title><rect x="275.4" y="1475.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="278.4" y="1486.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.04%)</title><rect x="275.6" y="1459.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="278.6" y="1470.0"></text>
</g>
<g>
<title>__lll_unlock_wake (17 samples, 0.07%)</title><rect x="276.1" y="1459.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="279.1" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.05%)</title><rect x="276.3" y="1443.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="279.3" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.05%)</title><rect x="276.3" y="1427.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="279.3" y="1438.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.03%)</title><rect x="276.5" y="1411.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="279.5" y="1422.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.03%)</title><rect x="276.5" y="1395.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="279.5" y="1406.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.03%)</title><rect x="276.6" y="1379.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="279.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.22%)</title><rect x="277.1" y="1475.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="280.1" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (51 samples, 0.20%)</title><rect x="277.1" y="1459.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="280.1" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.16%)</title><rect x="277.6" y="1443.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.6" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.16%)</title><rect x="277.6" y="1427.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.6" y="1438.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.15%)</title><rect x="277.7" y="1411.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.7" y="1422.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.14%)</title><rect x="277.8" y="1395.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="280.8" y="1406.0"></text>
</g>
<g>
<title>futex_wait (36 samples, 0.14%)</title><rect x="277.8" y="1379.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="280.8" y="1390.0"></text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 0.13%)</title><rect x="277.9" y="1363.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.9" y="1374.0"></text>
</g>
<g>
<title>schedule (33 samples, 0.13%)</title><rect x="277.9" y="1347.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="280.9" y="1358.0"></text>
</g>
<g>
<title>__schedule (33 samples, 0.13%)</title><rect x="277.9" y="1331.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.9" y="1342.0"></text>
</g>
<g>
<title>finish_task_switch (33 samples, 0.13%)</title><rect x="277.9" y="1315.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="280.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (10 samples, 0.04%)</title><rect x="279.9" y="1539.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (10 samples, 0.04%)</title><rect x="279.9" y="1523.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (7 samples, 0.03%)</title><rect x="280.0" y="1507.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (12,567 samples, 49.80%)</title><rect x="280.9" y="1603.0" width="587.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.9" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (12,565 samples, 49.79%)</title><rect x="281.0" y="1587.0" width="587.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.0" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (10,730 samples, 42.52%)</title><rect x="283.9" y="1571.0" width="501.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.9" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (9 samples, 0.04%)</title><rect x="290.0" y="1555.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.0" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (8 samples, 0.03%)</title><rect x="290.0" y="1539.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.0" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (17 samples, 0.07%)</title><rect x="290.4" y="1555.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (15 samples, 0.06%)</title><rect x="290.5" y="1539.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (10,515 samples, 41.67%)</title><rect x="291.2" y="1555.0" width="491.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.2" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (35 samples, 0.14%)</title><rect x="291.5" y="1539.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (9 samples, 0.04%)</title><rect x="292.4" y="1523.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (9 samples, 0.04%)</title><rect x="292.4" y="1507.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (6 samples, 0.02%)</title><rect x="292.6" y="1491.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (6 samples, 0.02%)</title><rect x="293.2" y="1539.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (10,463 samples, 41.46%)</title><rect x="293.5" y="1539.0" width="489.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.5" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (1,893 samples, 7.50%)</title><rect x="294.0" y="1523.0" width="88.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.0" y="1534.0">akka/dispa..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (1,892 samples, 7.50%)</title><rect x="294.1" y="1507.0" width="88.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.1" y="1518.0">akka/dispa..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (195 samples, 0.77%)</title><rect x="294.4" y="1491.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.4" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (11 samples, 0.04%)</title><rect x="294.7" y="1475.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.7" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (8 samples, 0.03%)</title><rect x="294.8" y="1459.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.8" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.akka$actor$Scheduler$$anon$$swap (11 samples, 0.04%)</title><rect x="295.2" y="1475.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (10 samples, 0.04%)</title><rect x="295.2" y="1459.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.04%)</title><rect x="295.2" y="1443.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.04%)</title><rect x="295.2" y="1427.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.2" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$540/433517145.run (165 samples, 0.65%)</title><rect x="295.8" y="1475.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.8" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (164 samples, 0.65%)</title><rect x="295.8" y="1459.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.8" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (159 samples, 0.63%)</title><rect x="296.0" y="1443.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.0" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (159 samples, 0.63%)</title><rect x="296.0" y="1427.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.0" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback$Event.&lt;init&gt; (11 samples, 0.04%)</title><rect x="297.2" y="1411.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (11 samples, 0.04%)</title><rect x="297.2" y="1395.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.2" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized (18 samples, 0.07%)</title><rect x="297.9" y="1411.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.9" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized$lzycompute$1 (18 samples, 0.07%)</title><rect x="297.9" y="1395.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.9" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (77 samples, 0.31%)</title><rect x="298.7" y="1411.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.7" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (77 samples, 0.31%)</title><rect x="298.7" y="1395.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (77 samples, 0.31%)</title><rect x="298.7" y="1379.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (77 samples, 0.31%)</title><rect x="298.7" y="1363.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (77 samples, 0.31%)</title><rect x="298.7" y="1347.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (77 samples, 0.31%)</title><rect x="298.7" y="1331.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (77 samples, 0.31%)</title><rect x="298.7" y="1315.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (77 samples, 0.31%)</title><rect x="298.7" y="1299.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (72 samples, 0.29%)</title><rect x="298.7" y="1283.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (72 samples, 0.29%)</title><rect x="298.7" y="1267.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (72 samples, 0.29%)</title><rect x="298.7" y="1251.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (65 samples, 0.26%)</title><rect x="299.0" y="1235.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.0" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (41 samples, 0.16%)</title><rect x="299.3" y="1219.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (41 samples, 0.16%)</title><rect x="299.3" y="1203.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (41 samples, 0.16%)</title><rect x="299.3" y="1187.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (41 samples, 0.16%)</title><rect x="299.3" y="1171.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (36 samples, 0.14%)</title><rect x="299.3" y="1155.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (36 samples, 0.14%)</title><rect x="299.3" y="1139.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="302.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (36 samples, 0.14%)</title><rect x="299.3" y="1123.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (36 samples, 0.14%)</title><rect x="299.3" y="1107.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (36 samples, 0.14%)</title><rect x="299.3" y="1091.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.14%)</title><rect x="299.3" y="1075.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.14%)</title><rect x="299.3" y="1059.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.3" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.03%)</title><rect x="299.3" y="1043.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="302.3" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 0.11%)</title><rect x="299.7" y="1043.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="302.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.09%)</title><rect x="300.0" y="1027.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="303.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.09%)</title><rect x="300.0" y="1011.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.0" y="1022.0"></text>
</g>
<g>
<title>sys_futex (18 samples, 0.07%)</title><rect x="300.1" y="995.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.07%)</title><rect x="300.1" y="979.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.1" y="990.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.07%)</title><rect x="300.1" y="963.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.1" y="974.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.04%)</title><rect x="300.6" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.04%)</title><rect x="300.6" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.6" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.04%)</title><rect x="300.6" y="915.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (19 samples, 0.08%)</title><rect x="301.2" y="1219.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (17 samples, 0.07%)</title><rect x="301.3" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (17 samples, 0.07%)</title><rect x="301.3" y="1187.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (17 samples, 0.07%)</title><rect x="301.3" y="1171.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (17 samples, 0.07%)</title><rect x="301.3" y="1155.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (17 samples, 0.07%)</title><rect x="301.3" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (11 samples, 0.04%)</title><rect x="301.6" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (11 samples, 0.04%)</title><rect x="301.6" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (11 samples, 0.04%)</title><rect x="301.6" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (24 samples, 0.10%)</title><rect x="302.3" y="1411.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (24 samples, 0.10%)</title><rect x="302.3" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.3" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (13 samples, 0.05%)</title><rect x="302.9" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/428746855.invoke_MT (13 samples, 0.05%)</title><rect x="302.9" y="1363.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (1,470 samples, 5.83%)</title><rect x="303.7" y="1491.0" width="68.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.7" y="1502.0">akka/di..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (22 samples, 0.09%)</title><rect x="303.9" y="1475.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (16 samples, 0.06%)</title><rect x="304.2" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (15 samples, 0.06%)</title><rect x="304.2" y="1443.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.2" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (1,432 samples, 5.67%)</title><rect x="305.5" y="1475.0" width="66.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.5" y="1486.0">scala/c..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1,421 samples, 5.63%)</title><rect x="306.0" y="1459.0" width="66.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.0" y="1470.0">scala/r..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$502/817636958.apply$mcV$sp (1,421 samples, 5.63%)</title><rect x="306.0" y="1443.0" width="66.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.0" y="1454.0">akka/di..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (1,421 samples, 5.63%)</title><rect x="306.0" y="1427.0" width="66.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.0" y="1438.0">akka/di..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1,410 samples, 5.59%)</title><rect x="306.1" y="1411.0" width="65.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.1" y="1422.0">akka/di..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1,402 samples, 5.56%)</title><rect x="306.5" y="1395.0" width="65.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.5" y="1406.0">scala/c..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1041/1539983079.apply (293 samples, 1.16%)</title><rect x="306.7" y="1379.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.7" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (292 samples, 1.16%)</title><rect x="306.7" y="1363.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.7" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (21 samples, 0.08%)</title><rect x="307.0" y="1347.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.0" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (21 samples, 0.08%)</title><rect x="307.0" y="1331.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.0" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (21 samples, 0.08%)</title><rect x="307.0" y="1315.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (16 samples, 0.06%)</title><rect x="307.2" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (14 samples, 0.06%)</title><rect x="307.3" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (8 samples, 0.03%)</title><rect x="307.5" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (6 samples, 0.02%)</title><rect x="307.5" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (262 samples, 1.04%)</title><rect x="308.0" y="1347.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.0" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1066/248555202.apply (261 samples, 1.03%)</title><rect x="308.1" y="1331.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (261 samples, 1.03%)</title><rect x="308.1" y="1315.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.1" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (257 samples, 1.02%)</title><rect x="308.2" y="1299.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1066/248555202.apply (257 samples, 1.02%)</title><rect x="308.2" y="1283.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (257 samples, 1.02%)</title><rect x="308.2" y="1267.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1068/1534058762.apply (7 samples, 0.03%)</title><rect x="308.2" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (6 samples, 0.02%)</title><rect x="308.3" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (6 samples, 0.02%)</title><rect x="308.3" y="1219.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (6 samples, 0.02%)</title><rect x="308.3" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (250 samples, 0.99%)</title><rect x="308.6" y="1251.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1070/1838597434.apply (248 samples, 0.98%)</title><rect x="308.6" y="1235.0" width="11.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (248 samples, 0.98%)</title><rect x="308.6" y="1219.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (247 samples, 0.98%)</title><rect x="308.7" y="1203.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (54 samples, 0.21%)</title><rect x="308.7" y="1187.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (21 samples, 0.08%)</title><rect x="308.7" y="1171.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (21 samples, 0.08%)</title><rect x="308.7" y="1155.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (21 samples, 0.08%)</title><rect x="308.7" y="1139.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (17 samples, 0.07%)</title><rect x="308.9" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (17 samples, 0.07%)</title><rect x="308.9" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (17 samples, 0.07%)</title><rect x="308.9" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (13 samples, 0.05%)</title><rect x="309.1" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (11 samples, 0.04%)</title><rect x="309.1" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (8 samples, 0.03%)</title><rect x="309.2" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (10 samples, 0.04%)</title><rect x="309.7" y="1171.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (10 samples, 0.04%)</title><rect x="309.7" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (9 samples, 0.04%)</title><rect x="309.7" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (17 samples, 0.07%)</title><rect x="310.2" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (14 samples, 0.06%)</title><rect x="310.2" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (11 samples, 0.04%)</title><rect x="310.2" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (11 samples, 0.04%)</title><rect x="310.2" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (7 samples, 0.03%)</title><rect x="310.3" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (7 samples, 0.03%)</title><rect x="310.3" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (7 samples, 0.03%)</title><rect x="310.3" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (7 samples, 0.03%)</title><rect x="310.3" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (6 samples, 0.02%)</title><rect x="311.0" y="1171.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (6 samples, 0.02%)</title><rect x="311.0" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (6 samples, 0.02%)</title><rect x="311.0" y="1139.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (192 samples, 0.76%)</title><rect x="311.2" y="1187.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (188 samples, 0.74%)</title><rect x="311.2" y="1171.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (188 samples, 0.74%)</title><rect x="311.2" y="1155.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (188 samples, 0.74%)</title><rect x="311.2" y="1139.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (188 samples, 0.74%)</title><rect x="311.2" y="1123.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (22 samples, 0.09%)</title><rect x="311.6" y="1107.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (11 samples, 0.04%)</title><rect x="312.0" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (9 samples, 0.04%)</title><rect x="312.1" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (6 samples, 0.02%)</title><rect x="312.1" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (6 samples, 0.02%)</title><rect x="312.6" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (6 samples, 0.02%)</title><rect x="312.6" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (6 samples, 0.02%)</title><rect x="312.6" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (6 samples, 0.02%)</title><rect x="312.6" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (12 samples, 0.05%)</title><rect x="312.9" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (10 samples, 0.04%)</title><rect x="312.9" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (6 samples, 0.02%)</title><rect x="312.9" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (115 samples, 0.46%)</title><rect x="313.4" y="1107.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (80 samples, 0.32%)</title><rect x="313.6" y="1091.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (80 samples, 0.32%)</title><rect x="313.6" y="1075.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.6" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (80 samples, 0.32%)</title><rect x="313.6" y="1059.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.6" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (80 samples, 0.32%)</title><rect x="313.6" y="1043.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.6" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (77 samples, 0.31%)</title><rect x="313.8" y="1027.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (7 samples, 0.03%)</title><rect x="313.9" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (7 samples, 0.03%)</title><rect x="313.9" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (7 samples, 0.03%)</title><rect x="313.9" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (19 samples, 0.08%)</title><rect x="314.3" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (19 samples, 0.08%)</title><rect x="314.3" y="995.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (19 samples, 0.08%)</title><rect x="314.3" y="979.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (19 samples, 0.08%)</title><rect x="314.3" y="963.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (14 samples, 0.06%)</title><rect x="314.5" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.5" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (11 samples, 0.04%)</title><rect x="314.6" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="314.6" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="314.6" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.6" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.03%)</title><rect x="314.6" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="314.7" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.7" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="314.7" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.7" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="314.7" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.7" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="314.7" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.7" y="830.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (41 samples, 0.16%)</title><rect x="315.4" y="1011.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.4" y="1022.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (27 samples, 0.11%)</title><rect x="315.6" y="995.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.6" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (7 samples, 0.03%)</title><rect x="315.9" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (7 samples, 0.03%)</title><rect x="315.9" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (7 samples, 0.03%)</title><rect x="315.9" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.9" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (7 samples, 0.03%)</title><rect x="315.9" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.9" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (7 samples, 0.03%)</title><rect x="315.9" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.9" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (7 samples, 0.03%)</title><rect x="315.9" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.03%)</title><rect x="315.9" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="315.9" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.9" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.03%)</title><rect x="315.9" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.9" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="315.9" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.9" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (6 samples, 0.02%)</title><rect x="316.2" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.2" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (7 samples, 0.03%)</title><rect x="316.5" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (27 samples, 0.11%)</title><rect x="317.5" y="1091.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (21 samples, 0.08%)</title><rect x="317.5" y="1075.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (21 samples, 0.08%)</title><rect x="317.5" y="1059.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (21 samples, 0.08%)</title><rect x="317.5" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (21 samples, 0.08%)</title><rect x="317.5" y="1027.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (21 samples, 0.08%)</title><rect x="317.5" y="1011.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (21 samples, 0.08%)</title><rect x="317.5" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (21 samples, 0.08%)</title><rect x="317.5" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (9 samples, 0.04%)</title><rect x="317.6" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (9 samples, 0.04%)</title><rect x="317.6" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (10 samples, 0.04%)</title><rect x="318.0" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.0" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (7 samples, 0.03%)</title><rect x="318.2" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (6 samples, 0.02%)</title><rect x="318.5" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (6 samples, 0.02%)</title><rect x="318.5" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (9 samples, 0.04%)</title><rect x="318.8" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (7 samples, 0.03%)</title><rect x="318.9" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (7 samples, 0.03%)</title><rect x="318.9" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1095/1073343160.apply (1,056 samples, 4.18%)</title><rect x="320.7" y="1379.0" width="49.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.7" y="1390.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (1,047 samples, 4.15%)</title><rect x="321.1" y="1363.0" width="49.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.1" y="1374.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (830 samples, 3.29%)</title><rect x="321.1" y="1347.0" width="38.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.1" y="1358.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1077/1453559326.apply (380 samples, 1.51%)</title><rect x="321.5" y="1331.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (379 samples, 1.50%)</title><rect x="321.5" y="1315.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1062/1493162553.apply (168 samples, 0.67%)</title><rect x="321.5" y="1299.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.5" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (168 samples, 0.67%)</title><rect x="321.5" y="1283.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (168 samples, 0.67%)</title><rect x="321.5" y="1267.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.5" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (168 samples, 0.67%)</title><rect x="321.5" y="1251.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.5" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (168 samples, 0.67%)</title><rect x="321.5" y="1235.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.5" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (168 samples, 0.67%)</title><rect x="321.5" y="1219.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.5" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (168 samples, 0.67%)</title><rect x="321.5" y="1203.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.5" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (168 samples, 0.67%)</title><rect x="321.5" y="1187.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (159 samples, 0.63%)</title><rect x="321.9" y="1171.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.9" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (158 samples, 0.63%)</title><rect x="322.0" y="1155.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (158 samples, 0.63%)</title><rect x="322.0" y="1139.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.0" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (158 samples, 0.63%)</title><rect x="322.0" y="1123.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.0" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (65 samples, 0.26%)</title><rect x="322.1" y="1107.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.1" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (64 samples, 0.25%)</title><rect x="322.1" y="1091.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.1" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (64 samples, 0.25%)</title><rect x="322.1" y="1075.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.1" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (64 samples, 0.25%)</title><rect x="322.1" y="1059.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (64 samples, 0.25%)</title><rect x="322.1" y="1043.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.1" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (61 samples, 0.24%)</title><rect x="322.2" y="1027.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.2" y="1038.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (23 samples, 0.09%)</title><rect x="322.5" y="1011.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.5" y="1022.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (23 samples, 0.09%)</title><rect x="322.5" y="995.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="1006.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (23 samples, 0.09%)</title><rect x="322.5" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.5" y="990.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (23 samples, 0.09%)</title><rect x="322.5" y="963.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.5" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseEntry (23 samples, 0.09%)</title><rect x="322.5" y="947.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.5" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseField (22 samples, 0.09%)</title><rect x="322.5" y="931.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.5" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (16 samples, 0.06%)</title><rect x="322.5" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.5" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (16 samples, 0.06%)</title><rect x="322.5" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.5" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (16 samples, 0.06%)</title><rect x="322.5" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.5" y="894.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.mergeFrom (11 samples, 0.04%)</title><rect x="322.7" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.7" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField.mergeFrom (10 samples, 0.04%)</title><rect x="322.7" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (20 samples, 0.08%)</title><rect x="323.5" y="1011.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.5" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (19 samples, 0.08%)</title><rect x="323.6" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.6" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (19 samples, 0.08%)</title><rect x="323.6" y="979.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.6" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (18 samples, 0.07%)</title><rect x="323.6" y="963.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.6" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (13 samples, 0.05%)</title><rect x="323.7" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.7" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (12 samples, 0.05%)</title><rect x="323.8" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.8" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (12 samples, 0.05%)</title><rect x="323.8" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.8" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId$1.parsePartialFrom (12 samples, 0.05%)</title><rect x="324.5" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.5" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId$1.parsePartialFrom (12 samples, 0.05%)</title><rect x="324.5" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.5" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.&lt;init&gt; (12 samples, 0.05%)</title><rect x="324.5" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.5" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.&lt;init&gt; (12 samples, 0.05%)</title><rect x="324.5" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.5" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownFieldProto3 (90 samples, 0.36%)</title><rect x="325.1" y="1107.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.1" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownField (90 samples, 0.36%)</title><rect x="325.1" y="1091.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.1" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet$Builder.mergeFieldFrom (89 samples, 0.35%)</title><rect x="325.2" y="1075.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.invalidWireType (89 samples, 0.35%)</title><rect x="325.2" y="1059.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.2" y="1070.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException.&lt;init&gt; (89 samples, 0.35%)</title><rect x="325.2" y="1043.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.2" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.&lt;init&gt; (89 samples, 0.35%)</title><rect x="325.2" y="1027.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.2" y="1038.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (89 samples, 0.35%)</title><rect x="325.2" y="1011.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (89 samples, 0.35%)</title><rect x="325.2" y="995.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (89 samples, 0.35%)</title><rect x="325.2" y="979.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.2" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (89 samples, 0.35%)</title><rect x="325.2" y="963.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (88 samples, 0.35%)</title><rect x="325.2" y="947.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.2" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (87 samples, 0.34%)</title><rect x="325.3" y="931.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="328.3" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (84 samples, 0.33%)</title><rect x="325.4" y="915.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="328.4" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (79 samples, 0.31%)</title><rect x="325.6" y="899.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="328.6" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (74 samples, 0.29%)</title><rect x="325.9" y="883.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="328.9" y="894.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (11 samples, 0.04%)</title><rect x="327.2" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="330.2" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (9 samples, 0.04%)</title><rect x="327.3" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="330.3" y="862.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (11 samples, 0.04%)</title><rect x="327.7" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="330.7" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (16 samples, 0.06%)</title><rect x="328.5" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="331.5" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (14 samples, 0.06%)</title><rect x="328.6" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.6" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.03%)</title><rect x="328.7" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="331.7" y="846.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1162/1573844353.apply (154 samples, 0.61%)</title><rect x="329.4" y="1299.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.4" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (154 samples, 0.61%)</title><rect x="329.4" y="1283.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.4" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (154 samples, 0.61%)</title><rect x="329.4" y="1267.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.4" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (154 samples, 0.61%)</title><rect x="329.4" y="1251.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.4" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (154 samples, 0.61%)</title><rect x="329.4" y="1235.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.4" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (154 samples, 0.61%)</title><rect x="329.4" y="1219.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.4" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (154 samples, 0.61%)</title><rect x="329.4" y="1203.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.4" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (153 samples, 0.61%)</title><rect x="329.4" y="1187.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.4" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (148 samples, 0.59%)</title><rect x="329.7" y="1171.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.7" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (146 samples, 0.58%)</title><rect x="329.7" y="1155.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.7" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (142 samples, 0.56%)</title><rect x="329.9" y="1139.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.9" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (142 samples, 0.56%)</title><rect x="329.9" y="1123.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.9" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (128 samples, 0.51%)</title><rect x="330.4" y="1107.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.4" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (114 samples, 0.45%)</title><rect x="330.5" y="1091.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.5" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (114 samples, 0.45%)</title><rect x="330.5" y="1075.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.5" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (114 samples, 0.45%)</title><rect x="330.5" y="1059.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.5" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (114 samples, 0.45%)</title><rect x="330.5" y="1043.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.5" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (100 samples, 0.40%)</title><rect x="330.9" y="1027.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.9" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (77 samples, 0.31%)</title><rect x="331.2" y="1011.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.2" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (77 samples, 0.31%)</title><rect x="331.2" y="995.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.2" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (77 samples, 0.31%)</title><rect x="331.2" y="979.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.2" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (77 samples, 0.31%)</title><rect x="331.2" y="963.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.2" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (48 samples, 0.19%)</title><rect x="331.9" y="947.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="958.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (32 samples, 0.13%)</title><rect x="332.2" y="931.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.2" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (32 samples, 0.13%)</title><rect x="332.2" y="915.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.2" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (32 samples, 0.13%)</title><rect x="332.2" y="899.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.2" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (32 samples, 0.13%)</title><rect x="332.2" y="883.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.2" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (17 samples, 0.07%)</title><rect x="332.2" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.2" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (15 samples, 0.06%)</title><rect x="332.3" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.3" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Metadata$1.parsePartialFrom (15 samples, 0.06%)</title><rect x="332.3" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.3" y="846.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (14 samples, 0.06%)</title><rect x="332.4" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.4" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (14 samples, 0.06%)</title><rect x="332.4" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.4" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseEntry (13 samples, 0.05%)</title><rect x="332.4" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.4" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.parseField (7 samples, 0.03%)</title><rect x="332.6" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.6" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.put (9 samples, 0.04%)</title><rect x="333.1" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.04%)</title><rect x="333.1" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.02%)</title><rect x="333.3" y="835.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.3" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId$1.parsePartialFrom (7 samples, 0.03%)</title><rect x="333.7" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.7" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId$1.parsePartialFrom (7 samples, 0.03%)</title><rect x="333.7" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.7" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.&lt;init&gt; (7 samples, 0.03%)</title><rect x="333.7" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.7" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.&lt;init&gt; (7 samples, 0.03%)</title><rect x="333.7" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.7" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readTag (7 samples, 0.03%)</title><rect x="334.3" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.3" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readRawVarint32 (6 samples, 0.02%)</title><rect x="334.4" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.4" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (16 samples, 0.06%)</title><rect x="334.8" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.8" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (16 samples, 0.06%)</title><rect x="334.8" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.8" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (16 samples, 0.06%)</title><rect x="334.8" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.8" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (16 samples, 0.06%)</title><rect x="334.8" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.8" y="974.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (8 samples, 0.03%)</title><rect x="335.1" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.1" y="958.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (10 samples, 0.04%)</title><rect x="335.8" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.8" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (10 samples, 0.04%)</title><rect x="335.8" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.8" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (10 samples, 0.04%)</title><rect x="335.8" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.8" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (10 samples, 0.04%)</title><rect x="335.8" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.8" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (6 samples, 0.02%)</title><rect x="336.0" y="1027.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.0" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (6 samples, 0.02%)</title><rect x="336.0" y="1011.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1059/576770810.apply (16 samples, 0.06%)</title><rect x="336.6" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteArrayUnmarshaller$1 (14 samples, 0.06%)</title><rect x="336.7" y="1283.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.7" y="1294.0"></text>
</g>
<g>
<title>akka/util/ByteString.toArray (14 samples, 0.06%)</title><rect x="336.7" y="1267.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.7" y="1278.0"></text>
</g>
<g>
<title>scala/reflect/ManifestFactory$ByteManifest.newArray (9 samples, 0.04%)</title><rect x="336.9" y="1251.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.9" y="1262.0"></text>
</g>
<g>
<title>scala/reflect/ManifestFactory$ByteManifest.newArray (9 samples, 0.04%)</title><rect x="336.9" y="1235.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.9" y="1246.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="337.0" y="1219.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="340.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1075/971331641.apply (40 samples, 0.16%)</title><rect x="337.4" y="1299.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (40 samples, 0.16%)</title><rect x="337.4" y="1283.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1144/44385532.apply (6 samples, 0.02%)</title><rect x="337.6" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.6" y="1278.0"></text>
</g>
<g>
<title>itable stub (25 samples, 0.10%)</title><rect x="338.0" y="1267.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="341.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1177/1099955946.apply (427 samples, 1.69%)</title><rect x="339.2" y="1331.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (426 samples, 1.69%)</title><rect x="339.3" y="1315.0" width="19.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1176/2037983124.apply (426 samples, 1.69%)</title><rect x="339.3" y="1299.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (426 samples, 1.69%)</title><rect x="339.3" y="1283.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$992/941480419.apply (6 samples, 0.02%)</title><rect x="339.3" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (6 samples, 0.02%)</title><rect x="339.3" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.02%)</title><rect x="339.3" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1134/532836674.apply (6 samples, 0.02%)</title><rect x="339.3" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (6 samples, 0.02%)</title><rect x="339.3" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1124/1513819416.apply (6 samples, 0.02%)</title><rect x="339.3" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (6 samples, 0.02%)</title><rect x="339.3" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.02%)</title><rect x="339.3" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (252 samples, 1.00%)</title><rect x="339.6" y="1267.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (252 samples, 1.00%)</title><rect x="339.6" y="1251.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1188/597470707.apply (252 samples, 1.00%)</title><rect x="339.6" y="1235.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (252 samples, 1.00%)</title><rect x="339.6" y="1219.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.6" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1187/1265974047.apply (19 samples, 0.08%)</title><rect x="339.6" y="1203.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.6" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$7 (19 samples, 0.08%)</title><rect x="339.6" y="1187.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.6" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseMarshaller (17 samples, 0.07%)</title><rect x="339.6" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (233 samples, 0.92%)</title><rect x="340.5" y="1203.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (219 samples, 0.87%)</title><rect x="340.5" y="1187.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (219 samples, 0.87%)</title><rect x="340.5" y="1171.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (218 samples, 0.86%)</title><rect x="340.5" y="1155.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (217 samples, 0.86%)</title><rect x="340.5" y="1139.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (14 samples, 0.06%)</title><rect x="340.6" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1327/1034283312.apply (8 samples, 0.03%)</title><rect x="340.7" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$strict$2 (7 samples, 0.03%)</title><rect x="340.8" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (115 samples, 0.46%)</title><rect x="341.3" y="1123.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (114 samples, 0.45%)</title><rect x="341.3" y="1107.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (18 samples, 0.07%)</title><rect x="341.4" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (13 samples, 0.05%)</title><rect x="341.6" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (11 samples, 0.04%)</title><rect x="341.7" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (11 samples, 0.04%)</title><rect x="341.7" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (11 samples, 0.04%)</title><rect x="341.7" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (11 samples, 0.04%)</title><rect x="341.7" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (7 samples, 0.03%)</title><rect x="341.7" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (7 samples, 0.03%)</title><rect x="341.7" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (94 samples, 0.37%)</title><rect x="342.2" y="1091.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (30 samples, 0.12%)</title><rect x="342.3" y="1075.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (30 samples, 0.12%)</title><rect x="342.3" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (30 samples, 0.12%)</title><rect x="342.3" y="1043.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (30 samples, 0.12%)</title><rect x="342.3" y="1027.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (30 samples, 0.12%)</title><rect x="342.3" y="1011.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (30 samples, 0.12%)</title><rect x="342.3" y="995.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (30 samples, 0.12%)</title><rect x="342.3" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (30 samples, 0.12%)</title><rect x="342.3" y="963.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (28 samples, 0.11%)</title><rect x="342.4" y="947.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.4" y="958.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="342.5" y="931.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="345.5" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.newSpecificBuilder (10 samples, 0.04%)</title><rect x="342.9" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (7 samples, 0.03%)</title><rect x="343.4" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.4" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (62 samples, 0.25%)</title><rect x="343.7" y="1075.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (53 samples, 0.21%)</title><rect x="344.1" y="1059.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (49 samples, 0.19%)</title><rect x="344.3" y="1043.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (46 samples, 0.18%)</title><rect x="344.4" y="1027.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.&lt;init&gt; (18 samples, 0.07%)</title><rect x="344.4" y="1011.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1196/68241924.apply (6 samples, 0.02%)</title><rect x="344.7" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (28 samples, 0.11%)</title><rect x="345.3" y="1011.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.3" y="1022.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="345.3" y="995.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="348.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (17 samples, 0.07%)</title><rect x="345.6" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (16 samples, 0.06%)</title><rect x="345.6" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$1218/998633991.apply (6 samples, 0.02%)</title><rect x="345.6" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.6" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (6 samples, 0.02%)</title><rect x="346.1" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.1" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (86 samples, 0.34%)</title><rect x="346.6" y="1123.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (86 samples, 0.34%)</title><rect x="346.6" y="1107.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (86 samples, 0.34%)</title><rect x="346.6" y="1091.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1077/1453559326.apply (86 samples, 0.34%)</title><rect x="346.6" y="1075.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (86 samples, 0.34%)</title><rect x="346.6" y="1059.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$1246/1227547110.apply (78 samples, 0.31%)</title><rect x="346.6" y="1043.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (78 samples, 0.31%)</title><rect x="346.6" y="1027.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$1328/1042053423.apply (21 samples, 0.08%)</title><rect x="346.7" y="1011.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (19 samples, 0.08%)</title><rect x="346.8" y="995.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1198/533755787.apply (18 samples, 0.07%)</title><rect x="346.8" y="979.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (18 samples, 0.07%)</title><rect x="346.8" y="963.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (18 samples, 0.07%)</title><rect x="346.8" y="947.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (12 samples, 0.05%)</title><rect x="346.9" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (12 samples, 0.05%)</title><rect x="346.9" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.9" y="926.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (7 samples, 0.03%)</title><rect x="347.0" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.0" y="910.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (7 samples, 0.03%)</title><rect x="347.0" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType$$Lambda$1244/729059597.apply (11 samples, 0.04%)</title><rect x="347.7" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType.$anonfun$map$5 (11 samples, 0.04%)</title><rect x="347.7" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2$$Lambda$1236/399121204.apply (10 samples, 0.04%)</title><rect x="347.7" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.$anonfun$apply$1 (9 samples, 0.04%)</title><rect x="347.7" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.7" y="974.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$1205/842129887.apply (8 samples, 0.03%)</title><rect x="347.7" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.7" y="958.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (8 samples, 0.03%)</title><rect x="347.7" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.7" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1202/1265814452.apply (7 samples, 0.03%)</title><rect x="347.7" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.7" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseMarshaller$1 (7 samples, 0.03%)</title><rect x="347.7" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.7" y="910.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (7 samples, 0.03%)</title><rect x="347.7" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.7" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.pickContentType (8 samples, 0.03%)</title><rect x="348.2" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (23 samples, 0.09%)</title><rect x="349.2" y="1011.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (23 samples, 0.09%)</title><rect x="349.2" y="995.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (23 samples, 0.09%)</title><rect x="349.2" y="979.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (23 samples, 0.09%)</title><rect x="349.2" y="963.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (22 samples, 0.09%)</title><rect x="349.2" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (22 samples, 0.09%)</title><rect x="349.2" y="931.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.knownSize (6 samples, 0.02%)</title><rect x="349.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.4" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (13 samples, 0.05%)</title><rect x="349.7" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.7" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (13 samples, 0.05%)</title><rect x="349.7" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.7" y="910.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$7.hasNext (7 samples, 0.03%)</title><rect x="349.9" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1075/971331641.apply (8 samples, 0.03%)</title><rect x="350.3" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (8 samples, 0.03%)</title><rect x="350.3" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (9 samples, 0.04%)</title><rect x="350.8" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (8 samples, 0.03%)</title><rect x="350.8" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1148/1439664131.apply (156 samples, 0.62%)</title><rect x="351.4" y="1267.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (156 samples, 0.62%)</title><rect x="351.4" y="1251.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1127/2037219873.apply (11 samples, 0.04%)</title><rect x="351.4" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (10 samples, 0.04%)</title><rect x="351.4" y="1219.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1027/852261402.apply (9 samples, 0.04%)</title><rect x="351.5" y="1203.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (9 samples, 0.04%)</title><rect x="351.5" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.5" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1167/1216876522.apply (7 samples, 0.03%)</title><rect x="351.5" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1173/1514950729.apply (142 samples, 0.56%)</title><rect x="352.0" y="1235.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (141 samples, 0.56%)</title><rect x="352.0" y="1219.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.0" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1185/885534408.apply (119 samples, 0.47%)</title><rect x="352.1" y="1203.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.1" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (119 samples, 0.47%)</title><rect x="352.1" y="1187.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.1" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (118 samples, 0.47%)</title><rect x="352.1" y="1171.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.1" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (9 samples, 0.04%)</title><rect x="352.5" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.5" y="1166.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (8 samples, 0.03%)</title><rect x="352.5" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.5" y="1150.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture$TrustedFuture.addListener (8 samples, 0.03%)</title><rect x="352.5" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.addListener (8 samples, 0.03%)</title><rect x="352.5" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.5" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (96 samples, 0.38%)</title><rect x="352.9" y="1155.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.9" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (16 samples, 0.06%)</title><rect x="353.1" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (72 samples, 0.29%)</title><rect x="353.8" y="1139.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (72 samples, 0.29%)</title><rect x="353.8" y="1123.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.29%)</title><rect x="353.8" y="1107.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.29%)</title><rect x="353.8" y="1091.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (62 samples, 0.25%)</title><rect x="353.9" y="1075.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (60 samples, 0.24%)</title><rect x="354.0" y="1059.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (60 samples, 0.24%)</title><rect x="354.0" y="1043.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (60 samples, 0.24%)</title><rect x="354.0" y="1027.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 0.24%)</title><rect x="354.0" y="1011.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 0.24%)</title><rect x="354.0" y="995.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.0" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (54 samples, 0.21%)</title><rect x="354.3" y="979.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="357.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.20%)</title><rect x="354.4" y="963.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.20%)</title><rect x="354.4" y="947.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.4" y="958.0"></text>
</g>
<g>
<title>sys_futex (42 samples, 0.17%)</title><rect x="354.8" y="931.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="357.8" y="942.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.17%)</title><rect x="354.8" y="915.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.16%)</title><rect x="354.9" y="899.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.9" y="910.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.14%)</title><rect x="355.1" y="883.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.1" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.14%)</title><rect x="355.1" y="867.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.1" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.14%)</title><rect x="355.1" y="851.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.03%)</title><rect x="356.8" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.03%)</title><rect x="356.8" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.02%)</title><rect x="356.8" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.8" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (18 samples, 0.07%)</title><rect x="357.8" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (18 samples, 0.07%)</title><rect x="357.8" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (9 samples, 0.04%)</title><rect x="357.8" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1177/1099955946.apply (9 samples, 0.04%)</title><rect x="357.8" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (9 samples, 0.04%)</title><rect x="357.8" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1176/2037983124.apply (9 samples, 0.04%)</title><rect x="357.8" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (9 samples, 0.04%)</title><rect x="357.8" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (7 samples, 0.03%)</title><rect x="357.8" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (7 samples, 0.03%)</title><rect x="357.8" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.8" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1188/597470707.apply (7 samples, 0.03%)</title><rect x="357.8" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (7 samples, 0.03%)</title><rect x="357.8" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.8" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (9 samples, 0.04%)</title><rect x="358.2" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.2" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (7 samples, 0.03%)</title><rect x="358.3" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.3" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (7 samples, 0.03%)</title><rect x="358.3" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1027/852261402.apply (12 samples, 0.05%)</title><rect x="358.6" y="1267.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (11 samples, 0.04%)</title><rect x="358.7" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.7" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1186/736170117.apply (11 samples, 0.04%)</title><rect x="358.7" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.7" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$6 (10 samples, 0.04%)</title><rect x="358.7" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.7" y="1230.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.04%)</title><rect x="359.2" y="1331.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="362.2" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (216 samples, 0.86%)</title><rect x="360.0" y="1347.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.0" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (214 samples, 0.85%)</title><rect x="360.0" y="1331.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.0" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (9 samples, 0.04%)</title><rect x="360.2" y="1315.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.2" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (9 samples, 0.04%)</title><rect x="360.2" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.2" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (9 samples, 0.04%)</title><rect x="360.2" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.2" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.prepare (7 samples, 0.03%)</title><rect x="360.3" y="1267.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.3" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (197 samples, 0.78%)</title><rect x="360.7" y="1315.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.7" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (182 samples, 0.72%)</title><rect x="361.0" y="1299.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.0" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (182 samples, 0.72%)</title><rect x="361.0" y="1283.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (150 samples, 0.59%)</title><rect x="361.1" y="1267.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (150 samples, 0.59%)</title><rect x="361.1" y="1251.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (150 samples, 0.59%)</title><rect x="361.1" y="1235.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (141 samples, 0.56%)</title><rect x="361.2" y="1219.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (140 samples, 0.55%)</title><rect x="361.3" y="1203.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (139 samples, 0.55%)</title><rect x="361.3" y="1187.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.3" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (135 samples, 0.53%)</title><rect x="361.5" y="1171.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1036/824557868.apply (128 samples, 0.51%)</title><rect x="361.5" y="1155.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (124 samples, 0.49%)</title><rect x="361.6" y="1139.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (124 samples, 0.49%)</title><rect x="361.6" y="1123.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (122 samples, 0.48%)</title><rect x="361.7" y="1107.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (122 samples, 0.48%)</title><rect x="361.7" y="1091.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (106 samples, 0.42%)</title><rect x="362.2" y="1075.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (106 samples, 0.42%)</title><rect x="362.2" y="1059.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (106 samples, 0.42%)</title><rect x="362.2" y="1043.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (106 samples, 0.42%)</title><rect x="362.2" y="1027.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (106 samples, 0.42%)</title><rect x="362.2" y="1011.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (106 samples, 0.42%)</title><rect x="362.2" y="995.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (106 samples, 0.42%)</title><rect x="362.2" y="979.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (106 samples, 0.42%)</title><rect x="362.2" y="963.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (106 samples, 0.42%)</title><rect x="362.2" y="947.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (106 samples, 0.42%)</title><rect x="362.2" y="931.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (106 samples, 0.42%)</title><rect x="362.2" y="915.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.2" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (105 samples, 0.42%)</title><rect x="362.3" y="899.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.3" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (92 samples, 0.36%)</title><rect x="362.6" y="883.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (92 samples, 0.36%)</title><rect x="362.6" y="867.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (92 samples, 0.36%)</title><rect x="362.6" y="851.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.6" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (92 samples, 0.36%)</title><rect x="362.6" y="835.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.6" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (89 samples, 0.35%)</title><rect x="362.6" y="819.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (89 samples, 0.35%)</title><rect x="362.6" y="803.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (89 samples, 0.35%)</title><rect x="362.6" y="787.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (89 samples, 0.35%)</title><rect x="362.6" y="771.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (89 samples, 0.35%)</title><rect x="362.6" y="755.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (89 samples, 0.35%)</title><rect x="362.6" y="739.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (89 samples, 0.35%)</title><rect x="362.6" y="723.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.03%)</title><rect x="362.6" y="707.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="365.6" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (80 samples, 0.32%)</title><rect x="363.0" y="707.0" width="3.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.29%)</title><rect x="363.3" y="691.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.29%)</title><rect x="363.3" y="675.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="366.3" y="686.0"></text>
</g>
<g>
<title>sys_futex (66 samples, 0.26%)</title><rect x="363.6" y="659.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="366.6" y="670.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.26%)</title><rect x="363.7" y="643.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="366.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (64 samples, 0.25%)</title><rect x="363.7" y="627.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="366.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.22%)</title><rect x="364.1" y="611.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="367.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (55 samples, 0.22%)</title><rect x="364.2" y="595.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="367.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (55 samples, 0.22%)</title><rect x="364.2" y="579.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (7 samples, 0.03%)</title><rect x="366.9" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (7 samples, 0.03%)</title><rect x="366.9" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.9" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (7 samples, 0.03%)</title><rect x="366.9" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.9" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (7 samples, 0.03%)</title><rect x="366.9" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (7 samples, 0.03%)</title><rect x="366.9" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (7 samples, 0.03%)</title><rect x="366.9" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (7 samples, 0.03%)</title><rect x="366.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (7 samples, 0.03%)</title><rect x="366.9" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (7 samples, 0.03%)</title><rect x="366.9" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.9" y="766.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="367.4" y="1155.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="370.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (16 samples, 0.06%)</title><rect x="368.1" y="1267.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (16 samples, 0.06%)</title><rect x="368.1" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (16 samples, 0.06%)</title><rect x="368.1" y="1235.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="368.5" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.03%)</title><rect x="368.5" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.03%)</title><rect x="368.5" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.5" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (13 samples, 0.05%)</title><rect x="368.9" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.9" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (6 samples, 0.02%)</title><rect x="369.2" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.2" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Link.promise (8 samples, 0.03%)</title><rect x="369.5" y="1299.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.5" y="1310.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.05%)</title><rect x="370.2" y="1379.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="373.2" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/793293778.apply (6 samples, 0.02%)</title><rect x="371.0" y="1379.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future.$anonfun$andThen$1 (6 samples, 0.02%)</title><rect x="371.0" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.0" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (6 samples, 0.02%)</title><rect x="371.0" y="1347.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.0" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (6 samples, 0.02%)</title><rect x="371.0" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.0" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (16 samples, 0.06%)</title><rect x="371.3" y="1379.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.3" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (14 samples, 0.06%)</title><rect x="371.3" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.3" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (14 samples, 0.06%)</title><rect x="371.3" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (6 samples, 0.02%)</title><rect x="371.6" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.6" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.02%)</title><rect x="371.6" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.6" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.02%)</title><rect x="371.6" y="1299.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (8 samples, 0.03%)</title><rect x="372.0" y="1411.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.0" y="1422.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (7 samples, 0.03%)</title><rect x="372.1" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (7 samples, 0.03%)</title><rect x="372.1" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.1" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.cleanup (37 samples, 0.15%)</title><rect x="372.5" y="1491.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.5" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (12 samples, 0.05%)</title><rect x="372.6" y="1475.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.6" y="1486.0"></text>
</g>
<g>
<title>itable stub (19 samples, 0.08%)</title><rect x="373.3" y="1475.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="376.3" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$anon$4.run (6 samples, 0.02%)</title><rect x="374.2" y="1491.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.2" y="1502.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (6 samples, 0.02%)</title><rect x="374.2" y="1475.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.2" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (6 samples, 0.02%)</title><rect x="374.2" y="1459.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.2" y="1470.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (170 samples, 0.67%)</title><rect x="374.5" y="1491.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.5" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (164 samples, 0.65%)</title><rect x="374.6" y="1475.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.6" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (164 samples, 0.65%)</title><rect x="374.6" y="1459.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.6" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (164 samples, 0.65%)</title><rect x="374.6" y="1443.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.6" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (164 samples, 0.65%)</title><rect x="374.6" y="1427.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.6" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (161 samples, 0.64%)</title><rect x="374.7" y="1411.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.7" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (161 samples, 0.64%)</title><rect x="374.7" y="1395.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.7" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (161 samples, 0.64%)</title><rect x="374.7" y="1379.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.7" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (161 samples, 0.64%)</title><rect x="374.7" y="1363.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.7" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (160 samples, 0.63%)</title><rect x="374.8" y="1347.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.8" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (154 samples, 0.61%)</title><rect x="374.9" y="1331.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.9" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (154 samples, 0.61%)</title><rect x="374.9" y="1315.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (154 samples, 0.61%)</title><rect x="374.9" y="1299.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (152 samples, 0.60%)</title><rect x="375.0" y="1283.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (151 samples, 0.60%)</title><rect x="375.0" y="1267.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (134 samples, 0.53%)</title><rect x="375.2" y="1251.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (131 samples, 0.52%)</title><rect x="375.3" y="1235.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.3" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (131 samples, 0.52%)</title><rect x="375.3" y="1219.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (131 samples, 0.52%)</title><rect x="375.3" y="1203.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (131 samples, 0.52%)</title><rect x="375.3" y="1187.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (131 samples, 0.52%)</title><rect x="375.3" y="1171.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (131 samples, 0.52%)</title><rect x="375.3" y="1155.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (131 samples, 0.52%)</title><rect x="375.3" y="1139.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (131 samples, 0.52%)</title><rect x="375.3" y="1123.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (126 samples, 0.50%)</title><rect x="375.5" y="1107.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (125 samples, 0.50%)</title><rect x="375.6" y="1091.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (125 samples, 0.50%)</title><rect x="375.6" y="1075.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.6" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.06%)</title><rect x="375.6" y="1059.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="378.6" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (109 samples, 0.43%)</title><rect x="376.3" y="1059.0" width="5.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="379.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 0.39%)</title><rect x="376.8" y="1043.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.39%)</title><rect x="376.8" y="1027.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.8" y="1038.0"></text>
</g>
<g>
<title>sys_futex (93 samples, 0.37%)</title><rect x="377.1" y="1011.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (93 samples, 0.37%)</title><rect x="377.1" y="995.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.1" y="1006.0"></text>
</g>
<g>
<title>futex_wake (91 samples, 0.36%)</title><rect x="377.1" y="979.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="380.1" y="990.0"></text>
</g>
<g>
<title>wake_up_q (87 samples, 0.34%)</title><rect x="377.3" y="963.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.3" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (87 samples, 0.34%)</title><rect x="377.3" y="947.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.3" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (87 samples, 0.34%)</title><rect x="377.3" y="931.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="380.3" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.04%)</title><rect x="381.5" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.03%)</title><rect x="381.5" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (8,505 samples, 33.70%)</title><rect x="382.5" y="1523.0" width="397.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.5" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (8,498 samples, 33.68%)</title><rect x="382.9" y="1507.0" width="397.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.9" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (14 samples, 0.06%)</title><rect x="383.4" y="1491.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.4" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (7 samples, 0.03%)</title><rect x="383.7" y="1475.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.7" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (1,178 samples, 4.67%)</title><rect x="384.0" y="1491.0" width="55.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.0" y="1502.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (1,112 samples, 4.41%)</title><rect x="384.1" y="1475.0" width="52.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.1" y="1486.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (8 samples, 0.03%)</title><rect x="384.1" y="1459.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.1" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (8 samples, 0.03%)</title><rect x="384.1" y="1443.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (8 samples, 0.03%)</title><rect x="384.1" y="1427.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull (8 samples, 0.03%)</title><rect x="384.1" y="1411.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (8 samples, 0.03%)</title><rect x="384.1" y="1395.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (8 samples, 0.03%)</title><rect x="384.1" y="1379.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (8 samples, 0.03%)</title><rect x="384.1" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (1,104 samples, 4.37%)</title><rect x="384.5" y="1459.0" width="51.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.5" y="1470.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (8 samples, 0.03%)</title><rect x="384.5" y="1443.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (8 samples, 0.03%)</title><rect x="384.5" y="1427.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (8 samples, 0.03%)</title><rect x="384.5" y="1411.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (538 samples, 2.13%)</title><rect x="384.9" y="1443.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.9" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (6 samples, 0.02%)</title><rect x="384.9" y="1427.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (6 samples, 0.02%)</title><rect x="384.9" y="1411.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (120 samples, 0.48%)</title><rect x="385.2" y="1427.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (92 samples, 0.36%)</title><rect x="385.3" y="1411.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (77 samples, 0.31%)</title><rect x="385.3" y="1395.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.3" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (77 samples, 0.31%)</title><rect x="385.3" y="1379.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (64 samples, 0.25%)</title><rect x="385.3" y="1363.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (63 samples, 0.25%)</title><rect x="385.3" y="1347.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (16 samples, 0.06%)</title><rect x="385.3" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (16 samples, 0.06%)</title><rect x="385.3" y="1315.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (13 samples, 0.05%)</title><rect x="385.3" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.3" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (11 samples, 0.04%)</title><rect x="385.4" y="1283.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.04%)</title><rect x="385.4" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.04%)</title><rect x="385.4" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.04%)</title><rect x="385.4" y="1235.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="388.4" y="1246.0"></text>
</g>
<g>
<title>__write (10 samples, 0.04%)</title><rect x="385.4" y="1219.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="388.4" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.04%)</title><rect x="385.4" y="1203.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="388.4" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.04%)</title><rect x="385.4" y="1187.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.4" y="1198.0"></text>
</g>
<g>
<title>sys_write (10 samples, 0.04%)</title><rect x="385.4" y="1171.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.4" y="1182.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.04%)</title><rect x="385.4" y="1155.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.4" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.04%)</title><rect x="385.4" y="1139.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.4" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.04%)</title><rect x="385.4" y="1123.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="388.4" y="1134.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.04%)</title><rect x="385.4" y="1107.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.4" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.03%)</title><rect x="385.5" y="1091.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.5" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.03%)</title><rect x="385.5" y="1075.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.5" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.03%)</title><rect x="385.5" y="1059.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="388.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (43 samples, 0.17%)</title><rect x="386.1" y="1331.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (42 samples, 0.17%)</title><rect x="386.1" y="1315.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (7 samples, 0.03%)</title><rect x="386.1" y="1299.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.1" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (7 samples, 0.03%)</title><rect x="386.1" y="1283.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.1" y="1294.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (23 samples, 0.09%)</title><rect x="386.8" y="1299.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (23 samples, 0.09%)</title><rect x="386.8" y="1283.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (22 samples, 0.09%)</title><rect x="386.8" y="1267.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (18 samples, 0.07%)</title><rect x="387.0" y="1251.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (18 samples, 0.07%)</title><rect x="387.0" y="1235.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (18 samples, 0.07%)</title><rect x="387.0" y="1219.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.0" y="1230.0"></text>
</g>
<g>
<title>socket (14 samples, 0.06%)</title><rect x="387.2" y="1203.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="390.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.05%)</title><rect x="387.3" y="1187.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="390.3" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.05%)</title><rect x="387.3" y="1171.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.3" y="1182.0"></text>
</g>
<g>
<title>sys_socket (12 samples, 0.05%)</title><rect x="387.3" y="1155.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.3" y="1166.0"></text>
</g>
<g>
<title>__sock_create (10 samples, 0.04%)</title><rect x="387.3" y="1139.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.3" y="1150.0"></text>
</g>
<g>
<title>inet6_create (6 samples, 0.02%)</title><rect x="387.3" y="1123.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (11 samples, 0.04%)</title><rect x="388.4" y="1363.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (9 samples, 0.04%)</title><rect x="388.5" y="1347.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (9 samples, 0.04%)</title><rect x="388.5" y="1331.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (7 samples, 0.03%)</title><rect x="388.5" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (7 samples, 0.03%)</title><rect x="388.5" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (7 samples, 0.03%)</title><rect x="388.5" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (12 samples, 0.05%)</title><rect x="389.0" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.0" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$481/920576220.apply (10 samples, 0.04%)</title><rect x="389.1" y="1379.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.1" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (10 samples, 0.04%)</title><rect x="389.1" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.1" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (10 samples, 0.04%)</title><rect x="389.1" y="1347.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="389.7" y="1411.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (12 samples, 0.05%)</title><rect x="390.2" y="1411.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (12 samples, 0.05%)</title><rect x="390.2" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.2" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (12 samples, 0.05%)</title><rect x="390.2" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/428746855.invoke_MT (12 samples, 0.05%)</title><rect x="390.2" y="1363.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1354083458.invokeStatic (10 samples, 0.04%)</title><rect x="390.3" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.3" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (410 samples, 1.62%)</title><rect x="390.9" y="1427.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (409 samples, 1.62%)</title><rect x="390.9" y="1411.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (409 samples, 1.62%)</title><rect x="390.9" y="1395.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.9" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (409 samples, 1.62%)</title><rect x="390.9" y="1379.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (15 samples, 0.06%)</title><rect x="391.0" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (15 samples, 0.06%)</title><rect x="391.0" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (13 samples, 0.05%)</title><rect x="391.1" y="1331.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (13 samples, 0.05%)</title><rect x="391.1" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (11 samples, 0.04%)</title><rect x="391.1" y="1299.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (11 samples, 0.04%)</title><rect x="391.1" y="1283.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop (11 samples, 0.04%)</title><rect x="391.1" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (11 samples, 0.04%)</title><rect x="391.1" y="1251.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.04%)</title><rect x="391.2" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.04%)</title><rect x="391.2" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.04%)</title><rect x="391.2" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.2" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.04%)</title><rect x="391.2" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.04%)</title><rect x="391.2" y="1171.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.04%)</title><rect x="391.2" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.04%)</title><rect x="391.2" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (9 samples, 0.04%)</title><rect x="391.2" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.04%)</title><rect x="391.2" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (385 samples, 1.53%)</title><rect x="391.9" y="1363.0" width="18.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.9" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (378 samples, 1.50%)</title><rect x="392.1" y="1347.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (52 samples, 0.21%)</title><rect x="392.2" y="1331.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (12 samples, 0.05%)</title><rect x="392.8" y="1315.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (9 samples, 0.04%)</title><rect x="393.0" y="1299.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (21 samples, 0.08%)</title><rect x="393.5" y="1315.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (6 samples, 0.02%)</title><rect x="393.7" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (6 samples, 0.02%)</title><rect x="393.7" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (11 samples, 0.04%)</title><rect x="394.0" y="1299.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (11 samples, 0.04%)</title><rect x="394.0" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (11 samples, 0.04%)</title><rect x="394.0" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (9 samples, 0.04%)</title><rect x="394.0" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (9 samples, 0.04%)</title><rect x="394.0" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (9 samples, 0.04%)</title><rect x="394.0" y="1219.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (80 samples, 0.32%)</title><rect x="394.6" y="1331.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (80 samples, 0.32%)</title><rect x="394.6" y="1315.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (14 samples, 0.06%)</title><rect x="395.1" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (14 samples, 0.06%)</title><rect x="395.1" y="1283.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (16 samples, 0.06%)</title><rect x="395.7" y="1299.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.7" y="1310.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (11 samples, 0.04%)</title><rect x="396.0" y="1283.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.0" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (8 samples, 0.03%)</title><rect x="396.1" y="1267.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (37 samples, 0.15%)</title><rect x="396.5" y="1299.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (37 samples, 0.15%)</title><rect x="396.5" y="1283.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.5" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (34 samples, 0.13%)</title><rect x="396.6" y="1267.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.6" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (34 samples, 0.13%)</title><rect x="396.6" y="1251.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.6" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (29 samples, 0.11%)</title><rect x="396.7" y="1235.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (29 samples, 0.11%)</title><rect x="396.7" y="1219.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (29 samples, 0.11%)</title><rect x="396.7" y="1203.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (27 samples, 0.11%)</title><rect x="396.7" y="1187.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (18 samples, 0.07%)</title><rect x="396.7" y="1171.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (14 samples, 0.06%)</title><rect x="396.9" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (13 samples, 0.05%)</title><rect x="396.9" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.02%)</title><rect x="396.9" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (9 samples, 0.04%)</title><rect x="397.6" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (9 samples, 0.04%)</title><rect x="397.6" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.fillNull (6 samples, 0.02%)</title><rect x="397.7" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (6 samples, 0.02%)</title><rect x="397.7" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (245 samples, 0.97%)</title><rect x="398.3" y="1331.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (235 samples, 0.93%)</title><rect x="398.3" y="1315.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (13 samples, 0.05%)</title><rect x="398.8" y="1299.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (13 samples, 0.05%)</title><rect x="398.8" y="1283.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.postStop (6 samples, 0.02%)</title><rect x="398.8" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (17 samples, 0.07%)</title><rect x="399.4" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (169 samples, 0.67%)</title><rect x="400.2" y="1299.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onUpstreamFinish (11 samples, 0.04%)</title><rect x="400.4" y="1283.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (8 samples, 0.03%)</title><rect x="400.4" y="1267.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (7 samples, 0.03%)</title><rect x="400.5" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (7 samples, 0.03%)</title><rect x="400.5" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (6 samples, 0.02%)</title><rect x="400.5" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (9 samples, 0.04%)</title><rect x="400.9" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (6 samples, 0.02%)</title><rect x="401.5" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (135 samples, 0.53%)</title><rect x="401.8" y="1283.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (122 samples, 0.48%)</title><rect x="401.8" y="1267.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.8" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (117 samples, 0.46%)</title><rect x="402.0" y="1251.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (117 samples, 0.46%)</title><rect x="402.0" y="1235.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (117 samples, 0.46%)</title><rect x="402.0" y="1219.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (113 samples, 0.45%)</title><rect x="402.2" y="1203.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.2" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (113 samples, 0.45%)</title><rect x="402.2" y="1187.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.2" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (111 samples, 0.44%)</title><rect x="402.2" y="1171.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.2" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (111 samples, 0.44%)</title><rect x="402.2" y="1155.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (111 samples, 0.44%)</title><rect x="402.2" y="1139.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (110 samples, 0.44%)</title><rect x="402.3" y="1123.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (109 samples, 0.43%)</title><rect x="402.3" y="1107.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="405.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (87 samples, 0.34%)</title><rect x="402.4" y="1091.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (85 samples, 0.34%)</title><rect x="402.5" y="1075.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (80 samples, 0.32%)</title><rect x="402.5" y="1059.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.5" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (80 samples, 0.32%)</title><rect x="402.5" y="1043.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (73 samples, 0.29%)</title><rect x="402.8" y="1027.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.8" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (69 samples, 0.27%)</title><rect x="402.8" y="1011.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.8" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (69 samples, 0.27%)</title><rect x="402.8" y="995.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.8" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (68 samples, 0.27%)</title><rect x="402.9" y="979.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (68 samples, 0.27%)</title><rect x="402.9" y="963.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.9" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (67 samples, 0.27%)</title><rect x="402.9" y="947.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.9" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (59 samples, 0.23%)</title><rect x="403.0" y="931.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.0" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (58 samples, 0.23%)</title><rect x="403.0" y="915.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (58 samples, 0.23%)</title><rect x="403.0" y="899.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.0" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (58 samples, 0.23%)</title><rect x="403.0" y="883.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.0" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (58 samples, 0.23%)</title><rect x="403.0" y="867.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.0" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (58 samples, 0.23%)</title><rect x="403.0" y="851.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (58 samples, 0.23%)</title><rect x="403.0" y="835.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (58 samples, 0.23%)</title><rect x="403.0" y="819.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (58 samples, 0.23%)</title><rect x="403.0" y="803.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (56 samples, 0.22%)</title><rect x="403.1" y="787.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 0.22%)</title><rect x="403.1" y="771.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 0.22%)</title><rect x="403.1" y="755.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.03%)</title><rect x="403.2" y="739.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="406.2" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 0.19%)</title><rect x="403.5" y="739.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="406.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.16%)</title><rect x="403.8" y="723.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="406.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.16%)</title><rect x="403.8" y="707.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="406.8" y="718.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.15%)</title><rect x="404.0" y="691.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="407.0" y="702.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.15%)</title><rect x="404.0" y="675.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="407.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 0.15%)</title><rect x="404.0" y="659.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.13%)</title><rect x="404.2" y="643.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.13%)</title><rect x="404.2" y="627.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="407.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.13%)</title><rect x="404.2" y="611.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="407.2" y="622.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (6 samples, 0.02%)</title><rect x="406.5" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.05%)</title><rect x="406.8" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (12 samples, 0.05%)</title><rect x="406.8" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (11 samples, 0.04%)</title><rect x="406.8" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPush (12 samples, 0.05%)</title><rect x="407.5" y="1267.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.aggregator (8 samples, 0.03%)</title><rect x="407.6" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (15 samples, 0.06%)</title><rect x="408.1" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (10 samples, 0.04%)</title><rect x="408.4" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (7 samples, 0.03%)</title><rect x="408.4" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (7 samples, 0.03%)</title><rect x="408.4" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (6 samples, 0.02%)</title><rect x="408.4" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (6 samples, 0.02%)</title><rect x="408.4" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (6 samples, 0.02%)</title><rect x="408.4" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.4" y="1214.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="408.9" y="1299.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="411.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (10 samples, 0.04%)</title><rect x="409.3" y="1315.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (10 samples, 0.04%)</title><rect x="409.3" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (8 samples, 0.03%)</title><rect x="410.0" y="1443.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (8 samples, 0.03%)</title><rect x="410.0" y="1427.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (6 samples, 0.02%)</title><rect x="410.1" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (174 samples, 0.69%)</title><rect x="410.5" y="1443.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (160 samples, 0.63%)</title><rect x="410.5" y="1427.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (160 samples, 0.63%)</title><rect x="410.5" y="1411.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (110 samples, 0.44%)</title><rect x="410.5" y="1395.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (110 samples, 0.44%)</title><rect x="410.5" y="1379.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (110 samples, 0.44%)</title><rect x="410.5" y="1363.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (110 samples, 0.44%)</title><rect x="410.5" y="1347.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (110 samples, 0.44%)</title><rect x="410.5" y="1331.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.5" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (81 samples, 0.32%)</title><rect x="410.5" y="1315.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (81 samples, 0.32%)</title><rect x="410.5" y="1299.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (81 samples, 0.32%)</title><rect x="410.5" y="1283.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.5" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (81 samples, 0.32%)</title><rect x="410.5" y="1267.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.5" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (79 samples, 0.31%)</title><rect x="410.5" y="1251.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (79 samples, 0.31%)</title><rect x="410.5" y="1235.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (79 samples, 0.31%)</title><rect x="410.5" y="1219.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (79 samples, 0.31%)</title><rect x="410.5" y="1203.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (79 samples, 0.31%)</title><rect x="410.5" y="1187.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 0.31%)</title><rect x="410.5" y="1171.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (79 samples, 0.31%)</title><rect x="410.5" y="1155.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.5" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (73 samples, 0.29%)</title><rect x="410.7" y="1139.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="413.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.26%)</title><rect x="411.1" y="1123.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.1" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.26%)</title><rect x="411.1" y="1107.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="414.1" y="1118.0"></text>
</g>
<g>
<title>sys_futex (58 samples, 0.23%)</title><rect x="411.4" y="1091.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.4" y="1102.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.23%)</title><rect x="411.4" y="1075.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.4" y="1086.0"></text>
</g>
<g>
<title>futex_wake (56 samples, 0.22%)</title><rect x="411.4" y="1059.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.4" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.19%)</title><rect x="411.7" y="1043.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.7" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 0.19%)</title><rect x="411.7" y="1027.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.7" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 0.19%)</title><rect x="411.7" y="1011.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.register (29 samples, 0.11%)</title><rect x="414.2" y="1315.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.addInhabitants (29 samples, 0.11%)</title><rect x="414.2" y="1299.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.2" y="1310.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="415.1" y="1283.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="418.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (20 samples, 0.08%)</title><rect x="415.6" y="1395.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (19 samples, 0.08%)</title><rect x="415.6" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (19 samples, 0.08%)</title><rect x="415.6" y="1363.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (19 samples, 0.08%)</title><rect x="415.6" y="1347.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.6" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.createMailbox (6 samples, 0.02%)</title><rect x="416.2" y="1331.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.&lt;init&gt; (6 samples, 0.02%)</title><rect x="416.2" y="1315.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.replaceWith (30 samples, 0.12%)</title><rect x="416.5" y="1395.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.locked (30 samples, 0.12%)</title><rect x="416.5" y="1379.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.06%)</title><rect x="416.6" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.06%)</title><rect x="416.6" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.6" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (14 samples, 0.06%)</title><rect x="416.6" y="1331.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (14 samples, 0.06%)</title><rect x="416.6" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (14 samples, 0.06%)</title><rect x="416.6" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.6" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (13 samples, 0.05%)</title><rect x="417.3" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell$$Lambda$139/1932331206.apply$mcV$sp (8 samples, 0.03%)</title><rect x="417.4" y="1347.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.$anonfun$replaceWith$1 (8 samples, 0.03%)</title><rect x="417.4" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (14 samples, 0.06%)</title><rect x="417.9" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (14 samples, 0.06%)</title><rect x="417.9" y="1411.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (14 samples, 0.06%)</title><rect x="417.9" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (9 samples, 0.04%)</title><rect x="418.1" y="1379.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (9 samples, 0.04%)</title><rect x="418.1" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (9 samples, 0.04%)</title><rect x="418.1" y="1347.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (9 samples, 0.04%)</title><rect x="418.1" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (252 samples, 1.00%)</title><rect x="418.6" y="1443.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (252 samples, 1.00%)</title><rect x="418.6" y="1427.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (252 samples, 1.00%)</title><rect x="418.6" y="1411.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setReceiveTimeout (10 samples, 0.04%)</title><rect x="418.9" y="1395.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout$ (10 samples, 0.04%)</title><rect x="418.9" y="1379.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout (8 samples, 0.03%)</title><rect x="419.0" y="1363.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.akka$actor$dungeon$ReceiveTimeout$$receiveTimeoutData_$eq (6 samples, 0.02%)</title><rect x="419.1" y="1347.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (232 samples, 0.92%)</title><rect x="419.4" y="1395.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (26 samples, 0.10%)</title><rect x="419.6" y="1379.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.6" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (25 samples, 0.10%)</title><rect x="419.6" y="1363.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.6" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (6 samples, 0.02%)</title><rect x="419.6" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (6 samples, 0.02%)</title><rect x="419.6" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (19 samples, 0.08%)</title><rect x="419.9" y="1347.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (15 samples, 0.06%)</title><rect x="419.9" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (11 samples, 0.04%)</title><rect x="420.0" y="1315.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (11 samples, 0.04%)</title><rect x="420.0" y="1299.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (11 samples, 0.04%)</title><rect x="420.0" y="1283.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (8 samples, 0.03%)</title><rect x="420.1" y="1267.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (34 samples, 0.13%)</title><rect x="420.8" y="1379.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (32 samples, 0.13%)</title><rect x="420.9" y="1363.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.9" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (29 samples, 0.11%)</title><rect x="421.0" y="1347.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.0" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (18 samples, 0.07%)</title><rect x="421.0" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.03%)</title><rect x="421.1" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (11 samples, 0.04%)</title><rect x="421.8" y="1331.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (9 samples, 0.04%)</title><rect x="421.8" y="1315.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (8 samples, 0.03%)</title><rect x="421.9" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (7 samples, 0.03%)</title><rect x="422.4" y="1379.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs$ (7 samples, 0.03%)</title><rect x="422.4" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs (7 samples, 0.03%)</title><rect x="422.4" y="1347.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (64 samples, 0.25%)</title><rect x="422.8" y="1379.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (64 samples, 0.25%)</title><rect x="422.8" y="1363.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (64 samples, 0.25%)</title><rect x="422.8" y="1347.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (64 samples, 0.25%)</title><rect x="422.8" y="1331.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.8" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (64 samples, 0.25%)</title><rect x="422.8" y="1315.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (59 samples, 0.23%)</title><rect x="423.1" y="1299.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (59 samples, 0.23%)</title><rect x="423.1" y="1283.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (59 samples, 0.23%)</title><rect x="423.1" y="1267.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (59 samples, 0.23%)</title><rect x="423.1" y="1251.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (57 samples, 0.23%)</title><rect x="423.1" y="1235.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (57 samples, 0.23%)</title><rect x="423.1" y="1219.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (57 samples, 0.23%)</title><rect x="423.1" y="1203.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (57 samples, 0.23%)</title><rect x="423.1" y="1187.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (57 samples, 0.23%)</title><rect x="423.1" y="1171.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 0.22%)</title><rect x="423.1" y="1155.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 0.22%)</title><rect x="423.1" y="1139.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.1" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.03%)</title><rect x="423.2" y="1123.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="426.2" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (46 samples, 0.18%)</title><rect x="423.6" y="1123.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="426.6" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.17%)</title><rect x="423.7" y="1107.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.7" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.17%)</title><rect x="423.7" y="1091.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.04%)</title><rect x="423.9" y="1075.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="426.9" y="1086.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.04%)</title><rect x="424.0" y="1059.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.0" y="1070.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.04%)</title><rect x="424.0" y="1043.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.0" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.03%)</title><rect x="424.0" y="1027.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.0" y="1038.0"></text>
</g>
<g>
<title>sys_futex (29 samples, 0.11%)</title><rect x="424.4" y="1075.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.11%)</title><rect x="424.4" y="1059.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.4" y="1070.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.11%)</title><rect x="424.4" y="1043.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.4" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.10%)</title><rect x="424.6" y="1027.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.6" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 0.10%)</title><rect x="424.6" y="1011.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.6" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.10%)</title><rect x="424.6" y="995.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (14 samples, 0.06%)</title><rect x="425.8" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.8" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (13 samples, 0.05%)</title><rect x="425.9" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (13 samples, 0.05%)</title><rect x="425.9" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (75 samples, 0.30%)</title><rect x="426.6" y="1379.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (75 samples, 0.30%)</title><rect x="426.6" y="1363.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (75 samples, 0.30%)</title><rect x="426.6" y="1347.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (75 samples, 0.30%)</title><rect x="426.6" y="1331.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.6" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (66 samples, 0.26%)</title><rect x="426.6" y="1315.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (6 samples, 0.02%)</title><rect x="426.7" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (6 samples, 0.02%)</title><rect x="426.7" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (50 samples, 0.20%)</title><rect x="427.0" y="1299.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (38 samples, 0.15%)</title><rect x="427.1" y="1283.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (36 samples, 0.14%)</title><rect x="427.1" y="1267.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (27 samples, 0.11%)</title><rect x="427.3" y="1251.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.03%)</title><rect x="427.3" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (14 samples, 0.06%)</title><rect x="427.6" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (14 samples, 0.06%)</title><rect x="427.6" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (12 samples, 0.05%)</title><rect x="427.6" y="1203.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (11 samples, 0.04%)</title><rect x="427.6" y="1187.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (8 samples, 0.03%)</title><rect x="427.8" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (7 samples, 0.03%)</title><rect x="427.8" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.02%)</title><rect x="428.3" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.02%)</title><rect x="428.3" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.04%)</title><rect x="428.8" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.04%)</title><rect x="428.8" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.02%)</title><rect x="429.3" y="1299.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (121 samples, 0.48%)</title><rect x="430.4" y="1443.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (121 samples, 0.48%)</title><rect x="430.4" y="1427.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (121 samples, 0.48%)</title><rect x="430.4" y="1411.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (93 samples, 0.37%)</title><rect x="430.6" y="1395.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (93 samples, 0.37%)</title><rect x="430.6" y="1379.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (93 samples, 0.37%)</title><rect x="430.6" y="1363.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (88 samples, 0.35%)</title><rect x="430.7" y="1347.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (88 samples, 0.35%)</title><rect x="430.7" y="1331.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (87 samples, 0.34%)</title><rect x="430.7" y="1315.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (87 samples, 0.34%)</title><rect x="430.7" y="1299.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (37 samples, 0.15%)</title><rect x="430.8" y="1283.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (37 samples, 0.15%)</title><rect x="430.8" y="1267.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (37 samples, 0.15%)</title><rect x="430.8" y="1251.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (49 samples, 0.19%)</title><rect x="432.5" y="1283.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (49 samples, 0.19%)</title><rect x="432.5" y="1267.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (49 samples, 0.19%)</title><rect x="432.5" y="1251.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (49 samples, 0.19%)</title><rect x="432.5" y="1235.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (46 samples, 0.18%)</title><rect x="432.6" y="1219.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (44 samples, 0.17%)</title><rect x="432.7" y="1203.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (43 samples, 0.17%)</title><rect x="432.8" y="1187.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (41 samples, 0.16%)</title><rect x="432.9" y="1171.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (7 samples, 0.03%)</title><rect x="432.9" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.02%)</title><rect x="432.9" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (34 samples, 0.13%)</title><rect x="433.2" y="1155.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (34 samples, 0.13%)</title><rect x="433.2" y="1139.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (10 samples, 0.04%)</title><rect x="433.2" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.04%)</title><rect x="433.2" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (6 samples, 0.02%)</title><rect x="433.4" y="1091.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.02%)</title><rect x="433.4" y="1075.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (22 samples, 0.09%)</title><rect x="433.6" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (20 samples, 0.08%)</title><rect x="433.7" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (8 samples, 0.03%)</title><rect x="433.7" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (8 samples, 0.03%)</title><rect x="433.7" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (12 samples, 0.05%)</title><rect x="434.1" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (12 samples, 0.05%)</title><rect x="434.1" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (10 samples, 0.04%)</title><rect x="434.2" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.04%)</title><rect x="434.2" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (10 samples, 0.04%)</title><rect x="434.2" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (10 samples, 0.04%)</title><rect x="434.2" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (9 samples, 0.04%)</title><rect x="434.2" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (8 samples, 0.03%)</title><rect x="434.3" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.03%)</title><rect x="434.3" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.03%)</title><rect x="434.3" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.3" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (9 samples, 0.04%)</title><rect x="435.0" y="1395.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (9 samples, 0.04%)</title><rect x="435.0" y="1379.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor (9 samples, 0.04%)</title><rect x="435.0" y="1363.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (6 samples, 0.02%)</title><rect x="435.5" y="1395.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.5" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (6 samples, 0.02%)</title><rect x="435.5" y="1379.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$650/2075429577.apply$mcV$sp (6 samples, 0.02%)</title><rect x="435.5" y="1363.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (6 samples, 0.02%)</title><rect x="435.5" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (40 samples, 0.16%)</title><rect x="436.1" y="1475.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (40 samples, 0.16%)</title><rect x="436.1" y="1459.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (40 samples, 0.16%)</title><rect x="436.1" y="1443.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (15 samples, 0.06%)</title><rect x="436.3" y="1427.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.3" y="1438.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (15 samples, 0.06%)</title><rect x="436.3" y="1411.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.3" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (16 samples, 0.06%)</title><rect x="437.0" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (16 samples, 0.06%)</title><rect x="437.0" y="1411.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.0" y="1422.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="437.4" y="1395.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="440.4" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (14 samples, 0.06%)</title><rect x="438.0" y="1475.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.0" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.isClosed (8 samples, 0.03%)</title><rect x="438.6" y="1475.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (8 samples, 0.03%)</title><rect x="438.6" y="1459.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.6" y="1470.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (8 samples, 0.03%)</title><rect x="438.6" y="1443.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (7,275 samples, 28.83%)</title><rect x="439.1" y="1491.0" width="340.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.1" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (7,092 samples, 28.10%)</title><rect x="439.3" y="1475.0" width="331.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.3" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (9 samples, 0.04%)</title><rect x="439.3" y="1459.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.3" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeoutIfNeeded (129 samples, 0.51%)</title><rect x="439.7" y="1459.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded$ (129 samples, 0.51%)</title><rect x="439.7" y="1443.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded (128 samples, 0.51%)</title><rect x="439.7" y="1427.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (128 samples, 0.51%)</title><rect x="439.7" y="1411.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (128 samples, 0.51%)</title><rect x="439.7" y="1395.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (128 samples, 0.51%)</title><rect x="439.7" y="1379.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.cancel (111 samples, 0.44%)</title><rect x="440.1" y="1363.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.extractTask (108 samples, 0.43%)</title><rect x="440.2" y="1347.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (11 samples, 0.04%)</title><rect x="441.9" y="1331.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (10 samples, 0.04%)</title><rect x="442.4" y="1331.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.4" y="1342.0"></text>
</g>
<g>
<title>itable stub (16 samples, 0.06%)</title><rect x="442.9" y="1331.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="445.9" y="1342.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (35 samples, 0.14%)</title><rect x="443.7" y="1331.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.7" y="1342.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (9 samples, 0.04%)</title><rect x="445.3" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (31 samples, 0.12%)</title><rect x="445.7" y="1459.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (31 samples, 0.12%)</title><rect x="445.7" y="1443.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (30 samples, 0.12%)</title><rect x="445.8" y="1427.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (14 samples, 0.06%)</title><rect x="446.5" y="1411.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (14 samples, 0.06%)</title><rect x="446.5" y="1395.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (14 samples, 0.06%)</title><rect x="446.5" y="1379.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (10 samples, 0.04%)</title><rect x="446.6" y="1363.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (8 samples, 0.03%)</title><rect x="446.7" y="1347.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (8 samples, 0.03%)</title><rect x="446.7" y="1331.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (8 samples, 0.03%)</title><rect x="446.7" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (6 samples, 0.02%)</title><rect x="446.8" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (6 samples, 0.02%)</title><rect x="446.8" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (6,913 samples, 27.39%)</title><rect x="447.2" y="1459.0" width="323.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.2" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.aroundReceive (53 samples, 0.21%)</title><rect x="447.2" y="1443.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (53 samples, 0.21%)</title><rect x="447.2" y="1427.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (53 samples, 0.21%)</title><rect x="447.2" y="1411.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.2" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (53 samples, 0.21%)</title><rect x="447.2" y="1395.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.2" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$anonfun$tryingToJoin$1.applyOrElse (53 samples, 0.21%)</title><rect x="447.2" y="1379.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.2" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.join (53 samples, 0.21%)</title><rect x="447.2" y="1363.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.2" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (42 samples, 0.17%)</title><rect x="447.2" y="1347.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.2" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.createRapidClusterBuilder$1 (8 samples, 0.03%)</title><rect x="447.2" y="1331.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.2" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.setMetadata (7 samples, 0.03%)</title><rect x="447.2" y="1315.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.2" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.putAllMetadata (7 samples, 0.03%)</title><rect x="447.2" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.2" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.internalGetMutableMetadata (7 samples, 0.03%)</title><rect x="447.2" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.2" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$MetadataDefaultEntryHolder.&lt;clinit&gt; (7 samples, 0.03%)</title><rect x="447.2" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.2" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (34 samples, 0.13%)</title><rect x="447.6" y="1331.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.6" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (34 samples, 0.13%)</title><rect x="447.6" y="1315.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.6" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (9 samples, 0.04%)</title><rect x="447.6" y="1299.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.6" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (24 samples, 0.10%)</title><rect x="448.0" y="1299.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.0" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.createClusterFromJoinResponse (18 samples, 0.07%)</title><rect x="448.1" y="1283.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.1" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.&lt;init&gt; (7 samples, 0.03%)</title><rect x="448.1" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.1" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.&lt;init&gt; (8 samples, 0.03%)</title><rect x="448.4" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.4" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (7 samples, 0.03%)</title><rect x="448.5" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.5" y="1262.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7 samples, 0.03%)</title><rect x="448.5" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.5" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (7 samples, 0.03%)</title><rect x="448.5" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.5" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.03%)</title><rect x="448.5" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.5" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (6 samples, 0.02%)</title><rect x="448.5" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (6 samples, 0.02%)</title><rect x="448.5" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.02%)</title><rect x="448.5" y="1155.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.5" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.&lt;init&gt; (8 samples, 0.03%)</title><rect x="449.2" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.2" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (10 samples, 0.04%)</title><rect x="449.7" y="1443.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (10 samples, 0.04%)</title><rect x="449.7" y="1427.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (10 samples, 0.04%)</title><rect x="449.7" y="1411.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.7" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (10 samples, 0.04%)</title><rect x="449.7" y="1395.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.7" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (8 samples, 0.03%)</title><rect x="449.7" y="1379.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.7" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (8 samples, 0.03%)</title><rect x="449.7" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.7" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (75 samples, 0.30%)</title><rect x="450.3" y="1443.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (75 samples, 0.30%)</title><rect x="450.3" y="1427.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (75 samples, 0.30%)</title><rect x="450.3" y="1411.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.3" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (75 samples, 0.30%)</title><rect x="450.3" y="1395.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.3" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (75 samples, 0.30%)</title><rect x="450.3" y="1379.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.3" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (72 samples, 0.29%)</title><rect x="450.3" y="1363.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.3" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (71 samples, 0.28%)</title><rect x="450.4" y="1347.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.4" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (70 samples, 0.28%)</title><rect x="450.4" y="1331.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (70 samples, 0.28%)</title><rect x="450.4" y="1315.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (70 samples, 0.28%)</title><rect x="450.4" y="1299.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (70 samples, 0.28%)</title><rect x="450.4" y="1283.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (70 samples, 0.28%)</title><rect x="450.4" y="1267.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (70 samples, 0.28%)</title><rect x="450.4" y="1251.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (6 samples, 0.02%)</title><rect x="450.4" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (63 samples, 0.25%)</title><rect x="450.7" y="1235.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (63 samples, 0.25%)</title><rect x="450.7" y="1219.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (63 samples, 0.25%)</title><rect x="450.7" y="1203.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (63 samples, 0.25%)</title><rect x="450.7" y="1187.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (60 samples, 0.24%)</title><rect x="450.8" y="1171.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (56 samples, 0.22%)</title><rect x="450.8" y="1155.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (50 samples, 0.20%)</title><rect x="450.9" y="1139.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (43 samples, 0.17%)</title><rect x="450.9" y="1123.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (40 samples, 0.16%)</title><rect x="450.9" y="1107.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (37 samples, 0.15%)</title><rect x="450.9" y="1091.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (35 samples, 0.14%)</title><rect x="450.9" y="1075.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (30 samples, 0.12%)</title><rect x="451.0" y="1059.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (29 samples, 0.11%)</title><rect x="451.0" y="1043.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (23 samples, 0.09%)</title><rect x="451.0" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (17 samples, 0.07%)</title><rect x="451.0" y="1011.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="451.1" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.03%)</title><rect x="451.1" y="979.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.1" y="990.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (7 samples, 0.03%)</title><rect x="452.9" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.9" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$884/842422776.apply (7 samples, 0.03%)</title><rect x="452.9" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.9" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (7 samples, 0.03%)</title><rect x="452.9" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.9" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (7 samples, 0.03%)</title><rect x="452.9" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (7 samples, 0.03%)</title><rect x="452.9" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.9" y="1070.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (25 samples, 0.10%)</title><rect x="453.9" y="1443.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (25 samples, 0.10%)</title><rect x="453.9" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (25 samples, 0.10%)</title><rect x="453.9" y="1411.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.9" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (25 samples, 0.10%)</title><rect x="453.9" y="1395.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.9" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (21 samples, 0.08%)</title><rect x="453.9" y="1379.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.9" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$782/1478140466.apply$mcV$sp (7 samples, 0.03%)</title><rect x="454.2" y="1363.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.2" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$2 (7 samples, 0.03%)</title><rect x="454.2" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.2" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.warn (6 samples, 0.02%)</title><rect x="454.2" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.2" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (6 samples, 0.02%)</title><rect x="454.2" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.2" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 0.02%)</title><rect x="454.2" y="1299.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.2" y="1310.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (6 samples, 0.02%)</title><rect x="454.6" y="1363.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.6" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (250 samples, 0.99%)</title><rect x="455.1" y="1443.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (249 samples, 0.99%)</title><rect x="455.1" y="1427.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (249 samples, 0.99%)</title><rect x="455.1" y="1411.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.1" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (249 samples, 0.99%)</title><rect x="455.1" y="1395.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.1" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (23 samples, 0.09%)</title><rect x="455.3" y="1379.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.3" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (16 samples, 0.06%)</title><rect x="455.4" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (13 samples, 0.05%)</title><rect x="455.5" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (6 samples, 0.02%)</title><rect x="455.9" y="1331.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (6 samples, 0.02%)</title><rect x="455.9" y="1315.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (179 samples, 0.71%)</title><rect x="456.4" y="1379.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.4" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (171 samples, 0.68%)</title><rect x="456.4" y="1363.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.4" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (130 samples, 0.52%)</title><rect x="456.6" y="1347.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (130 samples, 0.52%)</title><rect x="456.6" y="1331.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.6" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (16 samples, 0.06%)</title><rect x="456.7" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (14 samples, 0.06%)</title><rect x="456.7" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (13 samples, 0.05%)</title><rect x="456.7" y="1283.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (7 samples, 0.03%)</title><rect x="456.7" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (6 samples, 0.02%)</title><rect x="456.7" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (6 samples, 0.02%)</title><rect x="456.7" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (108 samples, 0.43%)</title><rect x="457.4" y="1315.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (108 samples, 0.43%)</title><rect x="457.4" y="1299.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (10 samples, 0.04%)</title><rect x="457.5" y="1283.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (10 samples, 0.04%)</title><rect x="457.5" y="1267.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (9 samples, 0.04%)</title><rect x="457.5" y="1251.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.03%)</title><rect x="457.5" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.02%)</title><rect x="457.5" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (95 samples, 0.38%)</title><rect x="458.0" y="1283.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (95 samples, 0.38%)</title><rect x="458.0" y="1267.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (95 samples, 0.38%)</title><rect x="458.0" y="1251.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$410/527926471.apply (92 samples, 0.36%)</title><rect x="458.1" y="1235.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (92 samples, 0.36%)</title><rect x="458.1" y="1219.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (49 samples, 0.19%)</title><rect x="458.3" y="1203.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (49 samples, 0.19%)</title><rect x="458.3" y="1187.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (33 samples, 0.13%)</title><rect x="458.4" y="1171.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (23 samples, 0.09%)</title><rect x="458.4" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (13 samples, 0.05%)</title><rect x="458.5" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (6 samples, 0.02%)</title><rect x="458.5" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (8 samples, 0.03%)</title><rect x="459.1" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (7 samples, 0.03%)</title><rect x="459.5" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (7 samples, 0.03%)</title><rect x="459.5" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (7 samples, 0.03%)</title><rect x="459.5" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1800096300.apply (7 samples, 0.03%)</title><rect x="459.5" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (7 samples, 0.03%)</title><rect x="459.5" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (19 samples, 0.08%)</title><rect x="461.2" y="1203.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (11 samples, 0.04%)</title><rect x="461.3" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (6 samples, 0.02%)</title><rect x="462.1" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (6 samples, 0.02%)</title><rect x="462.1" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (6 samples, 0.02%)</title><rect x="462.1" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (6 samples, 0.02%)</title><rect x="462.1" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (6 samples, 0.02%)</title><rect x="462.1" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (35 samples, 0.14%)</title><rect x="462.8" y="1347.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.8" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (35 samples, 0.14%)</title><rect x="462.8" y="1331.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (35 samples, 0.14%)</title><rect x="462.8" y="1315.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (35 samples, 0.14%)</title><rect x="462.8" y="1299.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (22 samples, 0.09%)</title><rect x="462.8" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (19 samples, 0.08%)</title><rect x="462.8" y="1267.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (19 samples, 0.08%)</title><rect x="462.8" y="1251.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.06%)</title><rect x="463.0" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (14 samples, 0.06%)</title><rect x="463.0" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (14 samples, 0.06%)</title><rect x="463.0" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.0" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (13 samples, 0.05%)</title><rect x="463.1" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (13 samples, 0.05%)</title><rect x="463.1" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (13 samples, 0.05%)</title><rect x="463.1" y="1155.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (13 samples, 0.05%)</title><rect x="463.1" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (13 samples, 0.05%)</title><rect x="463.1" y="1123.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (13 samples, 0.05%)</title><rect x="463.1" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (13 samples, 0.05%)</title><rect x="463.1" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.05%)</title><rect x="463.1" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (11 samples, 0.04%)</title><rect x="463.1" y="1059.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (11 samples, 0.04%)</title><rect x="463.1" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (11 samples, 0.04%)</title><rect x="463.1" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (11 samples, 0.04%)</title><rect x="463.1" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (11 samples, 0.04%)</title><rect x="463.1" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (11 samples, 0.04%)</title><rect x="463.1" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (11 samples, 0.04%)</title><rect x="463.1" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (11 samples, 0.04%)</title><rect x="463.1" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (11 samples, 0.04%)</title><rect x="463.1" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.04%)</title><rect x="463.1" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (11 samples, 0.04%)</title><rect x="463.1" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (11 samples, 0.04%)</title><rect x="463.1" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (11 samples, 0.04%)</title><rect x="463.1" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (10 samples, 0.04%)</title><rect x="463.2" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.2" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (10 samples, 0.04%)</title><rect x="463.2" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.2" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (10 samples, 0.04%)</title><rect x="463.2" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.2" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (10 samples, 0.04%)</title><rect x="463.2" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.2" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (10 samples, 0.04%)</title><rect x="463.2" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (10 samples, 0.04%)</title><rect x="463.2" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.04%)</title><rect x="463.2" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (9 samples, 0.04%)</title><rect x="463.2" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (8 samples, 0.03%)</title><rect x="463.2" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.2" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (8 samples, 0.03%)</title><rect x="463.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.2" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (8 samples, 0.03%)</title><rect x="463.2" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (8 samples, 0.03%)</title><rect x="463.2" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.2" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (8 samples, 0.03%)</title><rect x="463.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.2" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (8 samples, 0.03%)</title><rect x="463.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (8 samples, 0.03%)</title><rect x="463.2" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.2" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (8 samples, 0.03%)</title><rect x="463.2" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="463.2" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (7 samples, 0.03%)</title><rect x="463.2" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (10 samples, 0.04%)</title><rect x="463.8" y="1283.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (10 samples, 0.04%)</title><rect x="463.8" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (10 samples, 0.04%)</title><rect x="463.8" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (10 samples, 0.04%)</title><rect x="463.8" y="1235.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (10 samples, 0.04%)</title><rect x="463.8" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (10 samples, 0.04%)</title><rect x="463.8" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.8" y="1214.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (7 samples, 0.03%)</title><rect x="463.9" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (7 samples, 0.03%)</title><rect x="464.4" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.4" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (6 samples, 0.02%)</title><rect x="464.5" y="1347.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (6 samples, 0.02%)</title><rect x="464.5" y="1331.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.02%)</title><rect x="464.5" y="1315.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.02%)</title><rect x="464.5" y="1299.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (42 samples, 0.17%)</title><rect x="464.8" y="1379.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.8" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (37 samples, 0.15%)</title><rect x="465.0" y="1363.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.0" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (37 samples, 0.15%)</title><rect x="465.0" y="1347.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (37 samples, 0.15%)</title><rect x="465.0" y="1331.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.0" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (37 samples, 0.15%)</title><rect x="465.0" y="1315.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (36 samples, 0.14%)</title><rect x="465.1" y="1299.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.1" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (36 samples, 0.14%)</title><rect x="465.1" y="1283.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.1" y="1294.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (36 samples, 0.14%)</title><rect x="465.1" y="1267.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.1" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (36 samples, 0.14%)</title><rect x="465.1" y="1251.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.1" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (35 samples, 0.14%)</title><rect x="465.1" y="1235.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (34 samples, 0.13%)</title><rect x="465.2" y="1219.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.2" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (31 samples, 0.12%)</title><rect x="465.3" y="1203.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (30 samples, 0.12%)</title><rect x="465.3" y="1187.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.3" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (28 samples, 0.11%)</title><rect x="465.4" y="1171.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (14 samples, 0.06%)</title><rect x="465.5" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (13 samples, 0.05%)</title><rect x="465.5" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (11 samples, 0.04%)</title><rect x="465.6" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.6" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (8 samples, 0.03%)</title><rect x="465.8" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.foreach (7 samples, 0.03%)</title><rect x="465.8" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (7 samples, 0.03%)</title><rect x="465.8" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (7 samples, 0.03%)</title><rect x="465.8" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.8" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$$Lambda$1080/2001573802.apply (6 samples, 0.02%)</title><rect x="465.9" y="1043.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.9" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1$adapted (6 samples, 0.02%)</title><rect x="465.9" y="1027.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.9" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1 (6 samples, 0.02%)</title><rect x="465.9" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.9" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (6 samples, 0.02%)</title><rect x="465.9" y="995.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.hashCode (6 samples, 0.02%)</title><rect x="465.9" y="979.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.9" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (6 samples, 0.02%)</title><rect x="465.9" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.9" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (6 samples, 0.02%)</title><rect x="465.9" y="947.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/settings/WebSocketSettingsImpl.hashCode (6 samples, 0.02%)</title><rect x="466.2" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.2" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (6 samples, 0.02%)</title><rect x="466.2" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.2" y="1150.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (6 samples, 0.02%)</title><rect x="466.2" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.2" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (6 samples, 0.02%)</title><rect x="466.2" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.2" y="1118.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (21 samples, 0.08%)</title><rect x="466.8" y="1443.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (21 samples, 0.08%)</title><rect x="466.8" y="1427.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (21 samples, 0.08%)</title><rect x="466.8" y="1411.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (20 samples, 0.08%)</title><rect x="466.8" y="1395.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (15 samples, 0.06%)</title><rect x="466.8" y="1379.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (14 samples, 0.06%)</title><rect x="466.8" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (14 samples, 0.06%)</title><rect x="466.8" y="1347.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (14 samples, 0.06%)</title><rect x="466.8" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.8" y="1342.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (11 samples, 0.04%)</title><rect x="466.9" y="1315.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="1326.0"></text>
</g>
<g>
<title>akka/routing/Router.route (10 samples, 0.04%)</title><rect x="467.0" y="1299.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.send (9 samples, 0.04%)</title><rect x="467.0" y="1283.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.0" y="1294.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (9 samples, 0.04%)</title><rect x="467.0" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (9 samples, 0.04%)</title><rect x="467.0" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (8 samples, 0.03%)</title><rect x="467.0" y="1235.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.03%)</title><rect x="467.0" y="1219.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.03%)</title><rect x="467.0" y="1203.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.03%)</title><rect x="467.0" y="1187.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.02%)</title><rect x="467.1" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.02%)</title><rect x="467.1" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.02%)</title><rect x="467.1" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.02%)</title><rect x="467.1" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.02%)</title><rect x="467.1" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="467.1" y="1091.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.02%)</title><rect x="467.1" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="467.1" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.1" y="1070.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (159 samples, 0.63%)</title><rect x="467.7" y="1443.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (159 samples, 0.63%)</title><rect x="467.7" y="1427.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (159 samples, 0.63%)</title><rect x="467.7" y="1411.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.7" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (159 samples, 0.63%)</title><rect x="467.7" y="1395.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (157 samples, 0.62%)</title><rect x="467.8" y="1379.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (106 samples, 0.42%)</title><rect x="467.9" y="1363.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (105 samples, 0.42%)</title><rect x="467.9" y="1347.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (105 samples, 0.42%)</title><rect x="467.9" y="1331.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (103 samples, 0.41%)</title><rect x="468.0" y="1315.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (22 samples, 0.09%)</title><rect x="468.2" y="1299.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (22 samples, 0.09%)</title><rect x="468.2" y="1283.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (22 samples, 0.09%)</title><rect x="468.2" y="1267.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (21 samples, 0.08%)</title><rect x="468.2" y="1251.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (10 samples, 0.04%)</title><rect x="468.2" y="1235.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (10 samples, 0.04%)</title><rect x="468.2" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (10 samples, 0.04%)</title><rect x="468.2" y="1203.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (9 samples, 0.04%)</title><rect x="468.3" y="1187.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (9 samples, 0.04%)</title><rect x="468.3" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (8 samples, 0.03%)</title><rect x="468.3" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (11 samples, 0.04%)</title><rect x="468.7" y="1235.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (11 samples, 0.04%)</title><rect x="468.7" y="1219.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="468.7" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.04%)</title><rect x="468.7" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.04%)</title><rect x="468.8" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.04%)</title><rect x="468.8" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.03%)</title><rect x="468.8" y="1139.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.03%)</title><rect x="468.8" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.03%)</title><rect x="468.8" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.03%)</title><rect x="468.8" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.03%)</title><rect x="468.8" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="468.8" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (16 samples, 0.06%)</title><rect x="469.4" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (16 samples, 0.06%)</title><rect x="469.4" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (16 samples, 0.06%)</title><rect x="469.4" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (16 samples, 0.06%)</title><rect x="469.4" y="1251.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (16 samples, 0.06%)</title><rect x="469.4" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (16 samples, 0.06%)</title><rect x="469.4" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.4" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.06%)</title><rect x="469.4" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.06%)</title><rect x="469.4" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.4" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.06%)</title><rect x="469.4" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (16 samples, 0.06%)</title><rect x="469.4" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.06%)</title><rect x="469.4" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.06%)</title><rect x="469.4" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (16 samples, 0.06%)</title><rect x="469.4" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.06%)</title><rect x="469.4" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.06%)</title><rect x="469.4" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.06%)</title><rect x="469.4" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.4" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 0.06%)</title><rect x="469.5" y="1043.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="472.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.05%)</title><rect x="469.6" y="1027.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.05%)</title><rect x="469.6" y="1011.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.6" y="1022.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.04%)</title><rect x="469.6" y="995.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.04%)</title><rect x="469.6" y="979.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.04%)</title><rect x="469.6" y="963.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="472.6" y="974.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.04%)</title><rect x="469.6" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.04%)</title><rect x="469.7" y="931.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.04%)</title><rect x="469.7" y="915.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.7" y="926.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (56 samples, 0.22%)</title><rect x="470.2" y="1299.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (6 samples, 0.02%)</title><rect x="470.2" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.2" y="1294.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (6 samples, 0.02%)</title><rect x="470.2" y="1267.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (42 samples, 0.17%)</title><rect x="470.5" y="1283.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (10 samples, 0.04%)</title><rect x="470.5" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (9 samples, 0.04%)</title><rect x="470.5" y="1251.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (9 samples, 0.04%)</title><rect x="470.5" y="1235.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (9 samples, 0.04%)</title><rect x="470.5" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (31 samples, 0.12%)</title><rect x="471.0" y="1267.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (7 samples, 0.03%)</title><rect x="471.3" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (7 samples, 0.03%)</title><rect x="471.3" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.3" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (7 samples, 0.03%)</title><rect x="471.3" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (11 samples, 0.04%)</title><rect x="471.8" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (7 samples, 0.03%)</title><rect x="472.0" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.0" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (7 samples, 0.03%)</title><rect x="472.0" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.0" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getProducedMessageQueueType (7 samples, 0.03%)</title><rect x="472.0" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (14 samples, 0.06%)</title><rect x="472.8" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (14 samples, 0.06%)</title><rect x="472.8" y="1347.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (14 samples, 0.06%)</title><rect x="472.8" y="1331.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (10 samples, 0.04%)</title><rect x="472.9" y="1315.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.9" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (10 samples, 0.04%)</title><rect x="472.9" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$129/536869236.apply$mcV$sp (10 samples, 0.04%)</title><rect x="472.9" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (10 samples, 0.04%)</title><rect x="472.9" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (8 samples, 0.03%)</title><rect x="473.0" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (8 samples, 0.03%)</title><rect x="473.0" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (8 samples, 0.03%)</title><rect x="473.0" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (8 samples, 0.03%)</title><rect x="473.0" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.03%)</title><rect x="473.0" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.03%)</title><rect x="473.0" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (9 samples, 0.04%)</title><rect x="473.5" y="1363.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$1087/1965037566.apply (13 samples, 0.05%)</title><rect x="474.0" y="1363.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (11 samples, 0.04%)</title><rect x="474.1" y="1347.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (11 samples, 0.04%)</title><rect x="474.1" y="1331.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (9 samples, 0.04%)</title><rect x="474.1" y="1315.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1$$Lambda$545/49101873.apply (7 samples, 0.03%)</title><rect x="474.6" y="1363.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.$anonfun$applyOrElse$1 (6 samples, 0.02%)</title><rect x="474.7" y="1347.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (16 samples, 0.06%)</title><rect x="475.2" y="1443.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (16 samples, 0.06%)</title><rect x="475.2" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (16 samples, 0.06%)</title><rect x="475.2" y="1411.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.2" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (16 samples, 0.06%)</title><rect x="475.2" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (12 samples, 0.05%)</title><rect x="475.2" y="1379.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (12 samples, 0.05%)</title><rect x="475.2" y="1363.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (12 samples, 0.05%)</title><rect x="475.2" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.05%)</title><rect x="475.2" y="1331.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.05%)</title><rect x="475.2" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.05%)</title><rect x="475.2" y="1299.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.2" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (12 samples, 0.05%)</title><rect x="475.2" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.2" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (10 samples, 0.04%)</title><rect x="475.3" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (1,317 samples, 5.22%)</title><rect x="475.9" y="1443.0" width="61.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.9" y="1454.0">akka/i..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1,317 samples, 5.22%)</title><rect x="475.9" y="1427.0" width="61.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.9" y="1438.0">akka/a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1,317 samples, 5.22%)</title><rect x="475.9" y="1411.0" width="61.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.9" y="1422.0">akka/a..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (17 samples, 0.07%)</title><rect x="476.3" y="1395.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (14 samples, 0.06%)</title><rect x="476.5" y="1379.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (10 samples, 0.04%)</title><rect x="476.7" y="1363.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (10 samples, 0.04%)</title><rect x="476.7" y="1347.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (10 samples, 0.04%)</title><rect x="476.7" y="1331.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (10 samples, 0.04%)</title><rect x="476.7" y="1315.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (6 samples, 0.02%)</title><rect x="476.8" y="1299.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.8" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (23 samples, 0.09%)</title><rect x="477.1" y="1395.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (21 samples, 0.08%)</title><rect x="477.2" y="1379.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (9 samples, 0.04%)</title><rect x="477.3" y="1363.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.3" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/704626972.apply (9 samples, 0.04%)</title><rect x="477.3" y="1347.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.3" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.03%)</title><rect x="477.4" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.03%)</title><rect x="477.4" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (7 samples, 0.03%)</title><rect x="477.4" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (7 samples, 0.03%)</title><rect x="477.4" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.4" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (77 samples, 0.31%)</title><rect x="478.2" y="1395.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.2" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (72 samples, 0.29%)</title><rect x="478.4" y="1379.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.4" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$575/564581077.apply$mcV$sp (63 samples, 0.25%)</title><rect x="478.5" y="1363.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (63 samples, 0.25%)</title><rect x="478.5" y="1347.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (15 samples, 0.06%)</title><rect x="478.6" y="1331.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.03%)</title><rect x="478.6" y="1315.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/704626972.apply (8 samples, 0.03%)</title><rect x="478.6" y="1299.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.03%)</title><rect x="478.6" y="1283.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.03%)</title><rect x="478.6" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (7 samples, 0.03%)</title><rect x="478.7" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (7 samples, 0.03%)</title><rect x="478.7" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (6 samples, 0.02%)</title><rect x="478.7" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (6 samples, 0.02%)</title><rect x="478.7" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (6 samples, 0.02%)</title><rect x="478.7" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (6 samples, 0.02%)</title><rect x="478.7" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (6 samples, 0.02%)</title><rect x="478.7" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.02%)</title><rect x="478.7" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.02%)</title><rect x="478.7" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.02%)</title><rect x="478.7" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.02%)</title><rect x="478.7" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.02%)</title><rect x="478.7" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.02%)</title><rect x="478.7" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.02%)</title><rect x="478.7" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (45 samples, 0.18%)</title><rect x="479.4" y="1331.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (29 samples, 0.11%)</title><rect x="479.5" y="1315.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.5" y="1326.0"></text>
</g>
<g>
<title>java/net/ConnectException.&lt;init&gt; (10 samples, 0.04%)</title><rect x="480.2" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.2" y="1310.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (10 samples, 0.04%)</title><rect x="480.2" y="1283.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.2" y="1294.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (10 samples, 0.04%)</title><rect x="480.2" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 0.04%)</title><rect x="480.2" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 0.04%)</title><rect x="480.2" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.04%)</title><rect x="480.2" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.04%)</title><rect x="480.3" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.3" y="1214.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (9 samples, 0.04%)</title><rect x="480.3" y="1187.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="483.3" y="1198.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (9 samples, 0.04%)</title><rect x="480.3" y="1171.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="483.3" y="1182.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 0.04%)</title><rect x="480.3" y="1155.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="483.3" y="1166.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (7 samples, 0.03%)</title><rect x="480.4" y="1139.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="483.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (12 samples, 0.05%)</title><rect x="480.9" y="1315.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (11 samples, 0.04%)</title><rect x="480.9" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.9" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (9 samples, 0.04%)</title><rect x="480.9" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.9" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (6 samples, 0.02%)</title><rect x="480.9" y="1267.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="483.9" y="1278.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (6 samples, 0.02%)</title><rect x="480.9" y="1251.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="483.9" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (7 samples, 0.03%)</title><rect x="481.5" y="1363.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (6 samples, 0.02%)</title><rect x="481.5" y="1347.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (37 samples, 0.15%)</title><rect x="481.8" y="1395.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.8" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (36 samples, 0.14%)</title><rect x="481.8" y="1379.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$550/1507782758.apply$mcV$sp (35 samples, 0.14%)</title><rect x="481.9" y="1363.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (35 samples, 0.14%)</title><rect x="481.9" y="1347.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (6 samples, 0.02%)</title><rect x="482.0" y="1331.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (10 samples, 0.04%)</title><rect x="482.2" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (10 samples, 0.04%)</title><rect x="482.2" y="1315.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (9 samples, 0.04%)</title><rect x="482.2" y="1299.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.2" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (7 samples, 0.03%)</title><rect x="482.2" y="1283.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (15 samples, 0.06%)</title><rect x="482.7" y="1331.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (15 samples, 0.06%)</title><rect x="482.7" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$574/1185044146.apply$mcV$sp (15 samples, 0.06%)</title><rect x="482.7" y="1299.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.7" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (15 samples, 0.06%)</title><rect x="482.7" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (14 samples, 0.06%)</title><rect x="482.7" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (13 samples, 0.05%)</title><rect x="482.8" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (13 samples, 0.05%)</title><rect x="482.8" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (13 samples, 0.05%)</title><rect x="482.8" y="1219.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.04%)</title><rect x="482.9" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="485.9" y="1214.0"></text>
</g>
<g>
<title>__connect (11 samples, 0.04%)</title><rect x="482.9" y="1187.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="485.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="482.9" y="1171.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.04%)</title><rect x="482.9" y="1155.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.9" y="1166.0"></text>
</g>
<g>
<title>sys_connect (11 samples, 0.04%)</title><rect x="482.9" y="1139.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="485.9" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (11 samples, 0.04%)</title><rect x="482.9" y="1123.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.9" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (11 samples, 0.04%)</title><rect x="482.9" y="1107.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.9" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (11 samples, 0.04%)</title><rect x="482.9" y="1091.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.9" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (11 samples, 0.04%)</title><rect x="482.9" y="1075.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.9" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (11 samples, 0.04%)</title><rect x="482.9" y="1059.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.9" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (8 samples, 0.03%)</title><rect x="483.0" y="1043.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.0" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (28 samples, 0.11%)</title><rect x="483.5" y="1395.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (27 samples, 0.11%)</title><rect x="483.6" y="1379.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.6" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$573/1117318058.apply$mcV$sp (27 samples, 0.11%)</title><rect x="483.6" y="1363.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (27 samples, 0.11%)</title><rect x="483.6" y="1347.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (25 samples, 0.10%)</title><rect x="483.6" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (25 samples, 0.10%)</title><rect x="483.6" y="1315.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$574/1185044146.apply$mcV$sp (24 samples, 0.10%)</title><rect x="483.6" y="1299.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (23 samples, 0.09%)</title><rect x="483.7" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (16 samples, 0.06%)</title><rect x="484.0" y="1267.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (13 samples, 0.05%)</title><rect x="484.2" y="1251.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (13 samples, 0.05%)</title><rect x="484.2" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (12 samples, 0.05%)</title><rect x="484.2" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.04%)</title><rect x="484.2" y="1203.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="487.2" y="1214.0"></text>
</g>
<g>
<title>__connect (11 samples, 0.04%)</title><rect x="484.2" y="1187.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="487.2" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="484.2" y="1171.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.2" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.04%)</title><rect x="484.2" y="1155.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.2" y="1166.0"></text>
</g>
<g>
<title>sys_connect (11 samples, 0.04%)</title><rect x="484.2" y="1139.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.2" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (11 samples, 0.04%)</title><rect x="484.2" y="1123.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="487.2" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (10 samples, 0.04%)</title><rect x="484.2" y="1107.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.2" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (10 samples, 0.04%)</title><rect x="484.2" y="1091.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.2" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (9 samples, 0.04%)</title><rect x="484.2" y="1075.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.2" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (9 samples, 0.04%)</title><rect x="484.2" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.2" y="1070.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="484.9" y="1395.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="487.9" y="1406.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (1,120 samples, 4.44%)</title><rect x="485.1" y="1395.0" width="52.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.1" y="1406.0">scala..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (541 samples, 2.14%)</title><rect x="485.6" y="1379.0" width="25.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.6" y="1390.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (391 samples, 1.55%)</title><rect x="486.0" y="1363.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (6 samples, 0.02%)</title><rect x="486.4" y="1347.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (6 samples, 0.02%)</title><rect x="486.4" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (23 samples, 0.09%)</title><rect x="486.7" y="1347.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (14 samples, 0.06%)</title><rect x="487.0" y="1331.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (351 samples, 1.39%)</title><rect x="487.8" y="1347.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (107 samples, 0.42%)</title><rect x="487.8" y="1331.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/704626972.apply (107 samples, 0.42%)</title><rect x="487.8" y="1315.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (107 samples, 0.42%)</title><rect x="487.8" y="1299.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (107 samples, 0.42%)</title><rect x="487.8" y="1283.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (107 samples, 0.42%)</title><rect x="487.8" y="1267.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (107 samples, 0.42%)</title><rect x="487.8" y="1251.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (89 samples, 0.35%)</title><rect x="488.7" y="1235.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (89 samples, 0.35%)</title><rect x="488.7" y="1219.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (89 samples, 0.35%)</title><rect x="488.7" y="1203.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (88 samples, 0.35%)</title><rect x="488.7" y="1187.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (87 samples, 0.34%)</title><rect x="488.8" y="1171.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (87 samples, 0.34%)</title><rect x="488.8" y="1155.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (87 samples, 0.34%)</title><rect x="488.8" y="1139.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (87 samples, 0.34%)</title><rect x="488.8" y="1123.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (86 samples, 0.34%)</title><rect x="488.8" y="1107.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.8" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (86 samples, 0.34%)</title><rect x="488.8" y="1091.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.8" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (86 samples, 0.34%)</title><rect x="488.8" y="1075.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (82 samples, 0.32%)</title><rect x="489.0" y="1059.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (70 samples, 0.28%)</title><rect x="489.1" y="1043.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (69 samples, 0.27%)</title><rect x="489.1" y="1027.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (69 samples, 0.27%)</title><rect x="489.1" y="1011.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (69 samples, 0.27%)</title><rect x="489.1" y="995.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (67 samples, 0.27%)</title><rect x="489.1" y="979.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (67 samples, 0.27%)</title><rect x="489.1" y="963.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (67 samples, 0.27%)</title><rect x="489.1" y="947.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (67 samples, 0.27%)</title><rect x="489.1" y="931.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (60 samples, 0.24%)</title><rect x="489.2" y="915.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 0.24%)</title><rect x="489.2" y="899.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 0.24%)</title><rect x="489.2" y="883.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.2" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.02%)</title><rect x="489.3" y="867.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="492.3" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 0.21%)</title><rect x="489.6" y="867.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="492.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.19%)</title><rect x="489.8" y="851.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.19%)</title><rect x="489.8" y="835.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="492.8" y="846.0"></text>
</g>
<g>
<title>sys_futex (47 samples, 0.19%)</title><rect x="489.9" y="819.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="492.9" y="830.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.19%)</title><rect x="489.9" y="803.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 0.19%)</title><rect x="489.9" y="787.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 0.17%)</title><rect x="490.0" y="771.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.0" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.17%)</title><rect x="490.0" y="755.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.17%)</title><rect x="490.0" y="739.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.0" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (10 samples, 0.04%)</title><rect x="492.3" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (6 samples, 0.02%)</title><rect x="492.5" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (6 samples, 0.02%)</title><rect x="492.5" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.5" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (6 samples, 0.02%)</title><rect x="492.5" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (6 samples, 0.02%)</title><rect x="492.5" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (6 samples, 0.02%)</title><rect x="492.5" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (237 samples, 0.94%)</title><rect x="493.1" y="1331.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.07%)</title><rect x="493.2" y="1315.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.07%)</title><rect x="493.2" y="1299.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (10 samples, 0.04%)</title><rect x="493.3" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (217 samples, 0.86%)</title><rect x="494.0" y="1315.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (217 samples, 0.86%)</title><rect x="494.0" y="1299.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (216 samples, 0.86%)</title><rect x="494.1" y="1283.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.1" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (215 samples, 0.85%)</title><rect x="494.1" y="1267.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.1" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (215 samples, 0.85%)</title><rect x="494.1" y="1251.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 0.56%)</title><rect x="494.3" y="1235.0" width="6.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="497.3" y="1246.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (6 samples, 0.02%)</title><rect x="494.3" y="1219.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="497.3" y="1230.0"></text>
</g>
<g>
<title>__read (131 samples, 0.52%)</title><rect x="494.7" y="1219.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="497.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 0.46%)</title><rect x="495.3" y="1203.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (116 samples, 0.46%)</title><rect x="495.3" y="1187.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.3" y="1198.0"></text>
</g>
<g>
<title>sys_read (109 samples, 0.43%)</title><rect x="495.7" y="1171.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.7" y="1182.0"></text>
</g>
<g>
<title>vfs_read (108 samples, 0.43%)</title><rect x="495.7" y="1155.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.7" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (92 samples, 0.36%)</title><rect x="495.8" y="1139.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="498.8" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (92 samples, 0.36%)</title><rect x="495.8" y="1123.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.8" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (86 samples, 0.34%)</title><rect x="496.1" y="1107.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.1" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (81 samples, 0.32%)</title><rect x="496.4" y="1091.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.4" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (65 samples, 0.26%)</title><rect x="496.4" y="1075.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.4" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (59 samples, 0.23%)</title><rect x="496.7" y="1059.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.7" y="1070.0"></text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.11%)</title><rect x="497.0" y="1043.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.0" y="1054.0"></text>
</g>
<g>
<title>skb_release_all (24 samples, 0.10%)</title><rect x="497.1" y="1027.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="500.1" y="1038.0"></text>
</g>
<g>
<title>skb_release_data (22 samples, 0.09%)</title><rect x="497.1" y="1011.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.1" y="1022.0"></text>
</g>
<g>
<title>__put_page (10 samples, 0.04%)</title><rect x="497.3" y="995.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.3" y="1006.0"></text>
</g>
<g>
<title>free_unref_page (8 samples, 0.03%)</title><rect x="497.3" y="979.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.3" y="990.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.05%)</title><rect x="498.6" y="1043.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.6" y="1054.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.05%)</title><rect x="499.5" y="1075.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.5" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.04%)</title><rect x="499.7" y="1059.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.7" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.04%)</title><rect x="499.7" y="1043.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.7" y="1054.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.03%)</title><rect x="499.7" y="1027.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.7" y="1038.0"></text>
</g>
<g>
<title>aa_label_sk_perm (8 samples, 0.03%)</title><rect x="499.7" y="1011.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="502.7" y="1022.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.05%)</title><rect x="500.1" y="1139.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="503.1" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.04%)</title><rect x="500.3" y="1123.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.3" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.02%)</title><rect x="500.3" y="1107.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.3" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.02%)</title><rect x="500.3" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.3" y="1102.0"></text>
</g>
<g>
<title>convertReturnVal (35 samples, 0.14%)</title><rect x="501.1" y="1235.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="504.1" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (30 samples, 0.12%)</title><rect x="501.3" y="1219.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="504.3" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (11 samples, 0.04%)</title><rect x="501.3" y="1203.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="504.3" y="1214.0"></text>
</g>
<g>
<title>jni_FindClass (7 samples, 0.03%)</title><rect x="501.3" y="1187.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="504.3" y="1198.0"></text>
</g>
<g>
<title>JNU_NewStringPlatform (7 samples, 0.03%)</title><rect x="501.8" y="1203.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="504.8" y="1214.0"></text>
</g>
<g>
<title>newSizedString8859_1 (6 samples, 0.02%)</title><rect x="501.9" y="1187.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="504.9" y="1198.0"></text>
</g>
<g>
<title>jni_Throw (7 samples, 0.03%)</title><rect x="502.4" y="1203.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="505.4" y="1214.0"></text>
</g>
<g>
<title>Exceptions::_throw_oop(Thread*, char const*, int, oopDesc*) (7 samples, 0.03%)</title><rect x="502.4" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="505.4" y="1198.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (6 samples, 0.02%)</title><rect x="502.4" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="505.4" y="1182.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (25 samples, 0.10%)</title><rect x="503.0" y="1235.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (25 samples, 0.10%)</title><rect x="503.0" y="1219.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (25 samples, 0.10%)</title><rect x="503.0" y="1203.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (25 samples, 0.10%)</title><rect x="503.0" y="1187.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (25 samples, 0.10%)</title><rect x="503.0" y="1171.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.0" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (25 samples, 0.10%)</title><rect x="503.0" y="1155.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="506.0" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (24 samples, 0.10%)</title><rect x="503.0" y="1139.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="506.0" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (24 samples, 0.10%)</title><rect x="503.0" y="1123.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.0" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (23 samples, 0.09%)</title><rect x="503.1" y="1107.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="506.1" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.03%)</title><rect x="503.8" y="1091.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="506.8" y="1102.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (8 samples, 0.03%)</title><rect x="503.8" y="1075.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="506.8" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.02%)</title><rect x="503.8" y="1059.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="506.8" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.02%)</title><rect x="503.8" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="506.8" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (18 samples, 0.07%)</title><rect x="504.3" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (18 samples, 0.07%)</title><rect x="504.3" y="1347.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (7 samples, 0.03%)</title><rect x="504.3" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (7 samples, 0.03%)</title><rect x="504.3" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (121 samples, 0.48%)</title><rect x="505.1" y="1363.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (121 samples, 0.48%)</title><rect x="505.1" y="1347.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (119 samples, 0.47%)</title><rect x="505.2" y="1331.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (119 samples, 0.47%)</title><rect x="505.2" y="1315.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.2" y="1326.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (7 samples, 0.03%)</title><rect x="505.2" y="1299.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (6 samples, 0.02%)</title><rect x="505.2" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (6 samples, 0.02%)</title><rect x="505.2" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (6 samples, 0.02%)</title><rect x="505.2" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (6 samples, 0.02%)</title><rect x="505.2" y="1235.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (111 samples, 0.44%)</title><rect x="505.6" y="1299.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (107 samples, 0.42%)</title><rect x="505.8" y="1283.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 0.42%)</title><rect x="505.8" y="1267.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="508.8" y="1278.0"></text>
</g>
<g>
<title>__write (105 samples, 0.42%)</title><rect x="505.8" y="1251.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="508.8" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.37%)</title><rect x="506.3" y="1235.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.3" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 0.37%)</title><rect x="506.3" y="1219.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.3" y="1230.0"></text>
</g>
<g>
<title>sys_write (87 samples, 0.34%)</title><rect x="506.6" y="1203.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.6" y="1214.0"></text>
</g>
<g>
<title>vfs_write (81 samples, 0.32%)</title><rect x="506.9" y="1187.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.9" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (71 samples, 0.28%)</title><rect x="507.0" y="1171.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="510.0" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (71 samples, 0.28%)</title><rect x="507.0" y="1155.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.0" y="1166.0"></text>
</g>
<g>
<title>pipe_write (69 samples, 0.27%)</title><rect x="507.1" y="1139.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="510.1" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (47 samples, 0.19%)</title><rect x="507.3" y="1123.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.3" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (46 samples, 0.18%)</title><rect x="507.3" y="1107.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="510.3" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 0.18%)</title><rect x="507.3" y="1091.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.3" y="1102.0"></text>
</g>
<g>
<title>copy_page_from_iter (7 samples, 0.03%)</title><rect x="509.4" y="1123.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.4" y="1134.0"></text>
</g>
<g>
<title>file_update_time (7 samples, 0.03%)</title><rect x="509.8" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.8" y="1134.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.02%)</title><rect x="510.4" y="1171.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="513.4" y="1182.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (564 samples, 2.23%)</title><rect x="510.9" y="1379.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.9" y="1390.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (53 samples, 0.21%)</title><rect x="511.4" y="1363.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.4" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (53 samples, 0.21%)</title><rect x="511.4" y="1347.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (47 samples, 0.19%)</title><rect x="511.5" y="1331.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.5" y="1342.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (9 samples, 0.04%)</title><rect x="511.6" y="1315.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (8 samples, 0.03%)</title><rect x="511.6" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.&lt;init&gt; (12 samples, 0.05%)</title><rect x="512.0" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.0" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.copyToBuffer (8 samples, 0.03%)</title><rect x="512.7" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.7" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (9 samples, 0.04%)</title><rect x="513.1" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.1" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyItToTheBuffer$1 (9 samples, 0.04%)</title><rect x="513.1" y="1299.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.1" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (8 samples, 0.03%)</title><rect x="513.2" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.2" y="1294.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.02%)</title><rect x="513.3" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (496 samples, 1.97%)</title><rect x="513.9" y="1363.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.9" y="1374.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (496 samples, 1.97%)</title><rect x="513.9" y="1347.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.9" y="1358.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (496 samples, 1.97%)</title><rect x="513.9" y="1331.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.9" y="1342.0">a..</text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (123 samples, 0.49%)</title><rect x="513.9" y="1315.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/704626972.apply (123 samples, 0.49%)</title><rect x="513.9" y="1299.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (123 samples, 0.49%)</title><rect x="513.9" y="1283.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (123 samples, 0.49%)</title><rect x="513.9" y="1267.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (120 samples, 0.48%)</title><rect x="514.1" y="1251.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (120 samples, 0.48%)</title><rect x="514.1" y="1235.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (106 samples, 0.42%)</title><rect x="514.7" y="1219.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (105 samples, 0.42%)</title><rect x="514.8" y="1203.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (105 samples, 0.42%)</title><rect x="514.8" y="1187.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (105 samples, 0.42%)</title><rect x="514.8" y="1171.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (103 samples, 0.41%)</title><rect x="514.8" y="1155.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (103 samples, 0.41%)</title><rect x="514.8" y="1139.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (103 samples, 0.41%)</title><rect x="514.8" y="1123.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (103 samples, 0.41%)</title><rect x="514.8" y="1107.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.8" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (101 samples, 0.40%)</title><rect x="514.8" y="1091.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.8" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (101 samples, 0.40%)</title><rect x="514.8" y="1075.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (101 samples, 0.40%)</title><rect x="514.8" y="1059.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.8" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (100 samples, 0.40%)</title><rect x="514.9" y="1043.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (93 samples, 0.37%)</title><rect x="514.9" y="1027.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (92 samples, 0.36%)</title><rect x="514.9" y="1011.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (92 samples, 0.36%)</title><rect x="514.9" y="995.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (92 samples, 0.36%)</title><rect x="514.9" y="979.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (89 samples, 0.35%)</title><rect x="514.9" y="963.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (89 samples, 0.35%)</title><rect x="514.9" y="947.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (89 samples, 0.35%)</title><rect x="514.9" y="931.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (89 samples, 0.35%)</title><rect x="514.9" y="915.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (83 samples, 0.33%)</title><rect x="515.1" y="899.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (83 samples, 0.33%)</title><rect x="515.1" y="883.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 0.33%)</title><rect x="515.1" y="867.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.1" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.06%)</title><rect x="515.1" y="851.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="518.1" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (68 samples, 0.27%)</title><rect x="515.8" y="851.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="518.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.26%)</title><rect x="515.9" y="835.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 0.26%)</title><rect x="515.9" y="819.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.9" y="830.0"></text>
</g>
<g>
<title>sys_futex (64 samples, 0.25%)</title><rect x="516.0" y="803.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="519.0" y="814.0"></text>
</g>
<g>
<title>do_futex (64 samples, 0.25%)</title><rect x="516.0" y="787.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.0" y="798.0"></text>
</g>
<g>
<title>futex_wake (64 samples, 0.25%)</title><rect x="516.0" y="771.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.0" y="782.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 0.24%)</title><rect x="516.1" y="755.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.1" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.23%)</title><rect x="516.2" y="739.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 0.23%)</title><rect x="516.2" y="723.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.2" y="734.0"></text>
</g>
<g>
<title>ret_from_intr (6 samples, 0.02%)</title><rect x="518.7" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.7" y="718.0"></text>
</g>
<g>
<title>do_IRQ (6 samples, 0.02%)</title><rect x="518.7" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.7" y="702.0"></text>
</g>
<g>
<title>irq_exit (6 samples, 0.02%)</title><rect x="518.7" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="521.7" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="518.7" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.7" y="670.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.02%)</title><rect x="518.7" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.7" y="654.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (6 samples, 0.02%)</title><rect x="518.7" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.7" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (6 samples, 0.02%)</title><rect x="519.3" y="1027.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (364 samples, 1.44%)</title><rect x="520.1" y="1315.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.04%)</title><rect x="520.2" y="1299.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.04%)</title><rect x="520.2" y="1283.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.04%)</title><rect x="520.2" y="1267.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (9 samples, 0.04%)</title><rect x="520.2" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.03%)</title><rect x="520.6" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.03%)</title><rect x="520.6" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (342 samples, 1.36%)</title><rect x="521.0" y="1299.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (342 samples, 1.36%)</title><rect x="521.0" y="1283.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (340 samples, 1.35%)</title><rect x="521.0" y="1267.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.0" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.02%)</title><rect x="521.1" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.1" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (332 samples, 1.32%)</title><rect x="521.4" y="1251.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (330 samples, 1.31%)</title><rect x="521.5" y="1235.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (314 samples, 1.24%)</title><rect x="521.9" y="1219.0" width="14.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="524.9" y="1230.0"></text>
</g>
<g>
<title>__write (313 samples, 1.24%)</title><rect x="521.9" y="1203.0" width="14.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="524.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (299 samples, 1.18%)</title><rect x="522.6" y="1187.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.6" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (299 samples, 1.18%)</title><rect x="522.6" y="1171.0" width="14.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.6" y="1182.0"></text>
</g>
<g>
<title>sys_write (293 samples, 1.16%)</title><rect x="522.9" y="1155.0" width="13.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="525.9" y="1166.0"></text>
</g>
<g>
<title>__fdget_pos (15 samples, 0.06%)</title><rect x="522.9" y="1139.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.9" y="1150.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.06%)</title><rect x="522.9" y="1123.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="525.9" y="1134.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.04%)</title><rect x="523.1" y="1107.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.1" y="1118.0"></text>
</g>
<g>
<title>vfs_write (278 samples, 1.10%)</title><rect x="523.6" y="1139.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="526.6" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (263 samples, 1.04%)</title><rect x="523.6" y="1123.0" width="12.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="526.6" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (263 samples, 1.04%)</title><rect x="523.6" y="1107.0" width="12.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.6" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (256 samples, 1.01%)</title><rect x="523.9" y="1091.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="526.9" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (253 samples, 1.00%)</title><rect x="524.1" y="1075.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="527.1" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (242 samples, 0.96%)</title><rect x="524.2" y="1059.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.2" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (242 samples, 0.96%)</title><rect x="524.2" y="1043.0" width="11.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="527.2" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (224 samples, 0.89%)</title><rect x="525.0" y="1027.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="528.0" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.12%)</title><rect x="526.2" y="1011.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="529.2" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 0.10%)</title><rect x="526.3" y="995.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="529.3" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (9 samples, 0.04%)</title><rect x="526.6" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.6" y="990.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.04%)</title><rect x="526.6" y="963.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.6" y="974.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.04%)</title><rect x="527.0" y="979.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.0" y="990.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.03%)</title><rect x="527.6" y="1011.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.6" y="1022.0"></text>
</g>
<g>
<title>tcp_push (149 samples, 0.59%)</title><rect x="528.0" y="1011.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="531.0" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (148 samples, 0.59%)</title><rect x="528.1" y="995.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.1" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (139 samples, 0.55%)</title><rect x="528.5" y="979.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.5" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (106 samples, 0.42%)</title><rect x="528.6" y="963.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.6" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 0.34%)</title><rect x="529.2" y="947.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="532.2" y="958.0"></text>
</g>
<g>
<title>ip_local_out (79 samples, 0.31%)</title><rect x="529.5" y="931.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="532.5" y="942.0"></text>
</g>
<g>
<title>ip_output (78 samples, 0.31%)</title><rect x="529.5" y="915.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="532.5" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (75 samples, 0.30%)</title><rect x="529.6" y="899.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="532.6" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (68 samples, 0.27%)</title><rect x="529.9" y="883.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="532.9" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (55 samples, 0.22%)</title><rect x="530.5" y="867.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="533.5" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (55 samples, 0.22%)</title><rect x="530.5" y="851.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="533.5" y="862.0"></text>
</g>
<g>
<title>sch_direct_xmit (45 samples, 0.18%)</title><rect x="531.0" y="835.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="534.0" y="846.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (31 samples, 0.12%)</title><rect x="531.2" y="819.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="534.2" y="830.0"></text>
</g>
<g>
<title>ena_start_xmit?[ena] (30 samples, 0.12%)</title><rect x="531.2" y="803.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.2" y="814.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (6 samples, 0.02%)</title><rect x="532.8" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.8" y="830.0"></text>
</g>
<g>
<title>sched_clock_cpu (7 samples, 0.03%)</title><rect x="533.7" y="963.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.7" y="974.0"></text>
</g>
<g>
<title>sched_clock (7 samples, 0.03%)</title><rect x="533.7" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.7" y="958.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (7 samples, 0.03%)</title><rect x="533.7" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.7" y="942.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (7 samples, 0.03%)</title><rect x="533.7" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="536.7" y="926.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.04%)</title><rect x="534.1" y="963.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="537.1" y="974.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.03%)</title><rect x="534.2" y="947.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="537.2" y="958.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (8 samples, 0.03%)</title><rect x="534.2" y="931.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.2" y="942.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.02%)</title><rect x="534.3" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="537.3" y="926.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.04%)</title><rect x="535.0" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.0" y="1022.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.03%)</title><rect x="535.1" y="995.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="538.1" y="1006.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.03%)</title><rect x="535.5" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.5" y="1070.0"></text>
</g>
<g>
<title>rw_verify_area (12 samples, 0.05%)</title><rect x="536.0" y="1123.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.0" y="1134.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.04%)</title><rect x="536.1" y="1107.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="539.1" y="1118.0"></text>
</g>
<g>
<title>apparmor_file_permission (9 samples, 0.04%)</title><rect x="536.1" y="1091.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.1" y="1102.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.04%)</title><rect x="536.1" y="1075.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.1" y="1086.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (73 samples, 0.29%)</title><rect x="537.5" y="1443.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (73 samples, 0.29%)</title><rect x="537.5" y="1427.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (73 samples, 0.29%)</title><rect x="537.5" y="1411.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (73 samples, 0.29%)</title><rect x="537.5" y="1395.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (7 samples, 0.03%)</title><rect x="537.6" y="1379.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.6" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (7 samples, 0.03%)</title><rect x="537.6" y="1363.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (7 samples, 0.03%)</title><rect x="537.6" y="1347.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.03%)</title><rect x="537.6" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.03%)</title><rect x="537.6" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.03%)</title><rect x="537.6" y="1299.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="540.6" y="1310.0"></text>
</g>
<g>
<title>__write (7 samples, 0.03%)</title><rect x="537.6" y="1283.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="540.6" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="537.6" y="1267.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.6" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="537.6" y="1251.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="540.6" y="1262.0"></text>
</g>
<g>
<title>sys_write (7 samples, 0.03%)</title><rect x="537.6" y="1235.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="540.6" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (64 samples, 0.25%)</title><rect x="537.9" y="1379.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.04%)</title><rect x="537.9" y="1363.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.03%)</title><rect x="538.0" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.03%)</title><rect x="538.0" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.03%)</title><rect x="538.0" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.0" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (6 samples, 0.02%)</title><rect x="538.1" y="1299.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (45 samples, 0.18%)</title><rect x="538.8" y="1363.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.8" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (35 samples, 0.14%)</title><rect x="538.9" y="1347.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (34 samples, 0.13%)</title><rect x="539.0" y="1331.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.0" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (16 samples, 0.06%)</title><rect x="539.0" y="1315.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="542.0" y="1326.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (10 samples, 0.04%)</title><rect x="539.1" y="1299.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="542.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.04%)</title><rect x="539.8" y="1315.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="542.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.02%)</title><rect x="539.9" y="1299.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="542.9" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (7 samples, 0.03%)</title><rect x="540.5" y="1347.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.5" y="1358.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (12 samples, 0.05%)</title><rect x="541.0" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (12 samples, 0.05%)</title><rect x="541.0" y="1427.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (12 samples, 0.05%)</title><rect x="541.0" y="1411.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.0" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (12 samples, 0.05%)</title><rect x="541.0" y="1395.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.0" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (8 samples, 0.03%)</title><rect x="541.0" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.delayedQuarantine (6 samples, 0.02%)</title><rect x="541.0" y="1363.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.0" y="1374.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.quarantine (6 samples, 0.02%)</title><rect x="541.0" y="1347.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.0" y="1358.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.quarantine (6 samples, 0.02%)</title><rect x="541.0" y="1331.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.0" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.association (6 samples, 0.02%)</title><rect x="541.0" y="1315.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (4,880 samples, 19.34%)</title><rect x="541.5" y="1443.0" width="228.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.5" y="1454.0">akka/stream/impl/fusing/ActorG..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (4,880 samples, 19.34%)</title><rect x="541.5" y="1427.0" width="228.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.5" y="1438.0">akka/actor/Actor.aroundReceive$</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (4,880 samples, 19.34%)</title><rect x="541.5" y="1411.0" width="228.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.5" y="1422.0">akka/actor/Actor.aroundReceive</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (4,877 samples, 19.33%)</title><rect x="541.7" y="1395.0" width="228.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.7" y="1406.0">akka/stream/impl/fusing/ActorG..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (4,327 samples, 17.15%)</title><rect x="541.9" y="1379.0" width="202.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.9" y="1390.0">akka/stream/impl/fusing/Ac..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (4,317 samples, 17.11%)</title><rect x="542.1" y="1363.0" width="201.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.1" y="1374.0">akka/stream/impl/fusing/Gr..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (4,317 samples, 17.11%)</title><rect x="542.1" y="1347.0" width="201.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.1" y="1358.0">akka/stream/impl/fusing/Gr..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (440 samples, 1.74%)</title><rect x="542.2" y="1331.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$479/854460023.apply (114 samples, 0.45%)</title><rect x="542.6" y="1315.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.6" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (113 samples, 0.45%)</title><rect x="542.6" y="1299.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (113 samples, 0.45%)</title><rect x="542.6" y="1283.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.6" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (6 samples, 0.02%)</title><rect x="542.8" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (6 samples, 0.02%)</title><rect x="542.8" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (6 samples, 0.02%)</title><rect x="542.8" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (6 samples, 0.02%)</title><rect x="542.8" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (6 samples, 0.02%)</title><rect x="542.8" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (9 samples, 0.04%)</title><rect x="543.2" y="1267.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (8 samples, 0.03%)</title><rect x="543.2" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (14 samples, 0.06%)</title><rect x="543.7" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (6 samples, 0.02%)</title><rect x="543.7" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (64 samples, 0.25%)</title><rect x="544.6" y="1267.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (63 samples, 0.25%)</title><rect x="544.6" y="1251.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (60 samples, 0.24%)</title><rect x="544.7" y="1235.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.7" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (59 samples, 0.23%)</title><rect x="544.8" y="1219.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.8" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (59 samples, 0.23%)</title><rect x="544.8" y="1203.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.8" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (51 samples, 0.20%)</title><rect x="544.8" y="1187.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$402/1806116585.apply (49 samples, 0.19%)</title><rect x="544.8" y="1171.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (47 samples, 0.19%)</title><rect x="544.9" y="1155.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (46 samples, 0.18%)</title><rect x="544.9" y="1139.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (24 samples, 0.10%)</title><rect x="545.2" y="1123.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (24 samples, 0.10%)</title><rect x="545.2" y="1107.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (24 samples, 0.10%)</title><rect x="545.2" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (24 samples, 0.10%)</title><rect x="545.2" y="1075.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ch16o$1 (7 samples, 0.03%)</title><rect x="545.6" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (15 samples, 0.06%)</title><rect x="546.3" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (12 samples, 0.05%)</title><rect x="546.4" y="1107.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.4" y="1118.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (8 samples, 0.03%)</title><rect x="547.1" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$475/522689087.apply (76 samples, 0.30%)</title><rect x="547.9" y="1315.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (76 samples, 0.30%)</title><rect x="547.9" y="1299.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (76 samples, 0.30%)</title><rect x="547.9" y="1283.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$585/706014770.apply$mcV$sp (55 samples, 0.22%)</title><rect x="547.9" y="1267.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (55 samples, 0.22%)</title><rect x="547.9" y="1251.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$532/1183044311.apply (51 samples, 0.20%)</title><rect x="547.9" y="1235.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (51 samples, 0.20%)</title><rect x="547.9" y="1219.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (51 samples, 0.20%)</title><rect x="547.9" y="1203.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (51 samples, 0.20%)</title><rect x="547.9" y="1187.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1380/331892807.apply (26 samples, 0.10%)</title><rect x="547.9" y="1171.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3$adapted (26 samples, 0.10%)</title><rect x="547.9" y="1155.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3 (26 samples, 0.10%)</title><rect x="547.9" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptFailed (10 samples, 0.04%)</title><rect x="547.9" y="1123.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (10 samples, 0.04%)</title><rect x="547.9" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (10 samples, 0.04%)</title><rect x="547.9" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (10 samples, 0.04%)</title><rect x="547.9" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onConnectionAttemptFailed (16 samples, 0.06%)</title><rect x="548.4" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$586/1097336815.apply (25 samples, 0.10%)</title><rect x="549.1" y="1171.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (25 samples, 0.10%)</title><rect x="549.1" y="1155.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (25 samples, 0.10%)</title><rect x="549.1" y="1139.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (25 samples, 0.10%)</title><rect x="549.1" y="1123.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (24 samples, 0.10%)</title><rect x="549.1" y="1107.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (24 samples, 0.10%)</title><rect x="549.1" y="1091.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (24 samples, 0.10%)</title><rect x="549.1" y="1075.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot$$Lambda$611/924935582.apply$mcV$sp (20 samples, 0.08%)</title><rect x="550.5" y="1267.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.$anonfun$updateState$1 (20 samples, 0.08%)</title><rect x="550.5" y="1251.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (18 samples, 0.07%)</title><rect x="550.5" y="1235.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (18 samples, 0.07%)</title><rect x="550.5" y="1219.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (18 samples, 0.07%)</title><rect x="550.5" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (18 samples, 0.07%)</title><rect x="550.5" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (12 samples, 0.05%)</title><rect x="550.6" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (10 samples, 0.04%)</title><rect x="550.6" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (9 samples, 0.04%)</title><rect x="550.6" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (9 samples, 0.04%)</title><rect x="550.6" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (9 samples, 0.04%)</title><rect x="550.6" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (9 samples, 0.04%)</title><rect x="550.6" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$510/1712877063.apply (8 samples, 0.03%)</title><rect x="550.6" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (8 samples, 0.03%)</title><rect x="550.6" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (8 samples, 0.03%)</title><rect x="550.6" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (8 samples, 0.03%)</title><rect x="550.6" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (8 samples, 0.03%)</title><rect x="550.6" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (8 samples, 0.03%)</title><rect x="550.6" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (8 samples, 0.03%)</title><rect x="550.6" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (27 samples, 0.11%)</title><rect x="551.4" y="1315.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (26 samples, 0.10%)</title><rect x="551.5" y="1299.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (23 samples, 0.09%)</title><rect x="551.5" y="1283.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (20 samples, 0.08%)</title><rect x="551.6" y="1267.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (19 samples, 0.08%)</title><rect x="551.6" y="1251.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (19 samples, 0.08%)</title><rect x="551.6" y="1235.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (19 samples, 0.08%)</title><rect x="551.6" y="1219.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (19 samples, 0.08%)</title><rect x="551.6" y="1203.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (11 samples, 0.04%)</title><rect x="551.6" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (11 samples, 0.04%)</title><rect x="551.6" y="1171.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1035/1744333675.apply (9 samples, 0.04%)</title><rect x="552.7" y="1315.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6$adapted (9 samples, 0.04%)</title><rect x="552.7" y="1299.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6 (9 samples, 0.04%)</title><rect x="552.7" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.futureCompleted (9 samples, 0.04%)</title><rect x="552.7" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$537/61791387.apply (135 samples, 0.53%)</title><rect x="553.2" y="1315.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (135 samples, 0.53%)</title><rect x="553.2" y="1299.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (135 samples, 0.53%)</title><rect x="553.2" y="1283.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (135 samples, 0.53%)</title><rect x="553.2" y="1267.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$801/374782441.apply (24 samples, 0.10%)</title><rect x="553.4" y="1251.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (22 samples, 0.09%)</title><rect x="553.5" y="1235.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (22 samples, 0.09%)</title><rect x="553.5" y="1219.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (22 samples, 0.09%)</title><rect x="553.5" y="1203.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (21 samples, 0.08%)</title><rect x="553.6" y="1187.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (7 samples, 0.03%)</title><rect x="553.9" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (6 samples, 0.02%)</title><rect x="554.0" y="1155.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1112/1860178303.apply (25 samples, 0.10%)</title><rect x="554.6" y="1251.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2$adapted (17 samples, 0.07%)</title><rect x="554.9" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2 (17 samples, 0.07%)</title><rect x="554.9" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (17 samples, 0.07%)</title><rect x="554.9" y="1203.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$535/1304113104.apply (56 samples, 0.22%)</title><rect x="555.7" y="1251.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (56 samples, 0.22%)</title><rect x="555.7" y="1235.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (55 samples, 0.22%)</title><rect x="555.8" y="1219.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (55 samples, 0.22%)</title><rect x="555.8" y="1203.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (16 samples, 0.06%)</title><rect x="556.3" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (16 samples, 0.06%)</title><rect x="556.3" y="1171.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (12 samples, 0.05%)</title><rect x="556.5" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (12 samples, 0.05%)</title><rect x="556.5" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (12 samples, 0.05%)</title><rect x="556.5" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (12 samples, 0.05%)</title><rect x="556.5" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (12 samples, 0.05%)</title><rect x="556.5" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (12 samples, 0.05%)</title><rect x="556.5" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.05%)</title><rect x="556.5" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.05%)</title><rect x="556.5" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.05%)</title><rect x="556.5" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.05%)</title><rect x="556.5" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.05%)</title><rect x="556.5" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.05%)</title><rect x="556.5" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (12 samples, 0.05%)</title><rect x="556.5" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.05%)</title><rect x="556.5" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.05%)</title><rect x="556.5" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.05%)</title><rect x="556.5" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.5" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.05%)</title><rect x="556.5" y="899.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="559.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="556.8" y="883.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="559.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="556.8" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="559.8" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (10 samples, 0.04%)</title><rect x="557.1" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (10 samples, 0.04%)</title><rect x="557.1" y="1171.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (8 samples, 0.03%)</title><rect x="557.2" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (8 samples, 0.03%)</title><rect x="557.2" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (8 samples, 0.03%)</title><rect x="557.2" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (8 samples, 0.03%)</title><rect x="557.2" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (8 samples, 0.03%)</title><rect x="557.2" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.03%)</title><rect x="557.2" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.03%)</title><rect x="557.2" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.03%)</title><rect x="557.2" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.03%)</title><rect x="557.2" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.03%)</title><rect x="557.2" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.03%)</title><rect x="557.2" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.03%)</title><rect x="557.2" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.03%)</title><rect x="557.2" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.02%)</title><rect x="557.2" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.02%)</title><rect x="557.2" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.02%)</title><rect x="557.2" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.2" y="926.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (8 samples, 0.03%)</title><rect x="558.0" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (8 samples, 0.03%)</title><rect x="558.0" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (8 samples, 0.03%)</title><rect x="558.0" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (8 samples, 0.03%)</title><rect x="558.0" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (8 samples, 0.03%)</title><rect x="558.0" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.0" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (8 samples, 0.03%)</title><rect x="558.0" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.0" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (8 samples, 0.03%)</title><rect x="558.0" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.0" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (8 samples, 0.03%)</title><rect x="558.0" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.0" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.03%)</title><rect x="558.0" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.0" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.03%)</title><rect x="558.0" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (7 samples, 0.03%)</title><rect x="558.0" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.03%)</title><rect x="558.0" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.03%)</title><rect x="558.0" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (7 samples, 0.03%)</title><rect x="558.0" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.0" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (7 samples, 0.03%)</title><rect x="558.0" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.0" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (7 samples, 0.03%)</title><rect x="558.0" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.0" y="958.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (7 samples, 0.03%)</title><rect x="558.0" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.0" y="942.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.02%)</title><rect x="558.1" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.1" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$583/1436950707.apply (9 samples, 0.04%)</title><rect x="558.4" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1$adapted (8 samples, 0.03%)</title><rect x="558.4" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$connecting$1 (8 samples, 0.03%)</title><rect x="558.4" y="1219.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (8 samples, 0.03%)</title><rect x="558.4" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.4" y="1214.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.05%)</title><rect x="558.8" y="1251.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="561.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$499/1093571280.apply (54 samples, 0.21%)</title><rect x="559.5" y="1315.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (54 samples, 0.21%)</title><rect x="559.5" y="1299.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (54 samples, 0.21%)</title><rect x="559.5" y="1283.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (54 samples, 0.21%)</title><rect x="559.5" y="1267.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (28 samples, 0.11%)</title><rect x="559.8" y="1251.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (19 samples, 0.08%)</title><rect x="560.2" y="1235.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (19 samples, 0.08%)</title><rect x="560.2" y="1219.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (18 samples, 0.07%)</title><rect x="560.2" y="1203.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 0.07%)</title><rect x="560.2" y="1187.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (17 samples, 0.07%)</title><rect x="560.3" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.3" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (17 samples, 0.07%)</title><rect x="560.3" y="1155.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="563.3" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (17 samples, 0.07%)</title><rect x="560.3" y="1139.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="563.3" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (17 samples, 0.07%)</title><rect x="560.3" y="1123.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="563.3" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (17 samples, 0.07%)</title><rect x="560.3" y="1107.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="563.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (12 samples, 0.05%)</title><rect x="561.5" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (13 samples, 0.05%)</title><rect x="562.1" y="1315.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.1" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (13 samples, 0.05%)</title><rect x="562.1" y="1299.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.1" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (13 samples, 0.05%)</title><rect x="562.1" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.1" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (13 samples, 0.05%)</title><rect x="562.1" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.1" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (13 samples, 0.05%)</title><rect x="562.1" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.1" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (13 samples, 0.05%)</title><rect x="562.1" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.1" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (13 samples, 0.05%)</title><rect x="562.1" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.1" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (13 samples, 0.05%)</title><rect x="562.1" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.1" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (11 samples, 0.04%)</title><rect x="562.1" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.1" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (11 samples, 0.04%)</title><rect x="562.1" y="1171.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.1" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (11 samples, 0.04%)</title><rect x="562.1" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.1" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (10 samples, 0.04%)</title><rect x="562.2" y="1139.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.2" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (8 samples, 0.03%)</title><rect x="562.3" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.3" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (6 samples, 0.02%)</title><rect x="562.3" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.3" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (6 samples, 0.02%)</title><rect x="562.3" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (6 samples, 0.02%)</title><rect x="562.3" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.02%)</title><rect x="562.3" y="1059.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.02%)</title><rect x="562.3" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (57 samples, 0.23%)</title><rect x="562.8" y="1331.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (57 samples, 0.23%)</title><rect x="562.8" y="1315.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (19 samples, 0.08%)</title><rect x="563.1" y="1299.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (18 samples, 0.07%)</title><rect x="563.2" y="1283.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (12 samples, 0.05%)</title><rect x="563.3" y="1267.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (9 samples, 0.04%)</title><rect x="563.4" y="1251.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.listEq$1 (9 samples, 0.04%)</title><rect x="563.4" y="1235.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (8 samples, 0.03%)</title><rect x="564.0" y="1299.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (18 samples, 0.07%)</title><rect x="564.4" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (17 samples, 0.07%)</title><rect x="564.4" y="1283.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$537/61791387.apply (6 samples, 0.02%)</title><rect x="564.6" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (3,818 samples, 15.13%)</title><rect x="565.4" y="1331.0" width="178.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.4" y="1342.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (3,803 samples, 15.07%)</title><rect x="565.5" y="1315.0" width="177.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.5" y="1326.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (7 samples, 0.03%)</title><rect x="567.0" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$18.onPush (8 samples, 0.03%)</title><rect x="567.7" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$2.onPush (7 samples, 0.03%)</title><rect x="568.4" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onPush (6 samples, 0.02%)</title><rect x="568.8" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (7 samples, 0.03%)</title><rect x="569.1" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (30 samples, 0.12%)</title><rect x="569.5" y="1299.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (28 samples, 0.11%)</title><rect x="569.6" y="1283.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (14 samples, 0.06%)</title><rect x="569.7" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (11 samples, 0.04%)</title><rect x="569.8" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (11 samples, 0.04%)</title><rect x="569.8" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (11 samples, 0.04%)</title><rect x="569.8" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (11 samples, 0.04%)</title><rect x="569.8" y="1203.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (11 samples, 0.04%)</title><rect x="569.8" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (159 samples, 0.63%)</title><rect x="570.9" y="1299.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onPull (6 samples, 0.02%)</title><rect x="572.2" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (8 samples, 0.03%)</title><rect x="573.4" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.4" y="1294.0"></text>
</g>
<g>
<title>itable stub (83 samples, 0.33%)</title><rect x="574.5" y="1283.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="577.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (552 samples, 2.19%)</title><rect x="578.4" y="1299.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.4" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (12 samples, 0.05%)</title><rect x="579.6" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (15 samples, 0.06%)</title><rect x="580.2" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (377 samples, 1.49%)</title><rect x="580.9" y="1283.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onPush (10 samples, 0.04%)</title><rect x="581.5" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPush (14 samples, 0.06%)</title><rect x="581.9" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (10 samples, 0.04%)</title><rect x="582.0" y="1251.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (7 samples, 0.03%)</title><rect x="582.1" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (238 samples, 0.94%)</title><rect x="582.6" y="1267.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1033/1789363605.apply (237 samples, 0.94%)</title><rect x="582.6" y="1251.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (237 samples, 0.94%)</title><rect x="582.6" y="1235.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.watchTermination (34 samples, 0.13%)</title><rect x="583.0" y="1219.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination$ (34 samples, 0.13%)</title><rect x="583.0" y="1203.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination (34 samples, 0.13%)</title><rect x="583.0" y="1187.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (34 samples, 0.13%)</title><rect x="583.0" y="1171.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (34 samples, 0.13%)</title><rect x="583.0" y="1155.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (33 samples, 0.13%)</title><rect x="583.0" y="1139.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (33 samples, 0.13%)</title><rect x="583.0" y="1123.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (28 samples, 0.11%)</title><rect x="583.0" y="1107.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (22 samples, 0.09%)</title><rect x="583.0" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (17 samples, 0.07%)</title><rect x="583.0" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (16 samples, 0.06%)</title><rect x="583.0" y="1059.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (12 samples, 0.05%)</title><rect x="583.1" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (194 samples, 0.77%)</title><rect x="584.6" y="1219.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (194 samples, 0.77%)</title><rect x="584.6" y="1203.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (194 samples, 0.77%)</title><rect x="584.6" y="1187.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (194 samples, 0.77%)</title><rect x="584.6" y="1171.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (22 samples, 0.09%)</title><rect x="584.7" y="1155.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (13 samples, 0.05%)</title><rect x="585.0" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (7 samples, 0.03%)</title><rect x="585.1" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/Compose.apply (8 samples, 0.03%)</title><rect x="585.9" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1098/1192688645.apply (7 samples, 0.03%)</title><rect x="585.9" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (73 samples, 0.29%)</title><rect x="586.3" y="1155.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (7 samples, 0.03%)</title><rect x="586.3" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (65 samples, 0.26%)</title><rect x="586.6" y="1139.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage.createLogicAndMaterializedValue (11 samples, 0.04%)</title><rect x="586.6" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="589.6" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (50 samples, 0.20%)</title><rect x="587.4" y="1123.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests.createLogic (6 samples, 0.02%)</title><rect x="587.9" y="1107.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport.createLogic (9 samples, 0.04%)</title><rect x="588.3" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3.&lt;init&gt; (9 samples, 0.04%)</title><rect x="588.3" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.3" y="1102.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (6 samples, 0.02%)</title><rect x="589.4" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (35 samples, 0.14%)</title><rect x="589.7" y="1155.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (29 samples, 0.11%)</title><rect x="589.7" y="1139.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (29 samples, 0.11%)</title><rect x="589.7" y="1123.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (29 samples, 0.11%)</title><rect x="589.7" y="1107.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (29 samples, 0.11%)</title><rect x="589.7" y="1091.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (29 samples, 0.11%)</title><rect x="589.7" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="1086.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (17 samples, 0.07%)</title><rect x="590.3" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (12 samples, 0.05%)</title><rect x="590.3" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (6 samples, 0.02%)</title><rect x="590.4" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.4" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.02%)</title><rect x="590.4" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.02%)</title><rect x="590.4" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.4" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (6 samples, 0.02%)</title><rect x="590.4" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.4" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (6 samples, 0.02%)</title><rect x="590.4" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.4" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (6 samples, 0.02%)</title><rect x="590.4" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.4" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.02%)</title><rect x="590.4" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="590.4" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.4" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.02%)</title><rect x="590.4" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.4" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="590.4" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.4" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.02%)</title><rect x="590.4" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.02%)</title><rect x="590.4" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.02%)</title><rect x="590.4" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.02%)</title><rect x="590.4" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.02%)</title><rect x="590.4" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.02%)</title><rect x="590.4" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.02%)</title><rect x="590.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.4" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.02%)</title><rect x="590.4" y="755.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="593.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="590.4" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="590.4" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="593.4" y="734.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.02%)</title><rect x="590.4" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="593.4" y="718.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (6 samples, 0.02%)</title><rect x="591.0" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (14 samples, 0.06%)</title><rect x="591.6" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (12 samples, 0.05%)</title><rect x="591.7" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (10 samples, 0.04%)</title><rect x="591.7" y="1123.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (9 samples, 0.04%)</title><rect x="591.8" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (13 samples, 0.05%)</title><rect x="592.4" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1099/1379069734.apply (11 samples, 0.04%)</title><rect x="592.4" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (11 samples, 0.04%)</title><rect x="592.4" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (11 samples, 0.04%)</title><rect x="592.4" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (7 samples, 0.03%)</title><rect x="592.6" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (7 samples, 0.03%)</title><rect x="592.6" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (7 samples, 0.03%)</title><rect x="592.6" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (7 samples, 0.03%)</title><rect x="592.6" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (7 samples, 0.03%)</title><rect x="592.6" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (103 samples, 0.41%)</title><rect x="593.8" y="1267.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (91 samples, 0.36%)</title><rect x="593.9" y="1251.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (91 samples, 0.36%)</title><rect x="593.9" y="1235.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (91 samples, 0.36%)</title><rect x="593.9" y="1219.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (91 samples, 0.36%)</title><rect x="593.9" y="1203.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (91 samples, 0.36%)</title><rect x="593.9" y="1187.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (91 samples, 0.36%)</title><rect x="593.9" y="1171.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (91 samples, 0.36%)</title><rect x="593.9" y="1155.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (90 samples, 0.36%)</title><rect x="593.9" y="1139.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.9" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (87 samples, 0.34%)</title><rect x="593.9" y="1123.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (87 samples, 0.34%)</title><rect x="593.9" y="1107.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (87 samples, 0.34%)</title><rect x="593.9" y="1091.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (87 samples, 0.34%)</title><rect x="593.9" y="1075.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (87 samples, 0.34%)</title><rect x="593.9" y="1059.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (87 samples, 0.34%)</title><rect x="593.9" y="1043.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (87 samples, 0.34%)</title><rect x="593.9" y="1027.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (87 samples, 0.34%)</title><rect x="593.9" y="1011.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (84 samples, 0.33%)</title><rect x="594.0" y="995.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (83 samples, 0.33%)</title><rect x="594.1" y="979.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 0.33%)</title><rect x="594.1" y="963.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.1" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.03%)</title><rect x="594.1" y="947.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="597.1" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (72 samples, 0.29%)</title><rect x="594.6" y="947.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="597.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.26%)</title><rect x="594.9" y="931.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.25%)</title><rect x="595.0" y="915.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.0" y="926.0"></text>
</g>
<g>
<title>sys_futex (59 samples, 0.23%)</title><rect x="595.2" y="899.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.2" y="910.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.23%)</title><rect x="595.2" y="883.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.2" y="894.0"></text>
</g>
<g>
<title>futex_wake (58 samples, 0.23%)</title><rect x="595.3" y="867.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.3" y="878.0"></text>
</g>
<g>
<title>wake_up_q (52 samples, 0.21%)</title><rect x="595.5" y="851.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.5" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (52 samples, 0.21%)</title><rect x="595.5" y="835.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.5" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (52 samples, 0.21%)</title><rect x="595.5" y="819.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.5" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onPush (7 samples, 0.03%)</title><rect x="598.6" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPush (8 samples, 0.03%)</title><rect x="599.2" y="1283.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFailure (6 samples, 0.02%)</title><rect x="599.6" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (11 samples, 0.04%)</title><rect x="599.9" y="1283.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.9" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (10 samples, 0.04%)</title><rect x="599.9" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.9" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (10 samples, 0.04%)</title><rect x="599.9" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (10 samples, 0.04%)</title><rect x="599.9" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.9" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (10 samples, 0.04%)</title><rect x="599.9" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.9" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (10 samples, 0.04%)</title><rect x="599.9" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.9" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (10 samples, 0.04%)</title><rect x="599.9" y="1187.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.9" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (10 samples, 0.04%)</title><rect x="599.9" y="1171.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.9" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (10 samples, 0.04%)</title><rect x="599.9" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.9" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (8 samples, 0.03%)</title><rect x="599.9" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.9" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (8 samples, 0.03%)</title><rect x="599.9" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (8 samples, 0.03%)</title><rect x="599.9" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (8 samples, 0.03%)</title><rect x="599.9" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (8 samples, 0.03%)</title><rect x="599.9" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (8 samples, 0.03%)</title><rect x="599.9" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (8 samples, 0.03%)</title><rect x="599.9" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (8 samples, 0.03%)</title><rect x="599.9" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (7 samples, 0.03%)</title><rect x="600.0" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (6 samples, 0.02%)</title><rect x="601.2" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.log (6 samples, 0.02%)</title><rect x="601.2" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log$ (6 samples, 0.02%)</title><rect x="601.2" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log (6 samples, 0.02%)</title><rect x="601.2" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (34 samples, 0.13%)</title><rect x="601.5" y="1283.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.5" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (24 samples, 0.10%)</title><rect x="601.8" y="1267.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (24 samples, 0.10%)</title><rect x="601.8" y="1251.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (24 samples, 0.10%)</title><rect x="601.8" y="1235.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (12 samples, 0.05%)</title><rect x="601.8" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (12 samples, 0.05%)</title><rect x="601.8" y="1203.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.8" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (12 samples, 0.05%)</title><rect x="601.8" y="1187.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.8" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (12 samples, 0.05%)</title><rect x="601.8" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.04%)</title><rect x="601.8" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (9 samples, 0.04%)</title><rect x="601.8" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.8" y="1150.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (9 samples, 0.04%)</title><rect x="602.5" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.5" y="1230.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (6 samples, 0.02%)</title><rect x="602.5" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.5" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (6 samples, 0.02%)</title><rect x="602.5" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.5" y="1198.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.06%)</title><rect x="603.5" y="1283.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="606.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (221 samples, 0.88%)</title><rect x="604.2" y="1299.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$3.onPull (6 samples, 0.02%)</title><rect x="604.6" y="1283.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (6 samples, 0.02%)</title><rect x="604.6" y="1267.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onPull (7 samples, 0.03%)</title><rect x="605.4" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (6 samples, 0.02%)</title><rect x="606.4" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (6 samples, 0.02%)</title><rect x="606.4" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.onPull (8 samples, 0.03%)</title><rect x="606.9" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (7 samples, 0.03%)</title><rect x="606.9" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (7 samples, 0.03%)</title><rect x="606.9" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (8 samples, 0.03%)</title><rect x="607.2" y="1283.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (8 samples, 0.03%)</title><rect x="607.2" y="1267.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.03%)</title><rect x="607.2" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.03%)</title><rect x="607.2" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.03%)</title><rect x="607.2" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.03%)</title><rect x="607.2" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.03%)</title><rect x="607.2" y="1187.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.03%)</title><rect x="607.2" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.03%)</title><rect x="607.2" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.03%)</title><rect x="607.2" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="607.2" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.03%)</title><rect x="607.2" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.03%)</title><rect x="607.2" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.03%)</title><rect x="607.2" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.03%)</title><rect x="607.2" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.03%)</title><rect x="607.2" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.03%)</title><rect x="607.2" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.03%)</title><rect x="607.2" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.03%)</title><rect x="607.2" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.03%)</title><rect x="607.2" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.2" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.02%)</title><rect x="607.3" y="963.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="610.3" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (144 samples, 0.57%)</title><rect x="607.6" y="1283.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (141 samples, 0.56%)</title><rect x="607.6" y="1267.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (141 samples, 0.56%)</title><rect x="607.6" y="1251.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (141 samples, 0.56%)</title><rect x="607.6" y="1235.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (141 samples, 0.56%)</title><rect x="607.6" y="1219.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (140 samples, 0.55%)</title><rect x="607.6" y="1203.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (140 samples, 0.55%)</title><rect x="607.6" y="1187.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (140 samples, 0.55%)</title><rect x="607.6" y="1171.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (140 samples, 0.55%)</title><rect x="607.6" y="1155.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (135 samples, 0.53%)</title><rect x="607.7" y="1139.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (133 samples, 0.53%)</title><rect x="607.7" y="1123.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (133 samples, 0.53%)</title><rect x="607.7" y="1107.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (133 samples, 0.53%)</title><rect x="607.7" y="1091.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (130 samples, 0.52%)</title><rect x="607.7" y="1075.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (130 samples, 0.52%)</title><rect x="607.7" y="1059.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (130 samples, 0.52%)</title><rect x="607.7" y="1043.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (130 samples, 0.52%)</title><rect x="607.7" y="1027.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (126 samples, 0.50%)</title><rect x="607.8" y="1011.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (126 samples, 0.50%)</title><rect x="607.8" y="995.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (126 samples, 0.50%)</title><rect x="607.8" y="979.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.8" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.05%)</title><rect x="607.9" y="963.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="610.9" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (112 samples, 0.44%)</title><rect x="608.5" y="963.0" width="5.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="611.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.40%)</title><rect x="609.0" y="947.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 0.40%)</title><rect x="609.0" y="931.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="612.0" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (19 samples, 0.08%)</title><rect x="609.4" y="915.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.4" y="926.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.08%)</title><rect x="609.4" y="899.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.4" y="910.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.08%)</title><rect x="609.4" y="883.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.4" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.07%)</title><rect x="609.5" y="867.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.5" y="878.0"></text>
</g>
<g>
<title>sys_futex (73 samples, 0.29%)</title><rect x="610.3" y="915.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.3" y="926.0"></text>
</g>
<g>
<title>do_futex (72 samples, 0.29%)</title><rect x="610.4" y="899.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (70 samples, 0.28%)</title><rect x="610.4" y="883.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="613.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (60 samples, 0.24%)</title><rect x="610.8" y="867.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="613.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.23%)</title><rect x="610.9" y="851.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="613.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 0.23%)</title><rect x="610.9" y="835.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.9" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (2,651 samples, 10.51%)</title><rect x="614.5" y="1299.0" width="124.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.5" y="1310.0">akka/stream/imp..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$PrepareResponse$$anon$3.onPush (10 samples, 0.04%)</title><rect x="614.8" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (262 samples, 1.04%)</title><rect x="615.3" y="1283.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.akka$http$impl$engine$client$OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$$drainParser (15 samples, 0.06%)</title><rect x="615.3" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.e$1 (7 samples, 0.03%)</title><rect x="615.4" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.emit (6 samples, 0.02%)</title><rect x="615.4" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (243 samples, 0.96%)</title><rect x="616.2" y="1267.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (243 samples, 0.96%)</title><rect x="616.2" y="1251.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (243 samples, 0.96%)</title><rect x="616.2" y="1235.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (242 samples, 0.96%)</title><rect x="616.2" y="1219.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (241 samples, 0.96%)</title><rect x="616.2" y="1203.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (241 samples, 0.96%)</title><rect x="616.2" y="1187.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (238 samples, 0.94%)</title><rect x="616.2" y="1171.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$594/734141967.apply (236 samples, 0.94%)</title><rect x="616.2" y="1155.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (235 samples, 0.93%)</title><rect x="616.2" y="1139.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$593/1434496787.apply (235 samples, 0.93%)</title><rect x="616.2" y="1123.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (234 samples, 0.93%)</title><rect x="616.3" y="1107.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (234 samples, 0.93%)</title><rect x="616.3" y="1091.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (234 samples, 0.93%)</title><rect x="616.3" y="1075.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (233 samples, 0.92%)</title><rect x="616.3" y="1059.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (233 samples, 0.92%)</title><rect x="616.3" y="1043.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (231 samples, 0.92%)</title><rect x="616.4" y="1027.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (222 samples, 0.88%)</title><rect x="616.5" y="1011.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (222 samples, 0.88%)</title><rect x="616.5" y="995.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (222 samples, 0.88%)</title><rect x="616.5" y="979.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (186 samples, 0.74%)</title><rect x="616.6" y="963.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (70 samples, 0.28%)</title><rect x="617.1" y="947.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (69 samples, 0.27%)</title><rect x="617.2" y="931.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.2" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (50 samples, 0.20%)</title><rect x="617.6" y="915.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (6 samples, 0.02%)</title><rect x="617.6" y="899.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1800096300.apply (38 samples, 0.15%)</title><rect x="617.8" y="899.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (38 samples, 0.15%)</title><rect x="617.8" y="883.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (36 samples, 0.14%)</title><rect x="617.9" y="867.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.9" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (35 samples, 0.14%)</title><rect x="617.9" y="851.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.9" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (35 samples, 0.14%)</title><rect x="617.9" y="835.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.9" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (35 samples, 0.14%)</title><rect x="617.9" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$597/1256279845.apply (35 samples, 0.14%)</title><rect x="617.9" y="803.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (35 samples, 0.14%)</title><rect x="617.9" y="787.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (35 samples, 0.14%)</title><rect x="617.9" y="771.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (35 samples, 0.14%)</title><rect x="617.9" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (35 samples, 0.14%)</title><rect x="617.9" y="739.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (34 samples, 0.13%)</title><rect x="617.9" y="723.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.9" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (33 samples, 0.13%)</title><rect x="617.9" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.9" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (33 samples, 0.13%)</title><rect x="617.9" y="691.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.9" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (29 samples, 0.11%)</title><rect x="617.9" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.9" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (29 samples, 0.11%)</title><rect x="617.9" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (29 samples, 0.11%)</title><rect x="617.9" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.9" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (12 samples, 0.05%)</title><rect x="618.1" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.1" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (12 samples, 0.05%)</title><rect x="618.1" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.1" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (12 samples, 0.05%)</title><rect x="618.1" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.1" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.time$minusof$minusday (7 samples, 0.03%)</title><rect x="618.7" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday$ (7 samples, 0.03%)</title><rect x="618.7" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.7" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday (7 samples, 0.03%)</title><rect x="618.7" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.7" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (101 samples, 0.40%)</title><rect x="620.4" y="947.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (92 samples, 0.36%)</title><rect x="620.6" y="931.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (6 samples, 0.02%)</title><rect x="620.6" y="915.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1800096300.apply (86 samples, 0.34%)</title><rect x="620.8" y="915.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (86 samples, 0.34%)</title><rect x="620.8" y="899.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (33 samples, 0.13%)</title><rect x="620.9" y="883.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.9" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (33 samples, 0.13%)</title><rect x="620.9" y="867.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.9" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (33 samples, 0.13%)</title><rect x="620.9" y="851.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.9" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (33 samples, 0.13%)</title><rect x="620.9" y="835.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$604/1626715903.apply (33 samples, 0.13%)</title><rect x="620.9" y="819.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (33 samples, 0.13%)</title><rect x="620.9" y="803.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (33 samples, 0.13%)</title><rect x="620.9" y="787.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (33 samples, 0.13%)</title><rect x="620.9" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (33 samples, 0.13%)</title><rect x="620.9" y="755.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (20 samples, 0.08%)</title><rect x="620.9" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getCharset (6 samples, 0.02%)</title><rect x="621.0" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.0" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getCharset$ (6 samples, 0.02%)</title><rect x="621.0" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.0" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getCharset (6 samples, 0.02%)</title><rect x="621.0" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpCharsets$.getForKeyCaseInsensitive (6 samples, 0.02%)</title><rect x="621.0" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.0" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKeyCaseInsensitive$ (6 samples, 0.02%)</title><rect x="621.0" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.0" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (6 samples, 0.02%)</title><rect x="621.3" y="723.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (6 samples, 0.02%)</title><rect x="621.3" y="707.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.3" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (6 samples, 0.02%)</title><rect x="621.3" y="691.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (6 samples, 0.02%)</title><rect x="621.5" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.5" y="734.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals$ (6 samples, 0.02%)</title><rect x="621.5" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.5" y="718.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals (6 samples, 0.02%)</title><rect x="621.5" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.5" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (13 samples, 0.05%)</title><rect x="621.8" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (13 samples, 0.05%)</title><rect x="621.8" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (13 samples, 0.05%)</title><rect x="621.8" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$22 (6 samples, 0.02%)</title><rect x="621.8" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (36 samples, 0.14%)</title><rect x="622.4" y="883.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.4" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (35 samples, 0.14%)</title><rect x="622.5" y="867.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.5" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (35 samples, 0.14%)</title><rect x="622.5" y="851.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.5" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (35 samples, 0.14%)</title><rect x="622.5" y="835.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.5" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$597/1256279845.apply (35 samples, 0.14%)</title><rect x="622.5" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (35 samples, 0.14%)</title><rect x="622.5" y="803.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.5" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (35 samples, 0.14%)</title><rect x="622.5" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (35 samples, 0.14%)</title><rect x="622.5" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.5" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (35 samples, 0.14%)</title><rect x="622.5" y="755.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.5" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (32 samples, 0.13%)</title><rect x="622.6" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.6" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (31 samples, 0.12%)</title><rect x="622.6" y="723.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.6" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (30 samples, 0.12%)</title><rect x="622.6" y="707.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.6" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (30 samples, 0.12%)</title><rect x="622.6" y="691.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.6" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (30 samples, 0.12%)</title><rect x="622.6" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.6" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (30 samples, 0.12%)</title><rect x="622.6" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.6" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (15 samples, 0.06%)</title><rect x="622.7" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (15 samples, 0.06%)</title><rect x="622.7" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.7" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (14 samples, 0.06%)</title><rect x="622.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.8" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.year (8 samples, 0.03%)</title><rect x="623.1" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.1" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year$ (8 samples, 0.03%)</title><rect x="623.1" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year (8 samples, 0.03%)</title><rect x="623.1" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.1" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.digit4 (8 samples, 0.03%)</title><rect x="623.1" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.1" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4$ (7 samples, 0.03%)</title><rect x="623.1" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.1" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4 (7 samples, 0.03%)</title><rect x="623.1" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.1" y="526.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.time$minusof$minusday (8 samples, 0.03%)</title><rect x="623.5" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.5" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday$ (7 samples, 0.03%)</title><rect x="623.5" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.5" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday (7 samples, 0.03%)</title><rect x="623.5" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.5" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (12 samples, 0.05%)</title><rect x="624.1" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.1" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (8 samples, 0.03%)</title><rect x="624.2" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.2" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (8 samples, 0.03%)</title><rect x="624.2" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.2" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (8 samples, 0.03%)</title><rect x="624.2" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.2" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$595/85128717.apply (8 samples, 0.03%)</title><rect x="624.2" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.2" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (7 samples, 0.03%)</title><rect x="624.3" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (7 samples, 0.03%)</title><rect x="624.3" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.3" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (7 samples, 0.03%)</title><rect x="624.3" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (6 samples, 0.02%)</title><rect x="624.3" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (6 samples, 0.02%)</title><rect x="624.3" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.3" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (6 samples, 0.02%)</title><rect x="624.3" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (6 samples, 0.02%)</title><rect x="624.3" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.3" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (28 samples, 0.11%)</title><rect x="625.3" y="963.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (7 samples, 0.03%)</title><rect x="626.0" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (7 samples, 0.03%)</title><rect x="626.0" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseStatus (6 samples, 0.02%)</title><rect x="627.0" y="1011.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (277 samples, 1.10%)</title><rect x="627.6" y="1283.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (8 samples, 0.03%)</title><rect x="627.6" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (6 samples, 0.02%)</title><rect x="627.7" y="1251.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (6 samples, 0.02%)</title><rect x="627.7" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (6 samples, 0.02%)</title><rect x="627.7" y="1219.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (6 samples, 0.02%)</title><rect x="627.7" y="1203.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (263 samples, 1.04%)</title><rect x="628.0" y="1267.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (241 samples, 0.96%)</title><rect x="628.0" y="1251.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (241 samples, 0.96%)</title><rect x="628.0" y="1235.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (240 samples, 0.95%)</title><rect x="628.0" y="1219.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (237 samples, 0.94%)</title><rect x="628.0" y="1203.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$510/1712877063.apply (191 samples, 0.76%)</title><rect x="628.2" y="1187.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (191 samples, 0.76%)</title><rect x="628.2" y="1171.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (24 samples, 0.10%)</title><rect x="628.2" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (24 samples, 0.10%)</title><rect x="628.2" y="1139.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (24 samples, 0.10%)</title><rect x="628.2" y="1123.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (23 samples, 0.09%)</title><rect x="628.2" y="1107.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (23 samples, 0.09%)</title><rect x="628.2" y="1091.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (10 samples, 0.04%)</title><rect x="628.2" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.2" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (10 samples, 0.04%)</title><rect x="628.2" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (10 samples, 0.04%)</title><rect x="628.2" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (10 samples, 0.04%)</title><rect x="628.2" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (7 samples, 0.03%)</title><rect x="628.8" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (7 samples, 0.03%)</title><rect x="628.8" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (167 samples, 0.66%)</title><rect x="629.3" y="1155.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (167 samples, 0.66%)</title><rect x="629.3" y="1139.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (167 samples, 0.66%)</title><rect x="629.3" y="1123.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (167 samples, 0.66%)</title><rect x="629.3" y="1107.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (167 samples, 0.66%)</title><rect x="629.3" y="1091.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (115 samples, 0.46%)</title><rect x="629.4" y="1075.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (115 samples, 0.46%)</title><rect x="629.4" y="1059.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.4" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (115 samples, 0.46%)</title><rect x="629.4" y="1043.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.4" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (115 samples, 0.46%)</title><rect x="629.4" y="1027.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.4" y="1038.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (24 samples, 0.10%)</title><rect x="629.4" y="1011.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (15 samples, 0.06%)</title><rect x="629.7" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (9 samples, 0.04%)</title><rect x="629.7" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (6 samples, 0.02%)</title><rect x="629.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (9 samples, 0.04%)</title><rect x="630.5" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (9 samples, 0.04%)</title><rect x="630.5" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (9 samples, 0.04%)</title><rect x="630.5" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (7 samples, 0.03%)</title><rect x="630.6" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.listEq$1 (7 samples, 0.03%)</title><rect x="630.6" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.6" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (44 samples, 0.17%)</title><rect x="630.9" y="1011.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (9 samples, 0.04%)</title><rect x="631.0" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.0" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (33 samples, 0.13%)</title><rect x="631.4" y="995.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (33 samples, 0.13%)</title><rect x="631.4" y="979.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.4" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (12 samples, 0.05%)</title><rect x="633.3" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (11 samples, 0.04%)</title><rect x="633.3" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.3" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (9 samples, 0.04%)</title><rect x="633.3" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.3" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (9 samples, 0.04%)</title><rect x="633.3" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.3" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (8 samples, 0.03%)</title><rect x="633.8" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (7 samples, 0.03%)</title><rect x="633.8" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (7 samples, 0.03%)</title><rect x="634.8" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (7 samples, 0.03%)</title><rect x="634.8" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.initialAttributes (6 samples, 0.02%)</title><rect x="634.8" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (6 samples, 0.02%)</title><rect x="634.8" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (6 samples, 0.02%)</title><rect x="634.8" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (6 samples, 0.02%)</title><rect x="634.8" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (34 samples, 0.13%)</title><rect x="635.1" y="1075.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (34 samples, 0.13%)</title><rect x="635.1" y="1059.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (25 samples, 0.10%)</title><rect x="635.1" y="1043.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (21 samples, 0.08%)</title><rect x="635.3" y="1027.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (20 samples, 0.08%)</title><rect x="635.3" y="1011.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (16 samples, 0.06%)</title><rect x="635.3" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.3" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (15 samples, 0.06%)</title><rect x="635.3" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.3" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (9 samples, 0.04%)</title><rect x="636.3" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.initialAttributes (6 samples, 0.02%)</title><rect x="636.4" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (20 samples, 0.08%)</title><rect x="638.0" y="1187.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.06%)</title><rect x="638.1" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (13 samples, 0.05%)</title><rect x="639.3" y="1251.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="639.6" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.find (8 samples, 0.03%)</title><rect x="639.9" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find$ (8 samples, 0.03%)</title><rect x="639.9" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find (8 samples, 0.03%)</title><rect x="639.9" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (302 samples, 1.20%)</title><rect x="640.6" y="1283.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (297 samples, 1.18%)</title><rect x="640.7" y="1267.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (297 samples, 1.18%)</title><rect x="640.7" y="1251.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (296 samples, 1.17%)</title><rect x="640.7" y="1235.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (292 samples, 1.16%)</title><rect x="640.8" y="1219.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (292 samples, 1.16%)</title><rect x="640.8" y="1203.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (292 samples, 1.16%)</title><rect x="640.8" y="1187.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (286 samples, 1.13%)</title><rect x="640.8" y="1171.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1086/195630944.apply (178 samples, 0.71%)</title><rect x="640.8" y="1155.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (174 samples, 0.69%)</title><rect x="641.0" y="1139.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$1118/1100873047.apply (171 samples, 0.68%)</title><rect x="641.1" y="1123.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (171 samples, 0.68%)</title><rect x="641.1" y="1107.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (171 samples, 0.68%)</title><rect x="641.1" y="1091.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (171 samples, 0.68%)</title><rect x="641.1" y="1075.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (171 samples, 0.68%)</title><rect x="641.1" y="1059.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (171 samples, 0.68%)</title><rect x="641.1" y="1043.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (165 samples, 0.65%)</title><rect x="641.3" y="1027.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (92 samples, 0.36%)</title><rect x="641.3" y="1011.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (92 samples, 0.36%)</title><rect x="641.3" y="995.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (92 samples, 0.36%)</title><rect x="641.3" y="979.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (69 samples, 0.27%)</title><rect x="641.5" y="963.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (43 samples, 0.17%)</title><rect x="641.8" y="947.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (40 samples, 0.16%)</title><rect x="641.9" y="931.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (10 samples, 0.04%)</title><rect x="642.6" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (10 samples, 0.04%)</title><rect x="642.6" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.6" y="910.0"></text>
</g>
<g>
<title>scala/Tuple2._2$mcI$sp (7 samples, 0.03%)</title><rect x="643.2" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.2" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (10 samples, 0.04%)</title><rect x="643.9" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (13 samples, 0.05%)</title><rect x="644.7" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.strictEntity (7 samples, 0.03%)</title><rect x="644.9" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity$ (7 samples, 0.03%)</title><rect x="644.9" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity (7 samples, 0.03%)</title><rect x="644.9" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (68 samples, 0.27%)</title><rect x="645.8" y="1011.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (55 samples, 0.22%)</title><rect x="646.1" y="995.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (6 samples, 0.02%)</title><rect x="646.1" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (6 samples, 0.02%)</title><rect x="646.1" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (49 samples, 0.19%)</title><rect x="646.4" y="979.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.4" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (48 samples, 0.19%)</title><rect x="646.4" y="963.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.4" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser$AlternativeDeliverySchemes$$anon$2.success (7 samples, 0.03%)</title><rect x="646.4" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.4" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (41 samples, 0.16%)</title><rect x="646.7" y="947.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.7" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (36 samples, 0.14%)</title><rect x="646.8" y="931.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1116/28313746.apply (27 samples, 0.11%)</title><rect x="646.8" y="915.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (27 samples, 0.11%)</title><rect x="646.8" y="899.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (24 samples, 0.10%)</title><rect x="646.9" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (24 samples, 0.10%)</title><rect x="646.9" y="867.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (11 samples, 0.04%)</title><rect x="647.2" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.2" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.savePath (8 samples, 0.03%)</title><rect x="647.7" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.7" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.slice (7 samples, 0.03%)</title><rect x="648.7" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$436/1638304054.apply (96 samples, 0.38%)</title><rect x="649.2" y="1155.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (95 samples, 0.38%)</title><rect x="649.2" y="1139.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (95 samples, 0.38%)</title><rect x="649.2" y="1123.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (95 samples, 0.38%)</title><rect x="649.2" y="1107.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (95 samples, 0.38%)</title><rect x="649.2" y="1091.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (95 samples, 0.38%)</title><rect x="649.2" y="1075.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (84 samples, 0.33%)</title><rect x="649.3" y="1059.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (84 samples, 0.33%)</title><rect x="649.3" y="1043.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (84 samples, 0.33%)</title><rect x="649.3" y="1027.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (81 samples, 0.32%)</title><rect x="649.3" y="1011.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (75 samples, 0.30%)</title><rect x="649.5" y="995.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (74 samples, 0.29%)</title><rect x="649.5" y="979.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (6 samples, 0.02%)</title><rect x="649.5" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1800096300.apply (62 samples, 0.25%)</title><rect x="649.8" y="963.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (62 samples, 0.25%)</title><rect x="649.8" y="947.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (16 samples, 0.06%)</title><rect x="649.9" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (15 samples, 0.06%)</title><rect x="649.9" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.9" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (15 samples, 0.06%)</title><rect x="649.9" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.9" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (15 samples, 0.06%)</title><rect x="649.9" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$604/1626715903.apply (15 samples, 0.06%)</title><rect x="649.9" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (14 samples, 0.06%)</title><rect x="649.9" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (13 samples, 0.05%)</title><rect x="650.0" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.0" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (13 samples, 0.05%)</title><rect x="650.0" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.0" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (13 samples, 0.05%)</title><rect x="650.0" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.0" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (10 samples, 0.04%)</title><rect x="650.0" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (8 samples, 0.03%)</title><rect x="650.0" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (8 samples, 0.03%)</title><rect x="650.0" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (7 samples, 0.03%)</title><rect x="650.1" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (26 samples, 0.10%)</title><rect x="650.6" y="931.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.6" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (25 samples, 0.10%)</title><rect x="650.6" y="915.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.6" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (25 samples, 0.10%)</title><rect x="650.6" y="899.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.6" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (25 samples, 0.10%)</title><rect x="650.6" y="883.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31$$Lambda$1005/2021353698.apply (25 samples, 0.10%)</title><rect x="650.6" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.6" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.$anonfun$apply$31 (24 samples, 0.10%)</title><rect x="650.7" y="851.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.7" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.host (24 samples, 0.10%)</title><rect x="650.7" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.7" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host$ (24 samples, 0.10%)</title><rect x="650.7" y="819.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.7" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host (24 samples, 0.10%)</title><rect x="650.7" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.7" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort$minuspushed (15 samples, 0.06%)</title><rect x="651.0" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (13 samples, 0.05%)</title><rect x="651.0" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (10 samples, 0.04%)</title><rect x="651.0" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (6 samples, 0.02%)</title><rect x="651.2" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (19 samples, 0.08%)</title><rect x="651.8" y="931.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.8" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (18 samples, 0.07%)</title><rect x="651.8" y="915.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.8" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (18 samples, 0.07%)</title><rect x="651.8" y="899.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.8" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (18 samples, 0.07%)</title><rect x="651.8" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$1117/1171506229.apply (18 samples, 0.07%)</title><rect x="651.8" y="867.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (17 samples, 0.07%)</title><rect x="651.9" y="851.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (17 samples, 0.07%)</title><rect x="651.9" y="835.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (17 samples, 0.07%)</title><rect x="651.9" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (17 samples, 0.07%)</title><rect x="651.9" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (14 samples, 0.06%)</title><rect x="651.9" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (14 samples, 0.06%)</title><rect x="651.9" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (14 samples, 0.06%)</title><rect x="651.9" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (9 samples, 0.04%)</title><rect x="651.9" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (9 samples, 0.04%)</title><rect x="651.9" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.9" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (9 samples, 0.04%)</title><rect x="651.9" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.9" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (9 samples, 0.04%)</title><rect x="653.2" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (8 samples, 0.03%)</title><rect x="653.2" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (6 samples, 0.02%)</title><rect x="653.3" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.3" y="1038.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.04%)</title><rect x="653.7" y="1155.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="656.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.doPull (6 samples, 0.02%)</title><rect x="654.2" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull$ (6 samples, 0.02%)</title><rect x="654.2" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull (6 samples, 0.02%)</title><rect x="654.2" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (95 samples, 0.38%)</title><rect x="654.7" y="1283.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (90 samples, 0.36%)</title><rect x="654.8" y="1267.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (72 samples, 0.29%)</title><rect x="655.0" y="1251.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (29 samples, 0.11%)</title><rect x="655.1" y="1235.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (23 samples, 0.09%)</title><rect x="655.3" y="1219.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (23 samples, 0.09%)</title><rect x="655.3" y="1203.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (23 samples, 0.09%)</title><rect x="655.3" y="1187.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (16 samples, 0.06%)</title><rect x="655.4" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (27 samples, 0.11%)</title><rect x="656.4" y="1235.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (19 samples, 0.08%)</title><rect x="656.7" y="1219.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (8 samples, 0.03%)</title><rect x="657.3" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.isKnownEmpty (9 samples, 0.04%)</title><rect x="658.5" y="1251.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (9 samples, 0.04%)</title><rect x="658.5" y="1235.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (9 samples, 0.04%)</title><rect x="658.5" y="1219.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (9 samples, 0.04%)</title><rect x="658.5" y="1203.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.5" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (9 samples, 0.04%)</title><rect x="658.5" y="1187.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (9 samples, 0.04%)</title><rect x="658.5" y="1171.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (9 samples, 0.04%)</title><rect x="658.5" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.compare (9 samples, 0.04%)</title><rect x="658.5" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.5" y="1150.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.03%)</title><rect x="658.6" y="1123.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="661.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$4.onPush (6 samples, 0.02%)</title><rect x="659.2" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (12 samples, 0.05%)</title><rect x="659.5" y="1283.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (13 samples, 0.05%)</title><rect x="660.0" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Queue.tail (6 samples, 0.02%)</title><rect x="660.3" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (18 samples, 0.07%)</title><rect x="660.6" y="1283.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.apply (11 samples, 0.04%)</title><rect x="660.9" y="1267.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.&lt;init&gt; (10 samples, 0.04%)</title><rect x="660.9" y="1251.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.verifyUri (6 samples, 0.02%)</title><rect x="661.1" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.c$1 (6 samples, 0.02%)</title><rect x="661.1" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$18.onPush (7 samples, 0.03%)</title><rect x="661.6" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (35 samples, 0.14%)</title><rect x="661.9" y="1283.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (25 samples, 0.10%)</title><rect x="662.0" y="1267.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (21 samples, 0.08%)</title><rect x="662.2" y="1251.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (21 samples, 0.08%)</title><rect x="662.2" y="1235.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (19 samples, 0.08%)</title><rect x="662.3" y="1219.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1077/1453559326.apply (17 samples, 0.07%)</title><rect x="662.3" y="1203.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (16 samples, 0.06%)</title><rect x="662.4" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$1119/1982008662.apply (10 samples, 0.04%)</title><rect x="662.4" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$new$1 (10 samples, 0.04%)</title><rect x="662.4" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.schedule (9 samples, 0.04%)</title><rect x="662.4" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (9 samples, 0.04%)</title><rect x="662.4" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (9 samples, 0.04%)</title><rect x="662.4" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1075/971331641.apply (6 samples, 0.02%)</title><rect x="662.8" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (6 samples, 0.02%)</title><rect x="662.8" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$6.onPush (31 samples, 0.12%)</title><rect x="663.6" y="1283.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.clear (14 samples, 0.06%)</title><rect x="663.6" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.foreach$extension (11 samples, 0.04%)</title><rect x="663.7" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (10 samples, 0.04%)</title><rect x="663.7" y="1235.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (10 samples, 0.04%)</title><rect x="663.7" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (9 samples, 0.04%)</title><rect x="663.7" y="1203.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1077/1453559326.apply (9 samples, 0.04%)</title><rect x="663.7" y="1187.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (9 samples, 0.04%)</title><rect x="663.7" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1075/971331641.apply (6 samples, 0.02%)</title><rect x="663.9" y="1155.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (6 samples, 0.02%)</title><rect x="663.9" y="1139.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/Queue.tail (11 samples, 0.04%)</title><rect x="664.5" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (14 samples, 0.06%)</title><rect x="665.8" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.akka$stream$impl$Timers$IdleTimeoutBidi$$anon$$onActivity (9 samples, 0.04%)</title><rect x="665.9" y="1267.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (28 samples, 0.11%)</title><rect x="666.5" y="1283.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SupervisedGraphStageLogic.withSupervision (10 samples, 0.04%)</title><rect x="666.5" y="1267.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/Object.equals (12 samples, 0.05%)</title><rect x="667.2" y="1267.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.2" y="1278.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="667.5" y="1251.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="670.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPush (15 samples, 0.06%)</title><rect x="667.8" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (8 samples, 0.03%)</title><rect x="668.1" y="1267.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPush (6 samples, 0.02%)</title><rect x="668.5" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (58 samples, 0.23%)</title><rect x="668.8" y="1283.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$1031/824807960.apply (27 samples, 0.11%)</title><rect x="668.8" y="1267.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (27 samples, 0.11%)</title><rect x="668.8" y="1251.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (27 samples, 0.11%)</title><rect x="668.8" y="1235.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMethod.equals (6 samples, 0.02%)</title><rect x="668.9" y="1219.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (19 samples, 0.08%)</title><rect x="669.1" y="1219.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.findHostAndWsUpgrade$1 (6 samples, 0.02%)</title><rect x="669.4" y="1203.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/TLSPlacebo$$$Lambda$447/21541191.apply (6 samples, 0.02%)</title><rect x="670.3" y="1267.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (19 samples, 0.08%)</title><rect x="670.6" y="1267.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (16 samples, 0.06%)</title><rect x="670.7" y="1251.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/OutPort.id (15 samples, 0.06%)</title><rect x="670.7" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (1,411 samples, 5.59%)</title><rect x="671.5" y="1283.0" width="66.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.5" y="1294.0">akka/st..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1033/1789363605.apply (11 samples, 0.04%)</title><rect x="671.5" y="1267.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (11 samples, 0.04%)</title><rect x="671.5" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.addAttributes (10 samples, 0.04%)</title><rect x="671.5" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.withAttributes (10 samples, 0.04%)</title><rect x="671.5" y="1219.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (9 samples, 0.04%)</title><rect x="671.5" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (8 samples, 0.03%)</title><rect x="671.5" y="1187.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (7 samples, 0.03%)</title><rect x="671.6" y="1171.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$405/873573871.apply (7 samples, 0.03%)</title><rect x="671.6" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1029/1802834384.apply (1,391 samples, 5.51%)</title><rect x="672.0" y="1267.0" width="65.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.0" y="1278.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (1,386 samples, 5.49%)</title><rect x="672.2" y="1251.0" width="64.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.2" y="1262.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$993/1918066777.apply (1,376 samples, 5.45%)</title><rect x="672.5" y="1235.0" width="64.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.5" y="1246.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,372 samples, 5.44%)</title><rect x="672.7" y="1219.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.7" y="1230.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$$Lambda$981/1109176950.apply (6 samples, 0.02%)</title><rect x="672.7" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1126/557091544.apply (1,342 samples, 5.32%)</title><rect x="673.1" y="1203.0" width="62.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.1" y="1214.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (1,340 samples, 5.31%)</title><rect x="673.2" y="1187.0" width="62.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="1198.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1124/1513819416.apply (13 samples, 0.05%)</title><rect x="673.5" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (13 samples, 0.05%)</title><rect x="673.5" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (10 samples, 0.04%)</title><rect x="673.5" y="1139.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$988/775410244.apply (10 samples, 0.04%)</title><rect x="673.5" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$1 (8 samples, 0.03%)</title><rect x="673.6" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (8 samples, 0.03%)</title><rect x="673.6" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$993/1918066777.apply (1,311 samples, 5.20%)</title><rect x="674.1" y="1171.0" width="61.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.1" y="1182.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,310 samples, 5.19%)</title><rect x="674.1" y="1155.0" width="61.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.1" y="1166.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$992/941480419.apply (13 samples, 0.05%)</title><rect x="674.2" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (13 samples, 0.05%)</title><rect x="674.2" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$987/672052608.apply (11 samples, 0.04%)</title><rect x="674.3" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (11 samples, 0.04%)</title><rect x="674.3" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1121/625339987.apply (11 samples, 0.04%)</title><rect x="674.3" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleRejections$1 (11 samples, 0.04%)</title><rect x="674.3" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.recoverRejectionsWith (9 samples, 0.04%)</title><rect x="674.3" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith$ (9 samples, 0.04%)</title><rect x="674.3" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejectionsWith (9 samples, 0.04%)</title><rect x="674.3" y="1011.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRouteResultWithPF (6 samples, 0.02%)</title><rect x="674.5" y="995.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWithPF$ (6 samples, 0.02%)</title><rect x="674.5" y="979.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWithPF (6 samples, 0.02%)</title><rect x="674.5" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRouteResultWith (6 samples, 0.02%)</title><rect x="674.5" y="947.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWith$ (6 samples, 0.02%)</title><rect x="674.5" y="931.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.5" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultWith (6 samples, 0.02%)</title><rect x="674.5" y="915.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.5" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1131/962264088.apply (1,293 samples, 5.12%)</title><rect x="674.9" y="1139.0" width="60.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.9" y="1150.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (1,291 samples, 5.12%)</title><rect x="675.0" y="1123.0" width="60.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.0" y="1134.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$993/1918066777.apply (1,284 samples, 5.09%)</title><rect x="675.2" y="1107.0" width="60.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.2" y="1118.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,284 samples, 5.09%)</title><rect x="675.2" y="1091.0" width="60.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.2" y="1102.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$992/941480419.apply (41 samples, 0.16%)</title><rect x="675.2" y="1075.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (41 samples, 0.16%)</title><rect x="675.2" y="1059.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (32 samples, 0.13%)</title><rect x="675.2" y="1043.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1122/897606737.apply (32 samples, 0.13%)</title><rect x="675.2" y="1027.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.2" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (30 samples, 0.12%)</title><rect x="675.3" y="1011.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (29 samples, 0.11%)</title><rect x="675.3" y="995.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1134/532836674.apply (28 samples, 0.11%)</title><rect x="675.3" y="979.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.3" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (25 samples, 0.10%)</title><rect x="675.4" y="963.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1124/1513819416.apply (25 samples, 0.10%)</title><rect x="675.4" y="947.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.4" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (25 samples, 0.10%)</title><rect x="675.4" y="931.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.4" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (25 samples, 0.10%)</title><rect x="675.4" y="915.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.4" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1138/1323321570.apply (23 samples, 0.09%)</title><rect x="675.4" y="899.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (20 samples, 0.08%)</title><rect x="675.6" y="883.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1127/2037219873.apply (15 samples, 0.06%)</title><rect x="675.7" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.7" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (15 samples, 0.06%)</title><rect x="675.7" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.7" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$991/682134336.apply (14 samples, 0.06%)</title><rect x="675.7" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.7" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (12 samples, 0.05%)</title><rect x="675.7" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.7" y="830.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$990/1968673503.apply (12 samples, 0.05%)</title><rect x="675.7" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.7" y="814.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$1 (10 samples, 0.04%)</title><rect x="675.8" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.8" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$989/1267737219.apply (7 samples, 0.03%)</title><rect x="675.8" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.8" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (7 samples, 0.03%)</title><rect x="675.8" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.8" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$987/672052608.apply (9 samples, 0.04%)</title><rect x="676.7" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (9 samples, 0.04%)</title><rect x="676.7" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$986/1870278766.apply (9 samples, 0.04%)</title><rect x="676.7" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$2 (8 samples, 0.03%)</title><rect x="676.7" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1147/144446466.apply (1,228 samples, 4.87%)</title><rect x="677.1" y="1075.0" width="57.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.1" y="1086.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,228 samples, 4.87%)</title><rect x="677.1" y="1059.0" width="57.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.1" y="1070.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$993/1918066777.apply (1,225 samples, 4.85%)</title><rect x="677.1" y="1043.0" width="57.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.1" y="1054.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,225 samples, 4.85%)</title><rect x="677.1" y="1027.0" width="57.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.1" y="1038.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$992/941480419.apply (13 samples, 0.05%)</title><rect x="677.3" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (13 samples, 0.05%)</title><rect x="677.3" y="995.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$987/672052608.apply (9 samples, 0.04%)</title><rect x="677.5" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (9 samples, 0.04%)</title><rect x="677.5" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MethodDirectives$$Lambda$1140/755682266.apply (7 samples, 0.03%)</title><rect x="677.6" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.6" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1148/1439664131.apply (1,204 samples, 4.77%)</title><rect x="677.9" y="1011.0" width="56.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.9" y="1022.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (1,201 samples, 4.76%)</title><rect x="678.1" y="995.0" width="56.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.1" y="1006.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1127/2037219873.apply (55 samples, 0.22%)</title><rect x="678.2" y="979.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.2" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (55 samples, 0.22%)</title><rect x="678.2" y="963.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$991/682134336.apply (55 samples, 0.22%)</title><rect x="678.2" y="947.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (55 samples, 0.22%)</title><rect x="678.2" y="931.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.2" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1146/837835999.apply (54 samples, 0.21%)</title><rect x="678.3" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.3" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (50 samples, 0.20%)</title><rect x="678.4" y="899.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$989/1267737219.apply (44 samples, 0.17%)</title><rect x="678.4" y="883.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (44 samples, 0.17%)</title><rect x="678.4" y="867.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (44 samples, 0.17%)</title><rect x="678.4" y="851.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1138/1323321570.apply (44 samples, 0.17%)</title><rect x="678.4" y="835.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (43 samples, 0.17%)</title><rect x="678.4" y="819.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.4" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$991/682134336.apply (42 samples, 0.17%)</title><rect x="678.4" y="803.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.4" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (42 samples, 0.17%)</title><rect x="678.4" y="787.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.4" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1160/162313290.apply (42 samples, 0.17%)</title><rect x="678.4" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.4" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (42 samples, 0.17%)</title><rect x="678.4" y="755.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.4" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (22 samples, 0.09%)</title><rect x="678.5" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.5" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (15 samples, 0.06%)</title><rect x="678.8" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.8" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (15 samples, 0.06%)</title><rect x="678.8" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (15 samples, 0.06%)</title><rect x="678.8" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (14 samples, 0.06%)</title><rect x="678.8" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (14 samples, 0.06%)</title><rect x="678.8" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.8" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (14 samples, 0.06%)</title><rect x="678.8" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.8" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.transform (11 samples, 0.04%)</title><rect x="678.9" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.9" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.transform$ (9 samples, 0.04%)</title><rect x="679.0" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.entity (10 samples, 0.04%)</title><rect x="679.7" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.7" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity$ (10 samples, 0.04%)</title><rect x="679.7" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.7" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity (10 samples, 0.04%)</title><rect x="679.7" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.7" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (9 samples, 0.04%)</title><rect x="679.7" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.7" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (9 samples, 0.04%)</title><rect x="679.7" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.7" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (9 samples, 0.04%)</title><rect x="679.7" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.7" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (9 samples, 0.04%)</title><rect x="679.7" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.7" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (9 samples, 0.04%)</title><rect x="679.7" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.7" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (9 samples, 0.04%)</title><rect x="679.7" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.7" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRejections (6 samples, 0.02%)</title><rect x="679.7" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.7" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1147/144446466.apply (1,133 samples, 4.49%)</title><rect x="680.8" y="979.0" width="53.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.8" y="990.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,133 samples, 4.49%)</title><rect x="680.8" y="963.0" width="53.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.8" y="974.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$993/1918066777.apply (1,034 samples, 4.10%)</title><rect x="680.8" y="947.0" width="48.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.8" y="958.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,034 samples, 4.10%)</title><rect x="680.8" y="931.0" width="48.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.8" y="942.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$992/941480419.apply (14 samples, 0.06%)</title><rect x="680.8" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (14 samples, 0.06%)</title><rect x="680.8" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (7 samples, 0.03%)</title><rect x="680.8" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$988/775410244.apply (7 samples, 0.03%)</title><rect x="680.8" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$1 (6 samples, 0.02%)</title><rect x="680.8" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.02%)</title><rect x="680.8" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$987/672052608.apply (7 samples, 0.03%)</title><rect x="681.1" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.1" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (7 samples, 0.03%)</title><rect x="681.1" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.1" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1165/1478707642.apply (7 samples, 0.03%)</title><rect x="681.1" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.1" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$1 (7 samples, 0.03%)</title><rect x="681.1" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.1" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1173/1514950729.apply (1,020 samples, 4.04%)</title><rect x="681.4" y="915.0" width="47.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.4" y="926.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (1,020 samples, 4.04%)</title><rect x="681.4" y="899.0" width="47.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.4" y="910.0">akka..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1185/885534408.apply (11 samples, 0.04%)</title><rect x="681.5" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.5" y="894.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (11 samples, 0.04%)</title><rect x="681.5" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.5" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (11 samples, 0.04%)</title><rect x="681.5" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.5" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (11 samples, 0.04%)</title><rect x="681.5" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.5" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (8 samples, 0.03%)</title><rect x="681.5" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.5" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1170/269918339.apply (976 samples, 3.87%)</title><rect x="682.0" y="883.0" width="45.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.0" y="894.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (976 samples, 3.87%)</title><rect x="682.0" y="867.0" width="45.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.0" y="878.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (976 samples, 3.87%)</title><rect x="682.0" y="851.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.0" y="862.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1175/1707218721.apply (971 samples, 3.85%)</title><rect x="682.2" y="835.0" width="45.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.2" y="846.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (969 samples, 3.84%)</title><rect x="682.3" y="819.0" width="45.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.3" y="830.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (969 samples, 3.84%)</title><rect x="682.3" y="803.0" width="45.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="814.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1066/248555202.apply (963 samples, 3.82%)</title><rect x="682.5" y="787.0" width="45.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.5" y="798.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (961 samples, 3.81%)</title><rect x="682.6" y="771.0" width="44.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.6" y="782.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1068/1534058762.apply (12 samples, 0.05%)</title><rect x="682.9" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.9" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (12 samples, 0.05%)</title><rect x="682.9" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.9" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (12 samples, 0.05%)</title><rect x="682.9" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.9" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (12 samples, 0.05%)</title><rect x="682.9" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.9" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (11 samples, 0.04%)</title><rect x="682.9" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.9" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1077/1453559326.apply (11 samples, 0.04%)</title><rect x="682.9" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.9" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (11 samples, 0.04%)</title><rect x="682.9" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.9" y="670.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1162/1573844353.apply (11 samples, 0.04%)</title><rect x="682.9" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.9" y="654.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (11 samples, 0.04%)</title><rect x="682.9" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.9" y="638.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (11 samples, 0.04%)</title><rect x="682.9" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.9" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.04%)</title><rect x="682.9" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.9" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.04%)</title><rect x="682.9" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.04%)</title><rect x="682.9" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.9" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.04%)</title><rect x="682.9" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (11 samples, 0.04%)</title><rect x="682.9" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.9" y="542.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (11 samples, 0.04%)</title><rect x="682.9" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="526.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (11 samples, 0.04%)</title><rect x="682.9" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="510.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (11 samples, 0.04%)</title><rect x="682.9" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="494.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (11 samples, 0.04%)</title><rect x="682.9" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.9" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (9 samples, 0.04%)</title><rect x="682.9" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.9" y="462.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (6 samples, 0.02%)</title><rect x="682.9" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.9" y="446.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (6 samples, 0.02%)</title><rect x="682.9" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.9" y="430.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (6 samples, 0.02%)</title><rect x="682.9" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.9" y="414.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (6 samples, 0.02%)</title><rect x="682.9" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.9" y="398.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (943 samples, 3.74%)</title><rect x="683.4" y="755.0" width="44.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="766.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1066/248555202.apply (930 samples, 3.69%)</title><rect x="683.5" y="739.0" width="43.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.5" y="750.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (929 samples, 3.68%)</title><rect x="683.6" y="723.0" width="43.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.6" y="734.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1068/1534058762.apply (17 samples, 0.07%)</title><rect x="683.6" y="707.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.6" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (17 samples, 0.07%)</title><rect x="683.6" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (17 samples, 0.07%)</title><rect x="683.6" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (16 samples, 0.06%)</title><rect x="683.6" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="670.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (10 samples, 0.04%)</title><rect x="683.9" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.9" y="654.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (7 samples, 0.03%)</title><rect x="684.0" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.0" y="638.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (7 samples, 0.03%)</title><rect x="684.0" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (911 samples, 3.61%)</title><rect x="684.4" y="707.0" width="42.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.4" y="718.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1070/1838597434.apply (894 samples, 3.54%)</title><rect x="684.8" y="691.0" width="41.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.8" y="702.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (887 samples, 3.51%)</title><rect x="685.2" y="675.0" width="41.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.2" y="686.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (887 samples, 3.51%)</title><rect x="685.2" y="659.0" width="41.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.2" y="670.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (183 samples, 0.73%)</title><rect x="685.3" y="643.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.3" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (59 samples, 0.23%)</title><rect x="685.3" y="627.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.3" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (58 samples, 0.23%)</title><rect x="685.3" y="611.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.3" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (57 samples, 0.23%)</title><rect x="685.4" y="595.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (14 samples, 0.06%)</title><rect x="685.4" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (43 samples, 0.17%)</title><rect x="686.0" y="579.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (43 samples, 0.17%)</title><rect x="686.0" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (42 samples, 0.17%)</title><rect x="686.0" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.0" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (12 samples, 0.05%)</title><rect x="686.2" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.2" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (7 samples, 0.03%)</title><rect x="686.2" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.2" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.addMatCompose (6 samples, 0.02%)</title><rect x="686.2" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.2" y="510.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (25 samples, 0.10%)</title><rect x="686.8" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.8" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (22 samples, 0.09%)</title><rect x="686.8" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.8" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (14 samples, 0.06%)</title><rect x="686.9" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.9" y="510.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (8 samples, 0.03%)</title><rect x="687.0" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (6 samples, 0.02%)</title><rect x="687.0" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (6 samples, 0.02%)</title><rect x="687.6" y="499.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.6" y="510.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (6 samples, 0.02%)</title><rect x="687.6" y="483.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (6 samples, 0.02%)</title><rect x="687.6" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (6 samples, 0.02%)</title><rect x="687.6" y="451.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.tail (6 samples, 0.02%)</title><rect x="687.6" y="435.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.6" y="446.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (19 samples, 0.08%)</title><rect x="688.0" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.0" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (19 samples, 0.08%)</title><rect x="688.0" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.0" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (19 samples, 0.08%)</title><rect x="688.0" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (8 samples, 0.03%)</title><rect x="688.0" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (91 samples, 0.36%)</title><rect x="688.9" y="627.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.9" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (89 samples, 0.35%)</title><rect x="688.9" y="611.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.9" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (8 samples, 0.03%)</title><rect x="689.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (78 samples, 0.31%)</title><rect x="689.4" y="595.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (78 samples, 0.31%)</title><rect x="689.4" y="579.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (16 samples, 0.06%)</title><rect x="689.5" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (7 samples, 0.03%)</title><rect x="689.8" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.8" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (7 samples, 0.03%)</title><rect x="689.8" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.8" y="542.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (54 samples, 0.21%)</title><rect x="690.4" y="563.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (54 samples, 0.21%)</title><rect x="690.4" y="547.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.4" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (54 samples, 0.21%)</title><rect x="690.4" y="531.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (54 samples, 0.21%)</title><rect x="690.4" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.4" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (47 samples, 0.19%)</title><rect x="690.7" y="499.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.7" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (46 samples, 0.18%)</title><rect x="690.7" y="483.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (46 samples, 0.18%)</title><rect x="690.7" y="467.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.7" y="478.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.03%)</title><rect x="690.7" y="451.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="693.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (27 samples, 0.11%)</title><rect x="691.6" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (22 samples, 0.09%)</title><rect x="691.9" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.9" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (22 samples, 0.09%)</title><rect x="691.9" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.9" y="430.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="691.9" y="403.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="694.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMapBuilder.addOne (9 samples, 0.04%)</title><rect x="692.2" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMapBuilder.ensureUnaliased (9 samples, 0.04%)</title><rect x="692.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.2" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMapBuilder.aliased_$eq (9 samples, 0.04%)</title><rect x="692.2" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.2" y="382.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (14 samples, 0.06%)</title><rect x="693.2" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.2" y="638.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (13 samples, 0.05%)</title><rect x="693.2" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.2" y="622.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (9 samples, 0.04%)</title><rect x="693.4" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (6 samples, 0.02%)</title><rect x="693.4" y="579.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (702 samples, 2.78%)</title><rect x="693.8" y="643.0" width="32.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.8" y="654.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (687 samples, 2.72%)</title><rect x="693.8" y="627.0" width="32.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.8" y="638.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (687 samples, 2.72%)</title><rect x="693.8" y="611.0" width="32.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.8" y="622.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (687 samples, 2.72%)</title><rect x="693.8" y="595.0" width="32.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.8" y="606.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (687 samples, 2.72%)</title><rect x="693.8" y="579.0" width="32.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.8" y="590.0">ak..</text>
</g>
<g>
<title>akka/stream/Attributes.and (54 samples, 0.21%)</title><rect x="694.3" y="563.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (35 samples, 0.14%)</title><rect x="695.1" y="547.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.1" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (22 samples, 0.09%)</title><rect x="695.4" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (15 samples, 0.06%)</title><rect x="695.5" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.5" y="526.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.prependToList (7 samples, 0.03%)</title><rect x="696.4" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.4" y="542.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (20 samples, 0.08%)</title><rect x="696.8" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (20 samples, 0.08%)</title><rect x="696.8" y="547.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.8" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (18 samples, 0.07%)</title><rect x="696.9" y="531.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.9" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (18 samples, 0.07%)</title><rect x="696.9" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.9" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.listEq$1 (17 samples, 0.07%)</title><rect x="697.0" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.0" y="510.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="697.3" y="483.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="700.3" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (51 samples, 0.20%)</title><rect x="697.8" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.8" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (37 samples, 0.15%)</title><rect x="698.0" y="547.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.0" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (15 samples, 0.06%)</title><rect x="698.0" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.0" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.&lt;init&gt; (9 samples, 0.04%)</title><rect x="698.2" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.2" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (7 samples, 0.03%)</title><rect x="698.3" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.3" y="510.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (21 samples, 0.08%)</title><rect x="698.7" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (8 samples, 0.03%)</title><rect x="698.8" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.8" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.&lt;init&gt; (7 samples, 0.03%)</title><rect x="698.9" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.9" y="510.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (6 samples, 0.02%)</title><rect x="699.4" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (448 samples, 1.78%)</title><rect x="700.1" y="563.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.1" y="574.0"></text>
</g>
<g>
<title>akka/actor/Props.withDispatcher (13 samples, 0.05%)</title><rect x="700.5" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.5" y="558.0"></text>
</g>
<g>
<title>akka/actor/Deploy.copy (6 samples, 0.02%)</title><rect x="700.7" y="531.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.7" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.&lt;init&gt; (6 samples, 0.02%)</title><rect x="700.7" y="515.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.7" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (324 samples, 1.28%)</title><rect x="701.1" y="547.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.1" y="558.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (324 samples, 1.28%)</title><rect x="701.1" y="531.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.1" y="542.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (324 samples, 1.28%)</title><rect x="701.1" y="515.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.1" y="526.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (324 samples, 1.28%)</title><rect x="701.1" y="499.0" width="15.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.1" y="510.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (319 samples, 1.26%)</title><rect x="701.4" y="483.0" width="14.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.4" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (24 samples, 0.10%)</title><rect x="701.4" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (24 samples, 0.10%)</title><rect x="701.4" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.4" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (24 samples, 0.10%)</title><rect x="701.4" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.4" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (14 samples, 0.06%)</title><rect x="701.5" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (14 samples, 0.06%)</title><rect x="701.5" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (14 samples, 0.06%)</title><rect x="701.5" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.06%)</title><rect x="701.5" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.06%)</title><rect x="701.5" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.05%)</title><rect x="701.5" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.05%)</title><rect x="701.5" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="701.6" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.04%)</title><rect x="701.6" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.03%)</title><rect x="701.7" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.7" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.03%)</title><rect x="701.7" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.7" y="270.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (7 samples, 0.03%)</title><rect x="702.2" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (6 samples, 0.02%)</title><rect x="702.2" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (6 samples, 0.02%)</title><rect x="702.2" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.2" y="398.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (64 samples, 0.25%)</title><rect x="702.5" y="467.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.5" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (63 samples, 0.25%)</title><rect x="702.6" y="451.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.6" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (63 samples, 0.25%)</title><rect x="702.6" y="435.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.6" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (62 samples, 0.25%)</title><rect x="702.6" y="419.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (18 samples, 0.07%)</title><rect x="702.6" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.6" y="414.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (18 samples, 0.07%)</title><rect x="702.6" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (18 samples, 0.07%)</title><rect x="702.6" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (17 samples, 0.07%)</title><rect x="702.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.7" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (17 samples, 0.07%)</title><rect x="702.7" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.7" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (17 samples, 0.07%)</title><rect x="702.7" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.7" y="334.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (6 samples, 0.02%)</title><rect x="703.2" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.2" y="318.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (6 samples, 0.02%)</title><rect x="703.2" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.2" y="302.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (6 samples, 0.02%)</title><rect x="703.2" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (44 samples, 0.17%)</title><rect x="703.5" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (42 samples, 0.17%)</title><rect x="703.5" y="387.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (42 samples, 0.17%)</title><rect x="703.5" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (38 samples, 0.15%)</title><rect x="703.6" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.6" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (29 samples, 0.11%)</title><rect x="703.6" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.6" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (28 samples, 0.11%)</title><rect x="703.6" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (24 samples, 0.10%)</title><rect x="703.8" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (22 samples, 0.09%)</title><rect x="703.9" y="291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.9" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (19 samples, 0.08%)</title><rect x="703.9" y="275.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (17 samples, 0.07%)</title><rect x="704.0" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.06%)</title><rect x="704.0" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.05%)</title><rect x="704.1" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.1" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.04%)</title><rect x="704.2" y="211.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.2" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.02%)</title><rect x="704.3" y="195.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (8 samples, 0.03%)</title><rect x="705.0" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.&lt;init&gt; (8 samples, 0.03%)</title><rect x="705.0" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.0" y="334.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.03%)</title><rect x="705.0" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.0" y="318.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="705.0" y="291.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="708.0" y="302.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.&lt;init&gt; (33 samples, 0.13%)</title><rect x="705.6" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (27 samples, 0.11%)</title><rect x="705.8" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (27 samples, 0.11%)</title><rect x="705.8" y="435.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (24 samples, 0.10%)</title><rect x="705.9" y="419.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.9" y="430.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.path (13 samples, 0.05%)</title><rect x="706.3" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.3" y="414.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (194 samples, 0.77%)</title><rect x="707.2" y="467.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.2" y="478.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (12 samples, 0.05%)</title><rect x="707.4" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="462.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (12 samples, 0.05%)</title><rect x="707.4" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (152 samples, 0.60%)</title><rect x="708.0" y="451.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.0" y="462.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (22 samples, 0.09%)</title><rect x="708.3" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.3" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (22 samples, 0.09%)</title><rect x="708.3" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (22 samples, 0.09%)</title><rect x="708.3" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (22 samples, 0.09%)</title><rect x="708.3" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.swapMailbox (22 samples, 0.09%)</title><rect x="708.3" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.3" y="382.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox$ (22 samples, 0.09%)</title><rect x="708.3" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.3" y="366.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.swapMailbox (22 samples, 0.09%)</title><rect x="708.3" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.3" y="350.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (22 samples, 0.09%)</title><rect x="708.3" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="334.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (22 samples, 0.09%)</title><rect x="708.3" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="318.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (22 samples, 0.09%)</title><rect x="708.3" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.3" y="302.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (88 samples, 0.35%)</title><rect x="709.4" y="435.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.4" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (86 samples, 0.34%)</title><rect x="709.4" y="419.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.4" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (86 samples, 0.34%)</title><rect x="709.4" y="403.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.4" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (86 samples, 0.34%)</title><rect x="709.4" y="387.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.4" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (86 samples, 0.34%)</title><rect x="709.4" y="371.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (86 samples, 0.34%)</title><rect x="709.4" y="355.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.4" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (84 samples, 0.33%)</title><rect x="709.5" y="339.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.5" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (82 samples, 0.32%)</title><rect x="709.5" y="323.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.5" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (82 samples, 0.32%)</title><rect x="709.5" y="307.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.5" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (82 samples, 0.32%)</title><rect x="709.5" y="291.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (76 samples, 0.30%)</title><rect x="709.5" y="275.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (76 samples, 0.30%)</title><rect x="709.5" y="259.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (76 samples, 0.30%)</title><rect x="709.5" y="243.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (76 samples, 0.30%)</title><rect x="709.5" y="227.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (75 samples, 0.30%)</title><rect x="709.6" y="211.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (75 samples, 0.30%)</title><rect x="709.6" y="195.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 0.30%)</title><rect x="709.6" y="179.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.6" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.04%)</title><rect x="709.6" y="163.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="712.6" y="174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (64 samples, 0.25%)</title><rect x="710.1" y="163.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="713.1" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.23%)</title><rect x="710.4" y="147.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="713.4" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.23%)</title><rect x="710.4" y="131.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.4" y="142.0"></text>
</g>
<g>
<title>sys_futex (55 samples, 0.22%)</title><rect x="710.5" y="115.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.5" y="126.0"></text>
</g>
<g>
<title>do_futex (55 samples, 0.22%)</title><rect x="710.5" y="99.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.5" y="110.0"></text>
</g>
<g>
<title>futex_wake (54 samples, 0.21%)</title><rect x="710.6" y="83.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.6" y="94.0"></text>
</g>
<g>
<title>wake_up_q (47 samples, 0.19%)</title><rect x="710.9" y="67.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.9" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (47 samples, 0.19%)</title><rect x="710.9" y="51.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (47 samples, 0.19%)</title><rect x="710.9" y="35.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.9" y="46.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (29 samples, 0.11%)</title><rect x="713.7" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.7" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (6 samples, 0.02%)</title><rect x="713.8" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.8" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (6 samples, 0.02%)</title><rect x="713.8" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.8" y="414.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.hasPath (6 samples, 0.02%)</title><rect x="714.1" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.1" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (8 samples, 0.03%)</title><rect x="715.1" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (8 samples, 0.03%)</title><rect x="715.1" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.03%)</title><rect x="715.1" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (7 samples, 0.03%)</title><rect x="715.5" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.5" y="462.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (7 samples, 0.03%)</title><rect x="715.5" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.5" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (7 samples, 0.03%)</title><rect x="715.5" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (7 samples, 0.03%)</title><rect x="715.5" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (7 samples, 0.03%)</title><rect x="715.5" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (7 samples, 0.03%)</title><rect x="715.5" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.5" y="382.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (91 samples, 0.36%)</title><rect x="716.5" y="547.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.5" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (65 samples, 0.26%)</title><rect x="716.5" y="531.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.5" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (65 samples, 0.26%)</title><rect x="716.5" y="515.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.5" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (65 samples, 0.26%)</title><rect x="716.5" y="499.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.5" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (64 samples, 0.25%)</title><rect x="716.6" y="483.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (64 samples, 0.25%)</title><rect x="716.6" y="467.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (64 samples, 0.25%)</title><rect x="716.6" y="451.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.6" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (64 samples, 0.25%)</title><rect x="716.6" y="435.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.6" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (16 samples, 0.06%)</title><rect x="716.7" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.7" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (15 samples, 0.06%)</title><rect x="716.7" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.7" y="414.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="716.7" y="387.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="719.7" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (45 samples, 0.18%)</title><rect x="717.4" y="419.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.4" y="430.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (45 samples, 0.18%)</title><rect x="717.4" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.4" y="414.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (26 samples, 0.10%)</title><rect x="719.5" y="531.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.5" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (26 samples, 0.10%)</title><rect x="719.5" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.5" y="526.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (19 samples, 0.08%)</title><rect x="719.9" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.9" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (18 samples, 0.07%)</title><rect x="719.9" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.9" y="494.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (18 samples, 0.07%)</title><rect x="719.9" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.9" y="478.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (18 samples, 0.07%)</title><rect x="719.9" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.9" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (16 samples, 0.06%)</title><rect x="720.0" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.0" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (16 samples, 0.06%)</title><rect x="720.0" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.03%)</title><rect x="720.4" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.4" y="414.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (16 samples, 0.06%)</title><rect x="721.1" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (14 samples, 0.06%)</title><rect x="721.2" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (13 samples, 0.05%)</title><rect x="721.2" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.02%)</title><rect x="721.5" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.5" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (9 samples, 0.04%)</title><rect x="721.9" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (9 samples, 0.04%)</title><rect x="721.9" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="721.9" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.9" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.03%)</title><rect x="721.9" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.9" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (19 samples, 0.08%)</title><rect x="722.3" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (7 samples, 0.03%)</title><rect x="722.6" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (6 samples, 0.02%)</title><rect x="722.6" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.6" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (6 samples, 0.02%)</title><rect x="722.6" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (28 samples, 0.11%)</title><rect x="723.4" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1072/111583347.apply (23 samples, 0.09%)</title><rect x="723.5" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.$anonfun$head$1 (19 samples, 0.08%)</title><rect x="723.6" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.6" y="542.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (18 samples, 0.07%)</title><rect x="723.7" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.7" y="526.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (9 samples, 0.04%)</title><rect x="723.9" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.04%)</title><rect x="724.9" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.04%)</title><rect x="724.9" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.9" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (15 samples, 0.06%)</title><rect x="725.9" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.9" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (10 samples, 0.04%)</title><rect x="726.0" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.0" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (10 samples, 0.04%)</title><rect x="726.0" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.0" y="606.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="726.7" y="691.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="729.7" y="702.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.04%)</title><rect x="727.0" y="739.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="730.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (31 samples, 0.12%)</title><rect x="727.6" y="883.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (31 samples, 0.12%)</title><rect x="727.6" y="867.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.6" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (29 samples, 0.11%)</title><rect x="727.7" y="851.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.7" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1177/1099955946.apply (29 samples, 0.11%)</title><rect x="727.7" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.7" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (29 samples, 0.11%)</title><rect x="727.7" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1176/2037983124.apply (29 samples, 0.11%)</title><rect x="727.7" y="803.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.7" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (29 samples, 0.11%)</title><rect x="727.7" y="787.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.7" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1148/1439664131.apply (25 samples, 0.10%)</title><rect x="727.9" y="771.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (25 samples, 0.10%)</title><rect x="727.9" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.9" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1173/1514950729.apply (24 samples, 0.10%)</title><rect x="727.9" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.9" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (24 samples, 0.10%)</title><rect x="727.9" y="723.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.9" y="734.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1185/885534408.apply (14 samples, 0.06%)</title><rect x="727.9" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.9" y="718.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (14 samples, 0.06%)</title><rect x="727.9" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.9" y="702.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (14 samples, 0.06%)</title><rect x="727.9" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.9" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (7 samples, 0.03%)</title><rect x="728.1" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.1" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (10 samples, 0.04%)</title><rect x="728.6" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (10 samples, 0.04%)</title><rect x="728.6" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (10 samples, 0.04%)</title><rect x="728.6" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1177/1099955946.apply (10 samples, 0.04%)</title><rect x="728.6" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (10 samples, 0.04%)</title><rect x="728.6" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1176/2037983124.apply (10 samples, 0.04%)</title><rect x="728.6" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (10 samples, 0.04%)</title><rect x="728.6" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (8 samples, 0.03%)</title><rect x="728.6" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (8 samples, 0.03%)</title><rect x="728.6" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.6" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1188/597470707.apply (8 samples, 0.03%)</title><rect x="728.6" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (8 samples, 0.03%)</title><rect x="728.6" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.6" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (6 samples, 0.02%)</title><rect x="728.7" y="531.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.7" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (6 samples, 0.02%)</title><rect x="728.7" y="515.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.7" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (6 samples, 0.02%)</title><rect x="728.7" y="499.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.7" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (6 samples, 0.02%)</title><rect x="728.7" y="483.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.7" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (6 samples, 0.02%)</title><rect x="728.7" y="467.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.7" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (6 samples, 0.02%)</title><rect x="728.7" y="451.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.7" y="462.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (6 samples, 0.02%)</title><rect x="728.7" y="435.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.7" y="446.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1159/1205471111.apply (99 samples, 0.39%)</title><rect x="729.1" y="947.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.1" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (98 samples, 0.39%)</title><rect x="729.2" y="931.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (98 samples, 0.39%)</title><rect x="729.2" y="915.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1168/596801985.apply (97 samples, 0.38%)</title><rect x="729.2" y="899.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.2" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (97 samples, 0.38%)</title><rect x="729.2" y="883.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.2" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (96 samples, 0.38%)</title><rect x="729.3" y="867.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1169/1609186518.apply (91 samples, 0.36%)</title><rect x="729.5" y="851.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.5" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (91 samples, 0.36%)</title><rect x="729.5" y="835.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.5" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (91 samples, 0.36%)</title><rect x="729.5" y="819.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (91 samples, 0.36%)</title><rect x="729.5" y="803.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.5" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (91 samples, 0.36%)</title><rect x="729.5" y="787.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.5" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Default.withSizeLimit (6 samples, 0.02%)</title><rect x="729.6" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.6" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (79 samples, 0.31%)</title><rect x="730.0" y="771.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.0" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (75 samples, 0.30%)</title><rect x="730.2" y="755.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.2" y="766.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GenericGraphWithChangedAttributes.traversalBuilder (6 samples, 0.02%)</title><rect x="730.3" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.3" y="750.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (60 samples, 0.24%)</title><rect x="730.7" y="739.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.7" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (56 samples, 0.22%)</title><rect x="730.7" y="723.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.7" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (46 samples, 0.18%)</title><rect x="730.8" y="707.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.8" y="718.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.hasNext (9 samples, 0.04%)</title><rect x="731.5" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.5" y="702.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="731.5" y="675.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="734.5" y="686.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (9 samples, 0.04%)</title><rect x="731.9" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.9" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.head (9 samples, 0.04%)</title><rect x="731.9" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.9" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (6 samples, 0.02%)</title><rect x="732.4" y="691.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.4" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.&lt;init&gt; (6 samples, 0.02%)</title><rect x="732.4" y="675.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.4" y="686.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.&lt;init&gt; (6 samples, 0.02%)</title><rect x="732.4" y="659.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.4" y="670.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="732.4" y="643.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="735.4" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (7 samples, 0.03%)</title><rect x="732.6" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.6" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.advanceToNextBlockIfNecessary (7 samples, 0.03%)</title><rect x="732.6" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.02%)</title><rect x="732.7" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="735.7" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (7 samples, 0.03%)</title><rect x="733.0" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.0" y="718.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (7 samples, 0.03%)</title><rect x="733.0" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.0" y="702.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (7 samples, 0.03%)</title><rect x="733.0" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1173/1514950729.apply (10 samples, 0.04%)</title><rect x="733.8" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (10 samples, 0.04%)</title><rect x="733.8" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.8" y="974.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1185/885534408.apply (10 samples, 0.04%)</title><rect x="733.8" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.8" y="958.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (10 samples, 0.04%)</title><rect x="733.8" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.8" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (8 samples, 0.03%)</title><rect x="733.9" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$973/545778472.apply (15 samples, 0.06%)</title><rect x="734.5" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (15 samples, 0.06%)</title><rect x="734.5" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$985/436180902.apply (15 samples, 0.06%)</title><rect x="734.5" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (15 samples, 0.06%)</title><rect x="734.5" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (15 samples, 0.06%)</title><rect x="734.5" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (15 samples, 0.06%)</title><rect x="734.5" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$971/1257150744.apply (10 samples, 0.04%)</title><rect x="734.6" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (10 samples, 0.04%)</title><rect x="734.6" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.6" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (8 samples, 0.03%)</title><rect x="734.6" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.6" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$1132/559169854.apply (8 samples, 0.03%)</title><rect x="734.6" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.6" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleException$1 (6 samples, 0.02%)</title><rect x="735.4" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1027/852261402.apply (23 samples, 0.09%)</title><rect x="735.8" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (23 samples, 0.09%)</title><rect x="735.8" y="1187.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1028/908673958.apply (23 samples, 0.09%)</title><rect x="735.8" y="1171.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (23 samples, 0.09%)</title><rect x="735.8" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (9 samples, 0.04%)</title><rect x="736.0" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1122/897606737.apply (9 samples, 0.04%)</title><rect x="736.0" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (7 samples, 0.03%)</title><rect x="736.0" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (7 samples, 0.03%)</title><rect x="736.0" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (7 samples, 0.03%)</title><rect x="737.5" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (6 samples, 0.02%)</title><rect x="737.5" y="1267.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/StatefulMapConcat$$anon$47.onPush (6 samples, 0.02%)</title><rect x="737.8" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.8" y="1294.0"></text>
</g>
<g>
<title>itable stub (77 samples, 0.31%)</title><rect x="739.6" y="1299.0" width="3.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="742.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (14 samples, 0.06%)</title><rect x="743.3" y="1315.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (14 samples, 0.06%)</title><rect x="743.3" y="1299.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (8 samples, 0.03%)</title><rect x="743.4" y="1283.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (8 samples, 0.03%)</title><rect x="743.4" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (8 samples, 0.03%)</title><rect x="743.4" y="1251.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (543 samples, 2.15%)</title><rect x="744.2" y="1379.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.2" y="1390.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (455 samples, 1.80%)</title><rect x="744.6" y="1363.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.6" y="1374.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (455 samples, 1.80%)</title><rect x="744.6" y="1347.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.6" y="1358.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (455 samples, 1.80%)</title><rect x="744.6" y="1331.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.6" y="1342.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (164 samples, 0.65%)</title><rect x="744.6" y="1315.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$523/1620662081.apply (157 samples, 0.62%)</title><rect x="744.8" y="1299.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (157 samples, 0.62%)</title><rect x="744.8" y="1283.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (157 samples, 0.62%)</title><rect x="744.8" y="1267.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (117 samples, 0.46%)</title><rect x="744.9" y="1251.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (109 samples, 0.43%)</title><rect x="744.9" y="1235.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$609/1478773700.apply (7 samples, 0.03%)</title><rect x="744.9" y="1219.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1$adapted (7 samples, 0.03%)</title><rect x="744.9" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1 (7 samples, 0.03%)</title><rect x="744.9" y="1187.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (7 samples, 0.03%)</title><rect x="744.9" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.9" y="1182.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (6 samples, 0.02%)</title><rect x="745.0" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.0" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (6 samples, 0.02%)</title><rect x="745.0" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$610/861372809.apply (102 samples, 0.40%)</title><rect x="745.3" y="1219.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (102 samples, 0.40%)</title><rect x="745.3" y="1203.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (102 samples, 0.40%)</title><rect x="745.3" y="1187.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (102 samples, 0.40%)</title><rect x="745.3" y="1171.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (102 samples, 0.40%)</title><rect x="745.3" y="1155.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (102 samples, 0.40%)</title><rect x="745.3" y="1139.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (102 samples, 0.40%)</title><rect x="745.3" y="1123.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$506/953475978.apply (18 samples, 0.07%)</title><rect x="745.4" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (18 samples, 0.07%)</title><rect x="745.4" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$517/1053997859.apply (12 samples, 0.05%)</title><rect x="745.5" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (12 samples, 0.05%)</title><rect x="745.5" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (12 samples, 0.05%)</title><rect x="745.5" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (11 samples, 0.04%)</title><rect x="745.6" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (8 samples, 0.03%)</title><rect x="745.7" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.header (6 samples, 0.02%)</title><rect x="745.7" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header$ (6 samples, 0.02%)</title><rect x="745.7" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.7" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$514/2068560118.apply (7 samples, 0.03%)</title><rect x="746.2" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseReceived$1 (7 samples, 0.03%)</title><rect x="746.2" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponse.onResponseReceived (6 samples, 0.02%)</title><rect x="746.2" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (15 samples, 0.06%)</title><rect x="746.5" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.5" y="1118.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (6 samples, 0.02%)</title><rect x="746.6" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.log (8 samples, 0.03%)</title><rect x="746.9" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log$ (8 samples, 0.03%)</title><rect x="746.9" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/StageLoggingWithOverride.log (8 samples, 0.03%)</title><rect x="746.9" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (27 samples, 0.11%)</title><rect x="748.4" y="1107.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.08%)</title><rect x="748.6" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.02%)</title><rect x="749.7" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (36 samples, 0.14%)</title><rect x="750.4" y="1251.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (36 samples, 0.14%)</title><rect x="750.4" y="1235.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$680/398507807.apply (36 samples, 0.14%)</title><rect x="750.4" y="1219.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (36 samples, 0.14%)</title><rect x="750.4" y="1203.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (36 samples, 0.14%)</title><rect x="750.4" y="1187.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (36 samples, 0.14%)</title><rect x="750.4" y="1171.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (36 samples, 0.14%)</title><rect x="750.4" y="1155.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (36 samples, 0.14%)</title><rect x="750.4" y="1139.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (36 samples, 0.14%)</title><rect x="750.4" y="1123.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (18 samples, 0.07%)</title><rect x="750.4" y="1107.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (18 samples, 0.07%)</title><rect x="750.4" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.4" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (16 samples, 0.06%)</title><rect x="750.5" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$682/1768815525.apply (16 samples, 0.06%)</title><rect x="750.5" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (16 samples, 0.06%)</title><rect x="750.5" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (15 samples, 0.06%)</title><rect x="750.5" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (15 samples, 0.06%)</title><rect x="750.5" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (15 samples, 0.06%)</title><rect x="750.5" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 0.06%)</title><rect x="750.6" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="750.6" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.6" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.06%)</title><rect x="750.6" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.6" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (14 samples, 0.06%)</title><rect x="750.6" y="931.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="753.6" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (14 samples, 0.06%)</title><rect x="750.6" y="915.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="753.6" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (12 samples, 0.05%)</title><rect x="750.7" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="753.7" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (11 samples, 0.04%)</title><rect x="750.7" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="753.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="751.7" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (9 samples, 0.04%)</title><rect x="752.3" y="1315.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (8 samples, 0.03%)</title><rect x="752.3" y="1299.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (282 samples, 1.12%)</title><rect x="752.7" y="1315.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (282 samples, 1.12%)</title><rect x="752.7" y="1299.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (15 samples, 0.06%)</title><rect x="752.9" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.9" y="1294.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.04%)</title><rect x="753.2" y="1267.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (51 samples, 0.20%)</title><rect x="753.6" y="1283.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (43 samples, 0.17%)</title><rect x="754.0" y="1267.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (29 samples, 0.11%)</title><rect x="754.0" y="1251.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.afterRequestFinished (6 samples, 0.02%)</title><rect x="754.1" y="1235.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (6 samples, 0.02%)</title><rect x="754.1" y="1219.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (6 samples, 0.02%)</title><rect x="754.1" y="1203.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.1" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (18 samples, 0.07%)</title><rect x="754.4" y="1235.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (18 samples, 0.07%)</title><rect x="754.4" y="1219.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (18 samples, 0.07%)</title><rect x="754.4" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (18 samples, 0.07%)</title><rect x="754.4" y="1187.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (17 samples, 0.07%)</title><rect x="754.5" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.5" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (12 samples, 0.05%)</title><rect x="754.6" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.6" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (12 samples, 0.05%)</title><rect x="754.6" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (12 samples, 0.05%)</title><rect x="754.6" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (12 samples, 0.05%)</title><rect x="754.6" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (12 samples, 0.05%)</title><rect x="754.6" y="1091.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (11 samples, 0.04%)</title><rect x="754.6" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (11 samples, 0.04%)</title><rect x="754.6" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.6" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (11 samples, 0.04%)</title><rect x="754.6" y="1043.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (11 samples, 0.04%)</title><rect x="754.6" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (11 samples, 0.04%)</title><rect x="754.6" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.04%)</title><rect x="754.6" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.04%)</title><rect x="754.6" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.04%)</title><rect x="754.6" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.04%)</title><rect x="754.6" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.02%)</title><rect x="754.8" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.02%)</title><rect x="754.8" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.02%)</title><rect x="754.8" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.8" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (9 samples, 0.04%)</title><rect x="755.5" y="1251.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (9 samples, 0.04%)</title><rect x="756.0" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (186 samples, 0.74%)</title><rect x="756.4" y="1283.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (14 samples, 0.06%)</title><rect x="756.5" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (8 samples, 0.03%)</title><rect x="756.6" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (8 samples, 0.03%)</title><rect x="756.6" y="1235.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (8 samples, 0.03%)</title><rect x="756.6" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (7 samples, 0.03%)</title><rect x="756.7" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$2.onPush (12 samples, 0.05%)</title><rect x="757.3" y="1267.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.akka$stream$impl$fusing$FlattenMerge$$anon$$addSource (7 samples, 0.03%)</title><rect x="757.3" y="1251.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (115 samples, 0.46%)</title><rect x="757.9" y="1267.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$417/1636264270.apply (98 samples, 0.39%)</title><rect x="758.1" y="1251.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (97 samples, 0.38%)</title><rect x="758.1" y="1235.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (97 samples, 0.38%)</title><rect x="758.1" y="1219.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (14 samples, 0.06%)</title><rect x="758.2" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (14 samples, 0.06%)</title><rect x="758.2" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (13 samples, 0.05%)</title><rect x="758.2" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (10 samples, 0.04%)</title><rect x="758.3" y="1155.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (9 samples, 0.04%)</title><rect x="758.3" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (8 samples, 0.03%)</title><rect x="758.3" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (82 samples, 0.32%)</title><rect x="758.8" y="1203.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (11 samples, 0.04%)</title><rect x="758.9" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (36 samples, 0.14%)</title><rect x="759.4" y="1187.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (20 samples, 0.08%)</title><rect x="759.4" y="1171.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (19 samples, 0.08%)</title><rect x="759.5" y="1155.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (19 samples, 0.08%)</title><rect x="759.5" y="1139.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (19 samples, 0.08%)</title><rect x="759.5" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (19 samples, 0.08%)</title><rect x="759.5" y="1107.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (19 samples, 0.08%)</title><rect x="759.5" y="1091.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.render (19 samples, 0.08%)</title><rect x="759.5" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (19 samples, 0.08%)</title><rect x="759.5" y="1059.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (19 samples, 0.08%)</title><rect x="759.5" y="1043.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (6 samples, 0.02%)</title><rect x="759.5" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (6 samples, 0.02%)</title><rect x="759.5" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (6 samples, 0.02%)</title><rect x="759.5" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.renderValue (13 samples, 0.05%)</title><rect x="759.8" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.8" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (13 samples, 0.05%)</title><rect x="759.8" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (12 samples, 0.05%)</title><rect x="759.8" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (12 samples, 0.05%)</title><rect x="759.8" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (7 samples, 0.03%)</title><rect x="760.0" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (6 samples, 0.02%)</title><rect x="760.1" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.1" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.encode (6 samples, 0.02%)</title><rect x="760.1" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.1" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.rec$3 (6 samples, 0.02%)</title><rect x="760.1" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.1" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (14 samples, 0.06%)</title><rect x="760.4" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (14 samples, 0.06%)</title><rect x="760.4" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (14 samples, 0.06%)</title><rect x="760.4" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (14 samples, 0.06%)</title><rect x="760.4" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (14 samples, 0.06%)</title><rect x="760.4" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (13 samples, 0.05%)</title><rect x="760.4" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (13 samples, 0.05%)</title><rect x="760.4" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (13 samples, 0.05%)</title><rect x="760.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (10 samples, 0.04%)</title><rect x="760.5" y="1043.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (10 samples, 0.04%)</title><rect x="760.5" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (10 samples, 0.04%)</title><rect x="760.5" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (10 samples, 0.04%)</title><rect x="760.5" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (10 samples, 0.04%)</title><rect x="760.5" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (8 samples, 0.03%)</title><rect x="760.6" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (7 samples, 0.03%)</title><rect x="760.6" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (15 samples, 0.06%)</title><rect x="761.1" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.renderUriWithoutFragment (7 samples, 0.03%)</title><rect x="761.3" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (16 samples, 0.06%)</title><rect x="761.8" y="1187.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (16 samples, 0.06%)</title><rect x="761.8" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (15 samples, 0.06%)</title><rect x="761.8" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (15 samples, 0.06%)</title><rect x="761.8" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (15 samples, 0.06%)</title><rect x="761.8" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (13 samples, 0.05%)</title><rect x="761.9" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (8 samples, 0.03%)</title><rect x="762.1" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (8 samples, 0.03%)</title><rect x="762.1" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (7 samples, 0.03%)</title><rect x="762.2" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.2" y="1070.0"></text>
</g>
<g>
<title>akka/util/ByteStringBuilder.putByteArrayUnsafe (7 samples, 0.03%)</title><rect x="762.2" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.push (8 samples, 0.03%)</title><rect x="762.9" y="1251.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (33 samples, 0.13%)</title><rect x="763.5" y="1267.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (27 samples, 0.11%)</title><rect x="763.5" y="1251.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (27 samples, 0.11%)</title><rect x="763.5" y="1235.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (27 samples, 0.11%)</title><rect x="763.5" y="1219.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (27 samples, 0.11%)</title><rect x="763.5" y="1203.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (27 samples, 0.11%)</title><rect x="763.5" y="1187.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (27 samples, 0.11%)</title><rect x="763.5" y="1171.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (27 samples, 0.11%)</title><rect x="763.5" y="1155.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (27 samples, 0.11%)</title><rect x="763.5" y="1139.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (24 samples, 0.10%)</title><rect x="763.5" y="1123.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (24 samples, 0.10%)</title><rect x="763.5" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (24 samples, 0.10%)</title><rect x="763.5" y="1091.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (24 samples, 0.10%)</title><rect x="763.5" y="1075.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (24 samples, 0.10%)</title><rect x="763.5" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (24 samples, 0.10%)</title><rect x="763.5" y="1043.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (24 samples, 0.10%)</title><rect x="763.5" y="1027.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (24 samples, 0.10%)</title><rect x="763.5" y="1011.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (21 samples, 0.08%)</title><rect x="763.6" y="995.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.08%)</title><rect x="763.6" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.08%)</title><rect x="763.6" y="963.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.6" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.08%)</title><rect x="763.6" y="947.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="766.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.08%)</title><rect x="763.7" y="931.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.7" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.08%)</title><rect x="763.7" y="915.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.7" y="926.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.06%)</title><rect x="763.9" y="899.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.9" y="910.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.06%)</title><rect x="763.9" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="766.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.05%)</title><rect x="764.0" y="867.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="767.0" y="878.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.05%)</title><rect x="764.0" y="851.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.0" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.05%)</title><rect x="764.0" y="835.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.05%)</title><rect x="764.0" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.0" y="830.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.06%)</title><rect x="765.2" y="1283.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="768.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (72 samples, 0.29%)</title><rect x="766.0" y="1363.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.0" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (71 samples, 0.28%)</title><rect x="766.0" y="1347.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.0" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (69 samples, 0.27%)</title><rect x="766.0" y="1331.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.0" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (44 samples, 0.17%)</title><rect x="766.0" y="1315.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (7 samples, 0.03%)</title><rect x="766.2" y="1299.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (7 samples, 0.03%)</title><rect x="766.2" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (26 samples, 0.10%)</title><rect x="766.8" y="1299.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (16 samples, 0.06%)</title><rect x="766.9" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (16 samples, 0.06%)</title><rect x="766.9" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (14 samples, 0.06%)</title><rect x="767.0" y="1251.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (13 samples, 0.05%)</title><rect x="767.0" y="1235.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (13 samples, 0.05%)</title><rect x="767.0" y="1219.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (13 samples, 0.05%)</title><rect x="767.0" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (13 samples, 0.05%)</title><rect x="767.0" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (12 samples, 0.05%)</title><rect x="767.1" y="1171.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.05%)</title><rect x="767.1" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.05%)</title><rect x="767.1" y="1139.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.05%)</title><rect x="767.1" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.05%)</title><rect x="767.1" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.05%)</title><rect x="767.1" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.05%)</title><rect x="767.1" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (12 samples, 0.05%)</title><rect x="767.1" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (11 samples, 0.04%)</title><rect x="767.1" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.04%)</title><rect x="767.1" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.04%)</title><rect x="767.1" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.1" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.04%)</title><rect x="767.1" y="995.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="770.1" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="767.1" y="979.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.1" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.04%)</title><rect x="767.1" y="963.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.1" y="974.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.03%)</title><rect x="767.2" y="947.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="770.2" y="958.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="767.2" y="931.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.2" y="942.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.03%)</title><rect x="767.2" y="915.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.2" y="926.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.02%)</title><rect x="767.3" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.3" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.02%)</title><rect x="767.3" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="770.3" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="767.3" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="770.3" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (9 samples, 0.04%)</title><rect x="767.6" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (9 samples, 0.04%)</title><rect x="767.6" y="1267.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (9 samples, 0.04%)</title><rect x="767.6" y="1251.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (8 samples, 0.03%)</title><rect x="767.6" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (8 samples, 0.03%)</title><rect x="767.6" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (8 samples, 0.03%)</title><rect x="767.6" y="1203.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (20 samples, 0.08%)</title><rect x="768.0" y="1315.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (20 samples, 0.08%)</title><rect x="768.0" y="1299.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (13 samples, 0.05%)</title><rect x="768.4" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (13 samples, 0.05%)</title><rect x="768.4" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.4" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (12 samples, 0.05%)</title><rect x="768.4" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.4" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (11 samples, 0.04%)</title><rect x="768.4" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.4" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (10 samples, 0.04%)</title><rect x="768.5" y="1219.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.5" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (10 samples, 0.04%)</title><rect x="768.5" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (10 samples, 0.04%)</title><rect x="768.5" y="1187.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (9 samples, 0.04%)</title><rect x="768.5" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (9 samples, 0.04%)</title><rect x="768.5" y="1155.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (6 samples, 0.02%)</title><rect x="768.6" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (6 samples, 0.02%)</title><rect x="768.6" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.6" y="1134.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (11 samples, 0.04%)</title><rect x="769.9" y="1443.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (10 samples, 0.04%)</title><rect x="770.0" y="1427.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (10 samples, 0.04%)</title><rect x="770.0" y="1411.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.0" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (8 samples, 0.03%)</title><rect x="770.0" y="1395.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (8 samples, 0.03%)</title><rect x="770.0" y="1379.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (8 samples, 0.03%)</title><rect x="770.0" y="1363.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.0" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (8 samples, 0.03%)</title><rect x="770.0" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.0" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope.message (9 samples, 0.04%)</title><rect x="770.4" y="1459.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (48 samples, 0.19%)</title><rect x="770.9" y="1475.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (47 samples, 0.19%)</title><rect x="771.0" y="1459.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.0" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (47 samples, 0.19%)</title><rect x="771.0" y="1443.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.0" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (47 samples, 0.19%)</title><rect x="771.0" y="1427.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.0" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (47 samples, 0.19%)</title><rect x="771.0" y="1411.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casItem (42 samples, 0.17%)</title><rect x="771.0" y="1395.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.0" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (42 samples, 0.17%)</title><rect x="771.0" y="1379.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.0" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (42 samples, 0.17%)</title><rect x="771.0" y="1363.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.0" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (114 samples, 0.45%)</title><rect x="773.2" y="1475.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.2" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (108 samples, 0.43%)</title><rect x="773.2" y="1459.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (108 samples, 0.43%)</title><rect x="773.2" y="1443.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (7 samples, 0.03%)</title><rect x="773.3" y="1427.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (7 samples, 0.03%)</title><rect x="773.3" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (7 samples, 0.03%)</title><rect x="773.3" y="1395.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (100 samples, 0.40%)</title><rect x="773.6" y="1427.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (100 samples, 0.40%)</title><rect x="773.6" y="1411.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (100 samples, 0.40%)</title><rect x="773.6" y="1395.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (99 samples, 0.39%)</title><rect x="773.6" y="1379.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (9 samples, 0.04%)</title><rect x="774.0" y="1363.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (8 samples, 0.03%)</title><rect x="774.0" y="1347.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.0" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (8 samples, 0.03%)</title><rect x="774.0" y="1331.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (19 samples, 0.08%)</title><rect x="774.4" y="1363.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (19 samples, 0.08%)</title><rect x="774.4" y="1347.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (19 samples, 0.08%)</title><rect x="774.4" y="1331.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (13 samples, 0.05%)</title><rect x="774.5" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.hasNonLocalAddress$1 (13 samples, 0.05%)</title><rect x="774.5" y="1299.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (8 samples, 0.03%)</title><rect x="774.5" y="1283.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (8 samples, 0.03%)</title><rect x="774.5" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (8 samples, 0.03%)</title><rect x="774.5" y="1251.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (13 samples, 0.05%)</title><rect x="775.3" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (13 samples, 0.05%)</title><rect x="775.3" y="1347.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (13 samples, 0.05%)</title><rect x="775.3" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (13 samples, 0.05%)</title><rect x="775.3" y="1315.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (13 samples, 0.05%)</title><rect x="775.3" y="1299.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.04%)</title><rect x="775.5" y="1283.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.5" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.04%)</title><rect x="775.5" y="1267.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.5" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.04%)</title><rect x="775.5" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.04%)</title><rect x="775.5" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.04%)</title><rect x="775.5" y="1219.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.04%)</title><rect x="775.5" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.04%)</title><rect x="775.5" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.04%)</title><rect x="775.5" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.04%)</title><rect x="775.5" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.04%)</title><rect x="775.5" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.04%)</title><rect x="775.5" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.04%)</title><rect x="775.5" y="1107.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="778.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="775.5" y="1091.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.5" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="775.5" y="1075.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.5" y="1086.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.02%)</title><rect x="775.7" y="1059.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="778.7" y="1070.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.02%)</title><rect x="775.7" y="1043.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="778.7" y="1054.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.02%)</title><rect x="775.7" y="1027.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="778.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (8 samples, 0.03%)</title><rect x="775.9" y="1363.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (8 samples, 0.03%)</title><rect x="775.9" y="1347.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (8 samples, 0.03%)</title><rect x="775.9" y="1331.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (8 samples, 0.03%)</title><rect x="775.9" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (8 samples, 0.03%)</title><rect x="775.9" y="1299.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (8 samples, 0.03%)</title><rect x="775.9" y="1283.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.9" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (8 samples, 0.03%)</title><rect x="775.9" y="1267.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (6 samples, 0.02%)</title><rect x="776.0" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.0" y="1262.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemoteDeadLetterActorRef.$bang (6 samples, 0.02%)</title><rect x="776.0" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (6 samples, 0.02%)</title><rect x="776.0" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (6 samples, 0.02%)</title><rect x="776.0" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.specialHandle (6 samples, 0.02%)</title><rect x="776.0" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.0" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (35 samples, 0.14%)</title><rect x="776.3" y="1363.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (33 samples, 0.13%)</title><rect x="776.4" y="1347.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (33 samples, 0.13%)</title><rect x="776.4" y="1331.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (33 samples, 0.13%)</title><rect x="776.4" y="1315.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.4" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (18 samples, 0.07%)</title><rect x="776.4" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.4" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (17 samples, 0.07%)</title><rect x="776.5" y="1283.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.5" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$667/1759779149.apply (17 samples, 0.07%)</title><rect x="776.5" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.5" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (17 samples, 0.07%)</title><rect x="776.5" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.5" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (17 samples, 0.07%)</title><rect x="776.5" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (16 samples, 0.06%)</title><rect x="776.5" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.5" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1352/960186390.apply (16 samples, 0.06%)</title><rect x="776.5" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.5" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (16 samples, 0.06%)</title><rect x="776.5" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (16 samples, 0.06%)</title><rect x="776.5" y="1171.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (16 samples, 0.06%)</title><rect x="776.5" y="1155.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/704626972.apply (16 samples, 0.06%)</title><rect x="776.5" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (16 samples, 0.06%)</title><rect x="776.5" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (16 samples, 0.06%)</title><rect x="776.5" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (15 samples, 0.06%)</title><rect x="776.5" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (15 samples, 0.06%)</title><rect x="776.5" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (11 samples, 0.04%)</title><rect x="776.7" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$487/785562358.apply (11 samples, 0.04%)</title><rect x="776.7" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.7" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (11 samples, 0.04%)</title><rect x="776.7" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.7" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (11 samples, 0.04%)</title><rect x="776.7" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.7" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (10 samples, 0.04%)</title><rect x="776.7" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.7" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.04%)</title><rect x="776.7" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.7" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (10 samples, 0.04%)</title><rect x="776.7" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.7" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (10 samples, 0.04%)</title><rect x="776.7" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.7" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.04%)</title><rect x="776.7" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.7" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.04%)</title><rect x="776.7" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.7" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.04%)</title><rect x="776.7" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.7" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.04%)</title><rect x="776.7" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.7" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.02%)</title><rect x="776.8" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.8" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="776.8" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.8" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.02%)</title><rect x="776.8" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.8" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.02%)</title><rect x="776.8" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.8" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.02%)</title><rect x="776.8" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.02%)</title><rect x="776.8" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.02%)</title><rect x="776.8" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.02%)</title><rect x="776.8" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.02%)</title><rect x="776.8" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.02%)</title><rect x="776.8" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.02%)</title><rect x="776.8" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.8" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.$plus$plus (6 samples, 0.02%)</title><rect x="777.3" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus$ (6 samples, 0.02%)</title><rect x="777.3" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus (6 samples, 0.02%)</title><rect x="777.3" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (6 samples, 0.02%)</title><rect x="777.9" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (6 samples, 0.02%)</title><rect x="778.5" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (11 samples, 0.04%)</title><rect x="778.8" y="1475.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox$default$1 (8 samples, 0.03%)</title><rect x="779.3" y="1491.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.3" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.setAsIdle (12 samples, 0.05%)</title><rect x="779.7" y="1491.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.7" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.updateStatus (11 samples, 0.04%)</title><rect x="779.7" y="1475.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.7" y="1486.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapInt (11 samples, 0.04%)</title><rect x="779.7" y="1459.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.7" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.setDone (49 samples, 0.19%)</title><rect x="780.4" y="1523.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (49 samples, 0.19%)</title><rect x="780.4" y="1507.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.getAndBitwiseOr (49 samples, 0.19%)</title><rect x="780.4" y="1491.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseOrInt (49 samples, 0.19%)</title><rect x="780.4" y="1475.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (13 samples, 0.05%)</title><rect x="780.8" y="1459.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.8" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (14 samples, 0.06%)</title><rect x="781.5" y="1459.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.5" y="1470.0"></text>
</g>
<g>
<title>vtable stub (13 samples, 0.05%)</title><rect x="782.1" y="1459.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="785.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (58 samples, 0.23%)</title><rect x="782.9" y="1555.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 0.23%)</title><rect x="782.9" y="1539.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.9" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (57 samples, 0.23%)</title><rect x="782.9" y="1523.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.9" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (50 samples, 0.20%)</title><rect x="783.2" y="1507.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="786.2" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.16%)</title><rect x="783.7" y="1491.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.7" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.16%)</title><rect x="783.7" y="1475.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.7" y="1486.0"></text>
</g>
<g>
<title>sys_futex (36 samples, 0.14%)</title><rect x="783.8" y="1459.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.8" y="1470.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.14%)</title><rect x="783.8" y="1443.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="786.8" y="1454.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.13%)</title><rect x="783.9" y="1427.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="786.9" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.12%)</title><rect x="784.1" y="1411.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="787.1" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.12%)</title><rect x="784.1" y="1395.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="787.1" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.12%)</title><rect x="784.1" y="1379.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="787.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,125 samples, 4.46%)</title><rect x="785.6" y="1571.0" width="52.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.6" y="1582.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (6 samples, 0.02%)</title><rect x="785.7" y="1555.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,118 samples, 4.43%)</title><rect x="785.9" y="1555.0" width="52.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.9" y="1566.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (302 samples, 1.20%)</title><rect x="786.5" y="1539.0" width="14.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="789.5" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (13 samples, 0.05%)</title><rect x="787.7" y="1523.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="790.7" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (74 samples, 0.29%)</title><rect x="788.5" y="1523.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="791.5" y="1534.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (16 samples, 0.06%)</title><rect x="790.8" y="1507.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="793.8" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.03%)</title><rect x="791.6" y="1507.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="794.6" y="1518.0"></text>
</g>
<g>
<title>__lll_unlock_wake (141 samples, 0.56%)</title><rect x="792.3" y="1523.0" width="6.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="795.3" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 0.29%)</title><rect x="795.5" y="1507.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.5" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.28%)</title><rect x="795.5" y="1491.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="798.5" y="1502.0"></text>
</g>
<g>
<title>sys_futex (31 samples, 0.12%)</title><rect x="797.4" y="1475.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.4" y="1486.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.11%)</title><rect x="797.4" y="1459.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.4" y="1470.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.10%)</title><rect x="797.4" y="1443.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="800.4" y="1454.0"></text>
</g>
<g>
<title>get_futex_key (11 samples, 0.04%)</title><rect x="798.1" y="1427.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="801.1" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.03%)</title><rect x="798.9" y="1523.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="801.9" y="1534.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (6 samples, 0.02%)</title><rect x="799.5" y="1523.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.5" y="1534.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.04%)</title><rect x="800.2" y="1523.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="803.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (802 samples, 3.18%)</title><rect x="800.6" y="1539.0" width="37.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="803.6" y="1550.0">[un..</text>
</g>
<g>
<title>__pthread_cond_wait (776 samples, 3.08%)</title><rect x="800.8" y="1523.0" width="36.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="803.8" y="1534.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (675 samples, 2.67%)</title><rect x="805.2" y="1507.0" width="31.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="808.2" y="1518.0">en..</text>
</g>
<g>
<title>do_syscall_64 (670 samples, 2.66%)</title><rect x="805.2" y="1491.0" width="31.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="808.2" y="1502.0">do..</text>
</g>
<g>
<title>sys_futex (645 samples, 2.56%)</title><rect x="806.4" y="1475.0" width="30.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="809.4" y="1486.0">sy..</text>
</g>
<g>
<title>do_futex (636 samples, 2.52%)</title><rect x="806.8" y="1459.0" width="29.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="809.8" y="1470.0">do..</text>
</g>
<g>
<title>futex_wait (618 samples, 2.45%)</title><rect x="807.5" y="1443.0" width="28.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.5" y="1454.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (548 samples, 2.17%)</title><rect x="808.6" y="1427.0" width="25.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="811.6" y="1438.0">f..</text>
</g>
<g>
<title>schedule (528 samples, 2.09%)</title><rect x="809.5" y="1411.0" width="24.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.5" y="1422.0">s..</text>
</g>
<g>
<title>__schedule (519 samples, 2.06%)</title><rect x="809.9" y="1395.0" width="24.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.9" y="1406.0">_..</text>
</g>
<g>
<title>finish_task_switch (498 samples, 1.97%)</title><rect x="810.9" y="1379.0" width="23.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.9" y="1390.0">f..</text>
</g>
<g>
<title>ret_from_intr (31 samples, 0.12%)</title><rect x="832.8" y="1363.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.8" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (31 samples, 0.12%)</title><rect x="832.8" y="1347.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.8" y="1358.0"></text>
</g>
<g>
<title>irq_exit (31 samples, 0.12%)</title><rect x="832.8" y="1331.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.8" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 0.12%)</title><rect x="832.8" y="1315.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="835.8" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (20 samples, 0.08%)</title><rect x="833.3" y="1299.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="836.3" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (19 samples, 0.08%)</title><rect x="833.3" y="1283.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="836.3" y="1294.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (9 samples, 0.04%)</title><rect x="833.6" y="1267.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.6" y="1278.0"></text>
</g>
<g>
<title>futex_wait_setup (42 samples, 0.17%)</title><rect x="834.2" y="1427.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="837.2" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (11 samples, 0.04%)</title><rect x="835.6" y="1411.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.6" y="1422.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.03%)</title><rect x="837.1" y="1523.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="840.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (638 samples, 2.53%)</title><rect x="838.2" y="1571.0" width="29.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.2" y="1582.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (638 samples, 2.53%)</title><rect x="838.2" y="1555.0" width="29.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.2" y="1566.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (165 samples, 0.65%)</title><rect x="838.9" y="1539.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="841.9" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.03%)</title><rect x="839.6" y="1523.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="842.6" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (40 samples, 0.16%)</title><rect x="840.0" y="1523.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="843.0" y="1534.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.02%)</title><rect x="841.1" y="1507.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="844.1" y="1518.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (8 samples, 0.03%)</title><rect x="841.5" y="1507.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="844.5" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.02%)</title><rect x="841.5" y="1491.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="844.5" y="1502.0"></text>
</g>
<g>
<title>__lll_unlock_wake (62 samples, 0.25%)</title><rect x="842.4" y="1523.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="845.4" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.14%)</title><rect x="843.7" y="1507.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="846.7" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.13%)</title><rect x="843.7" y="1491.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.7" y="1502.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.09%)</title><rect x="844.3" y="1475.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="847.3" y="1486.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.05%)</title><rect x="844.5" y="1459.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="847.5" y="1470.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.04%)</title><rect x="844.5" y="1443.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="847.5" y="1454.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (9 samples, 0.04%)</title><rect x="846.1" y="1523.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="849.1" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (440 samples, 1.74%)</title><rect x="846.9" y="1539.0" width="20.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="849.9" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (389 samples, 1.54%)</title><rect x="849.2" y="1523.0" width="18.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.2" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (387 samples, 1.53%)</title><rect x="849.2" y="1507.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.2" y="1518.0"></text>
</g>
<g>
<title>sys_futex (365 samples, 1.45%)</title><rect x="850.2" y="1491.0" width="17.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.2" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.02%)</title><rect x="850.5" y="1475.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="853.5" y="1486.0"></text>
</g>
<g>
<title>do_futex (352 samples, 1.39%)</title><rect x="850.8" y="1475.0" width="16.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.8" y="1486.0"></text>
</g>
<g>
<title>futex_wait (342 samples, 1.36%)</title><rect x="851.0" y="1459.0" width="16.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.0" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (290 samples, 1.15%)</title><rect x="851.4" y="1443.0" width="13.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.4" y="1454.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (12 samples, 0.05%)</title><rect x="851.7" y="1427.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="854.7" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.05%)</title><rect x="851.7" y="1411.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.7" y="1422.0"></text>
</g>
<g>
<title>schedule (267 samples, 1.06%)</title><rect x="852.4" y="1427.0" width="12.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="855.4" y="1438.0"></text>
</g>
<g>
<title>__schedule (262 samples, 1.04%)</title><rect x="852.7" y="1411.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="855.7" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (259 samples, 1.03%)</title><rect x="852.8" y="1395.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.8" y="1406.0"></text>
</g>
<g>
<title>ret_from_intr (12 samples, 0.05%)</title><rect x="864.4" y="1379.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.4" y="1390.0"></text>
</g>
<g>
<title>do_IRQ (12 samples, 0.05%)</title><rect x="864.4" y="1363.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.4" y="1374.0"></text>
</g>
<g>
<title>irq_exit (12 samples, 0.05%)</title><rect x="864.4" y="1347.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.4" y="1358.0"></text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 0.05%)</title><rect x="864.4" y="1331.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.4" y="1342.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.03%)</title><rect x="864.6" y="1315.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="867.6" y="1326.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (6 samples, 0.02%)</title><rect x="864.6" y="1299.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.6" y="1310.0"></text>
</g>
<g>
<title>futex_wait_setup (16 samples, 0.06%)</title><rect x="864.9" y="1443.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.9" y="1454.0"></text>
</g>
<g>
<title>hrtimer_cancel (19 samples, 0.08%)</title><rect x="865.9" y="1443.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.9" y="1454.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (17 samples, 0.07%)</title><rect x="865.9" y="1427.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.9" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.06%)</title><rect x="865.9" y="1411.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="868.9" y="1422.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.03%)</title><rect x="868.1" y="1571.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.1" y="1582.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.02%)</title><rect x="868.2" y="1555.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="871.2" y="1566.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (23 samples, 0.09%)</title><rect x="868.6" y="1603.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="871.6" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.09%)</title><rect x="868.6" y="1587.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.6" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.09%)</title><rect x="868.6" y="1571.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="871.6" y="1582.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.08%)</title><rect x="868.8" y="1555.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="871.8" y="1566.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.08%)</title><rect x="868.8" y="1539.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.8" y="1550.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.07%)</title><rect x="868.8" y="1523.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.8" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.06%)</title><rect x="868.8" y="1507.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.8" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.06%)</title><rect x="868.9" y="1491.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.9" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.06%)</title><rect x="868.9" y="1475.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.9" y="1486.0"></text>
</g>
<g>
<title>start_thread (6,847 samples, 27.13%)</title><rect x="869.8" y="1603.0" width="320.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="872.8" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (6,847 samples, 27.13%)</title><rect x="869.8" y="1587.0" width="320.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="872.8" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (6,847 samples, 27.13%)</title><rect x="869.8" y="1571.0" width="320.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.8" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (647 samples, 2.56%)</title><rect x="869.8" y="1555.0" width="30.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.8" y="1566.0">Co..</text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (592 samples, 2.35%)</title><rect x="869.8" y="1539.0" width="27.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.8" y="1550.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (574 samples, 2.27%)</title><rect x="869.8" y="1523.0" width="26.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.8" y="1534.0">D..</text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (567 samples, 2.25%)</title><rect x="870.2" y="1507.0" width="26.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.2" y="1518.0">G..</text>
</g>
<g>
<title>G1HotCardCache::insert(signed char*) (9 samples, 0.04%)</title><rect x="870.9" y="1491.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="873.9" y="1502.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (491 samples, 1.95%)</title><rect x="871.4" y="1491.0" width="22.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.4" y="1502.0">b..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (92 samples, 0.36%)</title><rect x="875.3" y="1475.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="878.3" y="1486.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWord**, unsigned long*, HeapWord*, HeapWord*) (8 samples, 0.03%)</title><rect x="876.6" y="1459.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="879.6" y="1470.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (52 samples, 0.21%)</title><rect x="877.1" y="1459.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="880.1" y="1470.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (12 samples, 0.05%)</title><rect x="879.7" y="1475.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="882.7" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (11 samples, 0.04%)</title><rect x="880.4" y="1475.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="883.4" y="1486.0"></text>
</g>
<g>
<title>oopDesc::size() (14 samples, 0.06%)</title><rect x="880.9" y="1475.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="883.9" y="1486.0"></text>
</g>
<g>
<title>void G1ConcurrentRefineOopClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (11 samples, 0.04%)</title><rect x="881.8" y="1475.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="884.8" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion) (9 samples, 0.04%)</title><rect x="882.4" y="1475.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="885.4" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (234 samples, 0.93%)</title><rect x="882.8" y="1475.0" width="10.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="885.8" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (46 samples, 0.18%)</title><rect x="891.2" y="1459.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="894.2" y="1470.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (8 samples, 0.03%)</title><rect x="892.4" y="1443.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="895.4" y="1454.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (13 samples, 0.05%)</title><rect x="892.7" y="1443.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="895.7" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (13 samples, 0.05%)</title><rect x="893.7" y="1475.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="896.7" y="1486.0"></text>
</g>
<g>
<title>oopDesc::size() (8 samples, 0.03%)</title><rect x="894.3" y="1491.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="897.3" y="1502.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (33 samples, 0.13%)</title><rect x="894.7" y="1491.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="897.7" y="1502.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (13 samples, 0.05%)</title><rect x="896.7" y="1523.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="899.7" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (55 samples, 0.22%)</title><rect x="897.5" y="1539.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="900.5" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (53 samples, 0.21%)</title><rect x="897.5" y="1523.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="900.5" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (50 samples, 0.20%)</title><rect x="897.7" y="1507.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="900.7" y="1518.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (18 samples, 0.07%)</title><rect x="897.7" y="1491.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="900.7" y="1502.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (18 samples, 0.07%)</title><rect x="897.7" y="1475.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.7" y="1486.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (11 samples, 0.04%)</title><rect x="898.0" y="1459.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="901.0" y="1470.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.02%)</title><rect x="898.6" y="1491.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="901.6" y="1502.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (24 samples, 0.10%)</title><rect x="898.9" y="1491.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="901.9" y="1502.0"></text>
</g>
<g>
<title>GangWorker::loop() (990 samples, 3.92%)</title><rect x="900.1" y="1555.0" width="46.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.1" y="1566.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (34 samples, 0.13%)</title><rect x="900.1" y="1539.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="903.1" y="1550.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (33 samples, 0.13%)</title><rect x="900.1" y="1523.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.1" y="1534.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (30 samples, 0.12%)</title><rect x="900.1" y="1507.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="903.1" y="1518.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (25 samples, 0.10%)</title><rect x="900.4" y="1491.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (19 samples, 0.08%)</title><rect x="900.5" y="1475.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.5" y="1486.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (13 samples, 0.05%)</title><rect x="900.7" y="1459.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.7" y="1470.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (923 samples, 3.66%)</title><rect x="901.8" y="1539.0" width="43.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="904.8" y="1550.0">G1Pa..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (606 samples, 2.40%)</title><rect x="901.8" y="1523.0" width="28.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="904.8" y="1534.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (606 samples, 2.40%)</title><rect x="901.8" y="1507.0" width="28.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="904.8" y="1518.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (494 samples, 1.96%)</title><rect x="901.8" y="1491.0" width="23.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="904.8" y="1502.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (494 samples, 1.96%)</title><rect x="901.8" y="1475.0" width="23.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.8" y="1486.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (492 samples, 1.95%)</title><rect x="901.8" y="1459.0" width="23.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="904.8" y="1470.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (369 samples, 1.46%)</title><rect x="902.2" y="1443.0" width="17.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="905.2" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (16 samples, 0.06%)</title><rect x="907.5" y="1427.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="910.5" y="1438.0"></text>
</g>
<g>
<title>async_page_fault (6 samples, 0.02%)</title><rect x="907.9" y="1411.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="910.9" y="1422.0"></text>
</g>
<g>
<title>do_async_page_fault (6 samples, 0.02%)</title><rect x="907.9" y="1395.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.9" y="1406.0"></text>
</g>
<g>
<title>do_page_fault (6 samples, 0.02%)</title><rect x="907.9" y="1379.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.9" y="1390.0"></text>
</g>
<g>
<title>__do_page_fault (6 samples, 0.02%)</title><rect x="907.9" y="1363.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="910.9" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (239 samples, 0.95%)</title><rect x="908.2" y="1427.0" width="11.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="911.2" y="1438.0"></text>
</g>
<g>
<title>async_page_fault (9 samples, 0.04%)</title><rect x="914.0" y="1411.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="917.0" y="1422.0"></text>
</g>
<g>
<title>do_async_page_fault (9 samples, 0.04%)</title><rect x="914.0" y="1395.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.0" y="1406.0"></text>
</g>
<g>
<title>do_page_fault (9 samples, 0.04%)</title><rect x="914.0" y="1379.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.0" y="1390.0"></text>
</g>
<g>
<title>__do_page_fault (9 samples, 0.04%)</title><rect x="914.0" y="1363.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="917.0" y="1374.0"></text>
</g>
<g>
<title>handle_mm_fault (6 samples, 0.02%)</title><rect x="914.1" y="1347.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.1" y="1358.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (84 samples, 0.33%)</title><rect x="914.6" y="1411.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="917.6" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (18 samples, 0.07%)</title><rect x="918.6" y="1411.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="921.6" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (114 samples, 0.45%)</title><rect x="919.5" y="1443.0" width="5.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="922.5" y="1454.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (105 samples, 0.42%)</title><rect x="919.5" y="1427.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="922.5" y="1438.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (10 samples, 0.04%)</title><rect x="920.8" y="1411.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.8" y="1422.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (7 samples, 0.03%)</title><rect x="920.9" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="923.9" y="1406.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (37 samples, 0.15%)</title><rect x="921.5" y="1411.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.5" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (20 samples, 0.08%)</title><rect x="923.4" y="1411.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.4" y="1422.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (112 samples, 0.44%)</title><rect x="924.9" y="1491.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="927.9" y="1502.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (110 samples, 0.44%)</title><rect x="925.0" y="1475.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="928.0" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (100 samples, 0.40%)</title><rect x="925.1" y="1459.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.1" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.03%)</title><rect x="926.9" y="1443.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="929.9" y="1454.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (54 samples, 0.21%)</title><rect x="927.2" y="1443.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="930.2" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (23 samples, 0.09%)</title><rect x="928.6" y="1427.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="931.6" y="1438.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (8 samples, 0.03%)</title><rect x="929.7" y="1459.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="932.7" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (6 samples, 0.02%)</title><rect x="929.7" y="1443.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="932.7" y="1454.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (292 samples, 1.16%)</title><rect x="930.2" y="1523.0" width="13.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="933.2" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (292 samples, 1.16%)</title><rect x="930.2" y="1507.0" width="13.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="933.2" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (292 samples, 1.16%)</title><rect x="930.2" y="1491.0" width="13.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="933.2" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (290 samples, 1.15%)</title><rect x="930.2" y="1475.0" width="13.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="933.2" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (65 samples, 0.26%)</title><rect x="930.9" y="1459.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.9" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (11 samples, 0.04%)</title><rect x="931.7" y="1443.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="934.7" y="1454.0"></text>
</g>
<g>
<title>async_page_fault (6 samples, 0.02%)</title><rect x="932.0" y="1427.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.0" y="1438.0"></text>
</g>
<g>
<title>do_async_page_fault (6 samples, 0.02%)</title><rect x="932.0" y="1411.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.0" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (6 samples, 0.02%)</title><rect x="932.0" y="1395.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.0" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (6 samples, 0.02%)</title><rect x="932.0" y="1379.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.0" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (36 samples, 0.14%)</title><rect x="932.3" y="1443.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="935.3" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (13 samples, 0.05%)</title><rect x="933.3" y="1427.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.3" y="1438.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (21 samples, 0.08%)</title><rect x="934.0" y="1459.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="937.0" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (172 samples, 0.68%)</title><rect x="935.0" y="1459.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="938.0" y="1470.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (23 samples, 0.09%)</title><rect x="936.6" y="1443.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="939.6" y="1454.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.03%)</title><rect x="937.3" y="1427.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="940.3" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size() (16 samples, 0.06%)</title><rect x="938.0" y="1443.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="941.0" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (19 samples, 0.08%)</title><rect x="938.9" y="1443.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="941.9" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (55 samples, 0.22%)</title><rect x="940.0" y="1443.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="943.0" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (26 samples, 0.10%)</title><rect x="941.3" y="1427.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="944.3" y="1438.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (10 samples, 0.04%)</title><rect x="942.6" y="1443.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="945.6" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.03%)</title><rect x="942.7" y="1427.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="945.7" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (9 samples, 0.04%)</title><rect x="943.3" y="1459.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="946.3" y="1470.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (24 samples, 0.10%)</title><rect x="943.8" y="1523.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.8" y="1534.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (21 samples, 0.08%)</title><rect x="943.9" y="1507.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="946.9" y="1518.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (9 samples, 0.04%)</title><rect x="943.9" y="1491.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="946.9" y="1502.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (8 samples, 0.03%)</title><rect x="943.9" y="1475.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="946.9" y="1486.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (7 samples, 0.03%)</title><rect x="943.9" y="1459.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.9" y="1470.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (12 samples, 0.05%)</title><rect x="944.3" y="1491.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.3" y="1502.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (11 samples, 0.04%)</title><rect x="944.3" y="1475.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="947.3" y="1486.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (6 samples, 0.02%)</title><rect x="944.4" y="1459.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.4" y="1470.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (6 samples, 0.02%)</title><rect x="944.4" y="1443.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.4" y="1454.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (6 samples, 0.02%)</title><rect x="944.9" y="1539.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="947.9" y="1550.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (17 samples, 0.07%)</title><rect x="945.2" y="1539.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="948.2" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (17 samples, 0.07%)</title><rect x="945.2" y="1523.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.2" y="1534.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (17 samples, 0.07%)</title><rect x="945.2" y="1507.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="948.2" y="1518.0"></text>
</g>
<g>
<title>JavaThread::run() (5,150 samples, 20.41%)</title><rect x="946.4" y="1555.0" width="240.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.4" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5,150 samples, 20.41%)</title><rect x="946.4" y="1539.0" width="240.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="949.4" y="1550.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5,071 samples, 20.10%)</title><rect x="946.4" y="1523.0" width="237.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="949.4" y="1534.0">CompileBroker::compiler_thread_..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5,049 samples, 20.01%)</title><rect x="946.4" y="1507.0" width="236.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.4" y="1518.0">CompileBroker::invoke_compiler_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4,507 samples, 17.86%)</title><rect x="946.6" y="1491.0" width="210.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="949.6" y="1502.0">C2Compiler::compile_method(c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4,500 samples, 17.83%)</title><rect x="946.8" y="1475.0" width="210.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="949.8" y="1486.0">Compile::Compile(ciEnv*, C2C..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (19 samples, 0.08%)</title><rect x="946.8" y="1459.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.8" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (19 samples, 0.08%)</title><rect x="946.8" y="1443.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="949.8" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (19 samples, 0.08%)</title><rect x="946.8" y="1427.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="949.8" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (18 samples, 0.07%)</title><rect x="946.8" y="1411.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="949.8" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (18 samples, 0.07%)</title><rect x="946.8" y="1395.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="949.8" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (15 samples, 0.06%)</title><rect x="946.9" y="1379.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="949.9" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (14 samples, 0.06%)</title><rect x="946.9" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="949.9" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (11 samples, 0.04%)</title><rect x="947.0" y="1347.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="950.0" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (8 samples, 0.03%)</title><rect x="947.1" y="1331.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.1" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (7 samples, 0.03%)</title><rect x="947.2" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="950.2" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.03%)</title><rect x="947.2" y="1299.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="950.2" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.03%)</title><rect x="947.2" y="1283.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="950.2" y="1294.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2,655 samples, 10.52%)</title><rect x="947.7" y="1459.0" width="124.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="950.7" y="1470.0">Compile::Code_G..</text>
</g>
<g>
<title>Compile::Output() (111 samples, 0.44%)</title><rect x="948.0" y="1443.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="951.0" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.03%)</title><rect x="948.1" y="1427.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="951.1" y="1438.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (65 samples, 0.26%)</title><rect x="948.4" y="1427.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="951.4" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (21 samples, 0.08%)</title><rect x="950.4" y="1411.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="953.4" y="1422.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (15 samples, 0.06%)</title><rect x="950.6" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="953.6" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (36 samples, 0.14%)</title><rect x="951.4" y="1427.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="954.4" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (26 samples, 0.10%)</title><rect x="951.8" y="1411.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="954.8" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (12 samples, 0.05%)</title><rect x="952.2" y="1395.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="955.2" y="1406.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (66 samples, 0.26%)</title><rect x="953.2" y="1443.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="956.2" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (17 samples, 0.07%)</title><rect x="953.9" y="1427.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="956.9" y="1438.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (7 samples, 0.03%)</title><rect x="954.0" y="1411.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.0" y="1422.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (17 samples, 0.07%)</title><rect x="955.1" y="1427.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="958.1" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (12 samples, 0.05%)</title><rect x="955.2" y="1411.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="958.2" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (7 samples, 0.03%)</title><rect x="955.4" y="1395.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="958.4" y="1406.0"></text>
</g>
<g>
<title>Matcher::match() (227 samples, 0.90%)</title><rect x="956.5" y="1443.0" width="10.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="959.5" y="1454.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (34 samples, 0.13%)</title><rect x="956.9" y="1427.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="959.9" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (178 samples, 0.71%)</title><rect x="958.4" y="1427.0" width="8.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="961.4" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (37 samples, 0.15%)</title><rect x="959.8" y="1411.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="962.8" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (9 samples, 0.04%)</title><rect x="961.7" y="1411.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="964.7" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (6 samples, 0.02%)</title><rect x="961.8" y="1395.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="964.8" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (88 samples, 0.35%)</title><rect x="962.1" y="1411.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="965.1" y="1422.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (42 samples, 0.17%)</title><rect x="963.1" y="1395.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="966.1" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (28 samples, 0.11%)</title><rect x="963.5" y="1379.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="966.5" y="1390.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (14 samples, 0.06%)</title><rect x="963.8" y="1363.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="966.8" y="1374.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (6 samples, 0.02%)</title><rect x="963.9" y="1347.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="966.9" y="1358.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (6 samples, 0.02%)</title><rect x="964.5" y="1363.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="967.5" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (23 samples, 0.09%)</title><rect x="965.1" y="1395.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.1" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (8 samples, 0.03%)</title><rect x="965.3" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="968.3" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (6 samples, 0.02%)</title><rect x="965.3" y="1363.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="968.3" y="1374.0"></text>
</g>
<g>
<title>Node::clone() const (6 samples, 0.02%)</title><rect x="966.3" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="969.3" y="1422.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (13 samples, 0.05%)</title><rect x="967.1" y="1443.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="970.1" y="1454.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (8 samples, 0.03%)</title><rect x="967.1" y="1427.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.1" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (8 samples, 0.03%)</title><rect x="967.7" y="1443.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.7" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (277 samples, 1.10%)</title><rect x="968.2" y="1443.0" width="12.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="971.2" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (7 samples, 0.03%)</title><rect x="968.2" y="1427.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="971.2" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (265 samples, 1.05%)</title><rect x="968.6" y="1427.0" width="12.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="971.6" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (12 samples, 0.05%)</title><rect x="969.7" y="1411.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="972.7" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (40 samples, 0.16%)</title><rect x="970.3" y="1411.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="973.3" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (10 samples, 0.04%)</title><rect x="970.7" y="1395.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.7" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (6 samples, 0.02%)</title><rect x="971.2" y="1395.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="974.2" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (9 samples, 0.04%)</title><rect x="971.5" y="1395.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="974.5" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (47 samples, 0.19%)</title><rect x="972.1" y="1411.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="975.1" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (14 samples, 0.06%)</title><rect x="973.0" y="1395.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="976.0" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (10 samples, 0.04%)</title><rect x="974.3" y="1411.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.3" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (40 samples, 0.16%)</title><rect x="975.0" y="1411.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.0" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (13 samples, 0.05%)</title><rect x="976.1" y="1395.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="979.1" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (7 samples, 0.03%)</title><rect x="976.9" y="1411.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="979.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (10 samples, 0.04%)</title><rect x="977.2" y="1411.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="980.2" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (8 samples, 0.03%)</title><rect x="977.3" y="1395.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="980.3" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (61 samples, 0.24%)</title><rect x="977.7" y="1411.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="980.7" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (6 samples, 0.02%)</title><rect x="978.6" y="1395.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="981.6" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (21 samples, 0.08%)</title><rect x="978.9" y="1395.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="981.9" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (12 samples, 0.05%)</title><rect x="980.0" y="1395.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="983.0" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (10 samples, 0.04%)</title><rect x="981.1" y="1443.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="984.1" y="1454.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1,928 samples, 7.64%)</title><rect x="981.6" y="1443.0" width="90.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="984.6" y="1454.0">PhaseChait..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (17 samples, 0.07%)</title><rect x="981.8" y="1427.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="984.8" y="1438.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (8 samples, 0.03%)</title><rect x="983.4" y="1427.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="986.4" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (51 samples, 0.20%)</title><rect x="984.7" y="1427.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="987.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (96 samples, 0.38%)</title><rect x="987.1" y="1427.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="990.1" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (17 samples, 0.07%)</title><rect x="988.5" y="1411.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="991.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (7 samples, 0.03%)</title><rect x="989.3" y="1411.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="992.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (31 samples, 0.12%)</title><rect x="989.6" y="1411.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="992.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (19 samples, 0.08%)</title><rect x="990.1" y="1395.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.1" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (8 samples, 0.03%)</title><rect x="991.1" y="1411.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="994.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (79 samples, 0.31%)</title><rect x="991.6" y="1427.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.6" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (18 samples, 0.07%)</title><rect x="992.2" y="1411.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (48 samples, 0.19%)</title><rect x="993.0" y="1411.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.0" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (26 samples, 0.10%)</title><rect x="993.9" y="1395.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="996.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (208 samples, 0.82%)</title><rect x="995.3" y="1427.0" width="9.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.3" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (6 samples, 0.02%)</title><rect x="1003.7" y="1411.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (13 samples, 0.05%)</title><rect x="1003.9" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1006.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (421 samples, 1.67%)</title><rect x="1005.1" y="1427.0" width="19.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.1" y="1438.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (15 samples, 0.06%)</title><rect x="1008.8" y="1411.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (14 samples, 0.06%)</title><rect x="1009.6" y="1411.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1012.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (40 samples, 0.16%)</title><rect x="1010.9" y="1411.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1013.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (143 samples, 0.57%)</title><rect x="1012.9" y="1411.0" width="6.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1015.9" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (34 samples, 0.13%)</title><rect x="1018.0" y="1395.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (93 samples, 0.37%)</title><rect x="1019.6" y="1411.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.03%)</title><rect x="1021.0" y="1395.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.0" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (21 samples, 0.08%)</title><rect x="1021.3" y="1395.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (33 samples, 0.13%)</title><rect x="1022.3" y="1395.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1025.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (7 samples, 0.03%)</title><rect x="1024.0" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1027.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (25 samples, 0.10%)</title><rect x="1024.7" y="1427.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1027.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (15 samples, 0.06%)</title><rect x="1025.2" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1028.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (194 samples, 0.77%)</title><rect x="1026.6" y="1427.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1029.6" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (60 samples, 0.24%)</title><rect x="1031.2" y="1411.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1034.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (8 samples, 0.03%)</title><rect x="1034.1" y="1411.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1037.1" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (7 samples, 0.03%)</title><rect x="1034.6" y="1411.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1037.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (7 samples, 0.03%)</title><rect x="1034.9" y="1411.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1037.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (64 samples, 0.25%)</title><rect x="1035.6" y="1427.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1038.6" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (30 samples, 0.12%)</title><rect x="1036.7" y="1411.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (40 samples, 0.16%)</title><rect x="1038.7" y="1427.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (257 samples, 1.02%)</title><rect x="1040.6" y="1427.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1043.6" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (111 samples, 0.44%)</title><rect x="1046.2" y="1411.0" width="5.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (7 samples, 0.03%)</title><rect x="1050.9" y="1395.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.9" y="1406.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (19 samples, 0.08%)</title><rect x="1051.4" y="1411.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1054.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (11 samples, 0.04%)</title><rect x="1052.7" y="1427.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1055.7" y="1438.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (66 samples, 0.26%)</title><rect x="1053.2" y="1427.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.2" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (22 samples, 0.09%)</title><rect x="1053.2" y="1411.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.2" y="1422.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (6 samples, 0.02%)</title><rect x="1053.9" y="1395.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.9" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (36 samples, 0.14%)</title><rect x="1054.5" y="1411.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.5" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (11 samples, 0.04%)</title><rect x="1054.7" y="1395.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.7" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (12 samples, 0.05%)</title><rect x="1055.4" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1058.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (47 samples, 0.19%)</title><rect x="1056.3" y="1427.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1059.3" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (26 samples, 0.10%)</title><rect x="1057.2" y="1411.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1060.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (42 samples, 0.17%)</title><rect x="1058.5" y="1427.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.5" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (25 samples, 0.10%)</title><rect x="1059.2" y="1411.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (19 samples, 0.08%)</title><rect x="1060.4" y="1427.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.4" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (15 samples, 0.06%)</title><rect x="1060.6" y="1411.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.6" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (198 samples, 0.78%)</title><rect x="1061.3" y="1427.0" width="9.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.3" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (53 samples, 0.21%)</title><rect x="1067.5" y="1411.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.5" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (10 samples, 0.04%)</title><rect x="1069.4" y="1395.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.4" y="1406.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (9 samples, 0.04%)</title><rect x="1071.1" y="1427.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1074.1" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (1,206 samples, 4.78%)</title><rect x="1072.0" y="1459.0" width="56.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1075.0" y="1470.0">Compil..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (22 samples, 0.09%)</title><rect x="1072.4" y="1443.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1075.4" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (22 samples, 0.09%)</title><rect x="1072.4" y="1427.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1075.4" y="1438.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (7 samples, 0.03%)</title><rect x="1073.1" y="1411.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.1" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (21 samples, 0.08%)</title><rect x="1073.4" y="1443.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.4" y="1454.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (11 samples, 0.04%)</title><rect x="1073.4" y="1427.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.4" y="1438.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (8 samples, 0.03%)</title><rect x="1073.5" y="1411.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1076.5" y="1422.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (6 samples, 0.02%)</title><rect x="1073.6" y="1395.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.6" y="1406.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (6 samples, 0.02%)</title><rect x="1073.9" y="1427.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.9" y="1438.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (22 samples, 0.09%)</title><rect x="1074.4" y="1443.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.4" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (42 samples, 0.17%)</title><rect x="1075.4" y="1443.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1078.4" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (41 samples, 0.16%)</title><rect x="1075.5" y="1427.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1078.5" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (6 samples, 0.02%)</title><rect x="1076.2" y="1411.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1079.2" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (12 samples, 0.05%)</title><rect x="1076.8" y="1411.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1079.8" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (8 samples, 0.03%)</title><rect x="1076.9" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.9" y="1406.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (46 samples, 0.18%)</title><rect x="1077.8" y="1443.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.8" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (15 samples, 0.06%)</title><rect x="1079.9" y="1443.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1082.9" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (15 samples, 0.06%)</title><rect x="1079.9" y="1427.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1082.9" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (6 samples, 0.02%)</title><rect x="1080.3" y="1411.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1083.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (715 samples, 2.83%)</title><rect x="1080.8" y="1443.0" width="33.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.8" y="1454.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (14 samples, 0.06%)</title><rect x="1081.3" y="1427.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (9 samples, 0.04%)</title><rect x="1081.5" y="1411.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.5" y="1422.0"></text>
</g>
<g>
<title>Node::is_CFG() const (8 samples, 0.03%)</title><rect x="1082.3" y="1427.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1085.3" y="1438.0"></text>
</g>
<g>
<title>Node::pinned() const (8 samples, 0.03%)</title><rect x="1082.6" y="1427.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (74 samples, 0.29%)</title><rect x="1083.1" y="1427.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1086.1" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (16 samples, 0.06%)</title><rect x="1085.4" y="1411.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (59 samples, 0.23%)</title><rect x="1086.6" y="1427.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1089.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (11 samples, 0.04%)</title><rect x="1088.6" y="1411.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (330 samples, 1.31%)</title><rect x="1089.3" y="1427.0" width="15.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (246 samples, 0.97%)</title><rect x="1093.2" y="1411.0" width="11.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (208 samples, 0.82%)</title><rect x="1094.6" y="1395.0" width="9.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1097.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (15 samples, 0.06%)</title><rect x="1095.6" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.6" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (9 samples, 0.04%)</title><rect x="1095.9" y="1363.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1098.9" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (6 samples, 0.02%)</title><rect x="1096.3" y="1379.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1099.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (164 samples, 0.65%)</title><rect x="1096.6" y="1379.0" width="7.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1099.6" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (47 samples, 0.19%)</title><rect x="1104.9" y="1427.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.9" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (15 samples, 0.06%)</title><rect x="1106.3" y="1411.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (84 samples, 0.33%)</title><rect x="1107.2" y="1427.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (9 samples, 0.04%)</title><rect x="1108.5" y="1411.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (8 samples, 0.03%)</title><rect x="1109.0" y="1411.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1112.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (39 samples, 0.15%)</title><rect x="1109.3" y="1411.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (14 samples, 0.06%)</title><rect x="1110.0" y="1395.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (9 samples, 0.04%)</title><rect x="1110.0" y="1379.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1113.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (8 samples, 0.03%)</title><rect x="1110.6" y="1395.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1113.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (50 samples, 0.20%)</title><rect x="1111.2" y="1427.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1114.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (46 samples, 0.18%)</title><rect x="1111.3" y="1411.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.3" y="1422.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (6 samples, 0.02%)</title><rect x="1112.2" y="1395.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.2" y="1406.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (8 samples, 0.03%)</title><rect x="1112.8" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.8" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (6 samples, 0.02%)</title><rect x="1113.2" y="1395.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.2" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (6 samples, 0.02%)</title><rect x="1113.2" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1116.2" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.02%)</title><rect x="1113.2" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.2" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.02%)</title><rect x="1113.2" y="1347.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.2" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.02%)</title><rect x="1113.2" y="1331.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.2" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.02%)</title><rect x="1113.2" y="1315.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.2" y="1326.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (15 samples, 0.06%)</title><rect x="1114.2" y="1443.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.2" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (8 samples, 0.03%)</title><rect x="1114.5" y="1427.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (221 samples, 0.88%)</title><rect x="1114.9" y="1443.0" width="10.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.9" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (207 samples, 0.82%)</title><rect x="1115.1" y="1427.0" width="9.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1118.1" y="1438.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (20 samples, 0.08%)</title><rect x="1116.0" y="1411.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.0" y="1422.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (6 samples, 0.02%)</title><rect x="1116.7" y="1395.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1119.7" y="1406.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (14 samples, 0.06%)</title><rect x="1117.0" y="1411.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.0" y="1422.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (7 samples, 0.03%)</title><rect x="1117.3" y="1395.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1120.3" y="1406.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (6 samples, 0.02%)</title><rect x="1117.3" y="1379.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.3" y="1390.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (6 samples, 0.02%)</title><rect x="1117.3" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1120.3" y="1374.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (18 samples, 0.07%)</title><rect x="1118.0" y="1411.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.0" y="1422.0"></text>
</g>
<g>
<title>NodeHash::grow() (7 samples, 0.03%)</title><rect x="1118.4" y="1395.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1121.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (6 samples, 0.02%)</title><rect x="1118.8" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (13 samples, 0.05%)</title><rect x="1119.1" y="1411.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.1" y="1422.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (16 samples, 0.06%)</title><rect x="1119.7" y="1411.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.7" y="1422.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (7 samples, 0.03%)</title><rect x="1120.0" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.0" y="1406.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (22 samples, 0.09%)</title><rect x="1120.7" y="1411.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.7" y="1422.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (6 samples, 0.02%)</title><rect x="1121.4" y="1395.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.4" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (53 samples, 0.21%)</title><rect x="1121.8" y="1411.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.8" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (49 samples, 0.19%)</title><rect x="1121.8" y="1395.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1124.8" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (49 samples, 0.19%)</title><rect x="1121.8" y="1379.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.8" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (49 samples, 0.19%)</title><rect x="1121.8" y="1363.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1124.8" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (45 samples, 0.18%)</title><rect x="1121.8" y="1347.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.8" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (42 samples, 0.17%)</title><rect x="1121.8" y="1331.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.8" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (40 samples, 0.16%)</title><rect x="1121.8" y="1315.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.8" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (35 samples, 0.14%)</title><rect x="1121.8" y="1299.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.8" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (33 samples, 0.13%)</title><rect x="1121.8" y="1283.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.8" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (31 samples, 0.12%)</title><rect x="1121.8" y="1267.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.8" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (30 samples, 0.12%)</title><rect x="1121.8" y="1251.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.8" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (26 samples, 0.10%)</title><rect x="1121.8" y="1235.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.8" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (24 samples, 0.10%)</title><rect x="1121.9" y="1219.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.9" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (22 samples, 0.09%)</title><rect x="1121.9" y="1203.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.9" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (20 samples, 0.08%)</title><rect x="1121.9" y="1187.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.9" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.07%)</title><rect x="1121.9" y="1171.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.9" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (17 samples, 0.07%)</title><rect x="1121.9" y="1155.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1124.9" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.05%)</title><rect x="1121.9" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.9" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.04%)</title><rect x="1121.9" y="1123.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1124.9" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.03%)</title><rect x="1121.9" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.9" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.02%)</title><rect x="1121.9" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.9" y="1102.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (39 samples, 0.15%)</title><rect x="1125.3" y="1443.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.3" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (28 samples, 0.11%)</title><rect x="1125.4" y="1427.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (24 samples, 0.10%)</title><rect x="1125.6" y="1411.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.6" y="1422.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (6 samples, 0.02%)</title><rect x="1126.7" y="1427.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.7" y="1438.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (17 samples, 0.07%)</title><rect x="1127.2" y="1443.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.2" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (15 samples, 0.06%)</title><rect x="1127.2" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.2" y="1438.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (6 samples, 0.02%)</title><rect x="1127.4" y="1411.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.4" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (17 samples, 0.07%)</title><rect x="1128.4" y="1459.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.4" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (13 samples, 0.05%)</title><rect x="1128.4" y="1443.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.4" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.05%)</title><rect x="1128.4" y="1427.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.4" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.05%)</title><rect x="1128.4" y="1411.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.05%)</title><rect x="1128.4" y="1395.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.05%)</title><rect x="1128.4" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.05%)</title><rect x="1128.4" y="1363.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.05%)</title><rect x="1128.4" y="1347.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.4" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.04%)</title><rect x="1128.5" y="1331.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.5" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.04%)</title><rect x="1128.5" y="1315.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.04%)</title><rect x="1128.5" y="1299.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.04%)</title><rect x="1128.5" y="1283.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.04%)</title><rect x="1128.5" y="1267.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.04%)</title><rect x="1128.5" y="1251.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.04%)</title><rect x="1128.5" y="1235.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.04%)</title><rect x="1128.5" y="1219.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.04%)</title><rect x="1128.5" y="1203.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.04%)</title><rect x="1128.5" y="1187.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.03%)</title><rect x="1128.5" y="1171.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="1182.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (8 samples, 0.03%)</title><rect x="1129.3" y="1459.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.3" y="1470.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (7 samples, 0.03%)</title><rect x="1129.4" y="1443.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.4" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (510 samples, 2.02%)</title><rect x="1129.9" y="1459.0" width="23.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.9" y="1470.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (510 samples, 2.02%)</title><rect x="1129.9" y="1443.0" width="23.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.9" y="1454.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (507 samples, 2.01%)</title><rect x="1130.0" y="1427.0" width="23.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.0" y="1438.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (507 samples, 2.01%)</title><rect x="1130.0" y="1411.0" width="23.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.0" y="1422.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (499 samples, 1.98%)</title><rect x="1130.2" y="1395.0" width="23.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.2" y="1406.0">P..</text>
</g>
<g>
<title>Parse::do_call() (464 samples, 1.84%)</title><rect x="1130.6" y="1379.0" width="21.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.6" y="1390.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (21 samples, 0.08%)</title><rect x="1130.6" y="1363.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.6" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (16 samples, 0.06%)</title><rect x="1130.7" y="1347.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.7" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (12 samples, 0.05%)</title><rect x="1130.9" y="1331.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.9" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (11 samples, 0.04%)</title><rect x="1130.9" y="1315.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.9" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (11 samples, 0.04%)</title><rect x="1130.9" y="1299.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1133.9" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (10 samples, 0.04%)</title><rect x="1130.9" y="1283.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1133.9" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (10 samples, 0.04%)</title><rect x="1130.9" y="1267.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.9" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (9 samples, 0.04%)</title><rect x="1130.9" y="1251.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.9" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (6 samples, 0.02%)</title><rect x="1131.0" y="1235.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.0" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (6 samples, 0.02%)</title><rect x="1131.0" y="1219.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.0" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.02%)</title><rect x="1131.0" y="1203.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.0" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.02%)</title><rect x="1131.0" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.0" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (340 samples, 1.35%)</title><rect x="1132.2" y="1363.0" width="15.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.2" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (340 samples, 1.35%)</title><rect x="1132.2" y="1347.0" width="15.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.2" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (336 samples, 1.33%)</title><rect x="1132.3" y="1331.0" width="15.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (336 samples, 1.33%)</title><rect x="1132.3" y="1315.0" width="15.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (335 samples, 1.33%)</title><rect x="1132.4" y="1299.0" width="15.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (311 samples, 1.23%)</title><rect x="1132.7" y="1283.0" width="14.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.7" y="1294.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (23 samples, 0.09%)</title><rect x="1132.7" y="1267.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.7" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (19 samples, 0.08%)</title><rect x="1132.9" y="1251.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.9" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (15 samples, 0.06%)</title><rect x="1133.0" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.0" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (15 samples, 0.06%)</title><rect x="1133.0" y="1219.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.0" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (14 samples, 0.06%)</title><rect x="1133.0" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.0" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (11 samples, 0.04%)</title><rect x="1133.1" y="1187.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1136.1" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (10 samples, 0.04%)</title><rect x="1133.1" y="1171.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.1" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (9 samples, 0.04%)</title><rect x="1133.1" y="1155.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.1" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (245 samples, 0.97%)</title><rect x="1134.0" y="1267.0" width="11.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.0" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (244 samples, 0.97%)</title><rect x="1134.0" y="1251.0" width="11.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.0" y="1262.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (6 samples, 0.02%)</title><rect x="1134.2" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (231 samples, 0.92%)</title><rect x="1134.5" y="1235.0" width="10.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (229 samples, 0.91%)</title><rect x="1134.5" y="1219.0" width="10.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (228 samples, 0.90%)</title><rect x="1134.5" y="1203.0" width="10.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (200 samples, 0.79%)</title><rect x="1134.8" y="1187.0" width="9.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.8" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (18 samples, 0.07%)</title><rect x="1134.8" y="1171.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.8" y="1182.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (18 samples, 0.07%)</title><rect x="1134.8" y="1155.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.8" y="1166.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (17 samples, 0.07%)</title><rect x="1134.8" y="1139.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.8" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (16 samples, 0.06%)</title><rect x="1134.9" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.9" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (16 samples, 0.06%)</title><rect x="1134.9" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.9" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (16 samples, 0.06%)</title><rect x="1134.9" y="1091.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.9" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (16 samples, 0.06%)</title><rect x="1134.9" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.9" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (13 samples, 0.05%)</title><rect x="1135.0" y="1059.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.0" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (9 samples, 0.04%)</title><rect x="1135.1" y="1043.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.1" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (9 samples, 0.04%)</title><rect x="1135.1" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.1" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (9 samples, 0.04%)</title><rect x="1135.1" y="1011.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.1" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (9 samples, 0.04%)</title><rect x="1135.1" y="995.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.1" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (6 samples, 0.02%)</title><rect x="1135.2" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.2" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (6 samples, 0.02%)</title><rect x="1135.2" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.2" y="974.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (6 samples, 0.02%)</title><rect x="1135.2" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (157 samples, 0.62%)</title><rect x="1136.0" y="1171.0" width="7.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.0" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (156 samples, 0.62%)</title><rect x="1136.0" y="1155.0" width="7.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.0" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (152 samples, 0.60%)</title><rect x="1136.1" y="1139.0" width="7.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (151 samples, 0.60%)</title><rect x="1136.1" y="1123.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (149 samples, 0.59%)</title><rect x="1136.2" y="1107.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (127 samples, 0.50%)</title><rect x="1136.4" y="1091.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.4" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (9 samples, 0.04%)</title><rect x="1136.4" y="1075.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.4" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.03%)</title><rect x="1136.5" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.5" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (7 samples, 0.03%)</title><rect x="1136.5" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.5" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (7 samples, 0.03%)</title><rect x="1136.5" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.5" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (7 samples, 0.03%)</title><rect x="1136.5" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.5" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (7 samples, 0.03%)</title><rect x="1136.5" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.5" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.02%)</title><rect x="1136.5" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (107 samples, 0.42%)</title><rect x="1137.0" y="1075.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.0" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (107 samples, 0.42%)</title><rect x="1137.0" y="1059.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (103 samples, 0.41%)</title><rect x="1137.2" y="1043.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.2" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (103 samples, 0.41%)</title><rect x="1137.2" y="1027.0" width="4.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (101 samples, 0.40%)</title><rect x="1137.3" y="1011.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (88 samples, 0.35%)</title><rect x="1137.3" y="995.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.3" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (75 samples, 0.30%)</title><rect x="1137.6" y="979.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (75 samples, 0.30%)</title><rect x="1137.6" y="963.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (72 samples, 0.29%)</title><rect x="1137.7" y="947.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (72 samples, 0.29%)</title><rect x="1137.7" y="931.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (72 samples, 0.29%)</title><rect x="1137.7" y="915.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (55 samples, 0.22%)</title><rect x="1137.7" y="899.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.7" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.02%)</title><rect x="1137.7" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.7" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (46 samples, 0.18%)</title><rect x="1138.0" y="883.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (46 samples, 0.18%)</title><rect x="1138.0" y="867.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (46 samples, 0.18%)</title><rect x="1138.0" y="851.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (44 samples, 0.17%)</title><rect x="1138.0" y="835.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (44 samples, 0.17%)</title><rect x="1138.0" y="819.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (32 samples, 0.13%)</title><rect x="1138.2" y="803.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.2" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (26 samples, 0.10%)</title><rect x="1138.3" y="787.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (26 samples, 0.10%)</title><rect x="1138.3" y="771.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.10%)</title><rect x="1138.4" y="755.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.10%)</title><rect x="1138.4" y="739.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.10%)</title><rect x="1138.4" y="723.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.08%)</title><rect x="1138.4" y="707.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.07%)</title><rect x="1138.5" y="691.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.5" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.07%)</title><rect x="1138.5" y="675.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.06%)</title><rect x="1138.5" y="659.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.06%)</title><rect x="1138.5" y="643.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.06%)</title><rect x="1138.5" y="627.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.05%)</title><rect x="1138.5" y="611.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.04%)</title><rect x="1138.6" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.6" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.04%)</title><rect x="1138.6" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.03%)</title><rect x="1138.7" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.03%)</title><rect x="1138.7" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.03%)</title><rect x="1138.7" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (12 samples, 0.05%)</title><rect x="1140.3" y="899.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (7 samples, 0.03%)</title><rect x="1140.5" y="883.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.5" y="894.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (7 samples, 0.03%)</title><rect x="1140.5" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.5" y="878.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (7 samples, 0.03%)</title><rect x="1140.5" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.5" y="862.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (7 samples, 0.03%)</title><rect x="1140.5" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (8 samples, 0.03%)</title><rect x="1142.4" y="1091.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (6 samples, 0.02%)</title><rect x="1142.5" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.5" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (18 samples, 0.07%)</title><rect x="1143.3" y="1171.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.3" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.06%)</title><rect x="1143.4" y="1155.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.4" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.06%)</title><rect x="1143.4" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.06%)</title><rect x="1143.4" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.06%)</title><rect x="1143.4" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.06%)</title><rect x="1143.4" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 0.06%)</title><rect x="1143.4" y="1075.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.05%)</title><rect x="1143.4" y="1059.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.05%)</title><rect x="1143.4" y="1043.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.05%)</title><rect x="1143.4" y="1027.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.05%)</title><rect x="1143.4" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1146.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.05%)</title><rect x="1143.4" y="995.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.04%)</title><rect x="1143.4" y="979.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.03%)</title><rect x="1143.4" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.03%)</title><rect x="1143.4" y="947.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.03%)</title><rect x="1143.4" y="931.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.03%)</title><rect x="1143.4" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.03%)</title><rect x="1143.4" y="899.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (10 samples, 0.04%)</title><rect x="1144.3" y="1187.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.3" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (32 samples, 0.13%)</title><rect x="1145.4" y="1267.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.4" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.10%)</title><rect x="1145.5" y="1251.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.10%)</title><rect x="1145.5" y="1235.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.10%)</title><rect x="1145.5" y="1219.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.10%)</title><rect x="1145.5" y="1203.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.10%)</title><rect x="1145.5" y="1187.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 0.10%)</title><rect x="1145.5" y="1171.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.07%)</title><rect x="1145.6" y="1155.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.6" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.07%)</title><rect x="1145.6" y="1139.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.07%)</title><rect x="1145.6" y="1123.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.07%)</title><rect x="1145.6" y="1107.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.07%)</title><rect x="1145.6" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.06%)</title><rect x="1145.6" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.6" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.05%)</title><rect x="1145.8" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.8" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.05%)</title><rect x="1145.8" y="1043.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.05%)</title><rect x="1145.8" y="1027.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.05%)</title><rect x="1145.8" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.05%)</title><rect x="1145.8" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.04%)</title><rect x="1145.9" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.9" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.02%)</title><rect x="1145.9" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.9" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.02%)</title><rect x="1145.9" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.02%)</title><rect x="1145.9" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.02%)</title><rect x="1145.9" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.02%)</title><rect x="1145.9" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.02%)</title><rect x="1145.9" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (9 samples, 0.04%)</title><rect x="1147.3" y="1283.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.3" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (83 samples, 0.33%)</title><rect x="1148.1" y="1363.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.1" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (67 samples, 0.27%)</title><rect x="1148.2" y="1347.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.2" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (67 samples, 0.27%)</title><rect x="1148.2" y="1331.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (65 samples, 0.26%)</title><rect x="1148.2" y="1315.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (65 samples, 0.26%)</title><rect x="1148.2" y="1299.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (64 samples, 0.25%)</title><rect x="1148.3" y="1283.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.3" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (61 samples, 0.24%)</title><rect x="1148.3" y="1267.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.3" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (50 samples, 0.20%)</title><rect x="1148.5" y="1251.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (50 samples, 0.20%)</title><rect x="1148.5" y="1235.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (45 samples, 0.18%)</title><rect x="1148.6" y="1219.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (45 samples, 0.18%)</title><rect x="1148.6" y="1203.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (45 samples, 0.18%)</title><rect x="1148.6" y="1187.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (41 samples, 0.16%)</title><rect x="1148.7" y="1171.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.7" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (33 samples, 0.13%)</title><rect x="1148.9" y="1155.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.9" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (33 samples, 0.13%)</title><rect x="1148.9" y="1139.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (32 samples, 0.13%)</title><rect x="1148.9" y="1123.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (32 samples, 0.13%)</title><rect x="1148.9" y="1107.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (32 samples, 0.13%)</title><rect x="1148.9" y="1091.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (31 samples, 0.12%)</title><rect x="1148.9" y="1075.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.9" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (22 samples, 0.09%)</title><rect x="1149.1" y="1059.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.1" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (22 samples, 0.09%)</title><rect x="1149.1" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.09%)</title><rect x="1149.1" y="1027.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.09%)</title><rect x="1149.1" y="1011.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.09%)</title><rect x="1149.1" y="995.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (17 samples, 0.07%)</title><rect x="1149.1" y="979.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.1" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.06%)</title><rect x="1149.2" y="963.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.2" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.06%)</title><rect x="1149.2" y="947.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.06%)</title><rect x="1149.2" y="931.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.06%)</title><rect x="1149.2" y="915.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.06%)</title><rect x="1149.2" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.04%)</title><rect x="1149.2" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.2" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.04%)</title><rect x="1149.3" y="867.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.3" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.04%)</title><rect x="1149.3" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.03%)</title><rect x="1149.3" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.03%)</title><rect x="1149.3" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.03%)</title><rect x="1149.3" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.03%)</title><rect x="1149.4" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.02%)</title><rect x="1149.4" y="771.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.02%)</title><rect x="1149.4" y="755.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.02%)</title><rect x="1149.4" y="739.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.02%)</title><rect x="1149.4" y="723.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.02%)</title><rect x="1149.4" y="707.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.02%)</title><rect x="1149.4" y="691.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.02%)</title><rect x="1150.1" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.1" y="1070.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (12 samples, 0.05%)</title><rect x="1151.3" y="1347.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.3" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.05%)</title><rect x="1151.3" y="1331.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.3" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.05%)</title><rect x="1151.3" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.05%)</title><rect x="1151.3" y="1299.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.3" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.05%)</title><rect x="1151.3" y="1283.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.3" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.05%)</title><rect x="1151.3" y="1267.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.3" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.04%)</title><rect x="1151.3" y="1251.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.3" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.04%)</title><rect x="1151.3" y="1235.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.3" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.04%)</title><rect x="1151.3" y="1219.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.04%)</title><rect x="1151.3" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.04%)</title><rect x="1151.3" y="1187.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.04%)</title><rect x="1151.3" y="1171.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.04%)</title><rect x="1151.3" y="1155.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.03%)</title><rect x="1151.4" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.4" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.03%)</title><rect x="1151.4" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.03%)</title><rect x="1151.4" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.03%)</title><rect x="1151.4" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.03%)</title><rect x="1151.4" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.03%)</title><rect x="1151.4" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.4" y="1070.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (6 samples, 0.02%)</title><rect x="1152.3" y="1379.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.3" y="1390.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (6 samples, 0.02%)</title><rect x="1152.3" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.3" y="1374.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (9 samples, 0.04%)</title><rect x="1152.6" y="1379.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.6" y="1390.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (43 samples, 0.17%)</title><rect x="1153.9" y="1459.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="1470.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (21 samples, 0.08%)</title><rect x="1154.1" y="1443.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.1" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (16 samples, 0.06%)</title><rect x="1155.1" y="1443.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.1" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (21 samples, 0.08%)</title><rect x="1156.1" y="1459.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.1" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (17 samples, 0.07%)</title><rect x="1156.2" y="1443.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.2" y="1454.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (7 samples, 0.03%)</title><rect x="1156.7" y="1427.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.7" y="1438.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (502 samples, 1.99%)</title><rect x="1157.7" y="1491.0" width="23.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.7" y="1502.0">C..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (502 samples, 1.99%)</title><rect x="1157.7" y="1475.0" width="23.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.7" y="1486.0">C..</text>
</g>
<g>
<title>Compilation::compile_method() (501 samples, 1.99%)</title><rect x="1157.7" y="1459.0" width="23.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.7" y="1470.0">C..</text>
</g>
<g>
<title>Compilation::compile_java_method() (465 samples, 1.84%)</title><rect x="1157.7" y="1443.0" width="21.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.7" y="1454.0">C..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (223 samples, 0.88%)</title><rect x="1157.8" y="1427.0" width="10.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.8" y="1438.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (15 samples, 0.06%)</title><rect x="1157.9" y="1411.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.9" y="1422.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (8 samples, 0.03%)</title><rect x="1158.0" y="1395.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.0" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (8 samples, 0.03%)</title><rect x="1158.0" y="1379.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.0" y="1390.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (177 samples, 0.70%)</title><rect x="1158.6" y="1411.0" width="8.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.6" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (176 samples, 0.70%)</title><rect x="1158.6" y="1395.0" width="8.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.6" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (173 samples, 0.69%)</title><rect x="1158.7" y="1379.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.7" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (166 samples, 0.66%)</title><rect x="1159.0" y="1363.0" width="7.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.0" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (164 samples, 0.65%)</title><rect x="1159.0" y="1347.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.0" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (11 samples, 0.04%)</title><rect x="1159.4" y="1331.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.4" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (8 samples, 0.03%)</title><rect x="1159.5" y="1315.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.5" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (6 samples, 0.02%)</title><rect x="1159.5" y="1299.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.5" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (138 samples, 0.55%)</title><rect x="1160.1" y="1331.0" width="6.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.1" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (117 samples, 0.46%)</title><rect x="1160.2" y="1315.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.2" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (115 samples, 0.46%)</title><rect x="1160.3" y="1299.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.3" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (89 samples, 0.35%)</title><rect x="1160.6" y="1283.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.6" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (89 samples, 0.35%)</title><rect x="1160.6" y="1267.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.6" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (12 samples, 0.05%)</title><rect x="1160.7" y="1251.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.7" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (10 samples, 0.04%)</title><rect x="1160.8" y="1235.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.8" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (7 samples, 0.03%)</title><rect x="1160.8" y="1219.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.8" y="1230.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (7 samples, 0.03%)</title><rect x="1160.8" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.8" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (69 samples, 0.27%)</title><rect x="1161.4" y="1251.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.4" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (59 samples, 0.23%)</title><rect x="1161.5" y="1235.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.5" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (55 samples, 0.22%)</title><rect x="1161.5" y="1219.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.5" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (45 samples, 0.18%)</title><rect x="1161.5" y="1203.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.5" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (44 samples, 0.17%)</title><rect x="1161.6" y="1187.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.6" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (34 samples, 0.13%)</title><rect x="1161.9" y="1171.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.9" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (24 samples, 0.10%)</title><rect x="1161.9" y="1155.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.9" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 0.08%)</title><rect x="1162.0" y="1139.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.0" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (12 samples, 0.05%)</title><rect x="1162.0" y="1123.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.0" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (12 samples, 0.05%)</title><rect x="1162.0" y="1107.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.0" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (11 samples, 0.04%)</title><rect x="1162.0" y="1091.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.0" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.04%)</title><rect x="1162.1" y="1075.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.1" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.04%)</title><rect x="1162.1" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.1" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.03%)</title><rect x="1162.1" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.1" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.03%)</title><rect x="1162.1" y="1027.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.1" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.02%)</title><rect x="1162.1" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.1" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (7 samples, 0.03%)</title><rect x="1163.1" y="1155.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.1" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.03%)</title><rect x="1163.1" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.1" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.02%)</title><rect x="1163.1" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.1" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (6 samples, 0.02%)</title><rect x="1163.6" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.6" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (6 samples, 0.02%)</title><rect x="1163.6" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.6" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (11 samples, 0.04%)</title><rect x="1164.7" y="1283.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.7" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (6 samples, 0.02%)</title><rect x="1164.8" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.8" y="1278.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (6 samples, 0.02%)</title><rect x="1164.8" y="1251.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.8" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (6 samples, 0.02%)</title><rect x="1165.4" y="1283.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.4" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (17 samples, 0.07%)</title><rect x="1165.8" y="1315.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.8" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (17 samples, 0.07%)</title><rect x="1165.8" y="1299.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.8" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (17 samples, 0.07%)</title><rect x="1165.8" y="1283.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.8" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (11 samples, 0.04%)</title><rect x="1166.1" y="1267.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.1" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (10 samples, 0.04%)</title><rect x="1166.1" y="1251.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.1" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (10 samples, 0.04%)</title><rect x="1166.1" y="1235.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.1" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (10 samples, 0.04%)</title><rect x="1166.1" y="1219.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.1" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (7 samples, 0.03%)</title><rect x="1166.2" y="1203.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.2" y="1214.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (11 samples, 0.04%)</title><rect x="1167.3" y="1411.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.3" y="1422.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (11 samples, 0.04%)</title><rect x="1167.3" y="1395.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.3" y="1406.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (6 samples, 0.02%)</title><rect x="1167.5" y="1379.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.5" y="1390.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (72 samples, 0.29%)</title><rect x="1168.2" y="1427.0" width="3.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.2" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (50 samples, 0.20%)</title><rect x="1168.4" y="1411.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.4" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (13 samples, 0.05%)</title><rect x="1168.6" y="1395.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.6" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (11 samples, 0.04%)</title><rect x="1168.6" y="1379.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.6" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (9 samples, 0.04%)</title><rect x="1168.7" y="1363.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.7" y="1374.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (6 samples, 0.02%)</title><rect x="1168.7" y="1347.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.7" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (7 samples, 0.03%)</title><rect x="1169.3" y="1395.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.3" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (7 samples, 0.03%)</title><rect x="1170.1" y="1395.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.1" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (17 samples, 0.07%)</title><rect x="1170.7" y="1411.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.7" y="1422.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (9 samples, 0.04%)</title><rect x="1170.7" y="1395.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.7" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (8 samples, 0.03%)</title><rect x="1170.7" y="1379.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.7" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (8 samples, 0.03%)</title><rect x="1170.7" y="1363.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.7" y="1374.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (160 samples, 0.63%)</title><rect x="1171.6" y="1427.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.6" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (37 samples, 0.15%)</title><rect x="1171.6" y="1411.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.6" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (32 samples, 0.13%)</title><rect x="1171.8" y="1395.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.8" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (10 samples, 0.04%)</title><rect x="1172.0" y="1379.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.0" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (8 samples, 0.03%)</title><rect x="1172.1" y="1363.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="1374.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (122 samples, 0.48%)</title><rect x="1173.4" y="1411.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.4" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (32 samples, 0.13%)</title><rect x="1173.5" y="1395.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.5" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (28 samples, 0.11%)</title><rect x="1173.6" y="1379.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.6" y="1390.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (22 samples, 0.09%)</title><rect x="1173.9" y="1363.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.9" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (10 samples, 0.04%)</title><rect x="1173.9" y="1347.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.9" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (11 samples, 0.04%)</title><rect x="1174.3" y="1347.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.3" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::split_for_spilling(Interval*) (6 samples, 0.02%)</title><rect x="1174.6" y="1331.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.6" y="1342.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (36 samples, 0.14%)</title><rect x="1175.0" y="1395.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.0" y="1406.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (36 samples, 0.14%)</title><rect x="1175.0" y="1379.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.0" y="1390.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (7 samples, 0.03%)</title><rect x="1175.7" y="1363.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.7" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (14 samples, 0.06%)</title><rect x="1176.0" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.0" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (11 samples, 0.04%)</title><rect x="1176.2" y="1347.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.2" y="1358.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (31 samples, 0.12%)</title><rect x="1176.7" y="1395.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.7" y="1406.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (11 samples, 0.04%)</title><rect x="1178.2" y="1395.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.2" y="1406.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (6 samples, 0.02%)</title><rect x="1179.2" y="1427.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.2" y="1438.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (30 samples, 0.12%)</title><rect x="1179.8" y="1443.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (27 samples, 0.11%)</title><rect x="1179.9" y="1427.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.9" y="1438.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (7 samples, 0.03%)</title><rect x="1179.9" y="1411.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.9" y="1422.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (8 samples, 0.03%)</title><rect x="1180.2" y="1411.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.2" y="1422.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (7 samples, 0.03%)</title><rect x="1180.2" y="1395.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="1406.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (11 samples, 0.04%)</title><rect x="1180.6" y="1411.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.6" y="1422.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (7 samples, 0.03%)</title><rect x="1181.2" y="1491.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.2" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (13 samples, 0.05%)</title><rect x="1181.5" y="1491.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.5" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (13 samples, 0.05%)</title><rect x="1181.5" y="1475.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="1486.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (11 samples, 0.04%)</title><rect x="1181.6" y="1459.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="1470.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (10 samples, 0.04%)</title><rect x="1181.6" y="1443.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="1454.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (9 samples, 0.04%)</title><rect x="1181.7" y="1427.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.7" y="1438.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (7 samples, 0.03%)</title><rect x="1181.8" y="1411.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.8" y="1422.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (6 samples, 0.02%)</title><rect x="1182.1" y="1491.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.1" y="1502.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (8 samples, 0.03%)</title><rect x="1182.5" y="1507.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.5" y="1518.0"></text>
</g>
<g>
<title>CompileQueue::get() (12 samples, 0.05%)</title><rect x="1182.9" y="1507.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.9" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (19 samples, 0.08%)</title><rect x="1183.6" y="1523.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (17 samples, 0.07%)</title><rect x="1183.7" y="1507.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.7" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (17 samples, 0.07%)</title><rect x="1183.7" y="1491.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.7" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (14 samples, 0.06%)</title><rect x="1183.8" y="1475.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (9 samples, 0.04%)</title><rect x="1183.8" y="1459.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="1470.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (58 samples, 0.23%)</title><rect x="1184.5" y="1523.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.5" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (57 samples, 0.23%)</title><rect x="1184.5" y="1507.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.5" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (49 samples, 0.19%)</title><rect x="1184.6" y="1491.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="1502.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (14 samples, 0.06%)</title><rect x="1184.6" y="1475.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (8 samples, 0.03%)</title><rect x="1184.9" y="1459.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="1470.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (33 samples, 0.13%)</title><rect x="1185.4" y="1475.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1188.4" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (11 samples, 0.04%)</title><rect x="1185.7" y="1459.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (9 samples, 0.04%)</title><rect x="1185.7" y="1443.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.7" y="1454.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (11 samples, 0.04%)</title><rect x="1186.4" y="1459.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (6 samples, 0.02%)</title><rect x="1186.4" y="1443.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="1454.0"></text>
</g>
<g>
<title>VMThread::run() (41 samples, 0.16%)</title><rect x="1187.4" y="1555.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="1566.0"></text>
</g>
<g>
<title>VMThread::loop() (41 samples, 0.16%)</title><rect x="1187.4" y="1539.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="1550.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (14 samples, 0.06%)</title><rect x="1187.4" y="1523.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="1534.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (14 samples, 0.06%)</title><rect x="1188.1" y="1523.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="1534.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (14 samples, 0.06%)</title><rect x="1188.1" y="1507.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="1518.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (9 samples, 0.04%)</title><rect x="1188.3" y="1491.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (9 samples, 0.04%)</title><rect x="1188.3" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="1486.0"></text>
</g>
<g>
<title>__sched_yield (11 samples, 0.04%)</title><rect x="1188.8" y="1523.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1191.8" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="1189.0" y="1507.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1192.0" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="1189.0" y="1491.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.0" y="1502.0"></text>
</g>
<g>
<title>WatcherThread::run() (15 samples, 0.06%)</title><rect x="1189.3" y="1555.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.3" y="1566.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (7 samples, 0.03%)</title><rect x="1189.3" y="1539.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="1550.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (7 samples, 0.03%)</title><rect x="1189.7" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="1550.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (7 samples, 0.03%)</title><rect x="1189.7" y="1523.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="1534.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (7 samples, 0.03%)</title><rect x="1189.7" y="1507.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.7" y="1518.0"></text>
</g>
</g>
</svg>
