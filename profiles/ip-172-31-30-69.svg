<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (19,557 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.04%)</title><rect x="10.0" y="1603.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (20 samples, 0.10%)</title><rect x="10.5" y="1603.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="1614.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (14 samples, 0.07%)</title><rect x="10.7" y="1587.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1598.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (13 samples, 0.07%)</title><rect x="10.7" y="1571.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (9 samples, 0.05%)</title><rect x="10.9" y="1555.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.9" y="1566.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (8 samples, 0.04%)</title><rect x="10.9" y="1539.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.9" y="1550.0"></text>
</g>
<g>
<title>Method::load_signature_classes(methodHandle const&amp;, Thread*) (6 samples, 0.03%)</title><rect x="11.0" y="1523.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1534.0"></text>
</g>
<g>
<title>[deoptimization] (8 samples, 0.04%)</title><rect x="11.8" y="1603.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.8" y="1614.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.03%)</title><rect x="12.3" y="1603.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.3" y="1614.0"></text>
</g>
<g>
<title>[not_walkable_Java] (289 samples, 1.48%)</title><rect x="12.7" y="1603.0" width="17.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (286 samples, 1.46%)</title><rect x="12.8" y="1587.0" width="17.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.8" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (284 samples, 1.45%)</title><rect x="13.0" y="1571.0" width="17.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.0" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (284 samples, 1.45%)</title><rect x="13.0" y="1555.0" width="17.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="16.0" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 0.81%)</title><rect x="20.4" y="1539.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.4" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (152 samples, 0.78%)</title><rect x="20.4" y="1523.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.4" y="1534.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (7 samples, 0.04%)</title><rect x="24.2" y="1507.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.2" y="1518.0"></text>
</g>
<g>
<title>sys_clock_gettime (82 samples, 0.42%)</title><rect x="24.6" y="1507.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="27.6" y="1518.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.03%)</title><rect x="25.3" y="1491.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.3" y="1502.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (60 samples, 0.31%)</title><rect x="25.6" y="1491.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.6" y="1502.0"></text>
</g>
<g>
<title>ktime_get_ts64 (55 samples, 0.28%)</title><rect x="25.6" y="1475.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.6" y="1486.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (48 samples, 0.25%)</title><rect x="26.0" y="1459.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.0" y="1470.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (47 samples, 0.24%)</title><rect x="26.1" y="1443.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.1" y="1454.0"></text>
</g>
<g>
<title>put_timespec64 (6 samples, 0.03%)</title><rect x="29.2" y="1491.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.2" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="29.2" y="1475.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.2" y="1486.0"></text>
</g>
<g>
<title>sys_clock_gettime (7 samples, 0.04%)</title><rect x="29.6" y="1523.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.6" y="1534.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.24%)</title><rect x="30.1" y="1603.0" width="2.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="33.1" y="1614.0"></text>
</g>
<g>
<title>__clock_gettime (24 samples, 0.12%)</title><rect x="30.5" y="1587.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="33.5" y="1598.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (23 samples, 0.12%)</title><rect x="30.6" y="1571.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="33.6" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="31.4" y="1555.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.4" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="31.4" y="1539.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.4" y="1550.0"></text>
</g>
<g>
<title>sys_clock_gettime (7 samples, 0.04%)</title><rect x="31.5" y="1523.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.5" y="1534.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (5 samples, 0.03%)</title><rect x="31.6" y="1507.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="34.6" y="1518.0"></text>
</g>
<g>
<title>open64 (6 samples, 0.03%)</title><rect x="32.5" y="1587.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.5" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="32.6" y="1571.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.6" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="32.6" y="1555.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.6" y="1566.0"></text>
</g>
<g>
<title>sys_openat (5 samples, 0.03%)</title><rect x="32.6" y="1539.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.6" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (5 samples, 0.03%)</title><rect x="32.6" y="1523.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.6" y="1534.0"></text>
</g>
<g>
<title>[unknown_Java] (136 samples, 0.70%)</title><rect x="32.9" y="1603.0" width="8.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.9" y="1614.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (11 samples, 0.06%)</title><rect x="33.1" y="1587.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="36.1" y="1598.0"></text>
</g>
<g>
<title>Interpreter (27 samples, 0.14%)</title><rect x="33.8" y="1587.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="36.8" y="1598.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.08%)</title><rect x="35.6" y="1587.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="38.6" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.04%)</title><rect x="35.6" y="1571.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="38.6" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.03%)</title><rect x="35.7" y="1555.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="38.7" y="1566.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (8 samples, 0.04%)</title><rect x="36.1" y="1571.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="39.1" y="1582.0"></text>
</g>
<g>
<title>itable stub (22 samples, 0.11%)</title><rect x="38.1" y="1587.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="41.1" y="1598.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (8 samples, 0.04%)</title><rect x="40.4" y="1587.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="43.4" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (88 samples, 0.45%)</title><rect x="42.0" y="1603.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.0" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (70 samples, 0.36%)</title><rect x="42.5" y="1587.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.5" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (69 samples, 0.35%)</title><rect x="42.6" y="1571.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.6" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (68 samples, 0.35%)</title><rect x="42.6" y="1555.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.6" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (68 samples, 0.35%)</title><rect x="42.6" y="1539.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.6" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (34 samples, 0.17%)</title><rect x="42.8" y="1523.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.8" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (33 samples, 0.17%)</title><rect x="42.8" y="1507.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.8" y="1518.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (33 samples, 0.17%)</title><rect x="42.8" y="1491.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.8" y="1502.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (33 samples, 0.17%)</title><rect x="42.8" y="1475.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.8" y="1486.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (33 samples, 0.17%)</title><rect x="42.8" y="1459.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.8" y="1470.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (33 samples, 0.17%)</title><rect x="42.8" y="1443.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.8" y="1454.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 0.04%)</title><rect x="42.8" y="1427.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="45.8" y="1438.0"></text>
</g>
<g>
<title>writeBytes (7 samples, 0.04%)</title><rect x="42.8" y="1411.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="45.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.13%)</title><rect x="43.2" y="1427.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="46.2" y="1438.0"></text>
</g>
<g>
<title>__write (26 samples, 0.13%)</title><rect x="43.2" y="1411.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="46.2" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.13%)</title><rect x="43.3" y="1395.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.3" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.13%)</title><rect x="43.3" y="1379.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.3" y="1390.0"></text>
</g>
<g>
<title>sys_write (25 samples, 0.13%)</title><rect x="43.3" y="1363.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.3" y="1374.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.12%)</title><rect x="43.4" y="1347.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.4" y="1358.0"></text>
</g>
<g>
<title>__vfs_write (20 samples, 0.10%)</title><rect x="43.5" y="1331.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.5" y="1342.0"></text>
</g>
<g>
<title>new_sync_write (20 samples, 0.10%)</title><rect x="43.5" y="1315.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.5" y="1326.0"></text>
</g>
<g>
<title>ext4_file_write_iter (17 samples, 0.09%)</title><rect x="43.6" y="1299.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.6" y="1310.0"></text>
</g>
<g>
<title>__generic_file_write_iter (17 samples, 0.09%)</title><rect x="43.6" y="1283.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.6" y="1294.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 0.07%)</title><rect x="43.8" y="1267.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.8" y="1278.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.03%)</title><rect x="43.9" y="1251.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.9" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (30 samples, 0.15%)</title><rect x="44.9" y="1523.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.9" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (30 samples, 0.15%)</title><rect x="44.9" y="1507.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.9" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (11 samples, 0.06%)</title><rect x="44.9" y="1491.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.9" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (11 samples, 0.06%)</title><rect x="44.9" y="1475.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.9" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (8 samples, 0.04%)</title><rect x="45.1" y="1459.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.1" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (6 samples, 0.03%)</title><rect x="45.2" y="1443.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.2" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (6 samples, 0.03%)</title><rect x="45.2" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.2" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (6 samples, 0.03%)</title><rect x="45.2" y="1411.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.2" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (5 samples, 0.03%)</title><rect x="45.2" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.2" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (18 samples, 0.09%)</title><rect x="45.5" y="1491.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.5" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (18 samples, 0.09%)</title><rect x="45.5" y="1475.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.5" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (17 samples, 0.09%)</title><rect x="45.6" y="1459.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (17 samples, 0.09%)</title><rect x="45.6" y="1443.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.6" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (12 samples, 0.06%)</title><rect x="45.6" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.6" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (12 samples, 0.06%)</title><rect x="45.6" y="1411.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.6" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (12 samples, 0.06%)</title><rect x="45.6" y="1395.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initialize (6 samples, 0.03%)</title><rect x="45.7" y="1379.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="1390.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (5 samples, 0.03%)</title><rect x="46.3" y="1427.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.3" y="1438.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (5 samples, 0.03%)</title><rect x="46.3" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.3" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (5 samples, 0.03%)</title><rect x="46.3" y="1395.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.3" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (5 samples, 0.03%)</title><rect x="46.3" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.3" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (5 samples, 0.03%)</title><rect x="46.3" y="1363.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 0.05%)</title><rect x="46.7" y="1587.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.7" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.05%)</title><rect x="46.7" y="1571.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.05%)</title><rect x="46.8" y="1555.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.05%)</title><rect x="46.8" y="1539.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="1550.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="46.9" y="1523.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.9" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.04%)</title><rect x="46.9" y="1507.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="49.9" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="47.0" y="1491.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.0" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="47.0" y="1475.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="50.0" y="1486.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.03%)</title><rect x="47.0" y="1459.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.0" y="1470.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="47.0" y="1443.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,057 samples, 20.74%)</title><rect x="47.8" y="1603.0" width="244.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.8" y="1614.0">java/lang/Thread.run</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (160 samples, 0.82%)</title><rect x="47.8" y="1587.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.8" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (160 samples, 0.82%)</title><rect x="47.8" y="1571.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.8" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (27 samples, 0.14%)</title><rect x="47.9" y="1555.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.9" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (18 samples, 0.09%)</title><rect x="48.4" y="1539.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.4" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (102 samples, 0.52%)</title><rect x="49.5" y="1555.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (84 samples, 0.43%)</title><rect x="50.5" y="1539.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.5" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (84 samples, 0.43%)</title><rect x="50.5" y="1523.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.5" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (84 samples, 0.43%)</title><rect x="50.5" y="1507.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (84 samples, 0.43%)</title><rect x="50.5" y="1491.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.5" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (84 samples, 0.43%)</title><rect x="50.5" y="1475.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (83 samples, 0.42%)</title><rect x="50.5" y="1459.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (83 samples, 0.42%)</title><rect x="50.5" y="1443.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.5" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (83 samples, 0.42%)</title><rect x="50.5" y="1427.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (83 samples, 0.42%)</title><rect x="50.5" y="1411.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (83 samples, 0.42%)</title><rect x="50.5" y="1395.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.&lt;init&gt; (32 samples, 0.16%)</title><rect x="50.5" y="1379.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (51 samples, 0.26%)</title><rect x="52.5" y="1379.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (51 samples, 0.26%)</title><rect x="52.5" y="1363.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (50 samples, 0.26%)</title><rect x="52.5" y="1347.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (49 samples, 0.25%)</title><rect x="52.6" y="1331.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.25%)</title><rect x="52.6" y="1315.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 0.22%)</title><rect x="52.9" y="1299.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.9" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (42 samples, 0.21%)</title><rect x="53.0" y="1283.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="56.0" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.20%)</title><rect x="53.2" y="1267.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="56.2" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.20%)</title><rect x="53.2" y="1251.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="56.2" y="1262.0"></text>
</g>
<g>
<title>sys_futex (39 samples, 0.20%)</title><rect x="53.2" y="1235.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="56.2" y="1246.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.20%)</title><rect x="53.2" y="1219.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="56.2" y="1230.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.20%)</title><rect x="53.2" y="1203.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="56.2" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 0.19%)</title><rect x="53.3" y="1187.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.3" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.19%)</title><rect x="53.3" y="1171.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="56.3" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 0.19%)</title><rect x="53.3" y="1155.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (29 samples, 0.15%)</title><rect x="55.7" y="1555.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (29 samples, 0.15%)</title><rect x="55.7" y="1539.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.7" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (7 samples, 0.04%)</title><rect x="55.7" y="1523.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.06%)</title><rect x="56.2" y="1523.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="59.2" y="1534.0"></text>
</g>
<g>
<title>__clock_gettime (12 samples, 0.06%)</title><rect x="56.2" y="1507.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="59.2" y="1518.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (12 samples, 0.06%)</title><rect x="56.2" y="1491.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="59.2" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.04%)</title><rect x="56.9" y="1523.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="59.9" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="56.9" y="1507.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.9" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="56.9" y="1491.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.9" y="1502.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="56.9" y="1475.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="59.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,895 samples, 19.92%)</title><rect x="57.5" y="1587.0" width="235.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.5" y="1598.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,895 samples, 19.92%)</title><rect x="57.5" y="1571.0" width="235.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.5" y="1582.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (126 samples, 0.64%)</title><rect x="58.3" y="1555.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.3" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (123 samples, 0.63%)</title><rect x="58.4" y="1539.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.4" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (123 samples, 0.63%)</title><rect x="58.4" y="1523.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.4" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (121 samples, 0.62%)</title><rect x="58.5" y="1507.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.5" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (120 samples, 0.61%)</title><rect x="58.6" y="1491.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.6" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (120 samples, 0.61%)</title><rect x="58.6" y="1475.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.6" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (120 samples, 0.61%)</title><rect x="58.6" y="1459.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.6" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (120 samples, 0.61%)</title><rect x="58.6" y="1443.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.6" y="1454.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (113 samples, 0.58%)</title><rect x="59.0" y="1427.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.0" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (113 samples, 0.58%)</title><rect x="59.0" y="1411.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.0" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (113 samples, 0.58%)</title><rect x="59.0" y="1395.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.0" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (108 samples, 0.55%)</title><rect x="59.1" y="1379.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (107 samples, 0.55%)</title><rect x="59.1" y="1363.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.1" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (107 samples, 0.55%)</title><rect x="59.1" y="1347.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.1" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (107 samples, 0.55%)</title><rect x="59.1" y="1331.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.1" y="1342.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (6 samples, 0.03%)</title><rect x="59.2" y="1315.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="62.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.37%)</title><rect x="59.6" y="1315.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="62.6" y="1326.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (6 samples, 0.03%)</title><rect x="59.6" y="1299.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="62.6" y="1310.0"></text>
</g>
<g>
<title>__connect (7 samples, 0.04%)</title><rect x="60.4" y="1299.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="63.4" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="60.6" y="1283.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.6" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="60.6" y="1267.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.6" y="1278.0"></text>
</g>
<g>
<title>sys_connect (5 samples, 0.03%)</title><rect x="60.6" y="1251.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="63.6" y="1262.0"></text>
</g>
<g>
<title>SYSC_connect (5 samples, 0.03%)</title><rect x="60.6" y="1235.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.6" y="1246.0"></text>
</g>
<g>
<title>__sendmmsg (47 samples, 0.24%)</title><rect x="61.0" y="1299.0" width="2.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="64.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.24%)</title><rect x="61.0" y="1283.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="64.0" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.24%)</title><rect x="61.0" y="1267.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.0" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (47 samples, 0.24%)</title><rect x="61.0" y="1251.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.0" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (47 samples, 0.24%)</title><rect x="61.0" y="1235.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="64.0" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (45 samples, 0.23%)</title><rect x="61.0" y="1219.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.0" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (43 samples, 0.22%)</title><rect x="61.2" y="1203.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="64.2" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (42 samples, 0.21%)</title><rect x="61.2" y="1187.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.2" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (41 samples, 0.21%)</title><rect x="61.2" y="1171.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.2" y="1182.0"></text>
</g>
<g>
<title>ip_make_skb (5 samples, 0.03%)</title><rect x="61.2" y="1155.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.2" y="1166.0"></text>
</g>
<g>
<title>udp_send_skb (36 samples, 0.18%)</title><rect x="61.5" y="1155.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.5" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (36 samples, 0.18%)</title><rect x="61.5" y="1139.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.5" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (35 samples, 0.18%)</title><rect x="61.6" y="1123.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="64.6" y="1134.0"></text>
</g>
<g>
<title>ip_output (34 samples, 0.17%)</title><rect x="61.6" y="1107.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="64.6" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (34 samples, 0.17%)</title><rect x="61.6" y="1091.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.6" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 0.17%)</title><rect x="61.6" y="1075.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="64.6" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (27 samples, 0.14%)</title><rect x="61.8" y="1059.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.8" y="1070.0"></text>
</g>
<g>
<title>do_softirq.part.17 (26 samples, 0.13%)</title><rect x="61.8" y="1043.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.8" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 0.13%)</title><rect x="61.8" y="1027.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="64.8" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 0.13%)</title><rect x="61.8" y="1011.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.8" y="1022.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.13%)</title><rect x="61.9" y="995.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.9" y="1006.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.13%)</title><rect x="61.9" y="979.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.9" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (25 samples, 0.13%)</title><rect x="61.9" y="963.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="64.9" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (25 samples, 0.13%)</title><rect x="61.9" y="947.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.9" y="958.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.13%)</title><rect x="61.9" y="931.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.9" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 0.13%)</title><rect x="61.9" y="915.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.9" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.12%)</title><rect x="61.9" y="899.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.9" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 0.12%)</title><rect x="61.9" y="883.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.9" y="894.0"></text>
</g>
<g>
<title>udp_rcv (24 samples, 0.12%)</title><rect x="61.9" y="867.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.9" y="878.0"></text>
</g>
<g>
<title>__udp4_lib_rcv (24 samples, 0.12%)</title><rect x="61.9" y="851.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="64.9" y="862.0"></text>
</g>
<g>
<title>udp_unicast_rcv_skb (22 samples, 0.11%)</title><rect x="62.0" y="835.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="65.0" y="846.0"></text>
</g>
<g>
<title>udp_queue_rcv_skb (22 samples, 0.11%)</title><rect x="62.0" y="819.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.0" y="830.0"></text>
</g>
<g>
<title>__udp_enqueue_schedule_skb (20 samples, 0.10%)</title><rect x="62.0" y="803.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.0" y="814.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.10%)</title><rect x="62.0" y="787.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.0" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.10%)</title><rect x="62.0" y="771.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="65.0" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.10%)</title><rect x="62.0" y="755.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.10%)</title><rect x="62.0" y="739.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.0" y="750.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.03%)</title><rect x="63.4" y="1059.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="66.4" y="1070.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="63.4" y="1043.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.4" y="1054.0"></text>
</g>
<g>
<title>__read_nocancel (6 samples, 0.03%)</title><rect x="64.1" y="1315.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="67.1" y="1326.0"></text>
</g>
<g>
<title>poll (12 samples, 0.06%)</title><rect x="64.4" y="1315.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="67.4" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="64.4" y="1299.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.4" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="64.4" y="1283.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="67.4" y="1294.0"></text>
</g>
<g>
<title>sys_poll (11 samples, 0.06%)</title><rect x="64.5" y="1267.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.5" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (8 samples, 0.04%)</title><rect x="64.5" y="1251.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.5" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (1,231 samples, 6.29%)</title><rect x="65.9" y="1555.0" width="74.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.9" y="1566.0">akka/dis..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (1,231 samples, 6.29%)</title><rect x="65.9" y="1539.0" width="74.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.9" y="1550.0">akka/uti..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (1,231 samples, 6.29%)</title><rect x="65.9" y="1523.0" width="74.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.9" y="1534.0">akka/uti..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (1,123 samples, 5.74%)</title><rect x="66.5" y="1507.0" width="67.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.5" y="1518.0">akka/io..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (1,106 samples, 5.66%)</title><rect x="66.8" y="1491.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.8" y="1502.0">akka/io..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (1,106 samples, 5.66%)</title><rect x="66.8" y="1475.0" width="66.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.8" y="1486.0">akka/io..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (377 samples, 1.93%)</title><rect x="67.6" y="1459.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="1470.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (377 samples, 1.93%)</title><rect x="67.6" y="1443.0" width="22.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.6" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (377 samples, 1.93%)</title><rect x="67.6" y="1427.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.6" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (377 samples, 1.93%)</title><rect x="67.6" y="1411.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.6" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (364 samples, 1.86%)</title><rect x="67.7" y="1395.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.7" y="1406.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (364 samples, 1.86%)</title><rect x="67.7" y="1379.0" width="21.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.7" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (364 samples, 1.86%)</title><rect x="67.7" y="1363.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.7" y="1374.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (363 samples, 1.86%)</title><rect x="67.7" y="1347.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="1358.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (354 samples, 1.81%)</title><rect x="67.7" y="1331.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.7" y="1342.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (345 samples, 1.76%)</title><rect x="68.0" y="1315.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (345 samples, 1.76%)</title><rect x="68.0" y="1299.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (345 samples, 1.76%)</title><rect x="68.0" y="1283.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (345 samples, 1.76%)</title><rect x="68.0" y="1267.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (345 samples, 1.76%)</title><rect x="68.0" y="1251.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (345 samples, 1.76%)</title><rect x="68.0" y="1235.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (342 samples, 1.75%)</title><rect x="68.2" y="1219.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (342 samples, 1.75%)</title><rect x="68.2" y="1203.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (342 samples, 1.75%)</title><rect x="68.2" y="1187.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (328 samples, 1.68%)</title><rect x="69.0" y="1171.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.0" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (29 samples, 0.15%)</title><rect x="69.2" y="1155.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="72.2" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.03%)</title><rect x="70.0" y="1139.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.0" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="70.9" y="1155.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.9" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (288 samples, 1.47%)</title><rect x="71.4" y="1155.0" width="17.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="74.4" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (264 samples, 1.35%)</title><rect x="72.9" y="1139.0" width="15.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.9" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (263 samples, 1.34%)</title><rect x="72.9" y="1123.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.9" y="1134.0"></text>
</g>
<g>
<title>sys_futex (252 samples, 1.29%)</title><rect x="73.5" y="1107.0" width="15.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.5" y="1118.0"></text>
</g>
<g>
<title>do_futex (250 samples, 1.28%)</title><rect x="73.6" y="1091.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.6" y="1102.0"></text>
</g>
<g>
<title>futex_wake (246 samples, 1.26%)</title><rect x="73.6" y="1075.0" width="14.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.03%)</title><rect x="74.1" y="1059.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="77.1" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (231 samples, 1.18%)</title><rect x="74.5" y="1059.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.5" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (231 samples, 1.18%)</title><rect x="74.5" y="1043.0" width="13.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.5" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (231 samples, 1.18%)</title><rect x="74.5" y="1027.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (9 samples, 0.05%)</title><rect x="89.1" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (9 samples, 0.05%)</title><rect x="89.1" y="1315.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (9 samples, 0.05%)</title><rect x="89.1" y="1299.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (9 samples, 0.05%)</title><rect x="89.1" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (9 samples, 0.05%)</title><rect x="89.1" y="1267.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (9 samples, 0.05%)</title><rect x="89.1" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (7 samples, 0.04%)</title><rect x="89.2" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (11 samples, 0.06%)</title><rect x="89.6" y="1395.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (5 samples, 0.03%)</title><rect x="89.6" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope.&lt;init&gt; (6 samples, 0.03%)</title><rect x="89.9" y="1379.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (5 samples, 0.03%)</title><rect x="90.4" y="1459.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.4" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (5 samples, 0.03%)</title><rect x="90.4" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.4" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (657 samples, 3.36%)</title><rect x="91.0" y="1459.0" width="39.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.0" y="1470.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (657 samples, 3.36%)</title><rect x="91.0" y="1443.0" width="39.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.0" y="1454.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (637 samples, 3.26%)</title><rect x="92.2" y="1427.0" width="38.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.2" y="1438.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (191 samples, 0.98%)</title><rect x="93.3" y="1411.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (177 samples, 0.91%)</title><rect x="93.8" y="1395.0" width="10.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="96.8" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (174 samples, 0.89%)</title><rect x="94.0" y="1379.0" width="10.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="97.0" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (147 samples, 0.75%)</title><rect x="95.6" y="1363.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.6" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (143 samples, 0.73%)</title><rect x="95.6" y="1347.0" width="8.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.6" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (136 samples, 0.70%)</title><rect x="96.0" y="1331.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.0" y="1342.0"></text>
</g>
<g>
<title>ep_poll (132 samples, 0.67%)</title><rect x="96.2" y="1315.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.2" y="1326.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="96.6" y="1299.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.6" y="1310.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (24 samples, 0.12%)</title><rect x="97.1" y="1299.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.1" y="1310.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.09%)</title><rect x="97.4" y="1283.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.4" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (13 samples, 0.07%)</title><rect x="97.7" y="1267.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.7" y="1278.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.03%)</title><rect x="98.1" y="1251.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="101.1" y="1262.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.03%)</title><rect x="98.6" y="1299.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.6" y="1310.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (5 samples, 0.03%)</title><rect x="98.6" y="1283.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.6" y="1294.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (5 samples, 0.03%)</title><rect x="98.6" y="1267.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.6" y="1278.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (74 samples, 0.38%)</title><rect x="98.9" y="1299.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.9" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (73 samples, 0.37%)</title><rect x="99.0" y="1283.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="102.0" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (10 samples, 0.05%)</title><rect x="99.1" y="1267.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="102.1" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="99.1" y="1251.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.1" y="1262.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (8 samples, 0.04%)</title><rect x="99.7" y="1267.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.7" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="99.8" y="1251.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.8" y="1262.0"></text>
</g>
<g>
<title>schedule (54 samples, 0.28%)</title><rect x="100.1" y="1267.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="103.1" y="1278.0"></text>
</g>
<g>
<title>__schedule (54 samples, 0.28%)</title><rect x="100.1" y="1251.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.1" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (53 samples, 0.27%)</title><rect x="100.2" y="1235.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="103.2" y="1246.0"></text>
</g>
<g>
<title>select_estimate_accuracy (9 samples, 0.05%)</title><rect x="103.5" y="1299.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.5" y="1310.0"></text>
</g>
<g>
<title>ktime_get_ts64 (6 samples, 0.03%)</title><rect x="103.6" y="1283.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (92 samples, 0.47%)</title><rect x="104.8" y="1411.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.8" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.06%)</title><rect x="105.1" y="1395.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.05%)</title><rect x="105.1" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (62 samples, 0.32%)</title><rect x="106.1" y="1395.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.1" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (57 samples, 0.29%)</title><rect x="106.4" y="1379.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.21%)</title><rect x="106.4" y="1363.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="109.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.20%)</title><rect x="106.4" y="1347.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="109.4" y="1358.0"></text>
</g>
<g>
<title>__read (37 samples, 0.19%)</title><rect x="106.5" y="1331.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="109.5" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.15%)</title><rect x="107.0" y="1315.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.0" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.14%)</title><rect x="107.0" y="1299.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.0" y="1310.0"></text>
</g>
<g>
<title>sys_read (24 samples, 0.12%)</title><rect x="107.3" y="1283.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.3" y="1294.0"></text>
</g>
<g>
<title>vfs_read (20 samples, 0.10%)</title><rect x="107.5" y="1267.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.5" y="1278.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.07%)</title><rect x="107.6" y="1251.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.6" y="1262.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.07%)</title><rect x="107.6" y="1235.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="110.6" y="1246.0"></text>
</g>
<g>
<title>pipe_read (11 samples, 0.06%)</title><rect x="107.7" y="1219.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.7" y="1230.0"></text>
</g>
<g>
<title>__read (13 samples, 0.07%)</title><rect x="109.0" y="1363.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="112.0" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="109.3" y="1347.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.3" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="109.3" y="1331.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.3" y="1342.0"></text>
</g>
<g>
<title>sys_read (8 samples, 0.04%)</title><rect x="109.3" y="1315.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.3" y="1326.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.03%)</title><rect x="109.4" y="1299.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.05%)</title><rect x="109.8" y="1395.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (237 samples, 1.21%)</title><rect x="110.4" y="1411.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (5 samples, 0.03%)</title><rect x="111.1" y="1395.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (14 samples, 0.07%)</title><rect x="111.4" y="1395.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.06%)</title><rect x="111.5" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (5 samples, 0.03%)</title><rect x="111.9" y="1363.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (206 samples, 1.05%)</title><rect x="112.3" y="1395.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.3" y="1406.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_ctl (7 samples, 0.04%)</title><rect x="112.6" y="1379.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="115.6" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (193 samples, 0.99%)</title><rect x="113.1" y="1379.0" width="11.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="116.1" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (164 samples, 0.84%)</title><rect x="114.7" y="1363.0" width="9.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.7" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (161 samples, 0.82%)</title><rect x="114.7" y="1347.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="117.7" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (142 samples, 0.73%)</title><rect x="115.9" y="1331.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.9" y="1342.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.06%)</title><rect x="118.5" y="1315.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.5" y="1326.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.06%)</title><rect x="118.5" y="1299.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="121.5" y="1310.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="118.7" y="1283.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.7" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (19 samples, 0.10%)</title><rect x="119.5" y="1315.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.5" y="1326.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.06%)</title><rect x="119.8" y="1299.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="122.8" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.05%)</title><rect x="119.9" y="1283.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="122.9" y="1294.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (6 samples, 0.03%)</title><rect x="120.1" y="1267.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.1" y="1278.0"></text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.03%)</title><rect x="120.1" y="1251.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.1" y="1262.0"></text>
</g>
<g>
<title>ep_remove (37 samples, 0.19%)</title><rect x="120.6" y="1315.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="123.6" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (21 samples, 0.11%)</title><rect x="121.0" y="1299.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="124.0" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.05%)</title><rect x="121.3" y="1283.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.3" y="1294.0"></text>
</g>
<g>
<title>remove_wait_queue (6 samples, 0.03%)</title><rect x="121.9" y="1283.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="124.9" y="1294.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="121.9" y="1267.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="124.9" y="1278.0"></text>
</g>
<g>
<title>rb_erase_cached (10 samples, 0.05%)</title><rect x="122.2" y="1299.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="125.2" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_alloc (16 samples, 0.08%)</title><rect x="122.9" y="1315.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.9" y="1326.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (11 samples, 0.06%)</title><rect x="123.1" y="1299.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="126.1" y="1310.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (10 samples, 0.05%)</title><rect x="123.2" y="1283.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (10 samples, 0.05%)</title><rect x="124.7" y="1411.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.7" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (9 samples, 0.05%)</title><rect x="125.3" y="1411.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.3" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (8 samples, 0.04%)</title><rect x="125.4" y="1395.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.4" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.04%)</title><rect x="125.4" y="1379.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (79 samples, 0.40%)</title><rect x="125.8" y="1411.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.remove (6 samples, 0.03%)</title><rect x="126.4" y="1395.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (5 samples, 0.03%)</title><rect x="126.4" y="1379.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (5 samples, 0.03%)</title><rect x="126.4" y="1363.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.4" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (14 samples, 0.07%)</title><rect x="126.8" y="1395.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (12 samples, 0.06%)</title><rect x="126.9" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (12 samples, 0.06%)</title><rect x="126.9" y="1363.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="129.9" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="127.0" y="1347.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.0" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="127.0" y="1331.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.0" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (8 samples, 0.04%)</title><rect x="127.1" y="1315.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (50 samples, 0.26%)</title><rect x="127.6" y="1395.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (49 samples, 0.25%)</title><rect x="127.7" y="1379.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.7" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (49 samples, 0.25%)</title><rect x="127.7" y="1363.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.7" y="1374.0"></text>
</g>
<g>
<title>close (48 samples, 0.25%)</title><rect x="127.7" y="1347.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="130.7" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.22%)</title><rect x="128.0" y="1331.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.0" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.22%)</title><rect x="128.0" y="1315.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="131.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (40 samples, 0.20%)</title><rect x="128.0" y="1299.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.0" y="1310.0"></text>
</g>
<g>
<title>task_work_run (40 samples, 0.20%)</title><rect x="128.0" y="1283.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="131.0" y="1294.0"></text>
</g>
<g>
<title>____fput (40 samples, 0.20%)</title><rect x="128.0" y="1267.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.0" y="1278.0"></text>
</g>
<g>
<title>__fput (40 samples, 0.20%)</title><rect x="128.0" y="1251.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="131.0" y="1262.0"></text>
</g>
<g>
<title>dput (10 samples, 0.05%)</title><rect x="128.1" y="1235.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="131.1" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (10 samples, 0.05%)</title><rect x="128.1" y="1219.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="131.1" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (10 samples, 0.05%)</title><rect x="128.1" y="1203.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.1" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (10 samples, 0.05%)</title><rect x="128.1" y="1187.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.1" y="1198.0"></text>
</g>
<g>
<title>iput (8 samples, 0.04%)</title><rect x="128.2" y="1171.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.2" y="1182.0"></text>
</g>
<g>
<title>evict (7 samples, 0.04%)</title><rect x="128.3" y="1155.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.3" y="1166.0"></text>
</g>
<g>
<title>destroy_inode (5 samples, 0.03%)</title><rect x="128.3" y="1139.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.3" y="1150.0"></text>
</g>
<g>
<title>sock_close (28 samples, 0.14%)</title><rect x="128.7" y="1235.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="131.7" y="1246.0"></text>
</g>
<g>
<title>__sock_release (27 samples, 0.14%)</title><rect x="128.8" y="1219.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="131.8" y="1230.0"></text>
</g>
<g>
<title>inet6_release (25 samples, 0.13%)</title><rect x="128.9" y="1203.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.9" y="1214.0"></text>
</g>
<g>
<title>inet_release (25 samples, 0.13%)</title><rect x="128.9" y="1187.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.9" y="1198.0"></text>
</g>
<g>
<title>tcp_close (25 samples, 0.13%)</title><rect x="128.9" y="1171.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="131.9" y="1182.0"></text>
</g>
<g>
<title>tcp_disconnect (19 samples, 0.10%)</title><rect x="129.2" y="1155.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="132.2" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (15 samples, 0.08%)</title><rect x="129.3" y="1139.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.3" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (11 samples, 0.06%)</title><rect x="129.5" y="1123.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.5" y="1134.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.03%)</title><rect x="129.6" y="1107.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.6" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.03%)</title><rect x="129.6" y="1091.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="132.6" y="1102.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.03%)</title><rect x="129.6" y="1075.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.6" y="1086.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.03%)</title><rect x="129.6" y="1059.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.6" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="129.7" y="1043.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="132.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (49 samples, 0.25%)</title><rect x="130.6" y="1459.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (49 samples, 0.25%)</title><rect x="130.6" y="1443.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.6" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.07%)</title><rect x="130.9" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.9" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (11 samples, 0.06%)</title><rect x="131.0" y="1411.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.0" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="131.2" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.2" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.iterator (12 samples, 0.06%)</title><rect x="131.7" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.7" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeyIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="131.9" y="1411.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.9" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.keySet (18 samples, 0.09%)</title><rect x="132.4" y="1427.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.4" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedKeySet.&lt;init&gt; (8 samples, 0.04%)</title><rect x="133.0" y="1411.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.0" y="1422.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (8 samples, 0.04%)</title><rect x="133.0" y="1395.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.0" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (8 samples, 0.04%)</title><rect x="133.0" y="1379.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.0" y="1390.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (12 samples, 0.06%)</title><rect x="133.6" y="1491.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.6" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (12 samples, 0.06%)</title><rect x="133.6" y="1475.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.6" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (91 samples, 0.47%)</title><rect x="134.3" y="1507.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.3" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (21 samples, 0.11%)</title><rect x="134.4" y="1491.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (12 samples, 0.06%)</title><rect x="134.4" y="1475.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.06%)</title><rect x="134.4" y="1459.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.06%)</title><rect x="134.4" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.06%)</title><rect x="134.4" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.06%)</title><rect x="134.4" y="1411.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (12 samples, 0.06%)</title><rect x="134.4" y="1395.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (12 samples, 0.06%)</title><rect x="134.4" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.4" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (12 samples, 0.06%)</title><rect x="134.4" y="1363.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.4" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.05%)</title><rect x="134.4" y="1347.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.05%)</title><rect x="134.4" y="1331.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.05%)</title><rect x="134.4" y="1315.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.05%)</title><rect x="134.4" y="1299.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.05%)</title><rect x="134.4" y="1283.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.05%)</title><rect x="134.4" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.05%)</title><rect x="134.4" y="1251.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.05%)</title><rect x="134.4" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.05%)</title><rect x="134.4" y="1219.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.05%)</title><rect x="134.4" y="1203.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.05%)</title><rect x="134.4" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.4" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.05%)</title><rect x="134.5" y="1171.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="137.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="134.5" y="1155.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="137.5" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="134.5" y="1139.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.5" y="1150.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.04%)</title><rect x="134.5" y="1123.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="137.5" y="1134.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.04%)</title><rect x="134.5" y="1107.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.5" y="1118.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.04%)</title><rect x="134.5" y="1091.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.5" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="134.6" y="1075.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.6" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="134.6" y="1059.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.6" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="134.6" y="1043.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (6 samples, 0.03%)</title><rect x="135.3" y="1475.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.3" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (6 samples, 0.03%)</title><rect x="135.3" y="1459.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (5 samples, 0.03%)</title><rect x="135.3" y="1443.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (5 samples, 0.03%)</title><rect x="135.3" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.3" y="1438.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$6.tryRun (7 samples, 0.04%)</title><rect x="135.6" y="1491.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.6" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (21 samples, 0.11%)</title><rect x="136.0" y="1491.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.0" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$runThunk (5 samples, 0.03%)</title><rect x="136.2" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.2" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (5 samples, 0.03%)</title><rect x="136.2" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.03%)</title><rect x="136.2" y="1443.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.2" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.03%)</title><rect x="136.2" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="136.2" y="1411.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="139.2" y="1422.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (14 samples, 0.07%)</title><rect x="136.5" y="1475.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.5" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (14 samples, 0.07%)</title><rect x="136.5" y="1459.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.5" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1017/611085928.apply$mcV$sp (10 samples, 0.05%)</title><rect x="136.7" y="1443.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.7" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (10 samples, 0.05%)</title><rect x="136.7" y="1427.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.7" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (8 samples, 0.04%)</title><rect x="136.7" y="1411.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.7" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (7 samples, 0.04%)</title><rect x="136.8" y="1395.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (6 samples, 0.03%)</title><rect x="136.8" y="1379.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (41 samples, 0.21%)</title><rect x="137.3" y="1491.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.3" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1015/631359278.apply$mcV$sp (40 samples, 0.20%)</title><rect x="137.3" y="1475.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.3" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (39 samples, 0.20%)</title><rect x="137.3" y="1459.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.3" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (39 samples, 0.20%)</title><rect x="137.3" y="1443.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (39 samples, 0.20%)</title><rect x="137.3" y="1427.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (39 samples, 0.20%)</title><rect x="137.3" y="1411.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (39 samples, 0.20%)</title><rect x="137.3" y="1395.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (39 samples, 0.20%)</title><rect x="137.3" y="1379.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (39 samples, 0.20%)</title><rect x="137.3" y="1363.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (39 samples, 0.20%)</title><rect x="137.3" y="1347.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (38 samples, 0.19%)</title><rect x="137.4" y="1331.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (37 samples, 0.19%)</title><rect x="137.4" y="1315.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (36 samples, 0.18%)</title><rect x="137.4" y="1299.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (36 samples, 0.18%)</title><rect x="137.4" y="1283.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.4" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (36 samples, 0.18%)</title><rect x="137.4" y="1267.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (36 samples, 0.18%)</title><rect x="137.4" y="1251.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (36 samples, 0.18%)</title><rect x="137.4" y="1235.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (36 samples, 0.18%)</title><rect x="137.4" y="1219.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (36 samples, 0.18%)</title><rect x="137.4" y="1203.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (36 samples, 0.18%)</title><rect x="137.4" y="1187.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.18%)</title><rect x="137.4" y="1171.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.17%)</title><rect x="137.6" y="1155.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.6" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (32 samples, 0.16%)</title><rect x="137.7" y="1139.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="140.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.13%)</title><rect x="138.0" y="1123.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="141.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.13%)</title><rect x="138.0" y="1107.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.0" y="1118.0"></text>
</g>
<g>
<title>sys_futex (25 samples, 0.13%)</title><rect x="138.1" y="1091.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.13%)</title><rect x="138.1" y="1075.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.1" y="1086.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.13%)</title><rect x="138.1" y="1059.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.1" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.13%)</title><rect x="138.1" y="1043.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="141.1" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.13%)</title><rect x="138.1" y="1027.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.1" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.13%)</title><rect x="138.1" y="1011.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.1" y="1022.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="139.8" y="1507.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="142.8" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1127/237051272.run (149 samples, 0.76%)</title><rect x="140.1" y="1555.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.1" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$3 (149 samples, 0.76%)</title><rect x="140.1" y="1539.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.1" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (10 samples, 0.05%)</title><rect x="140.4" y="1523.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.4" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (10 samples, 0.05%)</title><rect x="140.4" y="1507.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.4" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (9 samples, 0.05%)</title><rect x="140.4" y="1491.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.4" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 0.04%)</title><rect x="140.4" y="1475.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.4" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (8 samples, 0.04%)</title><rect x="140.4" y="1459.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.4" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (8 samples, 0.04%)</title><rect x="140.4" y="1443.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.4" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (8 samples, 0.04%)</title><rect x="140.4" y="1427.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.4" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (8 samples, 0.04%)</title><rect x="140.4" y="1411.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.4" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (5 samples, 0.03%)</title><rect x="140.4" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.4" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (5 samples, 0.03%)</title><rect x="140.4" y="1379.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.4" y="1390.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.03%)</title><rect x="140.4" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="1374.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (28 samples, 0.14%)</title><rect x="141.0" y="1523.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.0" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (28 samples, 0.14%)</title><rect x="141.0" y="1507.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.0" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (28 samples, 0.14%)</title><rect x="141.0" y="1491.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.0" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (27 samples, 0.14%)</title><rect x="141.1" y="1475.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (27 samples, 0.14%)</title><rect x="141.1" y="1459.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (27 samples, 0.14%)</title><rect x="141.1" y="1443.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (27 samples, 0.14%)</title><rect x="141.1" y="1427.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.1" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (26 samples, 0.13%)</title><rect x="141.1" y="1411.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.1" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (26 samples, 0.13%)</title><rect x="141.1" y="1395.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.1" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (25 samples, 0.13%)</title><rect x="141.2" y="1379.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.2" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (25 samples, 0.13%)</title><rect x="141.2" y="1363.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.2" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (25 samples, 0.13%)</title><rect x="141.2" y="1347.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.2" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (25 samples, 0.13%)</title><rect x="141.2" y="1331.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (25 samples, 0.13%)</title><rect x="141.2" y="1315.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (25 samples, 0.13%)</title><rect x="141.2" y="1299.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (25 samples, 0.13%)</title><rect x="141.2" y="1283.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (25 samples, 0.13%)</title><rect x="141.2" y="1267.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.13%)</title><rect x="141.2" y="1251.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.13%)</title><rect x="141.2" y="1235.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.2" y="1246.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.12%)</title><rect x="141.2" y="1219.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="144.2" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.12%)</title><rect x="141.3" y="1203.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.12%)</title><rect x="141.3" y="1187.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.3" y="1198.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.12%)</title><rect x="141.3" y="1171.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.3" y="1182.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.11%)</title><rect x="141.3" y="1155.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.3" y="1166.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.11%)</title><rect x="141.3" y="1139.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="144.3" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.11%)</title><rect x="141.4" y="1123.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.4" y="1134.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.11%)</title><rect x="141.4" y="1107.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.4" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.11%)</title><rect x="141.4" y="1091.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.4" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (89 samples, 0.46%)</title><rect x="142.7" y="1523.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.7" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (89 samples, 0.46%)</title><rect x="142.7" y="1507.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.7" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (88 samples, 0.45%)</title><rect x="142.7" y="1491.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.7" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (88 samples, 0.45%)</title><rect x="142.7" y="1475.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.7" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (88 samples, 0.45%)</title><rect x="142.7" y="1459.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.7" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (85 samples, 0.43%)</title><rect x="142.9" y="1443.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (75 samples, 0.38%)</title><rect x="143.5" y="1427.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.5" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (67 samples, 0.34%)</title><rect x="144.0" y="1411.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.0" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (63 samples, 0.32%)</title><rect x="144.2" y="1395.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.2" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (20 samples, 0.10%)</title><rect x="146.2" y="1379.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.2" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (12 samples, 0.06%)</title><rect x="146.4" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.4" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (7 samples, 0.04%)</title><rect x="146.5" y="1347.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.5" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (5 samples, 0.03%)</title><rect x="147.1" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.1" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.05%)</title><rect x="147.4" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (9 samples, 0.05%)</title><rect x="147.5" y="1363.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.5" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (8 samples, 0.04%)</title><rect x="147.6" y="1347.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.6" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (8 samples, 0.04%)</title><rect x="147.6" y="1331.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.6" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (6 samples, 0.03%)</title><rect x="147.6" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.6" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isSafeToJoin (6 samples, 0.03%)</title><rect x="148.1" y="1523.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.1" y="1534.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.03%)</title><rect x="148.1" y="1507.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.1" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.03%)</title><rect x="148.1" y="1491.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.1" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.03%)</title><rect x="148.1" y="1475.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.1" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.03%)</title><rect x="148.1" y="1459.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.1" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1339/439310854.run (2,188 samples, 11.19%)</title><rect x="149.2" y="1555.0" width="132.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.2" y="1566.0">com/vrg/rapid/Me..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (2,188 samples, 11.19%)</title><rect x="149.2" y="1539.0" width="132.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.2" y="1550.0">com/vrg/rapid/Me..</text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (151 samples, 0.77%)</title><rect x="149.3" y="1523.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.3" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (151 samples, 0.77%)</title><rect x="149.3" y="1507.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.3" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (151 samples, 0.77%)</title><rect x="149.3" y="1491.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.3" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (151 samples, 0.77%)</title><rect x="149.3" y="1475.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.3" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (151 samples, 0.77%)</title><rect x="149.3" y="1459.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (151 samples, 0.77%)</title><rect x="149.3" y="1443.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.3" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (150 samples, 0.77%)</title><rect x="149.4" y="1427.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (149 samples, 0.76%)</title><rect x="149.4" y="1411.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.4" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (148 samples, 0.76%)</title><rect x="149.4" y="1395.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.4" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (148 samples, 0.76%)</title><rect x="149.4" y="1379.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.4" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (148 samples, 0.76%)</title><rect x="149.4" y="1363.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.4" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (148 samples, 0.76%)</title><rect x="149.4" y="1347.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.4" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (148 samples, 0.76%)</title><rect x="149.4" y="1331.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (148 samples, 0.76%)</title><rect x="149.4" y="1315.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (148 samples, 0.76%)</title><rect x="149.4" y="1299.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (146 samples, 0.75%)</title><rect x="149.6" y="1283.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (146 samples, 0.75%)</title><rect x="149.6" y="1267.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (146 samples, 0.75%)</title><rect x="149.6" y="1251.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (142 samples, 0.73%)</title><rect x="149.8" y="1235.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.8" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.04%)</title><rect x="149.9" y="1219.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="152.9" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (131 samples, 0.67%)</title><rect x="150.5" y="1219.0" width="7.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="153.5" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 0.64%)</title><rect x="150.8" y="1203.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="153.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (125 samples, 0.64%)</title><rect x="150.8" y="1187.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="153.8" y="1198.0"></text>
</g>
<g>
<title>sys_futex (121 samples, 0.62%)</title><rect x="151.1" y="1171.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.1" y="1182.0"></text>
</g>
<g>
<title>do_futex (121 samples, 0.62%)</title><rect x="151.1" y="1155.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.1" y="1166.0"></text>
</g>
<g>
<title>futex_wake (120 samples, 0.61%)</title><rect x="151.1" y="1139.0" width="7.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.1" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (108 samples, 0.55%)</title><rect x="151.8" y="1123.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.8" y="1134.0"></text>
</g>
<g>
<title>try_to_wake_up (108 samples, 0.55%)</title><rect x="151.8" y="1107.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (108 samples, 0.55%)</title><rect x="151.8" y="1091.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.8" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (16 samples, 0.08%)</title><rect x="158.4" y="1523.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.4" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (16 samples, 0.08%)</title><rect x="158.4" y="1507.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.4" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (15 samples, 0.08%)</title><rect x="158.4" y="1491.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.4" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (15 samples, 0.08%)</title><rect x="158.4" y="1475.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.4" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (15 samples, 0.08%)</title><rect x="158.4" y="1459.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.4" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (5 samples, 0.03%)</title><rect x="158.6" y="1443.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.6" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (5 samples, 0.03%)</title><rect x="158.6" y="1427.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (5 samples, 0.03%)</title><rect x="158.6" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.6" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (5 samples, 0.03%)</title><rect x="158.6" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.6" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (5 samples, 0.03%)</title><rect x="158.6" y="1379.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.6" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (7 samples, 0.04%)</title><rect x="158.9" y="1443.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (7 samples, 0.04%)</title><rect x="158.9" y="1427.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.9" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (7 samples, 0.04%)</title><rect x="158.9" y="1411.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.9" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (7 samples, 0.04%)</title><rect x="158.9" y="1395.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (7 samples, 0.04%)</title><rect x="158.9" y="1379.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.9" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (6 samples, 0.03%)</title><rect x="158.9" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (6 samples, 0.03%)</title><rect x="158.9" y="1347.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.writeTo (5 samples, 0.03%)</title><rect x="158.9" y="1331.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.invalidateFailingEdges (1,920 samples, 9.82%)</title><rect x="159.6" y="1523.0" width="115.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.6" y="1534.0">com/vrg/rapid/..</text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.copyOf (43 samples, 0.22%)</title><rect x="160.4" y="1507.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.4" y="1518.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (43 samples, 0.22%)</title><rect x="160.4" y="1491.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.4" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (34 samples, 0.17%)</title><rect x="160.6" y="1475.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.6" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (34 samples, 0.17%)</title><rect x="160.6" y="1459.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.03%)</title><rect x="162.7" y="1475.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.7" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.03%)</title><rect x="162.7" y="1459.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.7" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="162.7" y="1443.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.7" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="162.7" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.7" y="1438.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.iterator (7 samples, 0.04%)</title><rect x="163.0" y="1507.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.0" y="1518.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.iterator (7 samples, 0.04%)</title><rect x="163.0" y="1491.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.0" y="1502.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.listIterator (7 samples, 0.04%)</title><rect x="163.0" y="1475.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.0" y="1486.0"></text>
</g>
<g>
<title>com/google/common/collect/RegularImmutableList.listIterator (7 samples, 0.04%)</title><rect x="163.0" y="1459.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.0" y="1470.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.forArray (6 samples, 0.03%)</title><rect x="163.0" y="1443.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.0" y="1454.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$10.&lt;init&gt; (5 samples, 0.03%)</title><rect x="163.1" y="1427.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.1" y="1438.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIndexedListIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="163.1" y="1411.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.1" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (1,179 samples, 6.03%)</title><rect x="163.4" y="1507.0" width="71.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.4" y="1518.0">com/vrg/..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (1,158 samples, 5.92%)</title><rect x="163.9" y="1491.0" width="69.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.9" y="1502.0">com/vrg..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.04%)</title><rect x="164.0" y="1475.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.0" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="164.5" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.5" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (1,138 samples, 5.82%)</title><rect x="165.0" y="1475.0" width="68.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.0" y="1486.0">java/ut..</text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (1,138 samples, 5.82%)</title><rect x="165.0" y="1459.0" width="68.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.0" y="1470.0">java/ut..</text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (1,135 samples, 5.80%)</title><rect x="165.0" y="1443.0" width="68.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.0" y="1454.0">java/ut..</text>
</g>
<g>
<title>java/util/TreeMap.compare (1,126 samples, 5.76%)</title><rect x="165.5" y="1427.0" width="68.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.5" y="1438.0">java/ut..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1,068 samples, 5.46%)</title><rect x="169.0" y="1411.0" width="64.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="1422.0">com/vrg..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (990 samples, 5.06%)</title><rect x="173.8" y="1395.0" width="59.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.8" y="1406.0">com/vr..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (30 samples, 0.15%)</title><rect x="175.7" y="1379.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/Long.compare (12 samples, 0.06%)</title><rect x="177.5" y="1379.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.16%)</title><rect x="178.3" y="1379.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.16%)</title><rect x="178.3" y="1363.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.3" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$846/811931907.get$Lambda (16 samples, 0.08%)</title><rect x="178.3" y="1347.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.3" y="1358.0"></text>
</g>
<g>
<title>page_fault (7 samples, 0.04%)</title><rect x="178.8" y="1331.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="181.8" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (7 samples, 0.04%)</title><rect x="178.8" y="1315.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="181.8" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (7 samples, 0.04%)</title><rect x="178.8" y="1299.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.8" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$847/1376178349.get$Lambda (15 samples, 0.08%)</title><rect x="179.2" y="1347.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (859 samples, 4.39%)</title><rect x="180.1" y="1379.0" width="51.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.1" y="1390.0">java/..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (372 samples, 1.90%)</title><rect x="200.5" y="1363.0" width="22.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.5" y="1374.0">c..</text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (208 samples, 1.06%)</title><rect x="203.0" y="1347.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.0" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (165 samples, 0.84%)</title><rect x="204.5" y="1331.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.5" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.size (7 samples, 0.04%)</title><rect x="214.5" y="1331.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.5" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.peekCachedHashCode (11 samples, 0.06%)</title><rect x="214.9" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (117 samples, 0.60%)</title><rect x="215.7" y="1347.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (101 samples, 0.52%)</title><rect x="216.7" y="1331.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.7" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (101 samples, 0.52%)</title><rect x="216.7" y="1315.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.7" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (20 samples, 0.10%)</title><rect x="223.0" y="1363.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.0" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (119 samples, 0.61%)</title><rect x="224.2" y="1363.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.2" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (98 samples, 0.50%)</title><rect x="225.5" y="1347.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.5" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (6 samples, 0.03%)</title><rect x="226.2" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.2" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (80 samples, 0.41%)</title><rect x="226.5" y="1331.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.5" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (61 samples, 0.31%)</title><rect x="227.7" y="1315.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.7" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (61 samples, 0.31%)</title><rect x="227.7" y="1299.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.7" y="1310.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.05%)</title><rect x="231.4" y="1363.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="234.4" y="1374.0"></text>
</g>
<g>
<title>page_fault (25 samples, 0.13%)</title><rect x="232.0" y="1379.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.0" y="1390.0"></text>
</g>
<g>
<title>do_page_fault (25 samples, 0.13%)</title><rect x="232.0" y="1363.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.0" y="1374.0"></text>
</g>
<g>
<title>__do_page_fault (25 samples, 0.13%)</title><rect x="232.0" y="1347.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="235.0" y="1358.0"></text>
</g>
<g>
<title>handle_mm_fault (17 samples, 0.09%)</title><rect x="232.5" y="1331.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="235.5" y="1342.0"></text>
</g>
<g>
<title>__handle_mm_fault (17 samples, 0.09%)</title><rect x="232.5" y="1315.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.5" y="1326.0"></text>
</g>
<g>
<title>alloc_pages_vma (9 samples, 0.05%)</title><rect x="232.6" y="1299.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.6" y="1310.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (9 samples, 0.05%)</title><rect x="232.6" y="1283.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="235.6" y="1294.0"></text>
</g>
<g>
<title>clear_page_erms (8 samples, 0.04%)</title><rect x="232.6" y="1267.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="235.6" y="1278.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (5 samples, 0.03%)</title><rect x="233.1" y="1299.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.1" y="1310.0"></text>
</g>
<g>
<title>__lru_cache_add (5 samples, 0.03%)</title><rect x="233.1" y="1283.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (6 samples, 0.03%)</title><rect x="234.1" y="1491.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (6 samples, 0.03%)</title><rect x="234.1" y="1475.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.1" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getObserversOf (180 samples, 0.92%)</title><rect x="234.5" y="1507.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (32 samples, 0.16%)</title><rect x="235.1" y="1491.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.1" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (31 samples, 0.16%)</title><rect x="235.1" y="1475.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.1" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (22 samples, 0.11%)</title><rect x="235.7" y="1459.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.7" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (8 samples, 0.04%)</title><rect x="236.3" y="1443.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.3" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (8 samples, 0.04%)</title><rect x="236.3" y="1427.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.3" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (8 samples, 0.04%)</title><rect x="236.3" y="1411.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.3" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (8 samples, 0.04%)</title><rect x="236.3" y="1395.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.04%)</title><rect x="236.3" y="1379.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (8 samples, 0.04%)</title><rect x="236.3" y="1363.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (8 samples, 0.04%)</title><rect x="236.3" y="1347.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="236.3" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (130 samples, 0.66%)</title><rect x="237.1" y="1491.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.1" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (130 samples, 0.66%)</title><rect x="237.1" y="1475.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.1" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (130 samples, 0.66%)</title><rect x="237.1" y="1459.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.1" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (128 samples, 0.65%)</title><rect x="237.2" y="1443.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.2" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (122 samples, 0.62%)</title><rect x="237.6" y="1427.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.6" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (119 samples, 0.61%)</title><rect x="237.8" y="1411.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.8" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (7 samples, 0.04%)</title><rect x="238.0" y="1395.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (106 samples, 0.54%)</title><rect x="238.4" y="1395.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.4" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (58 samples, 0.30%)</title><rect x="240.4" y="1379.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.4" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (37 samples, 0.19%)</title><rect x="240.7" y="1363.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.7" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (34 samples, 0.17%)</title><rect x="240.8" y="1347.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.8" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (13 samples, 0.07%)</title><rect x="243.0" y="1363.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.0" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (11 samples, 0.06%)</title><rect x="243.1" y="1347.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.1" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (11 samples, 0.06%)</title><rect x="243.1" y="1331.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.1" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (6 samples, 0.03%)</title><rect x="243.9" y="1379.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="244.2" y="1379.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.2" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (6 samples, 0.03%)</title><rect x="244.3" y="1363.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.04%)</title><rect x="245.0" y="1491.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.04%)</title><rect x="245.0" y="1475.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.0" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.03%)</title><rect x="245.0" y="1459.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.0" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (437 samples, 2.23%)</title><rect x="245.4" y="1507.0" width="26.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.4" y="1518.0">c..</text>
</g>
<g>
<title>java/util/TreeSet.contains (432 samples, 2.21%)</title><rect x="245.6" y="1491.0" width="26.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.6" y="1502.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.containsKey (432 samples, 2.21%)</title><rect x="245.6" y="1475.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.6" y="1486.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.getEntry (432 samples, 2.21%)</title><rect x="245.6" y="1459.0" width="26.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.6" y="1470.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (432 samples, 2.21%)</title><rect x="245.6" y="1443.0" width="26.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.6" y="1454.0">j..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (407 samples, 2.08%)</title><rect x="246.9" y="1427.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.9" y="1438.0">c..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (390 samples, 1.99%)</title><rect x="248.0" y="1411.0" width="23.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.0" y="1422.0">c..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (8 samples, 0.04%)</title><rect x="248.8" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.06%)</title><rect x="249.5" y="1395.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.06%)</title><rect x="249.5" y="1379.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.5" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$846/811931907.get$Lambda (8 samples, 0.04%)</title><rect x="249.5" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (349 samples, 1.78%)</title><rect x="250.1" y="1395.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.1" y="1406.0">j..</text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (162 samples, 0.83%)</title><rect x="257.0" y="1379.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.0" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (92 samples, 0.47%)</title><rect x="257.9" y="1363.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (69 samples, 0.35%)</title><rect x="258.9" y="1347.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (51 samples, 0.26%)</title><rect x="263.5" y="1363.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.5" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (45 samples, 0.23%)</title><rect x="263.8" y="1347.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.8" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (45 samples, 0.23%)</title><rect x="263.8" y="1331.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.8" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (64 samples, 0.33%)</title><rect x="267.0" y="1379.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.0" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (56 samples, 0.29%)</title><rect x="267.5" y="1363.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.5" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.hashCode (13 samples, 0.07%)</title><rect x="267.9" y="1347.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.9" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.partialHash (7 samples, 0.04%)</title><rect x="268.2" y="1331.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.2" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/Internal.partialHash (7 samples, 0.04%)</title><rect x="268.2" y="1315.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.2" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (35 samples, 0.18%)</title><rect x="268.7" y="1347.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.7" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (28 samples, 0.14%)</title><rect x="269.1" y="1331.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.1" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (27 samples, 0.14%)</title><rect x="269.1" y="1315.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.1" y="1326.0"></text>
</g>
<g>
<title>vtable stub (6 samples, 0.03%)</title><rect x="270.8" y="1379.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="273.8" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (14 samples, 0.07%)</title><rect x="271.7" y="1507.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.7" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (7 samples, 0.04%)</title><rect x="271.8" y="1491.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.8" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (5 samples, 0.03%)</title><rect x="271.9" y="1475.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.03%)</title><rect x="272.2" y="1491.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.2" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.04%)</title><rect x="272.9" y="1507.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.9" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (7 samples, 0.04%)</title><rect x="272.9" y="1491.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.9" y="1502.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (33 samples, 0.17%)</title><rect x="273.4" y="1507.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.4" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (33 samples, 0.17%)</title><rect x="273.4" y="1491.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.4" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (29 samples, 0.15%)</title><rect x="273.4" y="1475.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.4" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (25 samples, 0.13%)</title><rect x="273.7" y="1459.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.7" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (6 samples, 0.03%)</title><rect x="274.5" y="1443.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.03%)</title><rect x="274.9" y="1443.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.9" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (8 samples, 0.04%)</title><rect x="275.5" y="1523.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.5" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (85 samples, 0.43%)</title><rect x="276.1" y="1523.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.1" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (85 samples, 0.43%)</title><rect x="276.1" y="1507.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.1" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (84 samples, 0.43%)</title><rect x="276.1" y="1491.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.1" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (82 samples, 0.42%)</title><rect x="276.1" y="1475.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.1" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (81 samples, 0.41%)</title><rect x="276.1" y="1459.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.1" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (76 samples, 0.39%)</title><rect x="276.2" y="1443.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.2" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (76 samples, 0.39%)</title><rect x="276.2" y="1427.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.2" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1340/618812250.test (64 samples, 0.33%)</title><rect x="276.2" y="1411.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.2" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$6 (64 samples, 0.33%)</title><rect x="276.2" y="1395.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.2" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.filterAlertMessages (64 samples, 0.33%)</title><rect x="276.2" y="1379.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.2" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isHostPresent (54 samples, 0.28%)</title><rect x="276.4" y="1363.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.4" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (52 samples, 0.27%)</title><rect x="276.4" y="1347.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.4" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (52 samples, 0.27%)</title><rect x="276.4" y="1331.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.4" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (52 samples, 0.27%)</title><rect x="276.4" y="1315.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.4" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (52 samples, 0.27%)</title><rect x="276.4" y="1299.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.4" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (48 samples, 0.25%)</title><rect x="276.6" y="1283.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.6" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (44 samples, 0.22%)</title><rect x="276.9" y="1267.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.9" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (41 samples, 0.21%)</title><rect x="277.0" y="1251.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.0" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (21 samples, 0.11%)</title><rect x="277.8" y="1235.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.8" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (8 samples, 0.04%)</title><rect x="277.9" y="1219.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.9" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (5 samples, 0.03%)</title><rect x="278.0" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.0" y="1214.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (11 samples, 0.06%)</title><rect x="278.4" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.4" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (11 samples, 0.06%)</title><rect x="278.4" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.4" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (11 samples, 0.06%)</title><rect x="278.4" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="279.0" y="1235.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.0" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (6 samples, 0.03%)</title><rect x="279.1" y="1219.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.1" y="1230.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (6 samples, 0.03%)</title><rect x="279.1" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.1" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (6 samples, 0.03%)</title><rect x="279.1" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="1198.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (6 samples, 0.03%)</title><rect x="279.1" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.1" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.06%)</title><rect x="280.1" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.1" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1341/54743401.apply (11 samples, 0.06%)</title><rect x="280.1" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.1" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (10 samples, 0.05%)</title><rect x="280.1" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10 samples, 0.05%)</title><rect x="280.1" y="1363.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.1" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.05%)</title><rect x="280.1" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.1" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector$$Lambda$1343/420703600.accept (10 samples, 0.05%)</title><rect x="280.1" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.lambda$aggregateForProposal$0 (10 samples, 0.05%)</title><rect x="280.1" y="1315.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.1" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.aggregateForProposal (9 samples, 0.05%)</title><rect x="280.1" y="1299.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.1" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.03%)</title><rect x="280.1" y="1283.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.1" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1358/1473473436.run (61 samples, 0.31%)</title><rect x="281.2" y="1555.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.2" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (61 samples, 0.31%)</title><rect x="281.2" y="1539.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.2" y="1550.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (5 samples, 0.03%)</title><rect x="281.2" y="1523.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.2" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (5 samples, 0.03%)</title><rect x="281.2" y="1507.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.2" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (5 samples, 0.03%)</title><rect x="281.2" y="1491.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.2" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (5 samples, 0.03%)</title><rect x="281.2" y="1475.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (5 samples, 0.03%)</title><rect x="281.2" y="1459.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (5 samples, 0.03%)</title><rect x="281.2" y="1443.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (5 samples, 0.03%)</title><rect x="281.2" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.03%)</title><rect x="281.2" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.03%)</title><rect x="281.2" y="1395.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.2" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="281.2" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.2" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.03%)</title><rect x="281.2" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.2" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="281.2" y="1347.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.2" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.03%)</title><rect x="281.2" y="1331.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.03%)</title><rect x="281.2" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.03%)</title><rect x="281.2" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.03%)</title><rect x="281.2" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.03%)</title><rect x="281.2" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="281.2" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="281.2" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.2" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (56 samples, 0.29%)</title><rect x="281.5" y="1523.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.5" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (51 samples, 0.26%)</title><rect x="281.5" y="1507.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.5" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$852/1531366978.accept (45 samples, 0.23%)</title><rect x="281.5" y="1491.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.5" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (45 samples, 0.23%)</title><rect x="281.5" y="1475.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.5" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1366/2132188350.accept (37 samples, 0.19%)</title><rect x="281.5" y="1459.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.5" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (37 samples, 0.19%)</title><rect x="281.5" y="1443.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.5" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (31 samples, 0.16%)</title><rect x="281.8" y="1427.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.8" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (21 samples, 0.11%)</title><rect x="281.8" y="1411.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.8" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (19 samples, 0.10%)</title><rect x="281.9" y="1395.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.9" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (19 samples, 0.10%)</title><rect x="281.9" y="1379.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.9" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (19 samples, 0.10%)</title><rect x="281.9" y="1363.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (19 samples, 0.10%)</title><rect x="281.9" y="1347.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (19 samples, 0.10%)</title><rect x="281.9" y="1331.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (16 samples, 0.08%)</title><rect x="282.1" y="1315.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.1" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12 samples, 0.06%)</title><rect x="282.3" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.3" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (8 samples, 0.04%)</title><rect x="282.5" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.5" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (5 samples, 0.03%)</title><rect x="282.5" y="1267.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.5" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.03%)</title><rect x="283.0" y="1411.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.0" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.03%)</title><rect x="283.0" y="1395.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.0" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$851/1710358557.accept (8 samples, 0.04%)</title><rect x="283.7" y="1459.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.7" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (8 samples, 0.04%)</title><rect x="283.7" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.7" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (5 samples, 0.03%)</title><rect x="283.9" y="1427.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.9" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.03%)</title><rect x="284.2" y="1491.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (77 samples, 0.39%)</title><rect x="284.9" y="1555.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (77 samples, 0.39%)</title><rect x="284.9" y="1539.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (77 samples, 0.39%)</title><rect x="284.9" y="1523.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.9" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (7 samples, 0.04%)</title><rect x="284.9" y="1507.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.9" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$AlertBatcher.run (70 samples, 0.36%)</title><rect x="285.3" y="1507.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.3" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (69 samples, 0.35%)</title><rect x="285.4" y="1491.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.4" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (65 samples, 0.33%)</title><rect x="285.6" y="1475.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (65 samples, 0.33%)</title><rect x="285.6" y="1459.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (39 samples, 0.20%)</title><rect x="286.0" y="1443.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.0" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (39 samples, 0.20%)</title><rect x="286.0" y="1427.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.0" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (39 samples, 0.20%)</title><rect x="286.0" y="1411.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.0" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (38 samples, 0.19%)</title><rect x="286.0" y="1395.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.0" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (37 samples, 0.19%)</title><rect x="286.1" y="1379.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.1" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (30 samples, 0.15%)</title><rect x="286.1" y="1363.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$928/2072419039.apply (30 samples, 0.15%)</title><rect x="286.1" y="1347.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.1" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (30 samples, 0.15%)</title><rect x="286.1" y="1331.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.1" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (30 samples, 0.15%)</title><rect x="286.1" y="1315.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.1" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (30 samples, 0.15%)</title><rect x="286.1" y="1299.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (25 samples, 0.13%)</title><rect x="286.2" y="1283.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (25 samples, 0.13%)</title><rect x="286.2" y="1267.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (13 samples, 0.07%)</title><rect x="286.2" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (10 samples, 0.05%)</title><rect x="286.2" y="1235.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (10 samples, 0.05%)</title><rect x="286.2" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (6 samples, 0.03%)</title><rect x="286.3" y="1203.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (11 samples, 0.06%)</title><rect x="287.0" y="1251.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (11 samples, 0.06%)</title><rect x="287.0" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (5 samples, 0.03%)</title><rect x="287.1" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (5 samples, 0.03%)</title><rect x="287.1" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (5 samples, 0.03%)</title><rect x="287.1" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.1" y="1198.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (7 samples, 0.04%)</title><rect x="287.9" y="1363.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.9" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (10 samples, 0.05%)</title><rect x="288.5" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.5" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (9 samples, 0.05%)</title><rect x="288.5" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.5" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (9 samples, 0.05%)</title><rect x="288.5" y="1411.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.5" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (9 samples, 0.05%)</title><rect x="288.5" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.5" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.writeTo (9 samples, 0.05%)</title><rect x="288.5" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.5" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (7 samples, 0.04%)</title><rect x="288.6" y="1363.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.6" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (7 samples, 0.04%)</title><rect x="288.6" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.6" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.writeTo (6 samples, 0.03%)</title><rect x="288.6" y="1331.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.6" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (6 samples, 0.03%)</title><rect x="288.6" y="1315.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.6" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (6 samples, 0.03%)</title><rect x="288.6" y="1299.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (5 samples, 0.03%)</title><rect x="288.7" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.7" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (5 samples, 0.03%)</title><rect x="288.7" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.7" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (5 samples, 0.03%)</title><rect x="288.7" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (6 samples, 0.03%)</title><rect x="289.7" y="1555.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.7" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (42 samples, 0.21%)</title><rect x="290.0" y="1555.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.0" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (5 samples, 0.03%)</title><rect x="290.1" y="1539.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (36 samples, 0.18%)</title><rect x="290.4" y="1539.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.4" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.16%)</title><rect x="290.6" y="1523.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.14%)</title><rect x="290.8" y="1507.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.8" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 0.14%)</title><rect x="290.8" y="1491.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.8" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.07%)</title><rect x="290.8" y="1475.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="293.8" y="1486.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.08%)</title><rect x="291.6" y="1475.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="294.6" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.06%)</title><rect x="291.6" y="1459.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="294.6" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="291.6" y="1443.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="294.6" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="291.6" y="1427.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.6" y="1438.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.04%)</title><rect x="291.7" y="1411.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.7" y="1422.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.04%)</title><rect x="291.7" y="1395.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.7" y="1406.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.04%)</title><rect x="291.8" y="1379.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (11,578 samples, 59.20%)</title><rect x="292.7" y="1603.0" width="698.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (11,578 samples, 59.20%)</title><rect x="292.7" y="1587.0" width="698.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.7" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (10,667 samples, 54.54%)</title><rect x="294.1" y="1571.0" width="643.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.1" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (10,546 samples, 53.92%)</title><rect x="295.1" y="1555.0" width="636.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.1" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (36 samples, 0.18%)</title><rect x="300.7" y="1539.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (7 samples, 0.04%)</title><rect x="302.0" y="1523.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (7 samples, 0.04%)</title><rect x="302.0" y="1507.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.0" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (6 samples, 0.03%)</title><rect x="302.0" y="1491.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (7 samples, 0.04%)</title><rect x="302.4" y="1523.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.setOpaque (7 samples, 0.04%)</title><rect x="302.4" y="1507.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (41 samples, 0.21%)</title><rect x="302.9" y="1539.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.9" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (5 samples, 0.03%)</title><rect x="305.0" y="1523.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="1534.0"></text>
</g>
<g>
<title>__sched_yield (5 samples, 0.03%)</title><rect x="305.0" y="1507.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (10,376 samples, 53.06%)</title><rect x="305.3" y="1539.0" width="626.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.3" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (1,090 samples, 5.57%)</title><rect x="306.2" y="1523.0" width="65.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.2" y="1534.0">akka/di..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (1,080 samples, 5.52%)</title><rect x="306.8" y="1507.0" width="65.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.8" y="1518.0">akka/di..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (321 samples, 1.64%)</title><rect x="306.8" y="1491.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (20 samples, 0.10%)</title><rect x="306.9" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.9" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (18 samples, 0.09%)</title><rect x="307.0" y="1459.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.0" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$3.run (58 samples, 0.30%)</title><rect x="308.1" y="1475.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (29 samples, 0.15%)</title><rect x="308.2" y="1459.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (29 samples, 0.15%)</title><rect x="308.2" y="1443.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (27 samples, 0.14%)</title><rect x="308.3" y="1427.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (27 samples, 0.14%)</title><rect x="308.3" y="1411.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.3" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (21 samples, 0.11%)</title><rect x="308.7" y="1395.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (11 samples, 0.06%)</title><rect x="309.1" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.1" y="1390.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.deadLetters (10 samples, 0.05%)</title><rect x="309.1" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (24 samples, 0.12%)</title><rect x="309.9" y="1459.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.07%)</title><rect x="310.6" y="1443.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (13 samples, 0.07%)</title><rect x="310.6" y="1427.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (13 samples, 0.07%)</title><rect x="310.6" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.05%)</title><rect x="310.6" y="1395.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.05%)</title><rect x="310.6" y="1379.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.6" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$684/1238088030.run (239 samples, 1.22%)</title><rect x="311.6" y="1475.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.6" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (239 samples, 1.22%)</title><rect x="311.6" y="1459.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.6" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (239 samples, 1.22%)</title><rect x="311.6" y="1443.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.6" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (236 samples, 1.21%)</title><rect x="311.8" y="1427.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.8" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (231 samples, 1.18%)</title><rect x="312.1" y="1411.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.onAsyncInput (7 samples, 0.04%)</title><rect x="313.6" y="1395.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.6" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (200 samples, 1.02%)</title><rect x="314.0" y="1395.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.0" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (199 samples, 1.02%)</title><rect x="314.0" y="1379.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.0" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (199 samples, 1.02%)</title><rect x="314.0" y="1363.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (162 samples, 0.83%)</title><rect x="314.3" y="1347.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (148 samples, 0.76%)</title><rect x="314.3" y="1331.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (148 samples, 0.76%)</title><rect x="314.3" y="1315.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (148 samples, 0.76%)</title><rect x="314.3" y="1299.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (138 samples, 0.71%)</title><rect x="314.3" y="1283.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (138 samples, 0.71%)</title><rect x="314.3" y="1267.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (138 samples, 0.71%)</title><rect x="314.3" y="1251.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (135 samples, 0.69%)</title><rect x="314.5" y="1235.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (90 samples, 0.46%)</title><rect x="314.5" y="1219.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (84 samples, 0.43%)</title><rect x="314.7" y="1203.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (84 samples, 0.43%)</title><rect x="314.7" y="1187.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.7" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (84 samples, 0.43%)</title><rect x="314.7" y="1171.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.7" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (84 samples, 0.43%)</title><rect x="314.7" y="1155.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (84 samples, 0.43%)</title><rect x="314.7" y="1139.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (84 samples, 0.43%)</title><rect x="314.7" y="1123.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (83 samples, 0.42%)</title><rect x="314.8" y="1107.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (83 samples, 0.42%)</title><rect x="314.8" y="1091.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 0.40%)</title><rect x="315.0" y="1075.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (78 samples, 0.40%)</title><rect x="315.1" y="1059.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.1" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="315.1" y="1043.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="318.1" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (72 samples, 0.37%)</title><rect x="315.4" y="1043.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="318.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.34%)</title><rect x="315.7" y="1027.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 0.34%)</title><rect x="315.7" y="1011.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.7" y="1022.0"></text>
</g>
<g>
<title>sys_futex (66 samples, 0.34%)</title><rect x="315.7" y="995.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.7" y="1006.0"></text>
</g>
<g>
<title>do_futex (66 samples, 0.34%)</title><rect x="315.7" y="979.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="318.7" y="990.0"></text>
</g>
<g>
<title>futex_wake (66 samples, 0.34%)</title><rect x="315.7" y="963.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="318.7" y="974.0"></text>
</g>
<g>
<title>wake_up_q (63 samples, 0.32%)</title><rect x="315.9" y="947.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.9" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (63 samples, 0.32%)</title><rect x="315.9" y="931.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="318.9" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (63 samples, 0.32%)</title><rect x="315.9" y="915.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="318.9" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (45 samples, 0.23%)</title><rect x="319.9" y="1219.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (12 samples, 0.06%)</title><rect x="319.9" y="1203.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (33 samples, 0.17%)</title><rect x="320.7" y="1203.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (33 samples, 0.17%)</title><rect x="320.7" y="1187.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.7" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (33 samples, 0.17%)</title><rect x="320.7" y="1171.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (33 samples, 0.17%)</title><rect x="320.7" y="1155.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (33 samples, 0.17%)</title><rect x="320.7" y="1139.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (29 samples, 0.15%)</title><rect x="320.8" y="1123.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (25 samples, 0.13%)</title><rect x="321.0" y="1107.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (25 samples, 0.13%)</title><rect x="321.0" y="1091.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (10 samples, 0.05%)</title><rect x="322.7" y="1283.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (10 samples, 0.05%)</title><rect x="322.7" y="1267.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.underlying (14 samples, 0.07%)</title><rect x="323.3" y="1331.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (25 samples, 0.13%)</title><rect x="324.1" y="1347.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreterOrNull (7 samples, 0.04%)</title><rect x="325.6" y="1347.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.6" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (721 samples, 3.69%)</title><rect x="326.2" y="1491.0" width="43.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.2" y="1502.0">akka..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.03%)</title><rect x="326.2" y="1475.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.2" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (704 samples, 3.60%)</title><rect x="327.1" y="1475.0" width="42.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.1" y="1486.0">scal..</text>
</g>
<g>
<title>java/lang/ThreadLocal.set (6 samples, 0.03%)</title><rect x="327.3" y="1459.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.03%)</title><rect x="327.3" y="1443.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.3" y="1454.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (695 samples, 3.55%)</title><rect x="327.7" y="1459.0" width="41.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.7" y="1470.0">sca..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$556/891484588.apply$mcV$sp (695 samples, 3.55%)</title><rect x="327.7" y="1443.0" width="41.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.7" y="1454.0">akk..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (695 samples, 3.55%)</title><rect x="327.7" y="1427.0" width="41.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.7" y="1438.0">akk..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (693 samples, 3.54%)</title><rect x="327.8" y="1411.0" width="41.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.8" y="1422.0">akk..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (688 samples, 3.52%)</title><rect x="328.1" y="1395.0" width="41.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.1" y="1406.0">sca..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1227/390272618.apply (341 samples, 1.74%)</title><rect x="328.1" y="1379.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.1" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (341 samples, 1.74%)</title><rect x="328.1" y="1363.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (18 samples, 0.09%)</title><rect x="328.5" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (18 samples, 0.09%)</title><rect x="328.5" y="1331.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (18 samples, 0.09%)</title><rect x="328.5" y="1315.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (17 samples, 0.09%)</title><rect x="328.5" y="1299.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (14 samples, 0.07%)</title><rect x="328.7" y="1283.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (8 samples, 0.04%)</title><rect x="329.0" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (8 samples, 0.04%)</title><rect x="329.0" y="1251.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (7 samples, 0.04%)</title><rect x="329.0" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (5 samples, 0.03%)</title><rect x="329.1" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (308 samples, 1.57%)</title><rect x="329.5" y="1347.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1097/730637167.apply (307 samples, 1.57%)</title><rect x="329.5" y="1331.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (307 samples, 1.57%)</title><rect x="329.5" y="1315.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (306 samples, 1.56%)</title><rect x="329.6" y="1299.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1097/730637167.apply (305 samples, 1.56%)</title><rect x="329.7" y="1283.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (305 samples, 1.56%)</title><rect x="329.7" y="1267.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (303 samples, 1.55%)</title><rect x="329.8" y="1251.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1105/801307714.apply (296 samples, 1.51%)</title><rect x="330.1" y="1235.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (296 samples, 1.51%)</title><rect x="330.1" y="1219.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (296 samples, 1.51%)</title><rect x="330.1" y="1203.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (37 samples, 0.19%)</title><rect x="330.1" y="1187.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (12 samples, 0.06%)</title><rect x="330.1" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (12 samples, 0.06%)</title><rect x="330.1" y="1155.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (12 samples, 0.06%)</title><rect x="330.1" y="1139.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (10 samples, 0.05%)</title><rect x="330.3" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (10 samples, 0.05%)</title><rect x="330.3" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (10 samples, 0.05%)</title><rect x="330.3" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (5 samples, 0.03%)</title><rect x="330.5" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (5 samples, 0.03%)</title><rect x="330.5" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (5 samples, 0.03%)</title><rect x="330.9" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (5 samples, 0.03%)</title><rect x="330.9" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (5 samples, 0.03%)</title><rect x="330.9" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (16 samples, 0.08%)</title><rect x="331.2" y="1171.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (14 samples, 0.07%)</title><rect x="331.2" y="1155.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (12 samples, 0.06%)</title><rect x="331.3" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (12 samples, 0.06%)</title><rect x="331.3" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (6 samples, 0.03%)</title><rect x="331.5" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (6 samples, 0.03%)</title><rect x="331.5" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (6 samples, 0.03%)</title><rect x="331.5" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (6 samples, 0.03%)</title><rect x="331.5" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (259 samples, 1.32%)</title><rect x="332.4" y="1187.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (256 samples, 1.31%)</title><rect x="332.4" y="1171.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (255 samples, 1.30%)</title><rect x="332.4" y="1155.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (255 samples, 1.30%)</title><rect x="332.4" y="1139.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (255 samples, 1.30%)</title><rect x="332.4" y="1123.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (8 samples, 0.04%)</title><rect x="332.4" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (5 samples, 0.03%)</title><rect x="332.6" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (21 samples, 0.11%)</title><rect x="333.0" y="1107.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (14 samples, 0.07%)</title><rect x="333.2" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (9 samples, 0.05%)</title><rect x="333.5" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (6 samples, 0.03%)</title><rect x="333.6" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.&lt;init&gt; (5 samples, 0.03%)</title><rect x="333.6" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.6" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (5 samples, 0.03%)</title><rect x="333.6" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.6" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (191 samples, 0.98%)</title><rect x="334.2" y="1107.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (153 samples, 0.78%)</title><rect x="334.4" y="1091.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (153 samples, 0.78%)</title><rect x="334.4" y="1075.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.4" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (153 samples, 0.78%)</title><rect x="334.4" y="1059.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.4" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (153 samples, 0.78%)</title><rect x="334.4" y="1043.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.4" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (152 samples, 0.78%)</title><rect x="334.4" y="1027.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.4" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (26 samples, 0.13%)</title><rect x="334.7" y="1011.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.7" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (25 samples, 0.13%)</title><rect x="334.7" y="995.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.7" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (24 samples, 0.12%)</title><rect x="334.8" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.8" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (14 samples, 0.07%)</title><rect x="335.0" y="963.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (14 samples, 0.07%)</title><rect x="335.0" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (13 samples, 0.07%)</title><rect x="335.0" y="931.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.07%)</title><rect x="335.0" y="915.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.05%)</title><rect x="335.0" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.04%)</title><rect x="335.1" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.1" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.04%)</title><rect x="335.1" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.04%)</title><rect x="335.1" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.04%)</title><rect x="335.1" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.1" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.04%)</title><rect x="335.1" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.1" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="335.1" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.1" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="335.1" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.1" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="335.1" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.1" y="782.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (7 samples, 0.04%)</title><rect x="335.8" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.8" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (7 samples, 0.04%)</title><rect x="335.8" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.8" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (7 samples, 0.04%)</title><rect x="335.8" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (6 samples, 0.03%)</title><rect x="335.9" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="926.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (29 samples, 0.15%)</title><rect x="336.2" y="1011.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (29 samples, 0.15%)</title><rect x="336.2" y="995.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (29 samples, 0.15%)</title><rect x="336.2" y="979.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (29 samples, 0.15%)</title><rect x="336.2" y="963.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (6 samples, 0.03%)</title><rect x="336.2" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (6 samples, 0.03%)</title><rect x="336.2" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (6 samples, 0.03%)</title><rect x="336.2" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.2" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (6 samples, 0.03%)</title><rect x="336.2" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.2" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (6 samples, 0.03%)</title><rect x="336.2" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.2" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (6 samples, 0.03%)</title><rect x="336.2" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.2" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (23 samples, 0.12%)</title><rect x="336.6" y="947.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (20 samples, 0.10%)</title><rect x="336.8" y="931.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.8" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (20 samples, 0.10%)</title><rect x="336.8" y="915.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.8" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (15 samples, 0.08%)</title><rect x="336.8" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.8" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.07%)</title><rect x="336.8" y="883.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.8" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.05%)</title><rect x="337.1" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.04%)</title><rect x="337.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="337.1" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.1" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="337.1" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.1" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="337.1" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.1" y="814.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (90 samples, 0.46%)</title><rect x="338.0" y="1011.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.0" y="1022.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (76 samples, 0.39%)</title><rect x="338.3" y="995.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (63 samples, 0.32%)</title><rect x="338.7" y="979.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.7" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (62 samples, 0.32%)</title><rect x="338.7" y="963.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.7" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (62 samples, 0.32%)</title><rect x="338.7" y="947.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.7" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (62 samples, 0.32%)</title><rect x="338.7" y="931.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.7" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (62 samples, 0.32%)</title><rect x="338.7" y="915.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.7" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (62 samples, 0.32%)</title><rect x="338.7" y="899.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.7" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (60 samples, 0.31%)</title><rect x="338.8" y="883.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (60 samples, 0.31%)</title><rect x="338.8" y="867.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.8" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (60 samples, 0.31%)</title><rect x="338.8" y="851.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (60 samples, 0.31%)</title><rect x="338.8" y="835.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.8" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (60 samples, 0.31%)</title><rect x="338.8" y="819.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (60 samples, 0.31%)</title><rect x="338.8" y="803.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (60 samples, 0.31%)</title><rect x="338.8" y="787.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (60 samples, 0.31%)</title><rect x="338.8" y="771.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (59 samples, 0.30%)</title><rect x="338.8" y="755.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.30%)</title><rect x="338.8" y="739.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.30%)</title><rect x="338.8" y="723.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.8" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="338.8" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="341.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (53 samples, 0.27%)</title><rect x="339.2" y="707.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="342.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.27%)</title><rect x="339.3" y="691.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="342.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 0.26%)</title><rect x="339.3" y="675.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.3" y="686.0"></text>
</g>
<g>
<title>sys_futex (49 samples, 0.25%)</title><rect x="339.4" y="659.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="342.4" y="670.0"></text>
</g>
<g>
<title>do_futex (49 samples, 0.25%)</title><rect x="339.4" y="643.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (49 samples, 0.25%)</title><rect x="339.4" y="627.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (46 samples, 0.24%)</title><rect x="339.6" y="611.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (46 samples, 0.24%)</title><rect x="339.6" y="595.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 0.24%)</title><rect x="339.6" y="579.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.6" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (6 samples, 0.03%)</title><rect x="342.5" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.5" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (7 samples, 0.04%)</title><rect x="342.9" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (7 samples, 0.04%)</title><rect x="342.9" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.03%)</title><rect x="342.9" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="343.0" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (35 samples, 0.18%)</title><rect x="343.6" y="1091.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (29 samples, 0.15%)</title><rect x="343.6" y="1075.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.6" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (28 samples, 0.14%)</title><rect x="343.7" y="1059.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (27 samples, 0.14%)</title><rect x="343.7" y="1043.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (27 samples, 0.14%)</title><rect x="343.7" y="1027.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (27 samples, 0.14%)</title><rect x="343.7" y="1011.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (27 samples, 0.14%)</title><rect x="343.7" y="995.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (27 samples, 0.14%)</title><rect x="343.7" y="979.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (9 samples, 0.05%)</title><rect x="343.7" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (9 samples, 0.05%)</title><rect x="343.7" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (18 samples, 0.09%)</title><rect x="344.3" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.3" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (16 samples, 0.08%)</title><rect x="344.4" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.4" y="958.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (6 samples, 0.03%)</title><rect x="345.4" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.4" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (6 samples, 0.03%)</title><rect x="345.4" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.4" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (6 samples, 0.03%)</title><rect x="345.4" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.4" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (6 samples, 0.03%)</title><rect x="345.4" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.4" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (6 samples, 0.03%)</title><rect x="345.4" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.4" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (6 samples, 0.03%)</title><rect x="345.4" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.4" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (6 samples, 0.03%)</title><rect x="345.4" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.4" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (6 samples, 0.03%)</title><rect x="345.4" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (14 samples, 0.07%)</title><rect x="345.8" y="1107.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (9 samples, 0.05%)</title><rect x="346.0" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (9 samples, 0.05%)</title><rect x="346.0" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.&lt;init&gt; (7 samples, 0.04%)</title><rect x="346.0" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (5 samples, 0.03%)</title><rect x="346.7" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (5 samples, 0.03%)</title><rect x="346.7" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (7 samples, 0.04%)</title><rect x="347.1" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1113/198771751.apply (332 samples, 1.70%)</title><rect x="349.1" y="1379.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.1" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (332 samples, 1.70%)</title><rect x="349.1" y="1363.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (276 samples, 1.41%)</title><rect x="349.2" y="1347.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.2" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1119/379768059.apply (158 samples, 0.81%)</title><rect x="349.3" y="1331.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (158 samples, 0.81%)</title><rect x="349.3" y="1315.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1117/510674302.apply (158 samples, 0.81%)</title><rect x="349.3" y="1299.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (157 samples, 0.80%)</title><rect x="349.3" y="1283.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (65 samples, 0.33%)</title><rect x="349.5" y="1267.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (65 samples, 0.33%)</title><rect x="349.5" y="1251.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$968/1563763398.apply (65 samples, 0.33%)</title><rect x="349.5" y="1235.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (65 samples, 0.33%)</title><rect x="349.5" y="1219.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (63 samples, 0.32%)</title><rect x="349.6" y="1203.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (63 samples, 0.32%)</title><rect x="349.6" y="1187.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (63 samples, 0.32%)</title><rect x="349.6" y="1171.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (63 samples, 0.32%)</title><rect x="349.6" y="1155.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (63 samples, 0.32%)</title><rect x="349.6" y="1139.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (8 samples, 0.04%)</title><rect x="349.8" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="349.8" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="349.9" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (6 samples, 0.03%)</title><rect x="349.9" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (6 samples, 0.03%)</title><rect x="349.9" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (6 samples, 0.03%)</title><rect x="349.9" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (6 samples, 0.03%)</title><rect x="349.9" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (6 samples, 0.03%)</title><rect x="349.9" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (5 samples, 0.03%)</title><rect x="350.0" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (52 samples, 0.27%)</title><rect x="350.3" y="1123.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (52 samples, 0.27%)</title><rect x="350.3" y="1107.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (50 samples, 0.26%)</title><rect x="350.4" y="1091.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$938/927400646.apply (50 samples, 0.26%)</title><rect x="350.4" y="1075.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (50 samples, 0.26%)</title><rect x="350.4" y="1059.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$990/1452870796.apply (50 samples, 0.26%)</title><rect x="350.4" y="1043.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (50 samples, 0.26%)</title><rect x="350.4" y="1027.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType$$Lambda$1195/630952588.apply (36 samples, 0.18%)</title><rect x="350.5" y="1011.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType.$anonfun$map$5 (36 samples, 0.18%)</title><rect x="350.5" y="995.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2$$Lambda$1179/1804994696.apply (36 samples, 0.18%)</title><rect x="350.5" y="979.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.$anonfun$apply$1 (36 samples, 0.18%)</title><rect x="350.5" y="963.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.5" y="974.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$1143/1667206154.apply (36 samples, 0.18%)</title><rect x="350.5" y="947.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.5" y="958.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (36 samples, 0.18%)</title><rect x="350.5" y="931.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.5" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1140/349117756.apply (34 samples, 0.17%)</title><rect x="350.5" y="915.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.5" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseMarshaller$1 (34 samples, 0.17%)</title><rect x="350.5" y="899.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.5" y="910.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (34 samples, 0.17%)</title><rect x="350.5" y="883.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.5" y="894.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.writeTo (31 samples, 0.16%)</title><rect x="350.7" y="867.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.7" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (31 samples, 0.16%)</title><rect x="350.7" y="851.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.7" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (31 samples, 0.16%)</title><rect x="350.7" y="835.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.7" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.writeTo (30 samples, 0.15%)</title><rect x="350.8" y="819.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.8" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (6 samples, 0.03%)</title><rect x="350.9" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.9" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (6 samples, 0.03%)</title><rect x="350.9" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.9" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (20 samples, 0.10%)</title><rect x="351.3" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.3" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (20 samples, 0.10%)</title><rect x="351.3" y="787.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.3" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (17 samples, 0.09%)</title><rect x="351.3" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.3" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (17 samples, 0.09%)</title><rect x="351.3" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.3" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.writeTo (17 samples, 0.09%)</title><rect x="351.3" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.3" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.writeTo (17 samples, 0.09%)</title><rect x="351.3" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.3" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElement (17 samples, 0.09%)</title><rect x="351.3" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.3" y="718.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (17 samples, 0.09%)</title><rect x="351.3" y="691.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.3" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (17 samples, 0.09%)</title><rect x="351.3" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.3" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (17 samples, 0.09%)</title><rect x="351.3" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.3" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (16 samples, 0.08%)</title><rect x="351.3" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.3" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (13 samples, 0.07%)</title><rect x="351.4" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.4" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (7 samples, 0.04%)</title><rect x="351.4" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.4" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (7 samples, 0.04%)</title><rect x="351.4" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.4" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.pickContentType (7 samples, 0.04%)</title><rect x="352.7" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/123010766.apply (88 samples, 0.45%)</title><rect x="353.4" y="1267.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (88 samples, 0.45%)</title><rect x="353.4" y="1251.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.apply (8 samples, 0.04%)</title><rect x="353.4" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (8 samples, 0.04%)</title><rect x="353.4" y="1219.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$266/2057077925.apply (7 samples, 0.04%)</title><rect x="353.4" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (7 samples, 0.04%)</title><rect x="353.4" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.4" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1079/102883409.apply (7 samples, 0.04%)</title><rect x="353.4" y="1171.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.4" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$4 (7 samples, 0.04%)</title><rect x="353.4" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1090/1268997152.apply (79 samples, 0.40%)</title><rect x="354.0" y="1235.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (79 samples, 0.40%)</title><rect x="354.0" y="1219.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.0" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1123/290048478.apply (76 samples, 0.39%)</title><rect x="354.0" y="1203.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.0" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (76 samples, 0.39%)</title><rect x="354.0" y="1187.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.0" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (76 samples, 0.39%)</title><rect x="354.0" y="1171.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.0" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (73 samples, 0.37%)</title><rect x="354.0" y="1155.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (7 samples, 0.04%)</title><rect x="354.0" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (5 samples, 0.03%)</title><rect x="354.2" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.03%)</title><rect x="354.2" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.03%)</title><rect x="354.2" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.2" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (65 samples, 0.33%)</title><rect x="354.5" y="1139.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.5" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidResponse (8 samples, 0.04%)</title><rect x="354.5" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.5" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.newBuilder (6 samples, 0.03%)</title><rect x="354.6" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.6" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.toBuilder (6 samples, 0.03%)</title><rect x="354.6" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.6" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$Builder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="354.6" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.6" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$Builder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="354.6" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.6" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.03%)</title><rect x="354.6" y="1043.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="357.6" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.03%)</title><rect x="354.6" y="1027.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="357.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (55 samples, 0.28%)</title><rect x="355.0" y="1123.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.28%)</title><rect x="355.0" y="1107.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (54 samples, 0.28%)</title><rect x="355.1" y="1091.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (50 samples, 0.26%)</title><rect x="355.1" y="1075.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 0.26%)</title><rect x="355.1" y="1059.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.26%)</title><rect x="355.1" y="1043.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 0.26%)</title><rect x="355.1" y="1027.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 0.26%)</title><rect x="355.1" y="1011.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (50 samples, 0.26%)</title><rect x="355.1" y="995.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.1" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 0.24%)</title><rect x="355.3" y="979.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="358.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.21%)</title><rect x="355.7" y="963.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="358.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.21%)</title><rect x="355.7" y="947.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="358.7" y="958.0"></text>
</g>
<g>
<title>sys_futex (41 samples, 0.21%)</title><rect x="355.7" y="931.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.7" y="942.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.21%)</title><rect x="355.7" y="915.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.7" y="926.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.21%)</title><rect x="355.7" y="899.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.7" y="910.0"></text>
</g>
<g>
<title>wake_up_q (40 samples, 0.20%)</title><rect x="355.7" y="883.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.7" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (40 samples, 0.20%)</title><rect x="355.7" y="867.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="358.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 0.20%)</title><rect x="355.7" y="851.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.7" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$938/927400646.apply (116 samples, 0.59%)</title><rect x="358.8" y="1331.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.8" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (115 samples, 0.59%)</title><rect x="358.9" y="1315.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.9" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1076/849716262.apply (49 samples, 0.25%)</title><rect x="358.9" y="1299.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.9" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (49 samples, 0.25%)</title><rect x="358.9" y="1283.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.9" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (49 samples, 0.25%)</title><rect x="358.9" y="1267.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.9" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (49 samples, 0.25%)</title><rect x="358.9" y="1251.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.9" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (49 samples, 0.25%)</title><rect x="358.9" y="1235.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.9" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (49 samples, 0.25%)</title><rect x="358.9" y="1219.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.9" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (49 samples, 0.25%)</title><rect x="358.9" y="1203.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.9" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (48 samples, 0.25%)</title><rect x="358.9" y="1187.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.9" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (47 samples, 0.24%)</title><rect x="359.0" y="1171.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.0" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (47 samples, 0.24%)</title><rect x="359.0" y="1155.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (47 samples, 0.24%)</title><rect x="359.0" y="1139.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.0" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (47 samples, 0.24%)</title><rect x="359.0" y="1123.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.0" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (45 samples, 0.23%)</title><rect x="359.0" y="1107.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.0" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (24 samples, 0.12%)</title><rect x="359.1" y="1091.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.1" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (24 samples, 0.12%)</title><rect x="359.1" y="1075.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.1" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (24 samples, 0.12%)</title><rect x="359.1" y="1059.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (24 samples, 0.12%)</title><rect x="359.1" y="1043.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.1" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (22 samples, 0.11%)</title><rect x="359.1" y="1027.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.1" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (18 samples, 0.09%)</title><rect x="359.1" y="1011.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.1" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (18 samples, 0.09%)</title><rect x="359.1" y="995.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.1" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (18 samples, 0.09%)</title><rect x="359.1" y="979.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.1" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (18 samples, 0.09%)</title><rect x="359.1" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.1" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (14 samples, 0.07%)</title><rect x="359.2" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.2" y="958.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (6 samples, 0.03%)</title><rect x="359.6" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.6" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (6 samples, 0.03%)</title><rect x="359.6" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.6" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (6 samples, 0.03%)</title><rect x="359.6" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.6" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (6 samples, 0.03%)</title><rect x="359.6" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.6" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (5 samples, 0.03%)</title><rect x="359.6" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.6" y="878.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (12 samples, 0.06%)</title><rect x="360.6" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.6" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (12 samples, 0.06%)</title><rect x="360.6" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.6" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (12 samples, 0.06%)</title><rect x="360.6" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.6" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (12 samples, 0.06%)</title><rect x="360.6" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.6" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (10 samples, 0.05%)</title><rect x="360.6" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.6" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (8 samples, 0.04%)</title><rect x="360.7" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.7" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (8 samples, 0.04%)</title><rect x="360.7" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.7" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (8 samples, 0.04%)</title><rect x="360.7" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.7" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (8 samples, 0.04%)</title><rect x="360.7" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.7" y="974.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1356/515940148.apply (54 samples, 0.28%)</title><rect x="361.8" y="1299.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.8" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (54 samples, 0.28%)</title><rect x="361.8" y="1283.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.8" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (54 samples, 0.28%)</title><rect x="361.8" y="1267.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.8" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (54 samples, 0.28%)</title><rect x="361.8" y="1251.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.8" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (54 samples, 0.28%)</title><rect x="361.8" y="1235.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.8" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (54 samples, 0.28%)</title><rect x="361.8" y="1219.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.8" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (54 samples, 0.28%)</title><rect x="361.8" y="1203.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.8" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (54 samples, 0.28%)</title><rect x="361.8" y="1187.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.8" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (51 samples, 0.26%)</title><rect x="362.0" y="1171.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.0" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (50 samples, 0.26%)</title><rect x="362.0" y="1155.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (50 samples, 0.26%)</title><rect x="362.0" y="1139.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.0" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (50 samples, 0.26%)</title><rect x="362.0" y="1123.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.0" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownFieldProto3 (49 samples, 0.25%)</title><rect x="362.1" y="1107.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.1" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownField (49 samples, 0.25%)</title><rect x="362.1" y="1091.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.1" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet$Builder.mergeFieldFrom (49 samples, 0.25%)</title><rect x="362.1" y="1075.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.1" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.invalidWireType (48 samples, 0.25%)</title><rect x="362.1" y="1059.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.1" y="1070.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException.&lt;init&gt; (48 samples, 0.25%)</title><rect x="362.1" y="1043.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.1" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.&lt;init&gt; (48 samples, 0.25%)</title><rect x="362.1" y="1027.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.1" y="1038.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (48 samples, 0.25%)</title><rect x="362.1" y="1011.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (48 samples, 0.25%)</title><rect x="362.1" y="995.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (48 samples, 0.25%)</title><rect x="362.1" y="979.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.1" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (48 samples, 0.25%)</title><rect x="362.1" y="963.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (48 samples, 0.25%)</title><rect x="362.1" y="947.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.1" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (47 samples, 0.24%)</title><rect x="362.1" y="931.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="365.1" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (45 samples, 0.23%)</title><rect x="362.2" y="915.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="365.2" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (44 samples, 0.22%)</title><rect x="362.2" y="899.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="365.2" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (44 samples, 0.22%)</title><rect x="362.2" y="883.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="365.2" y="894.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (10 samples, 0.05%)</title><rect x="363.1" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.1" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (6 samples, 0.03%)</title><rect x="363.1" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="366.1" y="862.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (10 samples, 0.05%)</title><rect x="363.7" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="366.7" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.03%)</title><rect x="364.5" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="367.5" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1073/943736004.apply (7 samples, 0.04%)</title><rect x="365.1" y="1299.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$935/1240279849.apply (5 samples, 0.03%)</title><rect x="365.5" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.5" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (5 samples, 0.03%)</title><rect x="365.5" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.5" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (51 samples, 0.26%)</title><rect x="366.0" y="1347.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.0" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (51 samples, 0.26%)</title><rect x="366.0" y="1331.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.0" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.value (7 samples, 0.04%)</title><rect x="366.2" y="1315.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.value (7 samples, 0.04%)</title><rect x="366.2" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.2" y="1310.0"></text>
</g>
<g>
<title>scala/Some.&lt;init&gt; (6 samples, 0.03%)</title><rect x="366.2" y="1283.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.2" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (41 samples, 0.21%)</title><rect x="366.6" y="1315.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.6" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (41 samples, 0.21%)</title><rect x="366.6" y="1299.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.6" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (41 samples, 0.21%)</title><rect x="366.6" y="1283.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (37 samples, 0.19%)</title><rect x="366.6" y="1267.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (37 samples, 0.19%)</title><rect x="366.6" y="1251.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (36 samples, 0.18%)</title><rect x="366.7" y="1235.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (35 samples, 0.18%)</title><rect x="366.7" y="1219.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.7" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (35 samples, 0.18%)</title><rect x="366.7" y="1203.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (34 samples, 0.17%)</title><rect x="366.7" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (33 samples, 0.17%)</title><rect x="366.8" y="1171.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$530/1963980755.apply (33 samples, 0.17%)</title><rect x="366.8" y="1155.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (33 samples, 0.17%)</title><rect x="366.8" y="1139.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (33 samples, 0.17%)</title><rect x="366.8" y="1123.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (33 samples, 0.17%)</title><rect x="366.8" y="1107.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (33 samples, 0.17%)</title><rect x="366.8" y="1091.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (33 samples, 0.17%)</title><rect x="366.8" y="1075.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (32 samples, 0.16%)</title><rect x="366.8" y="1059.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (32 samples, 0.16%)</title><rect x="366.8" y="1043.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (32 samples, 0.16%)</title><rect x="366.8" y="1027.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (32 samples, 0.16%)</title><rect x="366.8" y="1011.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.8" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (32 samples, 0.16%)</title><rect x="366.8" y="995.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.8" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (32 samples, 0.16%)</title><rect x="366.8" y="979.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.8" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (32 samples, 0.16%)</title><rect x="366.8" y="963.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.8" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (31 samples, 0.16%)</title><rect x="366.8" y="947.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.8" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (31 samples, 0.16%)</title><rect x="366.8" y="931.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.8" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (31 samples, 0.16%)</title><rect x="366.8" y="915.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (31 samples, 0.16%)</title><rect x="366.8" y="899.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.8" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (29 samples, 0.15%)</title><rect x="366.8" y="883.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.8" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (28 samples, 0.14%)</title><rect x="366.8" y="867.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.8" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (28 samples, 0.14%)</title><rect x="366.8" y="851.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.8" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (28 samples, 0.14%)</title><rect x="366.8" y="835.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (28 samples, 0.14%)</title><rect x="366.8" y="819.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (28 samples, 0.14%)</title><rect x="366.8" y="803.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (28 samples, 0.14%)</title><rect x="366.8" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (28 samples, 0.14%)</title><rect x="366.8" y="771.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (28 samples, 0.14%)</title><rect x="366.8" y="755.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.14%)</title><rect x="366.9" y="739.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.14%)</title><rect x="366.9" y="723.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.9" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.13%)</title><rect x="367.0" y="707.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="370.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.12%)</title><rect x="367.1" y="691.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.12%)</title><rect x="367.1" y="675.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="370.1" y="686.0"></text>
</g>
<g>
<title>sys_futex (24 samples, 0.12%)</title><rect x="367.1" y="659.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="370.1" y="670.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.12%)</title><rect x="367.1" y="643.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.12%)</title><rect x="367.1" y="627.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.12%)</title><rect x="367.1" y="611.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.12%)</title><rect x="367.1" y="595.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.12%)</title><rect x="367.1" y="579.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (34 samples, 0.17%)</title><rect x="369.9" y="1491.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.9" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (30 samples, 0.15%)</title><rect x="370.1" y="1475.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.1" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (30 samples, 0.15%)</title><rect x="370.1" y="1459.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.1" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (30 samples, 0.15%)</title><rect x="370.1" y="1443.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.1" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (30 samples, 0.15%)</title><rect x="370.1" y="1427.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.1" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (30 samples, 0.15%)</title><rect x="370.1" y="1411.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.1" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (30 samples, 0.15%)</title><rect x="370.1" y="1395.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.1" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (30 samples, 0.15%)</title><rect x="370.1" y="1379.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.1" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (30 samples, 0.15%)</title><rect x="370.1" y="1363.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.1" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (30 samples, 0.15%)</title><rect x="370.1" y="1347.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.1" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (30 samples, 0.15%)</title><rect x="370.1" y="1331.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.1" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (30 samples, 0.15%)</title><rect x="370.1" y="1315.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (30 samples, 0.15%)</title><rect x="370.1" y="1299.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (29 samples, 0.15%)</title><rect x="370.1" y="1283.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (29 samples, 0.15%)</title><rect x="370.1" y="1267.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (27 samples, 0.14%)</title><rect x="370.2" y="1251.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (26 samples, 0.13%)</title><rect x="370.2" y="1235.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (26 samples, 0.13%)</title><rect x="370.2" y="1219.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.2" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (26 samples, 0.13%)</title><rect x="370.2" y="1203.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.2" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (26 samples, 0.13%)</title><rect x="370.2" y="1187.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (26 samples, 0.13%)</title><rect x="370.2" y="1171.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (26 samples, 0.13%)</title><rect x="370.2" y="1155.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (26 samples, 0.13%)</title><rect x="370.2" y="1139.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (26 samples, 0.13%)</title><rect x="370.2" y="1123.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (26 samples, 0.13%)</title><rect x="370.2" y="1107.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.13%)</title><rect x="370.2" y="1091.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.13%)</title><rect x="370.2" y="1075.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.2" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.12%)</title><rect x="370.3" y="1059.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="373.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.11%)</title><rect x="370.5" y="1043.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="370.5" y="1027.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="373.5" y="1038.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.11%)</title><rect x="370.5" y="1011.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.11%)</title><rect x="370.5" y="995.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.5" y="1006.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.10%)</title><rect x="370.6" y="979.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="373.6" y="990.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.10%)</title><rect x="370.6" y="963.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.6" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.10%)</title><rect x="370.6" y="947.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.6" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.10%)</title><rect x="370.6" y="931.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (9,270 samples, 47.40%)</title><rect x="372.0" y="1523.0" width="559.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.0" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (9,270 samples, 47.40%)</title><rect x="372.0" y="1507.0" width="559.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.0" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (32 samples, 0.16%)</title><rect x="372.1" y="1491.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (14 samples, 0.07%)</title><rect x="372.1" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (14 samples, 0.07%)</title><rect x="372.1" y="1459.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (14 samples, 0.07%)</title><rect x="372.1" y="1443.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (14 samples, 0.07%)</title><rect x="372.1" y="1427.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 0.07%)</title><rect x="372.1" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 0.07%)</title><rect x="372.1" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (14 samples, 0.07%)</title><rect x="372.1" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.07%)</title><rect x="372.1" y="1363.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.07%)</title><rect x="372.1" y="1347.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.07%)</title><rect x="372.1" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.1" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.06%)</title><rect x="372.2" y="1315.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="375.2" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="372.3" y="1299.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="375.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="372.3" y="1283.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.3" y="1294.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.05%)</title><rect x="372.3" y="1267.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.3" y="1278.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.05%)</title><rect x="372.3" y="1251.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.3" y="1262.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.05%)</title><rect x="372.3" y="1235.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.3" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.04%)</title><rect x="372.4" y="1219.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.4" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="372.4" y="1203.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="375.4" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.04%)</title><rect x="372.4" y="1187.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.4" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (16 samples, 0.08%)</title><rect x="372.9" y="1475.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.hasMessages (9 samples, 0.05%)</title><rect x="373.3" y="1459.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (8 samples, 0.04%)</title><rect x="373.4" y="1443.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages$ (8 samples, 0.04%)</title><rect x="373.4" y="1427.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages (8 samples, 0.04%)</title><rect x="373.4" y="1411.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.isEmpty (7 samples, 0.04%)</title><rect x="373.5" y="1395.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.first (7 samples, 0.04%)</title><rect x="373.5" y="1379.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.5" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (1,958 samples, 10.01%)</title><rect x="374.0" y="1491.0" width="118.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.0" y="1502.0">akka/dispatch/..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (1,890 samples, 9.66%)</title><rect x="374.1" y="1475.0" width="114.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.1" y="1486.0">akka/actor/Act..</text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (9 samples, 0.05%)</title><rect x="374.1" y="1459.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.1" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (9 samples, 0.05%)</title><rect x="374.1" y="1443.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (9 samples, 0.05%)</title><rect x="374.1" y="1427.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull (9 samples, 0.05%)</title><rect x="374.1" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (8 samples, 0.04%)</title><rect x="374.2" y="1395.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (8 samples, 0.04%)</title><rect x="374.2" y="1379.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (8 samples, 0.04%)</title><rect x="374.2" y="1363.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (1,881 samples, 9.62%)</title><rect x="374.7" y="1459.0" width="113.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.7" y="1470.0">akka/actor/Act..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (12 samples, 0.06%)</title><rect x="374.7" y="1443.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (12 samples, 0.06%)</title><rect x="374.7" y="1427.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (12 samples, 0.06%)</title><rect x="374.7" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (12 samples, 0.06%)</title><rect x="374.7" y="1395.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.7" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (12 samples, 0.06%)</title><rect x="374.7" y="1379.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$137/1977800976.apply$mcV$sp (11 samples, 0.06%)</title><rect x="374.7" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (10 samples, 0.05%)</title><rect x="374.7" y="1347.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (10 samples, 0.05%)</title><rect x="374.7" y="1331.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (10 samples, 0.05%)</title><rect x="374.7" y="1315.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (10 samples, 0.05%)</title><rect x="374.7" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (9 samples, 0.05%)</title><rect x="374.8" y="1283.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (9 samples, 0.05%)</title><rect x="374.8" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (8 samples, 0.04%)</title><rect x="374.8" y="1251.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (6 samples, 0.03%)</title><rect x="374.9" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (761 samples, 3.89%)</title><rect x="375.6" y="1443.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.6" y="1454.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (8 samples, 0.04%)</title><rect x="375.8" y="1427.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (8 samples, 0.04%)</title><rect x="375.8" y="1411.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (7 samples, 0.04%)</title><rect x="375.8" y="1395.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (5 samples, 0.03%)</title><rect x="375.8" y="1379.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (5 samples, 0.03%)</title><rect x="375.8" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (223 samples, 1.14%)</title><rect x="376.2" y="1427.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (213 samples, 1.09%)</title><rect x="376.4" y="1411.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (196 samples, 1.00%)</title><rect x="376.4" y="1395.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.4" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (193 samples, 0.99%)</title><rect x="376.4" y="1379.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (179 samples, 0.92%)</title><rect x="376.4" y="1363.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (176 samples, 0.90%)</title><rect x="376.6" y="1347.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (132 samples, 0.67%)</title><rect x="376.6" y="1331.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (130 samples, 0.66%)</title><rect x="376.7" y="1315.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (109 samples, 0.56%)</title><rect x="376.7" y="1299.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.7" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (107 samples, 0.55%)</title><rect x="376.8" y="1283.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (105 samples, 0.54%)</title><rect x="376.9" y="1267.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (105 samples, 0.54%)</title><rect x="376.9" y="1251.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 0.53%)</title><rect x="377.0" y="1235.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="380.0" y="1246.0"></text>
</g>
<g>
<title>__write (102 samples, 0.52%)</title><rect x="377.1" y="1219.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="380.1" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 0.49%)</title><rect x="377.4" y="1203.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.4" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 0.49%)</title><rect x="377.4" y="1187.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="380.4" y="1198.0"></text>
</g>
<g>
<title>sys_write (94 samples, 0.48%)</title><rect x="377.6" y="1171.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.6" y="1182.0"></text>
</g>
<g>
<title>vfs_write (91 samples, 0.47%)</title><rect x="377.8" y="1155.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.8" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (89 samples, 0.46%)</title><rect x="377.8" y="1139.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.8" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (89 samples, 0.46%)</title><rect x="377.8" y="1123.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="380.8" y="1134.0"></text>
</g>
<g>
<title>pipe_write (86 samples, 0.44%)</title><rect x="377.9" y="1107.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.9" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (72 samples, 0.37%)</title><rect x="378.3" y="1091.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.3" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (71 samples, 0.36%)</title><rect x="378.3" y="1075.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.3" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 0.36%)</title><rect x="378.3" y="1059.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.3" y="1070.0"></text>
</g>
<g>
<title>file_update_time (6 samples, 0.03%)</title><rect x="382.7" y="1091.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.7" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.&lt;init&gt; (5 samples, 0.03%)</title><rect x="383.2" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.2" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (13 samples, 0.07%)</title><rect x="383.5" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (12 samples, 0.06%)</title><rect x="383.6" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (12 samples, 0.06%)</title><rect x="383.6" y="1267.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (12 samples, 0.06%)</title><rect x="383.6" y="1251.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (12 samples, 0.06%)</title><rect x="383.6" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.6" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (12 samples, 0.06%)</title><rect x="383.6" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$131/1684366420.apply$mcV$sp (12 samples, 0.06%)</title><rect x="383.6" y="1203.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (12 samples, 0.06%)</title><rect x="383.6" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (7 samples, 0.04%)</title><rect x="383.7" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (7 samples, 0.04%)</title><rect x="383.7" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (42 samples, 0.21%)</title><rect x="384.6" y="1331.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (42 samples, 0.21%)</title><rect x="384.6" y="1315.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (6 samples, 0.03%)</title><rect x="384.7" y="1299.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.7" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (6 samples, 0.03%)</title><rect x="384.7" y="1283.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.03%)</title><rect x="384.7" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.03%)</title><rect x="384.7" y="1251.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="384.7" y="1235.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="387.7" y="1246.0"></text>
</g>
<g>
<title>__write (5 samples, 0.03%)</title><rect x="384.7" y="1219.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="387.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="384.7" y="1203.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.7" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="384.7" y="1187.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.7" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (19 samples, 0.10%)</title><rect x="385.5" y="1299.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (18 samples, 0.09%)</title><rect x="385.5" y="1283.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (18 samples, 0.09%)</title><rect x="385.5" y="1267.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (17 samples, 0.09%)</title><rect x="385.6" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (17 samples, 0.09%)</title><rect x="385.6" y="1235.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (16 samples, 0.08%)</title><rect x="385.7" y="1219.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.7" y="1230.0"></text>
</g>
<g>
<title>setsockopt (6 samples, 0.03%)</title><rect x="385.7" y="1203.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="388.7" y="1214.0"></text>
</g>
<g>
<title>socket (10 samples, 0.05%)</title><rect x="386.0" y="1203.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="389.0" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="386.1" y="1187.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.1" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="386.1" y="1171.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.1" y="1182.0"></text>
</g>
<g>
<title>sys_socket (8 samples, 0.04%)</title><rect x="386.1" y="1155.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="389.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (7 samples, 0.04%)</title><rect x="386.6" y="1299.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (7 samples, 0.04%)</title><rect x="386.6" y="1283.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (6 samples, 0.03%)</title><rect x="386.7" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.7" y="1278.0"></text>
</g>
<g>
<title>__fcntl (6 samples, 0.03%)</title><rect x="386.7" y="1251.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="389.7" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="386.7" y="1235.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.7" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="386.7" y="1219.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (11 samples, 0.06%)</title><rect x="387.3" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (11 samples, 0.06%)</title><rect x="387.3" y="1347.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (11 samples, 0.06%)</title><rect x="387.3" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (5 samples, 0.03%)</title><rect x="387.7" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (5 samples, 0.03%)</title><rect x="387.7" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (5 samples, 0.03%)</title><rect x="387.7" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (15 samples, 0.08%)</title><rect x="388.4" y="1395.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.4" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$532/17680342.apply (15 samples, 0.08%)</title><rect x="388.4" y="1379.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.4" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (14 samples, 0.07%)</title><rect x="388.4" y="1363.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (14 samples, 0.07%)</title><rect x="388.4" y="1347.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (6 samples, 0.03%)</title><rect x="388.5" y="1331.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.&lt;init&gt; (6 samples, 0.03%)</title><rect x="388.9" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (5 samples, 0.03%)</title><rect x="389.4" y="1411.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.03%)</title><rect x="389.4" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.4" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (527 samples, 2.69%)</title><rect x="389.8" y="1427.0" width="31.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.8" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (526 samples, 2.69%)</title><rect x="389.8" y="1411.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.8" y="1422.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (526 samples, 2.69%)</title><rect x="389.8" y="1395.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.8" y="1406.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (526 samples, 2.69%)</title><rect x="389.8" y="1379.0" width="31.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.8" y="1390.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (26 samples, 0.13%)</title><rect x="389.8" y="1363.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (26 samples, 0.13%)</title><rect x="389.8" y="1347.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (26 samples, 0.13%)</title><rect x="389.8" y="1331.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (20 samples, 0.10%)</title><rect x="390.2" y="1315.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (19 samples, 0.10%)</title><rect x="390.2" y="1299.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (19 samples, 0.10%)</title><rect x="390.2" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop (19 samples, 0.10%)</title><rect x="390.2" y="1267.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (18 samples, 0.09%)</title><rect x="390.2" y="1251.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (11 samples, 0.06%)</title><rect x="390.2" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (11 samples, 0.06%)</title><rect x="390.2" y="1219.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (11 samples, 0.06%)</title><rect x="390.2" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (494 samples, 2.53%)</title><rect x="391.7" y="1363.0" width="29.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.7" y="1374.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$currentLimit_$eq (5 samples, 0.03%)</title><rect x="391.9" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (483 samples, 2.47%)</title><rect x="392.2" y="1347.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.2" y="1358.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (109 samples, 0.56%)</title><rect x="392.3" y="1331.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.preStart (9 samples, 0.05%)</title><rect x="392.5" y="1315.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="392.6" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="392.6" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (21 samples, 0.11%)</title><rect x="393.1" y="1315.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (19 samples, 0.10%)</title><rect x="393.2" y="1299.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (5 samples, 0.03%)</title><rect x="393.3" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (5 samples, 0.03%)</title><rect x="393.3" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (7 samples, 0.04%)</title><rect x="393.6" y="1283.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (63 samples, 0.32%)</title><rect x="394.6" y="1315.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (8 samples, 0.04%)</title><rect x="394.6" y="1299.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.04%)</title><rect x="394.6" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.04%)</title><rect x="394.6" y="1267.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.04%)</title><rect x="394.6" y="1251.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.04%)</title><rect x="394.6" y="1235.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.04%)</title><rect x="394.6" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.04%)</title><rect x="394.6" y="1203.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.04%)</title><rect x="394.6" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.04%)</title><rect x="394.6" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="394.6" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.04%)</title><rect x="394.6" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="394.6" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.04%)</title><rect x="394.6" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.04%)</title><rect x="394.6" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.04%)</title><rect x="394.6" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.04%)</title><rect x="394.6" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.04%)</title><rect x="394.6" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="394.6" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.04%)</title><rect x="394.6" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.04%)</title><rect x="394.6" y="995.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="397.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="394.6" y="979.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="397.6" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="394.6" y="963.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.6" y="974.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="394.6" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="397.6" y="958.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="394.6" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.6" y="942.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="394.6" y="915.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.6" y="926.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="394.6" y="899.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.6" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="394.6" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.6" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="394.6" y="867.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.6" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (31 samples, 0.16%)</title><rect x="395.2" y="1299.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (31 samples, 0.16%)</title><rect x="395.2" y="1283.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (27 samples, 0.14%)</title><rect x="395.3" y="1267.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (27 samples, 0.14%)</title><rect x="395.3" y="1251.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (27 samples, 0.14%)</title><rect x="395.3" y="1235.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (27 samples, 0.14%)</title><rect x="395.3" y="1219.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.3" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (27 samples, 0.14%)</title><rect x="395.3" y="1203.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.3" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (27 samples, 0.14%)</title><rect x="395.3" y="1187.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (27 samples, 0.14%)</title><rect x="395.3" y="1171.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (27 samples, 0.14%)</title><rect x="395.3" y="1155.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (27 samples, 0.14%)</title><rect x="395.3" y="1139.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (27 samples, 0.14%)</title><rect x="395.3" y="1123.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (27 samples, 0.14%)</title><rect x="395.3" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (27 samples, 0.14%)</title><rect x="395.3" y="1091.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (27 samples, 0.14%)</title><rect x="395.3" y="1075.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (27 samples, 0.14%)</title><rect x="395.3" y="1059.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.14%)</title><rect x="395.3" y="1043.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.13%)</title><rect x="395.4" y="1027.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.13%)</title><rect x="395.4" y="1011.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="398.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.12%)</title><rect x="395.5" y="995.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.12%)</title><rect x="395.5" y="979.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="398.5" y="990.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.12%)</title><rect x="395.5" y="963.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="398.5" y="974.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.12%)</title><rect x="395.5" y="947.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="398.5" y="958.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.12%)</title><rect x="395.5" y="931.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.5" y="942.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.11%)</title><rect x="395.7" y="915.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.7" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.11%)</title><rect x="395.7" y="899.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="398.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.11%)</title><rect x="395.7" y="883.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="398.7" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (21 samples, 0.11%)</title><rect x="397.1" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (21 samples, 0.11%)</title><rect x="397.1" y="1283.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (21 samples, 0.11%)</title><rect x="397.1" y="1267.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (17 samples, 0.09%)</title><rect x="397.2" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (17 samples, 0.09%)</title><rect x="397.2" y="1235.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (17 samples, 0.09%)</title><rect x="397.2" y="1219.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (12 samples, 0.06%)</title><rect x="397.5" y="1203.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (12 samples, 0.06%)</title><rect x="397.5" y="1187.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (11 samples, 0.06%)</title><rect x="397.5" y="1171.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (10 samples, 0.05%)</title><rect x="397.5" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (5 samples, 0.03%)</title><rect x="397.8" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (5 samples, 0.03%)</title><rect x="397.8" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (5 samples, 0.03%)</title><rect x="398.6" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (5 samples, 0.03%)</title><rect x="398.6" y="1299.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$541/1871711286.apply (5 samples, 0.03%)</title><rect x="398.6" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (5 samples, 0.03%)</title><rect x="398.6" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (5 samples, 0.03%)</title><rect x="398.6" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (5 samples, 0.03%)</title><rect x="398.6" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (59 samples, 0.30%)</title><rect x="398.9" y="1331.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (59 samples, 0.30%)</title><rect x="398.9" y="1315.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (50 samples, 0.26%)</title><rect x="399.2" y="1299.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (50 samples, 0.26%)</title><rect x="399.2" y="1283.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (50 samples, 0.26%)</title><rect x="399.2" y="1267.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.2" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (42 samples, 0.21%)</title><rect x="399.6" y="1251.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (40 samples, 0.20%)</title><rect x="399.6" y="1235.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.6" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (40 samples, 0.20%)</title><rect x="399.6" y="1219.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (38 samples, 0.19%)</title><rect x="399.7" y="1203.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (37 samples, 0.19%)</title><rect x="399.7" y="1187.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (20 samples, 0.10%)</title><rect x="399.9" y="1171.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (13 samples, 0.07%)</title><rect x="400.3" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (12 samples, 0.06%)</title><rect x="400.4" y="1139.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.06%)</title><rect x="400.4" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.06%)</title><rect x="400.4" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (5 samples, 0.03%)</title><rect x="401.4" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (5 samples, 0.03%)</title><rect x="401.4" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (312 samples, 1.60%)</title><rect x="402.4" y="1331.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (306 samples, 1.56%)</title><rect x="402.5" y="1315.0" width="18.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (26 samples, 0.13%)</title><rect x="402.9" y="1299.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.9" y="1310.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.05%)</title><rect x="403.9" y="1283.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="406.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (244 samples, 1.25%)</title><rect x="404.5" y="1299.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onUpstreamFinish (15 samples, 0.08%)</title><rect x="404.5" y="1283.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (13 samples, 0.07%)</title><rect x="404.5" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (13 samples, 0.07%)</title><rect x="404.5" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (9 samples, 0.05%)</title><rect x="404.7" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (5 samples, 0.03%)</title><rect x="404.9" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (5 samples, 0.03%)</title><rect x="404.9" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$Connection.slot_$eq (5 samples, 0.03%)</title><rect x="405.4" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (6 samples, 0.03%)</title><rect x="405.7" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (15 samples, 0.08%)</title><rect x="406.0" y="1283.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (11 samples, 0.06%)</title><rect x="406.3" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (10 samples, 0.05%)</title><rect x="406.3" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.05%)</title><rect x="406.3" y="1235.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (10 samples, 0.05%)</title><rect x="406.3" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (10 samples, 0.05%)</title><rect x="406.3" y="1203.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.05%)</title><rect x="406.4" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.05%)</title><rect x="406.4" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.05%)</title><rect x="406.4" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.05%)</title><rect x="406.4" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.05%)</title><rect x="406.4" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.05%)</title><rect x="406.4" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.05%)</title><rect x="406.4" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.05%)</title><rect x="406.4" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.05%)</title><rect x="406.4" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.05%)</title><rect x="406.4" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.05%)</title><rect x="406.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (9 samples, 0.05%)</title><rect x="406.4" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.05%)</title><rect x="406.4" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.05%)</title><rect x="406.4" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="406.5" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.5" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.03%)</title><rect x="406.5" y="947.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="409.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="406.5" y="931.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.5" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="406.5" y="915.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.5" y="926.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.03%)</title><rect x="406.5" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.5" y="910.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="406.5" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="409.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="406.5" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.5" y="878.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="406.5" y="851.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.5" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="406.5" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.5" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="406.5" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.5" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (203 samples, 1.04%)</title><rect x="407.0" y="1283.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (194 samples, 0.99%)</title><rect x="407.0" y="1267.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (9 samples, 0.05%)</title><rect x="407.0" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (9 samples, 0.05%)</title><rect x="407.0" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (8 samples, 0.04%)</title><rect x="407.1" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.1" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (183 samples, 0.94%)</title><rect x="407.7" y="1251.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (183 samples, 0.94%)</title><rect x="407.7" y="1235.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (182 samples, 0.93%)</title><rect x="407.7" y="1219.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (181 samples, 0.93%)</title><rect x="407.8" y="1203.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.8" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (181 samples, 0.93%)</title><rect x="407.8" y="1187.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.8" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (181 samples, 0.93%)</title><rect x="407.8" y="1171.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.8" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (181 samples, 0.93%)</title><rect x="407.8" y="1155.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (181 samples, 0.93%)</title><rect x="407.8" y="1139.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (181 samples, 0.93%)</title><rect x="407.8" y="1123.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (181 samples, 0.93%)</title><rect x="407.8" y="1107.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (169 samples, 0.86%)</title><rect x="408.2" y="1091.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (169 samples, 0.86%)</title><rect x="408.2" y="1075.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (168 samples, 0.86%)</title><rect x="408.2" y="1059.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.2" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (166 samples, 0.85%)</title><rect x="408.3" y="1043.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.3" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (163 samples, 0.83%)</title><rect x="408.5" y="1027.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.5" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (163 samples, 0.83%)</title><rect x="408.5" y="1011.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.5" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (163 samples, 0.83%)</title><rect x="408.5" y="995.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.5" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (162 samples, 0.83%)</title><rect x="408.5" y="979.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.5" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (162 samples, 0.83%)</title><rect x="408.5" y="963.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.5" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (162 samples, 0.83%)</title><rect x="408.5" y="947.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (152 samples, 0.78%)</title><rect x="408.6" y="931.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (150 samples, 0.77%)</title><rect x="408.6" y="915.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (150 samples, 0.77%)</title><rect x="408.6" y="899.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.6" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (150 samples, 0.77%)</title><rect x="408.6" y="883.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (150 samples, 0.77%)</title><rect x="408.6" y="867.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (150 samples, 0.77%)</title><rect x="408.6" y="851.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (150 samples, 0.77%)</title><rect x="408.6" y="835.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (150 samples, 0.77%)</title><rect x="408.6" y="819.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (150 samples, 0.77%)</title><rect x="408.6" y="803.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (150 samples, 0.77%)</title><rect x="408.6" y="787.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (144 samples, 0.74%)</title><rect x="409.0" y="771.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (144 samples, 0.74%)</title><rect x="409.0" y="755.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.07%)</title><rect x="409.0" y="739.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="412.0" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (129 samples, 0.66%)</title><rect x="409.9" y="739.0" width="7.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="412.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 0.60%)</title><rect x="410.6" y="723.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="413.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (117 samples, 0.60%)</title><rect x="410.6" y="707.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.6" y="718.0"></text>
</g>
<g>
<title>sys_futex (114 samples, 0.58%)</title><rect x="410.8" y="691.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.8" y="702.0"></text>
</g>
<g>
<title>do_futex (113 samples, 0.58%)</title><rect x="410.9" y="675.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.9" y="686.0"></text>
</g>
<g>
<title>futex_wake (113 samples, 0.58%)</title><rect x="410.9" y="659.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.9" y="670.0"></text>
</g>
<g>
<title>wake_up_q (108 samples, 0.55%)</title><rect x="411.2" y="643.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="414.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (107 samples, 0.55%)</title><rect x="411.2" y="627.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (106 samples, 0.54%)</title><rect x="411.3" y="611.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.03%)</title><rect x="417.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.8" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="418.4" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPush (5 samples, 0.03%)</title><rect x="418.7" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (26 samples, 0.13%)</title><rect x="419.2" y="1299.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (5 samples, 0.03%)</title><rect x="420.3" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (5 samples, 0.03%)</title><rect x="421.0" y="1315.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleFailure (5 samples, 0.03%)</title><rect x="421.6" y="1443.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleFailure$ (5 samples, 0.03%)</title><rect x="421.6" y="1427.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleFailure (5 samples, 0.03%)</title><rect x="421.6" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (334 samples, 1.71%)</title><rect x="422.0" y="1443.0" width="20.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (312 samples, 1.60%)</title><rect x="422.0" y="1427.0" width="18.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (312 samples, 1.60%)</title><rect x="422.0" y="1411.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (231 samples, 1.18%)</title><rect x="422.0" y="1395.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (231 samples, 1.18%)</title><rect x="422.0" y="1379.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (231 samples, 1.18%)</title><rect x="422.0" y="1363.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (231 samples, 1.18%)</title><rect x="422.0" y="1347.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.0" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (231 samples, 1.18%)</title><rect x="422.0" y="1331.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (231 samples, 1.18%)</title><rect x="422.0" y="1315.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (226 samples, 1.16%)</title><rect x="422.1" y="1299.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (226 samples, 1.16%)</title><rect x="422.1" y="1283.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (226 samples, 1.16%)</title><rect x="422.1" y="1267.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (226 samples, 1.16%)</title><rect x="422.1" y="1251.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (226 samples, 1.16%)</title><rect x="422.1" y="1235.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (226 samples, 1.16%)</title><rect x="422.1" y="1219.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (226 samples, 1.16%)</title><rect x="422.1" y="1203.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (226 samples, 1.16%)</title><rect x="422.1" y="1187.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (223 samples, 1.14%)</title><rect x="422.3" y="1171.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (223 samples, 1.14%)</title><rect x="422.3" y="1155.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.3" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.07%)</title><rect x="422.3" y="1139.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="425.3" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.03%)</title><rect x="422.7" y="1123.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="425.7" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (209 samples, 1.07%)</title><rect x="423.1" y="1139.0" width="12.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="426.1" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (186 samples, 0.95%)</title><rect x="424.5" y="1123.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.5" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (186 samples, 0.95%)</title><rect x="424.5" y="1107.0" width="11.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.5" y="1118.0"></text>
</g>
<g>
<title>sys_futex (178 samples, 0.91%)</title><rect x="425.0" y="1091.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="428.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (177 samples, 0.91%)</title><rect x="425.0" y="1075.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.0" y="1086.0"></text>
</g>
<g>
<title>futex_wake (175 samples, 0.89%)</title><rect x="425.1" y="1059.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.1" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (168 samples, 0.86%)</title><rect x="425.5" y="1043.0" width="10.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="428.5" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (167 samples, 0.85%)</title><rect x="425.6" y="1027.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.6" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (167 samples, 0.85%)</title><rect x="425.6" y="1011.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (11 samples, 0.06%)</title><rect x="436.0" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (10 samples, 0.05%)</title><rect x="436.0" y="1379.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (10 samples, 0.05%)</title><rect x="436.0" y="1363.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (10 samples, 0.05%)</title><rect x="436.0" y="1347.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.replaceWith (69 samples, 0.35%)</title><rect x="436.7" y="1395.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.locked (68 samples, 0.35%)</title><rect x="436.7" y="1379.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.32%)</title><rect x="436.7" y="1363.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (61 samples, 0.31%)</title><rect x="436.8" y="1347.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (60 samples, 0.31%)</title><rect x="436.8" y="1331.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (60 samples, 0.31%)</title><rect x="436.8" y="1315.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (60 samples, 0.31%)</title><rect x="436.8" y="1299.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.8" y="1310.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.04%)</title><rect x="439.7" y="1283.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="442.7" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (6 samples, 0.03%)</title><rect x="440.4" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell$$Lambda$141/1458048548.apply$mcV$sp (6 samples, 0.03%)</title><rect x="440.4" y="1347.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.$anonfun$replaceWith$1 (6 samples, 0.03%)</title><rect x="440.4" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (22 samples, 0.11%)</title><rect x="440.9" y="1427.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (22 samples, 0.11%)</title><rect x="440.9" y="1411.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (18 samples, 0.09%)</title><rect x="441.1" y="1395.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (10 samples, 0.05%)</title><rect x="441.6" y="1379.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (10 samples, 0.05%)</title><rect x="441.6" y="1363.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.6" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (10 samples, 0.05%)</title><rect x="441.6" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (10 samples, 0.05%)</title><rect x="441.6" y="1331.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.6" y="1342.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (8 samples, 0.04%)</title><rect x="441.7" y="1315.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.7" y="1326.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (7 samples, 0.04%)</title><rect x="441.8" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.8" y="1310.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (7 samples, 0.04%)</title><rect x="441.8" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.8" y="1294.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (7 samples, 0.04%)</title><rect x="441.8" y="1267.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (7 samples, 0.04%)</title><rect x="441.8" y="1251.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (571 samples, 2.92%)</title><rect x="442.2" y="1443.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.2" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (571 samples, 2.92%)</title><rect x="442.2" y="1427.0" width="34.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.2" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (570 samples, 2.91%)</title><rect x="442.2" y="1411.0" width="34.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.2" y="1422.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.setReceiveTimeout (5 samples, 0.03%)</title><rect x="442.4" y="1395.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout$ (5 samples, 0.03%)</title><rect x="442.4" y="1379.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (555 samples, 2.84%)</title><rect x="442.7" y="1395.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.7" y="1406.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (68 samples, 0.35%)</title><rect x="442.8" y="1379.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.8" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (68 samples, 0.35%)</title><rect x="442.8" y="1363.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.8" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (18 samples, 0.09%)</title><rect x="442.8" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (12 samples, 0.06%)</title><rect x="443.2" y="1331.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (6 samples, 0.03%)</title><rect x="443.5" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (5 samples, 0.03%)</title><rect x="443.5" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (50 samples, 0.26%)</title><rect x="443.9" y="1347.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (30 samples, 0.15%)</title><rect x="443.9" y="1331.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (25 samples, 0.13%)</title><rect x="444.2" y="1315.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (21 samples, 0.11%)</title><rect x="444.4" y="1299.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (21 samples, 0.11%)</title><rect x="444.4" y="1283.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (6 samples, 0.03%)</title><rect x="445.0" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (20 samples, 0.10%)</title><rect x="445.7" y="1331.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (5 samples, 0.03%)</title><rect x="446.6" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (86 samples, 0.44%)</title><rect x="446.9" y="1379.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (79 samples, 0.40%)</title><rect x="447.0" y="1363.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.0" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (75 samples, 0.38%)</title><rect x="447.3" y="1347.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.3" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (26 samples, 0.13%)</title><rect x="447.4" y="1331.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.04%)</title><rect x="447.7" y="1315.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (5 samples, 0.03%)</title><rect x="448.3" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.setAccessible (6 samples, 0.03%)</title><rect x="448.6" y="1315.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (47 samples, 0.24%)</title><rect x="448.9" y="1331.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (35 samples, 0.18%)</title><rect x="449.4" y="1315.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (33 samples, 0.17%)</title><rect x="449.4" y="1299.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (21 samples, 0.11%)</title><rect x="449.8" y="1283.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (21 samples, 0.11%)</title><rect x="449.8" y="1267.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.8" y="1278.0"></text>
</g>
<g>
<title>page_fault (11 samples, 0.06%)</title><rect x="450.4" y="1251.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.4" y="1262.0"></text>
</g>
<g>
<title>do_page_fault (11 samples, 0.06%)</title><rect x="450.4" y="1235.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.4" y="1246.0"></text>
</g>
<g>
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="450.4" y="1219.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.4" y="1230.0"></text>
</g>
<g>
<title>handle_mm_fault (9 samples, 0.05%)</title><rect x="450.5" y="1203.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.5" y="1214.0"></text>
</g>
<g>
<title>__handle_mm_fault (8 samples, 0.04%)</title><rect x="450.5" y="1187.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.5" y="1198.0"></text>
</g>
<g>
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="450.5" y="1171.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.5" y="1182.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (5 samples, 0.03%)</title><rect x="450.5" y="1155.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.langReflectAccess (6 samples, 0.03%)</title><rect x="451.1" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (5 samples, 0.03%)</title><rect x="451.5" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.deadLetters (5 samples, 0.03%)</title><rect x="451.8" y="1363.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (9 samples, 0.05%)</title><rect x="452.1" y="1379.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs$ (9 samples, 0.05%)</title><rect x="452.1" y="1363.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs (9 samples, 0.05%)</title><rect x="452.1" y="1347.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (9 samples, 0.05%)</title><rect x="452.1" y="1331.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (9 samples, 0.05%)</title><rect x="452.1" y="1315.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (8 samples, 0.04%)</title><rect x="452.1" y="1299.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (10 samples, 0.05%)</title><rect x="452.6" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (9 samples, 0.05%)</title><rect x="452.7" y="1363.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (7 samples, 0.04%)</title><rect x="452.8" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (259 samples, 1.32%)</title><rect x="453.2" y="1379.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (259 samples, 1.32%)</title><rect x="453.2" y="1363.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (259 samples, 1.32%)</title><rect x="453.2" y="1347.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (259 samples, 1.32%)</title><rect x="453.2" y="1331.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (259 samples, 1.32%)</title><rect x="453.2" y="1315.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (8 samples, 0.04%)</title><rect x="453.3" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (8 samples, 0.04%)</title><rect x="453.3" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (8 samples, 0.04%)</title><rect x="453.3" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (250 samples, 1.28%)</title><rect x="453.8" y="1299.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (248 samples, 1.27%)</title><rect x="453.8" y="1283.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (248 samples, 1.27%)</title><rect x="453.8" y="1267.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (248 samples, 1.27%)</title><rect x="453.8" y="1251.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (248 samples, 1.27%)</title><rect x="453.8" y="1235.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (248 samples, 1.27%)</title><rect x="453.8" y="1219.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (248 samples, 1.27%)</title><rect x="453.8" y="1203.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (248 samples, 1.27%)</title><rect x="453.8" y="1187.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (248 samples, 1.27%)</title><rect x="453.8" y="1171.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (244 samples, 1.25%)</title><rect x="454.1" y="1155.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (244 samples, 1.25%)</title><rect x="454.1" y="1139.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.1" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.08%)</title><rect x="454.1" y="1123.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="457.1" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (228 samples, 1.17%)</title><rect x="455.0" y="1123.0" width="13.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="458.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 1.06%)</title><rect x="456.2" y="1107.0" width="12.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="459.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (207 samples, 1.06%)</title><rect x="456.2" y="1091.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.2" y="1102.0"></text>
</g>
<g>
<title>sys_futex (200 samples, 1.02%)</title><rect x="456.6" y="1075.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="459.6" y="1086.0"></text>
</g>
<g>
<title>do_futex (200 samples, 1.02%)</title><rect x="456.6" y="1059.0" width="12.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="459.6" y="1070.0"></text>
</g>
<g>
<title>futex_wake (200 samples, 1.02%)</title><rect x="456.6" y="1043.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="459.6" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (187 samples, 0.96%)</title><rect x="457.4" y="1027.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.4" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (187 samples, 0.96%)</title><rect x="457.4" y="1011.0" width="11.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (187 samples, 0.96%)</title><rect x="457.4" y="995.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (15 samples, 0.08%)</title><rect x="468.9" y="1379.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.9" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (14 samples, 0.07%)</title><rect x="468.9" y="1363.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (9 samples, 0.05%)</title><rect x="469.2" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.2" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (9 samples, 0.05%)</title><rect x="469.2" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (9 samples, 0.05%)</title><rect x="469.2" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (9 samples, 0.05%)</title><rect x="469.2" y="1299.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (8 samples, 0.04%)</title><rect x="469.3" y="1283.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages$ (8 samples, 0.04%)</title><rect x="469.3" y="1267.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages (8 samples, 0.04%)</title><rect x="469.3" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.isEmpty (8 samples, 0.04%)</title><rect x="469.3" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.first (8 samples, 0.04%)</title><rect x="469.3" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (8 samples, 0.04%)</title><rect x="469.3" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (106 samples, 0.54%)</title><rect x="469.8" y="1379.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (106 samples, 0.54%)</title><rect x="469.8" y="1363.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (106 samples, 0.54%)</title><rect x="469.8" y="1347.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.8" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (106 samples, 0.54%)</title><rect x="469.8" y="1331.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (99 samples, 0.51%)</title><rect x="469.8" y="1315.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (79 samples, 0.40%)</title><rect x="470.2" y="1299.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (66 samples, 0.34%)</title><rect x="470.2" y="1283.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (64 samples, 0.33%)</title><rect x="470.4" y="1267.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (59 samples, 0.30%)</title><rect x="470.4" y="1251.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.04%)</title><rect x="470.5" y="1235.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (41 samples, 0.21%)</title><rect x="470.9" y="1235.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (41 samples, 0.21%)</title><rect x="470.9" y="1219.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (38 samples, 0.19%)</title><rect x="470.9" y="1203.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (26 samples, 0.13%)</title><rect x="470.9" y="1187.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (17 samples, 0.09%)</title><rect x="471.5" y="1171.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (17 samples, 0.09%)</title><rect x="471.5" y="1155.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (17 samples, 0.09%)</title><rect x="471.5" y="1139.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.5" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.09%)</title><rect x="471.5" y="1123.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.5" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.04%)</title><rect x="472.1" y="1107.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="475.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (12 samples, 0.06%)</title><rect x="472.5" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (12 samples, 0.06%)</title><rect x="472.5" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.03%)</title><rect x="472.7" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.05%)</title><rect x="473.4" y="1235.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.05%)</title><rect x="473.4" y="1219.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.03%)</title><rect x="473.4" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.06%)</title><rect x="474.2" y="1283.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.06%)</title><rect x="474.2" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.04%)</title><rect x="474.2" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (5 samples, 0.03%)</title><rect x="474.7" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.03%)</title><rect x="474.7" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.04%)</title><rect x="475.0" y="1299.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.0" y="1310.0"></text>
</g>
<g>
<title>akka/util/Collections$EmptyImmutableSeq$.foreach (6 samples, 0.03%)</title><rect x="476.2" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.2" y="1406.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (6 samples, 0.03%)</title><rect x="476.2" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (6 samples, 0.03%)</title><rect x="476.2" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (190 samples, 0.97%)</title><rect x="476.6" y="1443.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (190 samples, 0.97%)</title><rect x="476.6" y="1427.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (190 samples, 0.97%)</title><rect x="476.6" y="1411.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (151 samples, 0.77%)</title><rect x="476.8" y="1395.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (151 samples, 0.77%)</title><rect x="476.8" y="1379.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (151 samples, 0.77%)</title><rect x="476.8" y="1363.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (79 samples, 0.40%)</title><rect x="476.8" y="1347.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (79 samples, 0.40%)</title><rect x="476.8" y="1331.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (79 samples, 0.40%)</title><rect x="476.8" y="1315.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (78 samples, 0.40%)</title><rect x="476.9" y="1299.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (19 samples, 0.10%)</title><rect x="476.9" y="1283.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (19 samples, 0.10%)</title><rect x="476.9" y="1267.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (19 samples, 0.10%)</title><rect x="476.9" y="1251.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (57 samples, 0.29%)</title><rect x="478.2" y="1283.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (55 samples, 0.28%)</title><rect x="478.3" y="1267.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (55 samples, 0.28%)</title><rect x="478.3" y="1251.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (55 samples, 0.28%)</title><rect x="478.3" y="1235.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (55 samples, 0.28%)</title><rect x="478.3" y="1219.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (55 samples, 0.28%)</title><rect x="478.3" y="1203.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (54 samples, 0.28%)</title><rect x="478.3" y="1187.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (52 samples, 0.27%)</title><rect x="478.4" y="1171.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (22 samples, 0.11%)</title><rect x="478.4" y="1155.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (20 samples, 0.10%)</title><rect x="478.5" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (9 samples, 0.05%)</title><rect x="478.5" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balLeft (6 samples, 0.03%)</title><rect x="478.6" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (11 samples, 0.06%)</title><rect x="479.1" y="1123.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (11 samples, 0.06%)</title><rect x="479.1" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (5 samples, 0.03%)</title><rect x="479.1" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (5 samples, 0.03%)</title><rect x="479.1" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (6 samples, 0.03%)</title><rect x="479.4" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.03%)</title><rect x="479.4" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (5 samples, 0.03%)</title><rect x="479.4" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (5 samples, 0.03%)</title><rect x="479.4" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (29 samples, 0.15%)</title><rect x="479.7" y="1155.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (28 samples, 0.14%)</title><rect x="479.8" y="1139.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (24 samples, 0.12%)</title><rect x="480.0" y="1123.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (24 samples, 0.12%)</title><rect x="480.0" y="1107.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (8 samples, 0.04%)</title><rect x="480.0" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.03%)</title><rect x="480.1" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (16 samples, 0.08%)</title><rect x="480.5" y="1091.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (15 samples, 0.08%)</title><rect x="480.5" y="1075.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (7 samples, 0.04%)</title><rect x="480.5" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.04%)</title><rect x="480.5" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.04%)</title><rect x="480.9" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.04%)</title><rect x="480.9" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.04%)</title><rect x="480.9" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.04%)</title><rect x="480.9" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.04%)</title><rect x="480.9" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.04%)</title><rect x="480.9" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (6 samples, 0.03%)</title><rect x="481.0" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.03%)</title><rect x="481.0" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (6 samples, 0.03%)</title><rect x="481.0" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.03%)</title><rect x="481.0" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (5 samples, 0.03%)</title><rect x="481.0" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (5 samples, 0.03%)</title><rect x="481.0" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.0" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (5 samples, 0.03%)</title><rect x="481.0" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.0" y="878.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (72 samples, 0.37%)</title><rect x="481.6" y="1347.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (72 samples, 0.37%)</title><rect x="481.6" y="1331.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anon$10.&lt;init&gt; (72 samples, 0.37%)</title><rect x="481.6" y="1315.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/OneForOneStrategy.&lt;init&gt; (71 samples, 0.36%)</title><rect x="481.7" y="1299.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.7" y="1310.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.06%)</title><rect x="484.9" y="1283.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="487.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (5 samples, 0.03%)</title><rect x="486.1" y="1395.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (5 samples, 0.03%)</title><rect x="486.1" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor (5 samples, 0.03%)</title><rect x="486.1" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (12 samples, 0.06%)</title><rect x="486.4" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.path (5 samples, 0.03%)</title><rect x="486.5" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (5 samples, 0.03%)</title><rect x="486.8" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (5 samples, 0.03%)</title><rect x="486.8" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (5 samples, 0.03%)</title><rect x="486.8" y="1347.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.8" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (43 samples, 0.22%)</title><rect x="488.2" y="1475.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (43 samples, 0.22%)</title><rect x="488.2" y="1459.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (43 samples, 0.22%)</title><rect x="488.2" y="1443.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (6 samples, 0.03%)</title><rect x="488.2" y="1427.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (16 samples, 0.08%)</title><rect x="488.5" y="1427.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="1438.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (16 samples, 0.08%)</title><rect x="488.5" y="1411.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (14 samples, 0.07%)</title><rect x="489.5" y="1427.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (14 samples, 0.07%)</title><rect x="489.5" y="1411.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.5" y="1422.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.05%)</title><rect x="489.7" y="1395.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="492.7" y="1406.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="490.5" y="1427.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="493.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (10 samples, 0.05%)</title><rect x="490.8" y="1475.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.isClosed (8 samples, 0.04%)</title><rect x="491.4" y="1475.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (8 samples, 0.04%)</title><rect x="491.4" y="1459.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.4" y="1470.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (8 samples, 0.04%)</title><rect x="491.4" y="1443.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.4" y="1454.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="491.5" y="1427.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="494.5" y="1438.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="491.8" y="1475.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="494.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (7,272 samples, 37.18%)</title><rect x="492.1" y="1491.0" width="438.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.1" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (7,043 samples, 36.01%)</title><rect x="492.5" y="1475.0" width="425.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.5" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (6 samples, 0.03%)</title><rect x="492.6" y="1459.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (6 samples, 0.03%)</title><rect x="492.6" y="1443.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (6 samples, 0.03%)</title><rect x="492.6" y="1427.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (5 samples, 0.03%)</title><rect x="492.6" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeoutIfNeeded (77 samples, 0.39%)</title><rect x="492.9" y="1459.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded$ (77 samples, 0.39%)</title><rect x="492.9" y="1443.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded (77 samples, 0.39%)</title><rect x="492.9" y="1427.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (75 samples, 0.38%)</title><rect x="493.1" y="1411.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (75 samples, 0.38%)</title><rect x="493.1" y="1395.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (73 samples, 0.37%)</title><rect x="493.2" y="1379.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.cancel (47 samples, 0.24%)</title><rect x="493.6" y="1363.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.extractTask (47 samples, 0.24%)</title><rect x="493.6" y="1347.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.equals (5 samples, 0.03%)</title><rect x="495.0" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.0" y="1342.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (18 samples, 0.09%)</title><rect x="495.3" y="1331.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.3" y="1342.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (18 samples, 0.09%)</title><rect x="496.5" y="1363.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (18 samples, 0.09%)</title><rect x="497.6" y="1459.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (18 samples, 0.09%)</title><rect x="497.6" y="1443.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (18 samples, 0.09%)</title><rect x="497.6" y="1427.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (18 samples, 0.09%)</title><rect x="497.6" y="1411.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (18 samples, 0.09%)</title><rect x="497.6" y="1395.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (16 samples, 0.08%)</title><rect x="497.7" y="1379.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (5 samples, 0.03%)</title><rect x="498.0" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (6,936 samples, 35.47%)</title><rect x="498.8" y="1459.0" width="418.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.8" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (7 samples, 0.04%)</title><rect x="499.3" y="1443.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (7 samples, 0.04%)</title><rect x="499.3" y="1427.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (7 samples, 0.04%)</title><rect x="499.3" y="1411.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.3" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (7 samples, 0.04%)</title><rect x="499.3" y="1395.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (7 samples, 0.04%)</title><rect x="499.3" y="1379.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (7 samples, 0.04%)</title><rect x="499.3" y="1363.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.3" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1.aroundReceive (5 samples, 0.03%)</title><rect x="499.7" y="1443.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (5 samples, 0.03%)</title><rect x="499.7" y="1427.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (5 samples, 0.03%)</title><rect x="499.7" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.7" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1$$anonfun$receive$1.applyOrElse (5 samples, 0.03%)</title><rect x="499.7" y="1395.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.7" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (70 samples, 0.36%)</title><rect x="500.0" y="1443.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (70 samples, 0.36%)</title><rect x="500.0" y="1427.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (70 samples, 0.36%)</title><rect x="500.0" y="1411.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.0" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (70 samples, 0.36%)</title><rect x="500.0" y="1395.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.0" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (70 samples, 0.36%)</title><rect x="500.0" y="1379.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.0" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (69 samples, 0.35%)</title><rect x="500.0" y="1363.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.0" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (68 samples, 0.35%)</title><rect x="500.1" y="1347.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (68 samples, 0.35%)</title><rect x="500.1" y="1331.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (68 samples, 0.35%)</title><rect x="500.1" y="1315.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (68 samples, 0.35%)</title><rect x="500.1" y="1299.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (68 samples, 0.35%)</title><rect x="500.1" y="1283.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (68 samples, 0.35%)</title><rect x="500.1" y="1267.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (68 samples, 0.35%)</title><rect x="500.1" y="1251.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.1" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState$$Lambda$1370/420521685.apply (5 samples, 0.03%)</title><rect x="500.1" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (7 samples, 0.04%)</title><rect x="500.4" y="1235.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.findLeftMostOrPopOnEmpty (7 samples, 0.04%)</title><rect x="500.4" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (55 samples, 0.28%)</title><rect x="500.8" y="1235.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (55 samples, 0.28%)</title><rect x="500.8" y="1219.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (54 samples, 0.28%)</title><rect x="500.9" y="1203.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (54 samples, 0.28%)</title><rect x="500.9" y="1187.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (52 samples, 0.27%)</title><rect x="500.9" y="1171.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (46 samples, 0.24%)</title><rect x="501.0" y="1155.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (41 samples, 0.21%)</title><rect x="501.0" y="1139.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (37 samples, 0.19%)</title><rect x="501.1" y="1123.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (31 samples, 0.16%)</title><rect x="501.3" y="1107.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (26 samples, 0.13%)</title><rect x="501.4" y="1091.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (23 samples, 0.12%)</title><rect x="501.5" y="1075.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.08%)</title><rect x="501.6" y="1059.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.07%)</title><rect x="501.7" y="1043.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.05%)</title><rect x="501.8" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="501.9" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.9" y="1022.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (5 samples, 0.03%)</title><rect x="503.7" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.7" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (32 samples, 0.16%)</title><rect x="504.3" y="1443.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (32 samples, 0.16%)</title><rect x="504.3" y="1427.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (31 samples, 0.16%)</title><rect x="504.3" y="1411.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.3" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (31 samples, 0.16%)</title><rect x="504.3" y="1395.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.3" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (28 samples, 0.14%)</title><rect x="504.5" y="1379.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.5" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$898/1769311515.apply$mcV$sp (8 samples, 0.04%)</title><rect x="504.8" y="1363.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.8" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$3 (7 samples, 0.04%)</title><rect x="504.8" y="1347.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.8" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (7 samples, 0.04%)</title><rect x="504.8" y="1331.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.8" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 0.04%)</title><rect x="504.8" y="1315.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.8" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 0.04%)</title><rect x="504.8" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.8" y="1310.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.03%)</title><rect x="504.8" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.8" y="1294.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.03%)</title><rect x="504.8" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.8" y="1278.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (8 samples, 0.04%)</title><rect x="505.5" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (7 samples, 0.04%)</title><rect x="505.5" y="1347.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (231 samples, 1.18%)</title><rect x="506.3" y="1443.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (231 samples, 1.18%)</title><rect x="506.3" y="1427.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (231 samples, 1.18%)</title><rect x="506.3" y="1411.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.3" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (231 samples, 1.18%)</title><rect x="506.3" y="1395.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.3" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (19 samples, 0.10%)</title><rect x="506.3" y="1379.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.3" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (16 samples, 0.08%)</title><rect x="506.3" y="1363.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.3" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (14 samples, 0.07%)</title><rect x="506.4" y="1347.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (13 samples, 0.07%)</title><rect x="506.5" y="1331.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (12 samples, 0.06%)</title><rect x="506.6" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (12 samples, 0.06%)</title><rect x="506.6" y="1299.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (12 samples, 0.06%)</title><rect x="506.6" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.05%)</title><rect x="506.6" y="1267.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="506.6" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.04%)</title><rect x="506.6" y="1235.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.04%)</title><rect x="506.6" y="1219.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="506.6" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.04%)</title><rect x="506.6" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.04%)</title><rect x="506.6" y="1171.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.04%)</title><rect x="506.6" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (176 samples, 0.90%)</title><rect x="507.4" y="1379.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.4" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (162 samples, 0.83%)</title><rect x="507.5" y="1363.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.5" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (114 samples, 0.58%)</title><rect x="507.5" y="1347.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (114 samples, 0.58%)</title><rect x="507.5" y="1331.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (14 samples, 0.07%)</title><rect x="507.5" y="1315.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (13 samples, 0.07%)</title><rect x="507.5" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (10 samples, 0.05%)</title><rect x="507.7" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (95 samples, 0.49%)</title><rect x="508.4" y="1315.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (95 samples, 0.49%)</title><rect x="508.4" y="1299.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (90 samples, 0.46%)</title><rect x="508.7" y="1283.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (90 samples, 0.46%)</title><rect x="508.7" y="1267.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (90 samples, 0.46%)</title><rect x="508.7" y="1251.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1229/349934525.apply (90 samples, 0.46%)</title><rect x="508.7" y="1235.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (90 samples, 0.46%)</title><rect x="508.7" y="1219.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (46 samples, 0.24%)</title><rect x="508.9" y="1203.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (46 samples, 0.24%)</title><rect x="508.9" y="1187.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (31 samples, 0.16%)</title><rect x="509.0" y="1171.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (24 samples, 0.12%)</title><rect x="509.0" y="1155.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (9 samples, 0.05%)</title><rect x="509.1" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (12 samples, 0.06%)</title><rect x="509.6" y="1139.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (5 samples, 0.03%)</title><rect x="509.6" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (5 samples, 0.03%)</title><rect x="509.6" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (5 samples, 0.03%)</title><rect x="509.6" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1400671358.apply (5 samples, 0.03%)</title><rect x="509.6" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (5 samples, 0.03%)</title><rect x="509.6" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (7 samples, 0.04%)</title><rect x="509.9" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (7 samples, 0.04%)</title><rect x="509.9" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1400671358.apply (6 samples, 0.03%)</title><rect x="510.0" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (6 samples, 0.03%)</title><rect x="510.0" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (6 samples, 0.03%)</title><rect x="510.0" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (6 samples, 0.03%)</title><rect x="510.0" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (6 samples, 0.03%)</title><rect x="510.0" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.0" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (6 samples, 0.03%)</title><rect x="510.0" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$482/1702178880.apply (6 samples, 0.03%)</title><rect x="510.0" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (6 samples, 0.03%)</title><rect x="510.0" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (6 samples, 0.03%)</title><rect x="510.0" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.0" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (6 samples, 0.03%)</title><rect x="510.0" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (6 samples, 0.03%)</title><rect x="510.0" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (6 samples, 0.03%)</title><rect x="510.5" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (5 samples, 0.03%)</title><rect x="510.5" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (5 samples, 0.03%)</title><rect x="510.5" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (7 samples, 0.04%)</title><rect x="511.1" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (7 samples, 0.04%)</title><rect x="511.1" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (7 samples, 0.04%)</title><rect x="511.1" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (7 samples, 0.04%)</title><rect x="511.1" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (7 samples, 0.04%)</title><rect x="511.1" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (7 samples, 0.04%)</title><rect x="511.1" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (7 samples, 0.04%)</title><rect x="511.1" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (7 samples, 0.04%)</title><rect x="511.1" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (7 samples, 0.04%)</title><rect x="511.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$.apply (7 samples, 0.04%)</title><rect x="511.7" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.&lt;init&gt; (7 samples, 0.04%)</title><rect x="511.7" y="1187.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (18 samples, 0.09%)</title><rect x="512.4" y="1203.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (10 samples, 0.05%)</title><rect x="512.6" y="1187.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (10 samples, 0.05%)</title><rect x="513.5" y="1203.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (10 samples, 0.05%)</title><rect x="513.5" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (10 samples, 0.05%)</title><rect x="513.5" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (7 samples, 0.04%)</title><rect x="513.7" y="1155.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (7 samples, 0.04%)</title><rect x="513.7" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.03%)</title><rect x="513.7" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.buffer (7 samples, 0.04%)</title><rect x="514.4" y="1347.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer$ (7 samples, 0.04%)</title><rect x="514.4" y="1331.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer (5 samples, 0.03%)</title><rect x="514.5" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="514.5" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SimpleLinearGraphStage.&lt;init&gt; (5 samples, 0.03%)</title><rect x="514.5" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (39 samples, 0.20%)</title><rect x="514.8" y="1347.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.8" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.20%)</title><rect x="514.8" y="1331.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.20%)</title><rect x="514.8" y="1315.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.20%)</title><rect x="514.8" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (26 samples, 0.13%)</title><rect x="514.8" y="1283.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (25 samples, 0.13%)</title><rect x="514.8" y="1267.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (25 samples, 0.13%)</title><rect x="514.8" y="1251.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.09%)</title><rect x="515.1" y="1235.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (18 samples, 0.09%)</title><rect x="515.1" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (17 samples, 0.09%)</title><rect x="515.1" y="1203.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.1" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (17 samples, 0.09%)</title><rect x="515.1" y="1187.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (17 samples, 0.09%)</title><rect x="515.1" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (17 samples, 0.09%)</title><rect x="515.1" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (17 samples, 0.09%)</title><rect x="515.1" y="1139.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (17 samples, 0.09%)</title><rect x="515.1" y="1123.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (17 samples, 0.09%)</title><rect x="515.1" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (17 samples, 0.09%)</title><rect x="515.1" y="1091.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.09%)</title><rect x="515.1" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (17 samples, 0.09%)</title><rect x="515.1" y="1059.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (17 samples, 0.09%)</title><rect x="515.1" y="1043.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.1" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (17 samples, 0.09%)</title><rect x="515.1" y="1027.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (17 samples, 0.09%)</title><rect x="515.1" y="1011.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (17 samples, 0.09%)</title><rect x="515.1" y="995.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (17 samples, 0.09%)</title><rect x="515.1" y="979.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (17 samples, 0.09%)</title><rect x="515.1" y="963.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (17 samples, 0.09%)</title><rect x="515.1" y="947.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (17 samples, 0.09%)</title><rect x="515.1" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.09%)</title><rect x="515.1" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (17 samples, 0.09%)</title><rect x="515.1" y="899.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (17 samples, 0.09%)</title><rect x="515.1" y="883.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.1" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (17 samples, 0.09%)</title><rect x="515.1" y="867.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (17 samples, 0.09%)</title><rect x="515.1" y="851.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (17 samples, 0.09%)</title><rect x="515.1" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.1" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (17 samples, 0.09%)</title><rect x="515.1" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.1" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (17 samples, 0.09%)</title><rect x="515.1" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.1" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (17 samples, 0.09%)</title><rect x="515.1" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.1" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (17 samples, 0.09%)</title><rect x="515.1" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.09%)</title><rect x="515.1" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (16 samples, 0.08%)</title><rect x="515.1" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (16 samples, 0.08%)</title><rect x="515.1" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.1" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (16 samples, 0.08%)</title><rect x="515.1" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.1" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (16 samples, 0.08%)</title><rect x="515.1" y="691.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.1" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (16 samples, 0.08%)</title><rect x="515.1" y="675.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.1" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (16 samples, 0.08%)</title><rect x="515.1" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.1" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (16 samples, 0.08%)</title><rect x="515.1" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.1" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (16 samples, 0.08%)</title><rect x="515.1" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.1" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (16 samples, 0.08%)</title><rect x="515.1" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (16 samples, 0.08%)</title><rect x="515.1" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (14 samples, 0.07%)</title><rect x="515.2" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.toString (9 samples, 0.05%)</title><rect x="515.2" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.2" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (9 samples, 0.05%)</title><rect x="515.2" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.2" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (9 samples, 0.05%)</title><rect x="515.2" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.2" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (9 samples, 0.05%)</title><rect x="515.2" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.2" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (9 samples, 0.05%)</title><rect x="515.2" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (9 samples, 0.05%)</title><rect x="515.2" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (9 samples, 0.05%)</title><rect x="515.2" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (9 samples, 0.05%)</title><rect x="515.2" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.05%)</title><rect x="515.2" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (7 samples, 0.04%)</title><rect x="515.3" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.toString (5 samples, 0.03%)</title><rect x="515.3" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/Map.toString$ (5 samples, 0.03%)</title><rect x="515.3" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/Map.toString (5 samples, 0.03%)</title><rect x="515.3" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (5 samples, 0.03%)</title><rect x="515.3" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (5 samples, 0.03%)</title><rect x="515.3" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.mkString (5 samples, 0.03%)</title><rect x="515.3" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (5 samples, 0.03%)</title><rect x="515.3" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (5 samples, 0.03%)</title><rect x="515.3" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.addString (5 samples, 0.03%)</title><rect x="515.3" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString$ (5 samples, 0.03%)</title><rect x="515.3" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.3" y="270.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (12 samples, 0.06%)</title><rect x="516.4" y="1283.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (10 samples, 0.05%)</title><rect x="516.4" y="1267.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (10 samples, 0.05%)</title><rect x="516.4" y="1251.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (10 samples, 0.05%)</title><rect x="516.4" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (10 samples, 0.05%)</title><rect x="516.4" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (10 samples, 0.05%)</title><rect x="516.4" y="1203.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.4" y="1214.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (8 samples, 0.04%)</title><rect x="516.5" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (7 samples, 0.04%)</title><rect x="516.5" y="1171.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (6 samples, 0.03%)</title><rect x="516.5" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.03%)</title><rect x="516.5" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.03%)</title><rect x="516.5" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (6 samples, 0.03%)</title><rect x="516.5" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (6 samples, 0.03%)</title><rect x="516.5" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (6 samples, 0.03%)</title><rect x="516.5" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.03%)</title><rect x="516.6" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.6" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="516.6" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.03%)</title><rect x="516.6" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="516.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.03%)</title><rect x="516.6" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.03%)</title><rect x="516.6" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.03%)</title><rect x="516.6" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.03%)</title><rect x="516.6" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.03%)</title><rect x="516.6" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="516.6" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="516.6" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.6" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.03%)</title><rect x="516.6" y="883.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="519.6" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (11 samples, 0.06%)</title><rect x="517.2" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (11 samples, 0.06%)</title><rect x="517.2" y="1347.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (11 samples, 0.06%)</title><rect x="517.2" y="1331.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.2" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (10 samples, 0.05%)</title><rect x="517.2" y="1315.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (10 samples, 0.05%)</title><rect x="517.2" y="1299.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.2" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.04%)</title><rect x="517.4" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.4" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.04%)</title><rect x="517.4" y="1235.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1219.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.4" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1203.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.4" y="1214.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (8 samples, 0.04%)</title><rect x="517.4" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.4" y="1198.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (8 samples, 0.04%)</title><rect x="517.4" y="1171.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.04%)</title><rect x="517.4" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1139.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.4" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (8 samples, 0.04%)</title><rect x="517.4" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (8 samples, 0.04%)</title><rect x="517.4" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.4" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (7 samples, 0.04%)</title><rect x="517.4" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (6 samples, 0.03%)</title><rect x="517.5" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.5" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.03%)</title><rect x="517.5" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (33 samples, 0.17%)</title><rect x="518.2" y="1379.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.2" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (15 samples, 0.08%)</title><rect x="518.2" y="1363.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (14 samples, 0.07%)</title><rect x="518.2" y="1347.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (5 samples, 0.03%)</title><rect x="518.2" y="1331.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.2" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (8 samples, 0.04%)</title><rect x="518.6" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.6" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (8 samples, 0.04%)</title><rect x="518.6" y="1315.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.6" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.equals (7 samples, 0.04%)</title><rect x="518.6" y="1299.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.equals (5 samples, 0.03%)</title><rect x="518.8" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.8" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (18 samples, 0.09%)</title><rect x="519.1" y="1363.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (17 samples, 0.09%)</title><rect x="519.2" y="1347.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.2" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (17 samples, 0.09%)</title><rect x="519.2" y="1331.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.2" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (17 samples, 0.09%)</title><rect x="519.2" y="1315.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (17 samples, 0.09%)</title><rect x="519.2" y="1299.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.2" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (17 samples, 0.09%)</title><rect x="519.2" y="1283.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.2" y="1294.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (17 samples, 0.09%)</title><rect x="519.2" y="1267.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.2" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (17 samples, 0.09%)</title><rect x="519.2" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.2" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (16 samples, 0.08%)</title><rect x="519.2" y="1235.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (15 samples, 0.08%)</title><rect x="519.2" y="1219.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.2" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (14 samples, 0.07%)</title><rect x="519.3" y="1203.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (14 samples, 0.07%)</title><rect x="519.3" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.3" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (14 samples, 0.07%)</title><rect x="519.3" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (8 samples, 0.04%)</title><rect x="519.3" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (5 samples, 0.03%)</title><rect x="519.4" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.4" y="1150.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (9 samples, 0.05%)</title><rect x="520.2" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.05%)</title><rect x="520.2" y="1427.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.05%)</title><rect x="520.2" y="1411.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.2" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (9 samples, 0.05%)</title><rect x="520.2" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.05%)</title><rect x="520.2" y="1379.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.05%)</title><rect x="520.2" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.05%)</title><rect x="520.2" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.05%)</title><rect x="520.2" y="1331.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.2" y="1342.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (7 samples, 0.04%)</title><rect x="520.3" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.3" y="1326.0"></text>
</g>
<g>
<title>akka/routing/Router.route (7 samples, 0.04%)</title><rect x="520.3" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.3" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.send (7 samples, 0.04%)</title><rect x="520.3" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.3" y="1294.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (7 samples, 0.04%)</title><rect x="520.3" y="1267.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (7 samples, 0.04%)</title><rect x="520.3" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.04%)</title><rect x="520.3" y="1235.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="520.3" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.04%)</title><rect x="520.3" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.04%)</title><rect x="520.3" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="520.3" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.04%)</title><rect x="520.3" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.04%)</title><rect x="520.3" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.04%)</title><rect x="520.3" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.04%)</title><rect x="520.3" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="520.3" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.04%)</title><rect x="520.3" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="520.3" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.04%)</title><rect x="520.3" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.04%)</title><rect x="520.3" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.04%)</title><rect x="520.3" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.04%)</title><rect x="520.3" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.04%)</title><rect x="520.3" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="520.4" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="520.4" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.4" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.03%)</title><rect x="520.4" y="931.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="523.4" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="520.4" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="520.4" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.4" y="910.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="520.4" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.4" y="894.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="520.4" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.4" y="878.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="520.4" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.4" y="862.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="520.4" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.4" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="520.4" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.4" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="520.4" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.4" y="814.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (555 samples, 2.84%)</title><rect x="520.7" y="1443.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.7" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (555 samples, 2.84%)</title><rect x="520.7" y="1427.0" width="33.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.7" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (555 samples, 2.84%)</title><rect x="520.7" y="1411.0" width="33.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.7" y="1422.0">ak..</text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (555 samples, 2.84%)</title><rect x="520.7" y="1395.0" width="33.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.7" y="1406.0">ak..</text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (554 samples, 2.83%)</title><rect x="520.8" y="1379.0" width="33.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.8" y="1390.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (447 samples, 2.29%)</title><rect x="521.0" y="1363.0" width="27.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.0" y="1374.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (446 samples, 2.28%)</title><rect x="521.0" y="1347.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.0" y="1358.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (446 samples, 2.28%)</title><rect x="521.0" y="1331.0" width="26.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.0" y="1342.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (442 samples, 2.26%)</title><rect x="521.2" y="1315.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.2" y="1326.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (13 samples, 0.07%)</title><rect x="522.1" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (12 samples, 0.06%)</title><rect x="522.1" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (12 samples, 0.06%)</title><rect x="522.1" y="1267.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (5 samples, 0.03%)</title><rect x="522.4" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (51 samples, 0.26%)</title><rect x="522.9" y="1299.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (50 samples, 0.26%)</title><rect x="522.9" y="1283.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (50 samples, 0.26%)</title><rect x="522.9" y="1267.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (48 samples, 0.25%)</title><rect x="523.0" y="1251.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (13 samples, 0.07%)</title><rect x="523.4" y="1235.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (13 samples, 0.07%)</title><rect x="523.4" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (13 samples, 0.07%)</title><rect x="523.4" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (13 samples, 0.07%)</title><rect x="523.4" y="1187.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (11 samples, 0.06%)</title><rect x="523.5" y="1171.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (11 samples, 0.06%)</title><rect x="523.5" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (26 samples, 0.13%)</title><rect x="524.3" y="1235.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (25 samples, 0.13%)</title><rect x="524.3" y="1219.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (23 samples, 0.12%)</title><rect x="524.4" y="1203.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (21 samples, 0.11%)</title><rect x="524.4" y="1187.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (18 samples, 0.09%)</title><rect x="524.5" y="1171.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.08%)</title><rect x="524.6" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.07%)</title><rect x="524.7" y="1139.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.07%)</title><rect x="524.7" y="1123.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 0.07%)</title><rect x="524.7" y="1107.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.06%)</title><rect x="524.8" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.06%)</title><rect x="524.8" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 0.06%)</title><rect x="524.8" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.06%)</title><rect x="524.9" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.05%)</title><rect x="525.0" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.04%)</title><rect x="525.0" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="525.2" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.&lt;init&gt; (13 samples, 0.07%)</title><rect x="525.9" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="526.4" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="526.4" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (84 samples, 0.43%)</title><rect x="526.7" y="1299.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (82 samples, 0.42%)</title><rect x="526.8" y="1283.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (81 samples, 0.41%)</title><rect x="526.8" y="1267.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (81 samples, 0.41%)</title><rect x="526.8" y="1251.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (81 samples, 0.41%)</title><rect x="526.8" y="1235.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (79 samples, 0.40%)</title><rect x="526.9" y="1219.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (77 samples, 0.39%)</title><rect x="526.9" y="1203.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (77 samples, 0.39%)</title><rect x="526.9" y="1187.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (77 samples, 0.39%)</title><rect x="526.9" y="1171.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (77 samples, 0.39%)</title><rect x="526.9" y="1155.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (77 samples, 0.39%)</title><rect x="526.9" y="1139.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (77 samples, 0.39%)</title><rect x="526.9" y="1123.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (77 samples, 0.39%)</title><rect x="526.9" y="1107.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (77 samples, 0.39%)</title><rect x="526.9" y="1091.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (75 samples, 0.38%)</title><rect x="527.0" y="1075.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 0.38%)</title><rect x="527.0" y="1059.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.0" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.04%)</title><rect x="527.0" y="1043.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="530.0" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (68 samples, 0.35%)</title><rect x="527.4" y="1043.0" width="4.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="530.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 0.33%)</title><rect x="527.7" y="1027.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="530.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 0.33%)</title><rect x="527.7" y="1011.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.7" y="1022.0"></text>
</g>
<g>
<title>sys_futex (60 samples, 0.31%)</title><rect x="527.9" y="995.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.9" y="1006.0"></text>
</g>
<g>
<title>do_futex (58 samples, 0.30%)</title><rect x="528.0" y="979.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.0" y="990.0"></text>
</g>
<g>
<title>futex_wake (58 samples, 0.30%)</title><rect x="528.0" y="963.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="531.0" y="974.0"></text>
</g>
<g>
<title>wake_up_q (54 samples, 0.28%)</title><rect x="528.3" y="947.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="531.3" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (54 samples, 0.28%)</title><rect x="528.3" y="931.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="531.3" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 0.27%)</title><rect x="528.4" y="915.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="531.4" y="926.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (218 samples, 1.11%)</title><rect x="531.8" y="1299.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (79 samples, 0.40%)</title><rect x="532.0" y="1283.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.elements (25 samples, 0.13%)</title><rect x="532.1" y="1267.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$1 (23 samples, 0.12%)</title><rect x="532.2" y="1251.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (9 samples, 0.05%)</title><rect x="533.1" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (9 samples, 0.05%)</title><rect x="533.1" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.1" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (9 samples, 0.05%)</title><rect x="533.1" y="1203.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1338823963.invoke_MT (9 samples, 0.05%)</title><rect x="533.1" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.checkGenericType (8 samples, 0.04%)</title><rect x="533.1" y="1171.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (46 samples, 0.24%)</title><rect x="533.6" y="1267.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.6" y="1278.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (45 samples, 0.23%)</title><rect x="533.7" y="1251.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.7" y="1262.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (14 samples, 0.07%)</title><rect x="533.8" y="1235.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (6 samples, 0.03%)</title><rect x="534.3" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.3" y="1230.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithTerminalDoubleWildcard (24 samples, 0.12%)</title><rect x="534.6" y="1235.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.getOrElse (11 samples, 0.06%)</title><rect x="535.4" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (6 samples, 0.03%)</title><rect x="536.4" y="1267.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.drop (6 samples, 0.03%)</title><rect x="536.4" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.drop$ (6 samples, 0.03%)</title><rect x="536.4" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.drop (6 samples, 0.03%)</title><rect x="536.4" y="1219.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (24 samples, 0.12%)</title><rect x="536.7" y="1283.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (17 samples, 0.09%)</title><rect x="536.7" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (17 samples, 0.09%)</title><rect x="536.7" y="1251.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (17 samples, 0.09%)</title><rect x="536.7" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (5 samples, 0.03%)</title><rect x="537.0" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="540.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.newActorCell (7 samples, 0.04%)</title><rect x="537.8" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (7 samples, 0.04%)</title><rect x="538.2" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (7 samples, 0.04%)</title><rect x="538.2" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="538.4" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (6 samples, 0.03%)</title><rect x="538.7" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (95 samples, 0.49%)</title><rect x="539.0" y="1283.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.actorClass (5 samples, 0.03%)</title><rect x="539.8" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Props.actorClass (5 samples, 0.03%)</title><rect x="540.1" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Props.cachedActorClass (5 samples, 0.03%)</title><rect x="540.1" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getString (10 samples, 0.05%)</title><rect x="540.4" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (10 samples, 0.05%)</title><rect x="540.4" y="1251.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="540.7" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxRequirement (6 samples, 0.03%)</title><rect x="541.1" y="1267.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (26 samples, 0.13%)</title><rect x="541.5" y="1267.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.5" y="1278.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (25 samples, 0.13%)</title><rect x="541.5" y="1251.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.5" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (25 samples, 0.13%)</title><rect x="541.5" y="1235.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (12 samples, 0.06%)</title><rect x="542.3" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.3" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$$anonfun$1.applyOrElse (8 samples, 0.04%)</title><rect x="542.5" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.5" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$$anonfun$1.applyOrElse (5 samples, 0.03%)</title><rect x="542.7" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.7" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.hasRequiredType (12 samples, 0.06%)</title><rect x="543.1" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (10 samples, 0.05%)</title><rect x="543.2" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupByQueueType (5 samples, 0.03%)</title><rect x="543.8" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (10 samples, 0.05%)</title><rect x="544.2" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (7 samples, 0.04%)</title><rect x="544.3" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (7 samples, 0.04%)</title><rect x="544.3" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.3" y="1246.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (43 samples, 0.22%)</title><rect x="544.9" y="1299.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (30 samples, 0.15%)</title><rect x="545.2" y="1283.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (15 samples, 0.08%)</title><rect x="546.1" y="1267.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (5 samples, 0.03%)</title><rect x="547.1" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (5 samples, 0.03%)</title><rect x="547.1" y="1267.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="547.1" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (59 samples, 0.30%)</title><rect x="548.0" y="1363.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (59 samples, 0.30%)</title><rect x="548.0" y="1347.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (59 samples, 0.30%)</title><rect x="548.0" y="1331.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (43 samples, 0.22%)</title><rect x="548.2" y="1315.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.2" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (40 samples, 0.20%)</title><rect x="548.4" y="1299.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$131/1684366420.apply$mcV$sp (39 samples, 0.20%)</title><rect x="548.4" y="1283.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (37 samples, 0.19%)</title><rect x="548.5" y="1267.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.03%)</title><rect x="548.6" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.03%)</title><rect x="548.6" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (6 samples, 0.03%)</title><rect x="548.6" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (6 samples, 0.03%)</title><rect x="548.6" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (6 samples, 0.03%)</title><rect x="548.6" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (28 samples, 0.14%)</title><rect x="548.9" y="1251.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (25 samples, 0.13%)</title><rect x="549.1" y="1235.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (25 samples, 0.13%)</title><rect x="549.1" y="1219.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (24 samples, 0.12%)</title><rect x="549.1" y="1203.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (21 samples, 0.11%)</title><rect x="549.3" y="1187.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (21 samples, 0.11%)</title><rect x="549.3" y="1171.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.mergeTwoKeyValPairs (6 samples, 0.03%)</title><rect x="549.8" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.04%)</title><rect x="550.1" y="1155.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.04%)</title><rect x="550.1" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (11 samples, 0.06%)</title><rect x="550.9" y="1315.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (7 samples, 0.04%)</title><rect x="551.0" y="1299.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (17 samples, 0.09%)</title><rect x="551.5" y="1363.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (12 samples, 0.06%)</title><rect x="551.6" y="1347.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.6" y="1358.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (9 samples, 0.05%)</title><rect x="551.8" y="1331.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.8" y="1342.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (9 samples, 0.05%)</title><rect x="551.8" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="1326.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (9 samples, 0.05%)</title><rect x="551.8" y="1299.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.8" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (9 samples, 0.05%)</title><rect x="551.8" y="1283.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.8" y="1294.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (8 samples, 0.04%)</title><rect x="551.8" y="1267.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.8" y="1278.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (8 samples, 0.04%)</title><rect x="551.8" y="1251.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.8" y="1262.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (6 samples, 0.03%)</title><rect x="551.9" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Props.withDispatcher (5 samples, 0.03%)</title><rect x="552.5" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$900/359895709.apply (15 samples, 0.08%)</title><rect x="552.8" y="1363.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (15 samples, 0.08%)</title><rect x="552.8" y="1347.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.8" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (15 samples, 0.08%)</title><rect x="552.8" y="1331.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (14 samples, 0.07%)</title><rect x="552.8" y="1315.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (11 samples, 0.06%)</title><rect x="552.8" y="1299.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (10 samples, 0.05%)</title><rect x="552.9" y="1283.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (10 samples, 0.05%)</title><rect x="552.9" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (10 samples, 0.05%)</title><rect x="552.9" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.9" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (10 samples, 0.05%)</title><rect x="552.9" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.9" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1$$Lambda$1281/1556002379.apply (7 samples, 0.04%)</title><rect x="553.8" y="1363.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.$anonfun$applyOrElse$1 (7 samples, 0.04%)</title><rect x="553.8" y="1347.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (6 samples, 0.03%)</title><rect x="553.8" y="1331.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (9 samples, 0.05%)</title><rect x="554.2" y="1443.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.05%)</title><rect x="554.2" y="1427.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.05%)</title><rect x="554.2" y="1411.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.2" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (9 samples, 0.05%)</title><rect x="554.2" y="1395.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (6 samples, 0.03%)</title><rect x="554.3" y="1379.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (6 samples, 0.03%)</title><rect x="554.3" y="1363.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (5 samples, 0.03%)</title><rect x="554.4" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.03%)</title><rect x="554.4" y="1331.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.03%)</title><rect x="554.4" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.03%)</title><rect x="554.4" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.4" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (5 samples, 0.03%)</title><rect x="554.4" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (5 samples, 0.03%)</title><rect x="554.4" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.4" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (936 samples, 4.79%)</title><rect x="554.8" y="1443.0" width="56.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.8" y="1454.0">akka/i..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (936 samples, 4.79%)</title><rect x="554.8" y="1427.0" width="56.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.8" y="1438.0">akka/a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (935 samples, 4.78%)</title><rect x="554.8" y="1411.0" width="56.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.8" y="1422.0">akka/a..</text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (6 samples, 0.03%)</title><rect x="555.1" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (6 samples, 0.03%)</title><rect x="555.1" y="1379.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (58 samples, 0.30%)</title><rect x="555.5" y="1395.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (57 samples, 0.29%)</title><rect x="555.6" y="1379.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.6" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$1328/342215900.apply$mcV$sp (48 samples, 0.25%)</title><rect x="555.6" y="1363.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (48 samples, 0.25%)</title><rect x="555.6" y="1347.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (16 samples, 0.08%)</title><rect x="555.6" y="1331.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (10 samples, 0.05%)</title><rect x="555.7" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/659326352.apply (10 samples, 0.05%)</title><rect x="555.7" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (10 samples, 0.05%)</title><rect x="555.7" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (10 samples, 0.05%)</title><rect x="555.7" y="1267.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (10 samples, 0.05%)</title><rect x="555.7" y="1251.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (10 samples, 0.05%)</title><rect x="555.7" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (10 samples, 0.05%)</title><rect x="555.7" y="1219.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (10 samples, 0.05%)</title><rect x="555.7" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (10 samples, 0.05%)</title><rect x="555.7" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (10 samples, 0.05%)</title><rect x="555.7" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.05%)</title><rect x="555.7" y="1155.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.05%)</title><rect x="555.7" y="1139.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.05%)</title><rect x="555.7" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.05%)</title><rect x="555.7" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.05%)</title><rect x="555.7" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.05%)</title><rect x="555.7" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.05%)</title><rect x="555.7" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.05%)</title><rect x="555.7" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.04%)</title><rect x="555.7" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="555.7" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.04%)</title><rect x="555.7" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="555.7" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.04%)</title><rect x="555.7" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.04%)</title><rect x="555.7" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.04%)</title><rect x="555.7" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.04%)</title><rect x="555.7" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.04%)</title><rect x="555.7" y="899.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="555.7" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.04%)</title><rect x="555.7" y="867.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.03%)</title><rect x="555.8" y="851.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="558.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="555.9" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="555.9" y="819.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.9" y="830.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="555.9" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="558.9" y="814.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="555.9" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="555.9" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="555.9" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="555.9" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="558.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="555.9" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (32 samples, 0.16%)</title><rect x="556.5" y="1331.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (10 samples, 0.05%)</title><rect x="556.8" y="1315.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="1326.0"></text>
</g>
<g>
<title>poll (6 samples, 0.03%)</title><rect x="557.1" y="1299.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="560.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (17 samples, 0.09%)</title><rect x="557.4" y="1315.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (17 samples, 0.09%)</title><rect x="557.4" y="1299.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (13 samples, 0.07%)</title><rect x="557.4" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.4" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (8 samples, 0.04%)</title><rect x="557.5" y="1267.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="560.5" y="1278.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (7 samples, 0.04%)</title><rect x="557.5" y="1251.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="560.5" y="1262.0"></text>
</g>
<g>
<title>jni_NewObject (5 samples, 0.03%)</title><rect x="557.5" y="1235.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="560.5" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (9 samples, 0.05%)</title><rect x="558.5" y="1363.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (8 samples, 0.04%)</title><rect x="558.5" y="1347.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (6 samples, 0.03%)</title><rect x="558.6" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (5 samples, 0.03%)</title><rect x="558.6" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (5 samples, 0.03%)</title><rect x="558.6" y="1299.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (51 samples, 0.26%)</title><rect x="559.0" y="1395.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.0" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (49 samples, 0.25%)</title><rect x="559.0" y="1379.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.0" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$1285/959433002.apply$mcV$sp (49 samples, 0.25%)</title><rect x="559.0" y="1363.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (49 samples, 0.25%)</title><rect x="559.0" y="1347.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.0" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (13 samples, 0.07%)</title><rect x="559.2" y="1331.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/Dns.resolve (11 samples, 0.06%)</title><rect x="559.3" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.cached (8 samples, 0.04%)</title><rect x="559.5" y="1299.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.5" y="1310.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.get (8 samples, 0.04%)</title><rect x="559.5" y="1283.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (6 samples, 0.03%)</title><rect x="559.6" y="1267.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (7 samples, 0.04%)</title><rect x="560.0" y="1331.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (7 samples, 0.04%)</title><rect x="560.0" y="1315.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (7 samples, 0.04%)</title><rect x="560.0" y="1299.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (7 samples, 0.04%)</title><rect x="560.0" y="1283.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.0" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (6 samples, 0.03%)</title><rect x="560.0" y="1267.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.0" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (6 samples, 0.03%)</title><rect x="560.0" y="1251.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.0" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (6 samples, 0.03%)</title><rect x="560.0" y="1235.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.0" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (6 samples, 0.03%)</title><rect x="560.0" y="1219.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.0" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (6 samples, 0.03%)</title><rect x="560.0" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (6 samples, 0.03%)</title><rect x="560.0" y="1187.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (5 samples, 0.03%)</title><rect x="560.0" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (5 samples, 0.03%)</title><rect x="560.0" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.0" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (24 samples, 0.12%)</title><rect x="560.4" y="1331.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (24 samples, 0.12%)</title><rect x="560.4" y="1315.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.4" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1327/1583496932.apply$mcV$sp (24 samples, 0.12%)</title><rect x="560.4" y="1299.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.4" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (24 samples, 0.12%)</title><rect x="560.4" y="1283.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (19 samples, 0.10%)</title><rect x="560.7" y="1267.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (17 samples, 0.09%)</title><rect x="560.8" y="1251.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (17 samples, 0.09%)</title><rect x="560.8" y="1235.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (17 samples, 0.09%)</title><rect x="560.8" y="1219.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.08%)</title><rect x="560.8" y="1203.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="563.8" y="1214.0"></text>
</g>
<g>
<title>__connect (16 samples, 0.08%)</title><rect x="560.8" y="1187.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="563.8" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="560.9" y="1171.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="560.9" y="1155.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.9" y="1166.0"></text>
</g>
<g>
<title>sys_connect (15 samples, 0.08%)</title><rect x="560.9" y="1139.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.9" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (15 samples, 0.08%)</title><rect x="560.9" y="1123.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="563.9" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (13 samples, 0.07%)</title><rect x="560.9" y="1107.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.9" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (13 samples, 0.07%)</title><rect x="560.9" y="1091.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.9" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (13 samples, 0.07%)</title><rect x="560.9" y="1075.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.9" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (13 samples, 0.07%)</title><rect x="560.9" y="1059.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.9" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (6 samples, 0.03%)</title><rect x="561.3" y="1043.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.3" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (34 samples, 0.17%)</title><rect x="562.1" y="1395.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (34 samples, 0.17%)</title><rect x="562.1" y="1379.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$1326/1133327789.apply$mcV$sp (34 samples, 0.17%)</title><rect x="562.1" y="1363.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (34 samples, 0.17%)</title><rect x="562.1" y="1347.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (33 samples, 0.17%)</title><rect x="562.1" y="1331.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (33 samples, 0.17%)</title><rect x="562.1" y="1315.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1327/1583496932.apply$mcV$sp (33 samples, 0.17%)</title><rect x="562.1" y="1299.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.1" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (33 samples, 0.17%)</title><rect x="562.1" y="1283.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.1" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (7 samples, 0.04%)</title><rect x="562.1" y="1267.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.1" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (7 samples, 0.04%)</title><rect x="562.1" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.1" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (7 samples, 0.04%)</title><rect x="562.1" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.04%)</title><rect x="562.1" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.04%)</title><rect x="562.1" y="1203.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="562.1" y="1187.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="565.1" y="1198.0"></text>
</g>
<g>
<title>__write (7 samples, 0.04%)</title><rect x="562.1" y="1171.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="565.1" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="562.3" y="1155.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="565.3" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="562.3" y="1139.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.3" y="1150.0"></text>
</g>
<g>
<title>sys_write (5 samples, 0.03%)</title><rect x="562.3" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="565.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (21 samples, 0.11%)</title><rect x="562.7" y="1267.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (20 samples, 0.10%)</title><rect x="562.8" y="1251.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (20 samples, 0.10%)</title><rect x="562.8" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (19 samples, 0.10%)</title><rect x="562.9" y="1219.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.09%)</title><rect x="562.9" y="1203.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="565.9" y="1214.0"></text>
</g>
<g>
<title>__connect (18 samples, 0.09%)</title><rect x="562.9" y="1187.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="565.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="563.0" y="1171.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.0" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="563.0" y="1155.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.0" y="1166.0"></text>
</g>
<g>
<title>sys_connect (17 samples, 0.09%)</title><rect x="563.0" y="1139.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="566.0" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (17 samples, 0.09%)</title><rect x="563.0" y="1123.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.0" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (17 samples, 0.09%)</title><rect x="563.0" y="1107.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.0" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (17 samples, 0.09%)</title><rect x="563.0" y="1091.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="566.0" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (17 samples, 0.09%)</title><rect x="563.0" y="1075.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.0" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (16 samples, 0.08%)</title><rect x="563.0" y="1059.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="566.0" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (10 samples, 0.05%)</title><rect x="563.4" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.4" y="1054.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.04%)</title><rect x="563.4" y="1027.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.4" y="1038.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.03%)</title><rect x="563.5" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.5" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="563.5" y="995.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="566.5" y="1006.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.03%)</title><rect x="563.5" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.5" y="990.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (777 samples, 3.97%)</title><rect x="564.4" y="1395.0" width="46.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.4" y="1406.0">scal..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (510 samples, 2.61%)</title><rect x="564.6" y="1379.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="1390.0">ak..</text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (423 samples, 2.16%)</title><rect x="564.6" y="1363.0" width="25.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="1374.0">a..</text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (62 samples, 0.32%)</title><rect x="565.0" y="1347.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (9 samples, 0.05%)</title><rect x="565.2" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (9 samples, 0.05%)</title><rect x="565.2" y="1315.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (9 samples, 0.05%)</title><rect x="565.2" y="1299.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.2" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (9 samples, 0.05%)</title><rect x="565.2" y="1283.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (8 samples, 0.04%)</title><rect x="565.3" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (8 samples, 0.04%)</title><rect x="565.3" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.3" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (8 samples, 0.04%)</title><rect x="565.3" y="1235.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.3" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (8 samples, 0.04%)</title><rect x="565.3" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.3" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (8 samples, 0.04%)</title><rect x="565.3" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (7 samples, 0.04%)</title><rect x="565.3" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.3" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (43 samples, 0.22%)</title><rect x="565.8" y="1331.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (25 samples, 0.13%)</title><rect x="566.0" y="1315.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.0" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (25 samples, 0.13%)</title><rect x="566.0" y="1299.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.0" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (25 samples, 0.13%)</title><rect x="566.0" y="1283.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (25 samples, 0.13%)</title><rect x="566.0" y="1267.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.13%)</title><rect x="566.0" y="1251.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.13%)</title><rect x="566.0" y="1235.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="569.0" y="1246.0"></text>
</g>
<g>
<title>__write (25 samples, 0.13%)</title><rect x="566.0" y="1219.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="569.0" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.10%)</title><rect x="566.3" y="1203.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="569.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.10%)</title><rect x="566.3" y="1187.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="569.3" y="1198.0"></text>
</g>
<g>
<title>sys_write (20 samples, 0.10%)</title><rect x="566.3" y="1171.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="569.3" y="1182.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.10%)</title><rect x="566.3" y="1155.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.3" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (20 samples, 0.10%)</title><rect x="566.3" y="1139.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="569.3" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (20 samples, 0.10%)</title><rect x="566.3" y="1123.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="569.3" y="1134.0"></text>
</g>
<g>
<title>pipe_write (20 samples, 0.10%)</title><rect x="566.3" y="1107.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.3" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.10%)</title><rect x="566.3" y="1091.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.3" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.10%)</title><rect x="566.3" y="1075.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="569.3" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.10%)</title><rect x="566.3" y="1059.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.3" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (11 samples, 0.06%)</title><rect x="567.5" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (11 samples, 0.06%)</title><rect x="567.5" y="1299.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (11 samples, 0.06%)</title><rect x="567.5" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (11 samples, 0.06%)</title><rect x="567.5" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (8 samples, 0.04%)</title><rect x="567.7" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (8 samples, 0.04%)</title><rect x="567.7" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (8 samples, 0.04%)</title><rect x="567.7" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (5 samples, 0.03%)</title><rect x="567.9" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$923/911365701.apply$mcV$sp (5 samples, 0.03%)</title><rect x="567.9" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$remWatcher$1 (5 samples, 0.03%)</title><rect x="567.9" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (5 samples, 0.03%)</title><rect x="567.9" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (5 samples, 0.03%)</title><rect x="567.9" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (5 samples, 0.03%)</title><rect x="567.9" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (5 samples, 0.03%)</title><rect x="567.9" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (5 samples, 0.03%)</title><rect x="567.9" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.apply (5 samples, 0.03%)</title><rect x="568.4" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (5 samples, 0.03%)</title><rect x="568.4" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (5 samples, 0.03%)</title><rect x="568.4" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (5 samples, 0.03%)</title><rect x="568.4" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (5 samples, 0.03%)</title><rect x="568.4" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (5 samples, 0.03%)</title><rect x="568.4" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (5 samples, 0.03%)</title><rect x="568.4" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (5 samples, 0.03%)</title><rect x="568.4" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addOne (5 samples, 0.03%)</title><rect x="568.4" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addOne (5 samples, 0.03%)</title><rect x="568.4" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.4" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (354 samples, 1.81%)</title><rect x="568.7" y="1347.0" width="21.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.7" y="1358.0">a..</text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (206 samples, 1.05%)</title><rect x="569.1" y="1331.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.1" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/659326352.apply (206 samples, 1.05%)</title><rect x="569.1" y="1315.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (206 samples, 1.05%)</title><rect x="569.1" y="1299.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (206 samples, 1.05%)</title><rect x="569.1" y="1283.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (206 samples, 1.05%)</title><rect x="569.1" y="1267.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (205 samples, 1.05%)</title><rect x="569.1" y="1251.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (198 samples, 1.01%)</title><rect x="569.1" y="1235.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (193 samples, 0.99%)</title><rect x="569.4" y="1219.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (193 samples, 0.99%)</title><rect x="569.4" y="1203.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (193 samples, 0.99%)</title><rect x="569.4" y="1187.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (184 samples, 0.94%)</title><rect x="569.7" y="1171.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (181 samples, 0.93%)</title><rect x="569.7" y="1155.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (181 samples, 0.93%)</title><rect x="569.7" y="1139.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (181 samples, 0.93%)</title><rect x="569.7" y="1123.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (176 samples, 0.90%)</title><rect x="569.7" y="1107.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (176 samples, 0.90%)</title><rect x="569.7" y="1091.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (176 samples, 0.90%)</title><rect x="569.7" y="1075.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (175 samples, 0.89%)</title><rect x="569.7" y="1059.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (163 samples, 0.83%)</title><rect x="569.7" y="1043.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (159 samples, 0.81%)</title><rect x="569.9" y="1027.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (159 samples, 0.81%)</title><rect x="569.9" y="1011.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (159 samples, 0.81%)</title><rect x="569.9" y="995.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (159 samples, 0.81%)</title><rect x="569.9" y="979.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (159 samples, 0.81%)</title><rect x="569.9" y="963.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (159 samples, 0.81%)</title><rect x="569.9" y="947.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (158 samples, 0.81%)</title><rect x="569.9" y="931.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (158 samples, 0.81%)</title><rect x="569.9" y="915.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (158 samples, 0.81%)</title><rect x="569.9" y="899.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (152 samples, 0.78%)</title><rect x="570.3" y="883.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.09%)</title><rect x="570.3" y="867.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="573.3" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (135 samples, 0.69%)</title><rect x="571.3" y="867.0" width="8.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="574.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 0.65%)</title><rect x="571.7" y="851.0" width="7.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (128 samples, 0.65%)</title><rect x="571.7" y="835.0" width="7.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="574.7" y="846.0"></text>
</g>
<g>
<title>sys_futex (127 samples, 0.65%)</title><rect x="571.8" y="819.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.8" y="830.0"></text>
</g>
<g>
<title>do_futex (126 samples, 0.64%)</title><rect x="571.9" y="803.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="574.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (125 samples, 0.64%)</title><rect x="571.9" y="787.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="574.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (116 samples, 0.59%)</title><rect x="572.4" y="771.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.4" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (115 samples, 0.59%)</title><rect x="572.5" y="755.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (115 samples, 0.59%)</title><rect x="572.5" y="739.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="575.5" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (12 samples, 0.06%)</title><rect x="579.6" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (11 samples, 0.06%)</title><rect x="579.6" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.6" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (11 samples, 0.06%)</title><rect x="579.6" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.6" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (11 samples, 0.06%)</title><rect x="579.6" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (11 samples, 0.06%)</title><rect x="579.6" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (11 samples, 0.06%)</title><rect x="579.6" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (11 samples, 0.06%)</title><rect x="579.6" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (9 samples, 0.05%)</title><rect x="579.8" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.8" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (9 samples, 0.05%)</title><rect x="579.8" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (5 samples, 0.03%)</title><rect x="580.3" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (7 samples, 0.04%)</title><rect x="581.1" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (7 samples, 0.04%)</title><rect x="581.1" y="1219.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.1" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (7 samples, 0.04%)</title><rect x="581.1" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.1" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (133 samples, 0.68%)</title><rect x="582.0" y="1331.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="582.1" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (127 samples, 0.65%)</title><rect x="582.4" y="1315.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (127 samples, 0.65%)</title><rect x="582.4" y="1299.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (127 samples, 0.65%)</title><rect x="582.4" y="1283.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (127 samples, 0.65%)</title><rect x="582.4" y="1267.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (127 samples, 0.65%)</title><rect x="582.4" y="1251.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 0.46%)</title><rect x="582.6" y="1235.0" width="5.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="585.6" y="1246.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.03%)</title><rect x="583.0" y="1219.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="586.0" y="1230.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.03%)</title><rect x="583.0" y="1203.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="586.0" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="583.0" y="1187.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.0" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="583.0" y="1171.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.0" y="1182.0"></text>
</g>
<g>
<title>__read (76 samples, 0.39%)</title><rect x="583.3" y="1219.0" width="4.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="586.3" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.34%)</title><rect x="583.9" y="1203.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="586.9" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.33%)</title><rect x="583.9" y="1187.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.9" y="1198.0"></text>
</g>
<g>
<title>sys_read (64 samples, 0.33%)</title><rect x="584.0" y="1171.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="587.0" y="1182.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.03%)</title><rect x="584.0" y="1155.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.0" y="1166.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="584.0" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.0" y="1150.0"></text>
</g>
<g>
<title>vfs_read (54 samples, 0.28%)</title><rect x="584.6" y="1155.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="587.6" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (45 samples, 0.23%)</title><rect x="584.6" y="1139.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="587.6" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (44 samples, 0.22%)</title><rect x="584.6" y="1123.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.6" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (43 samples, 0.22%)</title><rect x="584.6" y="1107.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.6" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (43 samples, 0.22%)</title><rect x="584.6" y="1091.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="587.6" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (36 samples, 0.18%)</title><rect x="584.7" y="1075.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.7" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (33 samples, 0.17%)</title><rect x="584.9" y="1059.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.9" y="1070.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.03%)</title><rect x="585.2" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="588.2" y="1054.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.04%)</title><rect x="585.9" y="1043.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.9" y="1054.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.03%)</title><rect x="586.5" y="1043.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.5" y="1054.0"></text>
</g>
<g>
<title>sched_clock_cpu (5 samples, 0.03%)</title><rect x="586.5" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.5" y="1038.0"></text>
</g>
<g>
<title>sched_clock (5 samples, 0.03%)</title><rect x="586.5" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="589.5" y="1022.0"></text>
</g>
<g>
<title>xen_sched_clock (5 samples, 0.03%)</title><rect x="586.5" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.5" y="1006.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.05%)</title><rect x="587.3" y="1139.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.3" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.03%)</title><rect x="587.5" y="1123.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.5" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.03%)</title><rect x="587.5" y="1107.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.5" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.03%)</title><rect x="587.5" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.5" y="1102.0"></text>
</g>
<g>
<title>convertReturnVal (17 samples, 0.09%)</title><rect x="588.3" y="1235.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="591.3" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (17 samples, 0.09%)</title><rect x="588.3" y="1219.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="591.3" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (9 samples, 0.05%)</title><rect x="588.3" y="1203.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="591.3" y="1214.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (11 samples, 0.06%)</title><rect x="589.4" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (11 samples, 0.06%)</title><rect x="589.4" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (11 samples, 0.06%)</title><rect x="589.4" y="1203.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.06%)</title><rect x="589.4" y="1187.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.06%)</title><rect x="589.4" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.4" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (11 samples, 0.06%)</title><rect x="589.4" y="1155.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="592.4" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (11 samples, 0.06%)</title><rect x="589.4" y="1139.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="592.4" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 0.05%)</title><rect x="589.5" y="1123.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="592.5" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 0.05%)</title><rect x="589.5" y="1107.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="592.5" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (17 samples, 0.09%)</title><rect x="590.1" y="1363.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (17 samples, 0.09%)</title><rect x="590.1" y="1347.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (9 samples, 0.05%)</title><rect x="590.1" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (6 samples, 0.03%)</title><rect x="590.7" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (6 samples, 0.03%)</title><rect x="590.7" y="1315.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (6 samples, 0.03%)</title><rect x="590.7" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (6 samples, 0.03%)</title><rect x="590.7" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (6 samples, 0.03%)</title><rect x="590.7" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (6 samples, 0.03%)</title><rect x="590.7" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (5 samples, 0.03%)</title><rect x="590.7" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (5 samples, 0.03%)</title><rect x="590.7" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific$ (5 samples, 0.03%)</title><rect x="590.7" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific (5 samples, 0.03%)</title><rect x="590.7" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.7" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (70 samples, 0.36%)</title><rect x="591.1" y="1363.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (69 samples, 0.35%)</title><rect x="591.2" y="1347.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (68 samples, 0.35%)</title><rect x="591.2" y="1331.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (67 samples, 0.34%)</title><rect x="591.2" y="1315.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (63 samples, 0.32%)</title><rect x="591.5" y="1299.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (63 samples, 0.32%)</title><rect x="591.5" y="1283.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.31%)</title><rect x="591.5" y="1267.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="594.5" y="1278.0"></text>
</g>
<g>
<title>__write (61 samples, 0.31%)</title><rect x="591.5" y="1251.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="594.5" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.30%)</title><rect x="591.7" y="1235.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.7" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.29%)</title><rect x="591.7" y="1219.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.7" y="1230.0"></text>
</g>
<g>
<title>sys_write (56 samples, 0.29%)</title><rect x="591.8" y="1203.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="594.8" y="1214.0"></text>
</g>
<g>
<title>vfs_write (54 samples, 0.28%)</title><rect x="591.9" y="1187.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="594.9" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (51 samples, 0.26%)</title><rect x="591.9" y="1171.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.9" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (51 samples, 0.26%)</title><rect x="591.9" y="1155.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="594.9" y="1166.0"></text>
</g>
<g>
<title>pipe_write (51 samples, 0.26%)</title><rect x="591.9" y="1139.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="594.9" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 0.25%)</title><rect x="592.0" y="1123.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.0" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 0.25%)</title><rect x="592.0" y="1107.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.0" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 0.25%)</title><rect x="592.0" y="1091.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.0" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (261 samples, 1.33%)</title><rect x="595.3" y="1379.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (6 samples, 0.03%)</title><rect x="595.4" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.4" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (6 samples, 0.03%)</title><rect x="595.4" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (5 samples, 0.03%)</title><rect x="595.4" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.4" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (250 samples, 1.28%)</title><rect x="595.7" y="1363.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.7" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (250 samples, 1.28%)</title><rect x="595.7" y="1347.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (248 samples, 1.27%)</title><rect x="595.9" y="1331.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (111 samples, 0.57%)</title><rect x="596.0" y="1315.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/659326352.apply (111 samples, 0.57%)</title><rect x="596.0" y="1299.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (111 samples, 0.57%)</title><rect x="596.0" y="1283.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (111 samples, 0.57%)</title><rect x="596.0" y="1267.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (111 samples, 0.57%)</title><rect x="596.0" y="1251.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (111 samples, 0.57%)</title><rect x="596.0" y="1235.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (110 samples, 0.56%)</title><rect x="596.1" y="1219.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (109 samples, 0.56%)</title><rect x="596.2" y="1203.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (107 samples, 0.55%)</title><rect x="596.3" y="1187.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (107 samples, 0.55%)</title><rect x="596.3" y="1171.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (105 samples, 0.54%)</title><rect x="596.3" y="1155.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (102 samples, 0.52%)</title><rect x="596.3" y="1139.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (102 samples, 0.52%)</title><rect x="596.3" y="1123.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (102 samples, 0.52%)</title><rect x="596.3" y="1107.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (101 samples, 0.52%)</title><rect x="596.3" y="1091.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (100 samples, 0.51%)</title><rect x="596.3" y="1075.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (100 samples, 0.51%)</title><rect x="596.3" y="1059.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (100 samples, 0.51%)</title><rect x="596.3" y="1043.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (100 samples, 0.51%)</title><rect x="596.3" y="1027.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (98 samples, 0.50%)</title><rect x="596.4" y="1011.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (98 samples, 0.50%)</title><rect x="596.4" y="995.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (98 samples, 0.50%)</title><rect x="596.4" y="979.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.4" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (98 samples, 0.50%)</title><rect x="596.4" y="963.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (98 samples, 0.50%)</title><rect x="596.4" y="947.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (98 samples, 0.50%)</title><rect x="596.4" y="931.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (97 samples, 0.50%)</title><rect x="596.5" y="915.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (97 samples, 0.50%)</title><rect x="596.5" y="899.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (97 samples, 0.50%)</title><rect x="596.5" y="883.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (94 samples, 0.48%)</title><rect x="596.7" y="867.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.7" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.05%)</title><rect x="596.7" y="851.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="599.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.03%)</title><rect x="596.7" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="599.7" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (85 samples, 0.43%)</title><rect x="597.2" y="851.0" width="5.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="600.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 0.40%)</title><rect x="597.6" y="835.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.39%)</title><rect x="597.6" y="819.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.6" y="830.0"></text>
</g>
<g>
<title>sys_futex (73 samples, 0.37%)</title><rect x="597.9" y="803.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.9" y="814.0"></text>
</g>
<g>
<title>do_futex (73 samples, 0.37%)</title><rect x="597.9" y="787.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 0.37%)</title><rect x="597.9" y="771.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (70 samples, 0.36%)</title><rect x="598.0" y="755.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.0" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (70 samples, 0.36%)</title><rect x="598.0" y="739.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (70 samples, 0.36%)</title><rect x="598.0" y="723.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (130 samples, 0.66%)</title><rect x="603.0" y="1315.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (127 samples, 0.65%)</title><rect x="603.2" y="1299.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.2" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (127 samples, 0.65%)</title><rect x="603.2" y="1283.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (127 samples, 0.65%)</title><rect x="603.2" y="1267.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.2" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (127 samples, 0.65%)</title><rect x="603.2" y="1251.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (126 samples, 0.64%)</title><rect x="603.2" y="1235.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 0.63%)</title><rect x="603.3" y="1219.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="606.3" y="1230.0"></text>
</g>
<g>
<title>__write (122 samples, 0.62%)</title><rect x="603.4" y="1203.0" width="7.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="606.4" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (115 samples, 0.59%)</title><rect x="603.8" y="1187.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.8" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (115 samples, 0.59%)</title><rect x="603.8" y="1171.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.8" y="1182.0"></text>
</g>
<g>
<title>sys_write (115 samples, 0.59%)</title><rect x="603.8" y="1155.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.8" y="1166.0"></text>
</g>
<g>
<title>vfs_write (113 samples, 0.58%)</title><rect x="604.0" y="1139.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.0" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (105 samples, 0.54%)</title><rect x="604.1" y="1123.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="607.1" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (105 samples, 0.54%)</title><rect x="604.1" y="1107.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.1" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (100 samples, 0.51%)</title><rect x="604.4" y="1091.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.4" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (98 samples, 0.50%)</title><rect x="604.5" y="1075.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.5" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (95 samples, 0.49%)</title><rect x="604.5" y="1059.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.5" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (94 samples, 0.48%)</title><rect x="604.6" y="1043.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="607.6" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (86 samples, 0.44%)</title><rect x="605.0" y="1027.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="608.0" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.03%)</title><rect x="605.6" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.6" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.03%)</title><rect x="605.6" y="995.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.6" y="1006.0"></text>
</g>
<g>
<title>tcp_push (57 samples, 0.29%)</title><rect x="606.1" y="1011.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.1" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (57 samples, 0.29%)</title><rect x="606.1" y="995.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.1" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (57 samples, 0.29%)</title><rect x="606.1" y="979.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.1" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 0.20%)</title><rect x="606.3" y="963.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="609.3" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (31 samples, 0.16%)</title><rect x="606.6" y="947.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.6" y="958.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 0.15%)</title><rect x="606.6" y="931.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.6" y="942.0"></text>
</g>
<g>
<title>ip_output (28 samples, 0.14%)</title><rect x="606.7" y="915.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="609.7" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (26 samples, 0.13%)</title><rect x="606.8" y="899.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.8" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (21 samples, 0.11%)</title><rect x="607.1" y="883.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.1" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.09%)</title><rect x="607.3" y="867.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.3" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.09%)</title><rect x="607.3" y="851.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.3" y="862.0"></text>
</g>
<g>
<title>sch_direct_xmit (15 samples, 0.08%)</title><rect x="607.4" y="835.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.4" y="846.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.03%)</title><rect x="607.7" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.7" y="830.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.04%)</title><rect x="608.9" y="963.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.9" y="974.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="609.0" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="612.0" y="958.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (5 samples, 0.03%)</title><rect x="609.0" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="612.0" y="942.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="609.0" y="915.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.0" y="926.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="609.0" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.0" y="910.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.05%)</title><rect x="609.5" y="1011.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.5" y="1022.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.03%)</title><rect x="609.7" y="995.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="612.7" y="1006.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (66 samples, 0.34%)</title><rect x="611.3" y="1443.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (66 samples, 0.34%)</title><rect x="611.3" y="1427.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (66 samples, 0.34%)</title><rect x="611.3" y="1411.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.3" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (66 samples, 0.34%)</title><rect x="611.3" y="1395.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (19 samples, 0.10%)</title><rect x="611.3" y="1379.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (19 samples, 0.10%)</title><rect x="611.3" y="1363.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (19 samples, 0.10%)</title><rect x="611.3" y="1347.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.3" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (19 samples, 0.10%)</title><rect x="611.3" y="1331.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.3" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (19 samples, 0.10%)</title><rect x="611.3" y="1315.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.10%)</title><rect x="611.3" y="1299.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="614.3" y="1310.0"></text>
</g>
<g>
<title>__write (19 samples, 0.10%)</title><rect x="611.3" y="1283.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="614.3" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.10%)</title><rect x="611.3" y="1267.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.3" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.10%)</title><rect x="611.3" y="1251.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="614.3" y="1262.0"></text>
</g>
<g>
<title>sys_write (18 samples, 0.09%)</title><rect x="611.3" y="1235.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.3" y="1246.0"></text>
</g>
<g>
<title>vfs_write (18 samples, 0.09%)</title><rect x="611.3" y="1219.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="614.3" y="1230.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.08%)</title><rect x="611.4" y="1203.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.4" y="1214.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.08%)</title><rect x="611.4" y="1187.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.4" y="1198.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.08%)</title><rect x="611.4" y="1171.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.4" y="1182.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.07%)</title><rect x="611.4" y="1155.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="614.4" y="1166.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.07%)</title><rect x="611.4" y="1139.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.4" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="611.4" y="1123.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.4" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (47 samples, 0.24%)</title><rect x="612.4" y="1379.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (12 samples, 0.06%)</title><rect x="612.4" y="1363.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.06%)</title><rect x="612.4" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.06%)</title><rect x="612.4" y="1331.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.06%)</title><rect x="612.4" y="1315.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.4" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (9 samples, 0.05%)</title><rect x="612.6" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.6" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (9 samples, 0.05%)</title><rect x="612.6" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.6" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.send (9 samples, 0.05%)</title><rect x="612.6" y="1267.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.6" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (7 samples, 0.04%)</title><rect x="612.7" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (7 samples, 0.04%)</title><rect x="612.7" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.04%)</title><rect x="612.7" y="1219.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="612.7" y="1203.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.04%)</title><rect x="612.7" y="1187.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.04%)</title><rect x="612.7" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.04%)</title><rect x="612.7" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.04%)</title><rect x="612.7" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.04%)</title><rect x="612.7" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.04%)</title><rect x="612.7" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.04%)</title><rect x="612.7" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="612.7" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.04%)</title><rect x="612.7" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="612.7" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.04%)</title><rect x="612.7" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.04%)</title><rect x="612.7" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.04%)</title><rect x="612.7" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.04%)</title><rect x="612.7" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.04%)</title><rect x="612.7" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="612.7" y="947.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="612.7" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.04%)</title><rect x="612.7" y="915.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="615.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="612.7" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="615.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="612.7" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="615.7" y="894.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="612.7" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.7" y="878.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="612.7" y="851.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="612.7" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.7" y="846.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="612.8" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.8" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="612.8" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.8" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="612.8" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (32 samples, 0.16%)</title><rect x="613.3" y="1363.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.3" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (22 samples, 0.11%)</title><rect x="613.5" y="1347.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (22 samples, 0.11%)</title><rect x="613.5" y="1331.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.5" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (9 samples, 0.05%)</title><rect x="613.5" y="1315.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="616.5" y="1326.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (7 samples, 0.04%)</title><rect x="613.5" y="1299.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="616.5" y="1310.0"></text>
</g>
<g>
<title>jni_NewObject (5 samples, 0.03%)</title><rect x="613.5" y="1283.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="616.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.04%)</title><rect x="614.0" y="1315.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="617.0" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="614.1" y="1299.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="617.1" y="1310.0"></text>
</g>
<g>
<title>accept (5 samples, 0.03%)</title><rect x="614.1" y="1283.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="617.1" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="614.1" y="1267.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="617.1" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="614.1" y="1251.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="617.1" y="1262.0"></text>
</g>
<g>
<title>sys_accept (5 samples, 0.03%)</title><rect x="614.1" y="1235.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.1" y="1246.0"></text>
</g>
<g>
<title>SYSC_accept4 (5 samples, 0.03%)</title><rect x="614.1" y="1219.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="617.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (5 samples, 0.03%)</title><rect x="614.9" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.9" y="1358.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (8 samples, 0.04%)</title><rect x="615.2" y="1443.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (8 samples, 0.04%)</title><rect x="615.2" y="1427.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (8 samples, 0.04%)</title><rect x="615.2" y="1411.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.2" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (8 samples, 0.04%)</title><rect x="615.2" y="1395.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.2" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (8 samples, 0.04%)</title><rect x="615.2" y="1379.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.2" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (4,964 samples, 25.38%)</title><rect x="615.7" y="1443.0" width="299.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.7" y="1454.0">akka/stream/impl/fusing/ActorGraphInterp..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (4,964 samples, 25.38%)</title><rect x="615.7" y="1427.0" width="299.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.7" y="1438.0">akka/actor/Actor.aroundReceive$</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (4,964 samples, 25.38%)</title><rect x="615.7" y="1411.0" width="299.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.7" y="1422.0">akka/actor/Actor.aroundReceive</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (4,959 samples, 25.36%)</title><rect x="616.0" y="1395.0" width="299.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.0" y="1406.0">akka/stream/impl/fusing/ActorGraphInterp..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (4,442 samples, 22.71%)</title><rect x="616.3" y="1379.0" width="268.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.3" y="1390.0">akka/stream/impl/fusing/ActorGraphIn..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (5 samples, 0.03%)</title><rect x="617.0" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (5 samples, 0.03%)</title><rect x="617.0" y="1347.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (5 samples, 0.03%)</title><rect x="617.0" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.0" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (4,411 samples, 22.55%)</title><rect x="617.6" y="1363.0" width="266.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.6" y="1374.0">akka/stream/impl/fusing/GraphInterpr..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (4,411 samples, 22.55%)</title><rect x="617.6" y="1347.0" width="266.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.6" y="1358.0">akka/stream/impl/fusing/GraphInterpr..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (321 samples, 1.64%)</title><rect x="618.0" y="1331.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$1242/417359108.apply (67 samples, 0.34%)</title><rect x="618.2" y="1315.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (66 samples, 0.34%)</title><rect x="618.3" y="1299.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (66 samples, 0.34%)</title><rect x="618.3" y="1283.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (14 samples, 0.07%)</title><rect x="618.7" y="1267.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (5 samples, 0.03%)</title><rect x="618.7" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.04%)</title><rect x="619.0" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (35 samples, 0.18%)</title><rect x="619.9" y="1267.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (34 samples, 0.17%)</title><rect x="619.9" y="1251.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (31 samples, 0.16%)</title><rect x="620.1" y="1235.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.1" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (30 samples, 0.15%)</title><rect x="620.2" y="1219.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.2" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (30 samples, 0.15%)</title><rect x="620.2" y="1203.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.2" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (21 samples, 0.11%)</title><rect x="620.2" y="1187.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1228/1249069270.apply (21 samples, 0.11%)</title><rect x="620.2" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (21 samples, 0.11%)</title><rect x="620.2" y="1155.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (20 samples, 0.10%)</title><rect x="620.2" y="1139.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (5 samples, 0.03%)</title><rect x="620.4" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (10 samples, 0.05%)</title><rect x="620.7" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (6 samples, 0.03%)</title><rect x="620.8" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.8" y="1118.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (9 samples, 0.05%)</title><rect x="621.4" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1238/1635207544.apply (71 samples, 0.36%)</title><rect x="622.2" y="1315.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.2" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (70 samples, 0.36%)</title><rect x="622.3" y="1299.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (70 samples, 0.36%)</title><rect x="622.3" y="1283.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1330/354740860.apply$mcV$sp (60 samples, 0.31%)</title><rect x="622.3" y="1267.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (60 samples, 0.31%)</title><rect x="622.3" y="1251.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1276/409680834.apply (60 samples, 0.31%)</title><rect x="622.3" y="1235.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (60 samples, 0.31%)</title><rect x="622.3" y="1219.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (60 samples, 0.31%)</title><rect x="622.3" y="1203.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (60 samples, 0.31%)</title><rect x="622.3" y="1187.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1333/1427284690.apply (9 samples, 0.05%)</title><rect x="622.3" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (9 samples, 0.05%)</title><rect x="622.3" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (9 samples, 0.05%)</title><rect x="622.3" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (8 samples, 0.04%)</title><rect x="622.4" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (7 samples, 0.04%)</title><rect x="622.4" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (7 samples, 0.04%)</title><rect x="622.4" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (7 samples, 0.04%)</title><rect x="622.4" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1421/234337137.apply (51 samples, 0.26%)</title><rect x="622.8" y="1171.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3$adapted (51 samples, 0.26%)</title><rect x="622.8" y="1155.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3 (51 samples, 0.26%)</title><rect x="622.8" y="1139.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptFailed (28 samples, 0.14%)</title><rect x="622.8" y="1123.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (28 samples, 0.14%)</title><rect x="622.8" y="1107.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (27 samples, 0.14%)</title><rect x="622.9" y="1091.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (27 samples, 0.14%)</title><rect x="622.9" y="1075.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1254/1813275910.apply (12 samples, 0.06%)</title><rect x="623.1" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onConnectionAttemptFailed$2 (12 samples, 0.06%)</title><rect x="623.1" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Connecting.onConnectionAttemptFailed (9 samples, 0.05%)</title><rect x="623.1" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.onConnectionAttemptFailed$ (9 samples, 0.05%)</title><rect x="623.1" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.onConnectionAttemptFailed (9 samples, 0.05%)</title><rect x="623.1" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.failOngoingRequest (9 samples, 0.05%)</title><rect x="623.1" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (6 samples, 0.03%)</title><rect x="623.3" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.03%)</title><rect x="624.1" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onConnectionAttemptFailed (23 samples, 0.12%)</title><rect x="624.5" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.5" y="1134.0"></text>
</g>
<g>
<title>akka/event/BusLogging.warning (8 samples, 0.04%)</title><rect x="624.5" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.5" y="1118.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning$ (8 samples, 0.04%)</title><rect x="624.5" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.5" y="1102.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning (8 samples, 0.04%)</title><rect x="624.5" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.5" y="1086.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyWarning (5 samples, 0.03%)</title><rect x="624.7" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (13 samples, 0.07%)</title><rect x="625.1" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (13 samples, 0.07%)</title><rect x="625.1" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (13 samples, 0.07%)</title><rect x="625.1" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1422/397759009.apply (13 samples, 0.07%)</title><rect x="625.1" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1$adapted (13 samples, 0.07%)</title><rect x="625.1" y="1043.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1 (13 samples, 0.07%)</title><rect x="625.1" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewConnectionEmbargo (13 samples, 0.07%)</title><rect x="625.1" y="1011.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (13 samples, 0.07%)</title><rect x="625.1" y="995.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (13 samples, 0.07%)</title><rect x="625.1" y="979.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (13 samples, 0.07%)</title><rect x="625.1" y="963.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1255/1374790563.apply (5 samples, 0.03%)</title><rect x="625.1" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot$$Lambda$1354/96859250.apply$mcV$sp (10 samples, 0.05%)</title><rect x="625.9" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.$anonfun$updateState$1 (10 samples, 0.05%)</title><rect x="625.9" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (10 samples, 0.05%)</title><rect x="625.9" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (9 samples, 0.05%)</title><rect x="626.0" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (9 samples, 0.05%)</title><rect x="626.0" y="1203.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (9 samples, 0.05%)</title><rect x="626.0" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (6 samples, 0.03%)</title><rect x="626.0" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (5 samples, 0.03%)</title><rect x="626.0" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (5 samples, 0.03%)</title><rect x="626.0" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (5 samples, 0.03%)</title><rect x="626.0" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (5 samples, 0.03%)</title><rect x="626.0" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (5 samples, 0.03%)</title><rect x="626.0" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1256/296096008.apply (5 samples, 0.03%)</title><rect x="626.0" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (5 samples, 0.03%)</title><rect x="626.0" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (5 samples, 0.03%)</title><rect x="626.0" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (5 samples, 0.03%)</title><rect x="626.0" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (5 samples, 0.03%)</title><rect x="626.0" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (5 samples, 0.03%)</title><rect x="626.0" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (5 samples, 0.03%)</title><rect x="626.0" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.0" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (14 samples, 0.07%)</title><rect x="626.5" y="1315.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (12 samples, 0.06%)</title><rect x="626.5" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (7 samples, 0.04%)</title><rect x="626.5" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (7 samples, 0.04%)</title><rect x="626.5" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (7 samples, 0.04%)</title><rect x="626.5" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (7 samples, 0.04%)</title><rect x="626.5" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (7 samples, 0.04%)</title><rect x="626.5" y="1219.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (7 samples, 0.04%)</title><rect x="626.5" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$544/1187840497.apply (54 samples, 0.28%)</title><rect x="627.8" y="1315.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (52 samples, 0.27%)</title><rect x="627.9" y="1299.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (52 samples, 0.27%)</title><rect x="627.9" y="1283.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (52 samples, 0.27%)</title><rect x="627.9" y="1267.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$542/814576728.apply (5 samples, 0.03%)</title><rect x="628.0" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (5 samples, 0.03%)</title><rect x="628.0" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (5 samples, 0.03%)</title><rect x="628.0" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (5 samples, 0.03%)</title><rect x="628.0" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (5 samples, 0.03%)</title><rect x="628.0" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1279/299398025.apply (31 samples, 0.16%)</title><rect x="628.3" y="1251.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (29 samples, 0.15%)</title><rect x="628.4" y="1235.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (29 samples, 0.15%)</title><rect x="628.4" y="1219.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (29 samples, 0.15%)</title><rect x="628.4" y="1203.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (9 samples, 0.05%)</title><rect x="629.0" y="1187.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (9 samples, 0.05%)</title><rect x="629.0" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.1" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.1" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (8 samples, 0.04%)</title><rect x="629.1" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.1" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (8 samples, 0.04%)</title><rect x="629.1" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.04%)</title><rect x="629.1" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="629.1" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.04%)</title><rect x="629.1" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="629.1" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.04%)</title><rect x="629.1" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.04%)</title><rect x="629.1" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.04%)</title><rect x="629.1" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.04%)</title><rect x="629.1" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.04%)</title><rect x="629.1" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="629.1" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.04%)</title><rect x="629.1" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.1" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.04%)</title><rect x="629.1" y="899.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="632.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="629.1" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="629.1" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="632.1" y="878.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.03%)</title><rect x="629.2" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.2" y="862.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="629.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="632.2" y="846.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="629.2" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.2" y="830.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="629.2" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.2" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="629.2" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="632.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="629.2" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.2" y="782.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (8 samples, 0.04%)</title><rect x="629.5" y="1187.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (8 samples, 0.04%)</title><rect x="629.5" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.5" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.5" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (8 samples, 0.04%)</title><rect x="629.5" y="1123.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (8 samples, 0.04%)</title><rect x="629.5" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (8 samples, 0.04%)</title><rect x="629.5" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.04%)</title><rect x="629.5" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="629.5" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.04%)</title><rect x="629.5" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.04%)</title><rect x="629.5" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.04%)</title><rect x="629.5" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.04%)</title><rect x="629.5" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.04%)</title><rect x="629.5" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.04%)</title><rect x="629.5" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.04%)</title><rect x="629.5" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="629.5" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.04%)</title><rect x="629.5" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.5" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.04%)</title><rect x="629.5" y="899.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="632.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="629.5" y="883.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="632.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="629.5" y="867.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="632.5" y="878.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="629.6" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="632.6" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="629.6" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="632.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="629.6" y="819.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.6" y="830.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="629.7" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="629.7" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="632.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="629.7" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="632.7" y="782.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1331/126147984.apply (5 samples, 0.03%)</title><rect x="630.2" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$921/950294189.apply (9 samples, 0.05%)</title><rect x="630.5" y="1251.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2$adapted (9 samples, 0.05%)</title><rect x="630.5" y="1235.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2 (9 samples, 0.05%)</title><rect x="630.5" y="1219.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (9 samples, 0.05%)</title><rect x="630.5" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$683/1077898323.apply (77 samples, 0.39%)</title><rect x="631.1" y="1315.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (77 samples, 0.39%)</title><rect x="631.1" y="1299.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (77 samples, 0.39%)</title><rect x="631.1" y="1283.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (77 samples, 0.39%)</title><rect x="631.1" y="1267.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (28 samples, 0.14%)</title><rect x="631.5" y="1251.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (20 samples, 0.10%)</title><rect x="631.9" y="1235.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (20 samples, 0.10%)</title><rect x="631.9" y="1219.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (20 samples, 0.10%)</title><rect x="631.9" y="1203.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (20 samples, 0.10%)</title><rect x="631.9" y="1187.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (19 samples, 0.10%)</title><rect x="631.9" y="1171.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.9" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (18 samples, 0.09%)</title><rect x="631.9" y="1155.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="634.9" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (18 samples, 0.09%)</title><rect x="631.9" y="1139.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="634.9" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (18 samples, 0.09%)</title><rect x="631.9" y="1123.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="634.9" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (17 samples, 0.09%)</title><rect x="632.0" y="1107.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="635.0" y="1118.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (5 samples, 0.03%)</title><rect x="632.4" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerMessages$Scheduled.timerId (8 samples, 0.04%)</title><rect x="633.2" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (32 samples, 0.16%)</title><rect x="633.8" y="1251.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (16 samples, 0.08%)</title><rect x="634.6" y="1235.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.6" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (7 samples, 0.04%)</title><rect x="635.1" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.1" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (5 samples, 0.03%)</title><rect x="635.3" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.09%)</title><rect x="635.9" y="1315.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.9" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (7 samples, 0.04%)</title><rect x="636.9" y="1315.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.9" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (7 samples, 0.04%)</title><rect x="636.9" y="1299.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.9" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (7 samples, 0.04%)</title><rect x="636.9" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.9" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (6 samples, 0.03%)</title><rect x="637.0" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (6 samples, 0.03%)</title><rect x="637.0" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (6 samples, 0.03%)</title><rect x="637.0" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (6 samples, 0.03%)</title><rect x="637.0" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.03%)</title><rect x="637.0" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (5 samples, 0.03%)</title><rect x="637.0" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (5 samples, 0.03%)</title><rect x="637.0" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/ExecutionContext$parasitic$.execute (5 samples, 0.03%)</title><rect x="637.0" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (5 samples, 0.03%)</title><rect x="637.0" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (5 samples, 0.03%)</title><rect x="637.3" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (5 samples, 0.03%)</title><rect x="637.3" y="1315.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (5 samples, 0.03%)</title><rect x="637.3" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (5 samples, 0.03%)</title><rect x="637.3" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (4,080 samples, 20.86%)</title><rect x="637.6" y="1331.0" width="246.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.6" y="1342.0">akka/stream/impl/fusing/GraphInte..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (4,062 samples, 20.77%)</title><rect x="637.7" y="1315.0" width="245.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.7" y="1326.0">akka/stream/impl/fusing/GraphInte..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (33 samples, 0.17%)</title><rect x="639.6" y="1299.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (33 samples, 0.17%)</title><rect x="639.6" y="1283.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (19 samples, 0.10%)</title><rect x="640.1" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (13 samples, 0.07%)</title><rect x="640.1" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (13 samples, 0.07%)</title><rect x="640.1" y="1235.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (13 samples, 0.07%)</title><rect x="640.1" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (13 samples, 0.07%)</title><rect x="640.1" y="1203.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (13 samples, 0.07%)</title><rect x="640.1" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (11 samples, 0.06%)</title><rect x="640.1" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (11 samples, 0.06%)</title><rect x="640.1" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (8 samples, 0.04%)</title><rect x="640.3" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1029/499620596.apply (8 samples, 0.04%)</title><rect x="640.3" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (8 samples, 0.04%)</title><rect x="640.3" y="1107.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (8 samples, 0.04%)</title><rect x="640.3" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (8 samples, 0.04%)</title><rect x="640.3" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (8 samples, 0.04%)</title><rect x="640.3" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (8 samples, 0.04%)</title><rect x="640.3" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (8 samples, 0.04%)</title><rect x="640.3" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (8 samples, 0.04%)</title><rect x="640.3" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (8 samples, 0.04%)</title><rect x="640.3" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.3" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.04%)</title><rect x="640.3" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.3" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="640.3" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.3" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.04%)</title><rect x="640.3" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.3" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="640.3" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.3" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.04%)</title><rect x="640.3" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.04%)</title><rect x="640.3" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.04%)</title><rect x="640.3" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.04%)</title><rect x="640.3" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.04%)</title><rect x="640.3" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="640.3" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="640.3" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.03%)</title><rect x="640.4" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="643.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="640.4" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="640.4" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.4" y="782.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.03%)</title><rect x="640.4" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.4" y="766.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="640.4" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.4" y="750.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="640.4" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.4" y="734.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="640.4" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.4" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="640.4" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="640.4" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (6 samples, 0.03%)</title><rect x="640.9" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (6 samples, 0.03%)</title><rect x="640.9" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (6 samples, 0.03%)</title><rect x="640.9" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (74 samples, 0.38%)</title><rect x="641.6" y="1299.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.6" y="1310.0"></text>
</g>
<g>
<title>itable stub (34 samples, 0.17%)</title><rect x="644.0" y="1283.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="647.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (989 samples, 5.06%)</title><rect x="646.1" y="1299.0" width="59.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.1" y="1310.0">akka/s..</text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (6 samples, 0.03%)</title><rect x="648.5" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (6 samples, 0.03%)</title><rect x="648.5" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.03%)</title><rect x="648.5" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$Connection.slot_$eq (11 samples, 0.06%)</title><rect x="648.9" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (10 samples, 0.05%)</title><rect x="649.6" y="1283.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.completeConnection (13 samples, 0.07%)</title><rect x="650.2" y="1283.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (15 samples, 0.08%)</title><rect x="651.0" y="1283.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (584 samples, 2.99%)</title><rect x="651.9" y="1283.0" width="35.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.9" y="1294.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (10 samples, 0.05%)</title><rect x="652.2" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.2" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (7 samples, 0.04%)</title><rect x="652.3" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.3" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (7 samples, 0.04%)</title><rect x="652.3" y="1235.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.3" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (7 samples, 0.04%)</title><rect x="652.3" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.3" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (7 samples, 0.04%)</title><rect x="652.3" y="1203.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.3" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.04%)</title><rect x="652.3" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.3" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.04%)</title><rect x="652.3" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.3" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.04%)</title><rect x="652.3" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (7 samples, 0.04%)</title><rect x="652.3" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (7 samples, 0.04%)</title><rect x="652.3" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (7 samples, 0.04%)</title><rect x="652.3" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (7 samples, 0.04%)</title><rect x="652.3" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (7 samples, 0.04%)</title><rect x="652.3" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="652.3" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.04%)</title><rect x="652.3" y="1043.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="652.3" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.04%)</title><rect x="652.3" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.04%)</title><rect x="652.3" y="995.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.04%)</title><rect x="652.3" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.04%)</title><rect x="652.3" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.04%)</title><rect x="652.3" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="652.3" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="652.3" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.3" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.03%)</title><rect x="652.4" y="899.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="655.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="652.5" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="652.5" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.5" y="878.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="652.5" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="655.5" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="652.5" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.5" y="846.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="652.5" y="819.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.5" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (505 samples, 2.58%)</title><rect x="653.5" y="1267.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.5" y="1278.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$524/2033282874.apply (503 samples, 2.57%)</title><rect x="653.5" y="1251.0" width="30.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.5" y="1262.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (503 samples, 2.57%)</title><rect x="653.5" y="1235.0" width="30.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.5" y="1246.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (495 samples, 2.53%)</title><rect x="654.0" y="1219.0" width="29.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.0" y="1230.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (495 samples, 2.53%)</title><rect x="654.0" y="1203.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.0" y="1214.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (495 samples, 2.53%)</title><rect x="654.0" y="1187.0" width="29.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.0" y="1198.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (495 samples, 2.53%)</title><rect x="654.0" y="1171.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.0" y="1182.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/Compose.apply (12 samples, 0.06%)</title><rect x="655.7" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$908/1102233315.apply (5 samples, 0.03%)</title><rect x="656.0" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (285 samples, 1.46%)</title><rect x="656.5" y="1155.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (6 samples, 0.03%)</title><rect x="657.4" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.&lt;init&gt; (6 samples, 0.03%)</title><rect x="657.4" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (254 samples, 1.30%)</title><rect x="657.8" y="1139.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage.createLogicAndMaterializedValue (15 samples, 0.08%)</title><rect x="657.8" y="1123.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.&lt;init&gt; (14 samples, 0.07%)</title><rect x="657.8" y="1107.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (238 samples, 1.22%)</title><rect x="658.7" y="1123.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser.createLogic (38 samples, 0.19%)</title><rect x="658.7" y="1107.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.&lt;init&gt; (34 samples, 0.17%)</title><rect x="659.0" y="1091.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.createShallowCopy (9 samples, 0.05%)</title><rect x="659.2" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.&lt;init&gt; (6 samples, 0.03%)</title><rect x="659.3" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$init$ (19 samples, 0.10%)</title><rect x="659.7" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$.createLogic (24 samples, 0.12%)</title><rect x="661.0" y="1107.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.&lt;init&gt; (18 samples, 0.09%)</title><rect x="661.4" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage.createLogic (42 samples, 0.21%)</title><rect x="662.5" y="1107.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9.&lt;init&gt; (36 samples, 0.18%)</title><rect x="662.8" y="1091.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$11.&lt;init&gt; (5 samples, 0.03%)</title><rect x="663.4" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="664.3" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="664.3" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$Lambda$913/1746495056.get$Lambda (5 samples, 0.03%)</title><rect x="664.3" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests.createLogic (27 samples, 0.14%)</title><rect x="665.0" y="1107.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.&lt;init&gt; (26 samples, 0.13%)</title><rect x="665.1" y="1091.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.akka$http$impl$engine$server$HttpServerBluePrint$PrepareRequests$$anon$$setIdleHandlers (7 samples, 0.04%)</title><rect x="665.3" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/Attributes.get (11 samples, 0.06%)</title><rect x="665.8" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (10 samples, 0.05%)</title><rect x="665.9" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst$ (10 samples, 0.05%)</title><rect x="665.9" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst (9 samples, 0.05%)</title><rect x="665.9" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage.createLogic (16 samples, 0.08%)</title><rect x="666.6" y="1107.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15.&lt;init&gt; (13 samples, 0.07%)</title><rect x="666.8" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport.createLogic (31 samples, 0.16%)</title><rect x="667.6" y="1107.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3.&lt;init&gt; (22 samples, 0.11%)</title><rect x="668.2" y="1091.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.setHandler (5 samples, 0.03%)</title><rect x="669.1" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi.createLogic (11 samples, 0.06%)</title><rect x="669.5" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1.&lt;init&gt; (8 samples, 0.04%)</title><rect x="669.7" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage.createLogic (8 samples, 0.04%)</title><rect x="670.1" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect.createLogic (8 samples, 0.04%)</title><rect x="670.8" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect.createLogic (5 samples, 0.03%)</title><rect x="671.0" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$.createLogic (15 samples, 0.08%)</title><rect x="671.4" y="1107.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.&lt;init&gt; (11 samples, 0.06%)</title><rect x="671.5" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (11 samples, 0.06%)</title><rect x="671.5" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (5 samples, 0.03%)</title><rect x="671.5" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (5 samples, 0.03%)</title><rect x="671.8" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (5 samples, 0.03%)</title><rect x="671.8" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (5 samples, 0.03%)</title><rect x="671.8" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (5 samples, 0.03%)</title><rect x="671.8" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.8" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map.createLogic (8 samples, 0.04%)</title><rect x="672.3" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.&lt;init&gt; (5 samples, 0.03%)</title><rect x="672.5" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.5" y="1102.0"></text>
</g>
<g>
<title>vtable stub (9 samples, 0.05%)</title><rect x="673.2" y="1139.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="676.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (89 samples, 0.46%)</title><rect x="673.7" y="1155.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (67 samples, 0.34%)</title><rect x="673.9" y="1139.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (65 samples, 0.33%)</title><rect x="673.9" y="1123.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (65 samples, 0.33%)</title><rect x="673.9" y="1107.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (65 samples, 0.33%)</title><rect x="673.9" y="1091.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (63 samples, 0.32%)</title><rect x="674.1" y="1075.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (9 samples, 0.05%)</title><rect x="674.3" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (8 samples, 0.04%)</title><rect x="674.4" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.4" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (8 samples, 0.04%)</title><rect x="674.4" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.4" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (11 samples, 0.06%)</title><rect x="674.8" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (11 samples, 0.06%)</title><rect x="674.8" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (11 samples, 0.06%)</title><rect x="674.8" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (11 samples, 0.06%)</title><rect x="674.8" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (9 samples, 0.05%)</title><rect x="675.0" y="995.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (9 samples, 0.05%)</title><rect x="675.0" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.05%)</title><rect x="675.0" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.04%)</title><rect x="675.0" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.04%)</title><rect x="675.0" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.04%)</title><rect x="675.0" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.03%)</title><rect x="675.1" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.1" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.03%)</title><rect x="675.1" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.1" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.03%)</title><rect x="675.1" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.1" y="878.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (16 samples, 0.08%)</title><rect x="675.6" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.6" y="1070.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (6 samples, 0.03%)</title><rect x="675.9" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.9" y="1054.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (5 samples, 0.03%)</title><rect x="675.9" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (5 samples, 0.03%)</title><rect x="675.9" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (5 samples, 0.03%)</title><rect x="675.9" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (5 samples, 0.03%)</title><rect x="675.9" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (5 samples, 0.03%)</title><rect x="675.9" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.9" y="974.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (20 samples, 0.10%)</title><rect x="676.5" y="1059.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (18 samples, 0.09%)</title><rect x="676.5" y="1043.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.5" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (15 samples, 0.08%)</title><rect x="676.5" y="1027.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (15 samples, 0.08%)</title><rect x="676.5" y="1011.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (15 samples, 0.08%)</title><rect x="676.5" y="995.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (15 samples, 0.08%)</title><rect x="676.5" y="979.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (15 samples, 0.08%)</title><rect x="676.5" y="963.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.5" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (15 samples, 0.08%)</title><rect x="676.5" y="947.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.08%)</title><rect x="676.5" y="931.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.5" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.07%)</title><rect x="676.5" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.07%)</title><rect x="676.5" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.07%)</title><rect x="676.5" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.5" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.07%)</title><rect x="676.5" y="867.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.07%)</title><rect x="676.5" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.07%)</title><rect x="676.5" y="835.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.07%)</title><rect x="676.5" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.07%)</title><rect x="676.5" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.07%)</title><rect x="676.5" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.07%)</title><rect x="676.5" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.06%)</title><rect x="676.6" y="755.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="679.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="676.6" y="739.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="676.6" y="723.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.6" y="734.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.06%)</title><rect x="676.6" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="679.6" y="718.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.06%)</title><rect x="676.6" y="691.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.6" y="702.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.05%)</title><rect x="676.7" y="675.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="679.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="676.7" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="676.7" y="643.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="676.7" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.7" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (14 samples, 0.07%)</title><rect x="677.9" y="1139.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (9 samples, 0.05%)</title><rect x="678.0" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (8 samples, 0.04%)</title><rect x="678.0" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.0" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (7 samples, 0.04%)</title><rect x="678.0" y="1091.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (6 samples, 0.03%)</title><rect x="678.1" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (6 samples, 0.03%)</title><rect x="678.1" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (6 samples, 0.03%)</title><rect x="678.1" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (6 samples, 0.03%)</title><rect x="678.1" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (13 samples, 0.07%)</title><rect x="679.1" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (9 samples, 0.05%)</title><rect x="679.3" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (9 samples, 0.05%)</title><rect x="679.3" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (18 samples, 0.09%)</title><rect x="680.0" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (17 samples, 0.09%)</title><rect x="680.0" y="1139.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (13 samples, 0.07%)</title><rect x="680.2" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (13 samples, 0.07%)</title><rect x="680.2" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (7 samples, 0.04%)</title><rect x="680.6" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.6" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (11 samples, 0.06%)</title><rect x="681.1" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (6 samples, 0.03%)</title><rect x="681.4" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (6 samples, 0.03%)</title><rect x="681.4" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (18 samples, 0.09%)</title><rect x="681.7" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$909/1424612460.apply (18 samples, 0.09%)</title><rect x="681.7" y="1139.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (18 samples, 0.09%)</title><rect x="681.7" y="1123.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (15 samples, 0.08%)</title><rect x="681.9" y="1107.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (11 samples, 0.06%)</title><rect x="682.1" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (11 samples, 0.06%)</title><rect x="682.1" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (11 samples, 0.06%)</title><rect x="682.1" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (11 samples, 0.06%)</title><rect x="682.1" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (11 samples, 0.06%)</title><rect x="682.1" y="1027.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (9 samples, 0.05%)</title><rect x="682.1" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (7 samples, 0.04%)</title><rect x="682.3" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (6 samples, 0.03%)</title><rect x="682.3" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (13 samples, 0.07%)</title><rect x="683.1" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (50 samples, 0.26%)</title><rect x="684.1" y="1267.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (46 samples, 0.24%)</title><rect x="684.1" y="1251.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (46 samples, 0.24%)</title><rect x="684.1" y="1235.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (46 samples, 0.24%)</title><rect x="684.1" y="1219.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (46 samples, 0.24%)</title><rect x="684.1" y="1203.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (46 samples, 0.24%)</title><rect x="684.1" y="1187.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (46 samples, 0.24%)</title><rect x="684.1" y="1171.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (46 samples, 0.24%)</title><rect x="684.1" y="1155.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (46 samples, 0.24%)</title><rect x="684.1" y="1139.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (45 samples, 0.23%)</title><rect x="684.1" y="1123.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (45 samples, 0.23%)</title><rect x="684.1" y="1107.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (45 samples, 0.23%)</title><rect x="684.1" y="1091.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (45 samples, 0.23%)</title><rect x="684.1" y="1075.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (45 samples, 0.23%)</title><rect x="684.1" y="1059.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (45 samples, 0.23%)</title><rect x="684.1" y="1043.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (45 samples, 0.23%)</title><rect x="684.1" y="1027.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (45 samples, 0.23%)</title><rect x="684.1" y="1011.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (45 samples, 0.23%)</title><rect x="684.1" y="995.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 0.23%)</title><rect x="684.1" y="979.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 0.22%)</title><rect x="684.2" y="963.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.2" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="684.2" y="947.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="687.2" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (39 samples, 0.20%)</title><rect x="684.5" y="947.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="687.5" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.19%)</title><rect x="684.6" y="931.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="687.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.19%)</title><rect x="684.6" y="915.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="687.6" y="926.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.19%)</title><rect x="684.6" y="899.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="687.6" y="910.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.19%)</title><rect x="684.6" y="883.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="687.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 0.19%)</title><rect x="684.6" y="867.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="687.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.18%)</title><rect x="684.7" y="851.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="687.7" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.18%)</title><rect x="684.7" y="835.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="687.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.18%)</title><rect x="684.7" y="819.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="687.7" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (12 samples, 0.06%)</title><rect x="687.3" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (12 samples, 0.06%)</title><rect x="687.3" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (12 samples, 0.06%)</title><rect x="687.3" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (12 samples, 0.06%)</title><rect x="687.3" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (12 samples, 0.06%)</title><rect x="687.3" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (12 samples, 0.06%)</title><rect x="687.3" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (11 samples, 0.06%)</title><rect x="687.3" y="1187.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (7 samples, 0.04%)</title><rect x="687.6" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (7 samples, 0.04%)</title><rect x="687.6" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onDownstreamFinish (10 samples, 0.05%)</title><rect x="688.3" y="1283.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.3" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (6 samples, 0.03%)</title><rect x="688.4" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.4" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (6 samples, 0.03%)</title><rect x="688.4" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.4" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (6 samples, 0.03%)</title><rect x="688.4" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (6 samples, 0.03%)</title><rect x="688.4" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (6 samples, 0.03%)</title><rect x="688.4" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (6 samples, 0.03%)</title><rect x="688.4" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (6 samples, 0.03%)</title><rect x="688.4" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.03%)</title><rect x="688.4" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.4" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (6 samples, 0.03%)</title><rect x="688.4" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.4" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (6 samples, 0.03%)</title><rect x="688.4" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (6 samples, 0.03%)</title><rect x="688.4" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.03%)</title><rect x="688.4" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.03%)</title><rect x="688.4" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.03%)</title><rect x="688.4" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.03%)</title><rect x="688.4" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="688.4" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.03%)</title><rect x="688.4" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.03%)</title><rect x="688.4" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.03%)</title><rect x="688.4" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.03%)</title><rect x="688.4" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.03%)</title><rect x="688.4" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.03%)</title><rect x="688.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.03%)</title><rect x="688.4" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="688.4" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="688.4" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.4" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFailure (9 samples, 0.05%)</title><rect x="688.9" y="1283.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.9" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (8 samples, 0.04%)</title><rect x="689.0" y="1267.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (8 samples, 0.04%)</title><rect x="689.0" y="1251.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (8 samples, 0.04%)</title><rect x="689.0" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (8 samples, 0.04%)</title><rect x="689.0" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (8 samples, 0.04%)</title><rect x="689.0" y="1203.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (8 samples, 0.04%)</title><rect x="689.0" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (8 samples, 0.04%)</title><rect x="689.0" y="1171.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (8 samples, 0.04%)</title><rect x="689.0" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (8 samples, 0.04%)</title><rect x="689.0" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (8 samples, 0.04%)</title><rect x="689.0" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (8 samples, 0.04%)</title><rect x="689.0" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (8 samples, 0.04%)</title><rect x="689.0" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (8 samples, 0.04%)</title><rect x="689.0" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (7 samples, 0.04%)</title><rect x="689.0" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (7 samples, 0.04%)</title><rect x="689.0" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="689.0" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.04%)</title><rect x="689.0" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.04%)</title><rect x="689.0" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.04%)</title><rect x="689.0" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.04%)</title><rect x="689.0" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.04%)</title><rect x="689.0" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.04%)</title><rect x="689.0" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.04%)</title><rect x="689.0" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="689.0" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="689.0" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.0" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.04%)</title><rect x="689.0" y="867.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="692.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="689.1" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="689.1" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="692.1" y="846.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="689.1" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="692.1" y="830.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="689.1" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="692.1" y="814.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="689.1" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="692.1" y="798.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="689.1" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.1" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="689.1" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.1" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="689.1" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.1" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (60 samples, 0.31%)</title><rect x="689.4" y="1283.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.4" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (58 samples, 0.30%)</title><rect x="689.6" y="1267.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.6" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (58 samples, 0.30%)</title><rect x="689.6" y="1251.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.6" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (58 samples, 0.30%)</title><rect x="689.6" y="1235.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.6" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (56 samples, 0.29%)</title><rect x="689.7" y="1219.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (56 samples, 0.29%)</title><rect x="689.7" y="1203.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (56 samples, 0.29%)</title><rect x="689.7" y="1187.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (56 samples, 0.29%)</title><rect x="689.7" y="1171.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (56 samples, 0.29%)</title><rect x="689.7" y="1155.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (56 samples, 0.29%)</title><rect x="689.7" y="1139.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (56 samples, 0.29%)</title><rect x="689.7" y="1123.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (56 samples, 0.29%)</title><rect x="689.7" y="1107.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (56 samples, 0.29%)</title><rect x="689.7" y="1091.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (55 samples, 0.28%)</title><rect x="689.8" y="1075.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (51 samples, 0.26%)</title><rect x="689.9" y="1059.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (51 samples, 0.26%)</title><rect x="689.9" y="1043.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (49 samples, 0.25%)</title><rect x="689.9" y="1027.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.9" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (48 samples, 0.25%)</title><rect x="689.9" y="1011.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$530/1963980755.apply (45 samples, 0.23%)</title><rect x="689.9" y="995.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (45 samples, 0.23%)</title><rect x="689.9" y="979.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.9" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (45 samples, 0.23%)</title><rect x="689.9" y="963.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.9" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (44 samples, 0.22%)</title><rect x="690.0" y="947.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (44 samples, 0.22%)</title><rect x="690.0" y="931.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.0" y="942.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (44 samples, 0.22%)</title><rect x="690.0" y="915.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.0" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (44 samples, 0.22%)</title><rect x="690.0" y="899.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.0" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (44 samples, 0.22%)</title><rect x="690.0" y="883.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.0" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (44 samples, 0.22%)</title><rect x="690.0" y="867.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.0" y="878.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (43 samples, 0.22%)</title><rect x="690.0" y="851.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.0" y="862.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (43 samples, 0.22%)</title><rect x="690.0" y="835.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.0" y="846.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (43 samples, 0.22%)</title><rect x="690.0" y="819.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="830.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (43 samples, 0.22%)</title><rect x="690.0" y="803.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.0" y="814.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (43 samples, 0.22%)</title><rect x="690.0" y="787.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="798.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (43 samples, 0.22%)</title><rect x="690.0" y="771.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.0" y="782.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (43 samples, 0.22%)</title><rect x="690.0" y="755.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.0" y="766.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (43 samples, 0.22%)</title><rect x="690.0" y="739.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.0" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (41 samples, 0.21%)</title><rect x="690.0" y="723.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.0" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (40 samples, 0.20%)</title><rect x="690.0" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.0" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (40 samples, 0.20%)</title><rect x="690.0" y="691.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.0" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (40 samples, 0.20%)</title><rect x="690.0" y="675.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.0" y="686.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (40 samples, 0.20%)</title><rect x="690.0" y="659.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (40 samples, 0.20%)</title><rect x="690.0" y="643.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (40 samples, 0.20%)</title><rect x="690.0" y="627.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (40 samples, 0.20%)</title><rect x="690.0" y="611.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (40 samples, 0.20%)</title><rect x="690.0" y="595.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.20%)</title><rect x="690.0" y="579.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (40 samples, 0.20%)</title><rect x="690.0" y="563.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.0" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.18%)</title><rect x="690.3" y="547.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="693.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.16%)</title><rect x="690.5" y="531.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.16%)</title><rect x="690.5" y="515.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="693.5" y="526.0"></text>
</g>
<g>
<title>sys_futex (30 samples, 0.15%)</title><rect x="690.6" y="499.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.6" y="510.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.15%)</title><rect x="690.6" y="483.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.6" y="494.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.15%)</title><rect x="690.6" y="467.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="693.6" y="478.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.13%)</title><rect x="690.8" y="451.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.8" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.13%)</title><rect x="690.8" y="435.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.13%)</title><rect x="690.8" y="419.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="693.8" y="430.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (9 samples, 0.05%)</title><rect x="693.1" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (9 samples, 0.05%)</title><rect x="693.1" y="1267.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (9 samples, 0.05%)</title><rect x="693.1" y="1251.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (8 samples, 0.04%)</title><rect x="693.1" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (8 samples, 0.04%)</title><rect x="693.1" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (8 samples, 0.04%)</title><rect x="693.1" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (6 samples, 0.03%)</title><rect x="693.2" y="1187.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (6 samples, 0.03%)</title><rect x="693.2" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onDownstreamFinish (5 samples, 0.03%)</title><rect x="694.0" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (5 samples, 0.03%)</title><rect x="694.0" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.03%)</title><rect x="694.0" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onDownstreamFinish (5 samples, 0.03%)</title><rect x="694.0" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (5 samples, 0.03%)</title><rect x="694.0" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.03%)</title><rect x="694.0" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (9 samples, 0.05%)</title><rect x="694.5" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.5" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (6 samples, 0.03%)</title><rect x="694.7" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (6 samples, 0.03%)</title><rect x="694.7" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (6 samples, 0.03%)</title><rect x="694.7" y="1235.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.03%)</title><rect x="694.8" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (19 samples, 0.10%)</title><rect x="695.3" y="1283.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (12 samples, 0.06%)</title><rect x="695.3" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.06%)</title><rect x="695.3" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (12 samples, 0.06%)</title><rect x="695.3" y="1235.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (12 samples, 0.06%)</title><rect x="695.3" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.06%)</title><rect x="695.3" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (11 samples, 0.06%)</title><rect x="695.3" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (11 samples, 0.06%)</title><rect x="695.3" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (11 samples, 0.06%)</title><rect x="695.3" y="1155.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (11 samples, 0.06%)</title><rect x="695.3" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (11 samples, 0.06%)</title><rect x="695.3" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (11 samples, 0.06%)</title><rect x="695.3" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (11 samples, 0.06%)</title><rect x="695.3" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (11 samples, 0.06%)</title><rect x="695.3" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (11 samples, 0.06%)</title><rect x="695.3" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (11 samples, 0.06%)</title><rect x="695.3" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (11 samples, 0.06%)</title><rect x="695.3" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (11 samples, 0.06%)</title><rect x="695.3" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="695.3" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="695.3" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.3" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.05%)</title><rect x="695.4" y="963.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="698.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="695.4" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="695.4" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="698.4" y="942.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.05%)</title><rect x="695.4" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.4" y="926.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.05%)</title><rect x="695.4" y="899.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="695.4" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.05%)</title><rect x="695.4" y="867.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.05%)</title><rect x="695.4" y="851.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="695.4" y="835.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="698.4" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (89 samples, 0.46%)</title><rect x="696.5" y="1283.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (18 samples, 0.09%)</title><rect x="696.5" y="1267.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (18 samples, 0.09%)</title><rect x="696.5" y="1251.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (18 samples, 0.09%)</title><rect x="696.5" y="1235.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (18 samples, 0.09%)</title><rect x="696.5" y="1219.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (18 samples, 0.09%)</title><rect x="696.5" y="1203.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (18 samples, 0.09%)</title><rect x="696.5" y="1187.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (18 samples, 0.09%)</title><rect x="696.5" y="1171.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.5" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (18 samples, 0.09%)</title><rect x="696.5" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (18 samples, 0.09%)</title><rect x="696.5" y="1139.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (18 samples, 0.09%)</title><rect x="696.5" y="1123.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (18 samples, 0.09%)</title><rect x="696.5" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (18 samples, 0.09%)</title><rect x="696.5" y="1091.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (18 samples, 0.09%)</title><rect x="696.5" y="1075.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (18 samples, 0.09%)</title><rect x="696.5" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (18 samples, 0.09%)</title><rect x="696.5" y="1043.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (18 samples, 0.09%)</title><rect x="696.5" y="1027.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (18 samples, 0.09%)</title><rect x="696.5" y="1011.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.09%)</title><rect x="696.5" y="995.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.09%)</title><rect x="696.5" y="979.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.08%)</title><rect x="696.6" y="963.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="699.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="696.7" y="947.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.7" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="696.7" y="931.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="699.7" y="942.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.08%)</title><rect x="696.7" y="915.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="699.7" y="926.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.08%)</title><rect x="696.7" y="899.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="699.7" y="910.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.08%)</title><rect x="696.7" y="883.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.7" y="894.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.08%)</title><rect x="696.7" y="867.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.7" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.08%)</title><rect x="696.7" y="851.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="699.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.08%)</title><rect x="696.7" y="835.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="699.7" y="846.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (63 samples, 0.32%)</title><rect x="697.7" y="1267.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.7" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (62 samples, 0.32%)</title><rect x="697.7" y="1251.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (62 samples, 0.32%)</title><rect x="697.7" y="1235.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.7" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (16 samples, 0.08%)</title><rect x="697.7" y="1219.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (16 samples, 0.08%)</title><rect x="697.7" y="1203.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (16 samples, 0.08%)</title><rect x="697.7" y="1187.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.7" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (16 samples, 0.08%)</title><rect x="697.7" y="1171.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.04%)</title><rect x="698.1" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (6 samples, 0.03%)</title><rect x="698.1" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.1" y="1150.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (8 samples, 0.04%)</title><rect x="698.7" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (8 samples, 0.04%)</title><rect x="698.7" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (34 samples, 0.17%)</title><rect x="699.2" y="1219.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.2" y="1230.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (30 samples, 0.15%)</title><rect x="699.2" y="1203.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.2" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (30 samples, 0.15%)</title><rect x="699.2" y="1187.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.2" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (30 samples, 0.15%)</title><rect x="699.2" y="1171.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (24 samples, 0.12%)</title><rect x="699.5" y="1155.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.5" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (23 samples, 0.12%)</title><rect x="699.6" y="1139.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.6" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (21 samples, 0.11%)</title><rect x="699.7" y="1123.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.7" y="1134.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (21 samples, 0.11%)</title><rect x="699.7" y="1107.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.7" y="1118.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (21 samples, 0.11%)</title><rect x="699.7" y="1091.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.7" y="1102.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (20 samples, 0.10%)</title><rect x="699.8" y="1075.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (19 samples, 0.10%)</title><rect x="699.8" y="1059.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (19 samples, 0.10%)</title><rect x="699.8" y="1043.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (19 samples, 0.10%)</title><rect x="699.8" y="1027.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (19 samples, 0.10%)</title><rect x="699.8" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (18 samples, 0.09%)</title><rect x="699.8" y="995.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.8" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (18 samples, 0.09%)</title><rect x="699.8" y="979.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.8" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (17 samples, 0.09%)</title><rect x="699.8" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.8" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (17 samples, 0.09%)</title><rect x="699.8" y="947.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.8" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (14 samples, 0.07%)</title><rect x="699.8" y="931.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.07%)</title><rect x="699.8" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.07%)</title><rect x="699.8" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.8" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.07%)</title><rect x="699.8" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.8" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.07%)</title><rect x="699.8" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.07%)</title><rect x="699.8" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.07%)</title><rect x="699.8" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.07%)</title><rect x="699.8" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.07%)</title><rect x="699.8" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.07%)</title><rect x="699.8" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.07%)</title><rect x="699.8" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.8" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.06%)</title><rect x="699.8" y="755.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="702.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="699.8" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="699.8" y="723.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.8" y="734.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.06%)</title><rect x="699.8" y="707.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.8" y="718.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.06%)</title><rect x="699.8" y="691.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.06%)</title><rect x="699.8" y="675.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.06%)</title><rect x="699.8" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.06%)</title><rect x="699.8" y="643.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.06%)</title><rect x="699.8" y="627.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (6 samples, 0.03%)</title><rect x="701.5" y="1267.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (5 samples, 0.03%)</title><rect x="702.1" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (5 samples, 0.03%)</title><rect x="702.1" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.03%)</title><rect x="702.1" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (5 samples, 0.03%)</title><rect x="702.1" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (5 samples, 0.03%)</title><rect x="702.1" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.03%)</title><rect x="702.1" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (5 samples, 0.03%)</title><rect x="702.1" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (14 samples, 0.07%)</title><rect x="702.5" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.5" y="1294.0"></text>
</g>
<g>
<title>itable stub (40 samples, 0.20%)</title><rect x="703.3" y="1283.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="706.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (279 samples, 1.43%)</title><rect x="705.7" y="1299.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (6 samples, 0.03%)</title><rect x="708.0" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (6 samples, 0.03%)</title><rect x="708.0" y="1267.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (6 samples, 0.03%)</title><rect x="708.0" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (25 samples, 0.13%)</title><rect x="708.5" y="1283.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (24 samples, 0.12%)</title><rect x="708.6" y="1267.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (24 samples, 0.12%)</title><rect x="708.6" y="1251.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (24 samples, 0.12%)</title><rect x="708.6" y="1235.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (24 samples, 0.12%)</title><rect x="708.6" y="1219.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (24 samples, 0.12%)</title><rect x="708.6" y="1203.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (24 samples, 0.12%)</title><rect x="708.6" y="1187.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (24 samples, 0.12%)</title><rect x="708.6" y="1171.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (24 samples, 0.12%)</title><rect x="708.6" y="1155.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (22 samples, 0.11%)</title><rect x="708.6" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (22 samples, 0.11%)</title><rect x="708.6" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (22 samples, 0.11%)</title><rect x="708.6" y="1107.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (22 samples, 0.11%)</title><rect x="708.6" y="1091.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (22 samples, 0.11%)</title><rect x="708.6" y="1075.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (22 samples, 0.11%)</title><rect x="708.6" y="1059.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (22 samples, 0.11%)</title><rect x="708.6" y="1043.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (22 samples, 0.11%)</title><rect x="708.6" y="1027.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (22 samples, 0.11%)</title><rect x="708.6" y="1011.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.11%)</title><rect x="708.6" y="995.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.10%)</title><rect x="708.7" y="979.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.7" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.09%)</title><rect x="708.9" y="963.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="711.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="708.9" y="947.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="708.9" y="931.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.9" y="942.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.09%)</title><rect x="708.9" y="915.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.9" y="926.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.08%)</title><rect x="708.9" y="899.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="711.9" y="910.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.08%)</title><rect x="708.9" y="883.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="711.9" y="894.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.08%)</title><rect x="709.0" y="867.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.0" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.08%)</title><rect x="709.0" y="851.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.08%)</title><rect x="709.0" y="835.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.0" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (207 samples, 1.06%)</title><rect x="710.0" y="1283.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (206 samples, 1.05%)</title><rect x="710.0" y="1267.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (206 samples, 1.05%)</title><rect x="710.0" y="1251.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (206 samples, 1.05%)</title><rect x="710.0" y="1235.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (206 samples, 1.05%)</title><rect x="710.0" y="1219.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (205 samples, 1.05%)</title><rect x="710.1" y="1203.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (205 samples, 1.05%)</title><rect x="710.1" y="1187.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (205 samples, 1.05%)</title><rect x="710.1" y="1171.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (204 samples, 1.04%)</title><rect x="710.1" y="1155.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (200 samples, 1.02%)</title><rect x="710.1" y="1139.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (197 samples, 1.01%)</title><rect x="710.3" y="1123.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (197 samples, 1.01%)</title><rect x="710.3" y="1107.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (197 samples, 1.01%)</title><rect x="710.3" y="1091.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (197 samples, 1.01%)</title><rect x="710.3" y="1075.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (197 samples, 1.01%)</title><rect x="710.3" y="1059.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (197 samples, 1.01%)</title><rect x="710.3" y="1043.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (196 samples, 1.00%)</title><rect x="710.3" y="1027.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (196 samples, 1.00%)</title><rect x="710.3" y="1011.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (195 samples, 1.00%)</title><rect x="710.3" y="995.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (184 samples, 0.94%)</title><rect x="711.0" y="979.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.10%)</title><rect x="711.0" y="963.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="714.0" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (164 samples, 0.84%)</title><rect x="712.2" y="963.0" width="9.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="715.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (150 samples, 0.77%)</title><rect x="713.0" y="947.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (150 samples, 0.77%)</title><rect x="713.0" y="931.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.0" y="942.0"></text>
</g>
<g>
<title>sys_futex (146 samples, 0.75%)</title><rect x="713.3" y="915.0" width="8.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="716.3" y="926.0"></text>
</g>
<g>
<title>do_futex (146 samples, 0.75%)</title><rect x="713.3" y="899.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (144 samples, 0.74%)</title><rect x="713.4" y="883.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (137 samples, 0.70%)</title><rect x="713.8" y="867.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (136 samples, 0.70%)</title><rect x="713.9" y="851.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (136 samples, 0.70%)</title><rect x="713.9" y="835.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.9" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (2,602 samples, 13.30%)</title><rect x="722.6" y="1299.0" width="157.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="1310.0">akka/stream/impl/fus..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (123 samples, 0.63%)</title><rect x="723.0" y="1283.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (120 samples, 0.61%)</title><rect x="723.2" y="1267.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (120 samples, 0.61%)</title><rect x="723.2" y="1251.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (120 samples, 0.61%)</title><rect x="723.2" y="1235.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (119 samples, 0.61%)</title><rect x="723.2" y="1219.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (119 samples, 0.61%)</title><rect x="723.2" y="1203.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (119 samples, 0.61%)</title><rect x="723.2" y="1187.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (118 samples, 0.60%)</title><rect x="723.2" y="1171.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1338/141017111.apply (118 samples, 0.60%)</title><rect x="723.2" y="1155.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (118 samples, 0.60%)</title><rect x="723.2" y="1139.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1337/182655183.apply (117 samples, 0.60%)</title><rect x="723.3" y="1123.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (117 samples, 0.60%)</title><rect x="723.3" y="1107.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (117 samples, 0.60%)</title><rect x="723.3" y="1091.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (117 samples, 0.60%)</title><rect x="723.3" y="1075.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (117 samples, 0.60%)</title><rect x="723.3" y="1059.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (117 samples, 0.60%)</title><rect x="723.3" y="1043.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (117 samples, 0.60%)</title><rect x="723.3" y="1027.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (110 samples, 0.56%)</title><rect x="723.3" y="1011.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (110 samples, 0.56%)</title><rect x="723.3" y="995.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (110 samples, 0.56%)</title><rect x="723.3" y="979.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (92 samples, 0.47%)</title><rect x="723.3" y="963.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (31 samples, 0.16%)</title><rect x="723.5" y="947.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (25 samples, 0.13%)</title><rect x="723.7" y="931.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.7" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (24 samples, 0.12%)</title><rect x="723.7" y="915.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1400671358.apply (19 samples, 0.10%)</title><rect x="723.9" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (19 samples, 0.10%)</title><rect x="723.9" y="883.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (16 samples, 0.08%)</title><rect x="724.1" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.1" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (16 samples, 0.08%)</title><rect x="724.1" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.1" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (14 samples, 0.07%)</title><rect x="724.1" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.1" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (14 samples, 0.07%)</title><rect x="724.1" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.1" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$1349/292338086.apply (14 samples, 0.07%)</title><rect x="724.1" y="803.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.1" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (14 samples, 0.07%)</title><rect x="724.1" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (14 samples, 0.07%)</title><rect x="724.1" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (14 samples, 0.07%)</title><rect x="724.1" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (14 samples, 0.07%)</title><rect x="724.1" y="739.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (13 samples, 0.07%)</title><rect x="724.1" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.1" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (13 samples, 0.07%)</title><rect x="724.1" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.1" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (13 samples, 0.07%)</title><rect x="724.1" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.1" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (12 samples, 0.06%)</title><rect x="724.2" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.2" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (12 samples, 0.06%)</title><rect x="724.2" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.2" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (12 samples, 0.06%)</title><rect x="724.2" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.2" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (6 samples, 0.03%)</title><rect x="724.3" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.3" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (6 samples, 0.03%)</title><rect x="724.3" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (6 samples, 0.03%)</title><rect x="724.3" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.3" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (56 samples, 0.29%)</title><rect x="725.3" y="947.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (49 samples, 0.25%)</title><rect x="725.3" y="931.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (6 samples, 0.03%)</title><rect x="725.3" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.asciiString (6 samples, 0.03%)</title><rect x="725.3" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1400671358.apply (43 samples, 0.22%)</title><rect x="725.7" y="915.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (43 samples, 0.22%)</title><rect x="725.7" y="899.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (16 samples, 0.08%)</title><rect x="725.7" y="883.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.7" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (16 samples, 0.08%)</title><rect x="725.7" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.7" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (16 samples, 0.08%)</title><rect x="725.7" y="851.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.7" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (16 samples, 0.08%)</title><rect x="725.7" y="835.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.7" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1043/1048944803.apply (16 samples, 0.08%)</title><rect x="725.7" y="819.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.7" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (16 samples, 0.08%)</title><rect x="725.7" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.7" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (16 samples, 0.08%)</title><rect x="725.7" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.7" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (16 samples, 0.08%)</title><rect x="725.7" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.7" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (16 samples, 0.08%)</title><rect x="725.7" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.7" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (12 samples, 0.06%)</title><rect x="726.0" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (12 samples, 0.06%)</title><rect x="726.0" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.0" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (12 samples, 0.06%)</title><rect x="726.0" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.0" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$22 (6 samples, 0.03%)</title><rect x="726.0" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.0" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.parameter (5 samples, 0.03%)</title><rect x="726.0" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.0" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.parameter$ (5 samples, 0.03%)</title><rect x="726.0" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.0" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (18 samples, 0.09%)</title><rect x="726.7" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.7" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (18 samples, 0.09%)</title><rect x="726.7" y="867.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.7" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (18 samples, 0.09%)</title><rect x="726.7" y="851.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.7" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (18 samples, 0.09%)</title><rect x="726.7" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.7" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$1349/292338086.apply (18 samples, 0.09%)</title><rect x="726.7" y="819.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.7" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (18 samples, 0.09%)</title><rect x="726.7" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.7" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (18 samples, 0.09%)</title><rect x="726.7" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.7" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (18 samples, 0.09%)</title><rect x="726.7" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.7" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (18 samples, 0.09%)</title><rect x="726.7" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.7" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (16 samples, 0.08%)</title><rect x="726.8" y="739.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (16 samples, 0.08%)</title><rect x="726.8" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (16 samples, 0.08%)</title><rect x="726.8" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (15 samples, 0.08%)</title><rect x="726.9" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.9" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (15 samples, 0.08%)</title><rect x="726.9" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.9" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (15 samples, 0.08%)</title><rect x="726.9" y="659.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.9" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (5 samples, 0.03%)</title><rect x="727.1" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.1" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (5 samples, 0.03%)</title><rect x="727.1" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.1" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (9 samples, 0.05%)</title><rect x="727.8" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.8" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (7 samples, 0.04%)</title><rect x="727.8" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.8" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (7 samples, 0.04%)</title><rect x="727.8" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.8" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (7 samples, 0.04%)</title><rect x="727.8" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$1348/29403518.apply (7 samples, 0.04%)</title><rect x="727.8" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (7 samples, 0.04%)</title><rect x="727.8" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (7 samples, 0.04%)</title><rect x="727.8" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (7 samples, 0.04%)</title><rect x="727.8" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (7 samples, 0.04%)</title><rect x="727.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.8" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (7 samples, 0.04%)</title><rect x="727.8" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (7 samples, 0.04%)</title><rect x="727.8" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (7 samples, 0.04%)</title><rect x="727.8" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (7 samples, 0.04%)</title><rect x="727.8" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (7 samples, 0.04%)</title><rect x="727.8" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (7 samples, 0.04%)</title><rect x="727.8" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product (6 samples, 0.03%)</title><rect x="727.9" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.9" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$ (6 samples, 0.03%)</title><rect x="727.9" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.9" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product (6 samples, 0.03%)</title><rect x="727.9" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.9" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (13 samples, 0.07%)</title><rect x="729.0" y="963.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.0" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (258 samples, 1.32%)</title><rect x="730.4" y="1283.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (8 samples, 0.04%)</title><rect x="730.4" y="1267.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (8 samples, 0.04%)</title><rect x="730.4" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (8 samples, 0.04%)</title><rect x="730.4" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (8 samples, 0.04%)</title><rect x="730.4" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (8 samples, 0.04%)</title><rect x="730.4" y="1203.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (239 samples, 1.22%)</title><rect x="730.9" y="1267.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (231 samples, 1.18%)</title><rect x="731.1" y="1251.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (228 samples, 1.17%)</title><rect x="731.1" y="1235.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (228 samples, 1.17%)</title><rect x="731.1" y="1219.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (228 samples, 1.17%)</title><rect x="731.1" y="1203.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1256/296096008.apply (188 samples, 0.96%)</title><rect x="731.3" y="1187.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (187 samples, 0.96%)</title><rect x="731.4" y="1171.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (16 samples, 0.08%)</title><rect x="731.4" y="1155.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (15 samples, 0.08%)</title><rect x="731.4" y="1139.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (15 samples, 0.08%)</title><rect x="731.4" y="1123.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (15 samples, 0.08%)</title><rect x="731.4" y="1107.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (15 samples, 0.08%)</title><rect x="731.4" y="1091.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (8 samples, 0.04%)</title><rect x="731.5" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (8 samples, 0.04%)</title><rect x="731.5" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (8 samples, 0.04%)</title><rect x="731.5" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (8 samples, 0.04%)</title><rect x="731.5" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (171 samples, 0.87%)</title><rect x="732.3" y="1155.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (171 samples, 0.87%)</title><rect x="732.3" y="1139.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (171 samples, 0.87%)</title><rect x="732.3" y="1123.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (170 samples, 0.87%)</title><rect x="732.3" y="1107.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (170 samples, 0.87%)</title><rect x="732.3" y="1091.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (125 samples, 0.64%)</title><rect x="732.4" y="1075.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.4" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (125 samples, 0.64%)</title><rect x="732.4" y="1059.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.4" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (123 samples, 0.63%)</title><rect x="732.5" y="1043.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (123 samples, 0.63%)</title><rect x="732.5" y="1027.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (5 samples, 0.03%)</title><rect x="732.7" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.7" y="1022.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (5 samples, 0.03%)</title><rect x="732.7" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (62 samples, 0.32%)</title><rect x="733.0" y="1011.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (50 samples, 0.26%)</title><rect x="733.4" y="995.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (49 samples, 0.25%)</title><rect x="733.4" y="979.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge.createLogic (5 samples, 0.03%)</title><rect x="733.6" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.&lt;init&gt; (5 samples, 0.03%)</title><rect x="733.6" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$.createLogic (6 samples, 0.03%)</title><rect x="733.9" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.9" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$$anon$1.&lt;init&gt; (5 samples, 0.03%)</title><rect x="734.0" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (5 samples, 0.03%)</title><rect x="734.3" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.3" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map.createLogic (6 samples, 0.03%)</title><rect x="735.0" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.&lt;init&gt; (6 samples, 0.03%)</title><rect x="735.0" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (6 samples, 0.03%)</title><rect x="735.0" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.0" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError.createLogic (5 samples, 0.03%)</title><rect x="735.4" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.createLogic (5 samples, 0.03%)</title><rect x="735.7" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (5 samples, 0.03%)</title><rect x="736.1" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.1" y="974.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="736.5" y="995.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="739.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (23 samples, 0.12%)</title><rect x="736.9" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (14 samples, 0.07%)</title><rect x="737.5" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (14 samples, 0.07%)</title><rect x="737.5" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.&lt;init&gt; (6 samples, 0.03%)</title><rect x="737.6" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.6" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="738.0" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (9 samples, 0.05%)</title><rect x="738.4" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (7 samples, 0.04%)</title><rect x="738.4" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (5 samples, 0.03%)</title><rect x="738.5" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (9 samples, 0.05%)</title><rect x="739.0" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (7 samples, 0.04%)</title><rect x="739.1" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.1" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (6 samples, 0.03%)</title><rect x="739.1" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (9 samples, 0.05%)</title><rect x="740.0" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (7 samples, 0.04%)</title><rect x="740.1" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (22 samples, 0.11%)</title><rect x="740.5" y="1075.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (22 samples, 0.11%)</title><rect x="740.5" y="1059.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (14 samples, 0.07%)</title><rect x="740.5" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (14 samples, 0.07%)</title><rect x="740.5" y="1027.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (12 samples, 0.06%)</title><rect x="740.6" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.6" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (9 samples, 0.05%)</title><rect x="740.6" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.03%)</title><rect x="740.6" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (5 samples, 0.03%)</title><rect x="740.6" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.6" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (8 samples, 0.04%)</title><rect x="741.3" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (7 samples, 0.04%)</title><rect x="741.3" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (10 samples, 0.05%)</title><rect x="742.7" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.7" y="1198.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (7 samples, 0.04%)</title><rect x="742.7" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.7" y="1182.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (6 samples, 0.03%)</title><rect x="742.8" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.09%)</title><rect x="743.8" y="1187.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.08%)</title><rect x="743.9" y="1171.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (10 samples, 0.05%)</title><rect x="745.3" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (9 samples, 0.05%)</title><rect x="745.4" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (9 samples, 0.05%)</title><rect x="745.4" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (9 samples, 0.05%)</title><rect x="745.4" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (6 samples, 0.03%)</title><rect x="745.6" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (187 samples, 0.96%)</title><rect x="746.0" y="1283.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (184 samples, 0.94%)</title><rect x="746.2" y="1267.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (184 samples, 0.94%)</title><rect x="746.2" y="1251.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (184 samples, 0.94%)</title><rect x="746.2" y="1235.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (182 samples, 0.93%)</title><rect x="746.3" y="1219.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (182 samples, 0.93%)</title><rect x="746.3" y="1203.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (182 samples, 0.93%)</title><rect x="746.3" y="1187.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (182 samples, 0.93%)</title><rect x="746.3" y="1171.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$915/579745826.apply (53 samples, 0.27%)</title><rect x="746.3" y="1155.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (53 samples, 0.27%)</title><rect x="746.3" y="1139.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (53 samples, 0.27%)</title><rect x="746.3" y="1123.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (53 samples, 0.27%)</title><rect x="746.3" y="1107.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (53 samples, 0.27%)</title><rect x="746.3" y="1091.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (53 samples, 0.27%)</title><rect x="746.3" y="1075.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (48 samples, 0.25%)</title><rect x="746.3" y="1059.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (48 samples, 0.25%)</title><rect x="746.3" y="1043.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (48 samples, 0.25%)</title><rect x="746.3" y="1027.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (45 samples, 0.23%)</title><rect x="746.4" y="1011.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (42 samples, 0.21%)</title><rect x="746.5" y="995.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (37 samples, 0.19%)</title><rect x="746.6" y="979.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1400671358.apply (29 samples, 0.15%)</title><rect x="746.8" y="963.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (29 samples, 0.15%)</title><rect x="746.8" y="947.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (8 samples, 0.04%)</title><rect x="746.8" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.8" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (8 samples, 0.04%)</title><rect x="746.8" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.8" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (8 samples, 0.04%)</title><rect x="746.8" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.8" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (8 samples, 0.04%)</title><rect x="746.8" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.8" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1043/1048944803.apply (8 samples, 0.04%)</title><rect x="746.8" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (8 samples, 0.04%)</title><rect x="746.8" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.8" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (8 samples, 0.04%)</title><rect x="746.8" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (8 samples, 0.04%)</title><rect x="746.8" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (8 samples, 0.04%)</title><rect x="746.8" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (5 samples, 0.03%)</title><rect x="746.8" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (8 samples, 0.04%)</title><rect x="747.3" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.3" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (8 samples, 0.04%)</title><rect x="747.3" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.3" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (7 samples, 0.04%)</title><rect x="747.3" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.3" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (7 samples, 0.04%)</title><rect x="747.3" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31$$Lambda$446/1711393939.apply (6 samples, 0.03%)</title><rect x="747.3" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.$anonfun$apply$31 (6 samples, 0.03%)</title><rect x="747.3" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.host (6 samples, 0.03%)</title><rect x="747.3" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host$ (6 samples, 0.03%)</title><rect x="747.3" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.3" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host (6 samples, 0.03%)</title><rect x="747.3" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort$minuspushed (6 samples, 0.03%)</title><rect x="747.3" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.3" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (6 samples, 0.03%)</title><rect x="747.3" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (5 samples, 0.03%)</title><rect x="747.3" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (12 samples, 0.06%)</title><rect x="747.8" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.8" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (11 samples, 0.06%)</title><rect x="747.9" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.9" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (10 samples, 0.05%)</title><rect x="747.9" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.9" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (10 samples, 0.05%)</title><rect x="747.9" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$930/1161002969.apply (10 samples, 0.05%)</title><rect x="747.9" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (10 samples, 0.05%)</title><rect x="747.9" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (10 samples, 0.05%)</title><rect x="747.9" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (10 samples, 0.05%)</title><rect x="747.9" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (10 samples, 0.05%)</title><rect x="747.9" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (7 samples, 0.04%)</title><rect x="748.1" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (7 samples, 0.04%)</title><rect x="748.1" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (7 samples, 0.04%)</title><rect x="748.1" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.1" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (5 samples, 0.03%)</title><rect x="748.2" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (5 samples, 0.03%)</title><rect x="748.2" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.2" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (5 samples, 0.03%)</title><rect x="748.2" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.2" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$932/625539872.apply (121 samples, 0.62%)</title><rect x="749.5" y="1155.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (121 samples, 0.62%)</title><rect x="749.5" y="1139.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$931/260967207.apply (120 samples, 0.61%)</title><rect x="749.5" y="1123.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (120 samples, 0.61%)</title><rect x="749.5" y="1107.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (120 samples, 0.61%)</title><rect x="749.5" y="1091.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (120 samples, 0.61%)</title><rect x="749.5" y="1075.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (120 samples, 0.61%)</title><rect x="749.5" y="1059.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (120 samples, 0.61%)</title><rect x="749.5" y="1043.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (119 samples, 0.61%)</title><rect x="749.5" y="1027.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (56 samples, 0.29%)</title><rect x="749.5" y="1011.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (56 samples, 0.29%)</title><rect x="749.5" y="995.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (56 samples, 0.29%)</title><rect x="749.5" y="979.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (46 samples, 0.24%)</title><rect x="749.6" y="963.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (19 samples, 0.10%)</title><rect x="750.9" y="947.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (5 samples, 0.03%)</title><rect x="751.8" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (8 samples, 0.04%)</title><rect x="752.4" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (61 samples, 0.31%)</title><rect x="753.0" y="1011.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.findUriEnd$1 (6 samples, 0.03%)</title><rect x="753.0" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (52 samples, 0.27%)</title><rect x="753.4" y="995.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (50 samples, 0.26%)</title><rect x="753.5" y="979.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.5" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (50 samples, 0.26%)</title><rect x="753.5" y="963.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.5" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (49 samples, 0.25%)</title><rect x="753.6" y="947.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.6" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (42 samples, 0.21%)</title><rect x="753.6" y="931.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$929/1402053277.apply (38 samples, 0.19%)</title><rect x="753.6" y="915.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (38 samples, 0.19%)</title><rect x="753.6" y="899.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (36 samples, 0.18%)</title><rect x="753.6" y="883.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (35 samples, 0.18%)</title><rect x="753.6" y="867.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.6" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (19 samples, 0.10%)</title><rect x="753.9" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.segment (19 samples, 0.10%)</title><rect x="753.9" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$12 (19 samples, 0.10%)</title><rect x="753.9" y="819.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.pchar (17 samples, 0.09%)</title><rect x="754.0" y="803.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.0" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (7 samples, 0.04%)</title><rect x="754.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (7 samples, 0.04%)</title><rect x="754.0" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (7 samples, 0.04%)</title><rect x="754.0" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="754.1" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.1" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.03%)</title><rect x="754.1" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.1" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.pct$minusencoded (5 samples, 0.03%)</title><rect x="754.4" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.4" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.savePath (11 samples, 0.06%)</title><rect x="755.0" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Path$.apply (10 samples, 0.05%)</title><rect x="755.0" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Path$.build$1 (7 samples, 0.04%)</title><rect x="755.2" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.2" y="830.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.&lt;init&gt; (7 samples, 0.04%)</title><rect x="756.1" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.1" y="942.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="756.8" y="1155.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="759.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (58 samples, 0.30%)</title><rect x="757.3" y="1283.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (56 samples, 0.29%)</title><rect x="757.3" y="1267.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (45 samples, 0.23%)</title><rect x="757.4" y="1251.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (6 samples, 0.03%)</title><rect x="757.4" y="1235.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (6 samples, 0.03%)</title><rect x="757.4" y="1219.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (6 samples, 0.03%)</title><rect x="757.4" y="1203.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (6 samples, 0.03%)</title><rect x="757.4" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (34 samples, 0.17%)</title><rect x="757.8" y="1235.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (28 samples, 0.14%)</title><rect x="758.0" y="1219.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.0" y="1230.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.05%)</title><rect x="758.3" y="1203.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="761.3" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.05%)</title><rect x="758.3" y="1187.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="761.3" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (12 samples, 0.06%)</title><rect x="759.0" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (12 samples, 0.06%)</title><rect x="759.0" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.0" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.05%)</title><rect x="759.1" y="1171.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="762.1" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.05%)</title><rect x="759.1" y="1155.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="762.1" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="759.4" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.4" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="759.4" y="1123.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderStatusLine$1 (5 samples, 0.03%)</title><rect x="760.1" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.1" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="760.4" y="1251.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="763.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$4.onPush (5 samples, 0.03%)</title><rect x="760.8" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (7 samples, 0.04%)</title><rect x="761.3" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (5 samples, 0.03%)</title><rect x="761.7" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (26 samples, 0.13%)</title><rect x="762.3" y="1283.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (16 samples, 0.08%)</title><rect x="762.5" y="1267.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (14 samples, 0.07%)</title><rect x="762.5" y="1251.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (14 samples, 0.07%)</title><rect x="762.5" y="1235.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (13 samples, 0.07%)</title><rect x="762.5" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$938/927400646.apply (12 samples, 0.06%)</title><rect x="762.5" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (12 samples, 0.06%)</title><rect x="762.5" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$Lambda$937/1515074457.apply (10 samples, 0.05%)</title><rect x="762.5" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.$anonfun$new$1 (10 samples, 0.05%)</title><rect x="762.5" y="1155.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.schedule (9 samples, 0.05%)</title><rect x="762.5" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleOnce (9 samples, 0.05%)</title><rect x="762.5" y="1123.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (9 samples, 0.05%)</title><rect x="762.5" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (5 samples, 0.03%)</title><rect x="762.7" y="1091.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$6.onPush (7 samples, 0.04%)</title><rect x="763.9" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (11 samples, 0.06%)</title><rect x="765.1" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (11 samples, 0.06%)</title><rect x="765.1" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (11 samples, 0.06%)</title><rect x="765.1" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (13 samples, 0.07%)</title><rect x="765.7" y="1283.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SupervisedGraphStageLogic.withSupervision (6 samples, 0.03%)</title><rect x="765.7" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/Object.equals (5 samples, 0.03%)</title><rect x="766.2" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPush (9 samples, 0.05%)</title><rect x="766.5" y="1283.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (9 samples, 0.05%)</title><rect x="766.5" y="1267.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (9 samples, 0.05%)</title><rect x="766.5" y="1251.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPush (5 samples, 0.03%)</title><rect x="767.0" y="1283.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (5 samples, 0.03%)</title><rect x="767.0" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (5 samples, 0.03%)</title><rect x="767.0" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (41 samples, 0.21%)</title><rect x="767.3" y="1283.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$488/1858779250.apply (12 samples, 0.06%)</title><rect x="767.6" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (12 samples, 0.06%)</title><rect x="767.6" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (12 samples, 0.06%)</title><rect x="767.6" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (6 samples, 0.03%)</title><rect x="767.9" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri.toEffectiveRequestUri (5 samples, 0.03%)</title><rect x="768.0" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.effectiveRequestUri (5 samples, 0.03%)</title><rect x="768.0" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.collapseDotSegments (5 samples, 0.03%)</title><rect x="768.0" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.hasDotOrDotDotSegment$1 (5 samples, 0.03%)</title><rect x="768.0" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (23 samples, 0.12%)</title><rect x="768.4" y="1267.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (23 samples, 0.12%)</title><rect x="768.4" y="1251.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/TLSProtocol$SendBytes$.apply (6 samples, 0.03%)</title><rect x="768.8" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.8" y="1246.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.05%)</title><rect x="769.3" y="1235.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="772.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (1,656 samples, 8.47%)</title><rect x="769.8" y="1283.0" width="99.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.8" y="1294.0">akka/stream/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$435/1791014677.apply (1,627 samples, 8.32%)</title><rect x="770.1" y="1267.0" width="98.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.1" y="1278.0">akka/http/sc..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (1,625 samples, 8.31%)</title><rect x="770.2" y="1251.0" width="98.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.2" y="1262.0">akka/http/sc..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.&lt;init&gt; (10 samples, 0.05%)</title><rect x="770.2" y="1235.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.&lt;init&gt; (10 samples, 0.05%)</title><rect x="770.2" y="1219.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (1,609 samples, 8.23%)</title><rect x="770.8" y="1235.0" width="97.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.8" y="1246.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,607 samples, 8.22%)</title><rect x="770.9" y="1219.0" width="97.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.9" y="1230.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$944/1305926805.apply (1,584 samples, 8.10%)</title><rect x="771.3" y="1203.0" width="95.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.3" y="1214.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (1,583 samples, 8.09%)</title><rect x="771.4" y="1187.0" width="95.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.4" y="1198.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/1826345190.apply (11 samples, 0.06%)</title><rect x="771.4" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (11 samples, 0.06%)</title><rect x="771.4" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.03%)</title><rect x="771.4" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="771.8" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="771.8" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.get$Lambda (5 samples, 0.03%)</title><rect x="771.8" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.&lt;init&gt; (5 samples, 0.03%)</title><rect x="771.8" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (1,559 samples, 7.97%)</title><rect x="772.1" y="1171.0" width="94.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.1" y="1182.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,559 samples, 7.97%)</title><rect x="772.1" y="1155.0" width="94.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.1" y="1166.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$949/1942090131.apply (1,552 samples, 7.94%)</title><rect x="772.4" y="1139.0" width="93.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.4" y="1150.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (1,552 samples, 7.94%)</title><rect x="772.4" y="1123.0" width="93.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.4" y="1134.0">akka/http/s..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$272/14633842.apply (329 samples, 1.68%)</title><rect x="772.5" y="1107.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (329 samples, 1.68%)</title><rect x="772.5" y="1091.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$272/14633842.apply (242 samples, 1.24%)</title><rect x="772.5" y="1075.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (242 samples, 1.24%)</title><rect x="772.5" y="1059.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (242 samples, 1.24%)</title><rect x="772.5" y="1043.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (242 samples, 1.24%)</title><rect x="772.5" y="1027.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (242 samples, 1.24%)</title><rect x="772.5" y="1011.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$950/1361070518.apply (242 samples, 1.24%)</title><rect x="772.5" y="995.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (241 samples, 1.23%)</title><rect x="772.5" y="979.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.5" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (235 samples, 1.20%)</title><rect x="772.5" y="963.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.5" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (235 samples, 1.20%)</title><rect x="772.5" y="947.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (12 samples, 0.06%)</title><rect x="772.7" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (11 samples, 0.06%)</title><rect x="772.7" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (9 samples, 0.05%)</title><rect x="772.7" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.7" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (11 samples, 0.06%)</title><rect x="773.4" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.4" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (11 samples, 0.06%)</title><rect x="773.4" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.4" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (11 samples, 0.06%)</title><rect x="773.4" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (11 samples, 0.06%)</title><rect x="773.4" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (11 samples, 0.06%)</title><rect x="773.4" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (11 samples, 0.06%)</title><rect x="773.4" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (11 samples, 0.06%)</title><rect x="773.4" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (11 samples, 0.06%)</title><rect x="773.4" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.4" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (11 samples, 0.06%)</title><rect x="773.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.4" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$951/1684615906.apply (11 samples, 0.06%)</title><rect x="773.4" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.4" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (11 samples, 0.06%)</title><rect x="773.4" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.4" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (7 samples, 0.04%)</title><rect x="773.4" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.4" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (7 samples, 0.04%)</title><rect x="773.4" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.4" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$965/1221231465.apply (210 samples, 1.07%)</title><rect x="774.0" y="931.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (210 samples, 1.07%)</title><rect x="774.0" y="915.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (210 samples, 1.07%)</title><rect x="774.0" y="899.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (210 samples, 1.07%)</title><rect x="774.0" y="883.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/123010766.apply (209 samples, 1.07%)</title><rect x="774.0" y="867.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (209 samples, 1.07%)</title><rect x="774.0" y="851.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.apply (175 samples, 0.89%)</title><rect x="774.0" y="835.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (175 samples, 0.89%)</title><rect x="774.0" y="819.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$840/1726396920.apply (174 samples, 0.89%)</title><rect x="774.0" y="803.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (174 samples, 0.89%)</title><rect x="774.0" y="787.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.0" y="798.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$964/2119844116.apply (172 samples, 0.88%)</title><rect x="774.0" y="771.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.0" y="782.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$2 (172 samples, 0.88%)</title><rect x="774.0" y="755.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.0" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.complete (7 samples, 0.04%)</title><rect x="774.3" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.3" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.complete$ (7 samples, 0.04%)</title><rect x="774.3" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.3" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.complete (7 samples, 0.04%)</title><rect x="774.3" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.3" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (146 samples, 0.75%)</title><rect x="774.7" y="739.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.7" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (144 samples, 0.74%)</title><rect x="774.8" y="723.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (144 samples, 0.74%)</title><rect x="774.8" y="707.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (131 samples, 0.67%)</title><rect x="775.1" y="691.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.1" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (129 samples, 0.66%)</title><rect x="775.1" y="675.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.1" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (127 samples, 0.65%)</title><rect x="775.2" y="659.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.2" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (122 samples, 0.62%)</title><rect x="775.4" y="643.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.4" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (114 samples, 0.58%)</title><rect x="775.6" y="627.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.6" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (40 samples, 0.20%)</title><rect x="775.7" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.7" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (40 samples, 0.20%)</title><rect x="775.7" y="595.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.7" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (37 samples, 0.19%)</title><rect x="775.9" y="579.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.9" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (31 samples, 0.16%)</title><rect x="776.0" y="563.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.0" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (30 samples, 0.15%)</title><rect x="776.1" y="547.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.1" y="558.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (29 samples, 0.15%)</title><rect x="776.1" y="531.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.04%)</title><rect x="776.3" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.3" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (10 samples, 0.05%)</title><rect x="777.0" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.0" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (7 samples, 0.04%)</title><rect x="777.2" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (69 samples, 0.35%)</title><rect x="778.3" y="611.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.3" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (67 samples, 0.34%)</title><rect x="778.4" y="595.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (67 samples, 0.34%)</title><rect x="778.4" y="579.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 0.05%)</title><rect x="778.6" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.05%)</title><rect x="778.6" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.03%)</title><rect x="778.8" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.03%)</title><rect x="778.9" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.03%)</title><rect x="779.2" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.03%)</title><rect x="779.2" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.03%)</title><rect x="779.2" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 0.26%)</title><rect x="779.5" y="563.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.26%)</title><rect x="779.5" y="547.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 0.26%)</title><rect x="779.5" y="531.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (47 samples, 0.24%)</title><rect x="779.7" y="515.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 0.24%)</title><rect x="779.7" y="499.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.7" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="779.7" y="483.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="782.7" y="494.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.21%)</title><rect x="780.0" y="483.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="783.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.20%)</title><rect x="780.1" y="467.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.20%)</title><rect x="780.1" y="451.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.1" y="462.0"></text>
</g>
<g>
<title>sys_futex (40 samples, 0.20%)</title><rect x="780.1" y="435.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="446.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.20%)</title><rect x="780.1" y="419.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="783.1" y="430.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 0.19%)</title><rect x="780.1" y="403.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="783.1" y="414.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.18%)</title><rect x="780.3" y="387.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.3" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.18%)</title><rect x="780.3" y="371.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.3" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.18%)</title><rect x="780.3" y="355.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (8 samples, 0.04%)</title><rect x="783.0" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.0" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.extractThrowableAnRearrangeArguments (5 samples, 0.03%)</title><rect x="783.0" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.0" y="686.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.add (10 samples, 0.05%)</title><rect x="783.8" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.8" y="750.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetOps.add$ (10 samples, 0.05%)</title><rect x="783.8" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.8" y="734.0"></text>
</g>
<g>
<title>scala/collection/mutable/SetOps.add (10 samples, 0.05%)</title><rect x="783.8" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.8" y="718.0"></text>
</g>
<g>
<title>scala/collection/convert/JavaCollectionWrappers$JSetWrapper.addOne (6 samples, 0.03%)</title><rect x="783.8" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.8" y="702.0"></text>
</g>
<g>
<title>scala/collection/convert/JavaCollectionWrappers$JSetWrapper.addOne (6 samples, 0.03%)</title><rect x="783.8" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.8" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (5 samples, 0.03%)</title><rect x="783.9" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (5 samples, 0.03%)</title><rect x="783.9" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (5 samples, 0.03%)</title><rect x="783.9" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.9" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (34 samples, 0.17%)</title><rect x="784.6" y="835.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (34 samples, 0.17%)</title><rect x="784.6" y="819.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.6" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$968/1563763398.apply (33 samples, 0.17%)</title><rect x="784.7" y="803.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.7" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (33 samples, 0.17%)</title><rect x="784.7" y="787.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.7" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (27 samples, 0.14%)</title><rect x="784.7" y="771.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.7" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (24 samples, 0.12%)</title><rect x="784.7" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.7" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (24 samples, 0.12%)</title><rect x="784.7" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.7" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (24 samples, 0.12%)</title><rect x="784.7" y="723.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.7" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (24 samples, 0.12%)</title><rect x="784.7" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.7" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (13 samples, 0.07%)</title><rect x="784.8" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (13 samples, 0.07%)</title><rect x="784.8" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="785.0" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.0" y="670.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (8 samples, 0.04%)</title><rect x="785.1" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.1" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (8 samples, 0.04%)</title><rect x="785.1" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.1" y="638.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (8 samples, 0.04%)</title><rect x="785.1" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.1" y="622.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (8 samples, 0.04%)</title><rect x="785.1" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.1" y="606.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (8 samples, 0.04%)</title><rect x="785.1" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (9 samples, 0.05%)</title><rect x="785.6" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (9 samples, 0.05%)</title><rect x="785.6" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (9 samples, 0.05%)</title><rect x="785.6" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$938/927400646.apply (9 samples, 0.05%)</title><rect x="785.6" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.6" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (9 samples, 0.05%)</title><rect x="785.6" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.6" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$990/1452870796.apply (9 samples, 0.05%)</title><rect x="785.6" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.6" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (9 samples, 0.05%)</title><rect x="785.6" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.6" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$989/1882024518.apply (7 samples, 0.04%)</title><rect x="785.6" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.6" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (7 samples, 0.04%)</title><rect x="785.6" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.6" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$978/264431939.apply (7 samples, 0.04%)</title><rect x="785.6" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.6" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (7 samples, 0.04%)</title><rect x="785.6" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.6" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (7 samples, 0.04%)</title><rect x="785.6" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.6" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (5 samples, 0.03%)</title><rect x="785.6" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.6" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (5 samples, 0.03%)</title><rect x="785.6" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.6" y="494.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$967/1909165834.apply (6 samples, 0.03%)</title><rect x="786.3" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.3" y="782.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$3 (6 samples, 0.03%)</title><rect x="786.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.3" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (6 samples, 0.03%)</title><rect x="786.7" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (87 samples, 0.44%)</title><rect x="787.1" y="1075.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (87 samples, 0.44%)</title><rect x="787.1" y="1059.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (87 samples, 0.44%)</title><rect x="787.1" y="1043.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$950/1361070518.apply (87 samples, 0.44%)</title><rect x="787.1" y="1027.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (87 samples, 0.44%)</title><rect x="787.1" y="1011.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (85 samples, 0.43%)</title><rect x="787.1" y="995.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (85 samples, 0.43%)</title><rect x="787.1" y="979.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.1" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (12 samples, 0.06%)</title><rect x="787.1" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.1" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (12 samples, 0.06%)</title><rect x="787.1" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.1" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (7 samples, 0.04%)</title><rect x="787.1" y="931.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.1" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$941/294097288.apply (6 samples, 0.03%)</title><rect x="787.1" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.1" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (6 samples, 0.03%)</title><rect x="787.1" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.1" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.03%)</title><rect x="787.1" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.1" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$953/2064917833.apply (6 samples, 0.03%)</title><rect x="787.1" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.1" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (6 samples, 0.03%)</title><rect x="787.1" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.1" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/1826345190.apply (6 samples, 0.03%)</title><rect x="787.1" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.1" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (6 samples, 0.03%)</title><rect x="787.1" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.1" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.03%)</title><rect x="787.1" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.1" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$956/1878475132.apply (5 samples, 0.03%)</title><rect x="787.1" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="790.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (5 samples, 0.03%)</title><rect x="787.1" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.1" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$262/708926121.apply (5 samples, 0.03%)</title><rect x="787.6" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.6" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (5 samples, 0.03%)</title><rect x="787.6" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.6" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$261/1437129801.apply (5 samples, 0.03%)</title><rect x="787.6" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.6" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$2 (5 samples, 0.03%)</title><rect x="787.6" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (15 samples, 0.08%)</title><rect x="787.9" y="963.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (15 samples, 0.08%)</title><rect x="787.9" y="947.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (13 samples, 0.07%)</title><rect x="788.0" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (13 samples, 0.07%)</title><rect x="788.0" y="915.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (13 samples, 0.07%)</title><rect x="788.0" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (13 samples, 0.07%)</title><rect x="788.0" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (13 samples, 0.07%)</title><rect x="788.0" y="867.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (13 samples, 0.07%)</title><rect x="788.0" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (13 samples, 0.07%)</title><rect x="788.0" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$951/1684615906.apply (13 samples, 0.07%)</title><rect x="788.0" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (13 samples, 0.07%)</title><rect x="788.0" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (12 samples, 0.06%)</title><rect x="788.0" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (12 samples, 0.06%)</title><rect x="788.0" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.0" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (12 samples, 0.06%)</title><rect x="788.0" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.0" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (12 samples, 0.06%)</title><rect x="788.0" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (10 samples, 0.05%)</title><rect x="788.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (10 samples, 0.05%)</title><rect x="788.0" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (10 samples, 0.05%)</title><rect x="788.0" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$951/1684615906.apply (10 samples, 0.05%)</title><rect x="788.0" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (10 samples, 0.05%)</title><rect x="788.0" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ImplicitPathMatcherConstruction$$anon$13.apply (9 samples, 0.05%)</title><rect x="788.0" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.0" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ImplicitPathMatcherConstruction$$anon$13.apply (9 samples, 0.05%)</title><rect x="788.0" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.0" y="638.0"></text>
</g>
<g>
<title>scala/util/matching/Regex.findPrefixOf (9 samples, 0.05%)</title><rect x="788.0" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.0" y="622.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (5 samples, 0.03%)</title><rect x="788.3" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.3" y="606.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="788.3" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.3" y="590.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (5 samples, 0.03%)</title><rect x="788.3" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.3" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$965/1221231465.apply (57 samples, 0.29%)</title><rect x="788.8" y="963.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (57 samples, 0.29%)</title><rect x="788.8" y="947.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (57 samples, 0.29%)</title><rect x="788.8" y="931.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (57 samples, 0.29%)</title><rect x="788.8" y="915.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/123010766.apply (53 samples, 0.27%)</title><rect x="789.0" y="899.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (53 samples, 0.27%)</title><rect x="789.0" y="883.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.apply (17 samples, 0.09%)</title><rect x="789.0" y="867.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (17 samples, 0.09%)</title><rect x="789.0" y="851.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$840/1726396920.apply (16 samples, 0.08%)</title><rect x="789.0" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (16 samples, 0.08%)</title><rect x="789.0" y="819.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.0" y="830.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$1010/1619953813.apply (16 samples, 0.08%)</title><rect x="789.0" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.0" y="814.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$5 (15 samples, 0.08%)</title><rect x="789.1" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.1" y="798.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.indexWhere (13 samples, 0.07%)</title><rect x="789.2" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.2" y="782.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.indexWhere$ (13 samples, 0.07%)</title><rect x="789.2" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.2" y="766.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.indexWhere (13 samples, 0.07%)</title><rect x="789.2" y="739.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.2" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.indexWhere (13 samples, 0.07%)</title><rect x="789.2" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.2" y="734.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.indexWhere$ (13 samples, 0.07%)</title><rect x="789.2" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.2" y="718.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.indexWhere (13 samples, 0.07%)</title><rect x="789.2" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.2" y="702.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$1011/1363075211.apply (7 samples, 0.04%)</title><rect x="789.2" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.2" y="686.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$6$adapted (7 samples, 0.04%)</title><rect x="789.2" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.2" y="670.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$6 (7 samples, 0.04%)</title><rect x="789.2" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.2" y="654.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (7 samples, 0.04%)</title><rect x="789.2" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.2" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (35 samples, 0.18%)</title><rect x="790.0" y="867.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (35 samples, 0.18%)</title><rect x="790.0" y="851.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$968/1563763398.apply (35 samples, 0.18%)</title><rect x="790.0" y="835.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (35 samples, 0.18%)</title><rect x="790.0" y="819.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (35 samples, 0.18%)</title><rect x="790.0" y="803.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (33 samples, 0.17%)</title><rect x="790.0" y="787.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (33 samples, 0.17%)</title><rect x="790.0" y="771.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.0" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (33 samples, 0.17%)</title><rect x="790.0" y="755.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.0" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (33 samples, 0.17%)</title><rect x="790.0" y="739.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (17 samples, 0.09%)</title><rect x="790.0" y="723.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (17 samples, 0.09%)</title><rect x="790.0" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="790.2" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (5 samples, 0.03%)</title><rect x="790.2" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.2" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="790.5" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.5" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (6 samples, 0.03%)</title><rect x="790.7" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.7" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (6 samples, 0.03%)</title><rect x="790.7" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.7" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (6 samples, 0.03%)</title><rect x="790.7" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.7" y="654.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (5 samples, 0.03%)</title><rect x="790.8" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.8" y="638.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (5 samples, 0.03%)</title><rect x="790.8" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.8" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (16 samples, 0.08%)</title><rect x="791.1" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.1" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (16 samples, 0.08%)</title><rect x="791.1" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.1" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (15 samples, 0.08%)</title><rect x="791.1" y="691.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.1" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$938/927400646.apply (15 samples, 0.08%)</title><rect x="791.1" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.1" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (15 samples, 0.08%)</title><rect x="791.1" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.1" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$990/1452870796.apply (13 samples, 0.07%)</title><rect x="791.1" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (13 samples, 0.07%)</title><rect x="791.1" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.1" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$989/1882024518.apply (8 samples, 0.04%)</title><rect x="791.1" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.1" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (8 samples, 0.04%)</title><rect x="791.1" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.1" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$978/264431939.apply (8 samples, 0.04%)</title><rect x="791.1" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.1" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (8 samples, 0.04%)</title><rect x="791.1" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.1" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (8 samples, 0.04%)</title><rect x="791.1" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.1" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (1,216 samples, 6.22%)</title><rect x="792.4" y="1107.0" width="73.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.4" y="1118.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,216 samples, 6.22%)</title><rect x="792.4" y="1091.0" width="73.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.4" y="1102.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (11 samples, 0.06%)</title><rect x="792.5" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (11 samples, 0.06%)</title><rect x="792.5" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (9 samples, 0.05%)</title><rect x="792.5" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$941/294097288.apply (9 samples, 0.05%)</title><rect x="792.5" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (8 samples, 0.04%)</title><rect x="792.5" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (8 samples, 0.04%)</title><rect x="792.5" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$953/2064917833.apply (7 samples, 0.04%)</title><rect x="792.6" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (7 samples, 0.04%)</title><rect x="792.6" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.6" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/1826345190.apply (7 samples, 0.04%)</title><rect x="792.6" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.6" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (7 samples, 0.04%)</title><rect x="792.6" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.6" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (7 samples, 0.04%)</title><rect x="792.6" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.6" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$956/1878475132.apply (7 samples, 0.04%)</title><rect x="792.6" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.6" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (7 samples, 0.04%)</title><rect x="792.6" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.apply (6 samples, 0.03%)</title><rect x="792.6" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.6" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (6 samples, 0.03%)</title><rect x="792.6" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.6" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$840/1726396920.apply (6 samples, 0.03%)</title><rect x="792.6" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (6 samples, 0.03%)</title><rect x="792.6" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.6" y="830.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$839/578839336.apply (5 samples, 0.03%)</title><rect x="792.6" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.6" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$965/1221231465.apply (1,199 samples, 6.13%)</title><rect x="793.4" y="1075.0" width="72.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.4" y="1086.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,199 samples, 6.13%)</title><rect x="793.4" y="1059.0" width="72.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.4" y="1070.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (1,198 samples, 6.13%)</title><rect x="793.5" y="1043.0" width="72.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.5" y="1054.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,198 samples, 6.13%)</title><rect x="793.5" y="1027.0" width="72.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.5" y="1038.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/123010766.apply (1,196 samples, 6.12%)</title><rect x="793.6" y="1011.0" width="72.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="1022.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (1,193 samples, 6.10%)</title><rect x="793.8" y="995.0" width="72.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.8" y="1006.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1626349430.apply (18 samples, 0.09%)</title><rect x="794.0" y="979.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (18 samples, 0.09%)</title><rect x="794.0" y="963.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$840/1726396920.apply (18 samples, 0.09%)</title><rect x="794.0" y="947.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (18 samples, 0.09%)</title><rect x="794.0" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.0" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1044/33340537.apply (18 samples, 0.09%)</title><rect x="794.0" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.0" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (18 samples, 0.09%)</title><rect x="794.0" y="899.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$838/2073136890.apply (14 samples, 0.07%)</title><rect x="794.0" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (14 samples, 0.07%)</title><rect x="794.0" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (13 samples, 0.07%)</title><rect x="794.0" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$956/1878475132.apply (13 samples, 0.07%)</title><rect x="794.0" y="835.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (13 samples, 0.07%)</title><rect x="794.0" y="819.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$840/1726396920.apply (13 samples, 0.07%)</title><rect x="794.0" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (13 samples, 0.07%)</title><rect x="794.0" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.0" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1056/968435785.apply (13 samples, 0.07%)</title><rect x="794.0" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.0" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (12 samples, 0.06%)</title><rect x="794.1" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$965/1221231465.apply (1,169 samples, 5.98%)</title><rect x="795.1" y="979.0" width="70.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.1" y="990.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (1,169 samples, 5.98%)</title><rect x="795.1" y="963.0" width="70.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.1" y="974.0">akka/htt..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (1,144 samples, 5.85%)</title><rect x="795.2" y="947.0" width="69.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.2" y="958.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (1,144 samples, 5.85%)</title><rect x="795.2" y="931.0" width="69.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.2" y="942.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1090/1268997152.apply (1,135 samples, 5.80%)</title><rect x="795.6" y="915.0" width="68.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.6" y="926.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (1,130 samples, 5.78%)</title><rect x="795.9" y="899.0" width="68.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.9" y="910.0">akka/ht..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1123/290048478.apply (13 samples, 0.07%)</title><rect x="795.9" y="883.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.9" y="894.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (13 samples, 0.07%)</title><rect x="795.9" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.9" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (13 samples, 0.07%)</title><rect x="795.9" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.9" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (11 samples, 0.06%)</title><rect x="796.1" y="835.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.1" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (8 samples, 0.04%)</title><rect x="796.1" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.1" y="830.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidResponse (6 samples, 0.03%)</title><rect x="796.1" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.1" y="814.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$Builder.build (6 samples, 0.03%)</title><rect x="796.1" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1084/77203225.apply (1,112 samples, 5.69%)</title><rect x="796.7" y="883.0" width="67.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="894.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (1,112 samples, 5.69%)</title><rect x="796.7" y="867.0" width="67.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="878.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,112 samples, 5.69%)</title><rect x="796.7" y="851.0" width="67.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="862.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1094/2049070023.apply (1,110 samples, 5.68%)</title><rect x="796.8" y="835.0" width="67.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.8" y="846.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (1,110 samples, 5.68%)</title><rect x="796.8" y="819.0" width="67.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.8" y="830.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,110 samples, 5.68%)</title><rect x="796.8" y="803.0" width="67.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.8" y="814.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1097/730637167.apply (1,104 samples, 5.65%)</title><rect x="797.2" y="787.0" width="66.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.2" y="798.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (1,104 samples, 5.65%)</title><rect x="797.2" y="771.0" width="66.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.2" y="782.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,100 samples, 5.62%)</title><rect x="797.5" y="755.0" width="66.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.5" y="766.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1097/730637167.apply (1,098 samples, 5.61%)</title><rect x="797.5" y="739.0" width="66.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.5" y="750.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (1,098 samples, 5.61%)</title><rect x="797.5" y="723.0" width="66.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.5" y="734.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1101/1712430949.apply (13 samples, 0.07%)</title><rect x="797.6" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (13 samples, 0.07%)</title><rect x="797.6" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (13 samples, 0.07%)</title><rect x="797.6" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (13 samples, 0.07%)</title><rect x="797.6" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1,082 samples, 5.53%)</title><rect x="798.4" y="707.0" width="65.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.4" y="718.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1105/801307714.apply (1,070 samples, 5.47%)</title><rect x="799.0" y="691.0" width="64.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.0" y="702.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (1,068 samples, 5.46%)</title><rect x="799.1" y="675.0" width="64.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.1" y="686.0">akka/ht..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (1,068 samples, 5.46%)</title><rect x="799.1" y="659.0" width="64.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.1" y="670.0">akka/st..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (65 samples, 0.33%)</title><rect x="799.3" y="643.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.3" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (20 samples, 0.10%)</title><rect x="799.3" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.3" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (20 samples, 0.10%)</title><rect x="799.3" y="611.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.3" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (20 samples, 0.10%)</title><rect x="799.3" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.3" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (5 samples, 0.03%)</title><rect x="799.3" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.3" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (15 samples, 0.08%)</title><rect x="799.6" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.6" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (15 samples, 0.08%)</title><rect x="799.6" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (14 samples, 0.07%)</title><rect x="799.6" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (7 samples, 0.04%)</title><rect x="800.0" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.0" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (7 samples, 0.04%)</title><rect x="800.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.0" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (12 samples, 0.06%)</title><rect x="800.5" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.5" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (11 samples, 0.06%)</title><rect x="800.5" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.5" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (10 samples, 0.05%)</title><rect x="800.6" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.6" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (28 samples, 0.14%)</title><rect x="801.3" y="627.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.3" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (24 samples, 0.12%)</title><rect x="801.3" y="611.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.3" y="622.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (20 samples, 0.10%)</title><rect x="801.5" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (20 samples, 0.10%)</title><rect x="801.5" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.5" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (5 samples, 0.03%)</title><rect x="801.5" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (13 samples, 0.07%)</title><rect x="801.9" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (13 samples, 0.07%)</title><rect x="801.9" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.9" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (13 samples, 0.07%)</title><rect x="801.9" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.9" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (13 samples, 0.07%)</title><rect x="801.9" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.9" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (11 samples, 0.06%)</title><rect x="802.0" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.0" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (11 samples, 0.06%)</title><rect x="802.0" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (11 samples, 0.06%)</title><rect x="802.0" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (5 samples, 0.03%)</title><rect x="802.3" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.3" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (5 samples, 0.03%)</title><rect x="802.3" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.3" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (5 samples, 0.03%)</title><rect x="802.3" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.3" y="430.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (1,001 samples, 5.12%)</title><rect x="803.2" y="643.0" width="60.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.2" y="654.0">akka/s..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (992 samples, 5.07%)</title><rect x="803.2" y="627.0" width="59.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.2" y="638.0">akka/s..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (992 samples, 5.07%)</title><rect x="803.2" y="611.0" width="59.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.2" y="622.0">akka/s..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (992 samples, 5.07%)</title><rect x="803.2" y="595.0" width="59.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.2" y="606.0">akka/s..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (992 samples, 5.07%)</title><rect x="803.2" y="579.0" width="59.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.2" y="590.0">akka/s..</text>
</g>
<g>
<title>akka/stream/Attributes.and (8 samples, 0.04%)</title><rect x="803.4" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (5 samples, 0.03%)</title><rect x="803.6" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.6" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (5 samples, 0.03%)</title><rect x="803.6" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.6" y="542.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (7 samples, 0.04%)</title><rect x="803.9" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (7 samples, 0.04%)</title><rect x="803.9" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (5 samples, 0.03%)</title><rect x="804.0" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.0" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (31 samples, 0.16%)</title><rect x="804.3" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (17 samples, 0.09%)</title><rect x="804.8" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.8" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (5 samples, 0.03%)</title><rect x="804.8" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.8" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (11 samples, 0.06%)</title><rect x="805.1" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource.createLogic (7 samples, 0.04%)</title><rect x="805.4" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.&lt;init&gt; (5 samples, 0.03%)</title><rect x="805.4" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.4" y="510.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (5 samples, 0.03%)</title><rect x="805.4" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.4" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (860 samples, 4.40%)</title><rect x="806.2" y="563.0" width="51.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.2" y="574.0">akka/..</text>
</g>
<g>
<title>akka/actor/Props.withDispatcher (5 samples, 0.03%)</title><rect x="806.5" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (750 samples, 3.83%)</title><rect x="806.8" y="547.0" width="45.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.8" y="558.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (750 samples, 3.83%)</title><rect x="806.8" y="531.0" width="45.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.8" y="542.0">akka..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (750 samples, 3.83%)</title><rect x="806.8" y="515.0" width="45.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.8" y="526.0">akka..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (750 samples, 3.83%)</title><rect x="806.8" y="499.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.8" y="510.0">akka..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.checkName (5 samples, 0.03%)</title><rect x="806.8" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.8" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (5 samples, 0.03%)</title><rect x="806.8" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="478.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (5 samples, 0.03%)</title><rect x="806.8" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="462.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.findInvalidPathElementCharPosition (5 samples, 0.03%)</title><rect x="806.8" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.8" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validate$1 (5 samples, 0.03%)</title><rect x="806.8" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (745 samples, 3.81%)</title><rect x="807.1" y="483.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.1" y="494.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (6 samples, 0.03%)</title><rect x="807.5" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.5" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (6 samples, 0.03%)</title><rect x="807.5" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.5" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (6 samples, 0.03%)</title><rect x="807.5" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.5" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (78 samples, 0.40%)</title><rect x="807.9" y="467.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.9" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (78 samples, 0.40%)</title><rect x="807.9" y="451.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.9" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (76 samples, 0.39%)</title><rect x="808.0" y="435.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.path (5 samples, 0.03%)</title><rect x="808.2" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.2" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (46 samples, 0.24%)</title><rect x="808.5" y="419.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (46 samples, 0.24%)</title><rect x="808.5" y="403.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.5" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (46 samples, 0.24%)</title><rect x="808.5" y="387.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.5" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (46 samples, 0.24%)</title><rect x="808.5" y="371.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (41 samples, 0.21%)</title><rect x="808.5" y="355.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (35 samples, 0.18%)</title><rect x="808.6" y="339.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.6" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (33 samples, 0.17%)</title><rect x="808.6" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (31 samples, 0.16%)</title><rect x="808.6" y="307.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (28 samples, 0.14%)</title><rect x="808.6" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (27 samples, 0.14%)</title><rect x="808.6" y="275.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (24 samples, 0.12%)</title><rect x="808.7" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.7" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (22 samples, 0.11%)</title><rect x="808.7" y="243.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.7" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (19 samples, 0.10%)</title><rect x="808.9" y="227.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.9" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.08%)</title><rect x="809.0" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.0" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.05%)</title><rect x="809.1" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.1" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.03%)</title><rect x="809.2" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.2" y="190.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.key (5 samples, 0.03%)</title><rect x="811.0" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.0" y="366.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (17 samples, 0.09%)</title><rect x="811.3" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (17 samples, 0.09%)</title><rect x="811.3" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (17 samples, 0.09%)</title><rect x="811.3" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (16 samples, 0.08%)</title><rect x="811.3" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.3" y="382.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (6 samples, 0.03%)</title><rect x="811.9" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.9" y="366.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.03%)</title><rect x="812.3" y="419.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="815.3" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (121 samples, 0.62%)</title><rect x="812.6" y="467.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.6" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (121 samples, 0.62%)</title><rect x="812.6" y="451.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.6" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (121 samples, 0.62%)</title><rect x="812.6" y="435.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.6" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (118 samples, 0.60%)</title><rect x="812.8" y="419.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (37 samples, 0.19%)</title><rect x="812.9" y="403.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.9" y="414.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (37 samples, 0.19%)</title><rect x="812.9" y="387.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="398.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (37 samples, 0.19%)</title><rect x="812.9" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (37 samples, 0.19%)</title><rect x="812.9" y="355.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.9" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (37 samples, 0.19%)</title><rect x="812.9" y="339.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.9" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (32 samples, 0.16%)</title><rect x="813.0" y="323.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.0" y="334.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (13 samples, 0.07%)</title><rect x="814.2" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.2" y="318.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (12 samples, 0.06%)</title><rect x="814.2" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.2" y="302.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (12 samples, 0.06%)</title><rect x="814.2" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.2" y="286.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (12 samples, 0.06%)</title><rect x="814.2" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (12 samples, 0.06%)</title><rect x="814.2" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (79 samples, 0.40%)</title><rect x="815.1" y="403.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (79 samples, 0.40%)</title><rect x="815.1" y="387.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (79 samples, 0.40%)</title><rect x="815.1" y="371.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (57 samples, 0.29%)</title><rect x="815.3" y="355.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (51 samples, 0.26%)</title><rect x="815.5" y="339.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (42 samples, 0.21%)</title><rect x="815.6" y="323.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (38 samples, 0.19%)</title><rect x="815.7" y="307.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (36 samples, 0.18%)</title><rect x="815.8" y="291.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.8" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (33 samples, 0.17%)</title><rect x="815.9" y="275.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.9" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (30 samples, 0.15%)</title><rect x="816.0" y="259.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.0" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (27 samples, 0.14%)</title><rect x="816.2" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.2" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (21 samples, 0.11%)</title><rect x="816.5" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.5" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (16 samples, 0.08%)</title><rect x="816.6" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.06%)</title><rect x="816.9" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.9" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (10 samples, 0.05%)</title><rect x="816.9" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.9" y="190.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.03%)</title><rect x="817.1" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.1" y="174.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.key (8 samples, 0.04%)</title><rect x="818.1" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.1" y="334.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="818.1" y="307.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="821.1" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.key (17 samples, 0.09%)</title><rect x="818.8" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.8" y="366.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.07%)</title><rect x="818.9" y="339.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="821.9" y="350.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.&lt;init&gt; (7 samples, 0.04%)</title><rect x="819.9" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.9" y="478.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (520 samples, 2.66%)</title><rect x="820.6" y="467.0" width="31.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.6" y="478.0">ak..</text>
</g>
<g>
<title>akka/actor/Deployer.lookup (10 samples, 0.05%)</title><rect x="821.0" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.0" y="462.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (10 samples, 0.05%)</title><rect x="821.0" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.0" y="446.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (8 samples, 0.04%)</title><rect x="821.0" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.0" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (6 samples, 0.03%)</title><rect x="821.2" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.2" y="414.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (457 samples, 2.34%)</title><rect x="821.6" y="451.0" width="27.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.6" y="462.0">a..</text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (376 samples, 1.92%)</title><rect x="823.1" y="435.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.1" y="446.0">a..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (376 samples, 1.92%)</title><rect x="823.1" y="419.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.1" y="430.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (376 samples, 1.92%)</title><rect x="823.1" y="403.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.1" y="414.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (376 samples, 1.92%)</title><rect x="823.1" y="387.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.1" y="398.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (376 samples, 1.92%)</title><rect x="823.1" y="371.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.1" y="382.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (374 samples, 1.91%)</title><rect x="823.2" y="355.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.2" y="366.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (10 samples, 0.05%)</title><rect x="823.3" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.3" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (10 samples, 0.05%)</title><rect x="823.3" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.3" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (10 samples, 0.05%)</title><rect x="823.3" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.3" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (6 samples, 0.03%)</title><rect x="823.6" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.6" y="302.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (6 samples, 0.03%)</title><rect x="823.6" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.6" y="286.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="823.6" y="259.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="826.6" y="270.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (362 samples, 1.85%)</title><rect x="823.9" y="339.0" width="21.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.9" y="350.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (359 samples, 1.84%)</title><rect x="823.9" y="323.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.9" y="334.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (359 samples, 1.84%)</title><rect x="823.9" y="307.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.9" y="318.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (359 samples, 1.84%)</title><rect x="823.9" y="291.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.9" y="302.0">a..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (359 samples, 1.84%)</title><rect x="823.9" y="275.0" width="21.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.9" y="286.0">a..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (359 samples, 1.84%)</title><rect x="823.9" y="259.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.9" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (359 samples, 1.84%)</title><rect x="823.9" y="243.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.9" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (358 samples, 1.83%)</title><rect x="824.0" y="227.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.0" y="238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (356 samples, 1.82%)</title><rect x="824.1" y="211.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.1" y="222.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (353 samples, 1.80%)</title><rect x="824.3" y="195.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.3" y="206.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (353 samples, 1.80%)</title><rect x="824.3" y="179.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.3" y="190.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.13%)</title><rect x="824.4" y="163.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="827.4" y="174.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.03%)</title><rect x="825.3" y="147.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="828.3" y="158.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (325 samples, 1.66%)</title><rect x="826.0" y="163.0" width="19.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="829.0" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (300 samples, 1.53%)</title><rect x="827.5" y="147.0" width="18.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.5" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (300 samples, 1.53%)</title><rect x="827.5" y="131.0" width="18.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.5" y="142.0"></text>
</g>
<g>
<title>sys_futex (283 samples, 1.45%)</title><rect x="828.5" y="115.0" width="17.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.5" y="126.0"></text>
</g>
<g>
<title>do_futex (283 samples, 1.45%)</title><rect x="828.5" y="99.0" width="17.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.5" y="110.0"></text>
</g>
<g>
<title>futex_wake (282 samples, 1.44%)</title><rect x="828.6" y="83.0" width="17.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.6" y="94.0"></text>
</g>
<g>
<title>wake_up_q (275 samples, 1.41%)</title><rect x="829.0" y="67.0" width="16.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.0" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (275 samples, 1.41%)</title><rect x="829.0" y="51.0" width="16.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (275 samples, 1.41%)</title><rect x="829.0" y="35.0" width="16.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="832.0" y="46.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (10 samples, 0.05%)</title><rect x="845.8" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (10 samples, 0.05%)</title><rect x="845.8" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (10 samples, 0.05%)</title><rect x="845.8" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.04%)</title><rect x="846.0" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.03%)</title><rect x="846.0" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.0" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (7 samples, 0.04%)</title><rect x="846.4" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.4" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookupConfigurator (7 samples, 0.04%)</title><rect x="846.4" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.04%)</title><rect x="846.4" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.4" y="414.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (39 samples, 0.20%)</title><rect x="846.9" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.9" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (9 samples, 0.05%)</title><rect x="847.6" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="430.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (9 samples, 0.05%)</title><rect x="847.6" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.6" y="414.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (9 samples, 0.05%)</title><rect x="847.6" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (5 samples, 0.03%)</title><rect x="847.8" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.8" y="382.0"></text>
</g>
<g>
<title>akka/util/Reflect$$anonfun$1.applyOrElse (5 samples, 0.03%)</title><rect x="847.8" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.8" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (5 samples, 0.03%)</title><rect x="847.8" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.8" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupByQueueType (13 samples, 0.07%)</title><rect x="848.1" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.1" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupId (13 samples, 0.07%)</title><rect x="848.1" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.1" y="414.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (18 samples, 0.09%)</title><rect x="849.2" y="451.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (16 samples, 0.08%)</title><rect x="849.3" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (15 samples, 0.08%)</title><rect x="849.4" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.03%)</title><rect x="849.5" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (9 samples, 0.05%)</title><rect x="849.8" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (16 samples, 0.08%)</title><rect x="850.7" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (16 samples, 0.08%)</title><rect x="850.7" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.7" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (16 samples, 0.08%)</title><rect x="850.7" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.7" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (16 samples, 0.08%)</title><rect x="850.7" y="403.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.7" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (16 samples, 0.08%)</title><rect x="850.7" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.7" y="398.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (16 samples, 0.08%)</title><rect x="850.7" y="371.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.7" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.isEmpty (12 samples, 0.06%)</title><rect x="850.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.7" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty$ (11 samples, 0.06%)</title><rect x="850.8" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.8" y="350.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty (10 samples, 0.05%)</title><rect x="850.8" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.8" y="334.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (10 samples, 0.05%)</title><rect x="850.8" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.8" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (9 samples, 0.05%)</title><rect x="850.9" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.9" y="302.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (95 samples, 0.49%)</title><rect x="852.1" y="547.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.1" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (63 samples, 0.32%)</title><rect x="852.1" y="531.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.1" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (63 samples, 0.32%)</title><rect x="852.1" y="515.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.1" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (62 samples, 0.32%)</title><rect x="852.1" y="499.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.1" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (61 samples, 0.31%)</title><rect x="852.2" y="483.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (61 samples, 0.31%)</title><rect x="852.2" y="467.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (61 samples, 0.31%)</title><rect x="852.2" y="451.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.2" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (61 samples, 0.31%)</title><rect x="852.2" y="435.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (17 samples, 0.09%)</title><rect x="852.2" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (17 samples, 0.09%)</title><rect x="852.2" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (10 samples, 0.05%)</title><rect x="852.5" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.5" y="398.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="852.6" y="371.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="855.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (44 samples, 0.22%)</title><rect x="853.2" y="419.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (8 samples, 0.04%)</title><rect x="853.2" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (8 samples, 0.04%)</title><rect x="853.2" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.2" y="398.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="853.2" y="371.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="856.2" y="382.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (36 samples, 0.18%)</title><rect x="853.7" y="403.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/257608605.invokeStatic (5 samples, 0.03%)</title><rect x="855.1" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.1" y="398.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (31 samples, 0.16%)</title><rect x="855.9" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.9" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (30 samples, 0.15%)</title><rect x="855.9" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.9" y="526.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (27 samples, 0.14%)</title><rect x="856.1" y="499.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.1" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (26 samples, 0.13%)</title><rect x="856.2" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.2" y="494.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (26 samples, 0.13%)</title><rect x="856.2" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.2" y="478.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (26 samples, 0.13%)</title><rect x="856.2" y="451.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.2" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (26 samples, 0.13%)</title><rect x="856.2" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.2" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (26 samples, 0.13%)</title><rect x="856.2" y="419.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.2" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (10 samples, 0.05%)</title><rect x="856.2" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.2" y="414.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.04%)</title><rect x="856.2" y="387.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="859.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (10 samples, 0.05%)</title><rect x="857.1" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.1" y="414.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (36 samples, 0.18%)</title><rect x="858.1" y="563.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (22 samples, 0.11%)</title><rect x="858.3" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (21 samples, 0.11%)</title><rect x="858.4" y="531.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.4" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.&lt;init&gt; (9 samples, 0.05%)</title><rect x="858.6" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1109/434430212.apply (6 samples, 0.03%)</title><rect x="859.7" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.7" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.allNestedIslandsReady (5 samples, 0.03%)</title><rect x="860.3" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (8 samples, 0.04%)</title><rect x="860.6" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (8 samples, 0.04%)</title><rect x="860.6" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (15 samples, 0.08%)</title><rect x="861.1" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (9 samples, 0.05%)</title><rect x="861.2" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.2" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (8 samples, 0.04%)</title><rect x="861.2" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.2" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (8 samples, 0.04%)</title><rect x="861.2" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.2" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (6 samples, 0.03%)</title><rect x="862.0" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.03%)</title><rect x="862.5" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.03%)</title><rect x="862.5" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (9 samples, 0.05%)</title><rect x="863.0" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.0" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (9 samples, 0.05%)</title><rect x="863.0" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.0" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (8 samples, 0.04%)</title><rect x="863.1" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.1" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1055/1280315108.apply (24 samples, 0.12%)</title><rect x="864.2" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (24 samples, 0.12%)</title><rect x="864.2" y="931.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (24 samples, 0.12%)</title><rect x="864.2" y="915.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1080/1386980917.apply (24 samples, 0.12%)</title><rect x="864.2" y="899.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.2" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (24 samples, 0.12%)</title><rect x="864.2" y="883.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.2" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (24 samples, 0.12%)</title><rect x="864.2" y="867.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.2" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1081/1100396985.apply (23 samples, 0.12%)</title><rect x="864.2" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.2" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (23 samples, 0.12%)</title><rect x="864.2" y="835.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.2" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (22 samples, 0.11%)</title><rect x="864.3" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.3" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (22 samples, 0.11%)</title><rect x="864.3" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.3" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (22 samples, 0.11%)</title><rect x="864.3" y="787.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.3" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (21 samples, 0.11%)</title><rect x="864.4" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.4" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (18 samples, 0.09%)</title><rect x="864.5" y="755.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.5" y="766.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (11 samples, 0.06%)</title><rect x="864.9" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.9" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (11 samples, 0.06%)</title><rect x="864.9" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.9" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (9 samples, 0.05%)</title><rect x="865.0" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.0" y="718.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (6 samples, 0.03%)</title><rect x="865.0" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (5 samples, 0.03%)</title><rect x="865.8" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (5 samples, 0.03%)</title><rect x="865.8" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleException$1 (9 samples, 0.05%)</title><rect x="866.2" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ExceptionHandler$$anon$1.andThen (5 samples, 0.03%)</title><rect x="866.2" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.2" y="1166.0"></text>
</g>
<g>
<title>scala/PartialFunction.andThen$ (5 samples, 0.03%)</title><rect x="866.2" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.2" y="1150.0"></text>
</g>
<g>
<title>scala/PartialFunction.andThen (5 samples, 0.03%)</title><rect x="866.2" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$266/2057077925.apply (16 samples, 0.08%)</title><rect x="866.9" y="1203.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (16 samples, 0.08%)</title><rect x="866.9" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$434/169049466.apply (15 samples, 0.08%)</title><rect x="866.9" y="1171.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (15 samples, 0.08%)</title><rect x="866.9" y="1155.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (15 samples, 0.08%)</title><rect x="866.9" y="1139.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$941/294097288.apply (7 samples, 0.04%)</title><rect x="867.4" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.03%)</title><rect x="867.9" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (5 samples, 0.03%)</title><rect x="867.9" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.9" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (16 samples, 0.08%)</title><rect x="868.6" y="1267.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.6" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (14 samples, 0.07%)</title><rect x="868.8" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.8" y="1262.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="868.8" y="1235.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="871.8" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (5 samples, 0.03%)</title><rect x="869.3" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (152 samples, 0.78%)</title><rect x="870.1" y="1283.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (145 samples, 0.74%)</title><rect x="870.1" y="1267.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (145 samples, 0.74%)</title><rect x="870.1" y="1251.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (145 samples, 0.74%)</title><rect x="870.1" y="1235.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (145 samples, 0.74%)</title><rect x="870.1" y="1219.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (145 samples, 0.74%)</title><rect x="870.1" y="1203.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (145 samples, 0.74%)</title><rect x="870.1" y="1187.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (145 samples, 0.74%)</title><rect x="870.1" y="1171.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (143 samples, 0.73%)</title><rect x="870.2" y="1155.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (141 samples, 0.72%)</title><rect x="870.3" y="1139.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (138 samples, 0.71%)</title><rect x="870.3" y="1123.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (138 samples, 0.71%)</title><rect x="870.3" y="1107.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (138 samples, 0.71%)</title><rect x="870.3" y="1091.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (138 samples, 0.71%)</title><rect x="870.3" y="1075.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (138 samples, 0.71%)</title><rect x="870.3" y="1059.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (138 samples, 0.71%)</title><rect x="870.3" y="1043.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (138 samples, 0.71%)</title><rect x="870.3" y="1027.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (138 samples, 0.71%)</title><rect x="870.3" y="1011.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (138 samples, 0.71%)</title><rect x="870.3" y="995.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (134 samples, 0.69%)</title><rect x="870.6" y="979.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.6" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="870.8" y="963.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="873.8" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (126 samples, 0.64%)</title><rect x="871.1" y="963.0" width="7.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="874.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (118 samples, 0.60%)</title><rect x="871.5" y="947.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="874.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 0.60%)</title><rect x="871.5" y="931.0" width="7.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.5" y="942.0"></text>
</g>
<g>
<title>sys_futex (117 samples, 0.60%)</title><rect x="871.6" y="915.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.6" y="926.0"></text>
</g>
<g>
<title>do_futex (116 samples, 0.59%)</title><rect x="871.7" y="899.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="874.7" y="910.0"></text>
</g>
<g>
<title>futex_wake (116 samples, 0.59%)</title><rect x="871.7" y="883.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.7" y="894.0"></text>
</g>
<g>
<title>wake_up_q (108 samples, 0.55%)</title><rect x="872.1" y="867.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.1" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (108 samples, 0.55%)</title><rect x="872.1" y="851.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="875.1" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 0.55%)</title><rect x="872.2" y="835.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.2" y="846.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.onPush (5 samples, 0.03%)</title><rect x="879.3" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.3" y="1294.0"></text>
</g>
<g>
<title>itable stub (41 samples, 0.21%)</title><rect x="880.3" y="1299.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="883.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (13 samples, 0.07%)</title><rect x="882.9" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (13 samples, 0.07%)</title><rect x="882.9" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (13 samples, 0.07%)</title><rect x="882.9" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (13 samples, 0.07%)</title><rect x="882.9" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.9" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (13 samples, 0.07%)</title><rect x="882.9" y="1251.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.9" y="1262.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (10 samples, 0.05%)</title><rect x="882.9" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.&lt;init&gt; (10 samples, 0.05%)</title><rect x="882.9" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (8 samples, 0.04%)</title><rect x="883.9" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (7 samples, 0.04%)</title><rect x="883.9" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (7 samples, 0.04%)</title><rect x="883.9" y="1331.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (508 samples, 2.60%)</title><rect x="884.3" y="1379.0" width="30.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.3" y="1390.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (388 samples, 1.98%)</title><rect x="884.5" y="1363.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.5" y="1374.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (387 samples, 1.98%)</title><rect x="884.5" y="1347.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.5" y="1358.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (387 samples, 1.98%)</title><rect x="884.5" y="1331.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.5" y="1342.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (135 samples, 0.69%)</title><rect x="884.5" y="1315.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$1269/176551034.apply (125 samples, 0.64%)</title><rect x="884.7" y="1299.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (125 samples, 0.64%)</title><rect x="884.7" y="1283.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (125 samples, 0.64%)</title><rect x="884.7" y="1267.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (85 samples, 0.43%)</title><rect x="884.7" y="1251.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (79 samples, 0.40%)</title><rect x="884.8" y="1235.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1353/1172062183.apply (76 samples, 0.39%)</title><rect x="884.9" y="1219.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (76 samples, 0.39%)</title><rect x="884.9" y="1203.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (76 samples, 0.39%)</title><rect x="884.9" y="1187.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (76 samples, 0.39%)</title><rect x="884.9" y="1171.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (76 samples, 0.39%)</title><rect x="884.9" y="1155.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (76 samples, 0.39%)</title><rect x="884.9" y="1139.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (75 samples, 0.38%)</title><rect x="884.9" y="1123.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1252/1306988956.apply (11 samples, 0.06%)</title><rect x="885.0" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (11 samples, 0.06%)</title><rect x="885.0" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1263/525062780.apply (7 samples, 0.04%)</title><rect x="885.2" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.2" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (7 samples, 0.04%)</title><rect x="885.2" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (6 samples, 0.03%)</title><rect x="885.3" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (5 samples, 0.03%)</title><rect x="885.4" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (5 samples, 0.03%)</title><rect x="885.4" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (11 samples, 0.06%)</title><rect x="886.0" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.0" y="1118.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (11 samples, 0.06%)</title><rect x="886.0" y="1091.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.0" y="1102.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (8 samples, 0.04%)</title><rect x="886.2" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.2" y="1086.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (7 samples, 0.04%)</title><rect x="886.2" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.2" y="1070.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (6 samples, 0.03%)</title><rect x="886.3" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (30 samples, 0.15%)</title><rect x="887.2" y="1107.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 0.11%)</title><rect x="887.5" y="1091.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.03%)</title><rect x="889.0" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (37 samples, 0.19%)</title><rect x="889.8" y="1251.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (37 samples, 0.19%)</title><rect x="889.8" y="1235.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1386/479994723.apply (37 samples, 0.19%)</title><rect x="889.8" y="1219.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (37 samples, 0.19%)</title><rect x="889.8" y="1203.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (37 samples, 0.19%)</title><rect x="889.8" y="1187.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (37 samples, 0.19%)</title><rect x="889.8" y="1171.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (37 samples, 0.19%)</title><rect x="889.8" y="1155.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (37 samples, 0.19%)</title><rect x="889.8" y="1139.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (37 samples, 0.19%)</title><rect x="889.8" y="1123.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (22 samples, 0.11%)</title><rect x="889.9" y="1107.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (22 samples, 0.11%)</title><rect x="889.9" y="1091.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.9" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (21 samples, 0.11%)</title><rect x="890.0" y="1075.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1387/1660577039.apply (21 samples, 0.11%)</title><rect x="890.0" y="1059.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (21 samples, 0.11%)</title><rect x="890.0" y="1043.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (21 samples, 0.11%)</title><rect x="890.0" y="1027.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (21 samples, 0.11%)</title><rect x="890.0" y="1011.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (21 samples, 0.11%)</title><rect x="890.0" y="995.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (21 samples, 0.11%)</title><rect x="890.0" y="979.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 0.11%)</title><rect x="890.0" y="963.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 0.11%)</title><rect x="890.0" y="947.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.0" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (20 samples, 0.10%)</title><rect x="890.1" y="931.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="893.1" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (20 samples, 0.10%)</title><rect x="890.1" y="915.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="893.1" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (19 samples, 0.10%)</title><rect x="890.1" y="899.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="893.1" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (19 samples, 0.10%)</title><rect x="890.1" y="883.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.1" y="894.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (5 samples, 0.03%)</title><rect x="890.9" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="893.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.04%)</title><rect x="891.6" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet$$Lambda$1268/2088818919.apply (5 samples, 0.03%)</title><rect x="892.2" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (250 samples, 1.28%)</title><rect x="892.8" y="1315.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (247 samples, 1.26%)</title><rect x="892.8" y="1299.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (12 samples, 0.06%)</title><rect x="892.8" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.8" y="1294.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.04%)</title><rect x="893.0" y="1267.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="896.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (57 samples, 0.29%)</title><rect x="893.5" y="1283.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (35 samples, 0.18%)</title><rect x="894.2" y="1267.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (33 samples, 0.17%)</title><rect x="894.2" y="1251.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.2" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (26 samples, 0.13%)</title><rect x="894.7" y="1235.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (26 samples, 0.13%)</title><rect x="894.7" y="1219.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (26 samples, 0.13%)</title><rect x="894.7" y="1203.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (26 samples, 0.13%)</title><rect x="894.7" y="1187.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (26 samples, 0.13%)</title><rect x="894.7" y="1171.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (26 samples, 0.13%)</title><rect x="894.7" y="1155.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (26 samples, 0.13%)</title><rect x="894.7" y="1139.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (26 samples, 0.13%)</title><rect x="894.7" y="1123.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (26 samples, 0.13%)</title><rect x="894.7" y="1107.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (26 samples, 0.13%)</title><rect x="894.7" y="1091.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (25 samples, 0.13%)</title><rect x="894.7" y="1075.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (24 samples, 0.12%)</title><rect x="894.7" y="1059.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (24 samples, 0.12%)</title><rect x="894.7" y="1043.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (24 samples, 0.12%)</title><rect x="894.7" y="1027.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (24 samples, 0.12%)</title><rect x="894.7" y="1011.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (24 samples, 0.12%)</title><rect x="894.7" y="995.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (24 samples, 0.12%)</title><rect x="894.7" y="979.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (24 samples, 0.12%)</title><rect x="894.7" y="963.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (24 samples, 0.12%)</title><rect x="894.7" y="947.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (23 samples, 0.12%)</title><rect x="894.8" y="931.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.10%)</title><rect x="895.0" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.10%)</title><rect x="895.0" y="899.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.0" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (18 samples, 0.09%)</title><rect x="895.1" y="883.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="898.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="895.1" y="867.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.08%)</title><rect x="895.1" y="851.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.1" y="862.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.08%)</title><rect x="895.1" y="835.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.1" y="846.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.08%)</title><rect x="895.1" y="819.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="898.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.08%)</title><rect x="895.1" y="803.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.08%)</title><rect x="895.1" y="787.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.08%)</title><rect x="895.1" y="771.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.08%)</title><rect x="895.1" y="755.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.1" y="766.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.04%)</title><rect x="896.5" y="1267.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="899.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (8 samples, 0.04%)</title><rect x="896.9" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (166 samples, 0.85%)</title><rect x="897.4" y="1283.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (8 samples, 0.04%)</title><rect x="897.4" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (5 samples, 0.03%)</title><rect x="897.5" y="1251.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (5 samples, 0.03%)</title><rect x="897.5" y="1235.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (5 samples, 0.03%)</title><rect x="897.5" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (83 samples, 0.42%)</title><rect x="898.3" y="1267.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1232/923626443.apply (72 samples, 0.37%)</title><rect x="898.6" y="1251.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (72 samples, 0.37%)</title><rect x="898.6" y="1235.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (72 samples, 0.37%)</title><rect x="898.6" y="1219.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (20 samples, 0.10%)</title><rect x="898.6" y="1203.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (19 samples, 0.10%)</title><rect x="898.6" y="1187.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (17 samples, 0.09%)</title><rect x="898.8" y="1171.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (13 samples, 0.07%)</title><rect x="898.9" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (13 samples, 0.07%)</title><rect x="898.9" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (10 samples, 0.05%)</title><rect x="898.9" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.next (5 samples, 0.03%)</title><rect x="899.1" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (52 samples, 0.27%)</title><rect x="899.8" y="1203.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (15 samples, 0.08%)</title><rect x="899.8" y="1187.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderContentLength$1 (8 samples, 0.04%)</title><rect x="899.8" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (6 samples, 0.03%)</title><rect x="899.8" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (6 samples, 0.03%)</title><rect x="899.8" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (6 samples, 0.03%)</title><rect x="899.8" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (21 samples, 0.11%)</title><rect x="900.7" y="1187.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (18 samples, 0.09%)</title><rect x="900.7" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (17 samples, 0.09%)</title><rect x="900.7" y="1155.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (17 samples, 0.09%)</title><rect x="900.7" y="1139.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (17 samples, 0.09%)</title><rect x="900.7" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (17 samples, 0.09%)</title><rect x="900.7" y="1107.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (17 samples, 0.09%)</title><rect x="900.7" y="1091.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.render (17 samples, 0.09%)</title><rect x="900.7" y="1075.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (17 samples, 0.09%)</title><rect x="900.7" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (17 samples, 0.09%)</title><rect x="900.7" y="1043.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.renderValue (12 samples, 0.06%)</title><rect x="901.0" y="1027.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (12 samples, 0.06%)</title><rect x="901.0" y="1011.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (12 samples, 0.06%)</title><rect x="901.0" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (12 samples, 0.06%)</title><rect x="901.0" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (10 samples, 0.05%)</title><rect x="901.2" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$HostRenderer$.render (9 samples, 0.05%)</title><rect x="901.2" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.encode (9 samples, 0.05%)</title><rect x="901.2" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.2" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/UriRendering$.rec$3 (8 samples, 0.04%)</title><rect x="901.3" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (10 samples, 0.05%)</title><rect x="902.0" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (5 samples, 0.03%)</title><rect x="902.1" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (7 samples, 0.04%)</title><rect x="902.9" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (7 samples, 0.04%)</title><rect x="902.9" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (58 samples, 0.30%)</title><rect x="903.6" y="1267.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (54 samples, 0.28%)</title><rect x="903.6" y="1251.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (54 samples, 0.28%)</title><rect x="903.6" y="1235.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (54 samples, 0.28%)</title><rect x="903.6" y="1219.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (54 samples, 0.28%)</title><rect x="903.6" y="1203.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (54 samples, 0.28%)</title><rect x="903.6" y="1187.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (54 samples, 0.28%)</title><rect x="903.6" y="1171.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (54 samples, 0.28%)</title><rect x="903.6" y="1155.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (53 samples, 0.27%)</title><rect x="903.6" y="1139.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (53 samples, 0.27%)</title><rect x="903.6" y="1123.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (53 samples, 0.27%)</title><rect x="903.6" y="1107.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (53 samples, 0.27%)</title><rect x="903.6" y="1091.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (53 samples, 0.27%)</title><rect x="903.6" y="1075.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (53 samples, 0.27%)</title><rect x="903.6" y="1059.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (53 samples, 0.27%)</title><rect x="903.6" y="1043.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (53 samples, 0.27%)</title><rect x="903.6" y="1027.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (53 samples, 0.27%)</title><rect x="903.6" y="1011.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (53 samples, 0.27%)</title><rect x="903.6" y="995.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (53 samples, 0.27%)</title><rect x="903.6" y="979.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 0.26%)</title><rect x="903.7" y="963.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.7" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (46 samples, 0.24%)</title><rect x="904.0" y="947.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="907.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.20%)</title><rect x="904.4" y="931.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.20%)</title><rect x="904.4" y="915.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (37 samples, 0.19%)</title><rect x="904.5" y="899.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.5" y="910.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.19%)</title><rect x="904.5" y="883.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.19%)</title><rect x="904.5" y="867.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.5" y="878.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.18%)</title><rect x="904.6" y="851.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.18%)</title><rect x="904.6" y="835.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="907.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.18%)</title><rect x="904.6" y="819.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.6" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (102 samples, 0.52%)</title><rect x="907.9" y="1363.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.9" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (101 samples, 0.52%)</title><rect x="907.9" y="1347.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (94 samples, 0.48%)</title><rect x="908.0" y="1331.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.0" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (60 samples, 0.31%)</title><rect x="908.1" y="1315.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (10 samples, 0.05%)</title><rect x="908.3" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (8 samples, 0.04%)</title><rect x="908.4" y="1283.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (5 samples, 0.03%)</title><rect x="908.5" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (5 samples, 0.03%)</title><rect x="908.5" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay$ (5 samples, 0.03%)</title><rect x="908.5" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (44 samples, 0.22%)</title><rect x="909.1" y="1299.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (35 samples, 0.18%)</title><rect x="909.3" y="1283.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (35 samples, 0.18%)</title><rect x="909.3" y="1267.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (6 samples, 0.03%)</title><rect x="909.3" y="1251.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (27 samples, 0.14%)</title><rect x="909.7" y="1251.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (27 samples, 0.14%)</title><rect x="909.7" y="1235.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (27 samples, 0.14%)</title><rect x="909.7" y="1219.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (27 samples, 0.14%)</title><rect x="909.7" y="1203.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (27 samples, 0.14%)</title><rect x="909.7" y="1187.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.7" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (26 samples, 0.13%)</title><rect x="909.7" y="1171.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.7" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (26 samples, 0.13%)</title><rect x="909.7" y="1155.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.7" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (26 samples, 0.13%)</title><rect x="909.7" y="1139.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (26 samples, 0.13%)</title><rect x="909.7" y="1123.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (26 samples, 0.13%)</title><rect x="909.7" y="1107.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (26 samples, 0.13%)</title><rect x="909.7" y="1091.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (26 samples, 0.13%)</title><rect x="909.7" y="1075.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (26 samples, 0.13%)</title><rect x="909.7" y="1059.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (26 samples, 0.13%)</title><rect x="909.7" y="1043.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.13%)</title><rect x="909.7" y="1027.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.13%)</title><rect x="909.7" y="1011.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.7" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (22 samples, 0.11%)</title><rect x="910.0" y="995.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="913.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.11%)</title><rect x="910.0" y="979.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="910.0" y="963.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.0" y="974.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.11%)</title><rect x="910.0" y="947.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.0" y="958.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.11%)</title><rect x="910.0" y="931.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.11%)</title><rect x="910.0" y="915.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.0" y="926.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.11%)</title><rect x="910.0" y="899.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.0" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.11%)</title><rect x="910.0" y="883.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.0" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.11%)</title><rect x="910.0" y="867.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="913.0" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (6 samples, 0.03%)</title><rect x="911.4" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (6 samples, 0.03%)</title><rect x="911.4" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (6 samples, 0.03%)</title><rect x="911.4" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (6 samples, 0.03%)</title><rect x="911.4" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (6 samples, 0.03%)</title><rect x="911.4" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (6 samples, 0.03%)</title><rect x="911.4" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (6 samples, 0.03%)</title><rect x="911.4" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.03%)</title><rect x="911.4" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.03%)</title><rect x="911.4" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (6 samples, 0.03%)</title><rect x="911.4" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (23 samples, 0.12%)</title><rect x="911.7" y="1315.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (23 samples, 0.12%)</title><rect x="911.7" y="1299.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (22 samples, 0.11%)</title><rect x="911.7" y="1283.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (22 samples, 0.11%)</title><rect x="911.7" y="1267.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.7" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (22 samples, 0.11%)</title><rect x="911.7" y="1251.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (17 samples, 0.09%)</title><rect x="912.0" y="1235.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.0" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (17 samples, 0.09%)</title><rect x="912.0" y="1219.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.0" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (17 samples, 0.09%)</title><rect x="912.0" y="1203.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (16 samples, 0.08%)</title><rect x="912.0" y="1187.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (16 samples, 0.08%)</title><rect x="912.0" y="1171.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (7 samples, 0.04%)</title><rect x="912.1" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (5 samples, 0.03%)</title><rect x="912.2" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (5 samples, 0.03%)</title><rect x="912.2" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.03%)</title><rect x="912.2" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.03%)</title><rect x="912.2" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (9 samples, 0.05%)</title><rect x="913.1" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (9 samples, 0.05%)</title><rect x="913.1" y="1299.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (5 samples, 0.03%)</title><rect x="913.2" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (6 samples, 0.03%)</title><rect x="913.7" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (6 samples, 0.03%)</title><rect x="913.7" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (6 samples, 0.03%)</title><rect x="913.7" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (5 samples, 0.03%)</title><rect x="913.7" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.7" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.isEmpty (6 samples, 0.03%)</title><rect x="914.3" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (5 samples, 0.03%)</title><rect x="914.6" y="1363.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.6" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (32 samples, 0.16%)</title><rect x="915.4" y="1443.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (32 samples, 0.16%)</title><rect x="915.4" y="1427.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (32 samples, 0.16%)</title><rect x="915.4" y="1411.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.4" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (32 samples, 0.16%)</title><rect x="915.4" y="1395.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (32 samples, 0.16%)</title><rect x="915.4" y="1379.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (32 samples, 0.16%)</title><rect x="915.4" y="1363.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.4" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (32 samples, 0.16%)</title><rect x="915.4" y="1347.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.4" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.info (12 samples, 0.06%)</title><rect x="915.4" y="1331.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.4" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info$ (11 samples, 0.06%)</title><rect x="915.5" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.5" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info (11 samples, 0.06%)</title><rect x="915.5" y="1299.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.5" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyInfo (8 samples, 0.04%)</title><rect x="915.7" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.7" y="1294.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.03%)</title><rect x="915.7" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.7" y="1278.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (5 samples, 0.03%)</title><rect x="915.7" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (5 samples, 0.03%)</title><rect x="915.7" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (5 samples, 0.03%)</title><rect x="915.7" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (5 samples, 0.03%)</title><rect x="915.7" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (5 samples, 0.03%)</title><rect x="915.7" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.7" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (5 samples, 0.03%)</title><rect x="915.7" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.7" y="1182.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.03%)</title><rect x="915.7" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.7" y="1166.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (5 samples, 0.03%)</title><rect x="915.7" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (5 samples, 0.03%)</title><rect x="915.7" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.03%)</title><rect x="915.7" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.03%)</title><rect x="915.7" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.03%)</title><rect x="915.7" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (18 samples, 0.09%)</title><rect x="916.3" y="1331.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (18 samples, 0.09%)</title><rect x="916.3" y="1315.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count (18 samples, 0.09%)</title><rect x="916.3" y="1299.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.iterator (11 samples, 0.06%)</title><rect x="916.3" y="1283.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$KeysIterator.&lt;init&gt; (11 samples, 0.06%)</title><rect x="916.3" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.&lt;init&gt; (11 samples, 0.06%)</title><rect x="916.3" y="1251.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.count (10 samples, 0.05%)</title><rect x="916.3" y="1235.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (7 samples, 0.04%)</title><rect x="916.9" y="1283.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (6 samples, 0.03%)</title><rect x="916.9" y="1267.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (6 samples, 0.03%)</title><rect x="916.9" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (6 samples, 0.03%)</title><rect x="916.9" y="1235.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (48 samples, 0.25%)</title><rect x="917.5" y="1475.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (44 samples, 0.22%)</title><rect x="917.7" y="1459.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (44 samples, 0.22%)</title><rect x="917.7" y="1443.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.7" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (44 samples, 0.22%)</title><rect x="917.7" y="1427.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (44 samples, 0.22%)</title><rect x="917.7" y="1411.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (167 samples, 0.85%)</title><rect x="920.4" y="1475.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.4" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (154 samples, 0.79%)</title><rect x="920.7" y="1459.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (152 samples, 0.78%)</title><rect x="920.8" y="1443.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (18 samples, 0.09%)</title><rect x="921.1" y="1427.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (16 samples, 0.08%)</title><rect x="921.2" y="1411.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (16 samples, 0.08%)</title><rect x="921.2" y="1395.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (15 samples, 0.08%)</title><rect x="921.3" y="1379.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (15 samples, 0.08%)</title><rect x="921.3" y="1363.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (15 samples, 0.08%)</title><rect x="921.3" y="1347.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (15 samples, 0.08%)</title><rect x="921.3" y="1331.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (14 samples, 0.07%)</title><rect x="921.3" y="1315.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.3" y="1326.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (9 samples, 0.05%)</title><rect x="921.6" y="1299.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.6" y="1310.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (5 samples, 0.03%)</title><rect x="921.9" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.9" y="1294.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (5 samples, 0.03%)</title><rect x="921.9" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.9" y="1278.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (5 samples, 0.03%)</title><rect x="921.9" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (5 samples, 0.03%)</title><rect x="921.9" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (122 samples, 0.62%)</title><rect x="922.2" y="1427.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (122 samples, 0.62%)</title><rect x="922.2" y="1411.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (122 samples, 0.62%)</title><rect x="922.2" y="1395.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (109 samples, 0.56%)</title><rect x="922.6" y="1379.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (10 samples, 0.05%)</title><rect x="922.7" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.7" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (9 samples, 0.05%)</title><rect x="922.8" y="1347.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (6 samples, 0.03%)</title><rect x="923.0" y="1331.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (21 samples, 0.11%)</title><rect x="923.3" y="1363.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (19 samples, 0.10%)</title><rect x="923.4" y="1347.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.4" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (18 samples, 0.09%)</title><rect x="923.5" y="1331.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="926.5" y="1342.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (5 samples, 0.03%)</title><rect x="923.5" y="1315.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (13 samples, 0.07%)</title><rect x="923.8" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (8 samples, 0.04%)</title><rect x="923.8" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="926.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (6 samples, 0.03%)</title><rect x="923.9" y="1283.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (5 samples, 0.03%)</title><rect x="924.3" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (5 samples, 0.03%)</title><rect x="924.6" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (5 samples, 0.03%)</title><rect x="924.6" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (5 samples, 0.03%)</title><rect x="924.6" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (22 samples, 0.11%)</title><rect x="924.9" y="1363.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (22 samples, 0.11%)</title><rect x="924.9" y="1347.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (22 samples, 0.11%)</title><rect x="924.9" y="1331.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (22 samples, 0.11%)</title><rect x="924.9" y="1315.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (22 samples, 0.11%)</title><rect x="924.9" y="1299.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (20 samples, 0.10%)</title><rect x="925.1" y="1283.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (20 samples, 0.10%)</title><rect x="925.1" y="1267.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (20 samples, 0.10%)</title><rect x="925.1" y="1251.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (20 samples, 0.10%)</title><rect x="925.1" y="1235.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (20 samples, 0.10%)</title><rect x="925.1" y="1219.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (20 samples, 0.10%)</title><rect x="925.1" y="1203.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (20 samples, 0.10%)</title><rect x="925.1" y="1187.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="928.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (20 samples, 0.10%)</title><rect x="925.1" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 0.10%)</title><rect x="925.1" y="1155.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="928.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.10%)</title><rect x="925.1" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.10%)</title><rect x="925.1" y="1123.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.1" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.10%)</title><rect x="925.1" y="1107.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="928.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="925.2" y="1091.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="925.2" y="1075.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.2" y="1086.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.09%)</title><rect x="925.2" y="1059.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.2" y="1070.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.09%)</title><rect x="925.2" y="1043.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="928.2" y="1054.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.09%)</title><rect x="925.2" y="1027.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.2" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.08%)</title><rect x="925.3" y="1011.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="928.3" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.08%)</title><rect x="925.3" y="995.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.3" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.08%)</title><rect x="925.4" y="979.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.4" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (13 samples, 0.07%)</title><rect x="926.3" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.3" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (13 samples, 0.07%)</title><rect x="926.3" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (13 samples, 0.07%)</title><rect x="926.3" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (10 samples, 0.05%)</title><rect x="926.5" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (9 samples, 0.05%)</title><rect x="926.5" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (9 samples, 0.05%)</title><rect x="926.5" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.5" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (8 samples, 0.04%)</title><rect x="926.5" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (7 samples, 0.04%)</title><rect x="926.6" y="1251.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (5 samples, 0.03%)</title><rect x="926.6" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.6" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (23 samples, 0.12%)</title><rect x="927.1" y="1363.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="930.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (23 samples, 0.12%)</title><rect x="927.1" y="1347.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (23 samples, 0.12%)</title><rect x="927.1" y="1331.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (23 samples, 0.12%)</title><rect x="927.1" y="1315.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (15 samples, 0.08%)</title><rect x="927.1" y="1299.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.1" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (15 samples, 0.08%)</title><rect x="927.1" y="1283.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.1" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1020/563942773.apply (15 samples, 0.08%)</title><rect x="927.1" y="1267.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.1" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (15 samples, 0.08%)</title><rect x="927.1" y="1251.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.1" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (15 samples, 0.08%)</title><rect x="927.1" y="1235.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (15 samples, 0.08%)</title><rect x="927.1" y="1219.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.1" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1021/2121970479.apply (15 samples, 0.08%)</title><rect x="927.1" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.1" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (15 samples, 0.08%)</title><rect x="927.1" y="1187.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.1" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (15 samples, 0.08%)</title><rect x="927.1" y="1171.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (15 samples, 0.08%)</title><rect x="927.1" y="1155.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/659326352.apply (15 samples, 0.08%)</title><rect x="927.1" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (15 samples, 0.08%)</title><rect x="927.1" y="1123.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (15 samples, 0.08%)</title><rect x="927.1" y="1107.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (15 samples, 0.08%)</title><rect x="927.1" y="1091.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (14 samples, 0.07%)</title><rect x="927.1" y="1075.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (13 samples, 0.07%)</title><rect x="927.2" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.2" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/789612872.apply (13 samples, 0.07%)</title><rect x="927.2" y="1043.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.2" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (13 samples, 0.07%)</title><rect x="927.2" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.2" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (13 samples, 0.07%)</title><rect x="927.2" y="1011.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.2" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (13 samples, 0.07%)</title><rect x="927.2" y="995.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.2" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.05%)</title><rect x="927.2" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.2" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (10 samples, 0.05%)</title><rect x="927.2" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.2" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (10 samples, 0.05%)</title><rect x="927.2" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.2" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.05%)</title><rect x="927.2" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.2" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.05%)</title><rect x="927.2" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.2" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.05%)</title><rect x="927.2" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.2" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (10 samples, 0.05%)</title><rect x="927.2" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.2" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.05%)</title><rect x="927.2" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.2" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.05%)</title><rect x="927.2" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.2" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.05%)</title><rect x="927.2" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.2" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.05%)</title><rect x="927.2" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.2" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.05%)</title><rect x="927.2" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.05%)</title><rect x="927.2" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.05%)</title><rect x="927.2" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.05%)</title><rect x="927.2" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="930.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.05%)</title><rect x="927.2" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.05%)</title><rect x="927.2" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.05%)</title><rect x="927.2" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.04%)</title><rect x="927.4" y="691.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="930.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="927.4" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="930.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="927.4" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="930.4" y="670.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.04%)</title><rect x="927.4" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.4" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="927.4" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.4" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="927.4" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="927.4" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="930.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="927.4" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="927.4" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (13 samples, 0.07%)</title><rect x="928.4" y="1363.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (13 samples, 0.07%)</title><rect x="928.4" y="1347.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (13 samples, 0.07%)</title><rect x="928.4" y="1331.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (13 samples, 0.07%)</title><rect x="928.4" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (11 samples, 0.06%)</title><rect x="928.4" y="1299.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.04%)</title><rect x="928.5" y="1283.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (8 samples, 0.04%)</title><rect x="928.5" y="1267.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (8 samples, 0.04%)</title><rect x="928.5" y="1251.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.04%)</title><rect x="928.5" y="1235.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.03%)</title><rect x="928.7" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (5 samples, 0.03%)</title><rect x="928.7" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (7 samples, 0.04%)</title><rect x="929.5" y="1427.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (7 samples, 0.04%)</title><rect x="929.5" y="1411.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (7 samples, 0.04%)</title><rect x="929.5" y="1395.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (5 samples, 0.03%)</title><rect x="930.0" y="1459.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.0" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (5 samples, 0.03%)</title><rect x="930.0" y="1443.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.0" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (5 samples, 0.03%)</title><rect x="930.0" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (5 samples, 0.03%)</title><rect x="930.5" y="1475.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (101 samples, 0.52%)</title><rect x="931.4" y="1555.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.4" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (101 samples, 0.52%)</title><rect x="931.4" y="1539.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (100 samples, 0.51%)</title><rect x="931.5" y="1523.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="934.5" y="1534.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.04%)</title><rect x="931.5" y="1507.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="934.5" y="1518.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (91 samples, 0.47%)</title><rect x="932.0" y="1507.0" width="5.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="935.0" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 0.42%)</title><rect x="932.5" y="1491.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.5" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 0.42%)</title><rect x="932.5" y="1475.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.5" y="1486.0"></text>
</g>
<g>
<title>sys_futex (83 samples, 0.42%)</title><rect x="932.5" y="1459.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.5" y="1470.0"></text>
</g>
<g>
<title>do_futex (83 samples, 0.42%)</title><rect x="932.5" y="1443.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.5" y="1454.0"></text>
</g>
<g>
<title>futex_wake (83 samples, 0.42%)</title><rect x="932.5" y="1427.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="935.5" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (77 samples, 0.39%)</title><rect x="932.8" y="1411.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.8" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (77 samples, 0.39%)</title><rect x="932.8" y="1395.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.8" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (77 samples, 0.39%)</title><rect x="932.8" y="1379.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="935.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (407 samples, 2.08%)</title><rect x="937.8" y="1571.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.8" y="1582.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (366 samples, 1.87%)</title><rect x="940.3" y="1555.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.3" y="1566.0">j..</text>
</g>
<g>
<title>Unsafe_Park (134 samples, 0.69%)</title><rect x="941.0" y="1539.0" width="8.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="944.0" y="1550.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.03%)</title><rect x="942.4" y="1523.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="945.4" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.16%)</title><rect x="942.9" y="1523.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="945.9" y="1534.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (7 samples, 0.04%)</title><rect x="944.8" y="1523.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="947.8" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.03%)</title><rect x="945.3" y="1523.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="948.3" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (20 samples, 0.10%)</title><rect x="945.6" y="1523.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="948.6" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="946.2" y="1507.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="949.2" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="946.2" y="1491.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="949.2" y="1502.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.03%)</title><rect x="946.3" y="1475.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.3" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="946.8" y="1523.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="949.8" y="1534.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="947.3" y="1523.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="950.3" y="1534.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (9 samples, 0.05%)</title><rect x="948.2" y="1523.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (220 samples, 1.12%)</title><rect x="949.1" y="1539.0" width="13.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="952.1" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_wait (189 samples, 0.97%)</title><rect x="949.3" y="1523.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="952.3" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (175 samples, 0.89%)</title><rect x="950.2" y="1507.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.2" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (171 samples, 0.87%)</title><rect x="950.2" y="1491.0" width="10.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.2" y="1502.0"></text>
</g>
<g>
<title>sys_futex (150 samples, 0.77%)</title><rect x="951.4" y="1475.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="954.4" y="1486.0"></text>
</g>
<g>
<title>do_futex (141 samples, 0.72%)</title><rect x="951.7" y="1459.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="954.7" y="1470.0"></text>
</g>
<g>
<title>futex_wait (134 samples, 0.69%)</title><rect x="951.9" y="1443.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="954.9" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (98 samples, 0.50%)</title><rect x="952.1" y="1427.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.1" y="1438.0"></text>
</g>
<g>
<title>schedule (92 samples, 0.47%)</title><rect x="952.5" y="1411.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="955.5" y="1422.0"></text>
</g>
<g>
<title>__schedule (86 samples, 0.44%)</title><rect x="952.8" y="1395.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.8" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (76 samples, 0.39%)</title><rect x="953.4" y="1379.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="956.4" y="1390.0"></text>
</g>
<g>
<title>futex_wait_setup (28 samples, 0.14%)</title><rect x="958.0" y="1427.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.0" y="1438.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.04%)</title><rect x="958.9" y="1411.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="961.9" y="1422.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.03%)</title><rect x="959.4" y="1411.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.4" y="1422.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="960.2" y="1459.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="963.2" y="1470.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (10 samples, 0.05%)</title><rect x="960.8" y="1523.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="963.8" y="1534.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (14 samples, 0.07%)</title><rect x="961.4" y="1523.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="964.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (480 samples, 2.45%)</title><rect x="962.4" y="1571.0" width="28.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.4" y="1582.0">ja..</text>
</g>
<g>
<title>gettimeofday (10 samples, 0.05%)</title><rect x="962.7" y="1555.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="965.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (381 samples, 1.95%)</title><rect x="963.3" y="1555.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.3" y="1566.0">j..</text>
</g>
<g>
<title>Unsafe_Park (160 samples, 0.82%)</title><rect x="964.2" y="1539.0" width="9.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="967.2" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (9 samples, 0.05%)</title><rect x="964.6" y="1523.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="967.6" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (86 samples, 0.44%)</title><rect x="965.2" y="1523.0" width="5.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="968.2" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (72 samples, 0.37%)</title><rect x="966.0" y="1507.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="969.0" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (70 samples, 0.36%)</title><rect x="966.2" y="1491.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="969.2" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.15%)</title><rect x="968.6" y="1475.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.6" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.15%)</title><rect x="968.6" y="1459.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="971.6" y="1470.0"></text>
</g>
<g>
<title>sys_gettimeofday (9 samples, 0.05%)</title><rect x="969.8" y="1443.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="972.8" y="1454.0"></text>
</g>
<g>
<title>getnstimeofday64 (9 samples, 0.05%)</title><rect x="969.8" y="1427.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.8" y="1438.0"></text>
</g>
<g>
<title>__getnstimeofday64 (9 samples, 0.05%)</title><rect x="969.8" y="1411.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="972.8" y="1422.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (9 samples, 0.05%)</title><rect x="969.8" y="1395.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.8" y="1406.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (9 samples, 0.05%)</title><rect x="969.8" y="1379.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="972.8" y="1390.0"></text>
</g>
<g>
<title>__lll_unlock_wake (26 samples, 0.13%)</title><rect x="970.6" y="1523.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="973.6" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="971.6" y="1507.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="974.6" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="971.6" y="1491.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.6" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.03%)</title><rect x="972.2" y="1523.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="975.2" y="1534.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="973.1" y="1523.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.1" y="1534.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (5 samples, 0.03%)</title><rect x="974.1" y="1539.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="977.1" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (185 samples, 0.95%)</title><rect x="974.4" y="1539.0" width="11.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="977.4" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (168 samples, 0.86%)</title><rect x="975.4" y="1523.0" width="10.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.4" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (163 samples, 0.83%)</title><rect x="975.4" y="1507.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.4" y="1518.0"></text>
</g>
<g>
<title>sys_futex (137 samples, 0.70%)</title><rect x="977.0" y="1491.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.0" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="977.3" y="1475.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.3" y="1486.0"></text>
</g>
<g>
<title>do_futex (123 samples, 0.63%)</title><rect x="977.6" y="1475.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="980.6" y="1486.0"></text>
</g>
<g>
<title>futex_wait (112 samples, 0.57%)</title><rect x="978.0" y="1459.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.0" y="1470.0"></text>
</g>
<g>
<title>__hrtimer_init (5 samples, 0.03%)</title><rect x="978.5" y="1443.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="981.5" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (75 samples, 0.38%)</title><rect x="978.8" y="1443.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.8" y="1454.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (23 samples, 0.12%)</title><rect x="979.0" y="1427.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="982.0" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.11%)</title><rect x="979.1" y="1411.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.1" y="1422.0"></text>
</g>
<g>
<title>schedule (48 samples, 0.25%)</title><rect x="980.5" y="1427.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="983.5" y="1438.0"></text>
</g>
<g>
<title>__schedule (48 samples, 0.25%)</title><rect x="980.5" y="1411.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.5" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (47 samples, 0.24%)</title><rect x="980.5" y="1395.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="983.5" y="1406.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.08%)</title><rect x="983.3" y="1443.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="986.3" y="1454.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.03%)</title><rect x="985.3" y="1507.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="988.3" y="1518.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="985.6" y="1539.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="988.6" y="1550.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.03%)</title><rect x="985.9" y="1539.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="988.9" y="1550.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (84 samples, 0.43%)</title><rect x="986.2" y="1555.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="989.2" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (82 samples, 0.42%)</title><rect x="986.4" y="1539.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="989.4" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.19%)</title><rect x="989.0" y="1523.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="992.0" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.18%)</title><rect x="989.0" y="1507.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.0" y="1518.0"></text>
</g>
<g>
<title>sys_gettimeofday (19 samples, 0.10%)</title><rect x="989.9" y="1491.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.9" y="1502.0"></text>
</g>
<g>
<title>getnstimeofday64 (14 samples, 0.07%)</title><rect x="990.2" y="1475.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="993.2" y="1486.0"></text>
</g>
<g>
<title>__getnstimeofday64 (14 samples, 0.07%)</title><rect x="990.2" y="1459.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="993.2" y="1470.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (8 samples, 0.04%)</title><rect x="990.6" y="1443.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.6" y="1454.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (8 samples, 0.04%)</title><rect x="990.6" y="1427.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.6" y="1438.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.09%)</title><rect x="991.4" y="1603.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="994.4" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.08%)</title><rect x="991.4" y="1587.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.4" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="991.4" y="1571.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.4" y="1582.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.07%)</title><rect x="991.6" y="1555.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="994.6" y="1566.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.06%)</title><rect x="991.6" y="1539.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.6" y="1550.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="991.6" y="1523.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="994.6" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="991.6" y="1507.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.6" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="991.6" y="1491.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.6" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="991.6" y="1475.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.6" y="1486.0"></text>
</g>
<g>
<title>start_thread (3,275 samples, 16.75%)</title><rect x="992.4" y="1603.0" width="197.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="995.4" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (3,275 samples, 16.75%)</title><rect x="992.4" y="1587.0" width="197.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="995.4" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (3,275 samples, 16.75%)</title><rect x="992.4" y="1571.0" width="197.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.4" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (181 samples, 0.93%)</title><rect x="992.4" y="1555.0" width="10.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="995.4" y="1566.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (145 samples, 0.74%)</title><rect x="992.4" y="1539.0" width="8.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="995.4" y="1550.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (140 samples, 0.72%)</title><rect x="992.4" y="1523.0" width="8.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.4" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (139 samples, 0.71%)</title><rect x="992.5" y="1507.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="995.5" y="1518.0"></text>
</g>
<g>
<title>G1HotCardCache::insert(signed char*) (5 samples, 0.03%)</title><rect x="992.7" y="1491.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="995.7" y="1502.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (116 samples, 0.59%)</title><rect x="993.0" y="1491.0" width="7.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="996.0" y="1502.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (16 samples, 0.08%)</title><rect x="994.4" y="1475.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="997.4" y="1486.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.04%)</title><rect x="994.9" y="1459.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.9" y="1470.0"></text>
</g>
<g>
<title>oopDesc::size() (8 samples, 0.04%)</title><rect x="995.8" y="1475.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="998.8" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (49 samples, 0.25%)</title><rect x="996.7" y="1475.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="999.7" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (5 samples, 0.03%)</title><rect x="999.3" y="1459.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.3" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (6 samples, 0.03%)</title><rect x="999.6" y="1475.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.6" y="1486.0"></text>
</g>
<g>
<title>oopDesc::size() (6 samples, 0.03%)</title><rect x="1000.0" y="1491.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1003.0" y="1502.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (6 samples, 0.03%)</title><rect x="1000.4" y="1491.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.4" y="1502.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (36 samples, 0.18%)</title><rect x="1001.1" y="1539.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1004.1" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (34 samples, 0.17%)</title><rect x="1001.1" y="1523.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1004.1" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (32 samples, 0.16%)</title><rect x="1001.3" y="1507.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1004.3" y="1518.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (5 samples, 0.03%)</title><rect x="1001.8" y="1491.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1004.8" y="1502.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (5 samples, 0.03%)</title><rect x="1001.8" y="1475.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1004.8" y="1486.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (14 samples, 0.07%)</title><rect x="1002.4" y="1491.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.4" y="1502.0"></text>
</g>
<g>
<title>GangWorker::loop() (473 samples, 2.42%)</title><rect x="1003.3" y="1555.0" width="28.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.3" y="1566.0">Ga..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (28 samples, 0.14%)</title><rect x="1003.3" y="1539.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.3" y="1550.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (26 samples, 0.13%)</title><rect x="1003.4" y="1523.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.4" y="1534.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (22 samples, 0.11%)</title><rect x="1003.7" y="1507.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1006.7" y="1518.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (15 samples, 0.08%)</title><rect x="1004.1" y="1491.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1007.1" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (12 samples, 0.06%)</title><rect x="1004.3" y="1475.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1007.3" y="1486.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (7 samples, 0.04%)</title><rect x="1004.6" y="1459.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.6" y="1470.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (14 samples, 0.07%)</title><rect x="1005.0" y="1539.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.0" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (7 samples, 0.04%)</title><rect x="1005.2" y="1523.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1008.2" y="1534.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="1005.9" y="1539.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1008.9" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (5 samples, 0.03%)</title><rect x="1005.9" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1008.9" y="1534.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="1005.9" y="1507.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1008.9" y="1518.0"></text>
</g>
<g>
<title>G1CMBitMap::clear_range(MemRegion) (5 samples, 0.03%)</title><rect x="1005.9" y="1491.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.9" y="1502.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (5 samples, 0.03%)</title><rect x="1005.9" y="1475.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1008.9" y="1486.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (393 samples, 2.01%)</title><rect x="1006.2" y="1539.0" width="23.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.2" y="1550.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (21 samples, 0.11%)</title><rect x="1006.2" y="1523.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.2" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (18 samples, 0.09%)</title><rect x="1006.2" y="1507.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1009.2" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.04%)</title><rect x="1006.9" y="1491.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.9" y="1502.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (248 samples, 1.27%)</title><rect x="1007.5" y="1523.0" width="14.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.5" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (248 samples, 1.27%)</title><rect x="1007.5" y="1507.0" width="14.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.5" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (224 samples, 1.15%)</title><rect x="1007.5" y="1491.0" width="13.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.5" y="1502.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (224 samples, 1.15%)</title><rect x="1007.5" y="1475.0" width="13.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.5" y="1486.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (223 samples, 1.14%)</title><rect x="1007.5" y="1459.0" width="13.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.5" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (212 samples, 1.08%)</title><rect x="1007.6" y="1443.0" width="12.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.6" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (18 samples, 0.09%)</title><rect x="1011.8" y="1427.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1014.8" y="1438.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.03%)</title><rect x="1012.6" y="1411.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1015.6" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.03%)</title><rect x="1012.6" y="1395.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1015.6" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="1012.6" y="1379.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1015.6" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (124 samples, 0.63%)</title><rect x="1012.9" y="1427.0" width="7.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.9" y="1438.0"></text>
</g>
<g>
<title>page_fault (14 samples, 0.07%)</title><rect x="1017.0" y="1411.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.0" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (14 samples, 0.07%)</title><rect x="1017.0" y="1395.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1020.0" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (14 samples, 0.07%)</title><rect x="1017.0" y="1379.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1020.0" y="1390.0"></text>
</g>
<g>
<title>handle_mm_fault (13 samples, 0.07%)</title><rect x="1017.0" y="1363.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.0" y="1374.0"></text>
</g>
<g>
<title>__handle_mm_fault (13 samples, 0.07%)</title><rect x="1017.0" y="1347.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1020.0" y="1358.0"></text>
</g>
<g>
<title>alloc_pages_vma (7 samples, 0.04%)</title><rect x="1017.2" y="1331.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.2" y="1342.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (7 samples, 0.04%)</title><rect x="1017.2" y="1315.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1020.2" y="1326.0"></text>
</g>
<g>
<title>clear_page_erms (6 samples, 0.03%)</title><rect x="1017.3" y="1299.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.3" y="1310.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (36 samples, 0.18%)</title><rect x="1017.8" y="1411.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.8" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.03%)</title><rect x="1020.0" y="1411.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1023.0" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (10 samples, 0.05%)</title><rect x="1020.4" y="1443.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.4" y="1454.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (10 samples, 0.05%)</title><rect x="1020.4" y="1427.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.4" y="1438.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (24 samples, 0.12%)</title><rect x="1021.0" y="1491.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.0" y="1502.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (24 samples, 0.12%)</title><rect x="1021.0" y="1475.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.0" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (13 samples, 0.07%)</title><rect x="1021.1" y="1459.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1024.1" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.04%)</title><rect x="1021.4" y="1443.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.4" y="1454.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (10 samples, 0.05%)</title><rect x="1021.8" y="1459.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.8" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.04%)</title><rect x="1021.8" y="1443.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1024.8" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.04%)</title><rect x="1021.9" y="1427.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1024.9" y="1438.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (105 samples, 0.54%)</title><rect x="1022.4" y="1523.0" width="6.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1025.4" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (105 samples, 0.54%)</title><rect x="1022.4" y="1507.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.4" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (105 samples, 0.54%)</title><rect x="1022.4" y="1491.0" width="6.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.4" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (104 samples, 0.53%)</title><rect x="1022.5" y="1475.0" width="6.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.5" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (71 samples, 0.36%)</title><rect x="1022.6" y="1459.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.6" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (41 samples, 0.21%)</title><rect x="1024.4" y="1443.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1027.4" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (16 samples, 0.08%)</title><rect x="1025.8" y="1427.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1028.8" y="1438.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (8 samples, 0.04%)</title><rect x="1026.9" y="1459.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.9" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (23 samples, 0.12%)</title><rect x="1027.3" y="1459.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.3" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (8 samples, 0.04%)</title><rect x="1028.2" y="1443.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.2" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (5 samples, 0.03%)</title><rect x="1028.4" y="1427.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1031.4" y="1438.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (19 samples, 0.10%)</title><rect x="1028.8" y="1523.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1031.8" y="1534.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (7 samples, 0.04%)</title><rect x="1028.9" y="1507.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1031.9" y="1518.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (10 samples, 0.05%)</title><rect x="1029.3" y="1507.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1032.3" y="1518.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (11 samples, 0.06%)</title><rect x="1029.9" y="1539.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1032.9" y="1550.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (18 samples, 0.09%)</title><rect x="1030.6" y="1539.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1033.6" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (18 samples, 0.09%)</title><rect x="1030.6" y="1523.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1033.6" y="1534.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (18 samples, 0.09%)</title><rect x="1030.6" y="1507.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.6" y="1518.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (5 samples, 0.03%)</title><rect x="1031.3" y="1491.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1034.3" y="1502.0"></text>
</g>
<g>
<title>JavaThread::run() (2,606 samples, 13.33%)</title><rect x="1031.9" y="1555.0" width="157.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1034.9" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2,606 samples, 13.33%)</title><rect x="1031.9" y="1539.0" width="157.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1034.9" y="1550.0">JavaThread::thread_m..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2,534 samples, 12.96%)</title><rect x="1031.9" y="1523.0" width="152.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.9" y="1534.0">CompileBroker::comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2,528 samples, 12.93%)</title><rect x="1031.9" y="1507.0" width="152.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1034.9" y="1518.0">CompileBroker::invo..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2,279 samples, 11.65%)</title><rect x="1031.9" y="1491.0" width="137.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1034.9" y="1502.0">C2Compiler::compi..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2,277 samples, 11.64%)</title><rect x="1031.9" y="1475.0" width="137.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1034.9" y="1486.0">Compile::Compile(..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (13 samples, 0.07%)</title><rect x="1031.9" y="1459.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1034.9" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (13 samples, 0.07%)</title><rect x="1031.9" y="1443.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.9" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (13 samples, 0.07%)</title><rect x="1031.9" y="1427.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1034.9" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (13 samples, 0.07%)</title><rect x="1031.9" y="1411.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1034.9" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (13 samples, 0.07%)</title><rect x="1031.9" y="1395.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.9" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (12 samples, 0.06%)</title><rect x="1032.0" y="1379.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1035.0" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (11 samples, 0.06%)</title><rect x="1032.0" y="1363.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.0" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (11 samples, 0.06%)</title><rect x="1032.0" y="1347.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.0" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (8 samples, 0.04%)</title><rect x="1032.2" y="1331.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.2" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (8 samples, 0.04%)</title><rect x="1032.2" y="1315.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1035.2" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.04%)</title><rect x="1032.2" y="1299.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.2" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (8 samples, 0.04%)</title><rect x="1032.2" y="1283.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1035.2" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (7 samples, 0.04%)</title><rect x="1032.3" y="1267.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.3" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 0.04%)</title><rect x="1032.3" y="1251.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1035.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 0.04%)</title><rect x="1032.3" y="1235.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1035.3" y="1246.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1,284 samples, 6.57%)</title><rect x="1032.7" y="1459.0" width="77.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.7" y="1470.0">Compile::..</text>
</g>
<g>
<title>Compile::Output() (49 samples, 0.25%)</title><rect x="1032.7" y="1443.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1035.7" y="1454.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (23 samples, 0.12%)</title><rect x="1033.0" y="1427.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1036.0" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (7 samples, 0.04%)</title><rect x="1034.0" y="1411.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1037.0" y="1422.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (6 samples, 0.03%)</title><rect x="1034.0" y="1395.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1037.0" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (21 samples, 0.11%)</title><rect x="1034.4" y="1427.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1037.4" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (19 samples, 0.10%)</title><rect x="1034.5" y="1411.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.5" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (10 samples, 0.05%)</title><rect x="1034.8" y="1395.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.8" y="1406.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (35 samples, 0.18%)</title><rect x="1035.7" y="1443.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.7" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (16 samples, 0.08%)</title><rect x="1036.1" y="1427.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1039.1" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (6 samples, 0.03%)</title><rect x="1036.4" y="1411.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1039.4" y="1422.0"></text>
</g>
<g>
<title>Matcher::match() (127 samples, 0.65%)</title><rect x="1038.0" y="1443.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.0" y="1454.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (13 samples, 0.07%)</title><rect x="1038.2" y="1427.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1041.2" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (104 samples, 0.53%)</title><rect x="1039.1" y="1427.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1042.1" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (21 samples, 0.11%)</title><rect x="1040.1" y="1411.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1043.1" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (9 samples, 0.05%)</title><rect x="1041.6" y="1411.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1044.6" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.03%)</title><rect x="1041.8" y="1395.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.8" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (51 samples, 0.26%)</title><rect x="1042.1" y="1411.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.1" y="1422.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (21 samples, 0.11%)</title><rect x="1042.8" y="1395.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1045.8" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (16 samples, 0.08%)</title><rect x="1043.0" y="1379.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1046.0" y="1390.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (9 samples, 0.05%)</title><rect x="1043.1" y="1363.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.1" y="1374.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (5 samples, 0.03%)</title><rect x="1043.4" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.4" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (18 samples, 0.09%)</title><rect x="1044.0" y="1395.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.0" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (11 samples, 0.06%)</title><rect x="1044.1" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.1" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (5 samples, 0.03%)</title><rect x="1045.6" y="1443.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.6" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (121 samples, 0.62%)</title><rect x="1045.9" y="1443.0" width="7.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.9" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (5 samples, 0.03%)</title><rect x="1045.9" y="1427.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.9" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (113 samples, 0.58%)</title><rect x="1046.4" y="1427.0" width="6.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1049.4" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (7 samples, 0.04%)</title><rect x="1046.8" y="1411.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.8" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (19 samples, 0.10%)</title><rect x="1047.2" y="1411.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.2" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (10 samples, 0.05%)</title><rect x="1047.4" y="1395.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.4" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (25 samples, 0.13%)</title><rect x="1048.3" y="1411.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.3" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (5 samples, 0.03%)</title><rect x="1048.9" y="1395.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.9" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (8 samples, 0.04%)</title><rect x="1049.8" y="1411.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.8" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (11 samples, 0.06%)</title><rect x="1050.5" y="1411.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.5" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (23 samples, 0.12%)</title><rect x="1051.4" y="1411.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.4" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (11 samples, 0.06%)</title><rect x="1052.0" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1055.0" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1052.3" y="1379.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.3" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (938 samples, 4.80%)</title><rect x="1053.5" y="1443.0" width="56.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.5" y="1454.0">PhaseC..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (10 samples, 0.05%)</title><rect x="1053.7" y="1427.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1056.7" y="1438.0"></text>
</g>
<g>
<title>Node::rematerialize() const (5 samples, 0.03%)</title><rect x="1055.3" y="1427.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1058.3" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (35 samples, 0.18%)</title><rect x="1055.6" y="1427.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1058.6" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (38 samples, 0.19%)</title><rect x="1057.7" y="1427.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.7" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.04%)</title><rect x="1058.3" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (16 samples, 0.08%)</title><rect x="1058.8" y="1411.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.05%)</title><rect x="1059.1" y="1395.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.1" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (30 samples, 0.15%)</title><rect x="1060.0" y="1427.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1063.0" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1060.3" y="1411.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (19 samples, 0.10%)</title><rect x="1060.6" y="1411.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1061.4" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1064.4" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (84 samples, 0.43%)</title><rect x="1061.8" y="1427.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (7 samples, 0.04%)</title><rect x="1066.0" y="1411.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (230 samples, 1.18%)</title><rect x="1066.9" y="1427.0" width="13.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1069.9" y="1438.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (5 samples, 0.03%)</title><rect x="1069.1" y="1411.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1072.1" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.04%)</title><rect x="1069.4" y="1411.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (21 samples, 0.11%)</title><rect x="1070.3" y="1411.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1073.3" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (93 samples, 0.48%)</title><rect x="1071.7" y="1411.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1074.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (27 samples, 0.14%)</title><rect x="1075.6" y="1395.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1078.6" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (46 samples, 0.24%)</title><rect x="1077.4" y="1411.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.4" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.04%)</title><rect x="1078.5" y="1395.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.5" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (11 samples, 0.06%)</title><rect x="1078.9" y="1395.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.9" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (9 samples, 0.05%)</title><rect x="1079.6" y="1395.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1082.6" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (8 samples, 0.04%)</title><rect x="1080.2" y="1411.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1083.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (14 samples, 0.07%)</title><rect x="1080.7" y="1427.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (7 samples, 0.04%)</title><rect x="1081.2" y="1411.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (88 samples, 0.45%)</title><rect x="1082.1" y="1427.0" width="5.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.1" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (34 samples, 0.17%)</title><rect x="1084.3" y="1411.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1087.3" y="1422.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (5 samples, 0.03%)</title><rect x="1086.3" y="1411.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.3" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (23 samples, 0.12%)</title><rect x="1087.4" y="1427.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1090.4" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (9 samples, 0.05%)</title><rect x="1088.1" y="1411.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1091.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (16 samples, 0.08%)</title><rect x="1088.8" y="1427.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1091.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (131 samples, 0.67%)</title><rect x="1089.8" y="1427.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1092.8" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (60 samples, 0.31%)</title><rect x="1093.5" y="1411.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.5" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (9 samples, 0.05%)</title><rect x="1097.1" y="1411.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1100.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (6 samples, 0.03%)</title><rect x="1097.7" y="1427.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1100.7" y="1438.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (45 samples, 0.23%)</title><rect x="1098.0" y="1427.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1101.0" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (6 samples, 0.03%)</title><rect x="1098.2" y="1411.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1101.2" y="1422.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (35 samples, 0.18%)</title><rect x="1098.6" y="1411.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1101.6" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (13 samples, 0.07%)</title><rect x="1098.8" y="1395.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.8" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (7 samples, 0.04%)</title><rect x="1099.7" y="1395.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1102.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (8 samples, 0.04%)</title><rect x="1100.2" y="1395.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (30 samples, 0.15%)</title><rect x="1100.8" y="1427.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.8" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (17 samples, 0.09%)</title><rect x="1101.5" y="1411.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (25 samples, 0.13%)</title><rect x="1102.6" y="1427.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.6" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.06%)</title><rect x="1103.4" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1106.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (9 samples, 0.05%)</title><rect x="1104.1" y="1427.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1107.1" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (6 samples, 0.03%)</title><rect x="1104.3" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.3" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (76 samples, 0.39%)</title><rect x="1104.7" y="1427.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.7" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (27 samples, 0.14%)</title><rect x="1107.6" y="1411.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.6" y="1422.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.03%)</title><rect x="1108.2" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1111.2" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.04%)</title><rect x="1108.6" y="1395.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.6" y="1406.0"></text>
</g>
<g>
<title>Compile::Optimize() (605 samples, 3.09%)</title><rect x="1110.3" y="1459.0" width="36.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.3" y="1470.0">Com..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (11 samples, 0.06%)</title><rect x="1110.4" y="1443.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1113.4" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (11 samples, 0.06%)</title><rect x="1110.4" y="1427.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1113.4" y="1438.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (5 samples, 0.03%)</title><rect x="1111.1" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.1" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (10 samples, 0.05%)</title><rect x="1111.5" y="1443.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.5" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (29 samples, 0.15%)</title><rect x="1112.1" y="1443.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.1" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (28 samples, 0.14%)</title><rect x="1112.1" y="1427.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.1" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (11 samples, 0.06%)</title><rect x="1113.1" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.1" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (9 samples, 0.05%)</title><rect x="1113.1" y="1395.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.1" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.03%)</title><rect x="1113.3" y="1379.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.3" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.03%)</title><rect x="1113.3" y="1363.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.3" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.03%)</title><rect x="1113.3" y="1347.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1116.3" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.03%)</title><rect x="1113.3" y="1331.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.3" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (5 samples, 0.03%)</title><rect x="1113.3" y="1315.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.3" y="1326.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (16 samples, 0.08%)</title><rect x="1114.0" y="1443.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.0" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (7 samples, 0.04%)</title><rect x="1114.9" y="1443.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1117.9" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (7 samples, 0.04%)</title><rect x="1114.9" y="1427.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.9" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (388 samples, 1.98%)</title><rect x="1115.6" y="1443.0" width="23.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.6" y="1454.0">P..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (9 samples, 0.05%)</title><rect x="1116.1" y="1427.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1119.1" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (5 samples, 0.03%)</title><rect x="1116.3" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (39 samples, 0.20%)</title><rect x="1117.2" y="1427.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1120.2" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (8 samples, 0.04%)</title><rect x="1119.0" y="1411.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (33 samples, 0.17%)</title><rect x="1119.6" y="1427.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (8 samples, 0.04%)</title><rect x="1121.0" y="1411.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (201 samples, 1.03%)</title><rect x="1121.6" y="1427.0" width="12.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (174 samples, 0.89%)</title><rect x="1123.1" y="1411.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (140 samples, 0.72%)</title><rect x="1124.5" y="1395.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (10 samples, 0.05%)</title><rect x="1125.7" y="1379.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (8 samples, 0.04%)</title><rect x="1125.7" y="1363.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (110 samples, 0.56%)</title><rect x="1126.3" y="1379.0" width="6.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (10 samples, 0.05%)</title><rect x="1133.0" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (12 samples, 0.06%)</title><rect x="1133.8" y="1427.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.8" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (40 samples, 0.20%)</title><rect x="1134.6" y="1427.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (8 samples, 0.04%)</title><rect x="1135.6" y="1411.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (15 samples, 0.08%)</title><rect x="1136.1" y="1411.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (24 samples, 0.12%)</title><rect x="1137.1" y="1427.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.1" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (22 samples, 0.11%)</title><rect x="1137.1" y="1411.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.1" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (6 samples, 0.03%)</title><rect x="1138.1" y="1395.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.1" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (6 samples, 0.03%)</title><rect x="1138.1" y="1379.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.1" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1138.1" y="1363.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.1" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1138.1" y="1347.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.1" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1138.1" y="1331.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.1" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.1" y="1315.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.1" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.1" y="1299.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.1" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.1" y="1283.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.1" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.1" y="1267.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.1" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (97 samples, 0.50%)</title><rect x="1139.3" y="1443.0" width="5.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.3" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (95 samples, 0.49%)</title><rect x="1139.4" y="1427.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1142.4" y="1438.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (10 samples, 0.05%)</title><rect x="1139.9" y="1411.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.9" y="1422.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (5 samples, 0.03%)</title><rect x="1140.2" y="1395.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1143.2" y="1406.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (8 samples, 0.04%)</title><rect x="1140.6" y="1411.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.6" y="1422.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (8 samples, 0.04%)</title><rect x="1141.5" y="1411.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (7 samples, 0.04%)</title><rect x="1142.1" y="1411.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (6 samples, 0.03%)</title><rect x="1142.1" y="1395.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.1" y="1406.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (5 samples, 0.03%)</title><rect x="1142.5" y="1411.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.5" y="1422.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (13 samples, 0.07%)</title><rect x="1142.9" y="1411.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.9" y="1422.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (5 samples, 0.03%)</title><rect x="1143.4" y="1395.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.4" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (21 samples, 0.11%)</title><rect x="1143.7" y="1411.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.7" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (21 samples, 0.11%)</title><rect x="1143.7" y="1395.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (21 samples, 0.11%)</title><rect x="1143.7" y="1379.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.7" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (21 samples, 0.11%)</title><rect x="1143.7" y="1363.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.7" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (20 samples, 0.10%)</title><rect x="1143.7" y="1347.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.7" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (17 samples, 0.09%)</title><rect x="1143.7" y="1331.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.7" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (16 samples, 0.08%)</title><rect x="1143.7" y="1315.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.7" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (16 samples, 0.08%)</title><rect x="1143.7" y="1299.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (16 samples, 0.08%)</title><rect x="1143.7" y="1283.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.7" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.07%)</title><rect x="1143.7" y="1267.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.7" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.06%)</title><rect x="1143.7" y="1251.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.7" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.06%)</title><rect x="1143.7" y="1235.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.7" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.06%)</title><rect x="1143.7" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.7" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.06%)</title><rect x="1143.7" y="1203.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.05%)</title><rect x="1143.7" y="1187.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.7" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.05%)</title><rect x="1143.7" y="1171.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.7" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.04%)</title><rect x="1143.7" y="1155.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.7" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1143.7" y="1139.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.7" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1143.7" y="1123.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.7" y="1134.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (12 samples, 0.06%)</title><rect x="1145.3" y="1443.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.3" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (11 samples, 0.06%)</title><rect x="1145.3" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.05%)</title><rect x="1145.4" y="1411.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.4" y="1422.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (10 samples, 0.05%)</title><rect x="1146.0" y="1443.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.0" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (8 samples, 0.04%)</title><rect x="1146.1" y="1427.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.1" y="1438.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (14 samples, 0.07%)</title><rect x="1146.8" y="1459.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.8" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (10 samples, 0.05%)</title><rect x="1146.8" y="1443.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.8" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.05%)</title><rect x="1146.8" y="1427.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.8" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.05%)</title><rect x="1146.8" y="1411.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.05%)</title><rect x="1146.8" y="1395.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.8" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.05%)</title><rect x="1146.8" y="1379.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.8" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.05%)</title><rect x="1146.8" y="1363.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.8" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.05%)</title><rect x="1146.8" y="1347.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.8" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.05%)</title><rect x="1146.8" y="1331.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.8" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.05%)</title><rect x="1146.8" y="1315.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.05%)</title><rect x="1146.8" y="1299.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.05%)</title><rect x="1146.8" y="1283.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.8" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.05%)</title><rect x="1146.8" y="1267.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.8" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.04%)</title><rect x="1146.8" y="1251.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1146.9" y="1235.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.9" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1146.9" y="1219.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1146.9" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1146.9" y="1187.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1146.9" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.9" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (327 samples, 1.67%)</title><rect x="1147.6" y="1459.0" width="19.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.6" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (327 samples, 1.67%)</title><rect x="1147.6" y="1443.0" width="19.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (325 samples, 1.66%)</title><rect x="1147.8" y="1427.0" width="19.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (325 samples, 1.66%)</title><rect x="1147.8" y="1411.0" width="19.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (325 samples, 1.66%)</title><rect x="1147.8" y="1395.0" width="19.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.8" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (305 samples, 1.56%)</title><rect x="1148.0" y="1379.0" width="18.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.0" y="1390.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (15 samples, 0.08%)</title><rect x="1148.0" y="1363.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.0" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (11 samples, 0.06%)</title><rect x="1148.2" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.2" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (9 samples, 0.05%)</title><rect x="1148.3" y="1331.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (9 samples, 0.05%)</title><rect x="1148.3" y="1315.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.3" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (9 samples, 0.05%)</title><rect x="1148.3" y="1299.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.3" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.05%)</title><rect x="1148.3" y="1283.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.3" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.05%)</title><rect x="1148.3" y="1267.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.3" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (8 samples, 0.04%)</title><rect x="1148.4" y="1251.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.4" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (6 samples, 0.03%)</title><rect x="1148.5" y="1235.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.5" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (5 samples, 0.03%)</title><rect x="1148.5" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.5" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (5 samples, 0.03%)</title><rect x="1148.5" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.5" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (5 samples, 0.03%)</title><rect x="1148.5" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.5" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (222 samples, 1.14%)</title><rect x="1149.0" y="1363.0" width="13.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.0" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (222 samples, 1.14%)</title><rect x="1149.0" y="1347.0" width="13.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.0" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (216 samples, 1.10%)</title><rect x="1149.3" y="1331.0" width="13.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (216 samples, 1.10%)</title><rect x="1149.3" y="1315.0" width="13.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (213 samples, 1.09%)</title><rect x="1149.5" y="1299.0" width="12.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (204 samples, 1.04%)</title><rect x="1149.5" y="1283.0" width="12.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.5" y="1294.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.04%)</title><rect x="1149.5" y="1267.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.5" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (6 samples, 0.03%)</title><rect x="1149.6" y="1251.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.6" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (6 samples, 0.03%)</title><rect x="1149.6" y="1235.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.6" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (6 samples, 0.03%)</title><rect x="1149.6" y="1219.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.6" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (6 samples, 0.03%)</title><rect x="1149.6" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.6" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1149.6" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.6" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1149.6" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.6" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.03%)</title><rect x="1149.6" y="1155.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.6" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (175 samples, 0.89%)</title><rect x="1150.1" y="1267.0" width="10.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.1" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (175 samples, 0.89%)</title><rect x="1150.1" y="1251.0" width="10.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.1" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (170 samples, 0.87%)</title><rect x="1150.2" y="1235.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.2" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (169 samples, 0.86%)</title><rect x="1150.2" y="1219.0" width="10.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (168 samples, 0.86%)</title><rect x="1150.3" y="1203.0" width="10.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (153 samples, 0.78%)</title><rect x="1150.4" y="1187.0" width="9.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (10 samples, 0.05%)</title><rect x="1150.4" y="1171.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.4" y="1182.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (9 samples, 0.05%)</title><rect x="1150.4" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.4" y="1166.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (9 samples, 0.05%)</title><rect x="1150.4" y="1139.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (9 samples, 0.05%)</title><rect x="1150.4" y="1123.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (9 samples, 0.05%)</title><rect x="1150.4" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.05%)</title><rect x="1150.4" y="1091.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.05%)</title><rect x="1150.4" y="1075.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (8 samples, 0.04%)</title><rect x="1150.4" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.4" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (6 samples, 0.03%)</title><rect x="1150.5" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.5" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (6 samples, 0.03%)</title><rect x="1150.5" y="1027.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.5" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.03%)</title><rect x="1150.5" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.5" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.03%)</title><rect x="1150.5" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.5" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (124 samples, 0.63%)</title><rect x="1151.2" y="1171.0" width="7.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.2" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (124 samples, 0.63%)</title><rect x="1151.2" y="1155.0" width="7.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.2" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (120 samples, 0.61%)</title><rect x="1151.4" y="1139.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (118 samples, 0.60%)</title><rect x="1151.4" y="1123.0" width="7.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (116 samples, 0.59%)</title><rect x="1151.6" y="1107.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (103 samples, 0.53%)</title><rect x="1151.7" y="1091.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.7" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.04%)</title><rect x="1151.7" y="1075.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (79 samples, 0.40%)</title><rect x="1152.4" y="1075.0" width="4.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.4" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (79 samples, 0.40%)</title><rect x="1152.4" y="1059.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.4" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (77 samples, 0.39%)</title><rect x="1152.4" y="1043.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (77 samples, 0.39%)</title><rect x="1152.4" y="1027.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (74 samples, 0.38%)</title><rect x="1152.5" y="1011.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (67 samples, 0.34%)</title><rect x="1152.7" y="995.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.7" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.04%)</title><rect x="1152.7" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.7" y="990.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (6 samples, 0.03%)</title><rect x="1152.7" y="963.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.7" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (6 samples, 0.03%)</title><rect x="1152.7" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.7" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.03%)</title><rect x="1152.8" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.8" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.03%)</title><rect x="1152.8" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.8" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (54 samples, 0.28%)</title><rect x="1153.2" y="979.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.2" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (54 samples, 0.28%)</title><rect x="1153.2" y="963.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (52 samples, 0.27%)</title><rect x="1153.2" y="947.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (52 samples, 0.27%)</title><rect x="1153.2" y="931.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (51 samples, 0.26%)</title><rect x="1153.3" y="915.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (43 samples, 0.22%)</title><rect x="1153.3" y="899.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.3" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (5 samples, 0.03%)</title><rect x="1153.3" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (35 samples, 0.18%)</title><rect x="1153.7" y="883.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.7" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (35 samples, 0.18%)</title><rect x="1153.7" y="867.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (34 samples, 0.17%)</title><rect x="1153.7" y="851.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (33 samples, 0.17%)</title><rect x="1153.7" y="835.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (33 samples, 0.17%)</title><rect x="1153.7" y="819.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (28 samples, 0.14%)</title><rect x="1153.7" y="803.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.7" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.13%)</title><rect x="1153.9" y="787.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.9" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.13%)</title><rect x="1153.9" y="771.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.13%)</title><rect x="1153.9" y="755.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.13%)</title><rect x="1153.9" y="739.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.13%)</title><rect x="1153.9" y="723.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.10%)</title><rect x="1154.0" y="707.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.08%)</title><rect x="1154.1" y="691.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.1" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.08%)</title><rect x="1154.1" y="675.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.07%)</title><rect x="1154.2" y="659.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.07%)</title><rect x="1154.2" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.07%)</title><rect x="1154.2" y="627.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.07%)</title><rect x="1154.2" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.2" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.05%)</title><rect x="1154.2" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.2" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.05%)</title><rect x="1154.2" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1154.2" y="563.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1154.2" y="547.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1154.2" y="531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1154.3" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.3" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.06%)</title><rect x="1157.1" y="1075.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.1" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.04%)</title><rect x="1157.1" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.1" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.04%)</title><rect x="1157.1" y="1043.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.04%)</title><rect x="1157.1" y="1027.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.04%)</title><rect x="1157.1" y="1011.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.04%)</title><rect x="1157.1" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.04%)</title><rect x="1157.1" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (6 samples, 0.03%)</title><rect x="1158.1" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.1" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (13 samples, 0.07%)</title><rect x="1158.7" y="1171.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.06%)</title><rect x="1158.7" y="1155.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.06%)</title><rect x="1158.7" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.06%)</title><rect x="1158.7" y="1123.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.06%)</title><rect x="1158.7" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.06%)</title><rect x="1158.7" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.05%)</title><rect x="1158.7" y="1075.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1158.7" y="1059.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.7" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1158.7" y="1043.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.04%)</title><rect x="1158.7" y="1027.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.04%)</title><rect x="1158.7" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.04%)</title><rect x="1158.7" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.04%)</title><rect x="1158.7" y="979.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.7" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1158.7" y="963.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1158.7" y="947.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1158.7" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1158.7" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1158.7" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1158.7" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (10 samples, 0.05%)</title><rect x="1159.6" y="1187.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (17 samples, 0.09%)</title><rect x="1160.6" y="1267.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.6" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.08%)</title><rect x="1160.6" y="1251.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.6" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.08%)</title><rect x="1160.6" y="1235.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 0.08%)</title><rect x="1160.6" y="1219.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.08%)</title><rect x="1160.6" y="1203.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 0.08%)</title><rect x="1160.6" y="1187.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 0.08%)</title><rect x="1160.6" y="1171.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.06%)</title><rect x="1160.7" y="1155.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.06%)</title><rect x="1160.7" y="1139.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.06%)</title><rect x="1160.7" y="1123.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.06%)</title><rect x="1160.7" y="1107.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.06%)</title><rect x="1160.7" y="1091.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.05%)</title><rect x="1160.7" y="1075.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1160.7" y="1059.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.7" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1160.7" y="1043.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1160.7" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1160.7" y="1011.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1160.7" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.03%)</title><rect x="1160.7" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.7" y="990.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (59 samples, 0.30%)</title><rect x="1162.4" y="1363.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.4" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (45 samples, 0.23%)</title><rect x="1162.5" y="1347.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.5" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (45 samples, 0.23%)</title><rect x="1162.5" y="1331.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (45 samples, 0.23%)</title><rect x="1162.5" y="1315.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (45 samples, 0.23%)</title><rect x="1162.5" y="1299.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (45 samples, 0.23%)</title><rect x="1162.5" y="1283.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (44 samples, 0.22%)</title><rect x="1162.5" y="1267.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.5" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (36 samples, 0.18%)</title><rect x="1162.6" y="1251.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.6" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (36 samples, 0.18%)</title><rect x="1162.6" y="1235.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (35 samples, 0.18%)</title><rect x="1162.6" y="1219.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (35 samples, 0.18%)</title><rect x="1162.6" y="1203.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (35 samples, 0.18%)</title><rect x="1162.6" y="1187.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (33 samples, 0.17%)</title><rect x="1162.6" y="1171.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (28 samples, 0.14%)</title><rect x="1162.7" y="1155.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (28 samples, 0.14%)</title><rect x="1162.7" y="1139.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (27 samples, 0.14%)</title><rect x="1162.8" y="1123.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (27 samples, 0.14%)</title><rect x="1162.8" y="1107.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (27 samples, 0.14%)</title><rect x="1162.8" y="1091.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 0.12%)</title><rect x="1162.8" y="1075.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.8" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (19 samples, 0.10%)</title><rect x="1162.8" y="1059.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.8" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (19 samples, 0.10%)</title><rect x="1162.8" y="1043.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.10%)</title><rect x="1162.8" y="1027.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.10%)</title><rect x="1162.8" y="1011.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.10%)</title><rect x="1162.8" y="995.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.09%)</title><rect x="1162.8" y="979.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.8" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.06%)</title><rect x="1162.9" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.9" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.06%)</title><rect x="1162.9" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.05%)</title><rect x="1163.0" y="931.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.05%)</title><rect x="1163.0" y="915.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.05%)</title><rect x="1163.0" y="899.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.05%)</title><rect x="1163.0" y="883.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.0" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1163.2" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.2" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1163.2" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1163.2" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1163.2" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1163.2" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1163.2" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.2" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1164.8" y="1251.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1164.8" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.8" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1164.8" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.8" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (12 samples, 0.06%)</title><rect x="1165.3" y="1347.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.3" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.06%)</title><rect x="1165.3" y="1331.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.3" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.06%)</title><rect x="1165.3" y="1315.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.05%)</title><rect x="1165.3" y="1299.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.3" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.05%)</title><rect x="1165.3" y="1283.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.3" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1165.4" y="1267.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.05%)</title><rect x="1165.4" y="1251.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.4" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1165.4" y="1235.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.4" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1165.4" y="1219.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1165.4" y="1203.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1165.4" y="1187.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1165.4" y="1171.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.05%)</title><rect x="1165.4" y="1155.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.4" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1165.4" y="1139.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1165.4" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1165.4" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1165.4" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1165.4" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1165.4" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.4" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1165.4" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.4" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1165.4" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1165.4" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1165.4" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1165.4" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.4" y="990.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (5 samples, 0.03%)</title><rect x="1166.1" y="1363.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.1" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (5 samples, 0.03%)</title><rect x="1166.1" y="1347.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.1" y="1358.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (17 samples, 0.09%)</title><rect x="1167.5" y="1459.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.5" y="1470.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (5 samples, 0.03%)</title><rect x="1167.7" y="1443.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.7" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (10 samples, 0.05%)</title><rect x="1168.6" y="1459.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.6" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (9 samples, 0.05%)</title><rect x="1168.7" y="1443.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.7" y="1454.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (241 samples, 1.23%)</title><rect x="1169.7" y="1491.0" width="14.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.7" y="1502.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (241 samples, 1.23%)</title><rect x="1169.7" y="1475.0" width="14.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.7" y="1486.0"></text>
</g>
<g>
<title>Compilation::compile_method() (241 samples, 1.23%)</title><rect x="1169.7" y="1459.0" width="14.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.7" y="1470.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (226 samples, 1.16%)</title><rect x="1169.7" y="1443.0" width="13.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.7" y="1454.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (115 samples, 0.59%)</title><rect x="1169.7" y="1427.0" width="6.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.7" y="1438.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (7 samples, 0.04%)</title><rect x="1169.7" y="1411.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.7" y="1422.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (5 samples, 0.03%)</title><rect x="1169.8" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.8" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (5 samples, 0.03%)</title><rect x="1169.8" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.8" y="1390.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (90 samples, 0.46%)</title><rect x="1170.1" y="1411.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.1" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (90 samples, 0.46%)</title><rect x="1170.1" y="1395.0" width="5.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.1" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (90 samples, 0.46%)</title><rect x="1170.1" y="1379.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.1" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (82 samples, 0.42%)</title><rect x="1170.5" y="1363.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.5" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (80 samples, 0.41%)</title><rect x="1170.5" y="1347.0" width="4.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.5" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (71 samples, 0.36%)</title><rect x="1170.9" y="1331.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.9" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (51 samples, 0.26%)</title><rect x="1171.0" y="1315.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.0" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (51 samples, 0.26%)</title><rect x="1171.0" y="1299.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.0" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (41 samples, 0.21%)</title><rect x="1171.0" y="1283.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.0" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (41 samples, 0.21%)</title><rect x="1171.0" y="1267.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.0" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (35 samples, 0.18%)</title><rect x="1171.2" y="1251.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.2" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (25 samples, 0.13%)</title><rect x="1171.2" y="1235.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.2" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (22 samples, 0.11%)</title><rect x="1171.3" y="1219.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.3" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (17 samples, 0.09%)</title><rect x="1171.4" y="1203.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.4" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (17 samples, 0.09%)</title><rect x="1171.4" y="1187.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.4" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (14 samples, 0.07%)</title><rect x="1171.5" y="1171.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.5" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.05%)</title><rect x="1171.5" y="1155.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.5" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.05%)</title><rect x="1171.5" y="1139.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.5" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.04%)</title><rect x="1171.5" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.5" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.04%)</title><rect x="1171.5" y="1107.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.5" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.03%)</title><rect x="1171.5" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.5" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (8 samples, 0.04%)</title><rect x="1172.7" y="1235.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.7" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.04%)</title><rect x="1172.8" y="1219.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.8" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.04%)</title><rect x="1172.8" y="1203.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.8" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (6 samples, 0.03%)</title><rect x="1173.5" y="1283.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.5" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (14 samples, 0.07%)</title><rect x="1174.4" y="1315.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.4" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (14 samples, 0.07%)</title><rect x="1174.4" y="1299.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.4" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (14 samples, 0.07%)</title><rect x="1174.4" y="1283.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.4" y="1294.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (7 samples, 0.04%)</title><rect x="1174.4" y="1267.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.4" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (7 samples, 0.04%)</title><rect x="1174.8" y="1267.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.8" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 0.04%)</title><rect x="1174.8" y="1251.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.8" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 0.04%)</title><rect x="1174.8" y="1235.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.8" y="1246.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (6 samples, 0.03%)</title><rect x="1175.7" y="1411.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.7" y="1422.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (8 samples, 0.04%)</title><rect x="1176.1" y="1411.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.1" y="1422.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (8 samples, 0.04%)</title><rect x="1176.1" y="1395.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.1" y="1406.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (5 samples, 0.03%)</title><rect x="1176.2" y="1379.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.2" y="1390.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (29 samples, 0.15%)</title><rect x="1176.6" y="1427.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.6" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (17 samples, 0.09%)</title><rect x="1176.7" y="1411.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.7" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (10 samples, 0.05%)</title><rect x="1177.8" y="1411.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.8" y="1422.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (78 samples, 0.40%)</title><rect x="1178.4" y="1427.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (24 samples, 0.12%)</title><rect x="1178.4" y="1411.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.4" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (23 samples, 0.12%)</title><rect x="1178.4" y="1395.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (6 samples, 0.03%)</title><rect x="1178.5" y="1379.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.5" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (6 samples, 0.03%)</title><rect x="1178.5" y="1363.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.5" y="1374.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (5 samples, 0.03%)</title><rect x="1178.6" y="1347.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.6" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (7 samples, 0.04%)</title><rect x="1179.2" y="1379.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.2" y="1390.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (54 samples, 0.28%)</title><rect x="1179.8" y="1411.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.8" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (13 samples, 0.07%)</title><rect x="1179.9" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.9" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (13 samples, 0.07%)</title><rect x="1179.9" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.9" y="1390.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (10 samples, 0.05%)</title><rect x="1180.0" y="1363.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.0" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (5 samples, 0.03%)</title><rect x="1180.1" y="1347.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.1" y="1358.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (20 samples, 0.10%)</title><rect x="1180.6" y="1395.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.6" y="1406.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (19 samples, 0.10%)</title><rect x="1180.6" y="1379.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.6" y="1390.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (5 samples, 0.03%)</title><rect x="1181.4" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.4" y="1374.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (8 samples, 0.04%)</title><rect x="1181.9" y="1395.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.9" y="1406.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (6 samples, 0.03%)</title><rect x="1182.4" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.4" y="1406.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (15 samples, 0.08%)</title><rect x="1183.3" y="1443.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.3" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (14 samples, 0.07%)</title><rect x="1183.3" y="1427.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="1438.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (7 samples, 0.04%)</title><rect x="1183.7" y="1411.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.7" y="1422.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (24 samples, 0.12%)</title><rect x="1184.8" y="1523.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.8" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (21 samples, 0.11%)</title><rect x="1184.9" y="1507.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (21 samples, 0.11%)</title><rect x="1184.9" y="1491.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (18 samples, 0.09%)</title><rect x="1185.1" y="1475.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (10 samples, 0.05%)</title><rect x="1185.1" y="1459.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.1" y="1470.0"></text>
</g>
<g>
<title>NativeCall::destination() const (5 samples, 0.03%)</title><rect x="1185.1" y="1443.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.1" y="1454.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (5 samples, 0.03%)</title><rect x="1185.7" y="1459.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="1470.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (48 samples, 0.25%)</title><rect x="1186.2" y="1523.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.2" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (48 samples, 0.25%)</title><rect x="1186.2" y="1507.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (47 samples, 0.24%)</title><rect x="1186.3" y="1491.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="1502.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (11 samples, 0.06%)</title><rect x="1186.3" y="1475.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (6 samples, 0.03%)</title><rect x="1186.6" y="1459.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="1470.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (33 samples, 0.17%)</title><rect x="1187.1" y="1475.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1190.1" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (7 samples, 0.04%)</title><rect x="1187.2" y="1459.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.2" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (22 samples, 0.11%)</title><rect x="1187.8" y="1459.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (15 samples, 0.08%)</title><rect x="1187.9" y="1443.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="1454.0"></text>
</g>
<g>
<title>VMThread::run() (13 samples, 0.07%)</title><rect x="1189.1" y="1555.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1566.0"></text>
</g>
<g>
<title>VMThread::loop() (13 samples, 0.07%)</title><rect x="1189.1" y="1539.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.1" y="1550.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (9 samples, 0.05%)</title><rect x="1189.1" y="1523.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1534.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (5 samples, 0.03%)</title><rect x="1189.3" y="1507.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="1518.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (5 samples, 0.03%)</title><rect x="1189.3" y="1491.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.3" y="1502.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (5 samples, 0.03%)</title><rect x="1189.3" y="1475.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="1486.0"></text>
</g>
</g>
</svg>
