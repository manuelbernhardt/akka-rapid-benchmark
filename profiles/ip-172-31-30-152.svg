<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2101"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2101"> </text>
<g id="frames">
<g>
<title>all (1,589 samples, 100.00%)</title><rect x="10.0" y="2067.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2078.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.13%)</title><rect x="10.0" y="2051.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="2062.0"></text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (2 samples, 0.13%)</title><rect x="11.5" y="2051.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.5" y="2062.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (2 samples, 0.13%)</title><rect x="13.0" y="2051.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.0" y="2062.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.13%)</title><rect x="13.0" y="2035.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.0" y="2046.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.13%)</title><rect x="13.0" y="2019.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.0" y="2030.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.13%)</title><rect x="13.0" y="2003.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.0" y="2014.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.06%)</title><rect x="14.5" y="2051.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.5" y="2062.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="14.5" y="2035.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.5" y="2046.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.06%)</title><rect x="14.5" y="2019.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.5" y="2030.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.06%)</title><rect x="14.5" y="2003.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.5" y="2014.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="14.5" y="1987.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="17.5" y="1998.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.38%)</title><rect x="15.2" y="2051.0" width="4.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="18.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.01%)</title><rect x="19.7" y="2051.0" width="11.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.7" y="2062.0"></text>
</g>
<g>
<title>PhiNode::size_of() const (1 samples, 0.06%)</title><rect x="19.7" y="2035.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="19.7" y="2019.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="22.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="19.7" y="2003.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.7" y="2014.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="19.7" y="1987.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="22.7" y="1998.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="19.7" y="1971.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="22.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.19%)</title><rect x="20.4" y="2035.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.4" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="2019.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="23.4" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="2003.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="23.4" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1987.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="23.4" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1971.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1955.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="23.4" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1939.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="23.4" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1923.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="23.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1907.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.4" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1891.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="23.4" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1875.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.4" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1859.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.4" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1843.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="23.4" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1827.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1811.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1795.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1779.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.4" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1763.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="23.4" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1747.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="23.4" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1731.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1715.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="23.4" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1699.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="23.4" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1683.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="23.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1667.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="23.4" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1651.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.4" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1635.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1619.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.4" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1603.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.4" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1587.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1571.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="23.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1555.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="23.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1539.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="23.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1523.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="23.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1507.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="23.4" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1491.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="23.4" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1475.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1459.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="23.4" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1443.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="23.4" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1427.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="23.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1411.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1395.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="23.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1379.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="23.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1363.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="23.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1347.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1331.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="23.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1315.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="23.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1299.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="23.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1283.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1267.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="23.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1251.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1235.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="23.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1219.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="23.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1203.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="23.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1187.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1171.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="23.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1155.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="23.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1139.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="23.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1123.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1107.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="23.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1091.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1075.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1059.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1043.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="23.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1027.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="1011.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="995.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="23.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="979.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="23.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="963.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="23.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="947.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="931.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="915.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="899.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="23.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="883.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="23.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="867.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="23.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="851.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="23.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="835.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="819.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="803.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="787.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="771.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="755.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="739.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="23.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="723.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="707.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="23.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="691.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="675.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="23.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="659.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="643.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="627.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="23.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="611.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="595.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="579.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="23.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="563.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="547.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="531.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="23.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="515.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="23.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.13%)</title><rect x="20.4" y="499.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="483.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="23.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="467.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="23.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="451.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="23.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="435.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="419.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="403.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="23.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="387.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="23.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="371.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="23.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="355.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="23.4" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="339.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="23.4" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="323.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="307.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="291.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="23.4" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="275.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="23.4" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="20.4" y="259.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.4" y="270.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="20.4" y="243.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="23.4" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="20.4" y="227.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="23.4" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="20.4" y="211.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="23.4" y="222.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.06%)</title><rect x="20.4" y="195.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.4" y="206.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="20.4" y="179.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="23.4" y="190.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="20.4" y="163.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.4" y="174.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 0.06%)</title><rect x="20.4" y="147.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.4" y="158.0"></text>
</g>
<g>
<title>seq_read (1 samples, 0.06%)</title><rect x="20.4" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.4" y="142.0"></text>
</g>
<g>
<title>kernfs_seq_show (1 samples, 0.06%)</title><rect x="20.4" y="115.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.4" y="126.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 0.06%)</title><rect x="20.4" y="99.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.4" y="110.0"></text>
</g>
<g>
<title>seq_printf (1 samples, 0.06%)</title><rect x="20.4" y="83.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.4" y="94.0"></text>
</g>
<g>
<title>seq_vprintf (1 samples, 0.06%)</title><rect x="20.4" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.4" y="78.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.06%)</title><rect x="20.4" y="51.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.4" y="62.0"></text>
</g>
<g>
<title>format_decode (1 samples, 0.06%)</title><rect x="20.4" y="35.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.4" y="46.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="21.1" y="483.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="24.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="21.1" y="467.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="21.1" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.1" y="462.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.06%)</title><rect x="21.1" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.1" y="446.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="21.1" y="419.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="21.1" y="403.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.1" y="414.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 0.06%)</title><rect x="21.1" y="387.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.1" y="398.0"></text>
</g>
<g>
<title>seq_read (1 samples, 0.06%)</title><rect x="21.1" y="371.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>kernfs_seq_show (1 samples, 0.06%)</title><rect x="21.1" y="355.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 0.06%)</title><rect x="21.1" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>seq_printf (1 samples, 0.06%)</title><rect x="21.1" y="323.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>seq_vprintf (1 samples, 0.06%)</title><rect x="21.1" y="307.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.1" y="318.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.06%)</title><rect x="21.1" y="291.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="24.1" y="302.0"></text>
</g>
<g>
<title>number (1 samples, 0.06%)</title><rect x="21.1" y="275.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.1" y="286.0"></text>
</g>
<g>
<title>__fxstat64 (1 samples, 0.06%)</title><rect x="21.9" y="2019.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.9" y="2030.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.06%)</title><rect x="22.6" y="2035.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="25.6" y="2046.0"></text>
</g>
<g>
<title>_IO_file_close (1 samples, 0.06%)</title><rect x="23.4" y="2035.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="26.4" y="2046.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="24.1" y="2035.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="27.1" y="2046.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="24.1" y="2019.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="27.1" y="2030.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="24.1" y="2003.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="27.1" y="2014.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.13%)</title><rect x="24.9" y="2035.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="27.9" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="24.9" y="2019.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.9" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="24.9" y="2003.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="27.9" y="2014.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="25.6" y="1987.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="28.6" y="1998.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="25.6" y="1971.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.6" y="1982.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="25.6" y="1955.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.6" y="1966.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="25.6" y="1939.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.6" y="1950.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="25.6" y="1923.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.6" y="1934.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="25.6" y="1907.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.6" y="1918.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="25.6" y="1891.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="28.6" y="1902.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="26.3" y="2035.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.3" y="2046.0"></text>
</g>
<g>
<title>open64 (6 samples, 0.38%)</title><rect x="27.1" y="2035.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="30.1" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.38%)</title><rect x="27.1" y="2019.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="30.1" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.38%)</title><rect x="27.1" y="2003.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.1" y="2014.0"></text>
</g>
<g>
<title>sys_openat (6 samples, 0.38%)</title><rect x="27.1" y="1987.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="30.1" y="1998.0"></text>
</g>
<g>
<title>do_sys_open (6 samples, 0.38%)</title><rect x="27.1" y="1971.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.1" y="1982.0"></text>
</g>
<g>
<title>do_filp_open (6 samples, 0.38%)</title><rect x="27.1" y="1955.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="30.1" y="1966.0"></text>
</g>
<g>
<title>path_openat (6 samples, 0.38%)</title><rect x="27.1" y="1939.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.1" y="1950.0"></text>
</g>
<g>
<title>get_empty_filp (1 samples, 0.06%)</title><rect x="27.8" y="1923.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.8" y="1934.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.06%)</title><rect x="27.8" y="1907.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.8" y="1918.0"></text>
</g>
<g>
<title>link_path_walk (2 samples, 0.13%)</title><rect x="28.6" y="1923.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.6" y="1934.0"></text>
</g>
<g>
<title>walk_component (2 samples, 0.13%)</title><rect x="28.6" y="1907.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.6" y="1918.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.13%)</title><rect x="28.6" y="1891.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.6" y="1902.0"></text>
</g>
<g>
<title>__d_lookup (1 samples, 0.06%)</title><rect x="28.6" y="1875.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="31.6" y="1886.0"></text>
</g>
<g>
<title>follow_managed (1 samples, 0.06%)</title><rect x="29.3" y="1875.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.3" y="1886.0"></text>
</g>
<g>
<title>lookup_mnt (1 samples, 0.06%)</title><rect x="29.3" y="1859.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.3" y="1870.0"></text>
</g>
<g>
<title>__lookup_mnt (1 samples, 0.06%)</title><rect x="29.3" y="1843.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.3" y="1854.0"></text>
</g>
<g>
<title>vfs_open (2 samples, 0.13%)</title><rect x="30.1" y="1923.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.1" y="1934.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.06%)</title><rect x="30.1" y="1907.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="33.1" y="1918.0"></text>
</g>
<g>
<title>kernfs_fop_open (1 samples, 0.06%)</title><rect x="30.1" y="1891.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.1" y="1902.0"></text>
</g>
<g>
<title>seq_open (1 samples, 0.06%)</title><rect x="30.1" y="1875.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.1" y="1886.0"></text>
</g>
<g>
<title>kmem_cache_alloc_trace (1 samples, 0.06%)</title><rect x="30.1" y="1859.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.1" y="1870.0"></text>
</g>
<g>
<title>kernfs_fop_open (1 samples, 0.06%)</title><rect x="30.8" y="1907.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.8" y="1918.0"></text>
</g>
<g>
<title>[unknown_Java] (24 samples, 1.51%)</title><rect x="31.5" y="2051.0" width="17.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="34.5" y="2062.0"></text>
</g>
<g>
<title>Interpreter (24 samples, 1.51%)</title><rect x="31.5" y="2035.0" width="17.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="34.5" y="2046.0"></text>
</g>
<g>
<title>__condvar_cancel_waiting (1 samples, 0.06%)</title><rect x="49.4" y="2051.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="52.4" y="2062.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="50.1" y="2051.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="53.1" y="2062.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.82%)</title><rect x="50.8" y="2051.0" width="9.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="53.8" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.76%)</title><rect x="51.6" y="2035.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="54.6" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.76%)</title><rect x="51.6" y="2019.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.6" y="2030.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.06%)</title><rect x="51.6" y="2003.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.6" y="2014.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.69%)</title><rect x="52.3" y="2003.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="55.3" y="2014.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="53.1" y="1987.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="56.1" y="1998.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.06%)</title><rect x="53.8" y="1987.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="56.8" y="1998.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.50%)</title><rect x="54.6" y="1987.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.6" y="1998.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.50%)</title><rect x="54.6" y="1971.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.6" y="1982.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.44%)</title><rect x="55.3" y="1955.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.3" y="1966.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="55.3" y="1939.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.3" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="55.3" y="1923.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.3" y="1934.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.38%)</title><rect x="56.0" y="1939.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="59.0" y="1950.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.38%)</title><rect x="56.0" y="1923.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.0" y="1934.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.38%)</title><rect x="56.0" y="1907.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="59.0" y="1918.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="60.5" y="2051.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="63.5" y="2062.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.13%)</title><rect x="61.2" y="2051.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="64.2" y="2062.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="62.7" y="2051.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="65.7" y="2062.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.13%)</title><rect x="63.5" y="2051.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="66.5" y="2062.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.06%)</title><rect x="63.5" y="2035.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="66.5" y="2046.0"></text>
</g>
<g>
<title>_IO_vfprintf (1 samples, 0.06%)</title><rect x="64.2" y="2035.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="67.2" y="2046.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (24 samples, 1.51%)</title><rect x="65.0" y="2051.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.0" y="2062.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 1.38%)</title><rect x="65.0" y="2035.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.0" y="2046.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (21 samples, 1.32%)</title><rect x="65.7" y="2019.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.7" y="2030.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (21 samples, 1.32%)</title><rect x="65.7" y="2003.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.7" y="2014.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (21 samples, 1.32%)</title><rect x="65.7" y="1987.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.7" y="1998.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.25%)</title><rect x="65.7" y="1971.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.7" y="1982.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (4 samples, 0.25%)</title><rect x="65.7" y="1955.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.7" y="1966.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.25%)</title><rect x="65.7" y="1939.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.7" y="1950.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.25%)</title><rect x="65.7" y="1923.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.7" y="1934.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.25%)</title><rect x="65.7" y="1907.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.7" y="1918.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.25%)</title><rect x="65.7" y="1891.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.7" y="1902.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.19%)</title><rect x="65.7" y="1875.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="68.7" y="1886.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.06%)</title><rect x="65.7" y="1859.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="68.7" y="1870.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.13%)</title><rect x="66.4" y="1859.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="69.4" y="1870.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.06%)</title><rect x="66.4" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="69.4" y="1854.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.06%)</title><rect x="67.2" y="1843.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="70.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="67.9" y="1875.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="70.9" y="1886.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="67.9" y="1859.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="70.9" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="67.9" y="1843.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.9" y="1854.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="67.9" y="1827.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.9" y="1838.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.06%)</title><rect x="67.9" y="1811.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.9" y="1822.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.06%)</title><rect x="67.9" y="1795.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.9" y="1806.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.06%)</title><rect x="67.9" y="1779.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.9" y="1790.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.06%)</title><rect x="67.9" y="1763.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.9" y="1774.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.06%)</title><rect x="67.9" y="1747.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.9" y="1758.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.06%)</title><rect x="67.9" y="1731.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.9" y="1742.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.06%)</title><rect x="67.9" y="1715.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.9" y="1726.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.06%)</title><rect x="67.9" y="1699.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.9" y="1710.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="67.9" y="1683.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.9" y="1694.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="67.9" y="1667.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.9" y="1678.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="67.9" y="1651.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.9" y="1662.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.06%)</title><rect x="67.9" y="1635.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.9" y="1646.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.06%)</title><rect x="67.9" y="1619.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.9" y="1630.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.06%)</title><rect x="67.9" y="1603.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.9" y="1614.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.57 (1 samples, 0.06%)</title><rect x="67.9" y="1587.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.9" y="1598.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.06%)</title><rect x="67.9" y="1571.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.9" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (17 samples, 1.07%)</title><rect x="68.7" y="1971.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="1982.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (16 samples, 1.01%)</title><rect x="69.4" y="1955.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.4" y="1966.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (7 samples, 0.44%)</title><rect x="69.4" y="1939.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.4" y="1950.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (7 samples, 0.44%)</title><rect x="69.4" y="1923.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.4" y="1934.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (6 samples, 0.38%)</title><rect x="69.4" y="1907.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.4" y="1918.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._serializerProvider (1 samples, 0.06%)</title><rect x="69.4" y="1891.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.4" y="1902.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (5 samples, 0.31%)</title><rect x="70.2" y="1891.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.2" y="1902.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (5 samples, 0.31%)</title><rect x="70.2" y="1875.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.2" y="1886.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (5 samples, 0.31%)</title><rect x="70.2" y="1859.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.2" y="1870.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (5 samples, 0.31%)</title><rect x="70.2" y="1843.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.2" y="1854.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="70.9" y="1827.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.9" y="1838.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (1 samples, 0.06%)</title><rect x="71.6" y="1827.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.6" y="1838.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (1 samples, 0.06%)</title><rect x="71.6" y="1811.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.6" y="1822.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (1 samples, 0.06%)</title><rect x="71.6" y="1795.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="1806.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.entrySet (1 samples, 0.06%)</title><rect x="71.6" y="1779.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="1790.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="71.6" y="1763.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.6" y="1774.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedCollection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="71.6" y="1747.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.6" y="1758.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StringSerializer.serialize (1 samples, 0.06%)</title><rect x="72.4" y="1827.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.4" y="1838.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="73.1" y="1827.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.1" y="1838.0"></text>
</g>
<g>
<title>java/io/StringWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="73.9" y="1907.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="73.9" y="1891.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.9" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (9 samples, 0.57%)</title><rect x="74.6" y="1939.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.6" y="1950.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (9 samples, 0.57%)</title><rect x="74.6" y="1923.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.6" y="1934.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="74.6" y="1907.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.6" y="1918.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (7 samples, 0.44%)</title><rect x="75.3" y="1907.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="1918.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (7 samples, 0.44%)</title><rect x="75.3" y="1891.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.3" y="1902.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (4 samples, 0.25%)</title><rect x="75.3" y="1875.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="1886.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (4 samples, 0.25%)</title><rect x="75.3" y="1859.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="1870.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (4 samples, 0.25%)</title><rect x="75.3" y="1843.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.3" y="1854.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initialize (3 samples, 0.19%)</title><rect x="75.3" y="1827.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.3" y="1838.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.compile (1 samples, 0.06%)</title><rect x="75.3" y="1811.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="75.3" y="1795.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.3" y="1806.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeDefaultCentury (2 samples, 0.13%)</title><rect x="76.1" y="1811.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.1" y="1822.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.parseAmbiguousDatesAsAfter (1 samples, 0.06%)</title><rect x="76.1" y="1795.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.1" y="1806.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.06%)</title><rect x="76.1" y="1779.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.1" y="1790.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.06%)</title><rect x="76.1" y="1763.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.1" y="1774.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.06%)</title><rect x="76.1" y="1747.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.1" y="1758.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.06%)</title><rect x="76.1" y="1731.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.1" y="1742.0"></text>
</g>
<g>
<title>java/util/Calendar.getTime (1 samples, 0.06%)</title><rect x="76.8" y="1795.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.8" y="1806.0"></text>
</g>
<g>
<title>java/util/Calendar.getTimeInMillis (1 samples, 0.06%)</title><rect x="76.8" y="1779.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.8" y="1790.0"></text>
</g>
<g>
<title>java/util/Calendar.updateTime (1 samples, 0.06%)</title><rect x="76.8" y="1763.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.8" y="1774.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeTime (1 samples, 0.06%)</title><rect x="76.8" y="1747.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.8" y="1758.0"></text>
</g>
<g>
<title>java/util/Calendar.selectFields (1 samples, 0.06%)</title><rect x="76.8" y="1731.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.8" y="1742.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (1 samples, 0.06%)</title><rect x="77.6" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.6" y="1838.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (1 samples, 0.06%)</title><rect x="77.6" y="1811.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.6" y="1822.0"></text>
</g>
<g>
<title>java/util/Calendar.defaultTimeZone (1 samples, 0.06%)</title><rect x="77.6" y="1795.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.6" y="1806.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.06%)</title><rect x="77.6" y="1779.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.6" y="1790.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.clone (1 samples, 0.06%)</title><rect x="77.6" y="1763.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.6" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (3 samples, 0.19%)</title><rect x="78.3" y="1875.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.3" y="1886.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (3 samples, 0.19%)</title><rect x="78.3" y="1859.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="1870.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.19%)</title><rect x="78.3" y="1843.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.3" y="1854.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.19%)</title><rect x="78.3" y="1827.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.3" y="1838.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (3 samples, 0.19%)</title><rect x="78.3" y="1811.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.3" y="1822.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (3 samples, 0.19%)</title><rect x="78.3" y="1795.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.06%)</title><rect x="78.3" y="1779.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.3" y="1790.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.06%)</title><rect x="79.1" y="1779.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.1" y="1790.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.06%)</title><rect x="79.1" y="1763.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.1" y="1774.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.06%)</title><rect x="79.1" y="1747.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.1" y="1758.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="79.1" y="1731.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.1" y="1742.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.setMaximumIntegerDigits (1 samples, 0.06%)</title><rect x="79.8" y="1779.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.8" y="1790.0"></text>
</g>
<g>
<title>java/text/NumberFormat.setMaximumIntegerDigits (1 samples, 0.06%)</title><rect x="79.8" y="1763.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.8" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="80.5" y="1907.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.13%)</title><rect x="81.3" y="2035.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.3" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.13%)</title><rect x="81.3" y="2019.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.3" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.13%)</title><rect x="81.3" y="2003.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.13%)</title><rect x="81.3" y="1987.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.3" y="1998.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="81.3" y="1971.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="84.3" y="1982.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="81.3" y="1955.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.3" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="82.0" y="1971.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="85.0" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="82.0" y="1955.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="85.0" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="82.0" y="1939.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.0" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="82.0" y="1923.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.0" y="1934.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="82.0" y="1907.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.0" y="1918.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="82.0" y="1891.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.0" y="1902.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="82.0" y="1875.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.0" y="1886.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="82.0" y="1859.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.0" y="1870.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="82.0" y="1843.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.0" y="1854.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="82.0" y="1827.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.0" y="1838.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="82.0" y="1811.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.0" y="1822.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main.main (78 samples, 4.91%)</title><rect x="82.8" y="2051.0" width="57.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="2062.0">io/ber..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.main (78 samples, 4.91%)</title><rect x="82.8" y="2035.0" width="57.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.8" y="2046.0">io/ber..</text>
</g>
<g>
<title>scala/App.main$ (78 samples, 4.91%)</title><rect x="82.8" y="2019.0" width="57.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="2030.0">scala/..</text>
</g>
<g>
<title>scala/App.main (78 samples, 4.91%)</title><rect x="82.8" y="2003.0" width="57.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.8" y="2014.0">scala/..</text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (78 samples, 4.91%)</title><rect x="82.8" y="1987.0" width="57.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.8" y="1998.0">scala/..</text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (78 samples, 4.91%)</title><rect x="82.8" y="1971.0" width="57.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.8" y="1982.0">scala/..</text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (78 samples, 4.91%)</title><rect x="82.8" y="1955.0" width="57.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="1966.0">scala/..</text>
</g>
<g>
<title>scala/App$$Lambda$1/874088044.apply (78 samples, 4.91%)</title><rect x="82.8" y="1939.0" width="57.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.8" y="1950.0">scala/..</text>
</g>
<g>
<title>scala/App.$anonfun$main$1$adapted (78 samples, 4.91%)</title><rect x="82.8" y="1923.0" width="57.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.8" y="1934.0">scala/..</text>
</g>
<g>
<title>scala/App.$anonfun$main$1 (78 samples, 4.91%)</title><rect x="82.8" y="1907.0" width="57.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.8" y="1918.0">scala/..</text>
</g>
<g>
<title>scala/runtime/AbstractFunction0.apply$mcV$sp (78 samples, 4.91%)</title><rect x="82.8" y="1891.0" width="57.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="1902.0">scala/..</text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp$ (78 samples, 4.91%)</title><rect x="82.8" y="1875.0" width="57.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.8" y="1886.0">scala/..</text>
</g>
<g>
<title>scala/Function0.apply$mcV$sp (78 samples, 4.91%)</title><rect x="82.8" y="1859.0" width="57.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.8" y="1870.0">scala/..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$delayedInit$body.apply (78 samples, 4.91%)</title><rect x="82.8" y="1843.0" width="57.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.8" y="1854.0">io/ber..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.delayedEndpoint$io$bernhardt$akka$rapid$Main$1 (78 samples, 4.91%)</title><rect x="82.8" y="1827.0" width="57.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.8" y="1838.0">io/ber..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.start (78 samples, 4.91%)</title><rect x="82.8" y="1811.0" width="57.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.8" y="1822.0">io/ber..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.startClusterSystem (78 samples, 4.91%)</title><rect x="82.8" y="1795.0" width="57.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.8" y="1806.0">io/ber..</text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="82.8" y="1779.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="1790.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$938/2000421523.apply (1 samples, 0.06%)</title><rect x="82.8" y="1763.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="1774.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$3$adapted (1 samples, 0.06%)</title><rect x="82.8" y="1747.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.8" y="1758.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$3 (1 samples, 0.06%)</title><rect x="82.8" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.8" y="1742.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$.props (1 samples, 0.06%)</title><rect x="82.8" y="1715.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1699.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1683.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="82.8" y="1651.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.8" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="82.8" y="1635.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1619.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.8" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1603.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1587.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="82.8" y="1571.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.8" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1555.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="82.8" y="1523.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.8" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="82.8" y="1507.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="82.8" y="1491.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.8" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1475.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.8" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1459.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="82.8" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="82.8" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.8" y="1438.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="82.8" y="1411.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="85.8" y="1422.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="82.8" y="1395.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="85.8" y="1406.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="82.8" y="1379.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="85.8" y="1390.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="82.8" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="85.8" y="1374.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="82.8" y="1347.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="85.8" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="82.8" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="85.8" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="82.8" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="85.8" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="82.8" y="1299.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="85.8" y="1310.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="82.8" y="1283.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="85.8" y="1294.0"></text>
</g>
<g>
<title>scala/Option.map (77 samples, 4.85%)</title><rect x="83.5" y="1779.0" width="57.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.5" y="1790.0">scala/..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$$$Lambda$690/649630909.apply (77 samples, 4.85%)</title><rect x="83.5" y="1763.0" width="57.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.5" y="1774.0">io/ber..</text>
</g>
<g>
<title>io/bernhardt/akka/rapid/Main$.$anonfun$startClusterSystem$1 (77 samples, 4.85%)</title><rect x="83.5" y="1747.0" width="57.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.5" y="1758.0">io/ber..</text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (73 samples, 4.59%)</title><rect x="83.5" y="1731.0" width="54.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.5" y="1742.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (73 samples, 4.59%)</title><rect x="83.5" y="1715.0" width="54.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.5" y="1726.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorSystem$.apply (73 samples, 4.59%)</title><rect x="83.5" y="1699.0" width="54.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.5" y="1710.0">akka/..</text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.&lt;init&gt; (14 samples, 0.88%)</title><rect x="83.5" y="1683.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.5" y="1694.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$Settings.&lt;init&gt; (2 samples, 0.13%)</title><rect x="83.5" y="1667.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.5" y="1678.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (2 samples, 0.13%)</title><rect x="83.5" y="1651.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.5" y="1662.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (2 samples, 0.13%)</title><rect x="83.5" y="1635.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.5" y="1646.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (2 samples, 0.13%)</title><rect x="83.5" y="1619.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.5" y="1630.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (1 samples, 0.06%)</title><rect x="83.5" y="1603.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.5" y="1614.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (1 samples, 0.06%)</title><rect x="83.5" y="1587.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.5" y="1598.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (1 samples, 0.06%)</title><rect x="83.5" y="1571.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.5" y="1582.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (1 samples, 0.06%)</title><rect x="83.5" y="1555.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.5" y="1566.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValid (1 samples, 0.06%)</title><rect x="83.5" y="1539.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.5" y="1550.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.checkValidObject (1 samples, 0.06%)</title><rect x="83.5" y="1523.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.5" y="1534.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.entrySet (1 samples, 0.06%)</title><rect x="83.5" y="1507.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.5" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.entrySet (1 samples, 0.06%)</title><rect x="84.3" y="1603.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.3" y="1614.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="84.3" y="1587.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.3" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="84.3" y="1571.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.3" y="1582.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="84.3" y="1555.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="1566.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1539.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="1550.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="1534.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mapHash (1 samples, 0.06%)</title><rect x="84.3" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1491.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="1502.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mapHash (1 samples, 0.06%)</title><rect x="84.3" y="1475.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.3" y="1486.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigList.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1459.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.3" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1443.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCodeRange (1 samples, 0.06%)</title><rect x="84.3" y="1427.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.3" y="1438.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.hashCode (1 samples, 0.06%)</title><rect x="84.3" y="1411.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree1$1 (10 samples, 0.63%)</title><rect x="85.0" y="1667.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.0" y="1678.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (10 samples, 0.63%)</title><rect x="85.0" y="1651.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.0" y="1662.0"></text>
</g>
<g>
<title>scala/util/Success.flatMap (10 samples, 0.63%)</title><rect x="85.0" y="1635.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.0" y="1646.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$83/2107543287.apply (10 samples, 0.63%)</title><rect x="85.0" y="1619.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.0" y="1630.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$5 (10 samples, 0.63%)</title><rect x="85.0" y="1603.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (10 samples, 0.63%)</title><rect x="85.0" y="1587.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.0" y="1598.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (10 samples, 0.63%)</title><rect x="85.0" y="1571.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.0" y="1582.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$84/252738640.apply (10 samples, 0.63%)</title><rect x="85.0" y="1555.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.0" y="1566.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$1 (10 samples, 0.63%)</title><rect x="85.0" y="1539.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.0" y="1550.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructor (4 samples, 0.25%)</title><rect x="85.0" y="1523.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.25%)</title><rect x="85.0" y="1507.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.0" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.25%)</title><rect x="85.0" y="1491.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (4 samples, 0.25%)</title><rect x="85.0" y="1475.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.0" y="1486.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (1 samples, 0.06%)</title><rect x="85.0" y="1459.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="88.0" y="1470.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1443.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="88.0" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="88.0" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1411.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="88.0" y="1422.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.0" y="1406.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="88.0" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1363.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="88.0" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1347.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="88.0" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1331.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="88.0" y="1342.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1315.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="88.0" y="1326.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="85.0" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="88.0" y="1310.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="85.0" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.19%)</title><rect x="85.7" y="1459.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.19%)</title><rect x="85.7" y="1443.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.19%)</title><rect x="85.7" y="1427.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.19%)</title><rect x="85.7" y="1411.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.19%)</title><rect x="85.7" y="1395.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.19%)</title><rect x="85.7" y="1379.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.7" y="1390.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.19%)</title><rect x="85.7" y="1363.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.19%)</title><rect x="85.7" y="1347.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.19%)</title><rect x="85.7" y="1331.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.7" y="1342.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (3 samples, 0.19%)</title><rect x="85.7" y="1315.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="88.7" y="1326.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (3 samples, 0.19%)</title><rect x="85.7" y="1299.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="88.7" y="1310.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (3 samples, 0.19%)</title><rect x="85.7" y="1283.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="88.7" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (3 samples, 0.19%)</title><rect x="85.7" y="1267.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="88.7" y="1278.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (3 samples, 0.19%)</title><rect x="85.7" y="1251.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="88.7" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 0.19%)</title><rect x="85.7" y="1235.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="88.7" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (3 samples, 0.19%)</title><rect x="85.7" y="1219.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="88.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.13%)</title><rect x="85.7" y="1203.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.7" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (2 samples, 0.13%)</title><rect x="85.7" y="1187.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="88.7" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.47] (1 samples, 0.06%)</title><rect x="87.2" y="1203.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="90.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (6 samples, 0.38%)</title><rect x="88.0" y="1523.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (6 samples, 0.38%)</title><rect x="88.0" y="1507.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (6 samples, 0.38%)</title><rect x="88.0" y="1491.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (6 samples, 0.38%)</title><rect x="88.0" y="1475.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.&lt;init&gt; (6 samples, 0.38%)</title><rect x="88.0" y="1459.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="1470.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.&lt;init&gt; (6 samples, 0.38%)</title><rect x="88.0" y="1443.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.0" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createDeployer (2 samples, 0.13%)</title><rect x="88.0" y="1427.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.0" y="1438.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createDeployer (2 samples, 0.13%)</title><rect x="88.0" y="1411.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.0" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDeployer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="88.0" y="1395.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="1406.0"></text>
</g>
<g>
<title>akka/remote/RemoteDeployer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="88.0" y="1379.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Deployer.&lt;init&gt; (2 samples, 0.13%)</title><rect x="88.0" y="1363.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.0" y="1374.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.parseString (1 samples, 0.06%)</title><rect x="88.0" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.0" y="1358.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.parseString (1 samples, 0.06%)</title><rect x="88.0" y="1331.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.0" y="1342.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parse (1 samples, 0.06%)</title><rect x="88.0" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.0" y="1326.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.06%)</title><rect x="88.0" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.0" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.parseValue (1 samples, 0.06%)</title><rect x="88.0" y="1283.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="1294.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (1 samples, 0.06%)</title><rect x="88.0" y="1267.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.0" y="1278.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/Parseable.rawParseValue (1 samples, 0.06%)</title><rect x="88.0" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.0" y="1262.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser.parse (1 samples, 0.06%)</title><rect x="88.0" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.0" y="1246.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parse (1 samples, 0.06%)</title><rect x="88.0" y="1219.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.0" y="1230.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseObject (1 samples, 0.06%)</title><rect x="88.0" y="1203.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.0" y="1214.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigDocumentParser$ParseContext.parseKey (1 samples, 0.06%)</title><rect x="88.0" y="1187.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.0" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.06%)</title><rect x="88.0" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="91.0" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="88.0" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="91.0" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="88.0" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="91.0" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="88.0" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="88.7" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="88.7" y="1331.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="88.7" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Deployer$$Lambda$103/858818438.apply (1 samples, 0.06%)</title><rect x="88.7" y="1299.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Deployer.$anonfun$new$2$adapted (1 samples, 0.06%)</title><rect x="88.7" y="1283.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Deployer.$anonfun$new$2 (1 samples, 0.06%)</title><rect x="88.7" y="1267.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Deployer.deploy (1 samples, 0.06%)</title><rect x="88.7" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.drop$extension (1 samples, 0.06%)</title><rect x="88.7" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.slice$extension (1 samples, 0.06%)</title><rect x="88.7" y="1219.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.7" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="88.7" y="1203.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.7" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="88.7" y="1187.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.7" y="1198.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="88.7" y="1171.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="91.7" y="1182.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="88.7" y="1155.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="91.7" y="1166.0"></text>
</g>
<g>
<title>akka/remote/RemoteSettings.&lt;init&gt; (4 samples, 0.25%)</title><rect x="89.5" y="1427.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.5" y="1438.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$.apply (1 samples, 0.06%)</title><rect x="89.5" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="89.5" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="89.5" y="1379.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="89.5" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="89.5" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="89.5" y="1331.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="89.5" y="1315.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="89.5" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.5" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="89.5" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.5" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="89.5" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.5" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="89.5" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.5" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="89.5" y="1235.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.5" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.06%)</title><rect x="89.5" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.5" y="1230.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.06%)</title><rect x="89.5" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.5" y="1214.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="89.5" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.5" y="1198.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="89.5" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="89.5" y="1155.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="92.5" y="1166.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="89.5" y="1139.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="92.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="89.5" y="1123.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.5" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="89.5" y="1107.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.5" y="1118.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.06%)</title><rect x="89.5" y="1091.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.5" y="1102.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="89.5" y="1075.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.5" y="1086.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="89.5" y="1059.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.5" y="1070.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="89.5" y="1043.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.5" y="1054.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.06%)</title><rect x="89.5" y="1027.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.5" y="1038.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="89.5" y="1011.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.5" y="1022.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.06%)</title><rect x="89.5" y="995.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.5" y="1006.0"></text>
</g>
<g>
<title>akka/util/Helpers$ConfigOps$.getMillisDuration$extension (1 samples, 0.06%)</title><rect x="90.2" y="1411.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.2" y="1422.0"></text>
</g>
<g>
<title>akka/util/Helpers$ConfigOps$.getDuration$extension (1 samples, 0.06%)</title><rect x="90.2" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.2" y="1406.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.getDuration (1 samples, 0.06%)</title><rect x="90.2" y="1379.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.2" y="1390.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.parseDuration (1 samples, 0.06%)</title><rect x="90.2" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.matches (1 samples, 0.06%)</title><rect x="90.2" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.2" y="1358.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matches (1 samples, 0.06%)</title><rect x="90.2" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.2" y="1342.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.matches (1 samples, 0.06%)</title><rect x="90.2" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.2" y="1326.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.match (1 samples, 0.06%)</title><rect x="90.2" y="1299.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.2" y="1310.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Ques.match (1 samples, 0.06%)</title><rect x="90.2" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.2" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.06%)</title><rect x="90.2" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.2" y="1278.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$50/1414967210.is (1 samples, 0.06%)</title><rect x="90.2" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="90.9" y="1411.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="90.9" y="1395.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="90.9" y="1379.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="90.9" y="1363.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="90.9" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="90.9" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="90.9" y="1315.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="90.9" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="90.9" y="1283.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.9" y="1294.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="90.9" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="1278.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="90.9" y="1251.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.9" y="1262.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="90.9" y="1235.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="93.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="91.7" y="1411.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="91.7" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.06%)</title><rect x="91.7" y="1379.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.06%)</title><rect x="91.7" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.06%)</title><rect x="91.7" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.06%)</title><rect x="91.7" y="1331.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="91.7" y="1315.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="91.7" y="1299.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.shouldBeInitialized (1 samples, 0.06%)</title><rect x="91.7" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.shouldBeInitialized (1 samples, 0.06%)</title><rect x="91.7" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.shouldBeInitialized0 (1 samples, 0.06%)</title><rect x="91.7" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.7" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::should_be_initialized() const (1 samples, 0.06%)</title><rect x="91.7" y="1235.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="94.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.&lt;init&gt; (1 samples, 0.06%)</title><rect x="92.4" y="1667.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.4" y="1678.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookup (1 samples, 0.06%)</title><rect x="92.4" y="1651.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.4" y="1662.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.lookupConfigurator (1 samples, 0.06%)</title><rect x="92.4" y="1635.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.4" y="1646.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.hasPath (1 samples, 0.06%)</title><rect x="92.4" y="1619.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.4" y="1630.0"></text>
</g>
<g>
<title>akka/dispatch/CachingConfig.getPathEntry (1 samples, 0.06%)</title><rect x="92.4" y="1603.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.4" y="1614.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.atKey (1 samples, 0.06%)</title><rect x="92.4" y="1587.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.4" y="1598.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.atKey (1 samples, 0.06%)</title><rect x="92.4" y="1571.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.4" y="1582.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.atKey (1 samples, 0.06%)</title><rect x="92.4" y="1555.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.4" y="1566.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.&lt;init&gt; (1 samples, 0.06%)</title><rect x="92.4" y="1539.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.4" y="1550.0"></text>
</g>
<g>
<title>akka/event/EventStream.startStdoutLogger (1 samples, 0.06%)</title><rect x="93.2" y="1667.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.2" y="1678.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.startStdoutLogger$ (1 samples, 0.06%)</title><rect x="93.2" y="1651.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.2" y="1662.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.startStdoutLogger (1 samples, 0.06%)</title><rect x="93.2" y="1635.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.2" y="1646.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.setUpStdoutLogger (1 samples, 0.06%)</title><rect x="93.2" y="1619.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.2" y="1630.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="93.2" y="1603.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.2" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="93.2" y="1587.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="1598.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="93.2" y="1571.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="1582.0"></text>
</g>
<g>
<title>akka/event/LoggingBus$$Lambda$66/630028734.apply (1 samples, 0.06%)</title><rect x="93.2" y="1555.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="1566.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$setUpStdoutLogger$3$adapted (1 samples, 0.06%)</title><rect x="93.2" y="1539.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.2" y="1550.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$setUpStdoutLogger$3 (1 samples, 0.06%)</title><rect x="93.2" y="1523.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="1534.0"></text>
</g>
<g>
<title>akka/event/EventStream.subscribe (1 samples, 0.06%)</title><rect x="93.2" y="1507.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="1518.0"></text>
</g>
<g>
<title>akka/event/EventStream.subscribe (1 samples, 0.06%)</title><rect x="93.2" y="1491.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.2" y="1502.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe$ (1 samples, 0.06%)</title><rect x="93.2" y="1475.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.2" y="1486.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe (1 samples, 0.06%)</title><rect x="93.2" y="1459.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.2" y="1470.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.addToCache (1 samples, 0.06%)</title><rect x="93.2" y="1443.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.2" y="1454.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foldLeft (1 samples, 0.06%)</title><rect x="93.2" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.2" y="1438.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.foldLeft$ (1 samples, 0.06%)</title><rect x="93.2" y="1411.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.2" y="1422.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.foldLeft (1 samples, 0.06%)</title><rect x="93.2" y="1395.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="1406.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$77/94157402.apply (1 samples, 0.06%)</title><rect x="93.2" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="1390.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$addToCache$1 (1 samples, 0.06%)</title><rect x="93.2" y="1363.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.2" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map1.updated (1 samples, 0.06%)</title><rect x="93.2" y="1347.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.start (59 samples, 3.71%)</title><rect x="93.9" y="1683.0" width="43.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.9" y="1694.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start (59 samples, 3.71%)</title><rect x="93.9" y="1667.0" width="43.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.9" y="1678.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorSystemImpl._start$lzycompute (59 samples, 3.71%)</title><rect x="93.9" y="1651.0" width="43.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.9" y="1662.0">akka..</text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.liftedTree2$1 (59 samples, 3.71%)</title><rect x="93.9" y="1635.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="1646.0">akka..</text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.init (57 samples, 3.59%)</title><rect x="93.9" y="1619.0" width="42.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.9" y="1630.0">akka..</text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.init (57 samples, 3.59%)</title><rect x="93.9" y="1603.0" width="42.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.9" y="1614.0">akka..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (2 samples, 0.13%)</title><rect x="93.9" y="1587.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.9" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (2 samples, 0.13%)</title><rect x="93.9" y="1571.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="96.9" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (2 samples, 0.13%)</title><rect x="93.9" y="1555.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="96.9" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="93.9" y="1539.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="96.9" y="1550.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="93.9" y="1523.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="96.9" y="1534.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="93.9" y="1507.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="96.9" y="1518.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="93.9" y="1491.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="96.9" y="1502.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1539.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="97.7" y="1550.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1523.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="97.7" y="1534.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1507.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="97.7" y="1518.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1491.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="97.7" y="1502.0"></text>
</g>
<g>
<title>ClassVerifier::load_class(Symbol*, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1475.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="97.7" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1459.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="97.7" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="94.7" y="1443.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="97.7" y="1454.0"></text>
</g>
<g>
<title>ProtectionDomainEntry::object_no_keepalive() (1 samples, 0.06%)</title><rect x="94.7" y="1427.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="97.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.init (1 samples, 0.06%)</title><rect x="95.4" y="1587.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.4" y="1598.0"></text>
</g>
<g>
<title>akka/event/EventStream.startDefaultLoggers (1 samples, 0.06%)</title><rect x="95.4" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.4" y="1582.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.startDefaultLoggers$ (1 samples, 0.06%)</title><rect x="95.4" y="1555.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.4" y="1566.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.startDefaultLoggers (1 samples, 0.06%)</title><rect x="95.4" y="1539.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.4" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.map (1 samples, 0.06%)</title><rect x="95.4" y="1523.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.4" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (1 samples, 0.06%)</title><rect x="95.4" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.4" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (1 samples, 0.06%)</title><rect x="95.4" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.4" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (1 samples, 0.06%)</title><rect x="95.4" y="1475.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.4" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (1 samples, 0.06%)</title><rect x="95.4" y="1459.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.4" y="1470.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.06%)</title><rect x="95.4" y="1443.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.4" y="1454.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.06%)</title><rect x="95.4" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.4" y="1438.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (1 samples, 0.06%)</title><rect x="95.4" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.4" y="1422.0"></text>
</g>
<g>
<title>akka/event/LoggingBus$$Lambda$132/1888924788.apply (1 samples, 0.06%)</title><rect x="95.4" y="1395.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.4" y="1406.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$startDefaultLoggers$3 (1 samples, 0.06%)</title><rect x="95.4" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.4" y="1390.0"></text>
</g>
<g>
<title>scala/util/Success.map (1 samples, 0.06%)</title><rect x="95.4" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="1374.0"></text>
</g>
<g>
<title>akka/event/LoggingBus$$Lambda$135/1135278099.apply (1 samples, 0.06%)</title><rect x="95.4" y="1347.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.4" y="1358.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$startDefaultLoggers$4 (1 samples, 0.06%)</title><rect x="95.4" y="1331.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.4" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.addLogger (1 samples, 0.06%)</title><rect x="95.4" y="1315.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.systemActorOf (1 samples, 0.06%)</title><rect x="95.4" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (1 samples, 0.06%)</title><rect x="95.4" y="1283.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (1 samples, 0.06%)</title><rect x="95.4" y="1267.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (1 samples, 0.06%)</title><rect x="95.4" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (1 samples, 0.06%)</title><rect x="95.4" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.4" y="1246.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (1 samples, 0.06%)</title><rect x="95.4" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (1 samples, 0.06%)</title><rect x="95.4" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (1 samples, 0.06%)</title><rect x="95.4" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.4" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupByQueueType (1 samples, 0.06%)</title><rect x="95.4" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.4" y="1182.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.createOrNone (10 samples, 0.63%)</title><rect x="96.1" y="1587.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.1" y="1598.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$$Lambda$844/2112135199.apply (10 samples, 0.63%)</title><rect x="96.1" y="1571.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.1" y="1582.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.$anonfun$init$1 (10 samples, 0.63%)</title><rect x="96.1" y="1555.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.1" y="1566.0"></text>
</g>
<g>
<title>akka/cluster/ClusterActorRefProvider.createRemoteWatcher (10 samples, 0.63%)</title><rect x="96.1" y="1539.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.1" y="1550.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.apply (10 samples, 0.63%)</title><rect x="96.1" y="1523.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.1" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (10 samples, 0.63%)</title><rect x="96.1" y="1507.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.1" y="1518.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (10 samples, 0.63%)</title><rect x="96.1" y="1491.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.1" y="1502.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (10 samples, 0.63%)</title><rect x="96.1" y="1475.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (10 samples, 0.63%)</title><rect x="96.1" y="1459.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.1" y="1470.0"></text>
</g>
<g>
<title>akka/cluster/Cluster$.createExtension (10 samples, 0.63%)</title><rect x="96.1" y="1443.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.1" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/Cluster.&lt;init&gt; (10 samples, 0.63%)</title><rect x="96.1" y="1427.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.1" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="96.1" y="1411.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="99.1" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1395.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="99.1" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1379.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="99.1" y="1390.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1363.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="99.1" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1347.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="99.1" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1331.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="99.1" y="1342.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1315.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="99.1" y="1326.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1299.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="99.1" y="1310.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="96.1" y="1283.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="99.1" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.47] (1 samples, 0.06%)</title><rect x="96.1" y="1267.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="99.1" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/ClusterJmx.&lt;init&gt; (7 samples, 0.44%)</title><rect x="96.9" y="1411.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.getPlatformMBeanServer (7 samples, 0.44%)</title><rect x="96.9" y="1395.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.platformComponents (1 samples, 0.06%)</title><rect x="96.9" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="96.9" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.9" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="96.9" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.9" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="96.9" y="1331.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$885/1414744767.run (1 samples, 0.06%)</title><rect x="96.9" y="1315.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$static$0 (1 samples, 0.06%)</title><rect x="96.9" y="1299.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider.&lt;init&gt; (1 samples, 0.06%)</title><rect x="96.9" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/management/DefaultPlatformMBeanProvider.init (1 samples, 0.06%)</title><rect x="96.9" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="96.9" y="1251.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="99.9" y="1262.0"></text>
</g>
<g>
<title>__pread64 (1 samples, 0.06%)</title><rect x="96.9" y="1235.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="99.9" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="96.9" y="1219.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.9" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="96.9" y="1203.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.9" y="1214.0"></text>
</g>
<g>
<title>sys_pread64 (1 samples, 0.06%)</title><rect x="96.9" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.9" y="1198.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="96.9" y="1171.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.9" y="1182.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="96.9" y="1155.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.9" y="1166.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="96.9" y="1139.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.9" y="1150.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.06%)</title><rect x="96.9" y="1123.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="99.9" y="1134.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="96.9" y="1107.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.9" y="1118.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="96.9" y="1091.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.9" y="1102.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.06%)</title><rect x="96.9" y="1075.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.31%)</title><rect x="97.6" y="1379.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.6" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.31%)</title><rect x="97.6" y="1363.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.31%)</title><rect x="97.6" y="1347.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.6" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.31%)</title><rect x="97.6" y="1331.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.6" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.31%)</title><rect x="97.6" y="1315.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.31%)</title><rect x="97.6" y="1299.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.6" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (5 samples, 0.31%)</title><rect x="97.6" y="1283.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.6" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.31%)</title><rect x="97.6" y="1267.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.6" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$7$1.accept (5 samples, 0.31%)</title><rect x="97.6" y="1251.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$902/1164699452.apply (1 samples, 0.06%)</title><rect x="97.6" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$getPlatformMBeanServer$0 (1 samples, 0.06%)</title><rect x="97.6" y="1219.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="1230.0"></text>
</g>
<g>
<title>jdk/management/jfr/internal/FlightRecorderMXBeanProvider$SingleMBeanComponent.nameToMBeanMap (1 samples, 0.06%)</title><rect x="97.6" y="1203.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.6" y="1214.0"></text>
</g>
<g>
<title>jdk/management/jfr/internal/FlightRecorderMXBeanProvider.getFlightRecorderMXBean (1 samples, 0.06%)</title><rect x="97.6" y="1187.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="1198.0"></text>
</g>
<g>
<title>jdk/management/jfr/SettingDescriptorInfo$1.call (1 samples, 0.06%)</title><rect x="97.6" y="1171.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.6" y="1182.0"></text>
</g>
<g>
<title>jdk/management/jfr/SettingDescriptorInfo$1.call (1 samples, 0.06%)</title><rect x="97.6" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.6" y="1166.0"></text>
</g>
<g>
<title>jdk/management/jfr/FlightRecorderMXBeanImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.6" y="1150.0"></text>
</g>
<g>
<title>javax/management/StandardEmitterMBean.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="1123.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.6" y="1134.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.6" y="1118.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.construct (1 samples, 0.06%)</title><rect x="97.6" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.6" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanSupport.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="1075.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="1086.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="1059.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.6" y="1070.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.getPerInterface (1 samples, 0.06%)</title><rect x="97.6" y="1043.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="1054.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.getAnalyzer (1 samples, 0.06%)</title><rect x="97.6" y="1027.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="1038.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.analyzer (1 samples, 0.06%)</title><rect x="97.6" y="1011.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.6" y="1022.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="995.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.6" y="1006.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.initMaps (1 samples, 0.06%)</title><rect x="97.6" y="979.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.6" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (1 samples, 0.06%)</title><rect x="97.6" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.6" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (1 samples, 0.06%)</title><rect x="97.6" y="947.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="958.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.from (1 samples, 0.06%)</title><rect x="97.6" y="931.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.6" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericReturnType (1 samples, 0.06%)</title><rect x="97.6" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.6" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericInfo (1 samples, 0.06%)</title><rect x="97.6" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="894.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/MethodRepository.make (1 samples, 0.06%)</title><rect x="97.6" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.6" y="878.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/MethodRepository.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="851.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.6" y="862.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/ConstructorRepository.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.6" y="846.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/GenericDeclRepository.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="830.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/AbstractRepository.&lt;init&gt; (1 samples, 0.06%)</title><rect x="97.6" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.6" y="814.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/ConstructorRepository.parse (1 samples, 0.06%)</title><rect x="97.6" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="798.0"></text>
</g>
<g>
<title>sun/reflect/generics/repository/ConstructorRepository.parse (1 samples, 0.06%)</title><rect x="97.6" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.6" y="782.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseMethodSig (1 samples, 0.06%)</title><rect x="97.6" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="766.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseMethodTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.6" y="750.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFormalParameters (1 samples, 0.06%)</title><rect x="97.6" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.6" y="734.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseZeroOrMoreTypeSignatures (1 samples, 0.06%)</title><rect x="97.6" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.6" y="718.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.6" y="702.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.6" y="686.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.6" y="670.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="654.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parsePackageNameAndSimpleClassTypeSignature (1 samples, 0.06%)</title><rect x="97.6" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.6" y="638.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeArguments (1 samples, 0.06%)</title><rect x="97.6" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.6" y="622.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeArgument (1 samples, 0.06%)</title><rect x="97.6" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.6" y="606.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="97.6" y="579.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="100.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.forEach (4 samples, 0.25%)</title><rect x="98.4" y="1235.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.4" y="1246.0"></text>
</g>
<g>
<title>java/util/Collections$2.forEachRemaining (4 samples, 0.25%)</title><rect x="98.4" y="1219.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.4" y="1230.0"></text>
</g>
<g>
<title>java/util/Collections$2.tryAdvance (4 samples, 0.25%)</title><rect x="98.4" y="1203.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.4" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (4 samples, 0.25%)</title><rect x="98.4" y="1187.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$903/594916129.accept (4 samples, 0.25%)</title><rect x="98.4" y="1171.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$getPlatformMBeanServer$1 (4 samples, 0.25%)</title><rect x="98.4" y="1155.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.addMXBean (4 samples, 0.25%)</title><rect x="98.4" y="1139.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.4" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.25%)</title><rect x="98.4" y="1123.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory$$Lambda$904/1329897103.run (4 samples, 0.25%)</title><rect x="98.4" y="1107.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/management/ManagementFactory.lambda$addMXBean$7 (4 samples, 0.25%)</title><rect x="98.4" y="1091.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.4" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.registerMBean (1 samples, 0.06%)</title><rect x="98.4" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.4" y="1086.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.registerMBean (1 samples, 0.06%)</title><rect x="98.4" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.4" y="1070.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getNewMBeanClassName (1 samples, 0.06%)</title><rect x="98.4" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.4" y="1054.0"></text>
</g>
<g>
<title>com/sun/management/internal/DiagnosticCommandImpl.getMBeanInfo (1 samples, 0.06%)</title><rect x="98.4" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.4" y="1038.0"></text>
</g>
<g>
<title>com/sun/management/internal/DiagnosticCommandImpl.commandDescriptor (1 samples, 0.06%)</title><rect x="98.4" y="1011.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="1022.0"></text>
</g>
<g>
<title>javax/management/ImmutableDescriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="98.4" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.4" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="98.4" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.4" y="990.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.&lt;init&gt; (3 samples, 0.19%)</title><rect x="99.1" y="1075.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.1" y="1086.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.construct (3 samples, 0.19%)</title><rect x="99.1" y="1059.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.1" y="1070.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanSupport.&lt;init&gt; (3 samples, 0.19%)</title><rect x="99.1" y="1043.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.1" y="1054.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.&lt;init&gt; (3 samples, 0.19%)</title><rect x="99.1" y="1027.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.1" y="1038.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.getPerInterface (3 samples, 0.19%)</title><rect x="99.1" y="1011.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.1" y="1022.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.makeInterfaceMBeanInfo (2 samples, 0.13%)</title><rect x="99.1" y="995.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.1" y="1006.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.visit (2 samples, 0.13%)</title><rect x="99.1" y="979.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.1" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMaker.visitAttribute (2 samples, 0.13%)</title><rect x="99.1" y="963.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.1" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.getMBeanAttributeInfo (2 samples, 0.13%)</title><rect x="99.1" y="947.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.1" y="958.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.getMBeanAttributeInfo (2 samples, 0.13%)</title><rect x="99.1" y="931.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.1" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.typeDescriptor (1 samples, 0.06%)</title><rect x="99.1" y="915.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.1" y="926.0"></text>
</g>
<g>
<title>javax/management/ImmutableDescriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="99.1" y="899.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.1" y="910.0"></text>
</g>
<g>
<title>javax/management/openmbean/OpenMBeanAttributeInfoSupport.&lt;init&gt; (1 samples, 0.06%)</title><rect x="99.9" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.9" y="926.0"></text>
</g>
<g>
<title>javax/management/openmbean/OpenMBeanAttributeInfoSupport.comparableValueFrom (1 samples, 0.06%)</title><rect x="99.9" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.9" y="910.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.getAnalyzer (1 samples, 0.06%)</title><rect x="100.6" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.6" y="1006.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.analyzer (1 samples, 0.06%)</title><rect x="100.6" y="979.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.6" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="100.6" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.6" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanAnalyzer.initMaps (1 samples, 0.06%)</title><rect x="100.6" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.6" y="958.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (1 samples, 0.06%)</title><rect x="100.6" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.6" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.mFrom (1 samples, 0.06%)</title><rect x="100.6" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.6" y="926.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.from (1 samples, 0.06%)</title><rect x="100.6" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.6" y="910.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.&lt;init&gt; (1 samples, 0.06%)</title><rect x="100.6" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.6" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericReturnType (1 samples, 0.06%)</title><rect x="100.6" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.6" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericInfo (1 samples, 0.06%)</title><rect x="100.6" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.6" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="100.6" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="103.6" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="100.6" y="819.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="103.6" y="830.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="103.6" y="814.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="103.6" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="103.6" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="103.6" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="103.6" y="750.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="103.6" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="707.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="103.6" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="691.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="103.6" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="103.6" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="659.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="103.6" y="670.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="103.6" y="654.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="627.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="103.6" y="638.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="611.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="103.6" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="103.6" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="100.6" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="103.6" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="563.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="103.6" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="103.6" y="558.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="103.6" y="542.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="100.6" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="103.6" y="526.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="100.6" y="499.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="103.6" y="510.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="100.6" y="483.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.6" y="494.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="100.6" y="467.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.6" y="478.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="100.6" y="451.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="103.6" y="462.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="100.6" y="435.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="103.6" y="446.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="100.6" y="419.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="103.6" y="430.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="100.6" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.6" y="414.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="100.6" y="387.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="103.6" y="398.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="100.6" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.6" y="382.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="100.6" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.6" y="366.0"></text>
</g>
<g>
<title>javax/management/MBeanServerFactory.createMBeanServer (1 samples, 0.06%)</title><rect x="101.3" y="1379.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.3" y="1390.0"></text>
</g>
<g>
<title>javax/management/MBeanServerFactory.createMBeanServer (1 samples, 0.06%)</title><rect x="101.3" y="1363.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.3" y="1374.0"></text>
</g>
<g>
<title>javax/management/MBeanServerFactory.newMBeanServer (1 samples, 0.06%)</title><rect x="101.3" y="1347.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="1358.0"></text>
</g>
<g>
<title>javax/management/MBeanServerBuilder.newMBeanServerDelegate (1 samples, 0.06%)</title><rect x="101.3" y="1331.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.3" y="1342.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.newMBeanServerDelegate (1 samples, 0.06%)</title><rect x="101.3" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.3" y="1326.0"></text>
</g>
<g>
<title>javax/management/MBeanServerDelegate.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="101.3" y="1299.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.3" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="101.3" y="1283.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="104.3" y="1294.0"></text>
</g>
<g>
<title>Bytecode_invoke::verify() const (1 samples, 0.06%)</title><rect x="101.3" y="1267.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="104.3" y="1278.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView.&lt;init&gt; (1 samples, 0.06%)</title><rect x="102.1" y="1411.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.1" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$CurrentClusterState$.apply$default$1 (1 samples, 0.06%)</title><rect x="102.1" y="1395.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/EvidenceIterableFactory$Delegate.empty (1 samples, 0.06%)</title><rect x="102.1" y="1379.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$.empty (1 samples, 0.06%)</title><rect x="102.1" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.1" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.06%)</title><rect x="102.1" y="1347.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="105.1" y="1358.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.06%)</title><rect x="102.1" y="1331.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="105.1" y="1342.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="102.1" y="1315.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.1" y="1326.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="102.1" y="1299.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.1" y="1310.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="102.1" y="1283.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.1" y="1294.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="102.1" y="1267.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.1" y="1278.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.06%)</title><rect x="102.1" y="1251.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.1" y="1262.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.06%)</title><rect x="102.1" y="1235.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.1" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/ClusterSettings.&lt;init&gt; (1 samples, 0.06%)</title><rect x="102.8" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.8" y="1422.0"></text>
</g>
<g>
<title>scala/collection/convert/AsScalaExtensions$CollectionHasAsScala.asScala (1 samples, 0.06%)</title><rect x="102.8" y="1395.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/convert/AsScalaConverters.asScala$ (1 samples, 0.06%)</title><rect x="102.8" y="1379.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/convert/AsScalaConverters.asScala (1 samples, 0.06%)</title><rect x="102.8" y="1363.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="102.8" y="1347.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="102.8" y="1331.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="102.8" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="102.8" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="102.8" y="1283.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="102.8" y="1267.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (1 samples, 0.06%)</title><rect x="102.8" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.8" y="1262.0"></text>
</g>
<g>
<title>akka/remote/RemoteSettings.configureDispatcher (6 samples, 0.38%)</title><rect x="103.6" y="1587.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.6" y="1598.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Advanced (6 samples, 0.38%)</title><rect x="103.6" y="1571.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.6" y="1582.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Advanced$lzycompute$1 (6 samples, 0.38%)</title><rect x="103.6" y="1555.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.6" y="1566.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$Advanced$.&lt;init&gt; (5 samples, 0.31%)</title><rect x="103.6" y="1539.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.6" y="1550.0"></text>
</g>
<g>
<title>akka/util/Helpers$ConfigOps$.getMillisDuration$extension (1 samples, 0.06%)</title><rect x="103.6" y="1523.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.6" y="1534.0"></text>
</g>
<g>
<title>akka/util/Helpers$ConfigOps$.getDuration$extension (1 samples, 0.06%)</title><rect x="103.6" y="1507.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.6" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.getDuration (1 samples, 0.06%)</title><rect x="103.6" y="1491.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.6" y="1502.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.find (1 samples, 0.06%)</title><rect x="103.6" y="1475.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.6" y="1486.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.find (1 samples, 0.06%)</title><rect x="103.6" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.6" y="1470.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.findOrNull (1 samples, 0.06%)</title><rect x="103.6" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (3 samples, 0.19%)</title><rect x="104.3" y="1523.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (3 samples, 0.19%)</title><rect x="104.3" y="1507.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (3 samples, 0.19%)</title><rect x="104.3" y="1491.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (3 samples, 0.19%)</title><rect x="104.3" y="1475.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (3 samples, 0.19%)</title><rect x="104.3" y="1459.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (3 samples, 0.19%)</title><rect x="104.3" y="1443.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.19%)</title><rect x="104.3" y="1427.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (3 samples, 0.19%)</title><rect x="104.3" y="1411.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (3 samples, 0.19%)</title><rect x="104.3" y="1395.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (2 samples, 0.13%)</title><rect x="104.3" y="1379.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (2 samples, 0.13%)</title><rect x="104.3" y="1363.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (2 samples, 0.13%)</title><rect x="104.3" y="1347.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.3" y="1358.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (2 samples, 0.13%)</title><rect x="104.3" y="1331.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="107.3" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.13%)</title><rect x="104.3" y="1315.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.3" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="104.3" y="1299.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.3" y="1310.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (1 samples, 0.06%)</title><rect x="104.3" y="1283.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.3" y="1294.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.06%)</title><rect x="104.3" y="1267.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="107.3" y="1278.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.06%)</title><rect x="104.3" y="1251.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="107.3" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="104.3" y="1235.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.3" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="105.1" y="1299.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.1" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="105.1" y="1283.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="108.1" y="1294.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="105.1" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="108.1" y="1278.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.06%)</title><rect x="105.1" y="1251.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="108.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (1 samples, 0.06%)</title><rect x="105.8" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindTo (1 samples, 0.06%)</title><rect x="105.8" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.bindArgumentL (1 samples, 0.06%)</title><rect x="105.8" y="1347.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentL (1 samples, 0.06%)</title><rect x="105.8" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentL (1 samples, 0.06%)</title><rect x="105.8" y="1315.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentForm (1 samples, 0.06%)</title><rect x="105.8" y="1299.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor$Transform.of (1 samples, 0.06%)</title><rect x="105.8" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="106.5" y="1523.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="106.5" y="1507.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.canBeCached (1 samples, 0.06%)</title><rect x="106.5" y="1491.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrNull (1 samples, 0.06%)</title><rect x="106.5" y="1475.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (1 samples, 0.06%)</title><rect x="106.5" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.06%)</title><rect x="106.5" y="1443.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.06%)</title><rect x="106.5" y="1427.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.5" y="1438.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.06%)</title><rect x="106.5" y="1411.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="109.5" y="1422.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="106.5" y="1395.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.5" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="106.5" y="1379.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.5" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="106.5" y="1363.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="109.5" y="1374.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="106.5" y="1347.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="107.3" y="1539.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.3" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="107.3" y="1523.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="107.3" y="1507.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="107.3" y="1491.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="107.3" y="1475.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="107.3" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.3" y="1470.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="107.3" y="1443.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="107.3" y="1427.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="107.3" y="1411.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.3" y="1422.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="107.3" y="1395.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="110.3" y="1406.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="107.3" y="1379.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="110.3" y="1390.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1363.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="110.3" y="1374.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1347.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="110.3" y="1358.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1331.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="110.3" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="110.3" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="107.3" y="1299.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.3" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="110.3" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="107.3" y="1267.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.3" y="1278.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="107.3" y="1251.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.3" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.start (13 samples, 0.82%)</title><rect x="108.0" y="1587.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.0" y="1598.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.bindInboundStreams (5 samples, 0.31%)</title><rect x="108.0" y="1571.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.0" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="108.0" y="1555.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="111.0" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="108.0" y="1539.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="111.0" y="1550.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_call(Bytecodes::Code, methodHandle const&amp;, bool) (1 samples, 0.06%)</title><rect x="108.0" y="1523.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.0" y="1534.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.06%)</title><rect x="108.0" y="1507.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="111.0" y="1518.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="108.0" y="1491.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.0" y="1502.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Bind (1 samples, 0.06%)</title><rect x="108.8" y="1555.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.8" y="1566.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Bind$lzycompute$1 (1 samples, 0.06%)</title><rect x="108.8" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.8" y="1550.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$Bind$.&lt;init&gt; (1 samples, 0.06%)</title><rect x="108.8" y="1523.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.8" y="1534.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Canonical (1 samples, 0.06%)</title><rect x="108.8" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.8" y="1518.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings.Canonical$lzycompute$1 (1 samples, 0.06%)</title><rect x="108.8" y="1491.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.8" y="1502.0"></text>
</g>
<g>
<title>akka/remote/artery/ArterySettings$Canonical$.&lt;init&gt; (1 samples, 0.06%)</title><rect x="108.8" y="1475.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="108.8" y="1459.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="108.8" y="1443.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.canBeCached (1 samples, 0.06%)</title><rect x="108.8" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrNull (1 samples, 0.06%)</title><rect x="108.8" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (1 samples, 0.06%)</title><rect x="108.8" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.06%)</title><rect x="108.8" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.06%)</title><rect x="108.8" y="1363.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.8" y="1374.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.06%)</title><rect x="108.8" y="1347.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="111.8" y="1358.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="108.8" y="1331.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (2 samples, 0.13%)</title><rect x="109.5" y="1555.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.5" y="1566.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (2 samples, 0.13%)</title><rect x="109.5" y="1539.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.5" y="1550.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (2 samples, 0.13%)</title><rect x="109.5" y="1523.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.5" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (2 samples, 0.13%)</title><rect x="109.5" y="1507.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.5" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (2 samples, 0.13%)</title><rect x="109.5" y="1491.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.5" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage.createLogicAndMaterializedValue (2 samples, 0.13%)</title><rect x="109.5" y="1475.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.5" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="109.5" y="1459.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="112.5" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1443.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.5" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1427.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="112.5" y="1438.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1411.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.5" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1395.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="112.5" y="1406.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1379.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.5" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="109.5" y="1363.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="112.5" y="1374.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_parameters() (1 samples, 0.06%)</title><rect x="109.5" y="1347.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="112.5" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="110.3" y="1459.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="110.3" y="1443.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="110.3" y="1427.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="110.3" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="110.3" y="1395.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="110.3" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="110.3" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.3" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="110.3" y="1347.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="110.3" y="1331.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="110.3" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.3" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="110.3" y="1299.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="113.3" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="110.3" y="1283.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="113.3" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="110.3" y="1267.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="113.3" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="110.3" y="1251.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="113.3" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="110.3" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="113.3" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="110.3" y="1219.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="113.3" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="110.3" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.3" y="1214.0"></text>
</g>
<g>
<title>Monitor::notify_all() (1 samples, 0.06%)</title><rect x="110.3" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="113.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.bind (1 samples, 0.06%)</title><rect x="111.0" y="1555.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.0" y="1566.0"></text>
</g>
<g>
<title>akka/io/IO$.apply (1 samples, 0.06%)</title><rect x="111.0" y="1539.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.0" y="1550.0"></text>
</g>
<g>
<title>akka/io/Tcp$.apply (1 samples, 0.06%)</title><rect x="111.0" y="1523.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.0" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="111.0" y="1507.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.0" y="1518.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="111.0" y="1491.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.0" y="1502.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="111.0" y="1475.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.0" y="1486.0"></text>
</g>
<g>
<title>akka/io/Tcp$.createExtension (1 samples, 0.06%)</title><rect x="111.0" y="1459.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.0" y="1470.0"></text>
</g>
<g>
<title>akka/io/Tcp$.createExtension (1 samples, 0.06%)</title><rect x="111.0" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.0" y="1454.0"></text>
</g>
<g>
<title>akka/io/TcpExt.&lt;init&gt; (1 samples, 0.06%)</title><rect x="111.0" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.06%)</title><rect x="111.0" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Props.copy (1 samples, 0.06%)</title><rect x="111.0" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.06%)</title><rect x="111.0" y="1379.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.06%)</title><rect x="111.0" y="1363.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.06%)</title><rect x="111.0" y="1347.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="111.0" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.0" y="1342.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.06%)</title><rect x="111.0" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.06%)</title><rect x="111.0" y="1299.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.0" y="1310.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (1 samples, 0.06%)</title><rect x="111.0" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.0" y="1294.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (1 samples, 0.06%)</title><rect x="111.0" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.0" y="1278.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (1 samples, 0.06%)</title><rect x="111.0" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.forall (1 samples, 0.06%)</title><rect x="111.0" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall$ (1 samples, 0.06%)</title><rect x="111.0" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall (1 samples, 0.06%)</title><rect x="111.0" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.0" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$125/1408279755.apply (1 samples, 0.06%)</title><rect x="111.0" y="1187.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.0" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5$adapted (1 samples, 0.06%)</title><rect x="111.0" y="1171.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.0" y="1182.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5 (1 samples, 0.06%)</title><rect x="111.0" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.0" y="1166.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="111.0" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.0" y="1150.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundStreams (6 samples, 0.38%)</title><rect x="111.7" y="1571.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.7" y="1582.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundControlStream (3 samples, 0.19%)</title><rect x="111.7" y="1555.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.7" y="1566.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (3 samples, 0.19%)</title><rect x="111.7" y="1539.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="1550.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.19%)</title><rect x="111.7" y="1523.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.7" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.19%)</title><rect x="111.7" y="1507.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.7" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (3 samples, 0.19%)</title><rect x="111.7" y="1491.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.7" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (3 samples, 0.19%)</title><rect x="111.7" y="1475.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.7" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (3 samples, 0.19%)</title><rect x="111.7" y="1459.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.7" y="1470.0"></text>
</g>
<g>
<title>akka/remote/artery/Decoder.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="111.7" y="1443.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.7" y="1454.0"></text>
</g>
<g>
<title>akka/remote/artery/Decoder$$anon$2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="111.7" y="1427.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.7" y="1438.0"></text>
</g>
<g>
<title>akka/remote/artery/Decoder$InboundCompressionAccessImpl.$init$ (1 samples, 0.06%)</title><rect x="111.7" y="1411.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="111.7" y="1395.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="111.7" y="1379.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="111.7" y="1363.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="111.7" y="1347.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="111.7" y="1331.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="111.7" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="111.7" y="1299.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="111.7" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="111.7" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="111.7" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="111.7" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.06%)</title><rect x="111.7" y="1219.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.7" y="1230.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.06%)</title><rect x="111.7" y="1203.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="114.7" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="111.7" y="1187.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="114.7" y="1198.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="111.7" y="1171.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="114.7" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="111.7" y="1155.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="114.7" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="111.7" y="1139.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.7" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="111.7" y="1123.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="114.7" y="1134.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.06%)</title><rect x="111.7" y="1107.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="114.7" y="1118.0"></text>
</g>
<g>
<title>akka/remote/artery/InboundControlJunction.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="112.5" y="1443.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="112.5" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="112.5" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="112.5" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="112.5" y="1379.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="112.5" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="112.5" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.5" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="112.5" y="1331.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="112.5" y="1315.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="112.5" y="1299.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.5" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="112.5" y="1283.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="115.5" y="1294.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="112.5" y="1267.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="115.5" y="1278.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1251.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="115.5" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1235.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="115.5" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1219.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="115.5" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1203.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="115.5" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="112.5" y="1187.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="115.5" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.5" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="112.5" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="115.5" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="112.5" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="115.5" y="1150.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="112.5" y="1123.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="115.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/MergeHub.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="113.2" y="1443.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="113.2" y="1427.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="113.2" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="113.2" y="1395.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="113.2" y="1379.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="113.2" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="113.2" y="1347.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="113.2" y="1331.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.2" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="113.2" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.2" y="1326.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="113.2" y="1299.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.2" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="113.2" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.2" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="113.2" y="1267.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.2" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.06%)</title><rect x="113.2" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.2" y="1262.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.06%)</title><rect x="113.2" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.2" y="1246.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.06%)</title><rect x="113.2" y="1219.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.2" y="1230.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.runInboundOrdinaryMessagesStream (2 samples, 0.13%)</title><rect x="114.0" y="1555.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.0" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="114.0" y="1539.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="117.0" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="114.0" y="1523.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.0" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="114.0" y="1507.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="117.0" y="1518.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="114.0" y="1491.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.0" y="1502.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="114.0" y="1475.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.0" y="1486.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.06%)</title><rect x="114.0" y="1459.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="117.0" y="1470.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.06%)</title><rect x="114.0" y="1443.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="117.0" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (1 samples, 0.06%)</title><rect x="114.7" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.7" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (1 samples, 0.06%)</title><rect x="114.7" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="1534.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (1 samples, 0.06%)</title><rect x="114.7" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="1518.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (1 samples, 0.06%)</title><rect x="114.7" y="1491.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.7" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (1 samples, 0.06%)</title><rect x="114.7" y="1475.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.7" y="1486.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (1 samples, 0.06%)</title><rect x="114.7" y="1459.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.7" y="1470.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (1 samples, 0.06%)</title><rect x="114.7" y="1443.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.7" y="1454.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.06%)</title><rect x="114.7" y="1427.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="1438.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.06%)</title><rect x="114.7" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="1422.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (1 samples, 0.06%)</title><rect x="114.7" y="1395.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.06%)</title><rect x="114.7" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.7" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.06%)</title><rect x="114.7" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (1 samples, 0.06%)</title><rect x="114.7" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="1358.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport$$Lambda$825/1157199772.apply (1 samples, 0.06%)</title><rect x="114.7" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.7" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.$anonfun$runInboundOrdinaryMessagesStream$3$adapted (1 samples, 0.06%)</title><rect x="114.7" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="1326.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.$anonfun$runInboundOrdinaryMessagesStream$3 (1 samples, 0.06%)</title><rect x="114.7" y="1299.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (1 samples, 0.06%)</title><rect x="114.7" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="114.7" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="114.7" y="1251.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="114.7" y="1235.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.06%)</title><rect x="114.7" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="114.7" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="114.7" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/PartitionHub$$anon$7.createLogic (1 samples, 0.06%)</title><rect x="114.7" y="1171.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/PartitionHub$$anon$7$$anon$8.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.7" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="114.7" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="114.7" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="114.7" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="114.7" y="1091.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="114.7" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="114.7" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="114.7" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="114.7" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.7" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="114.7" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="114.7" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.7" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="114.7" y="963.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="117.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.alsoTo (1 samples, 0.06%)</title><rect x="115.4" y="1555.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.4" y="1566.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.alsoTo$ (1 samples, 0.06%)</title><rect x="115.4" y="1539.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.4" y="1550.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.alsoTo (1 samples, 0.06%)</title><rect x="115.4" y="1523.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.4" y="1534.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.alsoToGraph (1 samples, 0.06%)</title><rect x="115.4" y="1507.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.4" y="1518.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.alsoToGraph$ (1 samples, 0.06%)</title><rect x="115.4" y="1491.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.4" y="1502.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.alsoToGraph (1 samples, 0.06%)</title><rect x="115.4" y="1475.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.4" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="115.4" y="1459.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.4" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="115.4" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="115.4" y="1427.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="115.4" y="1411.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="115.4" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="115.4" y="1379.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="115.4" y="1363.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="115.4" y="1347.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="115.4" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.constant (1 samples, 0.06%)</title><rect x="115.4" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.isPrimitive (1 samples, 0.06%)</title><rect x="115.4" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.apply (1 samples, 0.06%)</title><rect x="116.2" y="1571.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.2" y="1582.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="116.2" y="1555.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.2" y="1566.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="116.2" y="1539.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.2" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="116.2" y="1523.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.2" y="1534.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.createExtension (1 samples, 0.06%)</title><rect x="116.2" y="1507.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.2" y="1518.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.createExtension (1 samples, 0.06%)</title><rect x="116.2" y="1491.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.2" y="1502.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="116.2" y="1475.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.2" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.06%)</title><rect x="116.2" y="1459.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (1 samples, 0.06%)</title><rect x="116.2" y="1443.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.2" y="1454.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.06%)</title><rect x="116.2" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.2" y="1438.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.06%)</title><rect x="116.2" y="1411.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.2" y="1422.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (1 samples, 0.06%)</title><rect x="116.2" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.2" y="1406.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (1 samples, 0.06%)</title><rect x="116.2" y="1379.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.2" y="1390.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer.createAdditionalLegacySystemMaterializer (1 samples, 0.06%)</title><rect x="116.9" y="1571.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.9" y="1582.0"></text>
</g>
<g>
<title>akka/pattern/AskableActorRef$.$qmark$default$3$extension (1 samples, 0.06%)</title><rect x="116.9" y="1555.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.9" y="1566.0"></text>
</g>
<g>
<title>akka/remote/artery/tcp/ArteryTcpTransport.&lt;init&gt; (23 samples, 1.45%)</title><rect x="117.7" y="1587.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.7" y="1598.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.&lt;init&gt; (23 samples, 1.45%)</title><rect x="117.7" y="1571.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.7" y="1582.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.06%)</title><rect x="117.7" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.7" y="1566.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.06%)</title><rect x="117.7" y="1539.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.7" y="1550.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.06%)</title><rect x="117.7" y="1523.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.7" y="1534.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.06%)</title><rect x="117.7" y="1507.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.7" y="1518.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="117.7" y="1491.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="120.7" y="1502.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="117.7" y="1475.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.7" y="1486.0"></text>
</g>
<g>
<title>nmethod::call_wrapper_at(unsigned char*) const (1 samples, 0.06%)</title><rect x="117.7" y="1459.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="120.7" y="1470.0"></text>
</g>
<g>
<title>akka/event/Logging$.withMarker (2 samples, 0.13%)</title><rect x="118.4" y="1555.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.4" y="1566.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.13%)</title><rect x="118.4" y="1539.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="119.2" y="1523.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="122.2" y="1534.0"></text>
</g>
<g>
<title>ioctl (1 samples, 0.06%)</title><rect x="119.2" y="1507.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="122.2" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="119.2" y="1491.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.2" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="119.2" y="1475.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.2" y="1486.0"></text>
</g>
<g>
<title>sys_ioctl (1 samples, 0.06%)</title><rect x="119.2" y="1459.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.2" y="1470.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.06%)</title><rect x="119.2" y="1443.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="122.2" y="1454.0"></text>
</g>
<g>
<title>perf_ioctl (1 samples, 0.06%)</title><rect x="119.2" y="1427.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.2" y="1438.0"></text>
</g>
<g>
<title>_perf_event_refresh (1 samples, 0.06%)</title><rect x="119.2" y="1411.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="122.2" y="1422.0"></text>
</g>
<g>
<title>_perf_event_enable (1 samples, 0.06%)</title><rect x="119.2" y="1395.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.2" y="1406.0"></text>
</g>
<g>
<title>event_function_call (1 samples, 0.06%)</title><rect x="119.2" y="1379.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.2" y="1390.0"></text>
</g>
<g>
<title>task_function_call (1 samples, 0.06%)</title><rect x="119.2" y="1363.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.2" y="1374.0"></text>
</g>
<g>
<title>smp_call_function_single (1 samples, 0.06%)</title><rect x="119.2" y="1347.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.2" y="1358.0"></text>
</g>
<g>
<title>generic_exec_single (1 samples, 0.06%)</title><rect x="119.2" y="1331.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.2" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/AssociationRegistry.&lt;init&gt; (1 samples, 0.06%)</title><rect x="119.9" y="1555.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.9" y="1566.0"></text>
</g>
<g>
<title>akka/remote/artery/ImmutableLongMap$.empty (1 samples, 0.06%)</title><rect x="119.9" y="1539.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.9" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="119.9" y="1523.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="119.9" y="1507.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="119.9" y="1491.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="119.9" y="1475.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="119.9" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.9" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="119.9" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.9" y="1454.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="119.9" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="119.9" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="119.9" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.9" y="1406.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="119.9" y="1379.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="122.9" y="1390.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="119.9" y="1363.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="122.9" y="1374.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="119.9" y="1347.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="122.9" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="119.9" y="1331.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="122.9" y="1342.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="119.9" y="1315.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.9" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="119.9" y="1299.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="122.9" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="119.9" y="1283.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="122.9" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="119.9" y="1267.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="122.9" y="1278.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="119.9" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="122.9" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/EnvelopeBufferPool.&lt;init&gt; (1 samples, 0.06%)</title><rect x="120.6" y="1555.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.6" y="1566.0"></text>
</g>
<g>
<title>org/agrona/concurrent/AbstractConcurrentArrayQueue.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="120.6" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="120.6" y="1523.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="120.6" y="1507.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="120.6" y="1491.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="120.6" y="1475.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="120.6" y="1459.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="120.6" y="1443.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.6" y="1454.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="120.6" y="1427.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="120.6" y="1411.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="120.6" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.6" y="1406.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="120.6" y="1379.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="123.6" y="1390.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="120.6" y="1363.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="123.6" y="1374.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="120.6" y="1347.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="123.6" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="120.6" y="1331.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.6" y="1342.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="120.6" y="1315.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.6" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="120.6" y="1299.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="123.6" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="120.6" y="1283.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.6" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="120.6" y="1267.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.6" y="1278.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="120.6" y="1251.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.6" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/RemotingFlightRecorder$.apply (2 samples, 0.13%)</title><rect x="121.4" y="1555.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.4" y="1566.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (2 samples, 0.13%)</title><rect x="121.4" y="1539.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.4" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (2 samples, 0.13%)</title><rect x="121.4" y="1523.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.4" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (2 samples, 0.13%)</title><rect x="121.4" y="1507.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="1518.0"></text>
</g>
<g>
<title>akka/remote/artery/RemotingFlightRecorder$.createExtension (2 samples, 0.13%)</title><rect x="121.4" y="1491.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.4" y="1502.0"></text>
</g>
<g>
<title>akka/remote/artery/RemotingFlightRecorder$.createExtension (2 samples, 0.13%)</title><rect x="121.4" y="1475.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.4" y="1486.0"></text>
</g>
<g>
<title>akka/event/BusLogging.warning (1 samples, 0.06%)</title><rect x="121.4" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.4" y="1470.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning$ (1 samples, 0.06%)</title><rect x="121.4" y="1443.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.4" y="1454.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.warning (1 samples, 0.06%)</title><rect x="121.4" y="1427.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.4" y="1438.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyWarning (1 samples, 0.06%)</title><rect x="121.4" y="1411.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.4" y="1422.0"></text>
</g>
<g>
<title>akka/event/Logging$Warning$.apply (1 samples, 0.06%)</title><rect x="121.4" y="1395.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="121.4" y="1379.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="124.4" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1363.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="124.4" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1347.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="124.4" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1331.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="124.4" y="1342.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1315.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="124.4" y="1326.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1299.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="124.4" y="1310.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="121.4" y="1283.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.4" y="1294.0"></text>
</g>
<g>
<title>akka/util/JavaVersion$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="122.1" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.1" y="1470.0"></text>
</g>
<g>
<title>scala/collection/StringOps$.split$extension (1 samples, 0.06%)</title><rect x="122.1" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.1" y="1454.0"></text>
</g>
<g>
<title>scala/collection/StringOps$.escape$extension (1 samples, 0.06%)</title><rect x="122.1" y="1427.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.1" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="122.1" y="1411.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="125.1" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="122.1" y="1395.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="125.1" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="122.1" y="1379.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="125.1" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="122.1" y="1363.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="125.1" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="122.1" y="1347.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="125.1" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="122.1" y="1331.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="125.1" y="1342.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="122.1" y="1315.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="125.1" y="1326.0"></text>
</g>
<g>
<title>akka/remote/artery/RestartCounter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="122.9" y="1555.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.9" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="122.9" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.9" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="122.9" y="1523.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="122.9" y="1507.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="122.9" y="1491.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="122.9" y="1475.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="122.9" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.9" y="1470.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="122.9" y="1443.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="122.9" y="1427.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="122.9" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.9" y="1422.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="122.9" y="1395.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="125.9" y="1406.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="122.9" y="1379.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="125.9" y="1390.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="122.9" y="1363.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="125.9" y="1374.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="122.9" y="1347.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="125.9" y="1358.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="122.9" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="125.9" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="122.9" y="1315.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="125.9" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="122.9" y="1299.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="125.9" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="122.9" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="125.9" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="122.9" y="1267.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="125.9" y="1278.0"></text>
</g>
<g>
<title>akka/remote/artery/ReusableInboundEnvelope$.createObjectPool (1 samples, 0.06%)</title><rect x="123.6" y="1555.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="123.6" y="1539.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="123.6" y="1523.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.6" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.&lt;init&gt; (1 samples, 0.06%)</title><rect x="123.6" y="1507.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.6" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.init (1 samples, 0.06%)</title><rect x="123.6" y="1491.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.6" y="1502.0"></text>
</g>
<g>
<title>akka/remote/artery/SharedTestState.&lt;init&gt; (1 samples, 0.06%)</title><rect x="124.4" y="1555.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="124.4" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="124.4" y="1523.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="124.4" y="1507.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="124.4" y="1491.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="124.4" y="1475.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="124.4" y="1459.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="124.4" y="1443.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="1454.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="124.4" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.4" y="1438.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="124.4" y="1411.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.4" y="1422.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="124.4" y="1395.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.4" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.06%)</title><rect x="124.4" y="1379.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.4" y="1390.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="124.4" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="1374.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="124.4" y="1347.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.4" y="1358.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="124.4" y="1331.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="127.4" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/compress/InboundCompressionsImpl.&lt;init&gt; (3 samples, 0.19%)</title><rect x="125.1" y="1555.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="125.1" y="1539.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="125.1" y="1523.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="125.1" y="1507.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="125.1" y="1491.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="125.1" y="1475.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="125.1" y="1459.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.1" y="1470.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="125.1" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="125.1" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.06%)</title><rect x="125.1" y="1411.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.06%)</title><rect x="125.1" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="125.1" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.1" y="1390.0"></text>
</g>
<g>
<title>org/agrona/collections/Long2ObjectHashMap.&lt;init&gt; (2 samples, 0.13%)</title><rect x="125.8" y="1539.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="1550.0"></text>
</g>
<g>
<title>org/agrona/collections/Long2ObjectHashMap.&lt;init&gt; (2 samples, 0.13%)</title><rect x="125.8" y="1523.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="125.8" y="1507.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="128.8" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="125.8" y="1491.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="128.8" y="1502.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="125.8" y="1475.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="128.8" y="1486.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="125.8" y="1459.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="128.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="126.6" y="1507.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="126.6" y="1491.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="126.6" y="1475.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="126.6" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="126.6" y="1443.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="126.6" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.6" y="1438.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="126.6" y="1411.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="126.6" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="126.6" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.6" y="1390.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="126.6" y="1363.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="129.6" y="1374.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="126.6" y="1347.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="129.6" y="1358.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="126.6" y="1331.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="129.6" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="126.6" y="1315.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="129.6" y="1326.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="126.6" y="1299.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="129.6" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="126.6" y="1283.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="129.6" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="126.6" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="129.6" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="126.6" y="1251.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="129.6" y="1262.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="126.6" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="129.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/KillSwitches$.shared (6 samples, 0.38%)</title><rect x="127.3" y="1555.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.3" y="1566.0"></text>
</g>
<g>
<title>akka/stream/SharedKillSwitch.&lt;init&gt; (5 samples, 0.31%)</title><rect x="127.3" y="1539.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.3" y="1550.0"></text>
</g>
<g>
<title>akka/stream/TerminationSignal.&lt;init&gt; (5 samples, 0.31%)</title><rect x="127.3" y="1523.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/concurrent/TrieMap$.empty (5 samples, 0.31%)</title><rect x="127.3" y="1507.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.3" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="127.3" y="1491.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="130.3" y="1502.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1475.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="130.3" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1459.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="130.3" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1443.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="130.3" y="1454.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1427.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.3" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1411.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="130.3" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="127.3" y="1395.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="130.3" y="1406.0"></text>
</g>
<g>
<title>RawBytecodeStream::get_index() const (1 samples, 0.06%)</title><rect x="127.3" y="1379.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="130.3" y="1390.0"></text>
</g>
<g>
<title>scala/collection/concurrent/TrieMap.&lt;init&gt; (4 samples, 0.25%)</title><rect x="128.1" y="1491.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="1502.0"></text>
</g>
<g>
<title>scala/collection/concurrent/TrieMap.&lt;init&gt; (4 samples, 0.25%)</title><rect x="128.1" y="1475.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="128.1" y="1459.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="128.1" y="1443.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="128.1" y="1427.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="1411.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="128.1" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="128.1" y="1379.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="1390.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="128.1" y="1363.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="128.1" y="1347.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="128.1" y="1331.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.1" y="1342.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="128.1" y="1315.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="131.1" y="1326.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="128.1" y="1299.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="131.1" y="1310.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="1283.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="131.1" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="1267.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="131.1" y="1278.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="1251.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="131.1" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="131.1" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="128.1" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="131.1" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="131.1" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.47] (1 samples, 0.06%)</title><rect x="128.1" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="131.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/concurrent/INode$.newRootNode (3 samples, 0.19%)</title><rect x="128.8" y="1459.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.8" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (2 samples, 0.13%)</title><rect x="128.8" y="1443.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="131.8" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (2 samples, 0.13%)</title><rect x="128.8" y="1427.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="131.8" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (2 samples, 0.13%)</title><rect x="128.8" y="1411.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="131.8" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.06%)</title><rect x="128.8" y="1395.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="131.8" y="1406.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="128.8" y="1379.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="131.8" y="1390.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="128.8" y="1363.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="131.8" y="1374.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="128.8" y="1347.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="131.8" y="1358.0"></text>
</g>
<g>
<title>AdapterBlob::create(CodeBuffer*) (1 samples, 0.06%)</title><rect x="128.8" y="1331.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="131.8" y="1342.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="128.8" y="1315.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="131.8" y="1326.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="129.6" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="132.6" y="1406.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="129.6" y="1379.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="132.6" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="130.3" y="1443.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="130.3" y="1427.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="130.3" y="1411.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="130.3" y="1395.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="130.3" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="130.3" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="130.3" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="130.3" y="1331.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="130.3" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.3" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="130.3" y="1299.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="133.3" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="130.3" y="1283.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="133.3" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1267.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="133.3" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="133.3" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="133.3" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="133.3" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="130.3" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="133.3" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1187.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="133.3" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="130.3" y="1171.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.3" y="1182.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="130.3" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.3" y="1166.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.06%)</title><rect x="130.3" y="1139.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="133.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="131.0" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.0" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="131.0" y="1523.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="131.0" y="1507.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="131.0" y="1491.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="131.0" y="1475.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="131.0" y="1459.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="131.0" y="1443.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.0" y="1454.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="131.0" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.0" y="1438.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="131.0" y="1411.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="1422.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="131.0" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="131.0" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.0" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.06%)</title><rect x="131.0" y="1363.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.0" y="1374.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.06%)</title><rect x="131.0" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.0" y="1358.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.06%)</title><rect x="131.0" y="1331.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.0" y="1342.0"></text>
</g>
<g>
<title>Java_java_io_RandomAccessFile_seek0 (1 samples, 0.06%)</title><rect x="131.0" y="1315.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="134.0" y="1326.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.06%)</title><rect x="131.0" y="1299.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="134.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.25%)</title><rect x="131.8" y="1555.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.25%)</title><rect x="131.8" y="1539.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.8" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.25%)</title><rect x="131.8" y="1523.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.8" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.25%)</title><rect x="131.8" y="1507.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.8" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.19%)</title><rect x="131.8" y="1491.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.8" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.13%)</title><rect x="131.8" y="1475.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.8" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="131.8" y="1459.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="131.8" y="1443.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="131.8" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.8" y="1438.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="131.8" y="1411.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="134.8" y="1422.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="131.8" y="1395.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="134.8" y="1406.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1379.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="134.8" y="1390.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.8" y="1374.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1347.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.8" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1331.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.8" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="131.8" y="1315.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.8" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1299.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.8" y="1310.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1283.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="134.8" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.06%)</title><rect x="131.8" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="134.8" y="1278.0"></text>
</g>
<g>
<title>Symbol::Symbol(unsigned char const*, int, int) (1 samples, 0.06%)</title><rect x="131.8" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="132.5" y="1459.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="132.5" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="132.5" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.5" y="1438.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="132.5" y="1411.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="135.5" y="1422.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.06%)</title><rect x="132.5" y="1395.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="135.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="133.3" y="1475.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="133.3" y="1459.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="133.3" y="1443.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.3" y="1454.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="133.3" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.3" y="1438.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="133.3" y="1411.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.3" y="1422.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.06%)</title><rect x="133.3" y="1395.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.3" y="1406.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.06%)</title><rect x="133.3" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.3" y="1390.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.06%)</title><rect x="133.3" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.3" y="1374.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.06%)</title><rect x="133.3" y="1347.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="133.3" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="134.0" y="1491.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="134.0" y="1475.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="134.0" y="1459.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="134.0" y="1443.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="134.0" y="1427.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="134.0" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.0" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="134.0" y="1395.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="137.0" y="1406.0"></text>
</g>
<g>
<title>akka/remote/serialization/ActorRefResolveThreadLocalCache$.apply (1 samples, 0.06%)</title><rect x="134.8" y="1587.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.8" y="1598.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="134.8" y="1571.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.8" y="1582.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="134.8" y="1555.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.8" y="1566.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="134.8" y="1539.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.8" y="1550.0"></text>
</g>
<g>
<title>akka/remote/serialization/ActorRefResolveThreadLocalCache$.createExtension (1 samples, 0.06%)</title><rect x="134.8" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.8" y="1534.0"></text>
</g>
<g>
<title>akka/remote/serialization/ActorRefResolveThreadLocalCache$.createExtension (1 samples, 0.06%)</title><rect x="134.8" y="1507.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.8" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="134.8" y="1491.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="137.8" y="1502.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1475.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="137.8" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1459.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="137.8" y="1470.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1443.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.8" y="1454.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1427.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="137.8" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="137.8" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::generate_code_data(methodHandle const&amp;, unsigned int, Thread*) (1 samples, 0.06%)</title><rect x="134.8" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.8" y="1406.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="134.8" y="1379.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="137.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="135.5" y="1587.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="135.5" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="135.5" y="1555.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.5" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="135.5" y="1539.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="135.5" y="1523.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="135.5" y="1507.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.5" y="1518.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="135.5" y="1491.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="135.5" y="1475.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="135.5" y="1459.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.5" y="1470.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="135.5" y="1443.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="138.5" y="1454.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="135.5" y="1427.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="138.5" y="1438.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="135.5" y="1411.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="138.5" y="1422.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="135.5" y="1395.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="138.5" y="1406.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="135.5" y="1379.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="138.5" y="1390.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="135.5" y="1363.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="138.5" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="135.5" y="1347.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.5" y="1358.0"></text>
</g>
<g>
<title>parse_annotations(ConstantPool const*, unsigned char const*, int, AnnotationCollector*, ClassLoaderData*, Thread*) [clone .isra.114] [clone .part.115] (1 samples, 0.06%)</title><rect x="135.5" y="1331.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="138.5" y="1342.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.apply (2 samples, 0.13%)</title><rect x="136.2" y="1619.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.2" y="1630.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (2 samples, 0.13%)</title><rect x="136.2" y="1603.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.2" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (2 samples, 0.13%)</title><rect x="136.2" y="1587.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.2" y="1598.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (2 samples, 0.13%)</title><rect x="136.2" y="1571.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.2" y="1582.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.createExtension (2 samples, 0.13%)</title><rect x="136.2" y="1555.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.2" y="1566.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo$.createExtension (2 samples, 0.13%)</title><rect x="136.2" y="1539.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.2" y="1550.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo.&lt;init&gt; (2 samples, 0.13%)</title><rect x="136.2" y="1523.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="1534.0"></text>
</g>
<g>
<title>akka/util/ManifestInfo.liftedTree2$1 (2 samples, 0.13%)</title><rect x="136.2" y="1507.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.2" y="1518.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="137.0" y="1491.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.0" y="1502.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.&lt;init&gt; (1 samples, 0.06%)</title><rect x="137.0" y="1475.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.0" y="1486.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.read (1 samples, 0.06%)</title><rect x="137.0" y="1459.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.0" y="1470.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.read (1 samples, 0.06%)</title><rect x="137.0" y="1443.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.0" y="1454.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.putValue (1 samples, 0.06%)</title><rect x="137.0" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.0" y="1438.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.put (1 samples, 0.06%)</title><rect x="137.0" y="1411.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.0" y="1422.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (4 samples, 0.25%)</title><rect x="137.7" y="1731.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.7" y="1742.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (4 samples, 0.25%)</title><rect x="137.7" y="1715.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.7" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="137.7" y="1699.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.7" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1683.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.7" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1667.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.7" y="1678.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="140.7" y="1662.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1635.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="140.7" y="1646.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1619.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.7" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="137.7" y="1603.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="140.7" y="1614.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl.computeCachedConfig (3 samples, 0.19%)</title><rect x="138.5" y="1699.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="1710.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigImpl$LoaderCache.getOrElseUpdate (3 samples, 0.19%)</title><rect x="138.5" y="1683.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="1694.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory$1.call (3 samples, 0.19%)</title><rect x="138.5" y="1667.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.5" y="1678.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory$1.call (3 samples, 0.19%)</title><rect x="138.5" y="1651.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="1662.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (3 samples, 0.19%)</title><rect x="138.5" y="1635.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="1646.0"></text>
</g>
<g>
<title>com/typesafe/config/ConfigFactory.load (3 samples, 0.19%)</title><rect x="138.5" y="1619.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.5" y="1630.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1603.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="1614.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1587.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.5" y="1598.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.resolveWith (3 samples, 0.19%)</title><rect x="138.5" y="1571.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.5" y="1582.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1555.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="1566.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1539.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.5" y="1550.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.19%)</title><rect x="138.5" y="1523.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.5" y="1534.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.19%)</title><rect x="138.5" y="1507.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1491.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="1502.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1475.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="1486.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1459.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.5" y="1470.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.19%)</title><rect x="138.5" y="1443.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.5" y="1454.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.19%)</title><rect x="138.5" y="1427.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.5" y="1438.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1411.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.5" y="1422.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1395.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.5" y="1406.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1379.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="1390.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.19%)</title><rect x="138.5" y="1363.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.5" y="1374.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.19%)</title><rect x="138.5" y="1347.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="1358.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1331.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.5" y="1342.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1315.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.5" y="1326.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1299.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.19%)</title><rect x="138.5" y="1283.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.5" y="1294.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (3 samples, 0.19%)</title><rect x="138.5" y="1267.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.5" y="1278.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1251.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.5" y="1262.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (3 samples, 0.19%)</title><rect x="138.5" y="1235.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.5" y="1246.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (3 samples, 0.19%)</title><rect x="138.5" y="1219.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.5" y="1230.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (3 samples, 0.19%)</title><rect x="138.5" y="1203.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="1214.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigConcatenation.resolveSubstitutions (1 samples, 0.06%)</title><rect x="138.5" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="1198.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.06%)</title><rect x="138.5" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.5" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.06%)</title><rect x="138.5" y="1155.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.5" y="1166.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ConfigReference.resolveSubstitutions (1 samples, 0.06%)</title><rect x="138.5" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="1150.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveSource.lookupSubst (1 samples, 0.06%)</title><rect x="138.5" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.5" y="1134.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveSource.findInObject (1 samples, 0.06%)</title><rect x="138.5" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.5" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.06%)</title><rect x="138.5" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="1102.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.06%)</title><rect x="138.5" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.5" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.06%)</title><rect x="138.5" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.06%)</title><rect x="138.5" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (1 samples, 0.06%)</title><rect x="138.5" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.5" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.06%)</title><rect x="138.5" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.5" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.06%)</title><rect x="138.5" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.5" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.06%)</title><rect x="138.5" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.5" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.06%)</title><rect x="138.5" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.5" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject$ResolveModifier.modifyChildMayThrow (1 samples, 0.06%)</title><rect x="138.5" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.5" y="958.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.resolve (1 samples, 0.06%)</title><rect x="138.5" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.5" y="942.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.realResolve (1 samples, 0.06%)</title><rect x="138.5" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="926.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.06%)</title><rect x="138.5" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.5" y="910.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.06%)</title><rect x="138.5" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.5" y="894.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveContext.memoize (1 samples, 0.06%)</title><rect x="139.2" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.2" y="1198.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/ResolveMemos.put (1 samples, 0.06%)</title><rect x="139.2" y="1171.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.2" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/BadMap.copyingPut (1 samples, 0.06%)</title><rect x="139.2" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.06%)</title><rect x="139.2" y="1139.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.2" y="1150.0"></text>
</g>
<g>
<title>JVM_ArrayCopy (1 samples, 0.06%)</title><rect x="139.2" y="1123.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="142.2" y="1134.0"></text>
</g>
<g>
<title>ObjArrayKlass::copy_array(arrayOopDesc*, int, arrayOopDesc*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="139.2" y="1107.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="142.2" y="1118.0"></text>
</g>
<g>
<title>ObjArrayKlass::do_copy(arrayOopDesc*, unsigned long, arrayOopDesc*, unsigned long, int, Thread*) (1 samples, 0.06%)</title><rect x="139.2" y="1091.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="142.2" y="1102.0"></text>
</g>
<g>
<title>bool AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;36225142ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)8, 36225142ul&gt;::oop_access_barrier&lt;HeapWord&gt;(arrayOopDesc*, unsigned long, HeapWord*, arrayOopDesc*, unsigned long, HeapWord*, unsigned long) (1 samples, 0.06%)</title><rect x="139.2" y="1075.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.2" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.resolveSubstitutions (1 samples, 0.06%)</title><rect x="140.0" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.0" y="1198.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.modifyMayThrow (1 samples, 0.06%)</title><rect x="140.0" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.0" y="1182.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.&lt;init&gt; (1 samples, 0.06%)</title><rect x="140.0" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.0" y="1166.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.&lt;init&gt; (1 samples, 0.06%)</title><rect x="140.0" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.0" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="140.0" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="143.0" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="140.0" y="1107.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="143.0" y="1118.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="140.0" y="1091.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="143.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (182 samples, 11.45%)</title><rect x="140.7" y="2051.0" width="135.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.7" y="2062.0">java/lang/Thread...</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (172 samples, 10.82%)</title><rect x="140.7" y="2035.0" width="127.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.7" y="2046.0">akka/actor/Light..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (172 samples, 10.82%)</title><rect x="140.7" y="2019.0" width="127.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.7" y="2030.0">akka/actor/Light..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (6 samples, 0.38%)</title><rect x="142.9" y="2003.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.9" y="2014.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.addNode (1 samples, 0.06%)</title><rect x="145.2" y="1987.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.2" y="1998.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue$Node.setNext (1 samples, 0.06%)</title><rect x="145.2" y="1971.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.2" y="1982.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (2 samples, 0.13%)</title><rect x="145.9" y="1987.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.9" y="1998.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (14 samples, 0.88%)</title><rect x="147.4" y="2003.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.4" y="2014.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (12 samples, 0.76%)</title><rect x="148.1" y="1987.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.1" y="1998.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (12 samples, 0.76%)</title><rect x="148.1" y="1971.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.1" y="1982.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (12 samples, 0.76%)</title><rect x="148.1" y="1955.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.1" y="1966.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (11 samples, 0.69%)</title><rect x="148.9" y="1939.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.9" y="1950.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.&lt;init&gt; (1 samples, 0.06%)</title><rect x="148.9" y="1923.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.9" y="1934.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.batchable (1 samples, 0.06%)</title><rect x="149.6" y="1923.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.6" y="1934.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.batchable$ (1 samples, 0.06%)</title><rect x="149.6" y="1907.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.6" y="1918.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.batchable (1 samples, 0.06%)</title><rect x="149.6" y="1891.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.6" y="1902.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (8 samples, 0.50%)</title><rect x="150.4" y="1923.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.4" y="1934.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (8 samples, 0.50%)</title><rect x="150.4" y="1907.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.4" y="1918.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.44%)</title><rect x="151.1" y="1891.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.1" y="1902.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.44%)</title><rect x="151.1" y="1875.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.1" y="1886.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.44%)</title><rect x="151.1" y="1859.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.1" y="1870.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.44%)</title><rect x="151.1" y="1843.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.44%)</title><rect x="151.1" y="1827.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.44%)</title><rect x="151.1" y="1811.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.44%)</title><rect x="151.1" y="1795.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.1" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.06%)</title><rect x="151.8" y="1779.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.8" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.31%)</title><rect x="152.6" y="1779.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.6" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.31%)</title><rect x="152.6" y="1763.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.31%)</title><rect x="152.6" y="1747.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.6" y="1758.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.13%)</title><rect x="152.6" y="1731.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="155.6" y="1742.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="152.6" y="1715.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="155.6" y="1726.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="153.3" y="1715.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="156.3" y="1726.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.19%)</title><rect x="154.1" y="1731.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="157.1" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="154.8" y="1715.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="157.8" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="154.8" y="1699.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.8" y="1710.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.13%)</title><rect x="154.8" y="1683.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.8" y="1694.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="154.8" y="1667.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.8" y="1678.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.13%)</title><rect x="154.8" y="1651.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.8" y="1662.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.13%)</title><rect x="154.8" y="1635.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="157.8" y="1646.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.13%)</title><rect x="154.8" y="1619.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.8" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="154.8" y="1603.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="156.3" y="1923.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="156.3" y="1907.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.3" y="1918.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (1 samples, 0.06%)</title><rect x="157.0" y="1987.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.0" y="1998.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue$Node.setNext (1 samples, 0.06%)</title><rect x="157.0" y="1971.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.0" y="1982.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putOrderedObject (1 samples, 0.06%)</title><rect x="157.0" y="1955.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.0" y="1966.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (148 samples, 9.31%)</title><rect x="157.8" y="2003.0" width="109.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.8" y="2014.0">akka/actor/Li..</text>
</g>
<g>
<title>java/lang/Thread.sleep (148 samples, 9.31%)</title><rect x="157.8" y="1987.0" width="109.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.8" y="1998.0">java/lang/Thr..</text>
</g>
<g>
<title>JVM_Sleep (75 samples, 4.72%)</title><rect x="158.5" y="1971.0" width="55.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="161.5" y="1982.0">JVM_S..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.13%)</title><rect x="160.7" y="1955.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="163.7" y="1966.0"></text>
</g>
<g>
<title>JavaThreadSleepState::JavaThreadSleepState(JavaThread*) (1 samples, 0.06%)</title><rect x="162.2" y="1955.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="165.2" y="1966.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.13%)</title><rect x="163.0" y="1955.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="166.0" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (2 samples, 0.13%)</title><rect x="164.5" y="1955.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="167.5" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.69%)</title><rect x="165.9" y="1955.0" width="8.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="168.9" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.57%)</title><rect x="167.4" y="1939.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="170.4" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.57%)</title><rect x="167.4" y="1923.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.4" y="1934.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.13%)</title><rect x="172.6" y="1907.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="175.6" y="1918.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="172.6" y="1891.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.6" y="1902.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="172.6" y="1875.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.6" y="1886.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="172.6" y="1859.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.6" y="1870.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="173.4" y="1875.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.4" y="1886.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="174.1" y="1955.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="177.1" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.19%)</title><rect x="174.9" y="1955.0" width="2.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="177.9" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.06%)</title><rect x="177.1" y="1955.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="180.1" y="1966.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="177.8" y="1955.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="180.8" y="1966.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.25%)</title><rect x="178.6" y="1955.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="181.6" y="1966.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (33 samples, 2.08%)</title><rect x="181.5" y="1955.0" width="24.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="184.5" y="1966.0">o..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (10 samples, 0.63%)</title><rect x="192.7" y="1939.0" width="7.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="195.7" y="1950.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.19%)</title><rect x="200.1" y="1939.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="203.1" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.31%)</title><rect x="202.3" y="1939.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.3" y="1950.0"></text>
</g>
<g>
<title>pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="206.0" y="1955.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="209.0" y="1966.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (9 samples, 0.57%)</title><rect x="206.8" y="1955.0" width="6.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="209.8" y="1966.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="213.5" y="1955.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="216.5" y="1966.0"></text>
</g>
<g>
<title>JavaThreadSleepState::JavaThreadSleepState(JavaThread*) (3 samples, 0.19%)</title><rect x="214.2" y="1971.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="217.2" y="1982.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="216.4" y="1971.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="219.4" y="1982.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.44%)</title><rect x="217.2" y="1971.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="220.2" y="1982.0"></text>
</g>
<g>
<title>__clock_gettime (5 samples, 0.31%)</title><rect x="217.2" y="1955.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="220.2" y="1966.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="217.2" y="1939.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="220.2" y="1950.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.25%)</title><rect x="217.9" y="1939.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="220.9" y="1950.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="220.2" y="1923.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="223.2" y="1934.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.13%)</title><rect x="220.9" y="1955.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="223.9" y="1966.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="222.4" y="1971.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="225.4" y="1982.0"></text>
</g>
<g>
<title>__condvar_cancel_waiting (1 samples, 0.06%)</title><rect x="223.1" y="1971.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="226.1" y="1982.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.06%)</title><rect x="223.9" y="1971.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="226.9" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (47 samples, 2.96%)</title><rect x="224.6" y="1971.0" width="34.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="227.6" y="1982.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 2.01%)</title><rect x="235.8" y="1955.0" width="23.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.8" y="1966.0">e..</text>
</g>
<g>
<title>do_syscall_64 (32 samples, 2.01%)</title><rect x="235.8" y="1939.0" width="23.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.8" y="1950.0">d..</text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.06%)</title><rect x="235.8" y="1923.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="238.8" y="1934.0"></text>
</g>
<g>
<title>sys_futex (31 samples, 1.95%)</title><rect x="236.5" y="1923.0" width="23.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.5" y="1934.0">s..</text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.06%)</title><rect x="236.5" y="1907.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.5" y="1918.0"></text>
</g>
<g>
<title>do_futex (28 samples, 1.76%)</title><rect x="237.2" y="1907.0" width="20.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="240.2" y="1918.0"></text>
</g>
<g>
<title>futex_wait (26 samples, 1.64%)</title><rect x="238.7" y="1891.0" width="19.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.7" y="1902.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="239.5" y="1875.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.5" y="1886.0"></text>
</g>
<g>
<title>futex_wait_queue_me (23 samples, 1.45%)</title><rect x="240.2" y="1875.0" width="17.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="243.2" y="1886.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="241.0" y="1859.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.0" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="241.0" y="1843.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="244.0" y="1854.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="241.7" y="1859.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="244.7" y="1870.0"></text>
</g>
<g>
<title>schedule (20 samples, 1.26%)</title><rect x="242.4" y="1859.0" width="14.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.4" y="1870.0"></text>
</g>
<g>
<title>__schedule (19 samples, 1.20%)</title><rect x="243.2" y="1843.0" width="14.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="246.2" y="1854.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 1.13%)</title><rect x="243.9" y="1827.0" width="13.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="246.9" y="1838.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="257.3" y="1875.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.3" y="1886.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.06%)</title><rect x="257.3" y="1859.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.3" y="1870.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="258.0" y="1907.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.0" y="1918.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="258.8" y="1907.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.8" y="1918.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.06%)</title><rect x="258.8" y="1891.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="261.8" y="1902.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.06%)</title><rect x="258.8" y="1875.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.8" y="1886.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="259.5" y="1971.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="262.5" y="1982.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="260.3" y="1971.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="263.3" y="1982.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.31%)</title><rect x="261.0" y="1971.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="264.0" y="1982.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.19%)</title><rect x="264.7" y="1971.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="267.7" y="1982.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="266.9" y="1971.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="269.9" y="1982.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="266.9" y="1955.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="269.9" y="1966.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.06%)</title><rect x="266.9" y="1939.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="269.9" y="1950.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="266.9" y="1923.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="269.9" y="1934.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="267.7" y="2003.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="270.7" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10 samples, 0.63%)</title><rect x="268.4" y="2035.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.4" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10 samples, 0.63%)</title><rect x="268.4" y="2019.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.4" y="2030.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (10 samples, 0.63%)</title><rect x="268.4" y="2003.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.4" y="2014.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (10 samples, 0.63%)</title><rect x="268.4" y="1987.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="1998.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (9 samples, 0.57%)</title><rect x="268.4" y="1971.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.4" y="1982.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (7 samples, 0.44%)</title><rect x="268.4" y="1955.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.4" y="1966.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (7 samples, 0.44%)</title><rect x="268.4" y="1939.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.4" y="1950.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (7 samples, 0.44%)</title><rect x="268.4" y="1923.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.06%)</title><rect x="268.4" y="1907.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.4" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5 samples, 0.31%)</title><rect x="269.2" y="1907.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.2" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="269.2" y="1891.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="272.2" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.25%)</title><rect x="269.9" y="1891.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.9" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.25%)</title><rect x="269.9" y="1875.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.9" y="1886.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (1 samples, 0.06%)</title><rect x="269.9" y="1859.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="269.9" y="1843.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="272.9" y="1854.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.06%)</title><rect x="269.9" y="1827.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="272.9" y="1838.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="269.9" y="1811.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.9" y="1822.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="269.9" y="1795.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.9" y="1806.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.06%)</title><rect x="269.9" y="1779.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.9" y="1790.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.06%)</title><rect x="269.9" y="1763.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.9" y="1774.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.06%)</title><rect x="269.9" y="1747.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.9" y="1758.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="269.9" y="1731.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.9" y="1742.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="269.9" y="1715.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.9" y="1726.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="269.9" y="1699.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.9" y="1710.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="269.9" y="1683.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.9" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.13%)</title><rect x="270.7" y="1859.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.7" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.06%)</title><rect x="271.4" y="1843.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.4" y="1854.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.06%)</title><rect x="271.4" y="1827.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="274.4" y="1838.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="271.4" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.4" y="1822.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="271.4" y="1795.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="274.4" y="1806.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.06%)</title><rect x="271.4" y="1779.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.4" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="272.1" y="1859.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.1" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.remove (1 samples, 0.06%)</title><rect x="272.1" y="1843.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (1 samples, 0.06%)</title><rect x="272.1" y="1827.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.06%)</title><rect x="272.1" y="1811.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.1" y="1822.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.06%)</title><rect x="272.9" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.9" y="1918.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="272.9" y="1891.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.9" y="1902.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="272.9" y="1875.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.9" y="1886.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (2 samples, 0.13%)</title><rect x="273.6" y="1955.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.6" y="1966.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (1 samples, 0.06%)</title><rect x="273.6" y="1939.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.6" y="1950.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.06%)</title><rect x="273.6" y="1923.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.6" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.06%)</title><rect x="273.6" y="1907.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.6" y="1918.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (1 samples, 0.06%)</title><rect x="274.4" y="1939.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.4" y="1950.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (1 samples, 0.06%)</title><rect x="274.4" y="1923.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.4" y="1934.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="274.4" y="1907.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.4" y="1918.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$680/715979214.apply$mcV$sp (1 samples, 0.06%)</title><rect x="274.4" y="1891.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.4" y="1902.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (1 samples, 0.06%)</title><rect x="274.4" y="1875.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.4" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.06%)</title><rect x="274.4" y="1859.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.4" y="1870.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.06%)</title><rect x="274.4" y="1843.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.4" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.06%)</title><rect x="274.4" y="1827.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.4" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.06%)</title><rect x="274.4" y="1811.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.4" y="1822.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.isOptionSupported (1 samples, 0.06%)</title><rect x="274.4" y="1795.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.4" y="1806.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.options (1 samples, 0.06%)</title><rect x="274.4" y="1779.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.4" y="1790.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="275.1" y="1971.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="278.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.25%)</title><rect x="275.9" y="2051.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="2062.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.make (1 samples, 0.06%)</title><rect x="275.9" y="2035.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.9" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.9" y="2019.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.9" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.9" y="2003.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.9" y="1987.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.9" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.06%)</title><rect x="275.9" y="1971.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.06%)</title><rect x="275.9" y="1955.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.06%)</title><rect x="275.9" y="1939.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.06%)</title><rect x="275.9" y="1923.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.06%)</title><rect x="275.9" y="1907.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.06%)</title><rect x="275.9" y="1891.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.9" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (1 samples, 0.06%)</title><rect x="275.9" y="1875.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.9" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (1 samples, 0.06%)</title><rect x="275.9" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.9" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (1 samples, 0.06%)</title><rect x="275.9" y="1843.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.9" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (1 samples, 0.06%)</title><rect x="275.9" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitTypeInsn (1 samples, 0.06%)</title><rect x="275.9" y="1811.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (1 samples, 0.06%)</title><rect x="275.9" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.addType (1 samples, 0.06%)</title><rect x="275.9" y="1779.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.get (1 samples, 0.06%)</title><rect x="275.9" y="1763.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.9" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.make (1 samples, 0.06%)</title><rect x="276.6" y="2035.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="276.6" y="2019.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="276.6" y="2003.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="276.6" y="1987.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.06%)</title><rect x="276.6" y="1971.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.06%)</title><rect x="276.6" y="1955.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.06%)</title><rect x="276.6" y="1939.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="276.6" y="1923.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="276.6" y="1907.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (2 samples, 0.13%)</title><rect x="277.3" y="2035.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.3" y="2046.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (2 samples, 0.13%)</title><rect x="277.3" y="2019.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (2 samples, 0.13%)</title><rect x="277.3" y="2003.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.3" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (2 samples, 0.13%)</title><rect x="277.3" y="1987.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.06%)</title><rect x="277.3" y="1971.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.3" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (1 samples, 0.06%)</title><rect x="277.3" y="1955.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 0.06%)</title><rect x="277.3" y="1939.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.3" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.withConstraint (1 samples, 0.06%)</title><rect x="277.3" y="1923.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (1 samples, 0.06%)</title><rect x="277.3" y="1907.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.3" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.insertArguments (1 samples, 0.06%)</title><rect x="278.1" y="1971.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.insertArgumentPrimitive (1 samples, 0.06%)</title><rect x="278.1" y="1955.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.bindArgumentI (1 samples, 0.06%)</title><rect x="278.1" y="1939.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentI (1 samples, 0.06%)</title><rect x="278.1" y="1923.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.bindArgumentType (1 samples, 0.06%)</title><rect x="278.1" y="1907.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.dropParameterTypes (1 samples, 0.06%)</title><rect x="278.1" y="1891.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.1" y="1902.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="278.1" y="1875.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.1" y="1886.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="278.1" y="1859.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.1" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="278.1" y="1843.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.1" y="1854.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="278.1" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.1" y="1838.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.06%)</title><rect x="278.1" y="1811.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="281.1" y="1822.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (1 samples, 0.06%)</title><rect x="278.1" y="1795.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="281.1" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="278.1" y="1779.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="281.1" y="1790.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (1 samples, 0.06%)</title><rect x="278.8" y="2051.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.8" y="2062.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (1 samples, 0.06%)</title><rect x="278.8" y="2035.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.8" y="2046.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (1 samples, 0.06%)</title><rect x="278.8" y="2019.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.8" y="2030.0"></text>
</g>
<g>
<title>java/util/Calendar.createCalendar (1 samples, 0.06%)</title><rect x="278.8" y="2003.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.8" y="2014.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.06%)</title><rect x="278.8" y="1987.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="281.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (285 samples, 17.94%)</title><rect x="279.6" y="2051.0" width="211.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.6" y="2062.0">java/util/concurrent/ForkJoi..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (285 samples, 17.94%)</title><rect x="279.6" y="2035.0" width="211.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.6" y="2046.0">java/util/concurrent/ForkJoi..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (254 samples, 15.98%)</title><rect x="287.7" y="2019.0" width="188.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.7" y="2030.0">java/util/concurrent/For..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (251 samples, 15.80%)</title><rect x="288.5" y="2003.0" width="186.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.5" y="2014.0">java/util/concurrent/For..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.06%)</title><rect x="288.5" y="1987.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.5" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (250 samples, 15.73%)</title><rect x="289.2" y="1987.0" width="185.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.2" y="1998.0">java/util/concurrent/For..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (27 samples, 1.70%)</title><rect x="290.0" y="1971.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.0" y="1982.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (27 samples, 1.70%)</title><rect x="290.0" y="1955.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.0" y="1966.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$1$$anon$2.run (1 samples, 0.06%)</title><rect x="290.0" y="1939.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.0" y="1950.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.06%)</title><rect x="290.0" y="1923.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.0" y="1934.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.checkMaxDelay (1 samples, 0.06%)</title><rect x="290.0" y="1907.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="290.0" y="1891.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.0" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (13 samples, 0.82%)</title><rect x="290.7" y="1939.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.7" y="1950.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.06%)</title><rect x="290.7" y="1923.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.7" y="1934.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.06%)</title><rect x="290.7" y="1907.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.7" y="1918.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (1 samples, 0.06%)</title><rect x="290.7" y="1891.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.7" y="1902.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (1 samples, 0.06%)</title><rect x="290.7" y="1875.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.7" y="1886.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (1 samples, 0.06%)</title><rect x="290.7" y="1859.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.7" y="1870.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="290.7" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.7" y="1854.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.06%)</title><rect x="290.7" y="1827.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.7" y="1838.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (1 samples, 0.06%)</title><rect x="290.7" y="1811.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.7" y="1822.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (1 samples, 0.06%)</title><rect x="290.7" y="1795.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.7" y="1806.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (1 samples, 0.06%)</title><rect x="290.7" y="1779.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.7" y="1790.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (1 samples, 0.06%)</title><rect x="290.7" y="1763.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.7" y="1774.0"></text>
</g>
<g>
<title>scala/math/Ordering$LongOrdering.compare$ (1 samples, 0.06%)</title><rect x="290.7" y="1747.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.7" y="1758.0"></text>
</g>
<g>
<title>scala/math/Ordering$LongOrdering.compare (1 samples, 0.06%)</title><rect x="290.7" y="1731.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.06%)</title><rect x="290.7" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.7" y="1726.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$3.run (6 samples, 0.38%)</title><rect x="291.4" y="1923.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.4" y="1934.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (5 samples, 0.31%)</title><rect x="291.4" y="1907.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="1918.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.31%)</title><rect x="291.4" y="1891.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.4" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (5 samples, 0.31%)</title><rect x="291.4" y="1875.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.4" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (5 samples, 0.31%)</title><rect x="291.4" y="1859.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.4" y="1870.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (5 samples, 0.31%)</title><rect x="291.4" y="1843.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.4" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (5 samples, 0.31%)</title><rect x="291.4" y="1827.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.4" y="1838.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (5 samples, 0.31%)</title><rect x="291.4" y="1811.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="1822.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (5 samples, 0.31%)</title><rect x="291.4" y="1795.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.4" y="1806.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.25%)</title><rect x="291.4" y="1779.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="1790.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.25%)</title><rect x="291.4" y="1763.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="1774.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.25%)</title><rect x="291.4" y="1747.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="1758.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.25%)</title><rect x="291.4" y="1731.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.4" y="1742.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.25%)</title><rect x="291.4" y="1715.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.25%)</title><rect x="291.4" y="1699.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.25%)</title><rect x="291.4" y="1683.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.4" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.25%)</title><rect x="291.4" y="1667.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.4" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.25%)</title><rect x="291.4" y="1651.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.19%)</title><rect x="292.2" y="1635.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.19%)</title><rect x="292.2" y="1619.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.19%)</title><rect x="292.2" y="1603.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="295.2" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="292.9" y="1587.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.9" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="292.9" y="1571.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.9" y="1582.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.13%)</title><rect x="292.9" y="1555.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.9" y="1566.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="292.9" y="1539.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.9" y="1550.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.13%)</title><rect x="292.9" y="1523.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.9" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.13%)</title><rect x="292.9" y="1507.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.9" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.13%)</title><rect x="292.9" y="1491.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.9" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="292.9" y="1475.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.9" y="1486.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="294.4" y="1779.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.4" y="1790.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.isTerminated (1 samples, 0.06%)</title><rect x="295.2" y="1907.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.2" y="1918.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.isTerminated (1 samples, 0.06%)</title><rect x="295.2" y="1891.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.2" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.isTerminated$ (1 samples, 0.06%)</title><rect x="295.2" y="1875.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.2" y="1886.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="295.2" y="1859.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="298.2" y="1870.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="295.2" y="1843.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="298.2" y="1854.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="295.2" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="298.2" y="1838.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="295.2" y="1811.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="298.2" y="1822.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="295.2" y="1795.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="298.2" y="1806.0"></text>
</g>
<g>
<title>LinkResolver::check_method_accessability(Klass*, Klass*, Klass*, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="295.2" y="1779.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="298.2" y="1790.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$545/332864762.run (6 samples, 0.38%)</title><rect x="295.9" y="1923.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.9" y="1934.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (5 samples, 0.31%)</title><rect x="296.6" y="1907.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.6" y="1918.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (5 samples, 0.31%)</title><rect x="296.6" y="1891.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.6" y="1902.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (5 samples, 0.31%)</title><rect x="296.6" y="1875.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.6" y="1886.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (4 samples, 0.25%)</title><rect x="297.4" y="1859.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.4" y="1870.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/950714593.apply (4 samples, 0.25%)</title><rect x="297.4" y="1843.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.4" y="1854.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (4 samples, 0.25%)</title><rect x="297.4" y="1827.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.4" y="1838.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (4 samples, 0.25%)</title><rect x="297.4" y="1811.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.4" y="1822.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (4 samples, 0.25%)</title><rect x="297.4" y="1795.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.4" y="1806.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.25%)</title><rect x="297.4" y="1779.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.4" y="1790.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.25%)</title><rect x="297.4" y="1763.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.4" y="1774.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.25%)</title><rect x="297.4" y="1747.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.4" y="1758.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.25%)</title><rect x="297.4" y="1731.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.4" y="1742.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.25%)</title><rect x="297.4" y="1715.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.4" y="1726.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.25%)</title><rect x="297.4" y="1699.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.4" y="1710.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.25%)</title><rect x="297.4" y="1683.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.4" y="1694.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.25%)</title><rect x="297.4" y="1667.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.4" y="1678.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.25%)</title><rect x="297.4" y="1651.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.4" y="1662.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.25%)</title><rect x="297.4" y="1635.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.4" y="1646.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.25%)</title><rect x="297.4" y="1619.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.4" y="1630.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.25%)</title><rect x="297.4" y="1603.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.4" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.25%)</title><rect x="297.4" y="1587.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.4" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.25%)</title><rect x="297.4" y="1571.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.4" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.19%)</title><rect x="298.1" y="1555.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.19%)</title><rect x="298.1" y="1539.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.19%)</title><rect x="298.1" y="1523.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.19%)</title><rect x="298.1" y="1507.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.1" y="1518.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="298.1" y="1491.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="301.1" y="1502.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="298.1" y="1475.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="301.1" y="1486.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.13%)</title><rect x="298.9" y="1491.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="301.9" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="299.6" y="1475.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.6" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="299.6" y="1459.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.6" y="1470.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="299.6" y="1443.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.6" y="1454.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="299.6" y="1427.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.6" y="1438.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="299.6" y="1411.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="302.6" y="1422.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="299.6" y="1395.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="302.6" y="1406.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="299.6" y="1379.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.6" y="1390.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="299.6" y="1363.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="302.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$7.run (1 samples, 0.06%)</title><rect x="300.4" y="1939.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.4" y="1950.0"></text>
</g>
<g>
<title>akka/pattern/FutureTimeoutSupport$$Lambda$619/693434900.apply$mcV$sp (1 samples, 0.06%)</title><rect x="300.4" y="1923.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.4" y="1934.0"></text>
</g>
<g>
<title>akka/pattern/FutureTimeoutSupport.$anonfun$after$1 (1 samples, 0.06%)</title><rect x="300.4" y="1907.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.4" y="1918.0"></text>
</g>
<g>
<title>akka/pattern/FutureTimeoutSupport.liftedTree1$1 (1 samples, 0.06%)</title><rect x="300.4" y="1891.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="1902.0"></text>
</g>
<g>
<title>akka/pattern/RetrySupport$$anonfun$retry$1$$Lambda$618/215881743.apply (1 samples, 0.06%)</title><rect x="300.4" y="1875.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.4" y="1886.0"></text>
</g>
<g>
<title>akka/pattern/RetrySupport$$anonfun$retry$1.$anonfun$applyOrElse$1 (1 samples, 0.06%)</title><rect x="300.4" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.4" y="1870.0"></text>
</g>
<g>
<title>akka/pattern/package$.retry (1 samples, 0.06%)</title><rect x="300.4" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.4" y="1854.0"></text>
</g>
<g>
<title>akka/pattern/RetrySupport.retry$ (1 samples, 0.06%)</title><rect x="300.4" y="1827.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.4" y="1838.0"></text>
</g>
<g>
<title>akka/pattern/RetrySupport.retry (1 samples, 0.06%)</title><rect x="300.4" y="1811.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="1822.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinationClient$$anonfun$waiting$1$$Lambda$615/227818892.apply (1 samples, 0.06%)</title><rect x="300.4" y="1795.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="1806.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinationClient$$anonfun$waiting$1.$anonfun$applyOrElse$3 (1 samples, 0.06%)</title><rect x="300.4" y="1779.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.4" y="1790.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinationClient.checkReadiness (1 samples, 0.06%)</title><rect x="300.4" y="1763.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.4" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="300.4" y="1747.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.4" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="300.4" y="1731.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.4" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (1 samples, 0.06%)</title><rect x="300.4" y="1715.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.4" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.createUriReference (1 samples, 0.06%)</title><rect x="300.4" y="1699.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.collapseDotSegments (1 samples, 0.06%)</title><rect x="300.4" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.hasDotOrDotDotSegment$1 (1 samples, 0.06%)</title><rect x="300.4" y="1667.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.4" y="1678.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (11 samples, 0.69%)</title><rect x="301.1" y="1939.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.1" y="1950.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (10 samples, 0.63%)</title><rect x="301.8" y="1923.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.8" y="1934.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (10 samples, 0.63%)</title><rect x="301.8" y="1907.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.8" y="1918.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$506/1948032961.apply$mcV$sp (10 samples, 0.63%)</title><rect x="301.8" y="1891.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.8" y="1902.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (10 samples, 0.63%)</title><rect x="301.8" y="1875.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.8" y="1886.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (10 samples, 0.63%)</title><rect x="301.8" y="1859.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.8" y="1870.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (10 samples, 0.63%)</title><rect x="301.8" y="1843.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.8" y="1854.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$$Lambda$632/1252923353.apply (1 samples, 0.06%)</title><rect x="301.8" y="1827.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.8" y="1838.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown.$anonfun$run$7 (1 samples, 0.06%)</title><rect x="301.8" y="1811.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.8" y="1822.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown.loop$1 (1 samples, 0.06%)</title><rect x="301.8" y="1795.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.8" y="1806.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$tasks$StrictPhaseDefinition.run (1 samples, 0.06%)</title><rect x="301.8" y="1779.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.8" y="1790.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.map (1 samples, 0.06%)</title><rect x="301.8" y="1763.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.8" y="1774.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (1 samples, 0.06%)</title><rect x="301.8" y="1747.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.8" y="1758.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map (1 samples, 0.06%)</title><rect x="301.8" y="1731.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="1742.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$tasks$StrictPhaseDefinition$$Lambda$633/1106569082.apply (1 samples, 0.06%)</title><rect x="301.8" y="1715.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.8" y="1726.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$tasks$StrictPhaseDefinition.$anonfun$run$3 (1 samples, 0.06%)</title><rect x="301.8" y="1699.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.8" y="1710.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$tasks$TaskDefinition$$anon$2.run (1 samples, 0.06%)</title><rect x="301.8" y="1683.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.8" y="1694.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$tasks$TaskDefinition$$anon$2.liftedTree1$1 (1 samples, 0.06%)</title><rect x="301.8" y="1667.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.8" y="1678.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$$$Lambda$626/58005728.apply (1 samples, 0.06%)</title><rect x="301.8" y="1651.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.8" y="1662.0"></text>
</g>
<g>
<title>akka/actor/CoordinatedShutdown$.$anonfun$initPhaseActorSystemTerminate$1 (1 samples, 0.06%)</title><rect x="301.8" y="1635.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.8" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="301.8" y="1619.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.8" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="301.8" y="1603.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="301.8" y="1587.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="301.8" y="1571.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.8" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="301.8" y="1555.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="301.8" y="1539.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="301.8" y="1523.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="301.8" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="301.8" y="1491.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/ConstantCallSite.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.8" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.8" y="1459.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives$CallSiteContext.make (1 samples, 0.06%)</title><rect x="301.8" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="301.8" y="1427.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.8" y="1411.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.8" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl.getCleanerImpl (1 samples, 0.06%)</title><rect x="301.8" y="1379.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.8" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1034/678875482.apply (7 samples, 0.44%)</title><rect x="302.6" y="1827.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.6" y="1838.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (7 samples, 0.44%)</title><rect x="302.6" y="1811.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.6" y="1822.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (1 samples, 0.06%)</title><rect x="302.6" y="1795.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.6" y="1806.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="302.6" y="1779.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.6" y="1790.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromStringUnmarshallers.$init$ (1 samples, 0.06%)</title><rect x="302.6" y="1763.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.6" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromStringUnmarshallers.numberUnmarshaller (1 samples, 0.06%)</title><rect x="302.6" y="1747.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.6" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.strict (1 samples, 0.06%)</title><rect x="302.6" y="1731.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.6" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.apply (1 samples, 0.06%)</title><rect x="302.6" y="1715.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.6" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.withMaterializer (1 samples, 0.06%)</title><rect x="302.6" y="1699.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1683.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1667.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1651.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="302.6" y="1635.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="302.6" y="1619.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.6" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="302.6" y="1603.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.6" y="1614.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="302.6" y="1587.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="302.6" y="1571.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="302.6" y="1555.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="302.6" y="1507.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="302.6" y="1491.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="302.6" y="1475.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="302.6" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (1 samples, 0.06%)</title><rect x="302.6" y="1443.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (1 samples, 0.06%)</title><rect x="302.6" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.definePackage (1 samples, 0.06%)</title><rect x="302.6" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.06%)</title><rect x="302.6" y="1395.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.6" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (3 samples, 0.19%)</title><rect x="303.3" y="1795.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.3" y="1806.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1059/1197191233.apply (3 samples, 0.19%)</title><rect x="303.3" y="1779.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.3" y="1790.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (3 samples, 0.19%)</title><rect x="303.3" y="1763.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.3" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1053/103464418.apply (1 samples, 0.06%)</title><rect x="303.3" y="1747.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.3" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="303.3" y="1731.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.3" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="303.3" y="1715.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.3" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="303.3" y="1699.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="303.3" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="303.3" y="1667.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.3" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="303.3" y="1651.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.3" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="303.3" y="1635.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.3" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="303.3" y="1619.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.3" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="303.3" y="1603.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="303.3" y="1587.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.3" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="303.3" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="303.3" y="1555.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.06%)</title><rect x="303.3" y="1539.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.3" y="1550.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.06%)</title><rect x="303.3" y="1523.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="306.3" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="303.3" y="1507.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="306.3" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="303.3" y="1491.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="306.3" y="1502.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="303.3" y="1475.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="306.3" y="1486.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="303.3" y="1459.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="306.3" y="1470.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.06%)</title><rect x="303.3" y="1443.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="306.3" y="1454.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.06%)</title><rect x="303.3" y="1427.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="306.3" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1061/1946650627.apply (1 samples, 0.06%)</title><rect x="304.1" y="1747.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.1" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (1 samples, 0.06%)</title><rect x="304.1" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.1" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (1 samples, 0.06%)</title><rect x="304.1" y="1715.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.1" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.06%)</title><rect x="304.1" y="1699.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.1" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.06%)</title><rect x="304.1" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.1" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/710356639.apply (1 samples, 0.06%)</title><rect x="304.1" y="1667.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.1" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="304.1" y="1651.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.1" y="1662.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1055/12425737.apply (1 samples, 0.06%)</title><rect x="304.1" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.1" y="1646.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (1 samples, 0.06%)</title><rect x="304.1" y="1619.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="307.1" y="1630.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (1 samples, 0.06%)</title><rect x="304.1" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.1" y="1614.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="304.1" y="1587.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.1" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="304.1" y="1571.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.1" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="304.1" y="1555.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.1" y="1566.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="304.1" y="1539.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.1" y="1550.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (1 samples, 0.06%)</title><rect x="304.1" y="1523.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.1" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="304.1" y="1507.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.1" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="304.1" y="1491.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.1" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="304.1" y="1475.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.1" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="304.1" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.1" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="304.1" y="1443.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="307.1" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="304.1" y="1427.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="307.1" y="1438.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1411.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="307.1" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1395.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="307.1" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="307.1" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="307.1" y="1374.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1347.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="307.1" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1331.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="307.1" y="1342.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1315.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="307.1" y="1326.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="304.1" y="1299.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="307.1" y="1310.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="304.1" y="1283.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="307.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1 samples, 0.06%)</title><rect x="304.8" y="1747.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.8" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1059/1197191233.apply (1 samples, 0.06%)</title><rect x="304.8" y="1731.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.8" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (1 samples, 0.06%)</title><rect x="304.8" y="1715.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.8" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (1 samples, 0.06%)</title><rect x="304.8" y="1699.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.8" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1063/1953158428.apply (1 samples, 0.06%)</title><rect x="304.8" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.8" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (1 samples, 0.06%)</title><rect x="304.8" y="1667.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.8" y="1678.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (1 samples, 0.06%)</title><rect x="304.8" y="1651.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.8" y="1662.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (1 samples, 0.06%)</title><rect x="304.8" y="1635.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.8" y="1646.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (1 samples, 0.06%)</title><rect x="304.8" y="1619.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.8" y="1630.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="304.8" y="1603.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.8" y="1614.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="304.8" y="1587.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.8" y="1598.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="304.8" y="1571.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.8" y="1582.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (1 samples, 0.06%)</title><rect x="304.8" y="1555.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.8" y="1566.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (1 samples, 0.06%)</title><rect x="304.8" y="1539.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.8" y="1550.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (1 samples, 0.06%)</title><rect x="304.8" y="1523.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.8" y="1534.0"></text>
</g>
<g>
<title>scala/Array$.empty (1 samples, 0.06%)</title><rect x="304.8" y="1507.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.8" y="1518.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$GenericClassTag.newArray (1 samples, 0.06%)</title><rect x="304.8" y="1491.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="304.8" y="1475.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="304.8" y="1459.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.8" y="1470.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.06%)</title><rect x="304.8" y="1443.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="307.8" y="1454.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (1 samples, 0.06%)</title><rect x="304.8" y="1427.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="307.8" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="304.8" y="1411.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="307.8" y="1422.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="304.8" y="1395.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="307.8" y="1406.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="304.8" y="1379.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="307.8" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.onComplete (1 samples, 0.06%)</title><rect x="305.6" y="1795.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.6" y="1806.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (1 samples, 0.06%)</title><rect x="305.6" y="1779.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.6" y="1790.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (1 samples, 0.06%)</title><rect x="305.6" y="1763.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.6" y="1774.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="305.6" y="1747.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.6" y="1758.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.setException (2 samples, 0.13%)</title><rect x="306.3" y="1795.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.3" y="1806.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.setException (2 samples, 0.13%)</title><rect x="306.3" y="1779.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.3" y="1790.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (2 samples, 0.13%)</title><rect x="306.3" y="1763.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.3" y="1774.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (2 samples, 0.13%)</title><rect x="306.3" y="1747.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.3" y="1758.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/MoreExecutors$DirectExecutor.execute (2 samples, 0.13%)</title><rect x="306.3" y="1731.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.3" y="1742.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.run (2 samples, 0.13%)</title><rect x="306.3" y="1715.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.3" y="1726.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.decrementCountAndMaybeComplete (2 samples, 0.13%)</title><rect x="306.3" y="1699.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.3" y="1710.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.processCompleted (2 samples, 0.13%)</title><rect x="306.3" y="1683.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.3" y="1694.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.handleOneInputDone (2 samples, 0.13%)</title><rect x="306.3" y="1667.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.3" y="1678.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/CollectionFuture$CollectionFutureRunningState.collectOneValue (2 samples, 0.13%)</title><rect x="306.3" y="1651.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.3" y="1662.0"></text>
</g>
<g>
<title>com/google/common/base/Optional.fromNullable (2 samples, 0.13%)</title><rect x="306.3" y="1635.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.3" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="306.3" y="1619.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="309.3" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="306.3" y="1603.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="309.3" y="1614.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="306.3" y="1587.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="309.3" y="1598.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="306.3" y="1571.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="309.3" y="1582.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="306.3" y="1555.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="309.3" y="1566.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.06%)</title><rect x="306.3" y="1539.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="309.3" y="1550.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.06%)</title><rect x="306.3" y="1523.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="309.3" y="1534.0"></text>
</g>
<g>
<title>com/google/common/base/Present.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.0" y="1619.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.0" y="1630.0"></text>
</g>
<g>
<title>com/google/common/base/Optional.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.0" y="1603.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.0" y="1614.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1093/488558072.apply (1 samples, 0.06%)</title><rect x="307.8" y="1827.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.8" y="1838.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (1 samples, 0.06%)</title><rect x="307.8" y="1811.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.8" y="1822.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.06%)</title><rect x="307.8" y="1795.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.8" y="1806.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1070/710356639.apply (1 samples, 0.06%)</title><rect x="307.8" y="1779.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.8" y="1790.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (1 samples, 0.06%)</title><rect x="307.8" y="1763.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.8" y="1774.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1055/12425737.apply (1 samples, 0.06%)</title><rect x="307.8" y="1747.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.8" y="1758.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (1 samples, 0.06%)</title><rect x="307.8" y="1731.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.8" y="1742.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (1 samples, 0.06%)</title><rect x="307.8" y="1715.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.8" y="1726.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="307.8" y="1699.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.8" y="1710.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="307.8" y="1683.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.8" y="1694.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="307.8" y="1667.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.8" y="1678.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.06%)</title><rect x="307.8" y="1651.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.8" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.8" y="1646.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1619.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.8" y="1630.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1603.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.8" y="1614.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1587.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.8" y="1598.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1571.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="307.8" y="1555.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.8" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1539.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.8" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1523.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.8" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1507.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.8" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1491.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.8" y="1502.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="307.8" y="1475.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.8" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.8" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="307.8" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.8" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1427.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.8" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (1 samples, 0.06%)</title><rect x="307.8" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.8" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (1 samples, 0.06%)</title><rect x="307.8" y="1395.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.8" y="1406.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (1 samples, 0.06%)</title><rect x="307.8" y="1379.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.8" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (1 samples, 0.06%)</title><rect x="307.8" y="1363.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.8" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="308.5" y="1827.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.5" y="1838.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="308.5" y="1811.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.5" y="1822.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="308.5" y="1795.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.5" y="1806.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.06%)</title><rect x="308.5" y="1779.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.5" y="1790.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="308.5" y="1763.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.5" y="1774.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="308.5" y="1747.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.5" y="1758.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.06%)</title><rect x="308.5" y="1731.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.5" y="1742.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (1 samples, 0.06%)</title><rect x="308.5" y="1715.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.5" y="1726.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1 samples, 0.06%)</title><rect x="308.5" y="1699.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.5" y="1710.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1 samples, 0.06%)</title><rect x="308.5" y="1683.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.5" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$534/690059441.apply (1 samples, 0.06%)</title><rect x="308.5" y="1667.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.5" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1$adapted (1 samples, 0.06%)</title><rect x="308.5" y="1651.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.5" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$1 (1 samples, 0.06%)</title><rect x="308.5" y="1635.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$anon$4.run (1 samples, 0.06%)</title><rect x="309.3" y="1939.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.3" y="1950.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.06%)</title><rect x="309.3" y="1923.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.3" y="1934.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.06%)</title><rect x="309.3" y="1907.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="1918.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.06%)</title><rect x="309.3" y="1891.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.3" y="1902.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/950714593.apply (1 samples, 0.06%)</title><rect x="309.3" y="1875.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.3" y="1886.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.06%)</title><rect x="309.3" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.3" y="1870.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.06%)</title><rect x="309.3" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.3" y="1854.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.06%)</title><rect x="309.3" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.3" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="309.3" y="1811.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.3" y="1822.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="309.3" y="1795.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.3" y="1806.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="309.3" y="1779.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.3" y="1790.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="309.3" y="1763.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.3" y="1774.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="309.3" y="1747.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.3" y="1758.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="309.3" y="1731.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="1742.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="309.3" y="1715.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.3" y="1726.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="309.3" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.3" y="1710.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="309.3" y="1683.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.3" y="1694.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="309.3" y="1667.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="1678.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="309.3" y="1651.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.3" y="1662.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="309.3" y="1635.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.3" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="309.3" y="1619.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.3" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="309.3" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.3" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="309.3" y="1587.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.3" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="309.3" y="1571.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.3" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="309.3" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="309.3" y="1539.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.3" y="1550.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="309.3" y="1523.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="312.3" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="309.3" y="1507.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.3" y="1518.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="309.3" y="1491.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.3" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (221 samples, 13.91%)</title><rect x="310.0" y="1971.0" width="164.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.0" y="1982.0">akka/dispatch/Mailbox..</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (221 samples, 13.91%)</title><rect x="310.0" y="1955.0" width="164.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.0" y="1966.0">akka/dispatch/Mailbox..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="310.0" y="1939.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.0" y="1950.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (1 samples, 0.06%)</title><rect x="310.0" y="1923.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.0" y="1934.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.hasMessages (1 samples, 0.06%)</title><rect x="310.0" y="1907.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.0" y="1918.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (1 samples, 0.06%)</title><rect x="310.0" y="1891.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.0" y="1902.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages$ (1 samples, 0.06%)</title><rect x="310.0" y="1875.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.0" y="1886.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages (1 samples, 0.06%)</title><rect x="310.0" y="1859.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.0" y="1870.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (24 samples, 1.51%)</title><rect x="310.8" y="1939.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.8" y="1950.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (24 samples, 1.51%)</title><rect x="310.8" y="1923.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.8" y="1934.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (24 samples, 1.51%)</title><rect x="310.8" y="1907.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.8" y="1918.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (2 samples, 0.13%)</title><rect x="312.2" y="1891.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.2" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (2 samples, 0.13%)</title><rect x="312.2" y="1875.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.2" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (1 samples, 0.06%)</title><rect x="313.0" y="1859.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.0" y="1870.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="313.0" y="1843.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.0" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.isNonLocal$1 (1 samples, 0.06%)</title><rect x="313.0" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.0" y="1838.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.isLocal (1 samples, 0.06%)</title><rect x="313.0" y="1811.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.0" y="1822.0"></text>
</g>
<g>
<title>akka/actor/LocalRef.isLocal$ (1 samples, 0.06%)</title><rect x="313.0" y="1795.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.0" y="1806.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="313.0" y="1779.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="316.0" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="313.0" y="1763.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="316.0" y="1774.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="313.0" y="1747.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="316.0" y="1758.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (14 samples, 0.88%)</title><rect x="313.7" y="1891.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.7" y="1902.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (13 samples, 0.82%)</title><rect x="313.7" y="1875.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.7" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (11 samples, 0.69%)</title><rect x="313.7" y="1859.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.7" y="1870.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (7 samples, 0.44%)</title><rect x="313.7" y="1843.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.7" y="1854.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (7 samples, 0.44%)</title><rect x="313.7" y="1827.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.44%)</title><rect x="313.7" y="1811.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (7 samples, 0.44%)</title><rect x="313.7" y="1795.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.13%)</title><rect x="313.7" y="1779.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.7" y="1790.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (2 samples, 0.13%)</title><rect x="313.7" y="1763.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.7" y="1774.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (1 samples, 0.06%)</title><rect x="313.7" y="1747.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.7" y="1758.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.06%)</title><rect x="313.7" y="1731.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.compareAndSet (1 samples, 0.06%)</title><rect x="313.7" y="1715.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.7" y="1726.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (1 samples, 0.06%)</title><rect x="314.5" y="1747.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.5" y="1758.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (1 samples, 0.06%)</title><rect x="314.5" y="1731.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.5" y="1742.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (1 samples, 0.06%)</title><rect x="314.5" y="1715.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.5" y="1726.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (1 samples, 0.06%)</title><rect x="314.5" y="1699.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.5" y="1710.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="314.5" y="1683.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="1694.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="314.5" y="1667.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.5" y="1678.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$129/1644250863.apply$mcV$sp (1 samples, 0.06%)</title><rect x="314.5" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="1662.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (1 samples, 0.06%)</title><rect x="314.5" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.5" y="1646.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="314.5" y="1619.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.5" y="1630.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (1 samples, 0.06%)</title><rect x="314.5" y="1603.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (5 samples, 0.31%)</title><rect x="315.2" y="1779.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (5 samples, 0.31%)</title><rect x="315.2" y="1763.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.2" y="1774.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemotingTerminator.&lt;init&gt; (5 samples, 0.31%)</title><rect x="315.2" y="1747.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.2" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="315.2" y="1731.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="318.2" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="315.2" y="1715.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="318.2" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1699.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="318.2" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1683.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="318.2" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1667.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="318.2" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1651.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="318.2" y="1662.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1635.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="318.2" y="1646.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="315.2" y="1619.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="318.2" y="1630.0"></text>
</g>
<g>
<title>akka/actor/FSM.$init$ (1 samples, 0.06%)</title><rect x="316.0" y="1731.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.0" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.0" y="1699.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.0" y="1683.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="316.0" y="1667.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="316.0" y="1651.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.0" y="1635.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.0" y="1646.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.0" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.0" y="1603.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.06%)</title><rect x="316.0" y="1587.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.06%)</title><rect x="316.0" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.0" y="1582.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemotingTerminator.startWith (1 samples, 0.06%)</title><rect x="316.7" y="1731.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.7" y="1742.0"></text>
</g>
<g>
<title>akka/actor/FSM.startWith$ (1 samples, 0.06%)</title><rect x="316.7" y="1715.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.7" y="1726.0"></text>
</g>
<g>
<title>akka/actor/FSM.startWith (1 samples, 0.06%)</title><rect x="316.7" y="1699.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.7" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.7" y="1683.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.7" y="1667.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="316.7" y="1651.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="316.7" y="1635.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="316.7" y="1619.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.7" y="1603.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.7" y="1614.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.7" y="1587.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="316.7" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="316.7" y="1555.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.7" y="1566.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="316.7" y="1539.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="319.7" y="1550.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="316.7" y="1523.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="319.7" y="1534.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="316.7" y="1507.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="319.7" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="316.7" y="1491.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="319.7" y="1502.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="316.7" y="1475.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="319.7" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="316.7" y="1459.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="319.7" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="316.7" y="1443.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="319.7" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.138] (1 samples, 0.06%)</title><rect x="316.7" y="1427.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="319.7" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="316.7" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="319.7" y="1422.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="316.7" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="319.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.13%)</title><rect x="317.4" y="1731.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.13%)</title><rect x="317.4" y="1715.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.13%)</title><rect x="317.4" y="1699.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.13%)</title><rect x="317.4" y="1683.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.13%)</title><rect x="317.4" y="1667.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="317.4" y="1651.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.4" y="1662.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="317.4" y="1635.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.4" y="1646.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="317.4" y="1619.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="317.4" y="1603.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="317.4" y="1587.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.06%)</title><rect x="317.4" y="1571.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.4" y="1582.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="317.4" y="1555.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="320.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="318.2" y="1651.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="318.2" y="1635.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.2" y="1646.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="318.2" y="1619.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.2" y="1630.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="318.2" y="1603.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.2" y="1614.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="318.2" y="1587.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.2" y="1598.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="318.2" y="1571.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.2" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="318.2" y="1555.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.2" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="318.2" y="1539.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.2" y="1550.0"></text>
</g>
<g>
<title>akka/actor/NoArgsReflectConstructor.produce (1 samples, 0.06%)</title><rect x="318.9" y="1843.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.9" y="1854.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (1 samples, 0.06%)</title><rect x="318.9" y="1827.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="1838.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="318.9" y="1811.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="318.9" y="1795.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="318.9" y="1779.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="318.9" y="1763.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.9" y="1774.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="318.9" y="1747.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.9" y="1758.0"></text>
</g>
<g>
<title>akka/cluster/Gossip$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="318.9" y="1731.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.9" y="1742.0"></text>
</g>
<g>
<title>akka/cluster/Gossip$.$lessinit$greater$default$3 (1 samples, 0.06%)</title><rect x="318.9" y="1715.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.9" y="1726.0"></text>
</g>
<g>
<title>akka/cluster/VectorClock$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="318.9" y="1699.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.9" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="318.9" y="1683.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="318.9" y="1667.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="318.9" y="1651.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="318.9" y="1635.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="318.9" y="1619.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="318.9" y="1603.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.9" y="1614.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="318.9" y="1587.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.9" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="318.9" y="1571.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.9" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="318.9" y="1555.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.9" y="1566.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="318.9" y="1539.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="321.9" y="1550.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="318.9" y="1523.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="321.9" y="1534.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="318.9" y="1507.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="321.9" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="318.9" y="1491.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="321.9" y="1502.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="318.9" y="1475.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="321.9" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="318.9" y="1459.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="321.9" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="318.9" y="1443.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="321.9" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="318.9" y="1427.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="321.9" y="1438.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="318.9" y="1411.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="321.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (3 samples, 0.19%)</title><rect x="319.7" y="1843.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.7" y="1854.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$$Lambda$919/1317963297.apply (1 samples, 0.06%)</title><rect x="319.7" y="1827.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.7" y="1838.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$.$anonfun$props$1 (1 samples, 0.06%)</title><rect x="319.7" y="1811.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="1822.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1795.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1779.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1763.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="319.7" y="1747.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="319.7" y="1731.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1715.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.7" y="1726.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.7" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1683.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="319.7" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1651.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1635.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="319.7" y="1619.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="319.7" y="1603.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="319.7" y="1587.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1571.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.7" y="1582.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1555.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="319.7" y="1539.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="319.7" y="1523.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.7" y="1534.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="319.7" y="1507.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="322.7" y="1518.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="319.7" y="1491.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="322.7" y="1502.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1475.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="322.7" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1459.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.7" y="1470.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1443.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.7" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1427.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="322.7" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1411.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="322.7" y="1422.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.06%)</title><rect x="319.7" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="322.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/MaterializerGuardian$$$Lambda$216/1103017075.apply (1 samples, 0.06%)</title><rect x="320.4" y="1827.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.4" y="1838.0"></text>
</g>
<g>
<title>akka/stream/impl/MaterializerGuardian$.$anonfun$props$1 (1 samples, 0.06%)</title><rect x="320.4" y="1811.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.4" y="1822.0"></text>
</g>
<g>
<title>akka/stream/impl/MaterializerGuardian.&lt;init&gt; (1 samples, 0.06%)</title><rect x="320.4" y="1795.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.4" y="1806.0"></text>
</g>
<g>
<title>akka/stream/impl/MaterializerGuardian.akka$stream$impl$MaterializerGuardian$$startMaterializer (1 samples, 0.06%)</title><rect x="320.4" y="1779.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.4" y="1790.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$.apply (1 samples, 0.06%)</title><rect x="320.4" y="1763.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.4" y="1774.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (1 samples, 0.06%)</title><rect x="320.4" y="1747.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.4" y="1758.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (1 samples, 0.06%)</title><rect x="320.4" y="1731.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.4" y="1742.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (1 samples, 0.06%)</title><rect x="320.4" y="1715.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.4" y="1726.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (1 samples, 0.06%)</title><rect x="320.4" y="1699.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.4" y="1710.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (1 samples, 0.06%)</title><rect x="320.4" y="1683.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="320.4" y="1667.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="320.4" y="1651.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.4" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="320.4" y="1635.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.4" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="320.4" y="1619.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="320.4" y="1603.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="320.4" y="1587.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="320.4" y="1571.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="320.4" y="1555.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="320.4" y="1539.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="320.4" y="1523.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="320.4" y="1507.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.06%)</title><rect x="320.4" y="1491.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.4" y="1502.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.06%)</title><rect x="320.4" y="1475.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="323.4" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="320.4" y="1459.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="323.4" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="320.4" y="1443.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="323.4" y="1454.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="320.4" y="1427.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="323.4" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="320.4" y="1411.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="323.4" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="320.4" y="1395.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="323.4" y="1406.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$$Lambda$946/2113273959.apply (1 samples, 0.06%)</title><rect x="321.2" y="1827.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.2" y="1838.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$.$anonfun$props$1 (1 samples, 0.06%)</title><rect x="321.2" y="1811.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.2" y="1822.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="321.2" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.2" y="1806.0"></text>
</g>
<g>
<title>akka/actor/TimerSchedulerImpl.startTimerAtFixedRate (1 samples, 0.06%)</title><rect x="321.2" y="1779.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.2" y="1790.0"></text>
</g>
<g>
<title>akka/actor/TimerSchedulerImpl.startTimer (1 samples, 0.06%)</title><rect x="321.2" y="1763.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.2" y="1774.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleAtFixedRate (1 samples, 0.06%)</title><rect x="321.2" y="1747.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.2" y="1758.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleAtFixedRate$ (1 samples, 0.06%)</title><rect x="321.2" y="1731.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.2" y="1742.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleAtFixedRate (1 samples, 0.06%)</title><rect x="321.2" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.2" y="1726.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.schedule (1 samples, 0.06%)</title><rect x="321.2" y="1699.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.2" y="1710.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.schedule$ (1 samples, 0.06%)</title><rect x="321.2" y="1683.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.2" y="1694.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.schedule (1 samples, 0.06%)</title><rect x="321.2" y="1667.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.2" y="1678.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.schedule (1 samples, 0.06%)</title><rect x="321.2" y="1651.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.2" y="1662.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="321.2" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="321.2" y="1619.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="321.2" y="1603.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="321.2" y="1587.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="321.2" y="1571.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="321.2" y="1555.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="321.2" y="1539.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="321.2" y="1523.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.2" y="1534.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="321.2" y="1507.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.2" y="1518.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="321.2" y="1491.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.2" y="1502.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="321.2" y="1475.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.2" y="1486.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="321.2" y="1459.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.2" y="1470.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="321.2" y="1443.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.2" y="1454.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="321.2" y="1427.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.2" y="1438.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.receive (1 samples, 0.06%)</title><rect x="321.9" y="1859.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.9" y="1870.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.uninitialized (1 samples, 0.06%)</title><rect x="321.9" y="1843.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.9" y="1854.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.receiveExitingCompleted (1 samples, 0.06%)</title><rect x="321.9" y="1827.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.9" y="1838.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="321.9" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="324.9" y="1822.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="321.9" y="1795.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="324.9" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="321.9" y="1779.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="324.9" y="1790.0"></text>
</g>
<g>
<title>klassItable::initialize_itable(bool, Thread*) (1 samples, 0.06%)</title><rect x="321.9" y="1763.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="324.9" y="1774.0"></text>
</g>
<g>
<title>klassItable::initialize_itable_for_interface(int, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="321.9" y="1747.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="324.9" y="1758.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="321.9" y="1731.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="324.9" y="1742.0"></text>
</g>
<g>
<title>akka/io/TcpListener.receive (1 samples, 0.06%)</title><rect x="322.6" y="1859.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.6" y="1870.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="322.6" y="1843.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="325.6" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1827.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="325.6" y="1838.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="325.6" y="1822.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1795.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="325.6" y="1806.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1779.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="325.6" y="1790.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1763.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="325.6" y="1774.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1747.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="325.6" y="1758.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1731.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="325.6" y="1742.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1715.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="325.6" y="1726.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="322.6" y="1699.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="325.6" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (1 samples, 0.06%)</title><rect x="323.4" y="1875.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.4" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (1 samples, 0.06%)</title><rect x="323.4" y="1859.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.4" y="1870.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (1 samples, 0.06%)</title><rect x="323.4" y="1843.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.4" y="1854.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (1 samples, 0.06%)</title><rect x="323.4" y="1827.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.4" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (1 samples, 0.06%)</title><rect x="323.4" y="1811.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.4" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (1 samples, 0.06%)</title><rect x="323.4" y="1795.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.4" y="1806.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (1 samples, 0.06%)</title><rect x="323.4" y="1779.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.4" y="1790.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer$.getByRef (1 samples, 0.06%)</title><rect x="323.4" y="1763.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.4" y="1774.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$EmptyChildrenContainer.getByRef$ (1 samples, 0.06%)</title><rect x="323.4" y="1747.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.4" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="323.4" y="1731.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="326.4" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="323.4" y="1715.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="326.4" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="323.4" y="1699.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="326.4" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, Thread*) (1 samples, 0.06%)</title><rect x="323.4" y="1683.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="326.4" y="1694.0"></text>
</g>
<g>
<title>Klass::search_secondary_supers(Klass*) const (1 samples, 0.06%)</title><rect x="323.4" y="1667.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="326.4" y="1678.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (1 samples, 0.06%)</title><rect x="324.1" y="1891.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.1" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (1 samples, 0.06%)</title><rect x="324.1" y="1875.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.1" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (1 samples, 0.06%)</title><rect x="324.1" y="1859.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.1" y="1870.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="324.1" y="1843.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="327.1" y="1854.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="324.1" y="1827.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="327.1" y="1838.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="324.1" y="1811.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="327.1" y="1822.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="324.1" y="1795.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.1" y="1806.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="324.1" y="1779.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="327.1" y="1790.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="324.1" y="1763.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.1" y="1774.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (3 samples, 0.19%)</title><rect x="324.9" y="1891.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.9" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (3 samples, 0.19%)</title><rect x="324.9" y="1875.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.9" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (3 samples, 0.19%)</title><rect x="324.9" y="1859.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.9" y="1870.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatchWatchedActors (1 samples, 0.06%)</title><rect x="324.9" y="1843.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.9" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatchWatchedActors (1 samples, 0.06%)</title><rect x="324.9" y="1827.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.9" y="1838.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (2 samples, 0.13%)</title><rect x="325.6" y="1843.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.6" y="1854.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (1 samples, 0.06%)</title><rect x="325.6" y="1827.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.6" y="1838.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (1 samples, 0.06%)</title><rect x="325.6" y="1811.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.6" y="1822.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (1 samples, 0.06%)</title><rect x="325.6" y="1795.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (1 samples, 0.06%)</title><rect x="325.6" y="1779.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (1 samples, 0.06%)</title><rect x="325.6" y="1763.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.6" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (1 samples, 0.06%)</title><rect x="326.3" y="1827.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.3" y="1838.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (1 samples, 0.06%)</title><rect x="326.3" y="1811.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="1822.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (1 samples, 0.06%)</title><rect x="326.3" y="1795.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.3" y="1806.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (1 samples, 0.06%)</title><rect x="326.3" y="1779.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.3" y="1790.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set2.foreach (1 samples, 0.06%)</title><rect x="326.3" y="1763.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.3" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$Lambda$612/2034979568.apply (1 samples, 0.06%)</title><rect x="326.3" y="1747.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.3" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.$anonfun$postStop$1$adapted (1 samples, 0.06%)</title><rect x="326.3" y="1731.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.3" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.$anonfun$postStop$1 (1 samples, 0.06%)</title><rect x="326.3" y="1715.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.3" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.tryAbort (1 samples, 0.06%)</title><rect x="326.3" y="1699.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.3" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finish (1 samples, 0.06%)</title><rect x="326.3" y="1683.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.3" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (1 samples, 0.06%)</title><rect x="326.3" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.3" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.postStop (1 samples, 0.06%)</title><rect x="326.3" y="1651.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.3" y="1662.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="326.3" y="1635.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.3" y="1646.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="326.3" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.3" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="326.3" y="1603.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.3" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$664/168163364.apply (1 samples, 0.06%)</title><rect x="326.3" y="1587.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.3" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$postStop$1$adapted (1 samples, 0.06%)</title><rect x="326.3" y="1571.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.3" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$postStop$1 (1 samples, 0.06%)</title><rect x="326.3" y="1555.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.3" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.shutdown (1 samples, 0.06%)</title><rect x="326.3" y="1539.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.3" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (1 samples, 0.06%)</title><rect x="326.3" y="1523.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.3" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (1 samples, 0.06%)</title><rect x="326.3" y="1507.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.3" y="1518.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.cancel (1 samples, 0.06%)</title><rect x="326.3" y="1491.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.3" y="1502.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.cancel (1 samples, 0.06%)</title><rect x="326.3" y="1475.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.3" y="1486.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.cancelSubstream (1 samples, 0.06%)</title><rect x="326.3" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.3" y="1470.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$CancelScheduledBeforeMaterialization.&lt;init&gt; (1 samples, 0.06%)</title><rect x="326.3" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.3" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="326.3" y="1427.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="329.3" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="326.3" y="1411.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="329.3" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="326.3" y="1395.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="329.3" y="1406.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(bool, Thread*) (1 samples, 0.06%)</title><rect x="326.3" y="1379.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="329.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (2 samples, 0.13%)</title><rect x="327.1" y="1891.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.1" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (2 samples, 0.13%)</title><rect x="327.1" y="1875.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.1" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (2 samples, 0.13%)</title><rect x="327.1" y="1859.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.1" y="1870.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (1 samples, 0.06%)</title><rect x="327.1" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.1" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (1 samples, 0.06%)</title><rect x="327.1" y="1827.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.1" y="1838.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (1 samples, 0.06%)</title><rect x="327.1" y="1811.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.1" y="1822.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (1 samples, 0.06%)</title><rect x="327.1" y="1795.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.1" y="1806.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (1 samples, 0.06%)</title><rect x="327.1" y="1779.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.1" y="1790.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (1 samples, 0.06%)</title><rect x="327.1" y="1763.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.1" y="1774.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (1 samples, 0.06%)</title><rect x="327.1" y="1747.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.1" y="1758.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (1 samples, 0.06%)</title><rect x="327.1" y="1731.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.1" y="1742.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (1 samples, 0.06%)</title><rect x="327.1" y="1715.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.1" y="1726.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (1 samples, 0.06%)</title><rect x="327.1" y="1699.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.1" y="1710.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (1 samples, 0.06%)</title><rect x="327.1" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.1" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (1 samples, 0.06%)</title><rect x="327.1" y="1667.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.1" y="1678.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (1 samples, 0.06%)</title><rect x="327.1" y="1651.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.1" y="1662.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (1 samples, 0.06%)</title><rect x="327.1" y="1635.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="1646.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.06%)</title><rect x="327.1" y="1619.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.1" y="1630.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.06%)</title><rect x="327.1" y="1603.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.1" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (1 samples, 0.06%)</title><rect x="327.8" y="1843.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.8" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (1 samples, 0.06%)</title><rect x="327.8" y="1827.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.8" y="1838.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="327.8" y="1811.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="330.8" y="1822.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="327.8" y="1795.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="330.8" y="1806.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="327.8" y="1779.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="330.8" y="1790.0"></text>
</g>
<g>
<title>ConstantPool::impl_tag_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="327.8" y="1763.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="330.8" y="1774.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (195 samples, 12.27%)</title><rect x="328.6" y="1939.0" width="144.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.6" y="1950.0">akka/dispatch/Mail..</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (190 samples, 11.96%)</title><rect x="328.6" y="1923.0" width="141.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.6" y="1934.0">akka/actor/ActorCe..</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (2 samples, 0.13%)</title><rect x="328.6" y="1907.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.6" y="1918.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (2 samples, 0.13%)</title><rect x="328.6" y="1891.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (2 samples, 0.13%)</title><rect x="328.6" y="1875.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.6" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (2 samples, 0.13%)</title><rect x="328.6" y="1859.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.6" y="1870.0"></text>
</g>
<g>
<title>scala/Option.foreach (2 samples, 0.13%)</title><rect x="328.6" y="1843.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.6" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$653/412787566.apply (2 samples, 0.13%)</title><rect x="328.6" y="1827.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.6" y="1838.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1$adapted (2 samples, 0.13%)</title><rect x="328.6" y="1811.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.6" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1 (2 samples, 0.13%)</title><rect x="328.6" y="1795.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.6" y="1806.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (2 samples, 0.13%)</title><rect x="328.6" y="1779.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="328.6" y="1763.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.6" y="1774.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="328.6" y="1747.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="331.6" y="1758.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="328.6" y="1731.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="331.6" y="1742.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="328.6" y="1715.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="331.6" y="1726.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="328.6" y="1699.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="331.6" y="1710.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider$SystemGuardian.aroundReceive (1 samples, 0.06%)</title><rect x="329.3" y="1763.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.3" y="1774.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="329.3" y="1747.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.3" y="1758.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="329.3" y="1731.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.3" y="1742.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider$SystemGuardian$$anonfun$receive$2.applyOrElse (1 samples, 0.06%)</title><rect x="329.3" y="1715.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.3" y="1726.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider$SystemGuardian.stopWhenAllTerminationHooksDone (1 samples, 0.06%)</title><rect x="329.3" y="1699.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.3" y="1710.0"></text>
</g>
<g>
<title>akka/event/EventStream.stopDefaultLoggers (1 samples, 0.06%)</title><rect x="329.3" y="1683.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.3" y="1694.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.stopDefaultLoggers$ (1 samples, 0.06%)</title><rect x="329.3" y="1667.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.3" y="1678.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.stopDefaultLoggers (1 samples, 0.06%)</title><rect x="329.3" y="1651.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.3" y="1662.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.setUpStdoutLogger (1 samples, 0.06%)</title><rect x="329.3" y="1635.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.3" y="1646.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="329.3" y="1619.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.3" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="329.3" y="1603.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.3" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="329.3" y="1587.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.3" y="1598.0"></text>
</g>
<g>
<title>akka/event/LoggingBus$$Lambda$66/630028734.apply (1 samples, 0.06%)</title><rect x="329.3" y="1571.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.3" y="1582.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$setUpStdoutLogger$3$adapted (1 samples, 0.06%)</title><rect x="329.3" y="1555.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.3" y="1566.0"></text>
</g>
<g>
<title>akka/event/LoggingBus.$anonfun$setUpStdoutLogger$3 (1 samples, 0.06%)</title><rect x="329.3" y="1539.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.3" y="1550.0"></text>
</g>
<g>
<title>akka/event/EventStream.subscribe (1 samples, 0.06%)</title><rect x="329.3" y="1523.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.3" y="1534.0"></text>
</g>
<g>
<title>akka/event/EventStream.subscribe (1 samples, 0.06%)</title><rect x="329.3" y="1507.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.3" y="1518.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe$ (1 samples, 0.06%)</title><rect x="329.3" y="1491.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.3" y="1502.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe (1 samples, 0.06%)</title><rect x="329.3" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.3" y="1486.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.addValue (1 samples, 0.06%)</title><rect x="329.3" y="1459.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.3" y="1470.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.mergeChangesByKey (1 samples, 0.06%)</title><rect x="329.3" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foldLeft (1 samples, 0.06%)</title><rect x="329.3" y="1427.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foldLeft$ (1 samples, 0.06%)</title><rect x="329.3" y="1411.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foldLeft (1 samples, 0.06%)</title><rect x="329.3" y="1395.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.3" y="1406.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex$$Lambda$75/220695851.apply (1 samples, 0.06%)</title><rect x="329.3" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.3" y="1390.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.$anonfun$mergeChangesByKey$1 (1 samples, 0.06%)</title><rect x="329.3" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.3" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (1 samples, 0.06%)</title><rect x="329.3" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (1 samples, 0.06%)</title><rect x="329.3" y="1331.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (1 samples, 0.06%)</title><rect x="329.3" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (1 samples, 0.06%)</title><rect x="329.3" y="1299.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (1 samples, 0.06%)</title><rect x="329.3" y="1283.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (1 samples, 0.06%)</title><rect x="329.3" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="329.3" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="329.3" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific$ (1 samples, 0.06%)</title><rect x="329.3" y="1219.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific (1 samples, 0.06%)</title><rect x="329.3" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="329.3" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="329.3" y="1171.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/View$Concat.knownSize (1 samples, 0.06%)</title><rect x="329.3" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.knownSize (1 samples, 0.06%)</title><rect x="329.3" y="1139.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (1 samples, 0.06%)</title><rect x="330.1" y="1907.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="1918.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (1 samples, 0.06%)</title><rect x="330.1" y="1891.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.1" y="1902.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (1 samples, 0.06%)</title><rect x="330.1" y="1875.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.1" y="1886.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (1 samples, 0.06%)</title><rect x="330.1" y="1859.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.1" y="1870.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (1 samples, 0.06%)</title><rect x="330.1" y="1843.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.1" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (1 samples, 0.06%)</title><rect x="330.1" y="1827.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.1" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (1 samples, 0.06%)</title><rect x="330.1" y="1811.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.1" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (1 samples, 0.06%)</title><rect x="330.1" y="1795.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.1" y="1806.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (1 samples, 0.06%)</title><rect x="330.1" y="1779.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.1" y="1790.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (187 samples, 11.77%)</title><rect x="330.8" y="1907.0" width="138.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.8" y="1918.0">akka/actor/ActorC..</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.aroundReceive (48 samples, 3.02%)</title><rect x="330.8" y="1891.0" width="35.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.8" y="1902.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (48 samples, 3.02%)</title><rect x="330.8" y="1875.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.8" y="1886.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (48 samples, 3.02%)</title><rect x="330.8" y="1859.0" width="35.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.8" y="1870.0">akk..</text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (48 samples, 3.02%)</title><rect x="330.8" y="1843.0" width="35.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.8" y="1854.0">sca..</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$anonfun$tryingToJoin$1.applyOrElse (48 samples, 3.02%)</title><rect x="330.8" y="1827.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.8" y="1838.0">akk..</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.join (48 samples, 3.02%)</title><rect x="330.8" y="1811.0" width="35.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.8" y="1822.0">akk..</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (38 samples, 2.39%)</title><rect x="330.8" y="1795.0" width="28.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.8" y="1806.0">ak..</text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.createRapidClusterBuilder$1 (8 samples, 0.50%)</title><rect x="330.8" y="1779.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="1790.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="330.8" y="1763.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.8" y="1774.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="330.8" y="1747.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="333.8" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="330.8" y="1731.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="333.8" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1715.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="333.8" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1699.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="333.8" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1683.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="333.8" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1667.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.8" y="1678.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1651.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="333.8" y="1662.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1635.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="333.8" y="1646.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1619.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="333.8" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1603.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="333.8" y="1614.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="330.8" y="1587.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.8" y="1598.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="330.8" y="1571.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="333.8" y="1582.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.setMetadata (7 samples, 0.44%)</title><rect x="331.5" y="1763.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.5" y="1774.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.putAllMetadata (7 samples, 0.44%)</title><rect x="331.5" y="1747.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="334.5" y="1758.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$Builder.internalGetMutableMetadata (7 samples, 0.44%)</title><rect x="331.5" y="1731.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.5" y="1742.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$MetadataDefaultEntryHolder.&lt;clinit&gt; (7 samples, 0.44%)</title><rect x="331.5" y="1715.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.5" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="331.5" y="1699.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="334.5" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="331.5" y="1683.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="334.5" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="331.5" y="1667.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="334.5" y="1678.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="331.5" y="1651.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="334.5" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="331.5" y="1635.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="334.5" y="1646.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="331.5" y="1619.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="334.5" y="1630.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="331.5" y="1603.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="334.5" y="1614.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Remoting.&lt;clinit&gt; (5 samples, 0.31%)</title><rect x="332.3" y="1699.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.3" y="1710.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.internalBuildGeneratedFileFrom (5 samples, 0.31%)</title><rect x="332.3" y="1683.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.3" y="1694.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.parseFrom (3 samples, 0.19%)</title><rect x="332.3" y="1667.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.3" y="1678.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.19%)</title><rect x="332.3" y="1651.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.3" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.19%)</title><rect x="332.3" y="1635.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.3" y="1646.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.19%)</title><rect x="332.3" y="1619.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.3" y="1630.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.19%)</title><rect x="332.3" y="1603.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.3" y="1614.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (3 samples, 0.19%)</title><rect x="332.3" y="1587.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.3" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto$1.parsePartialFrom (3 samples, 0.19%)</title><rect x="332.3" y="1571.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.3" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto$1.parsePartialFrom (3 samples, 0.19%)</title><rect x="332.3" y="1555.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.3" y="1566.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.&lt;init&gt; (3 samples, 0.19%)</title><rect x="332.3" y="1539.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.3" y="1550.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$FileDescriptorProto.&lt;init&gt; (3 samples, 0.19%)</title><rect x="332.3" y="1523.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.3" y="1534.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="332.3" y="1507.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.3" y="1518.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="332.3" y="1491.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.3" y="1502.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="332.3" y="1475.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.3" y="1486.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (1 samples, 0.06%)</title><rect x="332.3" y="1459.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.3" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (1 samples, 0.06%)</title><rect x="332.3" y="1443.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.3" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.06%)</title><rect x="332.3" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.3" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="332.3" y="1411.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.3" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto$1.parsePartialFrom (1 samples, 0.06%)</title><rect x="332.3" y="1395.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.3" y="1406.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (1 samples, 0.06%)</title><rect x="332.3" y="1379.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.3" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$DescriptorProto.&lt;init&gt; (1 samples, 0.06%)</title><rect x="332.3" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="332.3" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="332.3" y="1331.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="332.3" y="1315.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="332.3" y="1299.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="332.3" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="332.3" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getManifest (1 samples, 0.06%)</title><rect x="332.3" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.3" y="1262.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifest (1 samples, 0.06%)</title><rect x="332.3" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.3" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/DescriptorProtos$EnumDescriptorProto.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="333.0" y="1507.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.0" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="333.0" y="1491.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="336.0" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="333.0" y="1475.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="336.0" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="333.0" y="1459.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="336.0" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="333.0" y="1443.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="336.0" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="333.0" y="1427.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="336.0" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="333.0" y="1411.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="336.0" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet.newBuilder (1 samples, 0.06%)</title><rect x="333.8" y="1507.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.8" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="333.8" y="1491.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="336.8" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="333.8" y="1475.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.8" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1459.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="336.8" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1443.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="336.8" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1427.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="336.8" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1411.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="336.8" y="1422.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="336.8" y="1406.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1379.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="336.8" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="336.8" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1347.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="336.8" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1331.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="336.8" y="1342.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="336.8" y="1326.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="333.8" y="1299.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="336.8" y="1310.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="333.8" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="336.8" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.buildFrom (2 samples, 0.13%)</title><rect x="334.5" y="1667.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.5" y="1678.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FileDescriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="334.5" y="1651.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.5" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$Descriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="334.5" y="1635.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.5" y="1646.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$Descriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="334.5" y="1619.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.5" y="1630.0"></text>
</g>
<g>
<title>com/google/protobuf/Descriptors$FieldDescriptor.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="334.5" y="1603.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="334.5" y="1587.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="334.5" y="1571.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="334.5" y="1555.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.5" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="334.5" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="334.5" y="1523.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="334.5" y="1507.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="334.5" y="1491.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.5" y="1502.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="334.5" y="1475.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.5" y="1486.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="334.5" y="1459.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.5" y="1470.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="334.5" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.5" y="1454.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="334.5" y="1427.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="337.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="335.3" y="1651.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="335.3" y="1635.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="335.3" y="1619.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="335.3" y="1603.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.3" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="335.3" y="1587.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.3" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="335.3" y="1571.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="335.3" y="1555.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="335.3" y="1539.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.3" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="335.3" y="1523.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="335.3" y="1507.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="1518.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.06%)</title><rect x="335.3" y="1491.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="1502.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.06%)</title><rect x="335.3" y="1475.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.3" y="1486.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.06%)</title><rect x="335.3" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.3" y="1470.0"></text>
</g>
<g>
<title>__lseek (1 samples, 0.06%)</title><rect x="335.3" y="1443.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="338.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="336.0" y="1699.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="336.0" y="1683.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="336.0" y="1667.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="336.0" y="1651.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="336.0" y="1635.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="336.0" y="1619.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="336.0" y="1603.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.0" y="1614.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="336.0" y="1587.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.0" y="1598.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="336.0" y="1571.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.0" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="336.0" y="1555.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="336.0" y="1539.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="339.0" y="1550.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="336.0" y="1523.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="339.0" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (10 samples, 0.63%)</title><rect x="336.7" y="1779.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.7" y="1790.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (8 samples, 0.50%)</title><rect x="336.7" y="1763.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.7" y="1774.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (6 samples, 0.38%)</title><rect x="336.7" y="1747.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.7" y="1758.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (4 samples, 0.25%)</title><rect x="336.7" y="1731.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.7" y="1742.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.joinAttempt$1 (1 samples, 0.06%)</title><rect x="336.7" y="1715.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="1726.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (1 samples, 0.06%)</title><rect x="336.7" y="1699.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.7" y="1710.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (1 samples, 0.06%)</title><rect x="336.7" y="1683.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.7" y="1694.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (1 samples, 0.06%)</title><rect x="336.7" y="1667.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.7" y="1678.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (1 samples, 0.06%)</title><rect x="336.7" y="1651.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.7" y="1662.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="336.7" y="1635.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.7" y="1646.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="336.7" y="1619.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.7" y="1630.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="336.7" y="1603.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.7" y="1614.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="336.7" y="1587.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.7" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (1 samples, 0.06%)</title><rect x="336.7" y="1571.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.7" y="1582.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="336.7" y="1555.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.7" y="1566.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="336.7" y="1539.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.7" y="1550.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="336.7" y="1523.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.7" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$391/667542973.apply (1 samples, 0.06%)</title><rect x="336.7" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.7" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (1 samples, 0.06%)</title><rect x="336.7" y="1491.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.7" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (1 samples, 0.06%)</title><rect x="336.7" y="1475.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.7" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (1 samples, 0.06%)</title><rect x="336.7" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.7" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (1 samples, 0.06%)</title><rect x="336.7" y="1443.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.7" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.authority (1 samples, 0.06%)</title><rect x="336.7" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.userinfo (1 samples, 0.06%)</title><rect x="336.7" y="1411.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.7" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$6 (1 samples, 0.06%)</title><rect x="336.7" y="1395.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.7" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (3 samples, 0.19%)</title><rect x="337.5" y="1715.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="1726.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (3 samples, 0.19%)</title><rect x="337.5" y="1699.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.5" y="1710.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (1 samples, 0.06%)</title><rect x="337.5" y="1683.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.5" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.bindAndHandle (1 samples, 0.06%)</title><rect x="337.5" y="1667.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.5" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.fuseServerBidiFlow (1 samples, 0.06%)</title><rect x="337.5" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.5" y="1662.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.serverLayerImpl (1 samples, 0.06%)</title><rect x="337.5" y="1635.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.5" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.apply (1 samples, 0.06%)</title><rect x="337.5" y="1619.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.5" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.parsingRendering (1 samples, 0.06%)</title><rect x="337.5" y="1603.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.5" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.parsing (1 samples, 0.06%)</title><rect x="337.5" y="1587.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.5" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (1 samples, 0.06%)</title><rect x="337.5" y="1571.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.5" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (1 samples, 0.06%)</title><rect x="337.5" y="1555.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.5" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (1 samples, 0.06%)</title><rect x="337.5" y="1539.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.5" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.06%)</title><rect x="337.5" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.5" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.06%)</title><rect x="337.5" y="1507.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.5" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="337.5" y="1491.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/1687009269.apply (1 samples, 0.06%)</title><rect x="337.5" y="1475.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.5" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="337.5" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.5" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.apply (1 samples, 0.06%)</title><rect x="337.5" y="1443.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.5" y="1454.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="337.5" y="1427.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.5" y="1438.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="337.5" y="1411.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.5" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="337.5" y="1395.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.5" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19$$Lambda$429/1582521347.apply (1 samples, 0.06%)</title><rect x="337.5" y="1379.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.5" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.$anonfun$apply$19 (1 samples, 0.06%)</title><rect x="337.5" y="1363.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.connection (1 samples, 0.06%)</title><rect x="337.5" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection$ (1 samples, 0.06%)</title><rect x="337.5" y="1331.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection (1 samples, 0.06%)</title><rect x="337.5" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Connection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="337.5" y="1299.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="337.5" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="337.5" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="337.5" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.06%)</title><rect x="337.5" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.06%)</title><rect x="337.5" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.06%)</title><rect x="337.5" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.lengthCompare (1 samples, 0.06%)</title><rect x="337.5" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (2 samples, 0.13%)</title><rect x="338.2" y="1683.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.2" y="1694.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (2 samples, 0.13%)</title><rect x="338.2" y="1667.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.2" y="1678.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="338.2" y="1651.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.2" y="1662.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="338.2" y="1635.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.2" y="1646.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (1 samples, 0.06%)</title><rect x="338.2" y="1619.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.2" y="1630.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.getSerializedSize (1 samples, 0.06%)</title><rect x="338.2" y="1603.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.2" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.06%)</title><rect x="339.0" y="1651.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.0" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.06%)</title><rect x="339.0" y="1635.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.0" y="1646.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.06%)</title><rect x="339.0" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.0" y="1630.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.06%)</title><rect x="339.0" y="1603.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.0" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="339.0" y="1587.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.0" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="339.0" y="1571.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.0" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.06%)</title><rect x="339.0" y="1555.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.0" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (1 samples, 0.06%)</title><rect x="339.0" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.0" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (1 samples, 0.06%)</title><rect x="339.0" y="1523.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.0" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (1 samples, 0.06%)</title><rect x="339.0" y="1507.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (1 samples, 0.06%)</title><rect x="339.0" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="339.0" y="1475.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.0" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="339.0" y="1459.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.0" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.06%)</title><rect x="339.0" y="1443.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="339.7" y="1731.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.7" y="1742.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="339.7" y="1715.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.7" y="1726.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (2 samples, 0.13%)</title><rect x="339.7" y="1699.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.7" y="1710.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (2 samples, 0.13%)</title><rect x="339.7" y="1683.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.7" y="1694.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="339.7" y="1667.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.7" y="1678.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="339.7" y="1651.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.7" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (1 samples, 0.06%)</title><rect x="339.7" y="1635.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.7" y="1646.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (1 samples, 0.06%)</title><rect x="339.7" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.7" y="1630.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="339.7" y="1603.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.7" y="1614.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="339.7" y="1587.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.7" y="1598.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.writeTo (1 samples, 0.06%)</title><rect x="339.7" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.7" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="339.7" y="1555.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.7" y="1566.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="339.7" y="1539.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.7" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (1 samples, 0.06%)</title><rect x="339.7" y="1523.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.7" y="1534.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (1 samples, 0.06%)</title><rect x="339.7" y="1507.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.7" y="1518.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (1 samples, 0.06%)</title><rect x="339.7" y="1491.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.7" y="1502.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="339.7" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.7" y="1486.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.06%)</title><rect x="339.7" y="1459.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.7" y="1470.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (1 samples, 0.06%)</title><rect x="339.7" y="1443.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.7" y="1454.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="339.7" y="1427.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.7" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.newBuilder (1 samples, 0.06%)</title><rect x="340.5" y="1667.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.5" y="1678.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.toBuilder (1 samples, 0.06%)</title><rect x="340.5" y="1651.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.5" y="1662.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$Builder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="340.5" y="1635.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.5" y="1646.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$Builder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="340.5" y="1619.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.5" y="1630.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$Builder.maybeForceBuilderInitialization (1 samples, 0.06%)</title><rect x="340.5" y="1603.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.5" y="1614.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.access$200 (1 samples, 0.06%)</title><rect x="340.5" y="1587.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.5" y="1598.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="341.2" y="1747.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.2" y="1758.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="341.2" y="1731.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.2" y="1742.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (1 samples, 0.06%)</title><rect x="341.2" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.2" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.bindAndHandle (1 samples, 0.06%)</title><rect x="341.2" y="1699.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.2" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.fuseServerBidiFlow (1 samples, 0.06%)</title><rect x="341.2" y="1683.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.2" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.serverLayerImpl (1 samples, 0.06%)</title><rect x="341.2" y="1667.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.2" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.apply (1 samples, 0.06%)</title><rect x="341.2" y="1651.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.2" y="1662.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (1 samples, 0.06%)</title><rect x="341.2" y="1635.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.2" y="1646.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (1 samples, 0.06%)</title><rect x="341.2" y="1619.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.2" y="1630.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (1 samples, 0.06%)</title><rect x="341.2" y="1603.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.2" y="1614.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="341.2" y="1587.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.2" y="1598.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (1 samples, 0.06%)</title><rect x="341.2" y="1571.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.2" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (1 samples, 0.06%)</title><rect x="341.2" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.2" y="1566.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (1 samples, 0.06%)</title><rect x="341.2" y="1539.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.2" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map3.removed (1 samples, 0.06%)</title><rect x="341.2" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.2" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map3.removed (1 samples, 0.06%)</title><rect x="341.2" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.2" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="341.2" y="1491.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="344.2" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="341.2" y="1475.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="344.2" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (1 samples, 0.06%)</title><rect x="341.9" y="1715.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.9" y="1726.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (1 samples, 0.06%)</title><rect x="341.9" y="1699.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.9" y="1710.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.06%)</title><rect x="341.9" y="1683.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.9" y="1694.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.06%)</title><rect x="341.9" y="1667.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.9" y="1678.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.06%)</title><rect x="341.9" y="1651.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.9" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.06%)</title><rect x="341.9" y="1635.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.9" y="1646.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="341.9" y="1619.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.9" y="1630.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="341.9" y="1603.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.9" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.06%)</title><rect x="341.9" y="1587.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.9" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (1 samples, 0.06%)</title><rect x="341.9" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.9" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="341.9" y="1555.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.9" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="341.9" y="1539.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.9" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.06%)</title><rect x="341.9" y="1523.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.9" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.06%)</title><rect x="341.9" y="1507.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.9" y="1518.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="341.9" y="1491.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.9" y="1502.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="341.9" y="1475.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.9" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="341.9" y="1459.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="344.9" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="342.7" y="1763.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.7" y="1774.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (2 samples, 0.13%)</title><rect x="342.7" y="1747.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.7" y="1758.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (1 samples, 0.06%)</title><rect x="342.7" y="1731.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.7" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (1 samples, 0.06%)</title><rect x="342.7" y="1715.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.7" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply$ (1 samples, 0.06%)</title><rect x="342.7" y="1699.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.7" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply (1 samples, 0.06%)</title><rect x="342.7" y="1683.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.7" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (1 samples, 0.06%)</title><rect x="342.7" y="1667.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.7" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (1 samples, 0.06%)</title><rect x="342.7" y="1651.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.7" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/util/SettingsCompanionImpl.apply (1 samples, 0.06%)</title><rect x="342.7" y="1635.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.7" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (1 samples, 0.06%)</title><rect x="342.7" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.7" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (1 samples, 0.06%)</title><rect x="342.7" y="1603.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.7" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl$.fromSubConfig (1 samples, 0.06%)</title><rect x="342.7" y="1587.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.7" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.toMap (1 samples, 0.06%)</title><rect x="342.7" y="1571.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.7" y="1582.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (1 samples, 0.06%)</title><rect x="342.7" y="1555.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.7" y="1566.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (1 samples, 0.06%)</title><rect x="342.7" y="1539.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.7" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (1 samples, 0.06%)</title><rect x="343.4" y="1731.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.4" y="1742.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (1 samples, 0.06%)</title><rect x="343.4" y="1715.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.4" y="1726.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="343.4" y="1699.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.4" y="1710.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (1 samples, 0.06%)</title><rect x="343.4" y="1683.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.4" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="343.4" y="1667.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.4" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (1 samples, 0.06%)</title><rect x="343.4" y="1651.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.4" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (1 samples, 0.06%)</title><rect x="343.4" y="1635.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.4" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="343.4" y="1619.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="343.4" y="1603.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.4" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$391/667542973.get$Lambda (1 samples, 0.06%)</title><rect x="343.4" y="1587.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.4" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$391/667542973.&lt;init&gt; (1 samples, 0.06%)</title><rect x="343.4" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.4" y="1582.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (20 samples, 1.26%)</title><rect x="344.2" y="1779.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="1790.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.join (20 samples, 1.26%)</title><rect x="344.2" y="1763.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.2" y="1774.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.start (9 samples, 0.57%)</title><rect x="344.2" y="1747.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.2" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$.apply (1 samples, 0.06%)</title><rect x="344.2" y="1731.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.2" y="1742.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="344.2" y="1715.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.2" y="1726.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="344.2" y="1699.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.2" y="1710.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="344.2" y="1683.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.2" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$.createExtension (1 samples, 0.06%)</title><rect x="344.2" y="1667.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.2" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$.createExtension (1 samples, 0.06%)</title><rect x="344.2" y="1651.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.2" y="1662.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.2" y="1635.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.2" y="1646.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/akka/AkkaSSLConfig$.apply (1 samples, 0.06%)</title><rect x="344.2" y="1619.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.2" y="1630.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/akka/AkkaSSLConfig$.apply (1 samples, 0.06%)</title><rect x="344.2" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.2" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.06%)</title><rect x="344.2" y="1587.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.2" y="1598.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.06%)</title><rect x="344.2" y="1571.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.2" y="1582.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.06%)</title><rect x="344.2" y="1555.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.2" y="1566.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/akka/AkkaSSLConfig$.createExtension (1 samples, 0.06%)</title><rect x="344.2" y="1539.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.2" y="1550.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/akka/AkkaSSLConfig$.createExtension (1 samples, 0.06%)</title><rect x="344.2" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.2" y="1534.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/akka/AkkaSSLConfig.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.2" y="1507.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.2" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder.build (1 samples, 0.06%)</title><rect x="344.2" y="1491.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.2" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.map (1 samples, 0.06%)</title><rect x="344.2" y="1475.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.2" y="1486.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (1 samples, 0.06%)</title><rect x="344.2" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.2" y="1470.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map (1 samples, 0.06%)</title><rect x="344.2" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.2" y="1454.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder$$Lambda$269/1994614828.apply (1 samples, 0.06%)</title><rect x="344.2" y="1427.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.2" y="1438.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder.$anonfun$build$1 (1 samples, 0.06%)</title><rect x="344.2" y="1411.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.2" y="1422.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.apply (1 samples, 0.06%)</title><rect x="344.2" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.2" y="1406.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.parseAll (1 samples, 0.06%)</title><rect x="344.2" y="1379.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.2" y="1390.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.parseAll$ (1 samples, 0.06%)</title><rect x="344.2" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.2" y="1374.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.parseAll (1 samples, 0.06%)</title><rect x="344.2" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.2" y="1358.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.phrase (1 samples, 0.06%)</title><rect x="344.2" y="1331.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.2" y="1342.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.phrase$ (1 samples, 0.06%)</title><rect x="344.2" y="1315.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.2" y="1326.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.phrase (1 samples, 0.06%)</title><rect x="344.2" y="1299.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.2" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.scala$util$parsing$combinator$RegexParsers$$super$phrase (1 samples, 0.06%)</title><rect x="344.2" y="1283.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.2" y="1294.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/Parsers.phrase$ (1 samples, 0.06%)</title><rect x="344.2" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.2" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="344.2" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="347.2" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="344.2" y="1235.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="347.2" y="1246.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="344.2" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="347.2" y="1230.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="344.2" y="1203.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="347.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.bindAndHandle (3 samples, 0.19%)</title><rect x="344.9" y="1731.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.9" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.9" y="1715.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.9" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="344.9" y="1699.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="344.9" y="1683.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="347.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="344.9" y="1667.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="344.9" y="1651.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="344.9" y="1635.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="344.9" y="1619.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="344.9" y="1603.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.9" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="344.9" y="1587.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.9" y="1598.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.9" y="1571.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.9" y="1582.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.9" y="1555.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.9" y="1566.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="344.9" y="1539.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.9" y="1550.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.fuseServerBidiFlow (2 samples, 0.13%)</title><rect x="345.7" y="1715.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.7" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.serverLayerImpl (2 samples, 0.13%)</title><rect x="345.7" y="1699.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.7" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.apply (2 samples, 0.13%)</title><rect x="345.7" y="1683.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.7" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.parsingRendering (1 samples, 0.06%)</title><rect x="345.7" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.7" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.parsing (1 samples, 0.06%)</title><rect x="345.7" y="1651.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser.&lt;init&gt; (1 samples, 0.06%)</title><rect x="345.7" y="1635.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.7" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="345.7" y="1619.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="348.7" y="1630.0"></text>
</g>
<g>
<title>FieldType::basic_type(Symbol*) (1 samples, 0.06%)</title><rect x="345.7" y="1603.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="348.7" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.requestTimeoutSupport (1 samples, 0.06%)</title><rect x="346.4" y="1667.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="346.4" y="1651.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="346.4" y="1635.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="346.4" y="1619.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="346.4" y="1603.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="346.4" y="1587.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="346.4" y="1571.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.4" y="1582.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="346.4" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="346.4" y="1539.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="346.4" y="1523.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.4" y="1534.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="346.4" y="1507.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="349.4" y="1518.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="346.4" y="1491.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="349.4" y="1502.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="346.4" y="1475.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="349.4" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="346.4" y="1459.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="349.4" y="1470.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="346.4" y="1443.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="349.4" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="346.4" y="1427.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="349.4" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="346.4" y="1411.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="349.4" y="1422.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="346.4" y="1395.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="349.4" y="1406.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="346.4" y="1379.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="349.4" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteResult$.route2HandlerFlow$default$7 (3 samples, 0.19%)</title><rect x="347.1" y="1731.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.1" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RejectionHandler$.&lt;clinit&gt; (2 samples, 0.13%)</title><rect x="347.1" y="1715.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.1" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RejectionHandler$.akka$http$scaladsl$server$RejectionHandler$$rejectRequestEntityAndComplete (1 samples, 0.06%)</title><rect x="347.1" y="1699.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.1" y="1683.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.1" y="1667.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.1" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.1" y="1651.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1635.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.1" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1603.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.1" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1587.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1571.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="347.1" y="1555.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="347.1" y="1539.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.1" y="1550.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="347.1" y="1523.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="350.1" y="1534.0"></text>
</g>
<g>
<title>VerifyClassname (1 samples, 0.06%)</title><rect x="347.1" y="1507.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="350.1" y="1518.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (1 samples, 0.06%)</title><rect x="347.1" y="1491.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="350.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.9" y="1699.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.9" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="347.9" y="1667.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="347.9" y="1651.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="347.9" y="1635.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="347.9" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.9" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="347.9" y="1603.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.9" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="347.9" y="1587.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.9" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="347.9" y="1571.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.9" y="1582.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="347.9" y="1555.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="350.9" y="1566.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="347.9" y="1539.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="350.9" y="1550.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="347.9" y="1523.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="350.9" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="347.9" y="1507.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="350.9" y="1518.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="347.9" y="1491.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="350.9" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="347.9" y="1475.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="350.9" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="347.9" y="1459.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="350.9" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="347.9" y="1443.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="350.9" y="1454.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="347.9" y="1427.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.9" y="1438.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="347.9" y="1411.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="350.9" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="347.9" y="1395.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="350.9" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="347.9" y="1379.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.9" y="1390.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="347.9" y="1363.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.9" y="1374.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="347.9" y="1347.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.9" y="1358.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="347.9" y="1331.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="350.9" y="1342.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="347.9" y="1315.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="348.6" y="1715.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.6" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="348.6" y="1699.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="348.6" y="1683.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="348.6" y="1667.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="348.6" y="1651.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="348.6" y="1635.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.6" y="1646.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="348.6" y="1619.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.6" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="348.6" y="1603.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.6" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="348.6" y="1587.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.6" y="1598.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="348.6" y="1571.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="351.6" y="1582.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.13%)</title><rect x="349.4" y="1731.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.4" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply$ (2 samples, 0.13%)</title><rect x="349.4" y="1715.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.4" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/SettingsCompanion.apply (2 samples, 0.13%)</title><rect x="349.4" y="1699.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.4" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.13%)</title><rect x="349.4" y="1683.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.4" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ServerSettings$.apply (2 samples, 0.13%)</title><rect x="349.4" y="1667.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.4" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="349.4" y="1651.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.4" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="349.4" y="1635.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="352.4" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/util/SettingsCompanionImpl.apply (1 samples, 0.06%)</title><rect x="350.1" y="1651.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.1" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (1 samples, 0.06%)</title><rect x="350.1" y="1635.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.1" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ServerSettingsImpl$.fromSubConfig (1 samples, 0.06%)</title><rect x="350.1" y="1619.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="1630.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader$.parse (1 samples, 0.06%)</title><rect x="350.1" y="1603.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.1" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.parseFull (1 samples, 0.06%)</title><rect x="350.1" y="1587.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="350.1" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="350.1" y="1555.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="350.1" y="1539.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="350.1" y="1523.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="350.1" y="1507.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="350.1" y="1491.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="350.1" y="1475.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="350.1" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="350.1" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="350.1" y="1427.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.1" y="1438.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="350.1" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.1" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="350.1" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="350.1" y="1379.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="350.1" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="350.1" y="1347.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.1" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.joinAttempt (10 samples, 0.63%)</title><rect x="350.9" y="1747.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.9" y="1758.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.13%)</title><rect x="350.9" y="1731.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.9" y="1742.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.13%)</title><rect x="350.9" y="1715.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.9" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest$default$2 (1 samples, 0.06%)</title><rect x="350.9" y="1699.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.9" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.defaultClientHttpsContext (1 samples, 0.06%)</title><rect x="350.9" y="1683.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.9" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.createDefaultClientHttpsContext (1 samples, 0.06%)</title><rect x="350.9" y="1667.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.9" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/DefaultSSLContextCreation.createDefaultClientHttpsContext$ (1 samples, 0.06%)</title><rect x="350.9" y="1651.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.9" y="1662.0"></text>
</g>
<g>
<title>akka/http/scaladsl/DefaultSSLContextCreation.createDefaultClientHttpsContext (1 samples, 0.06%)</title><rect x="350.9" y="1635.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.9" y="1646.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.createClientHttpsContext (1 samples, 0.06%)</title><rect x="350.9" y="1619.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.9" y="1630.0"></text>
</g>
<g>
<title>akka/http/scaladsl/DefaultSSLContextCreation.createClientHttpsContext$ (1 samples, 0.06%)</title><rect x="350.9" y="1603.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.9" y="1614.0"></text>
</g>
<g>
<title>akka/http/scaladsl/DefaultSSLContextCreation.createClientHttpsContext (1 samples, 0.06%)</title><rect x="350.9" y="1587.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.9" y="1598.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder.build (1 samples, 0.06%)</title><rect x="350.9" y="1571.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.9" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.map (1 samples, 0.06%)</title><rect x="350.9" y="1555.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.9" y="1566.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (1 samples, 0.06%)</title><rect x="350.9" y="1539.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.9" y="1550.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map (1 samples, 0.06%)</title><rect x="350.9" y="1523.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.9" y="1534.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder$$Lambda$291/1316251533.apply (1 samples, 0.06%)</title><rect x="350.9" y="1507.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.9" y="1518.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/ConfigSSLContextBuilder.$anonfun$build$2 (1 samples, 0.06%)</title><rect x="350.9" y="1491.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.9" y="1502.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.apply (1 samples, 0.06%)</title><rect x="350.9" y="1475.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.9" y="1486.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.expression (1 samples, 0.06%)</title><rect x="350.9" y="1459.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.9" y="1470.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.algorithm (1 samples, 0.06%)</title><rect x="350.9" y="1443.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.9" y="1454.0"></text>
</g>
<g>
<title>com/typesafe/sslconfig/ssl/AlgorithmConstraintsParser$.regex (1 samples, 0.06%)</title><rect x="350.9" y="1427.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.9" y="1438.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.regex$ (1 samples, 0.06%)</title><rect x="350.9" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.9" y="1422.0"></text>
</g>
<g>
<title>scala/util/parsing/combinator/RegexParsers.regex (1 samples, 0.06%)</title><rect x="350.9" y="1395.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1683.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1667.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1651.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1635.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1619.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.6" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1603.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1587.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="351.6" y="1571.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1555.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1539.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1523.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1507.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1491.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.6" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1459.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1443.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="351.6" y="1427.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1411.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1395.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="351.6" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1363.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="351.6" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="351.6" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="351.6" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.6" y="1326.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="351.6" y="1299.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.6" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="351.6" y="1283.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.6" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="351.6" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="351.6" y="1251.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="354.6" y="1262.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="351.6" y="1235.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="354.6" y="1246.0"></text>
</g>
<g>
<title>com/vrg/rapid/Cluster$Builder.sendJoinPhase2Messages (7 samples, 0.44%)</title><rect x="352.3" y="1731.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.3" y="1742.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (3 samples, 0.19%)</title><rect x="352.3" y="1715.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.3" y="1726.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (3 samples, 0.19%)</title><rect x="352.3" y="1699.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.3" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ConnectionPoolSettings.withMaxRetries (1 samples, 0.06%)</title><rect x="352.3" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.3" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.copy (1 samples, 0.06%)</title><rect x="352.3" y="1667.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.3" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="352.3" y="1651.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.3" y="1662.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$greater (1 samples, 0.06%)</title><rect x="352.3" y="1635.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.3" y="1646.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$ (1 samples, 0.06%)</title><rect x="352.3" y="1619.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.3" y="1630.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="352.3" y="1603.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="355.3" y="1614.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="352.3" y="1587.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="355.3" y="1598.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="352.3" y="1571.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="355.3" y="1582.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="352.3" y="1555.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="355.3" y="1566.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="352.3" y="1539.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="355.3" y="1550.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (2 samples, 0.13%)</title><rect x="353.1" y="1683.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.1" y="1694.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.getSerializedSize (1 samples, 0.06%)</title><rect x="353.1" y="1667.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.1" y="1678.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (1 samples, 0.06%)</title><rect x="353.1" y="1651.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (1 samples, 0.06%)</title><rect x="353.1" y="1635.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="1646.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.getSerializedSize (1 samples, 0.06%)</title><rect x="353.1" y="1619.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.1" y="1630.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (1 samples, 0.06%)</title><rect x="353.1" y="1603.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.1" y="1614.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (1 samples, 0.06%)</title><rect x="353.1" y="1587.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.1" y="1598.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (1 samples, 0.06%)</title><rect x="353.1" y="1571.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.1" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (1 samples, 0.06%)</title><rect x="353.1" y="1555.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.1" y="1566.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (1 samples, 0.06%)</title><rect x="353.1" y="1539.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.1" y="1550.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (1 samples, 0.06%)</title><rect x="353.1" y="1523.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.1" y="1534.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (1 samples, 0.06%)</title><rect x="353.1" y="1507.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.1" y="1518.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (1 samples, 0.06%)</title><rect x="353.1" y="1491.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.1" y="1502.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (1 samples, 0.06%)</title><rect x="353.1" y="1475.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.1" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="353.1" y="1459.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="356.1" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="353.1" y="1443.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="356.1" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="353.1" y="1427.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="356.1" y="1438.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="353.1" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="356.1" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="353.1" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="356.1" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="353.1" y="1379.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="356.1" y="1390.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, _jclass*) (1 samples, 0.06%)</title><rect x="353.1" y="1363.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="356.1" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (1 samples, 0.06%)</title><rect x="353.8" y="1667.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.8" y="1678.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="353.8" y="1651.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.8" y="1662.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="353.8" y="1635.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1646.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.writeTo (1 samples, 0.06%)</title><rect x="353.8" y="1619.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.8" y="1630.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="353.8" y="1603.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.8" y="1614.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="353.8" y="1587.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.8" y="1598.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (1 samples, 0.06%)</title><rect x="353.8" y="1571.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1582.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (1 samples, 0.06%)</title><rect x="353.8" y="1555.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="1566.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (1 samples, 0.06%)</title><rect x="353.8" y="1539.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1550.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.06%)</title><rect x="353.8" y="1523.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.8" y="1534.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.06%)</title><rect x="353.8" y="1507.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1518.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (1 samples, 0.06%)</title><rect x="353.8" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.8" y="1502.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (1 samples, 0.06%)</title><rect x="353.8" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.8" y="1486.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (1 samples, 0.06%)</title><rect x="353.8" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.8" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (1 samples, 0.06%)</title><rect x="353.8" y="1443.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.8" y="1454.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeStringSizeNoTag (1 samples, 0.06%)</title><rect x="353.8" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.8" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.encodedLength (1 samples, 0.06%)</title><rect x="353.8" y="1411.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.8" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.06%)</title><rect x="354.6" y="1715.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.6" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.06%)</title><rect x="354.6" y="1699.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.6" y="1710.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.06%)</title><rect x="354.6" y="1683.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.6" y="1694.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.06%)</title><rect x="354.6" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.6" y="1678.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="354.6" y="1651.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.6" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.06%)</title><rect x="354.6" y="1635.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.6" y="1646.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.06%)</title><rect x="354.6" y="1619.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.6" y="1630.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (1 samples, 0.06%)</title><rect x="354.6" y="1603.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.6" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="354.6" y="1587.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.6" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="354.6" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.6" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.06%)</title><rect x="354.6" y="1555.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.6" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.06%)</title><rect x="354.6" y="1539.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.6" y="1550.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="354.6" y="1523.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.6" y="1534.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.06%)</title><rect x="354.6" y="1507.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.6" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="354.6" y="1491.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="354.6" y="1475.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.6" y="1486.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="355.3" y="1715.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="355.3" y="1699.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="355.3" y="1683.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="355.3" y="1667.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="355.3" y="1651.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="355.3" y="1635.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="355.3" y="1619.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getManifest (1 samples, 0.06%)</title><rect x="355.3" y="1603.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="1614.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifest (1 samples, 0.06%)</title><rect x="355.3" y="1587.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.3" y="1598.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifestFromReference (1 samples, 0.06%)</title><rect x="355.3" y="1571.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.3" y="1582.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.successfulAsList (2 samples, 0.13%)</title><rect x="356.1" y="1715.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.1" y="1726.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/CollectionFuture$ListFuture.&lt;init&gt; (2 samples, 0.13%)</title><rect x="356.1" y="1699.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.1" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="356.1" y="1683.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="359.1" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1667.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="359.1" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1651.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="359.1" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1635.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="359.1" y="1646.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1619.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.1" y="1630.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1603.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="359.1" y="1614.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1587.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.1" y="1598.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.06%)</title><rect x="356.1" y="1571.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.1" y="1582.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.06%)</title><rect x="356.1" y="1555.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.1" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="356.1" y="1539.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.1" y="1550.0"></text>
</g>
<g>
<title>fieldDescriptor::reinitialize(InstanceKlass*, int) (1 samples, 0.06%)</title><rect x="356.1" y="1523.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="359.1" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture.init (1 samples, 0.06%)</title><rect x="356.8" y="1683.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.8" y="1694.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.access$100 (1 samples, 0.06%)</title><rect x="356.8" y="1667.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.8" y="1678.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AggregateFuture$RunningState.init (1 samples, 0.06%)</title><rect x="356.8" y="1651.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="356.8" y="1635.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="356.8" y="1619.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="356.8" y="1603.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="356.8" y="1587.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="356.8" y="1571.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.8" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="356.8" y="1555.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.8" y="1566.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="356.8" y="1539.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="356.8" y="1523.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="356.8" y="1507.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.8" y="1518.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="356.8" y="1491.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="359.8" y="1502.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="356.8" y="1475.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="359.8" y="1486.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1459.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="359.8" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1443.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="359.8" y="1454.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1427.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.8" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1411.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="359.8" y="1422.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="356.8" y="1395.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="359.8" y="1406.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1379.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="359.8" y="1390.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1363.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="359.8" y="1374.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.06%)</title><rect x="356.8" y="1347.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="359.8" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidRequest (1 samples, 0.06%)</title><rect x="357.5" y="1731.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.5" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="357.5" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="360.5" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="357.5" y="1699.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="360.5" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1683.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="360.5" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1667.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="360.5" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1651.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="360.5" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1635.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="360.5" y="1646.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1619.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="360.5" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1603.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="360.5" y="1614.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="360.5" y="1598.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1571.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="360.5" y="1582.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="357.5" y="1555.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="360.5" y="1566.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="357.5" y="1539.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="360.5" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.nodeIdFromUUID (1 samples, 0.06%)</title><rect x="358.3" y="1747.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.3" y="1758.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.newBuilder (1 samples, 0.06%)</title><rect x="358.3" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.3" y="1742.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.toBuilder (1 samples, 0.06%)</title><rect x="358.3" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.3" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="358.3" y="1699.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="361.3" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="358.3" y="1683.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="361.3" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="358.3" y="1667.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="361.3" y="1678.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="358.3" y="1651.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="361.3" y="1662.0"></text>
</g>
<g>
<title>PerfClassTraceTime::~PerfClassTraceTime() (1 samples, 0.06%)</title><rect x="358.3" y="1635.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="361.3" y="1646.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.&lt;init&gt; (8 samples, 0.50%)</title><rect x="359.0" y="1795.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.0" y="1806.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="359.0" y="1779.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="362.0" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="359.0" y="1763.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="362.0" y="1774.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1747.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="362.0" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1731.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="362.0" y="1742.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1715.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="362.0" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1699.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="362.0" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1683.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.0" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1667.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.0" y="1678.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1651.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="362.0" y="1662.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1635.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="362.0" y="1646.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1619.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="362.0" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1603.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="362.0" y="1614.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1587.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.0" y="1598.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1571.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="362.0" y="1582.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="359.0" y="1555.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="362.0" y="1566.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.&lt;clinit&gt; (2 samples, 0.13%)</title><rect x="359.8" y="1779.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.8" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="359.8" y="1763.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="362.8" y="1774.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="359.8" y="1747.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="362.8" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="359.8" y="1731.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="362.8" y="1742.0"></text>
</g>
<g>
<title>ConstantPool::impl_tag_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="359.8" y="1715.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="362.8" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatchers.$init$ (1 samples, 0.06%)</title><rect x="360.5" y="1763.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.5" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="360.5" y="1747.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.5" y="1758.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="360.5" y="1731.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="360.5" y="1715.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="360.5" y="1699.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1683.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1651.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.5" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1635.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.5" y="1646.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1619.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="360.5" y="1603.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="363.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="360.5" y="1587.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.5" y="1598.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="360.5" y="1571.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="363.5" y="1582.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="360.5" y="1555.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="363.5" y="1566.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="360.5" y="1539.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="363.5" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="360.5" y="1523.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="363.5" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::package_from_name(Symbol const*, Thread*) (1 samples, 0.06%)</title><rect x="360.5" y="1507.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="363.5" y="1518.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="360.5" y="1491.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="363.5" y="1502.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="360.5" y="1475.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="363.5" y="1486.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="360.5" y="1459.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="363.5" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.path (1 samples, 0.06%)</title><rect x="361.3" y="1779.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.3" y="1790.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.path$ (1 samples, 0.06%)</title><rect x="361.3" y="1763.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.3" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.path (1 samples, 0.06%)</title><rect x="361.3" y="1747.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.3" y="1758.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.pathPrefix (1 samples, 0.06%)</title><rect x="361.3" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.3" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.pathPrefix$ (1 samples, 0.06%)</title><rect x="361.3" y="1715.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.3" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.pathPrefix (1 samples, 0.06%)</title><rect x="361.3" y="1699.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.3" y="1710.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.rawPathPrefix (1 samples, 0.06%)</title><rect x="361.3" y="1683.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.3" y="1694.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.rawPathPrefix$ (1 samples, 0.06%)</title><rect x="361.3" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.3" y="1678.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.rawPathPrefix (1 samples, 0.06%)</title><rect x="361.3" y="1651.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.3" y="1662.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.flatMap$extension (1 samples, 0.06%)</title><rect x="361.3" y="1635.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.3" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.06%)</title><rect x="361.3" y="1619.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="364.3" y="1630.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.06%)</title><rect x="361.3" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.3" y="1614.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="361.3" y="1587.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="364.3" y="1598.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="361.3" y="1571.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="364.3" y="1582.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="361.3" y="1555.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="364.3" y="1566.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="361.3" y="1539.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.3" y="1550.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="361.3" y="1523.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.3" y="1534.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="361.3" y="1507.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.3" y="1518.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="361.3" y="1491.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.3" y="1502.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="361.3" y="1475.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.3" y="1486.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (1 samples, 0.06%)</title><rect x="361.3" y="1459.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="364.3" y="1470.0"></text>
</g>
<g>
<title>__mod_node_page_state (1 samples, 0.06%)</title><rect x="361.3" y="1443.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.25%)</title><rect x="362.0" y="1779.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.25%)</title><rect x="362.0" y="1763.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.25%)</title><rect x="362.0" y="1747.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.25%)</title><rect x="362.0" y="1731.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.06%)</title><rect x="362.0" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.06%)</title><rect x="362.0" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.0" y="1710.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findLoadedClass0 (1 samples, 0.06%)</title><rect x="362.0" y="1683.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="365.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.19%)</title><rect x="362.7" y="1715.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.19%)</title><rect x="362.7" y="1699.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.7" y="1710.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1683.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1667.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.13%)</title><rect x="362.7" y="1651.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.7" y="1662.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1635.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1619.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1603.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.13%)</title><rect x="362.7" y="1587.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.13%)</title><rect x="362.7" y="1571.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1555.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.7" y="1566.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1539.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1523.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.7" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.13%)</title><rect x="362.7" y="1507.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1491.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1475.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.7" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.13%)</title><rect x="362.7" y="1459.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.13%)</title><rect x="362.7" y="1443.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.13%)</title><rect x="362.7" y="1427.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.13%)</title><rect x="362.7" y="1411.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.13%)</title><rect x="362.7" y="1395.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.7" y="1406.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="362.7" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.7" y="1390.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.06%)</title><rect x="362.7" y="1363.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="365.7" y="1374.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="362.7" y="1347.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="365.7" y="1358.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="362.7" y="1331.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="365.7" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="362.7" y="1315.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="365.7" y="1326.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="362.7" y="1299.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="365.7" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="363.5" y="1379.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.5" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="363.5" y="1363.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.5" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="363.5" y="1347.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.5" y="1358.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="363.5" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.5" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.06%)</title><rect x="363.5" y="1315.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.5" y="1326.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.06%)</title><rect x="363.5" y="1299.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.5" y="1310.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="363.5" y="1283.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.5" y="1294.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="363.5" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="363.5" y="1251.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.5" y="1262.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="363.5" y="1235.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.5" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="363.5" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.5" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="363.5" y="1203.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.5" y="1214.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.06%)</title><rect x="363.5" y="1187.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="366.5" y="1198.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="363.5" y="1171.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.5" y="1182.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="363.5" y="1155.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.5" y="1166.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="363.5" y="1139.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.5" y="1150.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.06%)</title><rect x="363.5" y="1123.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="366.5" y="1134.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="363.5" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.5" y="1118.0"></text>
</g>
<g>
<title>page_cache_sync_readahead (1 samples, 0.06%)</title><rect x="363.5" y="1091.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.5" y="1102.0"></text>
</g>
<g>
<title>ondemand_readahead (1 samples, 0.06%)</title><rect x="363.5" y="1075.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.5" y="1086.0"></text>
</g>
<g>
<title>__do_page_cache_readahead (1 samples, 0.06%)</title><rect x="363.5" y="1059.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.5" y="1070.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="363.5" y="1043.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.5" y="1054.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="363.5" y="1027.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.5" y="1038.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="363.5" y="1011.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.5" y="1022.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="363.5" y="995.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.5" y="1006.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="363.5" y="979.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="366.5" y="990.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="363.5" y="963.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="366.5" y="974.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="363.5" y="947.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.5" y="958.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="363.5" y="931.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="366.5" y="942.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="363.5" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="364.2" y="1683.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.2" y="1694.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="364.2" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.2" y="1678.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="364.2" y="1651.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.2" y="1662.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="364.2" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.2" y="1646.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.06%)</title><rect x="364.2" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.2" y="1630.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="364.2" y="1603.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.2" y="1614.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="364.2" y="1587.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="364.2" y="1571.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="367.2" y="1582.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="364.2" y="1555.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="367.2" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="364.2" y="1539.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="367.2" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="364.2" y="1523.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="367.2" y="1534.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.06%)</title><rect x="364.2" y="1507.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.2" y="1518.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="364.2" y="1491.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.2" y="1502.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="364.2" y="1475.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="367.2" y="1486.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="364.2" y="1459.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="367.2" y="1470.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.06%)</title><rect x="364.2" y="1443.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="367.2" y="1454.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="364.2" y="1427.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.2" y="1438.0"></text>
</g>
<g>
<title>page_cache_sync_readahead (1 samples, 0.06%)</title><rect x="364.2" y="1411.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="367.2" y="1422.0"></text>
</g>
<g>
<title>ondemand_readahead (1 samples, 0.06%)</title><rect x="364.2" y="1395.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="1406.0"></text>
</g>
<g>
<title>__do_page_cache_readahead (1 samples, 0.06%)</title><rect x="364.2" y="1379.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="367.2" y="1390.0"></text>
</g>
<g>
<title>ext4_readpages (1 samples, 0.06%)</title><rect x="364.2" y="1363.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="367.2" y="1374.0"></text>
</g>
<g>
<title>ext4_mpage_readpages (1 samples, 0.06%)</title><rect x="364.2" y="1347.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="367.2" y="1358.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.06%)</title><rect x="364.2" y="1331.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="367.2" y="1342.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.06%)</title><rect x="364.2" y="1315.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="1326.0"></text>
</g>
<g>
<title>com/google/common/net/HostAndPort.fromParts (1 samples, 0.06%)</title><rect x="365.0" y="1795.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.0" y="1806.0"></text>
</g>
<g>
<title>com/google/common/net/HostAndPort.fromString (1 samples, 0.06%)</title><rect x="365.0" y="1779.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.0" y="1790.0"></text>
</g>
<g>
<title>com/google/common/base/Strings.isNullOrEmpty (1 samples, 0.06%)</title><rect x="365.0" y="1763.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.0" y="1774.0"></text>
</g>
<g>
<title>com/google/common/base/Platform.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="365.0" y="1747.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.0" y="1758.0"></text>
</g>
<g>
<title>com/google/common/base/Platform.loadPatternCompiler (1 samples, 0.06%)</title><rect x="365.0" y="1731.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.0" y="1715.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.0" y="1699.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.0" y="1683.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="365.0" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="365.0" y="1651.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="365.0" y="1635.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.0" y="1646.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="365.0" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="365.0" y="1603.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="365.0" y="1587.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="1598.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="365.0" y="1571.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="368.0" y="1582.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="365.0" y="1555.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="368.0" y="1566.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="365.0" y="1539.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="368.0" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="365.0" y="1523.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="368.0" y="1534.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="365.0" y="1507.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="368.0" y="1518.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="365.0" y="1491.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="368.0" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="365.0" y="1475.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="368.0" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="365.0" y="1459.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="368.0" y="1470.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.06%)</title><rect x="365.0" y="1443.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="368.0" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1795.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.7" y="1806.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1779.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.7" y="1790.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.&lt;init&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1763.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.7" y="1774.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1747.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.7" y="1758.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1731.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.7" y="1742.0"></text>
</g>
<g>
<title>com/google/protobuf/ExtensionRegistryLite.getEmptyRegistry (1 samples, 0.06%)</title><rect x="365.7" y="1715.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.7" y="1726.0"></text>
</g>
<g>
<title>com/google/protobuf/ExtensionRegistryFactory.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="365.7" y="1699.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.7" y="1710.0"></text>
</g>
<g>
<title>com/google/protobuf/ExtensionRegistryFactory.reflectExtensionRegistry (1 samples, 0.06%)</title><rect x="365.7" y="1683.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.06%)</title><rect x="365.7" y="1667.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.06%)</title><rect x="365.7" y="1651.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.7" y="1662.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.7" y="1635.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.7" y="1619.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="365.7" y="1603.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="365.7" y="1587.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="365.7" y="1571.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="365.7" y="1555.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="365.7" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.7" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="365.7" y="1523.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.7" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="365.7" y="1507.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.7" y="1518.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="365.7" y="1491.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="365.7" y="1475.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="368.7" y="1486.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="365.7" y="1459.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="368.7" y="1470.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (1 samples, 0.06%)</title><rect x="366.5" y="1891.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.5" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="366.5" y="1875.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.5" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="366.5" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="1870.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="366.5" y="1843.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.5" y="1854.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.subscribe (1 samples, 0.06%)</title><rect x="366.5" y="1827.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.5" y="1838.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (1 samples, 0.06%)</title><rect x="366.5" y="1811.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.5" y="1822.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$Lambda$945/1742339379.apply (1 samples, 0.06%)</title><rect x="366.5" y="1795.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="1806.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.$anonfun$subscribe$3$adapted (1 samples, 0.06%)</title><rect x="366.5" y="1779.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.5" y="1790.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.$anonfun$subscribe$3 (1 samples, 0.06%)</title><rect x="366.5" y="1763.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.5" y="1774.0"></text>
</g>
<g>
<title>akka/event/EventStream.subscribe (1 samples, 0.06%)</title><rect x="366.5" y="1747.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="1758.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe$ (1 samples, 0.06%)</title><rect x="366.5" y="1731.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.5" y="1742.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.subscribe (1 samples, 0.06%)</title><rect x="366.5" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.5" y="1726.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.addValue (1 samples, 0.06%)</title><rect x="366.5" y="1699.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.5" y="1710.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.mergeChangesByKey (1 samples, 0.06%)</title><rect x="366.5" y="1683.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.5" y="1694.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foldLeft (1 samples, 0.06%)</title><rect x="366.5" y="1667.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="1678.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foldLeft$ (1 samples, 0.06%)</title><rect x="366.5" y="1651.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.5" y="1662.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foldLeft (1 samples, 0.06%)</title><rect x="366.5" y="1635.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.5" y="1646.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex$$Lambda$75/220695851.apply (1 samples, 0.06%)</title><rect x="366.5" y="1619.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.5" y="1630.0"></text>
</g>
<g>
<title>akka/util/SubclassifiedIndex.$anonfun$mergeChangesByKey$1 (1 samples, 0.06%)</title><rect x="366.5" y="1603.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="1614.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (1 samples, 0.06%)</title><rect x="366.5" y="1587.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.5" y="1598.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (1 samples, 0.06%)</title><rect x="366.5" y="1571.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.5" y="1582.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (1 samples, 0.06%)</title><rect x="366.5" y="1555.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.5" y="1566.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (1 samples, 0.06%)</title><rect x="366.5" y="1539.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.5" y="1550.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (1 samples, 0.06%)</title><rect x="366.5" y="1523.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.5" y="1534.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (1 samples, 0.06%)</title><rect x="366.5" y="1507.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="1518.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="366.5" y="1491.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.5" y="1502.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (1 samples, 0.06%)</title><rect x="366.5" y="1475.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.5" y="1486.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific$ (1 samples, 0.06%)</title><rect x="366.5" y="1459.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.5" y="1470.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific (1 samples, 0.06%)</title><rect x="366.5" y="1443.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="1454.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="366.5" y="1427.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.5" y="1438.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (1 samples, 0.06%)</title><rect x="366.5" y="1411.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.5" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (1 samples, 0.06%)</title><rect x="366.5" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.5" y="1406.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (1 samples, 0.06%)</title><rect x="366.5" y="1379.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (1 samples, 0.06%)</title><rect x="366.5" y="1363.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/View$Concat.iterator (1 samples, 0.06%)</title><rect x="366.5" y="1347.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.concat (1 samples, 0.06%)</title><rect x="366.5" y="1331.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/Iterator.concat$ (1 samples, 0.06%)</title><rect x="366.5" y="1315.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.5" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="366.5" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="369.5" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="366.5" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="369.5" y="1294.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="366.5" y="1267.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="369.5" y="1278.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="366.5" y="1251.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="369.5" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="366.5" y="1235.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="369.5" y="1246.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (6 samples, 0.38%)</title><rect x="367.2" y="1891.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.2" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6 samples, 0.38%)</title><rect x="367.2" y="1875.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.2" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6 samples, 0.38%)</title><rect x="367.2" y="1859.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.2" y="1870.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (6 samples, 0.38%)</title><rect x="367.2" y="1843.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.2" y="1854.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (4 samples, 0.25%)</title><rect x="367.9" y="1827.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.9" y="1838.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$388/1269279389.apply$mcV$sp (2 samples, 0.13%)</title><rect x="368.7" y="1811.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.7" y="1822.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$3 (2 samples, 0.13%)</title><rect x="368.7" y="1795.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.7" y="1806.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.13%)</title><rect x="368.7" y="1779.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.7" y="1790.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.13%)</title><rect x="368.7" y="1763.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.7" y="1774.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.13%)</title><rect x="368.7" y="1747.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.7" y="1758.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.13%)</title><rect x="368.7" y="1731.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.7" y="1742.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.13%)</title><rect x="368.7" y="1715.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.7" y="1726.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.13%)</title><rect x="368.7" y="1699.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.7" y="1710.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.13%)</title><rect x="368.7" y="1683.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.7" y="1694.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (2 samples, 0.13%)</title><rect x="368.7" y="1667.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.7" y="1678.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="368.7" y="1651.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.7" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (1 samples, 0.06%)</title><rect x="368.7" y="1635.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.7" y="1646.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.06%)</title><rect x="368.7" y="1619.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.7" y="1630.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getThreadName (1 samples, 0.06%)</title><rect x="368.7" y="1603.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (1 samples, 0.06%)</title><rect x="369.4" y="1651.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.4" y="1662.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (1 samples, 0.06%)</title><rect x="369.4" y="1635.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.4" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (1 samples, 0.06%)</title><rect x="369.4" y="1619.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.4" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="369.4" y="1603.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.4" y="1614.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.formatTimestamp (1 samples, 0.06%)</title><rect x="370.2" y="1811.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.2" y="1822.0"></text>
</g>
<g>
<title>akka/util/Helpers$.currentTimeMillisToUTCString (1 samples, 0.06%)</title><rect x="370.2" y="1795.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.2" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="370.2" y="1779.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/397279095.linkToTargetMethod (1 samples, 0.06%)</title><rect x="370.9" y="1827.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.9" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="370.9" y="1811.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.9" y="1822.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$388/1269279389.get$Lambda (1 samples, 0.06%)</title><rect x="370.9" y="1795.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.9" y="1806.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$388/1269279389.&lt;init&gt; (1 samples, 0.06%)</title><rect x="370.9" y="1779.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.9" y="1790.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (20 samples, 1.26%)</title><rect x="371.6" y="1891.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.6" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (20 samples, 1.26%)</title><rect x="371.6" y="1875.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.6" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (20 samples, 1.26%)</title><rect x="371.6" y="1859.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.6" y="1870.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (20 samples, 1.26%)</title><rect x="371.6" y="1843.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.6" y="1854.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (19 samples, 1.20%)</title><rect x="371.6" y="1827.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.6" y="1838.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (18 samples, 1.13%)</title><rect x="371.6" y="1811.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="1822.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$.apply (1 samples, 0.06%)</title><rect x="371.6" y="1795.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="1806.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (1 samples, 0.06%)</title><rect x="371.6" y="1779.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.6" y="1790.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GenericGraphWithChangedAttributes.traversalBuilder (1 samples, 0.06%)</title><rect x="371.6" y="1763.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.6" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.setAttributes (1 samples, 0.06%)</title><rect x="371.6" y="1747.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.6" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes$ (1 samples, 0.06%)</title><rect x="371.6" y="1731.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.6" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes (1 samples, 0.06%)</title><rect x="371.6" y="1715.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.6" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.internalSetAttributes (1 samples, 0.06%)</title><rect x="371.6" y="1699.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.6" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.copy (1 samples, 0.06%)</title><rect x="371.6" y="1683.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.6" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="371.6" y="1667.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.6" y="1678.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="371.6" y="1651.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="374.6" y="1662.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (12 samples, 0.76%)</title><rect x="372.4" y="1795.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.4" y="1806.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (12 samples, 0.76%)</title><rect x="372.4" y="1779.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.4" y="1790.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (11 samples, 0.69%)</title><rect x="372.4" y="1763.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.4" y="1774.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (11 samples, 0.69%)</title><rect x="372.4" y="1747.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.4" y="1758.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (1 samples, 0.06%)</title><rect x="372.4" y="1731.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.4" y="1742.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (1 samples, 0.06%)</title><rect x="372.4" y="1715.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.4" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (1 samples, 0.06%)</title><rect x="372.4" y="1699.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.4" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="372.4" y="1683.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.4" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="372.4" y="1667.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.4" y="1678.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="372.4" y="1651.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.4" y="1662.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.completeIfPossible (1 samples, 0.06%)</title><rect x="372.4" y="1635.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.4" y="1646.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="372.4" y="1619.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.4" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="372.4" y="1603.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.4" y="1614.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (10 samples, 0.63%)</title><rect x="373.1" y="1731.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.1" y="1742.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (10 samples, 0.63%)</title><rect x="373.1" y="1715.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.1" y="1726.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (10 samples, 0.63%)</title><rect x="373.1" y="1699.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.1" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$411/745594343.apply (10 samples, 0.63%)</title><rect x="373.1" y="1683.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.1" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (10 samples, 0.63%)</title><rect x="373.1" y="1667.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.1" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (5 samples, 0.31%)</title><rect x="373.1" y="1651.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.1" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (5 samples, 0.31%)</title><rect x="373.1" y="1635.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.1" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (3 samples, 0.19%)</title><rect x="373.1" y="1619.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.1" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (1 samples, 0.06%)</title><rect x="373.1" y="1603.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.1" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (1 samples, 0.06%)</title><rect x="373.1" y="1587.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.1" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.06%)</title><rect x="373.1" y="1571.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.1" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteChar (1 samples, 0.06%)</title><rect x="373.1" y="1555.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.1" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteAt (1 samples, 0.06%)</title><rect x="373.1" y="1539.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.1" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (2 samples, 0.13%)</title><rect x="373.9" y="1603.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.9" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (2 samples, 0.13%)</title><rect x="373.9" y="1587.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.9" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.06%)</title><rect x="374.6" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.6" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/1687009269.apply (1 samples, 0.06%)</title><rect x="374.6" y="1555.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.6" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.06%)</title><rect x="374.6" y="1539.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.6" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.apply (1 samples, 0.06%)</title><rect x="374.6" y="1523.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.6" y="1534.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="374.6" y="1507.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.6" y="1518.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="374.6" y="1491.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.6" y="1502.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="374.6" y="1475.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.6" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19$$Lambda$429/1582521347.apply (1 samples, 0.06%)</title><rect x="374.6" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.$anonfun$apply$19 (1 samples, 0.06%)</title><rect x="374.6" y="1443.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.6" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.connection (1 samples, 0.06%)</title><rect x="374.6" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection$ (1 samples, 0.06%)</title><rect x="374.6" y="1411.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.6" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="374.6" y="1395.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="377.6" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="374.6" y="1379.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="377.6" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="374.6" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="377.6" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="374.6" y="1347.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="377.6" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="374.6" y="1331.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="377.6" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="374.6" y="1315.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="377.6" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="374.6" y="1299.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="377.6" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="374.6" y="1283.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="377.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (1 samples, 0.06%)</title><rect x="375.4" y="1619.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.4" y="1630.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (1 samples, 0.06%)</title><rect x="375.4" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.4" y="1614.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (1 samples, 0.06%)</title><rect x="375.4" y="1587.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.4" y="1598.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (1 samples, 0.06%)</title><rect x="375.4" y="1571.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.4" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (1 samples, 0.06%)</title><rect x="376.1" y="1619.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.1" y="1630.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (1 samples, 0.06%)</title><rect x="376.1" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.1" y="1614.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (1 samples, 0.06%)</title><rect x="376.1" y="1587.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.1" y="1598.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (1 samples, 0.06%)</title><rect x="376.1" y="1571.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.1" y="1582.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (1 samples, 0.06%)</title><rect x="376.1" y="1555.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.1" y="1566.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (1 samples, 0.06%)</title><rect x="376.1" y="1539.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.1" y="1550.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.newSpecificBuilder (1 samples, 0.06%)</title><rect x="376.1" y="1523.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.1" y="1534.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.newSpecificBuilder$ (1 samples, 0.06%)</title><rect x="376.1" y="1507.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.1" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="376.1" y="1491.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="379.1" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="376.1" y="1475.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="379.1" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="376.1" y="1459.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="379.1" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="376.1" y="1443.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="379.1" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="376.1" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="379.1" y="1438.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="376.1" y="1411.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.1" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="376.1" y="1395.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="379.1" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="376.1" y="1379.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="379.1" y="1390.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (2 samples, 0.13%)</title><rect x="376.8" y="1651.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.8" y="1662.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (1 samples, 0.06%)</title><rect x="376.8" y="1635.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.8" y="1646.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="376.8" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.8" y="1630.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (1 samples, 0.06%)</title><rect x="377.6" y="1635.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.6" y="1646.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (1 samples, 0.06%)</title><rect x="377.6" y="1619.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.6" y="1630.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (1 samples, 0.06%)</title><rect x="377.6" y="1603.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.6" y="1614.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="377.6" y="1587.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.6" y="1598.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.06%)</title><rect x="377.6" y="1571.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.6" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndMigrateFromInlineToNode (1 samples, 0.06%)</title><rect x="377.6" y="1555.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.6" y="1566.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.content (1 samples, 0.06%)</title><rect x="377.6" y="1539.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.6" y="1550.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_static_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="377.6" y="1523.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.6" y="1534.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="377.6" y="1507.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="380.6" y="1518.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="377.6" y="1491.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="380.6" y="1502.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="377.6" y="1475.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.6" y="1486.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (3 samples, 0.19%)</title><rect x="378.3" y="1651.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.3" y="1662.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (3 samples, 0.19%)</title><rect x="378.3" y="1635.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.3" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="378.3" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="381.3" y="1630.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="378.3" y="1603.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="381.3" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="378.3" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="381.3" y="1598.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="378.3" y="1571.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="381.3" y="1582.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (2 samples, 0.13%)</title><rect x="379.1" y="1619.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.1" y="1630.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (2 samples, 0.13%)</title><rect x="379.1" y="1603.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.1" y="1614.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (2 samples, 0.13%)</title><rect x="379.1" y="1587.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.1" y="1598.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="379.1" y="1571.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.1" y="1582.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="379.1" y="1555.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.1" y="1566.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="379.1" y="1539.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="382.1" y="1550.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="379.1" y="1523.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="382.1" y="1534.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="379.1" y="1507.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="382.1" y="1518.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="379.1" y="1491.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="382.1" y="1502.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="379.1" y="1475.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="382.1" y="1486.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (1 samples, 0.06%)</title><rect x="379.8" y="1571.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="1582.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (1 samples, 0.06%)</title><rect x="379.8" y="1555.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.8" y="1566.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (1 samples, 0.06%)</title><rect x="379.8" y="1539.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.8" y="1550.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (1 samples, 0.06%)</title><rect x="379.8" y="1523.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.8" y="1534.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (1 samples, 0.06%)</title><rect x="379.8" y="1507.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.8" y="1518.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (1 samples, 0.06%)</title><rect x="379.8" y="1491.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.8" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndMigrateFromNodeToInline (1 samples, 0.06%)</title><rect x="379.8" y="1475.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.8" y="1486.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (1 samples, 0.06%)</title><rect x="380.6" y="1763.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.6" y="1774.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (1 samples, 0.06%)</title><rect x="380.6" y="1747.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.6" y="1758.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (1 samples, 0.06%)</title><rect x="380.6" y="1731.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.6" y="1742.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="380.6" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.6" y="1726.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="380.6" y="1699.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.6" y="1710.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="380.6" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.6" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$403/280358925.apply (1 samples, 0.06%)</title><rect x="380.6" y="1667.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.6" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (1 samples, 0.06%)</title><rect x="380.6" y="1651.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.6" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (1 samples, 0.06%)</title><rect x="380.6" y="1635.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.6" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (1 samples, 0.06%)</title><rect x="380.6" y="1619.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.6" y="1630.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (5 samples, 0.31%)</title><rect x="381.3" y="1795.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.3" y="1806.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.31%)</title><rect x="381.3" y="1779.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.3" y="1790.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.31%)</title><rect x="381.3" y="1763.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.3" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.31%)</title><rect x="381.3" y="1747.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.3" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (3 samples, 0.19%)</title><rect x="381.3" y="1731.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.3" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (2 samples, 0.13%)</title><rect x="381.3" y="1715.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (2 samples, 0.13%)</title><rect x="381.3" y="1699.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="381.3" y="1683.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.3" y="1694.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="381.3" y="1667.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (2 samples, 0.13%)</title><rect x="381.3" y="1651.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.3" y="1662.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.13%)</title><rect x="381.3" y="1635.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="1646.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1619.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="1630.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.13%)</title><rect x="381.3" y="1603.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.3" y="1614.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1587.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.13%)</title><rect x="381.3" y="1571.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.3" y="1582.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.13%)</title><rect x="381.3" y="1555.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.13%)</title><rect x="381.3" y="1539.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="1550.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="381.3" y="1523.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="381.3" y="1507.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.3" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (2 samples, 0.13%)</title><rect x="381.3" y="1491.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.3" y="1502.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.13%)</title><rect x="381.3" y="1475.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="1486.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1459.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.3" y="1470.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.13%)</title><rect x="381.3" y="1443.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.3" y="1454.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1427.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.13%)</title><rect x="381.3" y="1411.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.13%)</title><rect x="381.3" y="1395.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.3" y="1406.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.13%)</title><rect x="381.3" y="1379.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="381.3" y="1363.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="381.3" y="1347.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (2 samples, 0.13%)</title><rect x="381.3" y="1331.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.3" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.13%)</title><rect x="381.3" y="1315.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1299.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.13%)</title><rect x="381.3" y="1283.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1267.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.13%)</title><rect x="381.3" y="1251.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.13%)</title><rect x="381.3" y="1235.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.13%)</title><rect x="381.3" y="1219.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="381.3" y="1203.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="381.3" y="1187.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (2 samples, 0.13%)</title><rect x="381.3" y="1171.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.13%)</title><rect x="381.3" y="1155.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1139.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.13%)</title><rect x="381.3" y="1123.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.13%)</title><rect x="381.3" y="1107.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.13%)</title><rect x="381.3" y="1091.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.13%)</title><rect x="381.3" y="1075.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.13%)</title><rect x="381.3" y="1059.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="381.3" y="1043.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="381.3" y="1027.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.toString (1 samples, 0.06%)</title><rect x="381.3" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.3" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (1 samples, 0.06%)</title><rect x="381.3" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (1 samples, 0.06%)</title><rect x="381.3" y="979.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (1 samples, 0.06%)</title><rect x="381.3" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (1 samples, 0.06%)</title><rect x="381.3" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (1 samples, 0.06%)</title><rect x="381.3" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (1 samples, 0.06%)</title><rect x="381.3" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (1 samples, 0.06%)</title><rect x="381.3" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="381.3" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="381.3" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.3" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.toString (1 samples, 0.06%)</title><rect x="381.3" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="862.0"></text>
</g>
<g>
<title>scala/collection/Map.toString$ (1 samples, 0.06%)</title><rect x="381.3" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.3" y="846.0"></text>
</g>
<g>
<title>scala/collection/Map.toString (1 samples, 0.06%)</title><rect x="381.3" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.3" y="830.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (1 samples, 0.06%)</title><rect x="381.3" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="814.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (1 samples, 0.06%)</title><rect x="381.3" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.3" y="798.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.mkString (1 samples, 0.06%)</title><rect x="381.3" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.3" y="782.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (1 samples, 0.06%)</title><rect x="381.3" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.3" y="766.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (1 samples, 0.06%)</title><rect x="381.3" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="750.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.addString (1 samples, 0.06%)</title><rect x="381.3" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.3" y="734.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString$ (1 samples, 0.06%)</title><rect x="381.3" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.3" y="718.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString (1 samples, 0.06%)</title><rect x="381.3" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (1 samples, 0.06%)</title><rect x="381.3" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.3" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (1 samples, 0.06%)</title><rect x="381.3" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.3" y="670.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (1 samples, 0.06%)</title><rect x="381.3" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.3" y="654.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (1 samples, 0.06%)</title><rect x="381.3" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="638.0"></text>
</g>
<g>
<title>scala/collection/MapOps$$Lambda$478/2042149007.apply (1 samples, 0.06%)</title><rect x="381.3" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.3" y="622.0"></text>
</g>
<g>
<title>scala/collection/MapOps.$anonfun$addString$1 (1 samples, 0.06%)</title><rect x="381.3" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.3" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="381.3" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="384.3" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="381.3" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="384.3" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="381.3" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="384.3" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="381.3" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.3" y="542.0"></text>
</g>
<g>
<title>frame::retrieve_receiver(RegisterMap*) (1 samples, 0.06%)</title><rect x="381.3" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.3" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::name_for_receiver() (1 samples, 0.06%)</title><rect x="381.3" y="499.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="384.3" y="510.0"></text>
</g>
<g>
<title>scala/Some.toString (1 samples, 0.06%)</title><rect x="382.0" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.0" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (1 samples, 0.06%)</title><rect x="382.0" y="995.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (1 samples, 0.06%)</title><rect x="382.0" y="979.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (1 samples, 0.06%)</title><rect x="382.0" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (1 samples, 0.06%)</title><rect x="382.0" y="947.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (1 samples, 0.06%)</title><rect x="382.0" y="931.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (1 samples, 0.06%)</title><rect x="382.0" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (1 samples, 0.06%)</title><rect x="382.0" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="382.0" y="883.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="382.0" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader.toString (1 samples, 0.06%)</title><rect x="382.0" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.0" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString$ (1 samples, 0.06%)</title><rect x="382.0" y="835.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.0" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString (1 samples, 0.06%)</title><rect x="382.0" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (1 samples, 0.06%)</title><rect x="382.0" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (1 samples, 0.06%)</title><rect x="382.0" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (1 samples, 0.06%)</title><rect x="382.0" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.0" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (1 samples, 0.06%)</title><rect x="382.0" y="755.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/util/StringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="382.0" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="382.0" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.0" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="382.0" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.0" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.06%)</title><rect x="382.0" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.0" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.06%)</title><rect x="382.0" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.0" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (1 samples, 0.06%)</title><rect x="382.0" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.0" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="382.0" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.0" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="382.0" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.0" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.render (1 samples, 0.06%)</title><rect x="382.0" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.version (1 samples, 0.06%)</title><rect x="382.0" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="382.8" y="1715.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.8" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="382.8" y="1699.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.8" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.createLogic (1 samples, 0.06%)</title><rect x="382.8" y="1683.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.8" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.&lt;init&gt; (1 samples, 0.06%)</title><rect x="382.8" y="1667.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.8" y="1678.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (2 samples, 0.13%)</title><rect x="383.5" y="1731.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.5" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (1 samples, 0.06%)</title><rect x="383.5" y="1715.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.5" y="1726.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (1 samples, 0.06%)</title><rect x="383.5" y="1699.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.5" y="1710.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (1 samples, 0.06%)</title><rect x="383.5" y="1683.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.5" y="1694.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (1 samples, 0.06%)</title><rect x="383.5" y="1667.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.5" y="1678.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (1 samples, 0.06%)</title><rect x="383.5" y="1651.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.5" y="1662.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (1 samples, 0.06%)</title><rect x="383.5" y="1635.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.5" y="1646.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (1 samples, 0.06%)</title><rect x="384.3" y="1715.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.3" y="1726.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.06%)</title><rect x="384.3" y="1699.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.3" y="1710.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (1 samples, 0.06%)</title><rect x="384.3" y="1683.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.3" y="1694.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.06%)</title><rect x="384.3" y="1667.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.3" y="1678.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.06%)</title><rect x="384.3" y="1651.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.3" y="1662.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (1 samples, 0.06%)</title><rect x="384.3" y="1635.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.3" y="1646.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (1 samples, 0.06%)</title><rect x="384.3" y="1619.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.3" y="1630.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (1 samples, 0.06%)</title><rect x="384.3" y="1603.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.3" y="1614.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (1 samples, 0.06%)</title><rect x="384.3" y="1587.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.3" y="1598.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.06%)</title><rect x="384.3" y="1571.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.3" y="1582.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="384.3" y="1555.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="387.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (1 samples, 0.06%)</title><rect x="385.0" y="1811.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.0" y="1822.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (1 samples, 0.06%)</title><rect x="385.0" y="1795.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.0" y="1806.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (1 samples, 0.06%)</title><rect x="385.0" y="1779.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.0" y="1790.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (1 samples, 0.06%)</title><rect x="385.0" y="1763.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.0" y="1774.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (1 samples, 0.06%)</title><rect x="385.0" y="1747.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.0" y="1758.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.06%)</title><rect x="385.0" y="1731.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.0" y="1742.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1715.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.0" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1699.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.0" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1683.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.0" y="1694.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.0" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1651.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.0" y="1662.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1635.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.0" y="1646.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.06%)</title><rect x="385.0" y="1619.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.0" y="1630.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.06%)</title><rect x="385.0" y="1603.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.0" y="1614.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1587.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.0" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1571.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.0" y="1582.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1555.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.0" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1539.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.0" y="1550.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1523.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.0" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1507.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.0" y="1518.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.0" y="1491.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.0" y="1502.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (1 samples, 0.06%)</title><rect x="385.0" y="1475.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.0" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="385.0" y="1459.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="388.0" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="385.0" y="1443.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="388.0" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="385.0" y="1427.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="388.0" y="1438.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(bool, Thread*) (1 samples, 0.06%)</title><rect x="385.0" y="1411.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="388.0" y="1422.0"></text>
</g>
<g>
<title>klassVtable::fill_in_mirandas(int) (1 samples, 0.06%)</title><rect x="385.0" y="1395.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="388.0" y="1406.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.06%)</title><rect x="385.0" y="1379.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="388.0" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.06%)</title><rect x="385.8" y="1827.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.8" y="1838.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="385.8" y="1811.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.8" y="1822.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (1 samples, 0.06%)</title><rect x="385.8" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.8" y="1806.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (1 samples, 0.06%)</title><rect x="385.8" y="1779.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.8" y="1790.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.productPrefix (1 samples, 0.06%)</title><rect x="385.8" y="1763.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.8" y="1774.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (2 samples, 0.13%)</title><rect x="386.5" y="1891.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.5" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.13%)</title><rect x="386.5" y="1875.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.5" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.13%)</title><rect x="386.5" y="1859.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.5" y="1870.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (2 samples, 0.13%)</title><rect x="386.5" y="1843.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.5" y="1854.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (2 samples, 0.13%)</title><rect x="386.5" y="1827.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.5" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="387.2" y="1811.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.2" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="387.2" y="1795.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.2" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="387.2" y="1779.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="387.2" y="1763.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.2" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="387.2" y="1747.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.2" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="387.2" y="1731.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="387.2" y="1715.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.2" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="387.2" y="1699.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.2" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="387.2" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.2" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="387.2" y="1667.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.2" y="1678.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (11 samples, 0.69%)</title><rect x="388.0" y="1891.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.0" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (11 samples, 0.69%)</title><rect x="388.0" y="1875.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.0" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (11 samples, 0.69%)</title><rect x="388.0" y="1859.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.0" y="1870.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (11 samples, 0.69%)</title><rect x="388.0" y="1843.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.0" y="1854.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (11 samples, 0.69%)</title><rect x="388.0" y="1827.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.0" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (8 samples, 0.50%)</title><rect x="388.0" y="1811.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.0" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (8 samples, 0.50%)</title><rect x="388.0" y="1795.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.0" y="1806.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="388.0" y="1779.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="391.0" y="1790.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="388.0" y="1763.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="391.0" y="1774.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="388.0" y="1747.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.0" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="388.0" y="1731.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="391.0" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="388.0" y="1715.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.0" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="388.0" y="1699.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.0" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="388.0" y="1683.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.0" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="388.0" y="1667.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="391.0" y="1678.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (7 samples, 0.44%)</title><rect x="388.7" y="1779.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.7" y="1790.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (7 samples, 0.44%)</title><rect x="388.7" y="1763.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.7" y="1774.0"></text>
</g>
<g>
<title>akka/actor/ActorCell$.newUid (1 samples, 0.06%)</title><rect x="388.7" y="1747.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextInt (1 samples, 0.06%)</title><rect x="388.7" y="1731.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSeed (1 samples, 0.06%)</title><rect x="388.7" y="1715.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.7" y="1726.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (2 samples, 0.13%)</title><rect x="389.5" y="1747.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.5" y="1758.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (2 samples, 0.13%)</title><rect x="389.5" y="1731.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.5" y="1742.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (2 samples, 0.13%)</title><rect x="389.5" y="1715.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.5" y="1726.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (2 samples, 0.13%)</title><rect x="389.5" y="1699.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.5" y="1710.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (1 samples, 0.06%)</title><rect x="389.5" y="1683.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.5" y="1694.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (1 samples, 0.06%)</title><rect x="389.5" y="1667.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.5" y="1678.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (1 samples, 0.06%)</title><rect x="389.5" y="1651.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.5" y="1662.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.06%)</title><rect x="389.5" y="1635.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.5" y="1646.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.06%)</title><rect x="389.5" y="1619.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.5" y="1630.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.06%)</title><rect x="389.5" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.5" y="1614.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (1 samples, 0.06%)</title><rect x="390.2" y="1683.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (1 samples, 0.06%)</title><rect x="390.2" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.2" y="1678.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="390.2" y="1651.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.2" y="1662.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.06%)</title><rect x="390.2" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.2" y="1646.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (1 samples, 0.06%)</title><rect x="390.2" y="1619.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.2" y="1630.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (1 samples, 0.06%)</title><rect x="390.2" y="1603.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="1614.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="390.2" y="1587.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="393.2" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="390.2" y="1571.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.2" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="390.2" y="1555.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="393.2" y="1566.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="390.2" y="1539.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.2" y="1550.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="390.2" y="1523.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="393.2" y="1534.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="390.2" y="1507.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="393.2" y="1518.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="390.2" y="1491.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="393.2" y="1502.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="390.2" y="1475.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.2" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="390.2" y="1459.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (2 samples, 0.13%)</title><rect x="391.0" y="1747.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.0" y="1758.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (2 samples, 0.13%)</title><rect x="391.0" y="1731.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.0" y="1742.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (2 samples, 0.13%)</title><rect x="391.0" y="1715.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.0" y="1726.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (2 samples, 0.13%)</title><rect x="391.0" y="1699.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.0" y="1710.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (2 samples, 0.13%)</title><rect x="391.0" y="1683.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.0" y="1694.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.register (1 samples, 0.06%)</title><rect x="391.7" y="1667.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.7" y="1678.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (2 samples, 0.13%)</title><rect x="392.4" y="1747.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.4" y="1758.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (2 samples, 0.13%)</title><rect x="392.4" y="1731.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.4" y="1742.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="392.4" y="1715.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.4" y="1726.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.newActorCell (1 samples, 0.06%)</title><rect x="392.4" y="1699.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.4" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="392.4" y="1683.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="395.4" y="1694.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="392.4" y="1667.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.4" y="1678.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="392.4" y="1651.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="395.4" y="1662.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.06%)</title><rect x="392.4" y="1635.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="395.4" y="1646.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (1 samples, 0.06%)</title><rect x="393.2" y="1715.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.2" y="1726.0"></text>
</g>
<g>
<title>akka/actor/Props.actorClass (1 samples, 0.06%)</title><rect x="393.2" y="1699.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.2" y="1710.0"></text>
</g>
<g>
<title>akka/actor/Props.cachedActorClass (1 samples, 0.06%)</title><rect x="393.2" y="1683.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.2" y="1694.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="393.2" y="1667.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.2" y="1678.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.06%)</title><rect x="393.9" y="1811.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.9" y="1822.0"></text>
</g>
<g>
<title>akka/actor/Props.copy (1 samples, 0.06%)</title><rect x="393.9" y="1795.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.9" y="1806.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.06%)</title><rect x="393.9" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.9" y="1790.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.06%)</title><rect x="393.9" y="1763.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.9" y="1774.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.06%)</title><rect x="393.9" y="1747.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.9" y="1758.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="393.9" y="1731.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.9" y="1742.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.06%)</title><rect x="393.9" y="1715.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.9" y="1726.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.06%)</title><rect x="393.9" y="1699.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.9" y="1710.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (1 samples, 0.06%)</title><rect x="393.9" y="1683.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.9" y="1694.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (1 samples, 0.06%)</title><rect x="393.9" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.9" y="1678.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (1 samples, 0.06%)</title><rect x="393.9" y="1651.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.9" y="1662.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.zip (1 samples, 0.06%)</title><rect x="393.9" y="1635.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.9" y="1646.0"></text>
</g>
<g>
<title>scala/collection/Iterator.zip$ (1 samples, 0.06%)</title><rect x="393.9" y="1619.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="1630.0"></text>
</g>
<g>
<title>scala/collection/Iterator.zip (1 samples, 0.06%)</title><rect x="393.9" y="1603.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.9" y="1614.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1$$Lambda$544/1604144776.apply (2 samples, 0.13%)</title><rect x="394.7" y="1811.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.7" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.$anonfun$applyOrElse$1 (2 samples, 0.13%)</title><rect x="394.7" y="1795.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.7" y="1806.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (2 samples, 0.13%)</title><rect x="394.7" y="1779.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.7" y="1790.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (2 samples, 0.13%)</title><rect x="394.7" y="1763.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.7" y="1774.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (2 samples, 0.13%)</title><rect x="394.7" y="1747.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.7" y="1758.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (2 samples, 0.13%)</title><rect x="394.7" y="1731.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.7" y="1742.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (2 samples, 0.13%)</title><rect x="394.7" y="1715.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.7" y="1726.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (2 samples, 0.13%)</title><rect x="394.7" y="1699.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.7" y="1710.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.filter (2 samples, 0.13%)</title><rect x="394.7" y="1683.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.7" y="1694.0"></text>
</g>
<g>
<title>scala/collection/Iterator.filter$ (2 samples, 0.13%)</title><rect x="394.7" y="1667.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.7" y="1678.0"></text>
</g>
<g>
<title>scala/collection/Iterator.filter (2 samples, 0.13%)</title><rect x="394.7" y="1651.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.7" y="1662.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.filterImpl (1 samples, 0.06%)</title><rect x="395.4" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.4" y="1646.0"></text>
</g>
<g>
<title>scala/collection/Iterator.filterImpl$ (1 samples, 0.06%)</title><rect x="395.4" y="1619.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.4" y="1630.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="395.4" y="1603.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="398.4" y="1614.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="395.4" y="1587.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="398.4" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="395.4" y="1571.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="398.4" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="395.4" y="1555.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="398.4" y="1566.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="395.4" y="1539.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="398.4" y="1550.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="395.4" y="1523.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="398.4" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="395.4" y="1507.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="398.4" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="395.4" y="1491.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="398.4" y="1502.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (4 samples, 0.25%)</title><rect x="396.2" y="1891.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.2" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (4 samples, 0.25%)</title><rect x="396.2" y="1875.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.2" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (4 samples, 0.25%)</title><rect x="396.2" y="1859.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.2" y="1870.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (4 samples, 0.25%)</title><rect x="396.2" y="1843.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.2" y="1854.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (4 samples, 0.25%)</title><rect x="396.2" y="1827.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.2" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (4 samples, 0.25%)</title><rect x="396.2" y="1811.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.2" y="1822.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (4 samples, 0.25%)</title><rect x="396.2" y="1795.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.2" y="1806.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.25%)</title><rect x="396.2" y="1779.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.2" y="1790.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.25%)</title><rect x="396.2" y="1763.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.2" y="1774.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.25%)</title><rect x="396.2" y="1747.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.2" y="1758.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (4 samples, 0.25%)</title><rect x="396.2" y="1731.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.2" y="1742.0"></text>
</g>
<g>
<title>akka/routing/Router.route (4 samples, 0.25%)</title><rect x="396.2" y="1715.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.2" y="1726.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.select (1 samples, 0.06%)</title><rect x="396.2" y="1699.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.2" y="1710.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHashingRoutingLogic.target$1 (1 samples, 0.06%)</title><rect x="396.2" y="1683.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.2" y="1694.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHash.nodeFor (1 samples, 0.06%)</title><rect x="396.2" y="1667.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.2" y="1678.0"></text>
</g>
<g>
<title>akka/routing/ConsistentHash$.akka$routing$ConsistentHash$$hashFor (1 samples, 0.06%)</title><rect x="396.2" y="1651.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.2" y="1662.0"></text>
</g>
<g>
<title>akka/routing/MurmurHash$.stringHash (1 samples, 0.06%)</title><rect x="396.2" y="1635.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.2" y="1646.0"></text>
</g>
<g>
<title>akka/routing/MurmurHash$.extendHash (1 samples, 0.06%)</title><rect x="396.2" y="1619.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.2" y="1630.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.06%)</title><rect x="396.2" y="1603.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="399.2" y="1614.0"></text>
</g>
<g>
<title>akka/routing/Router.send (3 samples, 0.19%)</title><rect x="396.9" y="1699.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.9" y="1710.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (3 samples, 0.19%)</title><rect x="396.9" y="1683.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.9" y="1694.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (3 samples, 0.19%)</title><rect x="396.9" y="1667.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.9" y="1678.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.19%)</title><rect x="396.9" y="1651.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.9" y="1662.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.19%)</title><rect x="396.9" y="1635.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.9" y="1646.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.19%)</title><rect x="396.9" y="1619.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.9" y="1630.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.19%)</title><rect x="396.9" y="1603.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.9" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.19%)</title><rect x="396.9" y="1587.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.9" y="1598.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.19%)</title><rect x="396.9" y="1571.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.9" y="1582.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.19%)</title><rect x="396.9" y="1555.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.9" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.19%)</title><rect x="396.9" y="1539.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.9" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.19%)</title><rect x="396.9" y="1523.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.9" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.19%)</title><rect x="396.9" y="1507.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.9" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.19%)</title><rect x="396.9" y="1491.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.9" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.19%)</title><rect x="396.9" y="1475.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.19%)</title><rect x="396.9" y="1459.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (3 samples, 0.19%)</title><rect x="396.9" y="1443.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/Thread.start (2 samples, 0.13%)</title><rect x="396.9" y="1427.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (2 samples, 0.13%)</title><rect x="396.9" y="1411.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.9" y="1422.0"></text>
</g>
<g>
<title>JVM_StartThread (2 samples, 0.13%)</title><rect x="396.9" y="1395.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="399.9" y="1406.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (2 samples, 0.13%)</title><rect x="396.9" y="1379.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="399.9" y="1390.0"></text>
</g>
<g>
<title>__clone (2 samples, 0.13%)</title><rect x="396.9" y="1363.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="399.9" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="396.9" y="1347.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="399.9" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="396.9" y="1331.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="399.9" y="1342.0"></text>
</g>
<g>
<title>sys_clone (2 samples, 0.13%)</title><rect x="396.9" y="1315.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.9" y="1326.0"></text>
</g>
<g>
<title>_do_fork (2 samples, 0.13%)</title><rect x="396.9" y="1299.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="399.9" y="1310.0"></text>
</g>
<g>
<title>copy_process.part.36 (2 samples, 0.13%)</title><rect x="396.9" y="1283.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="399.9" y="1294.0"></text>
</g>
<g>
<title>__vmalloc_node_range (1 samples, 0.06%)</title><rect x="396.9" y="1267.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="399.9" y="1278.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.06%)</title><rect x="396.9" y="1251.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="399.9" y="1262.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="396.9" y="1235.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.9" y="1246.0"></text>
</g>
<g>
<title>memcg_kmem_charge (1 samples, 0.06%)</title><rect x="396.9" y="1219.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.9" y="1230.0"></text>
</g>
<g>
<title>memcg_kmem_charge_memcg (1 samples, 0.06%)</title><rect x="396.9" y="1203.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="399.9" y="1214.0"></text>
</g>
<g>
<title>page_counter_try_charge (1 samples, 0.06%)</title><rect x="396.9" y="1187.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="399.9" y="1198.0"></text>
</g>
<g>
<title>memcpy_erms (1 samples, 0.06%)</title><rect x="397.6" y="1267.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.4" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/MonitorableThreadFactory.newThread (1 samples, 0.06%)</title><rect x="398.4" y="1411.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.4" y="1395.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.4" y="1379.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.4" y="1363.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.4" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1 samples, 0.06%)</title><rect x="398.4" y="1347.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.4" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1 samples, 0.06%)</title><rect x="398.4" y="1331.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.4" y="1342.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (1 samples, 0.06%)</title><rect x="398.4" y="1315.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="401.4" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (16 samples, 1.01%)</title><rect x="399.1" y="1891.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.1" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (16 samples, 1.01%)</title><rect x="399.1" y="1875.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.1" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (16 samples, 1.01%)</title><rect x="399.1" y="1859.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.1" y="1870.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (2 samples, 0.13%)</title><rect x="399.1" y="1843.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.1" y="1854.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.13%)</title><rect x="399.1" y="1827.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.1" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$573/460949660.apply$mcV$sp (1 samples, 0.06%)</title><rect x="399.1" y="1811.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.1" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (1 samples, 0.06%)</title><rect x="399.1" y="1795.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.1" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (1 samples, 0.06%)</title><rect x="399.1" y="1779.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.1" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (1 samples, 0.06%)</title><rect x="399.1" y="1763.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.1" y="1774.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (1 samples, 0.06%)</title><rect x="399.9" y="1811.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.9" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (1 samples, 0.06%)</title><rect x="399.9" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.9" y="1806.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (1 samples, 0.06%)</title><rect x="399.9" y="1779.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.9" y="1790.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (1 samples, 0.06%)</title><rect x="399.9" y="1763.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.9" y="1774.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (1 samples, 0.06%)</title><rect x="399.9" y="1747.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.9" y="1758.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (1 samples, 0.06%)</title><rect x="399.9" y="1731.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.9" y="1742.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.akka$actor$dungeon$DeathWatch$$terminatedQueued_$eq (1 samples, 0.06%)</title><rect x="399.9" y="1715.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.9" y="1726.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (3 samples, 0.19%)</title><rect x="400.6" y="1843.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.6" y="1854.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (3 samples, 0.19%)</title><rect x="400.6" y="1827.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.6" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$551/22915100.apply$mcV$sp (3 samples, 0.19%)</title><rect x="400.6" y="1811.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.6" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (3 samples, 0.19%)</title><rect x="400.6" y="1795.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.6" y="1806.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (1 samples, 0.06%)</title><rect x="400.6" y="1779.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.6" y="1790.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become$ (1 samples, 0.06%)</title><rect x="400.6" y="1763.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.6" y="1774.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become (1 samples, 0.06%)</title><rect x="400.6" y="1747.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.6" y="1758.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (1 samples, 0.06%)</title><rect x="401.4" y="1779.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.4" y="1790.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (1 samples, 0.06%)</title><rect x="401.4" y="1763.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.4" y="1774.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (1 samples, 0.06%)</title><rect x="401.4" y="1747.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.4" y="1758.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.06%)</title><rect x="401.4" y="1731.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.4" y="1742.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.06%)</title><rect x="401.4" y="1715.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.4" y="1726.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="401.4" y="1699.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.4" y="1710.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (1 samples, 0.06%)</title><rect x="401.4" y="1683.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.4" y="1694.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="401.4" y="1667.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.4" y="1678.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.06%)</title><rect x="401.4" y="1651.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.4" y="1662.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (1 samples, 0.06%)</title><rect x="401.4" y="1635.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.4" y="1646.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.addressStringLengthDiff (1 samples, 0.06%)</title><rect x="401.4" y="1619.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.4" y="1630.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.root (1 samples, 0.06%)</title><rect x="401.4" y="1603.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.4" y="1614.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$2 (1 samples, 0.06%)</title><rect x="401.4" y="1587.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.4" y="1598.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (1 samples, 0.06%)</title><rect x="402.1" y="1779.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.1" y="1790.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (1 samples, 0.06%)</title><rect x="402.1" y="1763.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.1" y="1774.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$572/657027946.apply$mcV$sp (1 samples, 0.06%)</title><rect x="402.1" y="1747.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.1" y="1758.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (1 samples, 0.06%)</title><rect x="402.1" y="1731.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.1" y="1742.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (1 samples, 0.06%)</title><rect x="402.1" y="1715.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.1" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="402.1" y="1699.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.1" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.06%)</title><rect x="402.1" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.1" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (1 samples, 0.06%)</title><rect x="402.1" y="1667.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.1" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="402.1" y="1651.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="405.1" y="1662.0"></text>
</g>
<g>
<title>__connect (1 samples, 0.06%)</title><rect x="402.1" y="1635.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="405.1" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="402.1" y="1619.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.1" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="402.1" y="1603.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="405.1" y="1614.0"></text>
</g>
<g>
<title>sys_connect (1 samples, 0.06%)</title><rect x="402.1" y="1587.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.1" y="1598.0"></text>
</g>
<g>
<title>SYSC_connect (1 samples, 0.06%)</title><rect x="402.1" y="1571.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="405.1" y="1582.0"></text>
</g>
<g>
<title>inet_stream_connect (1 samples, 0.06%)</title><rect x="402.1" y="1555.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.1" y="1566.0"></text>
</g>
<g>
<title>__inet_stream_connect (1 samples, 0.06%)</title><rect x="402.1" y="1539.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.1" y="1550.0"></text>
</g>
<g>
<title>tcp_v6_connect (1 samples, 0.06%)</title><rect x="402.1" y="1523.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.1" y="1534.0"></text>
</g>
<g>
<title>tcp_v4_connect (1 samples, 0.06%)</title><rect x="402.1" y="1507.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.1" y="1518.0"></text>
</g>
<g>
<title>secure_tcp_seq (1 samples, 0.06%)</title><rect x="402.1" y="1491.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="405.1" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (2 samples, 0.13%)</title><rect x="402.8" y="1843.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.8" y="1854.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.13%)</title><rect x="402.8" y="1827.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.8" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$571/1814015636.apply$mcV$sp (2 samples, 0.13%)</title><rect x="402.8" y="1811.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.8" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (2 samples, 0.13%)</title><rect x="402.8" y="1795.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.8" y="1806.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (2 samples, 0.13%)</title><rect x="402.8" y="1779.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.8" y="1790.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.13%)</title><rect x="402.8" y="1763.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.8" y="1774.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$572/657027946.apply$mcV$sp (2 samples, 0.13%)</title><rect x="402.8" y="1747.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.8" y="1758.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (1 samples, 0.06%)</title><rect x="403.6" y="1731.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.6" y="1742.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (1 samples, 0.06%)</title><rect x="403.6" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.6" y="1726.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (1 samples, 0.06%)</title><rect x="403.6" y="1699.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.6" y="1710.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.06%)</title><rect x="403.6" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.6" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="403.6" y="1667.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.6" y="1678.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.06%)</title><rect x="403.6" y="1651.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="406.6" y="1662.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (9 samples, 0.57%)</title><rect x="404.3" y="1843.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.3" y="1854.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (5 samples, 0.31%)</title><rect x="404.3" y="1827.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.3" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (1 samples, 0.06%)</title><rect x="404.3" y="1811.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.3" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (1 samples, 0.06%)</title><rect x="404.3" y="1795.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.3" y="1806.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="404.3" y="1779.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.3" y="1790.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (2 samples, 0.13%)</title><rect x="405.1" y="1811.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.1" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (2 samples, 0.13%)</title><rect x="405.1" y="1795.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.1" y="1806.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (2 samples, 0.13%)</title><rect x="405.1" y="1779.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.1" y="1790.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (1 samples, 0.06%)</title><rect x="405.1" y="1763.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.1" y="1774.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (1 samples, 0.06%)</title><rect x="405.1" y="1747.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.1" y="1758.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.06%)</title><rect x="405.1" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.1" y="1742.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="405.1" y="1715.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="408.1" y="1726.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="405.1" y="1699.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.1" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="405.1" y="1683.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="408.1" y="1694.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.06%)</title><rect x="405.1" y="1667.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="408.1" y="1678.0"></text>
</g>
<g>
<title>CodeBlob::is_adapter_blob() const (1 samples, 0.06%)</title><rect x="405.1" y="1651.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.1" y="1662.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (1 samples, 0.06%)</title><rect x="405.8" y="1763.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.8" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (1 samples, 0.06%)</title><rect x="405.8" y="1747.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.8" y="1758.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (1 samples, 0.06%)</title><rect x="405.8" y="1731.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.8" y="1742.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (1 samples, 0.06%)</title><rect x="405.8" y="1715.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.8" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (1 samples, 0.06%)</title><rect x="405.8" y="1699.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.8" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.06%)</title><rect x="405.8" y="1683.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.8" y="1694.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (1 samples, 0.06%)</title><rect x="405.8" y="1667.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="408.8" y="1678.0"></text>
</g>
<g>
<title>setsockopt (1 samples, 0.06%)</title><rect x="405.8" y="1651.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="408.8" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="405.8" y="1635.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.8" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="405.8" y="1619.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.8" y="1630.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.06%)</title><rect x="405.8" y="1603.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.8" y="1614.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.06%)</title><rect x="405.8" y="1587.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="408.8" y="1598.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (2 samples, 0.13%)</title><rect x="406.6" y="1811.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.6" y="1822.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (2 samples, 0.13%)</title><rect x="406.6" y="1795.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.6" y="1806.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (2 samples, 0.13%)</title><rect x="406.6" y="1779.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.6" y="1790.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.13%)</title><rect x="406.6" y="1763.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.6" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.13%)</title><rect x="406.6" y="1747.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.6" y="1758.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="406.6" y="1731.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="409.6" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="406.6" y="1715.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="409.6" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="406.6" y="1699.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="409.6" y="1710.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="406.6" y="1683.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="409.6" y="1694.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="406.6" y="1667.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="409.6" y="1678.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="406.6" y="1651.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.6" y="1662.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="406.6" y="1635.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.6" y="1646.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="406.6" y="1619.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.6" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="406.6" y="1603.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="409.6" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="407.3" y="1731.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="407.3" y="1715.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="410.3" y="1726.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="407.3" y="1699.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="410.3" y="1710.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (4 samples, 0.25%)</title><rect x="408.0" y="1827.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.0" y="1838.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (1 samples, 0.06%)</title><rect x="408.0" y="1811.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.0" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (1 samples, 0.06%)</title><rect x="408.0" y="1795.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.0" y="1806.0"></text>
</g>
<g>
<title>akka/io/Tcp$Write.equals (1 samples, 0.06%)</title><rect x="408.0" y="1779.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.0" y="1790.0"></text>
</g>
<g>
<title>akka/util/ByteString.equals (1 samples, 0.06%)</title><rect x="408.0" y="1763.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.0" y="1774.0"></text>
</g>
<g>
<title>scala/collection/Seq.equals$ (1 samples, 0.06%)</title><rect x="408.0" y="1747.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.0" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="408.0" y="1731.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="411.0" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="408.0" y="1715.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="411.0" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="408.0" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="411.0" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="408.0" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="411.0" y="1694.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="408.0" y="1667.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="411.0" y="1678.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (3 samples, 0.19%)</title><rect x="408.8" y="1811.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.8" y="1822.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (3 samples, 0.19%)</title><rect x="408.8" y="1795.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.8" y="1806.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (3 samples, 0.19%)</title><rect x="408.8" y="1779.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.8" y="1790.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (1 samples, 0.06%)</title><rect x="408.8" y="1763.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.8" y="1774.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$539/382777121.apply (1 samples, 0.06%)</title><rect x="408.8" y="1747.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.8" y="1758.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (1 samples, 0.06%)</title><rect x="408.8" y="1731.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.8" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (1 samples, 0.06%)</title><rect x="408.8" y="1715.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.8" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.06%)</title><rect x="408.8" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.8" y="1710.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.06%)</title><rect x="408.8" y="1683.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.8" y="1694.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.06%)</title><rect x="408.8" y="1667.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.8" y="1678.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/950714593.apply (1 samples, 0.06%)</title><rect x="408.8" y="1651.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.8" y="1662.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.06%)</title><rect x="408.8" y="1635.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.8" y="1646.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.06%)</title><rect x="408.8" y="1619.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.8" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.13%)</title><rect x="409.5" y="1763.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.5" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="409.5" y="1747.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.5" y="1758.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="409.5" y="1731.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.5" y="1742.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.06%)</title><rect x="409.5" y="1715.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.5" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.06%)</title><rect x="409.5" y="1699.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.5" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.06%)</title><rect x="409.5" y="1683.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.5" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="409.5" y="1667.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="412.5" y="1678.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="409.5" y="1651.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="412.5" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="409.5" y="1635.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="412.5" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="409.5" y="1619.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.5" y="1630.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.06%)</title><rect x="409.5" y="1603.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.5" y="1614.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.06%)</title><rect x="409.5" y="1587.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.5" y="1598.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.06%)</title><rect x="409.5" y="1571.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="412.5" y="1582.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.06%)</title><rect x="409.5" y="1555.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.5" y="1566.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.06%)</title><rect x="409.5" y="1539.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="412.5" y="1550.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.06%)</title><rect x="409.5" y="1523.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.5" y="1534.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.06%)</title><rect x="409.5" y="1507.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.5" y="1518.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.06%)</title><rect x="409.5" y="1491.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="412.5" y="1502.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.06%)</title><rect x="409.5" y="1475.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="412.5" y="1486.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="409.5" y="1459.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="412.5" y="1470.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="409.5" y="1443.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="412.5" y="1454.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="409.5" y="1427.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="412.5" y="1438.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="409.5" y="1411.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.5" y="1422.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="409.5" y="1395.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.5" y="1406.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="409.5" y="1379.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.5" y="1390.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="409.5" y="1363.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="412.5" y="1374.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="409.5" y="1347.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="412.5" y="1358.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="409.5" y="1331.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginWrite (1 samples, 0.06%)</title><rect x="410.3" y="1747.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.3" y="1758.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpenAndConnected (1 samples, 0.06%)</title><rect x="410.3" y="1731.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.3" y="1742.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemotingTerminator.aroundReceive (2 samples, 0.13%)</title><rect x="411.0" y="1891.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.0" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.13%)</title><rect x="411.0" y="1875.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.0" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.13%)</title><rect x="411.0" y="1859.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.0" y="1870.0"></text>
</g>
<g>
<title>akka/actor/FSM$$anonfun$receive$1.applyOrElse (2 samples, 0.13%)</title><rect x="411.0" y="1843.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.0" y="1854.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.13%)</title><rect x="411.0" y="1827.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.13%)</title><rect x="411.0" y="1811.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.13%)</title><rect x="411.0" y="1795.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.13%)</title><rect x="411.0" y="1779.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.13%)</title><rect x="411.0" y="1763.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="411.0" y="1747.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.0" y="1758.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="411.0" y="1731.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="411.0" y="1715.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="411.0" y="1699.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.0" y="1710.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="411.0" y="1683.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="414.0" y="1694.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="411.0" y="1667.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="414.0" y="1678.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="411.0" y="1651.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="414.0" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="411.0" y="1635.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="414.0" y="1646.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="411.0" y="1619.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="414.0" y="1630.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="411.0" y="1603.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="414.0" y="1614.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="411.0" y="1587.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="414.0" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="411.0" y="1571.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="414.0" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="411.7" y="1747.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="411.7" y="1731.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.7" y="1742.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="411.7" y="1715.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.7" y="1726.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="411.7" y="1699.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.7" y="1710.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="411.7" y="1683.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.7" y="1694.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="411.7" y="1667.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.7" y="1678.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="411.7" y="1651.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.7" y="1662.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="411.7" y="1635.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.7" y="1646.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.06%)</title><rect x="411.7" y="1619.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.7" y="1630.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (69 samples, 4.34%)</title><rect x="412.5" y="1891.0" width="51.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.5" y="1902.0">akka/..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (69 samples, 4.34%)</title><rect x="412.5" y="1875.0" width="51.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.5" y="1886.0">akka/..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (68 samples, 4.28%)</title><rect x="413.2" y="1859.0" width="50.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.2" y="1870.0">akka/..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (68 samples, 4.28%)</title><rect x="413.2" y="1843.0" width="50.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.2" y="1854.0">akka/..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (52 samples, 3.27%)</title><rect x="413.2" y="1827.0" width="38.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.2" y="1838.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (52 samples, 3.27%)</title><rect x="413.2" y="1811.0" width="38.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.2" y="1822.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (52 samples, 3.27%)</title><rect x="413.2" y="1795.0" width="38.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.2" y="1806.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (14 samples, 0.88%)</title><rect x="413.2" y="1779.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.2" y="1790.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$480/1805769684.apply (3 samples, 0.19%)</title><rect x="413.2" y="1763.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.2" y="1774.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (3 samples, 0.19%)</title><rect x="413.2" y="1747.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.2" y="1758.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (3 samples, 0.19%)</title><rect x="413.2" y="1731.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.2" y="1742.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (3 samples, 0.19%)</title><rect x="413.2" y="1715.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.2" y="1726.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (3 samples, 0.19%)</title><rect x="413.2" y="1699.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.2" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (3 samples, 0.19%)</title><rect x="413.2" y="1683.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.2" y="1694.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.19%)</title><rect x="413.2" y="1667.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.2" y="1678.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.19%)</title><rect x="413.2" y="1651.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.2" y="1662.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.19%)</title><rect x="413.2" y="1635.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.2" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$403/280358925.apply (3 samples, 0.19%)</title><rect x="413.2" y="1619.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.2" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (3 samples, 0.19%)</title><rect x="413.2" y="1603.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.2" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (3 samples, 0.19%)</title><rect x="413.2" y="1587.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.2" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (1 samples, 0.06%)</title><rect x="413.2" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.2" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (1 samples, 0.06%)</title><rect x="413.2" y="1555.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.2" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (1 samples, 0.06%)</title><rect x="413.2" y="1539.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.2" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (1 samples, 0.06%)</title><rect x="413.2" y="1523.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.2" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.cc$1 (1 samples, 0.06%)</title><rect x="413.2" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.2" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (2 samples, 0.13%)</title><rect x="414.0" y="1571.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.0" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$476/1577913969.apply (7 samples, 0.44%)</title><rect x="415.5" y="1763.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.5" y="1774.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (6 samples, 0.38%)</title><rect x="416.2" y="1747.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.2" y="1758.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (6 samples, 0.38%)</title><rect x="416.2" y="1731.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.2" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$581/2017623605.apply$mcV$sp (4 samples, 0.25%)</title><rect x="416.2" y="1715.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.2" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (4 samples, 0.25%)</title><rect x="416.2" y="1699.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.2" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$533/1337606979.apply (4 samples, 0.25%)</title><rect x="416.2" y="1683.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.2" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (4 samples, 0.25%)</title><rect x="416.2" y="1667.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.2" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (4 samples, 0.25%)</title><rect x="416.2" y="1651.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.2" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (4 samples, 0.25%)</title><rect x="416.2" y="1635.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.2" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1103/1514961588.apply (3 samples, 0.19%)</title><rect x="416.2" y="1619.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.2" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3$adapted (3 samples, 0.19%)</title><rect x="416.2" y="1603.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.2" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3 (3 samples, 0.19%)</title><rect x="416.2" y="1587.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.2" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptFailed (1 samples, 0.06%)</title><rect x="416.2" y="1571.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.2" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (1 samples, 0.06%)</title><rect x="416.2" y="1555.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.2" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (1 samples, 0.06%)</title><rect x="416.2" y="1539.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.2" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (1 samples, 0.06%)</title><rect x="416.2" y="1523.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="416.2" y="1507.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.2" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Failed.productPrefix (1 samples, 0.06%)</title><rect x="416.2" y="1491.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.2" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onConnectionAttemptFailed (2 samples, 0.13%)</title><rect x="416.9" y="1571.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.9" y="1582.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.foreach (1 samples, 0.06%)</title><rect x="417.7" y="1555.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.7" y="1566.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.06%)</title><rect x="417.7" y="1539.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.7" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.06%)</title><rect x="417.7" y="1523.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.7" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1104/525270937.apply (1 samples, 0.06%)</title><rect x="417.7" y="1507.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.7" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1$adapted (1 samples, 0.06%)</title><rect x="417.7" y="1491.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.7" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$onConnectionAttemptFailed$1 (1 samples, 0.06%)</title><rect x="417.7" y="1475.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.7" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewConnectionEmbargo (1 samples, 0.06%)</title><rect x="417.7" y="1459.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.7" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (1 samples, 0.06%)</title><rect x="417.7" y="1443.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.7" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (1 samples, 0.06%)</title><rect x="417.7" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.7" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (1 samples, 0.06%)</title><rect x="417.7" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.7" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$510/1721751012.apply (1 samples, 0.06%)</title><rect x="417.7" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewConnectionEmbargo$1 (1 samples, 0.06%)</title><rect x="417.7" y="1379.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.7" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewConnectionEmbargo (1 samples, 0.06%)</title><rect x="417.7" y="1363.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewConnectionEmbargo$ (1 samples, 0.06%)</title><rect x="417.7" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.7" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewConnectionEmbargo (1 samples, 0.06%)</title><rect x="417.7" y="1331.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Embargoed.&lt;init&gt; (1 samples, 0.06%)</title><rect x="417.7" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Embargoed.newLevelTimeout (1 samples, 0.06%)</title><rect x="417.7" y="1299.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.7" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationLong.millis (1 samples, 0.06%)</title><rect x="417.7" y="1283.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.millis$ (1 samples, 0.06%)</title><rect x="417.7" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.millis (1 samples, 0.06%)</title><rect x="417.7" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationLong.milliseconds (1 samples, 0.06%)</title><rect x="417.7" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.milliseconds$ (1 samples, 0.06%)</title><rect x="417.7" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.milliseconds (1 samples, 0.06%)</title><rect x="417.7" y="1203.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationLong.durationIn (1 samples, 0.06%)</title><rect x="417.7" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.7" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="417.7" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="420.7" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="420.7" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="420.7" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="420.7" y="1134.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="420.7" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1091.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="420.7" y="1102.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="417.7" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="420.7" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="417.7" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="420.7" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="417.7" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="420.7" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="417.7" y="1027.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="420.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$584/523502265.apply (1 samples, 0.06%)</title><rect x="418.4" y="1619.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.4" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (1 samples, 0.06%)</title><rect x="418.4" y="1603.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.4" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (1 samples, 0.06%)</title><rect x="418.4" y="1587.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.4" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot$$Lambda$609/310605871.apply$mcV$sp (2 samples, 0.13%)</title><rect x="419.2" y="1715.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.2" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.$anonfun$updateState$1 (2 samples, 0.13%)</title><rect x="419.2" y="1699.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.2" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (1 samples, 0.06%)</title><rect x="419.9" y="1683.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.9" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (1 samples, 0.06%)</title><rect x="419.9" y="1667.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.9" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (1 samples, 0.06%)</title><rect x="419.9" y="1651.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.9" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (1 samples, 0.06%)</title><rect x="419.9" y="1635.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.9" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (1 samples, 0.06%)</title><rect x="419.9" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.9" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (1 samples, 0.06%)</title><rect x="419.9" y="1603.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.9" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (1 samples, 0.06%)</title><rect x="419.9" y="1587.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.9" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (1 samples, 0.06%)</title><rect x="419.9" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.9" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (1 samples, 0.06%)</title><rect x="419.9" y="1555.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.9" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (1 samples, 0.06%)</title><rect x="419.9" y="1539.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.9" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$511/781373139.apply (1 samples, 0.06%)</title><rect x="419.9" y="1523.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.9" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (1 samples, 0.06%)</title><rect x="419.9" y="1507.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.9" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (1 samples, 0.06%)</title><rect x="419.9" y="1491.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.9" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (1 samples, 0.06%)</title><rect x="419.9" y="1475.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.9" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (1 samples, 0.06%)</title><rect x="419.9" y="1459.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.9" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (1 samples, 0.06%)</title><rect x="419.9" y="1443.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.9" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (1 samples, 0.06%)</title><rect x="419.9" y="1427.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.9" y="1438.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (1 samples, 0.06%)</title><rect x="419.9" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.9" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (1 samples, 0.06%)</title><rect x="419.9" y="1395.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.9" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (1 samples, 0.06%)</title><rect x="419.9" y="1379.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.9" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="419.9" y="1363.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.9" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.06%)</title><rect x="419.9" y="1347.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="419.9" y="1331.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="419.9" y="1315.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (1 samples, 0.06%)</title><rect x="419.9" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (1 samples, 0.06%)</title><rect x="419.9" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (1 samples, 0.06%)</title><rect x="420.7" y="1763.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.7" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (1 samples, 0.06%)</title><rect x="420.7" y="1747.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.7" y="1758.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (1 samples, 0.06%)</title><rect x="420.7" y="1731.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.7" y="1742.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.06%)</title><rect x="420.7" y="1715.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="1726.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.06%)</title><rect x="420.7" y="1699.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.7" y="1710.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.06%)</title><rect x="420.7" y="1683.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.7" y="1694.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.isEmpty (1 samples, 0.06%)</title><rect x="420.7" y="1667.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.7" y="1678.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/1536335944.apply (1 samples, 0.06%)</title><rect x="421.4" y="1763.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.4" y="1774.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (1 samples, 0.06%)</title><rect x="421.4" y="1747.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1758.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (1 samples, 0.06%)</title><rect x="421.4" y="1731.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.4" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (1 samples, 0.06%)</title><rect x="421.4" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$794/1342271302.apply (1 samples, 0.06%)</title><rect x="421.4" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.4" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (1 samples, 0.06%)</title><rect x="421.4" y="1683.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.4" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (1 samples, 0.06%)</title><rect x="421.4" y="1667.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.4" y="1678.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (1 samples, 0.06%)</title><rect x="421.4" y="1651.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="1662.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.unbindCompleted (1 samples, 0.06%)</title><rect x="421.4" y="1635.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.4" y="1646.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (1 samples, 0.06%)</title><rect x="421.4" y="1619.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1630.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (1 samples, 0.06%)</title><rect x="421.4" y="1603.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.4" y="1614.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (1 samples, 0.06%)</title><rect x="421.4" y="1587.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.4" y="1598.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.06%)</title><rect x="421.4" y="1571.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.4" y="1582.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="421.4" y="1555.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.4" y="1566.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="421.4" y="1539.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.4" y="1550.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="421.4" y="1523.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.06%)</title><rect x="421.4" y="1507.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.4" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="421.4" y="1491.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.4" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="421.4" y="1475.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.06%)</title><rect x="421.4" y="1459.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (1 samples, 0.06%)</title><rect x="421.4" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (1 samples, 0.06%)</title><rect x="421.4" y="1427.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.4" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (1 samples, 0.06%)</title><rect x="421.4" y="1411.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.4" y="1422.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$ServerBinding$$Lambda$1096/1042034546.apply (1 samples, 0.06%)</title><rect x="421.4" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.4" y="1406.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$ServerBinding.$anonfun$terminate$2 (1 samples, 0.06%)</title><rect x="421.4" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.4" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1033/1598138828.apply (1 samples, 0.06%)</title><rect x="421.4" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.4" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$8 (1 samples, 0.06%)</title><rect x="421.4" y="1347.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.4" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.terminate (1 samples, 0.06%)</title><rect x="421.4" y="1331.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.4" y="1342.0"></text>
</g>
<g>
<title>akka/util/PrettyDuration$.format (1 samples, 0.06%)</title><rect x="421.4" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.4" y="1326.0"></text>
</g>
<g>
<title>akka/util/PrettyDuration$PrettyPrintableDuration$.pretty$extension (1 samples, 0.06%)</title><rect x="421.4" y="1299.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.4" y="1310.0"></text>
</g>
<g>
<title>akka/util/PrettyDuration$PrettyPrintableDuration$.pretty$extension (1 samples, 0.06%)</title><rect x="421.4" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StringOps$.formatLocal$extension (1 samples, 0.06%)</title><rect x="421.4" y="1267.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="421.4" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="421.4" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="421.4" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="421.4" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="421.4" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="421.4" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="421.4" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="421.4" y="1139.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="421.4" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="421.4" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="421.4" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.06%)</title><rect x="421.4" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.4" y="1086.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.06%)</title><rect x="421.4" y="1059.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="424.4" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="421.4" y="1043.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="424.4" y="1054.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="421.4" y="1027.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="424.4" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="421.4" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="424.4" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="421.4" y="995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="424.4" y="1006.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.06%)</title><rect x="421.4" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="424.4" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="421.4" y="963.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="424.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$493/953462516.apply (2 samples, 0.13%)</title><rect x="422.1" y="1763.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.1" y="1774.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (2 samples, 0.13%)</title><rect x="422.1" y="1747.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.1" y="1758.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (2 samples, 0.13%)</title><rect x="422.1" y="1731.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.1" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (2 samples, 0.13%)</title><rect x="422.1" y="1715.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.1" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onTimer (1 samples, 0.06%)</title><rect x="422.9" y="1699.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.9" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.requestShutdown (1 samples, 0.06%)</title><rect x="422.9" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.9" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.shutdownIfRequestedAndPossible (1 samples, 0.06%)</title><rect x="422.9" y="1667.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.9" y="1678.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (1 samples, 0.06%)</title><rect x="422.9" y="1651.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.9" y="1662.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (1 samples, 0.06%)</title><rect x="422.9" y="1635.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.9" y="1646.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (1 samples, 0.06%)</title><rect x="422.9" y="1619.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.9" y="1630.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.06%)</title><rect x="422.9" y="1603.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.9" y="1614.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.06%)</title><rect x="422.9" y="1587.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.9" y="1598.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.06%)</title><rect x="422.9" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.9" y="1582.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.06%)</title><rect x="422.9" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.9" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.06%)</title><rect x="422.9" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.9" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.06%)</title><rect x="422.9" y="1523.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.9" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.06%)</title><rect x="422.9" y="1507.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.9" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.06%)</title><rect x="422.9" y="1491.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.9" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.06%)</title><rect x="422.9" y="1475.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="422.9" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.9" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="422.9" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.9" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="422.9" y="1427.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.9" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="422.9" y="1411.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="422.9" y="1395.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="422.9" y="1379.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.06%)</title><rect x="422.9" y="1363.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.06%)</title><rect x="422.9" y="1347.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="422.9" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="422.9" y="1315.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.9" y="1326.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="422.9" y="1299.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="425.9" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="422.9" y="1283.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="422.9" y="1267.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="425.9" y="1278.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="422.9" y="1251.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.9" y="1262.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="422.9" y="1235.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="425.9" y="1246.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="422.9" y="1219.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="1230.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="422.9" y="1203.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.9" y="1214.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="422.9" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.9" y="1198.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="422.9" y="1171.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="425.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (38 samples, 2.39%)</title><rect x="423.6" y="1779.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.6" y="1790.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (37 samples, 2.33%)</title><rect x="424.4" y="1763.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.4" y="1774.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (1 samples, 0.06%)</title><rect x="425.1" y="1747.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.1" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (1 samples, 0.06%)</title><rect x="425.1" y="1731.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.1" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (1 samples, 0.06%)</title><rect x="425.1" y="1715.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.1" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (1 samples, 0.06%)</title><rect x="425.1" y="1699.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.1" y="1710.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (1 samples, 0.06%)</title><rect x="425.1" y="1683.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.1" y="1694.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (1 samples, 0.06%)</title><rect x="425.1" y="1667.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.1" y="1678.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (1 samples, 0.06%)</title><rect x="425.1" y="1651.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.1" y="1662.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (1 samples, 0.06%)</title><rect x="425.1" y="1635.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.1" y="1646.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (1 samples, 0.06%)</title><rect x="425.1" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.1" y="1630.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (1 samples, 0.06%)</title><rect x="425.1" y="1603.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.1" y="1614.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (1 samples, 0.06%)</title><rect x="425.1" y="1587.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.1" y="1598.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$685/1384792466.apply (1 samples, 0.06%)</title><rect x="425.1" y="1571.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.1" y="1582.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (1 samples, 0.06%)</title><rect x="425.1" y="1555.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.1" y="1566.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (1 samples, 0.06%)</title><rect x="425.1" y="1539.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.1" y="1550.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (1 samples, 0.06%)</title><rect x="425.1" y="1523.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.1" y="1534.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.06%)</title><rect x="425.1" y="1507.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.1" y="1518.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.06%)</title><rect x="425.1" y="1491.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.1" y="1502.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.06%)</title><rect x="425.1" y="1475.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.1" y="1486.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.06%)</title><rect x="425.1" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.06%)</title><rect x="425.1" y="1443.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.06%)</title><rect x="425.1" y="1427.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.1" y="1438.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (11 samples, 0.69%)</title><rect x="425.9" y="1747.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.9" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (1 samples, 0.06%)</title><rect x="425.9" y="1731.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.9" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.onPush (1 samples, 0.06%)</title><rect x="425.9" y="1715.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.9" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onDownstreamFinish (1 samples, 0.06%)</title><rect x="426.6" y="1731.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.6" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.06%)</title><rect x="426.6" y="1715.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.6" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (1 samples, 0.06%)</title><rect x="426.6" y="1699.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.6" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onDownstreamFinish (1 samples, 0.06%)</title><rect x="426.6" y="1683.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.6" y="1694.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.06%)</title><rect x="426.6" y="1667.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.6" y="1678.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (1 samples, 0.06%)</title><rect x="426.6" y="1651.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.6" y="1662.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.06%)</title><rect x="426.6" y="1635.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.6" y="1646.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (1 samples, 0.06%)</title><rect x="426.6" y="1619.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.6" y="1630.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.06%)</title><rect x="426.6" y="1603.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.6" y="1614.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (1 samples, 0.06%)</title><rect x="427.3" y="1731.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.3" y="1742.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (1 samples, 0.06%)</title><rect x="427.3" y="1715.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.3" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (1 samples, 0.06%)</title><rect x="427.3" y="1699.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.3" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$$anonfun$1.applyOrElse (1 samples, 0.06%)</title><rect x="427.3" y="1683.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.3" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (3 samples, 0.19%)</title><rect x="428.1" y="1731.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.1" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.log (3 samples, 0.19%)</title><rect x="428.1" y="1715.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.1" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log$ (3 samples, 0.19%)</title><rect x="428.1" y="1699.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.1" y="1710.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log (3 samples, 0.19%)</title><rect x="428.1" y="1683.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.1" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.makeLogger (3 samples, 0.19%)</title><rect x="428.1" y="1667.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.1" y="1678.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (3 samples, 0.19%)</title><rect x="428.1" y="1651.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.1" y="1662.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (3 samples, 0.19%)</title><rect x="428.1" y="1635.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.1" y="1646.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="428.1" y="1619.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="431.1" y="1630.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="428.1" y="1603.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="431.1" y="1614.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="428.1" y="1587.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="431.1" y="1598.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.06%)</title><rect x="428.1" y="1571.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="431.1" y="1582.0"></text>
</g>
<g>
<title>InlineCacheBuffer::create_transition_stub(CompiledIC*, void*, unsigned char*) (1 samples, 0.06%)</title><rect x="428.1" y="1555.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="431.1" y="1566.0"></text>
</g>
<g>
<title>StubQueue::request_committed(int) (1 samples, 0.06%)</title><rect x="428.1" y="1539.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="431.1" y="1550.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.06%)</title><rect x="428.1" y="1523.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="431.1" y="1534.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.13%)</title><rect x="428.8" y="1619.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.8" y="1630.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$6.genString (2 samples, 0.13%)</title><rect x="428.8" y="1603.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="428.8" y="1587.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="428.8" y="1571.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.8" y="1582.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.toString (2 samples, 0.13%)</title><rect x="428.8" y="1555.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.8" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.path (1 samples, 0.06%)</title><rect x="428.8" y="1539.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.8" y="1550.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="429.6" y="1539.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.6" y="1550.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="429.6" y="1523.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.6" y="1534.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="429.6" y="1507.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.6" y="1518.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="429.6" y="1491.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="432.6" y="1502.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="429.6" y="1475.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.6" y="1486.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.06%)</title><rect x="429.6" y="1459.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.6" y="1470.0"></text>
</g>
<g>
<title>consume_skb (1 samples, 0.06%)</title><rect x="429.6" y="1443.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.6" y="1454.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="429.6" y="1427.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.6" y="1438.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.06%)</title><rect x="429.6" y="1411.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.6" y="1422.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.06%)</title><rect x="429.6" y="1395.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.6" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (5 samples, 0.31%)</title><rect x="430.3" y="1731.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.3" y="1742.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.06%)</title><rect x="430.3" y="1715.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.3" y="1726.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="430.3" y="1699.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.3" y="1710.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.06%)</title><rect x="430.3" y="1683.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.3" y="1694.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.06%)</title><rect x="430.3" y="1667.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.3" y="1678.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.06%)</title><rect x="430.3" y="1651.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.3" y="1662.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.06%)</title><rect x="430.3" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.3" y="1646.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.06%)</title><rect x="430.3" y="1619.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.3" y="1630.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.06%)</title><rect x="430.3" y="1603.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.3" y="1614.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.06%)</title><rect x="430.3" y="1587.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.3" y="1598.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="430.3" y="1571.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.3" y="1582.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.06%)</title><rect x="430.3" y="1555.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.3" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.06%)</title><rect x="430.3" y="1539.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.3" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.06%)</title><rect x="430.3" y="1523.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="430.3" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.3" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.06%)</title><rect x="430.3" y="1491.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.3" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.06%)</title><rect x="430.3" y="1475.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.3" y="1486.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (3 samples, 0.19%)</title><rect x="431.1" y="1715.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.1" y="1726.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (2 samples, 0.13%)</title><rect x="431.8" y="1699.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.8" y="1710.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (2 samples, 0.13%)</title><rect x="431.8" y="1683.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.8" y="1694.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (2 samples, 0.13%)</title><rect x="431.8" y="1667.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.8" y="1678.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug$.apply (1 samples, 0.06%)</title><rect x="432.5" y="1651.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.5" y="1662.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="432.5" y="1635.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.5" y="1646.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug.&lt;init&gt; (1 samples, 0.06%)</title><rect x="432.5" y="1619.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.5" y="1630.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (1 samples, 0.06%)</title><rect x="432.5" y="1603.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1354083458.invokeStatic (1 samples, 0.06%)</title><rect x="432.5" y="1587.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.5" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="433.3" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="433.3" y="1699.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="433.3" y="1683.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="433.3" y="1667.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="433.3" y="1651.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="433.3" y="1635.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="433.3" y="1619.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.3" y="1630.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="433.3" y="1603.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.3" y="1614.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="433.3" y="1587.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.3" y="1598.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="433.3" y="1571.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.3" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="433.3" y="1555.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="433.3" y="1539.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.3" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="433.3" y="1523.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.3" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (1 samples, 0.06%)</title><rect x="434.0" y="1747.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.0" y="1758.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11$$anon$12.onPull (1 samples, 0.06%)</title><rect x="434.0" y="1731.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.0" y="1742.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.akka$stream$scaladsl$Broadcast$$anon$$tryPull (1 samples, 0.06%)</title><rect x="434.0" y="1715.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.0" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (22 samples, 1.38%)</title><rect x="434.8" y="1747.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.8" y="1758.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (6 samples, 0.38%)</title><rect x="434.8" y="1731.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.8" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (6 samples, 0.38%)</title><rect x="434.8" y="1715.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.8" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (6 samples, 0.38%)</title><rect x="434.8" y="1699.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.8" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (6 samples, 0.38%)</title><rect x="434.8" y="1683.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.8" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (6 samples, 0.38%)</title><rect x="434.8" y="1667.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.8" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (5 samples, 0.31%)</title><rect x="435.5" y="1651.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.5" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (5 samples, 0.31%)</title><rect x="435.5" y="1635.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.5" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (5 samples, 0.31%)</title><rect x="435.5" y="1619.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.5" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$592/1264104226.apply (5 samples, 0.31%)</title><rect x="435.5" y="1603.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.5" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (4 samples, 0.25%)</title><rect x="436.3" y="1587.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.3" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$591/325132358.apply (4 samples, 0.25%)</title><rect x="436.3" y="1571.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.3" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (4 samples, 0.25%)</title><rect x="436.3" y="1555.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.3" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (4 samples, 0.25%)</title><rect x="436.3" y="1539.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.3" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (4 samples, 0.25%)</title><rect x="436.3" y="1523.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.3" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (4 samples, 0.25%)</title><rect x="436.3" y="1507.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.3" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (4 samples, 0.25%)</title><rect x="436.3" y="1491.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.3" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (4 samples, 0.25%)</title><rect x="436.3" y="1475.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.3" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (4 samples, 0.25%)</title><rect x="436.3" y="1459.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.3" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (4 samples, 0.25%)</title><rect x="436.3" y="1443.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.3" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (4 samples, 0.25%)</title><rect x="436.3" y="1427.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.3" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (3 samples, 0.19%)</title><rect x="436.3" y="1411.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (2 samples, 0.13%)</title><rect x="436.3" y="1395.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (2 samples, 0.13%)</title><rect x="436.3" y="1379.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.3" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$425/1687009269.apply (2 samples, 0.13%)</title><rect x="436.3" y="1363.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.3" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.13%)</title><rect x="436.3" y="1347.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (1 samples, 0.06%)</title><rect x="436.3" y="1331.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="1342.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="436.3" y="1315.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.3" y="1326.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="436.3" y="1299.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.3" y="1310.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="436.3" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$595/1534661879.apply (1 samples, 0.06%)</title><rect x="436.3" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (1 samples, 0.06%)</title><rect x="436.3" y="1251.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (1 samples, 0.06%)</title><rect x="436.3" y="1235.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (1 samples, 0.06%)</title><rect x="436.3" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (1 samples, 0.06%)</title><rect x="436.3" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (1 samples, 0.06%)</title><rect x="436.3" y="1187.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (1 samples, 0.06%)</title><rect x="436.3" y="1171.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (1 samples, 0.06%)</title><rect x="436.3" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (1 samples, 0.06%)</title><rect x="436.3" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (1 samples, 0.06%)</title><rect x="436.3" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (1 samples, 0.06%)</title><rect x="436.3" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.createDateTime (1 samples, 0.06%)</title><rect x="436.3" y="1091.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/DateTime$.apply (1 samples, 0.06%)</title><rect x="436.3" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (1 samples, 0.06%)</title><rect x="437.0" y="1331.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.0" y="1342.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.06%)</title><rect x="437.0" y="1315.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.0" y="1326.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.06%)</title><rect x="437.0" y="1299.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.0" y="1310.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.06%)</title><rect x="437.0" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$593/2096688623.apply (1 samples, 0.06%)</title><rect x="437.0" y="1267.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (1 samples, 0.06%)</title><rect x="437.0" y="1251.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (1 samples, 0.06%)</title><rect x="437.0" y="1235.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (1 samples, 0.06%)</title><rect x="437.0" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (1 samples, 0.06%)</title><rect x="437.0" y="1203.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (1 samples, 0.06%)</title><rect x="437.0" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (1 samples, 0.06%)</title><rect x="437.0" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (1 samples, 0.06%)</title><rect x="437.0" y="1155.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (1 samples, 0.06%)</title><rect x="437.0" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (1 samples, 0.06%)</title><rect x="437.0" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (1 samples, 0.06%)</title><rect x="437.0" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteChar (1 samples, 0.06%)</title><rect x="437.7" y="1395.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.7" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.byteAt (1 samples, 0.06%)</title><rect x="437.7" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.7" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (1 samples, 0.06%)</title><rect x="438.5" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.5" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.finishEmptyResponse$1 (1 samples, 0.06%)</title><rect x="438.5" y="1395.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.5" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (1 samples, 0.06%)</title><rect x="438.5" y="1379.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.5" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (1 samples, 0.06%)</title><rect x="438.5" y="1363.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.5" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (1 samples, 0.06%)</title><rect x="438.5" y="1347.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.5" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (1 samples, 0.06%)</title><rect x="438.5" y="1331.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.continue (1 samples, 0.06%)</title><rect x="438.5" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue$ (1 samples, 0.06%)</title><rect x="438.5" y="1299.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.5" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue (1 samples, 0.06%)</title><rect x="438.5" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="438.5" y="1267.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="438.5" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$592/1264104226.get$Lambda (1 samples, 0.06%)</title><rect x="438.5" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$592/1264104226.&lt;init&gt; (1 samples, 0.06%)</title><rect x="438.5" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (16 samples, 1.01%)</title><rect x="439.2" y="1731.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.2" y="1742.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (15 samples, 0.94%)</title><rect x="440.0" y="1715.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.0" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (13 samples, 0.82%)</title><rect x="440.0" y="1699.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.0" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (13 samples, 0.82%)</title><rect x="440.0" y="1683.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.0" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (13 samples, 0.82%)</title><rect x="440.0" y="1667.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.0" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (13 samples, 0.82%)</title><rect x="440.0" y="1651.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.0" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$511/781373139.apply (12 samples, 0.76%)</title><rect x="440.7" y="1635.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.7" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (12 samples, 0.76%)</title><rect x="440.7" y="1619.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.7" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (2 samples, 0.13%)</title><rect x="440.7" y="1603.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.7" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (2 samples, 0.13%)</title><rect x="440.7" y="1587.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.7" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (2 samples, 0.13%)</title><rect x="440.7" y="1571.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.7" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (2 samples, 0.13%)</title><rect x="440.7" y="1555.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.7" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (2 samples, 0.13%)</title><rect x="440.7" y="1539.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.7" y="1550.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (1 samples, 0.06%)</title><rect x="440.7" y="1523.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.7" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (1 samples, 0.06%)</title><rect x="440.7" y="1507.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.7" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (1 samples, 0.06%)</title><rect x="440.7" y="1491.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.7" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (1 samples, 0.06%)</title><rect x="440.7" y="1475.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.7" y="1486.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.06%)</title><rect x="440.7" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.7" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="440.7" y="1443.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.7" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.06%)</title><rect x="440.7" y="1427.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.7" y="1438.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (1 samples, 0.06%)</title><rect x="440.7" y="1411.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.7" y="1422.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (1 samples, 0.06%)</title><rect x="440.7" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.7" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="440.7" y="1379.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="443.7" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="440.7" y="1363.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="443.7" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="440.7" y="1347.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="443.7" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="440.7" y="1331.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="443.7" y="1342.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::loop_predicate(int, int, CompLevel, Method*) (1 samples, 0.06%)</title><rect x="440.7" y="1315.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="443.7" y="1326.0"></text>
</g>
<g>
<title>VirtualSpace::reserved_size() const (1 samples, 0.06%)</title><rect x="440.7" y="1299.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="443.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.viaMat (1 samples, 0.06%)</title><rect x="441.5" y="1523.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="441.5" y="1507.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.5" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="441.5" y="1491.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.5" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (1 samples, 0.06%)</title><rect x="441.5" y="1475.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (10 samples, 0.63%)</title><rect x="442.2" y="1603.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.2" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (10 samples, 0.63%)</title><rect x="442.2" y="1587.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.2" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (10 samples, 0.63%)</title><rect x="442.2" y="1571.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.2" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (10 samples, 0.63%)</title><rect x="442.2" y="1555.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.2" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (10 samples, 0.63%)</title><rect x="442.2" y="1539.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="445.2" y="1550.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (5 samples, 0.31%)</title><rect x="442.9" y="1523.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.9" y="1534.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (5 samples, 0.31%)</title><rect x="442.9" y="1507.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.9" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (5 samples, 0.31%)</title><rect x="442.9" y="1491.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.9" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.31%)</title><rect x="442.9" y="1475.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.9" y="1486.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (4 samples, 0.25%)</title><rect x="442.9" y="1459.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.9" y="1470.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (2 samples, 0.13%)</title><rect x="442.9" y="1443.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.9" y="1454.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.&lt;init&gt; (2 samples, 0.13%)</title><rect x="442.9" y="1427.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.9" y="1438.0"></text>
</g>
<g>
<title>akka/stream/Attributes.get (2 samples, 0.13%)</title><rect x="442.9" y="1411.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.9" y="1422.0"></text>
</g>
<g>
<title>akka/stream/Attributes.get (2 samples, 0.13%)</title><rect x="442.9" y="1395.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (2 samples, 0.13%)</title><rect x="442.9" y="1379.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst$ (2 samples, 0.13%)</title><rect x="442.9" y="1363.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst (2 samples, 0.13%)</title><rect x="442.9" y="1347.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$anonfun$get$1.applyOrElse (1 samples, 0.06%)</title><rect x="442.9" y="1331.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="443.7" y="1331.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.13%)</title><rect x="444.4" y="1443.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.4" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (2 samples, 0.13%)</title><rect x="444.4" y="1427.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.4" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge.createLogic (1 samples, 0.06%)</title><rect x="444.4" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.4" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.&lt;init&gt; (1 samples, 0.06%)</title><rect x="444.4" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.4" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.createShallowCopy (1 samples, 0.06%)</title><rect x="444.4" y="1379.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.4" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.createShallowCopy (1 samples, 0.06%)</title><rect x="444.4" y="1363.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.4" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi.createLogic (1 samples, 0.06%)</title><rect x="445.2" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.2" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="445.2" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.2" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (1 samples, 0.06%)</title><rect x="445.9" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.9" y="1470.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (1 samples, 0.06%)</title><rect x="445.9" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.9" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.06%)</title><rect x="445.9" y="1427.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.9" y="1438.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (1 samples, 0.06%)</title><rect x="445.9" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.06%)</title><rect x="445.9" y="1395.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.9" y="1406.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (3 samples, 0.19%)</title><rect x="446.7" y="1523.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.7" y="1534.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (3 samples, 0.19%)</title><rect x="446.7" y="1507.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.7" y="1518.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="446.7" y="1491.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.7" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.06%)</title><rect x="446.7" y="1475.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.7" y="1486.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="446.7" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.7" y="1470.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="446.7" y="1443.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.7" y="1454.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="446.7" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.7" y="1438.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (1 samples, 0.06%)</title><rect x="446.7" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.7" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="446.7" y="1395.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.13%)</title><rect x="447.4" y="1491.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.4" y="1502.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.06%)</title><rect x="447.4" y="1475.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.4" y="1486.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.initialAttributes (1 samples, 0.06%)</title><rect x="448.1" y="1475.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.1" y="1486.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (1 samples, 0.06%)</title><rect x="448.1" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.1" y="1470.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.06%)</title><rect x="448.1" y="1443.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.1" y="1454.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.06%)</title><rect x="448.1" y="1427.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="448.1" y="1411.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="448.9" y="1523.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.9" y="1534.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getAsyncCallback (1 samples, 0.06%)</title><rect x="448.9" y="1507.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.9" y="1518.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (1 samples, 0.06%)</title><rect x="448.9" y="1491.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.9" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (1 samples, 0.06%)</title><rect x="449.6" y="1699.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="449.6" y="1683.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="449.6" y="1667.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.6" y="1678.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="449.6" y="1651.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="452.6" y="1662.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.find (1 samples, 0.06%)</title><rect x="450.4" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.4" y="1710.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find$ (1 samples, 0.06%)</title><rect x="450.4" y="1683.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="1694.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="450.4" y="1667.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="453.4" y="1678.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="450.4" y="1651.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="453.4" y="1662.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="450.4" y="1635.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="453.4" y="1646.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="450.4" y="1619.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="453.4" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="450.4" y="1603.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="453.4" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="450.4" y="1587.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="453.4" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="450.4" y="1571.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="453.4" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="450.4" y="1555.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="453.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="451.1" y="1747.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="451.1" y="1731.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.06%)</title><rect x="451.1" y="1715.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.1" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (16 samples, 1.01%)</title><rect x="451.9" y="1827.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.9" y="1838.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (10 samples, 0.63%)</title><rect x="451.9" y="1811.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.9" y="1822.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (10 samples, 0.63%)</title><rect x="451.9" y="1795.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.9" y="1806.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (10 samples, 0.63%)</title><rect x="451.9" y="1779.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1790.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (5 samples, 0.31%)</title><rect x="451.9" y="1763.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.9" y="1774.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$524/507912034.apply (5 samples, 0.31%)</title><rect x="451.9" y="1747.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.9" y="1758.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (5 samples, 0.31%)</title><rect x="451.9" y="1731.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.9" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (5 samples, 0.31%)</title><rect x="451.9" y="1715.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (3 samples, 0.19%)</title><rect x="451.9" y="1699.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.9" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (3 samples, 0.19%)</title><rect x="451.9" y="1683.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.9" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1085/857797801.apply (3 samples, 0.19%)</title><rect x="451.9" y="1667.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (3 samples, 0.19%)</title><rect x="451.9" y="1651.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.9" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (3 samples, 0.19%)</title><rect x="451.9" y="1635.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.9" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (3 samples, 0.19%)</title><rect x="451.9" y="1619.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.9" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (3 samples, 0.19%)</title><rect x="451.9" y="1603.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.9" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (3 samples, 0.19%)</title><rect x="451.9" y="1587.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (3 samples, 0.19%)</title><rect x="451.9" y="1571.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.9" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$507/2062559927.apply (1 samples, 0.06%)</title><rect x="451.9" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.9" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (1 samples, 0.06%)</title><rect x="451.9" y="1539.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.9" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$516/1201865229.apply (1 samples, 0.06%)</title><rect x="451.9" y="1523.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.9" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseDispatchable$1 (1 samples, 0.06%)</title><rect x="451.9" y="1507.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.9" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponseDispatch.onResponseDispatchable (1 samples, 0.06%)</title><rect x="451.9" y="1491.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.9" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="451.9" y="1475.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="454.9" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1459.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="454.9" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1443.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="454.9" y="1454.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="454.9" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="454.9" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="454.9" y="1406.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="451.9" y="1379.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="454.9" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$521/830580192.apply (1 samples, 0.06%)</title><rect x="452.6" y="1555.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.6" y="1566.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onConnectionFailed$1 (1 samples, 0.06%)</title><rect x="452.6" y="1539.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.6" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponse.onConnectionFailed (1 samples, 0.06%)</title><rect x="452.6" y="1523.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.6" y="1534.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.onConnectionFailed$ (1 samples, 0.06%)</title><rect x="452.6" y="1507.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.6" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.onConnectionFailed (1 samples, 0.06%)</title><rect x="452.6" y="1491.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.6" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$BusyState.failOngoingRequest (1 samples, 0.06%)</title><rect x="452.6" y="1475.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.6" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (1 samples, 0.06%)</title><rect x="452.6" y="1459.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (1 samples, 0.06%)</title><rect x="452.6" y="1443.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.6" y="1454.0"></text>
</g>
<g>
<title>akka/util/ByteString.size (1 samples, 0.06%)</title><rect x="452.6" y="1427.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$numConnectedSlots (1 samples, 0.06%)</title><rect x="453.3" y="1555.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.3" y="1566.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (1 samples, 0.06%)</title><rect x="453.3" y="1539.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.3" y="1550.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (1 samples, 0.06%)</title><rect x="453.3" y="1523.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.3" y="1534.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count (1 samples, 0.06%)</title><rect x="453.3" y="1507.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.3" y="1518.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFinish (1 samples, 0.06%)</title><rect x="454.1" y="1699.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.1" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (1 samples, 0.06%)</title><rect x="454.1" y="1683.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.1" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1106/875728189.apply (1 samples, 0.06%)</title><rect x="454.1" y="1667.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.1" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFinish$1$adapted (1 samples, 0.06%)</title><rect x="454.1" y="1651.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.1" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFinish$1 (1 samples, 0.06%)</title><rect x="454.1" y="1635.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.1" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionCompleted (1 samples, 0.06%)</title><rect x="454.1" y="1619.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.1" y="1630.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.handler (1 samples, 0.06%)</title><rect x="454.8" y="1699.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.8" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (5 samples, 0.31%)</title><rect x="455.6" y="1763.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.6" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (5 samples, 0.31%)</title><rect x="455.6" y="1747.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.6" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (5 samples, 0.31%)</title><rect x="455.6" y="1731.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.6" y="1742.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$2.onPush (2 samples, 0.13%)</title><rect x="455.6" y="1715.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.6" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.akka$stream$impl$fusing$FlattenMerge$$anon$$addSource (2 samples, 0.13%)</title><rect x="455.6" y="1699.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.6" y="1710.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.getSingleSource (1 samples, 0.06%)</title><rect x="455.6" y="1683.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.6" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.pendingBuilder (1 samples, 0.06%)</title><rect x="455.6" y="1667.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.6" y="1678.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.isAvailable (1 samples, 0.06%)</title><rect x="456.3" y="1683.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.3" y="1694.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (2 samples, 0.13%)</title><rect x="457.0" y="1715.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.0" y="1726.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$418/979913803.apply (2 samples, 0.13%)</title><rect x="457.0" y="1699.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.0" y="1710.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (2 samples, 0.13%)</title><rect x="457.0" y="1683.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.0" y="1694.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (2 samples, 0.13%)</title><rect x="457.0" y="1667.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.0" y="1678.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (2 samples, 0.13%)</title><rect x="457.0" y="1651.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.0" y="1662.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (1 samples, 0.06%)</title><rect x="457.0" y="1635.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.0" y="1646.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.$plus$plus (1 samples, 0.06%)</title><rect x="457.0" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.0" y="1630.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings$.apply (1 samples, 0.06%)</title><rect x="457.0" y="1603.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.0" y="1614.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings$.compare (1 samples, 0.06%)</title><rect x="457.0" y="1587.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.0" y="1598.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.06%)</title><rect x="457.0" y="1571.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.0" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (1 samples, 0.06%)</title><rect x="457.8" y="1635.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.8" y="1646.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="457.8" y="1619.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.8" y="1630.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.06%)</title><rect x="457.8" y="1603.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.8" y="1614.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.06%)</title><rect x="457.8" y="1587.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.8" y="1598.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="457.8" y="1571.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.8" y="1582.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.06%)</title><rect x="457.8" y="1555.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.8" y="1566.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpProtocol.render (1 samples, 0.06%)</title><rect x="457.8" y="1539.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.8" y="1550.0"></text>
</g>
<g>
<title>akka/http/impl/util/SingletonValueRenderable.render$ (1 samples, 0.06%)</title><rect x="457.8" y="1523.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.8" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="457.8" y="1507.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.8" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="457.8" y="1491.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="460.8" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="457.8" y="1475.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="460.8" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="457.8" y="1459.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="460.8" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="457.8" y="1443.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="460.8" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="457.8" y="1427.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="460.8" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) [clone .part.169] (1 samples, 0.06%)</title><rect x="457.8" y="1411.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.8" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (1 samples, 0.06%)</title><rect x="458.5" y="1715.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.5" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.06%)</title><rect x="458.5" y="1699.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.5" y="1710.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.06%)</title><rect x="458.5" y="1683.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.5" y="1694.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.portToConn (1 samples, 0.06%)</title><rect x="458.5" y="1667.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.5" y="1678.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (6 samples, 0.38%)</title><rect x="459.3" y="1811.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.3" y="1822.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (6 samples, 0.38%)</title><rect x="459.3" y="1795.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.3" y="1806.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (6 samples, 0.38%)</title><rect x="459.3" y="1779.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.3" y="1790.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (6 samples, 0.38%)</title><rect x="459.3" y="1763.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.3" y="1774.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (3 samples, 0.19%)</title><rect x="459.3" y="1747.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.3" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (1 samples, 0.06%)</title><rect x="459.3" y="1731.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.3" y="1742.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.second (1 samples, 0.06%)</title><rect x="459.3" y="1715.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.3" y="1726.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second$ (1 samples, 0.06%)</title><rect x="459.3" y="1699.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.3" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="459.3" y="1683.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="462.3" y="1694.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="459.3" y="1667.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="462.3" y="1678.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="459.3" y="1651.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="462.3" y="1662.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="459.3" y="1635.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.3" y="1646.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (2 samples, 0.13%)</title><rect x="460.0" y="1731.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.0" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.getTimerAsyncCallback (1 samples, 0.06%)</title><rect x="460.0" y="1715.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.0" y="1726.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getAsyncCallback (1 samples, 0.06%)</title><rect x="460.0" y="1699.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.0" y="1710.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (1 samples, 0.06%)</title><rect x="460.0" y="1683.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.0" y="1694.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback$Pending.pendingEvents (1 samples, 0.06%)</title><rect x="460.0" y="1667.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.0" y="1678.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="460.0" y="1651.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="463.0" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="460.0" y="1635.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.0" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="460.0" y="1619.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.0" y="1630.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="460.0" y="1603.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.0" y="1614.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="460.0" y="1587.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.0" y="1598.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="460.0" y="1571.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.0" y="1582.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="460.0" y="1555.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.0" y="1566.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="460.0" y="1539.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.0" y="1550.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="460.0" y="1523.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966670937.linkToTargetMethod (1 samples, 0.06%)</title><rect x="460.8" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.8" y="1726.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.preStart (1 samples, 0.06%)</title><rect x="461.5" y="1747.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.5" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (2 samples, 0.13%)</title><rect x="462.2" y="1747.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.2" y="1758.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.self (1 samples, 0.06%)</title><rect x="462.2" y="1731.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.2" y="1742.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (1 samples, 0.06%)</title><rect x="463.0" y="1731.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.0" y="1742.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (1 samples, 0.06%)</title><rect x="463.0" y="1715.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.0" y="1726.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="463.0" y="1699.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.0" y="1710.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="463.0" y="1683.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="1694.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$540/1068517224.apply$mcV$sp (1 samples, 0.06%)</title><rect x="463.0" y="1667.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.0" y="1678.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$watch$1 (1 samples, 0.06%)</title><rect x="463.0" y="1651.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.0" y="1662.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="463.0" y="1635.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="466.0" y="1646.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1619.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="466.0" y="1630.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1603.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="466.0" y="1614.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1587.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="466.0" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1571.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="466.0" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1555.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="466.0" y="1566.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1539.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="466.0" y="1550.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.06%)</title><rect x="463.0" y="1523.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="466.0" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="463.0" y="1507.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="466.0" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="463.0" y="1491.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="466.0" y="1502.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener.aroundReceive (4 samples, 0.25%)</title><rect x="463.7" y="1891.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.7" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (4 samples, 0.25%)</title><rect x="463.7" y="1875.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.7" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (4 samples, 0.25%)</title><rect x="463.7" y="1859.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.7" y="1870.0"></text>
</g>
<g>
<title>akka/actor/TimerSchedulerImpl.interceptTimerMsg (1 samples, 0.06%)</title><rect x="464.5" y="1843.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.5" y="1854.0"></text>
</g>
<g>
<title>akka/actor/TimerSchedulerImpl$InfluenceReceiveTimeoutTimerMsg.generation (1 samples, 0.06%)</title><rect x="464.5" y="1827.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.5" y="1838.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener.akka$actor$Timers$$_timers (1 samples, 0.06%)</title><rect x="465.2" y="1843.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.2" y="1854.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener.akka$actor$Timers$$super$aroundReceive (1 samples, 0.06%)</title><rect x="466.0" y="1843.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="1854.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.06%)</title><rect x="466.0" y="1827.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.0" y="1838.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.06%)</title><rect x="466.0" y="1811.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.0" y="1822.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/ActionListener$$anonfun$receive$1.applyOrElse (1 samples, 0.06%)</title><rect x="466.0" y="1795.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.0" y="1806.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.06%)</title><rect x="466.0" y="1779.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.0" y="1790.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.06%)</title><rect x="466.0" y="1763.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.0" y="1774.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.06%)</title><rect x="466.0" y="1747.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="1758.0"></text>
</g>
<g>
<title>__xstat64 (1 samples, 0.06%)</title><rect x="466.0" y="1731.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="469.0" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="466.0" y="1715.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.0" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="466.0" y="1699.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.0" y="1710.0"></text>
</g>
<g>
<title>sys_newstat (1 samples, 0.06%)</title><rect x="466.0" y="1683.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.0" y="1694.0"></text>
</g>
<g>
<title>SYSC_newstat (1 samples, 0.06%)</title><rect x="466.0" y="1667.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.0" y="1678.0"></text>
</g>
<g>
<title>vfs_statx (1 samples, 0.06%)</title><rect x="466.0" y="1651.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.0" y="1662.0"></text>
</g>
<g>
<title>user_path_at_empty (1 samples, 0.06%)</title><rect x="466.0" y="1635.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.0" y="1646.0"></text>
</g>
<g>
<title>filename_lookup (1 samples, 0.06%)</title><rect x="466.0" y="1619.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.0" y="1630.0"></text>
</g>
<g>
<title>path_lookupat (1 samples, 0.06%)</title><rect x="466.0" y="1603.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.0" y="1614.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.06%)</title><rect x="466.0" y="1587.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.0" y="1598.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="466.0" y="1571.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="469.0" y="1582.0"></text>
</g>
<g>
<title>__inode_permission (1 samples, 0.06%)</title><rect x="466.0" y="1555.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.0" y="1566.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="466.0" y="1539.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.0" y="1550.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (4 samples, 0.25%)</title><rect x="466.7" y="1891.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="1902.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (4 samples, 0.25%)</title><rect x="466.7" y="1875.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.7" y="1886.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (4 samples, 0.25%)</title><rect x="466.7" y="1859.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.7" y="1870.0"></text>
</g>
<g>
<title>akka/actor/TimerSchedulerImpl.interceptTimerMsg (1 samples, 0.06%)</title><rect x="466.7" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.7" y="1854.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (3 samples, 0.19%)</title><rect x="467.4" y="1843.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.4" y="1854.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.19%)</title><rect x="467.4" y="1827.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.4" y="1838.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.19%)</title><rect x="467.4" y="1811.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.4" y="1822.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (3 samples, 0.19%)</title><rect x="467.4" y="1795.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.4" y="1806.0"></text>
</g>
<g>
<title>akka/event/BusLogging.info (2 samples, 0.13%)</title><rect x="467.4" y="1779.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.4" y="1790.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info$ (2 samples, 0.13%)</title><rect x="467.4" y="1763.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.4" y="1774.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info (2 samples, 0.13%)</title><rect x="467.4" y="1747.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.4" y="1758.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isInfoEnabled (2 samples, 0.13%)</title><rect x="467.4" y="1731.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.4" y="1742.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isInfoEnabled (2 samples, 0.13%)</title><rect x="467.4" y="1715.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.4" y="1726.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="468.2" y="1699.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.2" y="1710.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (1 samples, 0.06%)</title><rect x="468.9" y="1779.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.9" y="1790.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (1 samples, 0.06%)</title><rect x="468.9" y="1763.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.9" y="1774.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="468.9" y="1747.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="471.9" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="468.9" y="1731.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="471.9" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="468.9" y="1715.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="471.9" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="468.9" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="471.9" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="468.9" y="1683.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="471.9" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="468.9" y="1667.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="471.9" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="468.9" y="1651.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="471.9" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="468.9" y="1635.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="471.9" y="1646.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (5 samples, 0.31%)</title><rect x="469.7" y="1923.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.7" y="1934.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (5 samples, 0.31%)</title><rect x="469.7" y="1907.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.7" y="1918.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (5 samples, 0.31%)</title><rect x="469.7" y="1891.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.7" y="1902.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (1 samples, 0.06%)</title><rect x="469.7" y="1875.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.7" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (1 samples, 0.06%)</title><rect x="469.7" y="1859.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.7" y="1870.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (1 samples, 0.06%)</title><rect x="469.7" y="1843.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.7" y="1854.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.06%)</title><rect x="469.7" y="1827.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.7" y="1838.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.06%)</title><rect x="469.7" y="1811.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.7" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$137/538237668.apply$mcV$sp (1 samples, 0.06%)</title><rect x="469.7" y="1795.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.7" y="1806.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (1 samples, 0.06%)</title><rect x="469.7" y="1779.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.7" y="1790.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.06%)</title><rect x="469.7" y="1763.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.7" y="1774.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.06%)</title><rect x="469.7" y="1747.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.7" y="1758.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.06%)</title><rect x="469.7" y="1731.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.7" y="1742.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="469.7" y="1715.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.7" y="1726.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.06%)</title><rect x="469.7" y="1699.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.7" y="1710.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.06%)</title><rect x="469.7" y="1683.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.7" y="1694.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.hashCode (1 samples, 0.06%)</title><rect x="469.7" y="1667.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.7" y="1678.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.hashCode (1 samples, 0.06%)</title><rect x="469.7" y="1651.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.7" y="1662.0"></text>
</g>
<g>
<title>akka/routing/MurmurHash$.startMagicA (1 samples, 0.06%)</title><rect x="469.7" y="1635.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.7" y="1646.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (4 samples, 0.25%)</title><rect x="470.4" y="1875.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.4" y="1886.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (4 samples, 0.25%)</title><rect x="470.4" y="1859.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.4" y="1870.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (4 samples, 0.25%)</title><rect x="470.4" y="1843.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.4" y="1854.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setReceiveTimeout (1 samples, 0.06%)</title><rect x="470.4" y="1827.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.4" y="1838.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout$ (1 samples, 0.06%)</title><rect x="470.4" y="1811.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.4" y="1822.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.setReceiveTimeout (1 samples, 0.06%)</title><rect x="470.4" y="1795.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.4" y="1806.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (3 samples, 0.19%)</title><rect x="471.2" y="1827.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.2" y="1838.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (2 samples, 0.13%)</title><rect x="471.2" y="1811.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.2" y="1822.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (2 samples, 0.13%)</title><rect x="471.2" y="1795.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.2" y="1806.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (1 samples, 0.06%)</title><rect x="471.2" y="1779.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (1 samples, 0.06%)</title><rect x="471.2" y="1763.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (1 samples, 0.06%)</title><rect x="471.2" y="1747.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (1 samples, 0.06%)</title><rect x="471.2" y="1731.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (1 samples, 0.06%)</title><rect x="471.9" y="1779.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.9" y="1790.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (1 samples, 0.06%)</title><rect x="471.9" y="1763.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (1 samples, 0.06%)</title><rect x="471.9" y="1747.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.9" y="1758.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (1 samples, 0.06%)</title><rect x="471.9" y="1731.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.9" y="1742.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (1 samples, 0.06%)</title><rect x="472.6" y="1811.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.6" y="1822.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (1 samples, 0.06%)</title><rect x="472.6" y="1795.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="1806.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (1 samples, 0.06%)</title><rect x="472.6" y="1779.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.6" y="1790.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (1 samples, 0.06%)</title><rect x="472.6" y="1763.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.6" y="1774.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (1 samples, 0.06%)</title><rect x="472.6" y="1747.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="1758.0"></text>
</g>
<g>
<title>scala/Option.foreach (1 samples, 0.06%)</title><rect x="472.6" y="1731.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.6" y="1742.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$681/46311930.apply (1 samples, 0.06%)</title><rect x="472.6" y="1715.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.6" y="1726.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (1 samples, 0.06%)</title><rect x="472.6" y="1699.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="1710.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (1 samples, 0.06%)</title><rect x="472.6" y="1683.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="472.6" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.6" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="472.6" y="1651.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.6" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="472.6" y="1635.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.6" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="472.6" y="1619.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="472.6" y="1603.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.6" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.delegate (1 samples, 0.06%)</title><rect x="472.6" y="1587.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="472.6" y="1571.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.altMetafactory (1 samples, 0.06%)</title><rect x="472.6" y="1555.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="472.6" y="1539.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.06%)</title><rect x="472.6" y="1523.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.06%)</title><rect x="472.6" y="1507.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.06%)</title><rect x="472.6" y="1491.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.6" y="1502.0"></text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.06%)</title><rect x="472.6" y="1475.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="475.6" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="472.6" y="1459.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="475.6" y="1470.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="472.6" y="1443.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="475.6" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="472.6" y="1427.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="475.6" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="472.6" y="1411.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="475.6" y="1422.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="472.6" y="1395.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="475.6" y="1406.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="472.6" y="1379.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="475.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox$default$2 (1 samples, 0.06%)</title><rect x="473.4" y="1939.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.setDone (1 samples, 0.06%)</title><rect x="474.1" y="1971.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_I (1 samples, 0.06%)</title><rect x="474.1" y="1955.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.getAndBitwiseOr (1 samples, 0.06%)</title><rect x="474.1" y="1939.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndBitwiseOrInt (1 samples, 0.06%)</title><rect x="474.1" y="1923.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.1" y="1934.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (1 samples, 0.06%)</title><rect x="474.1" y="1907.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.13%)</title><rect x="474.9" y="2003.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.06%)</title><rect x="474.9" y="1987.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.9" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="474.9" y="1971.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="474.9" y="1955.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.9" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="475.6" y="1987.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="475.6" y="1971.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.6" y="1982.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="475.6" y="1955.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="478.6" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="475.6" y="1939.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.6" y="1950.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="475.6" y="1923.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.6" y="1934.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="475.6" y="1907.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.6" y="1918.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="475.6" y="1891.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.6" y="1902.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="475.6" y="1875.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 1.01%)</title><rect x="476.4" y="2019.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.4" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 1.01%)</title><rect x="476.4" y="2003.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.4" y="2014.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.31%)</title><rect x="476.4" y="1987.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="479.4" y="1998.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="477.1" y="1971.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="480.1" y="1982.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="477.1" y="1955.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="480.1" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="477.8" y="1971.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="480.8" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="477.8" y="1955.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="480.8" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="477.8" y="1939.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="480.8" y="1950.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="477.8" y="1923.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.8" y="1934.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="477.8" y="1907.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.8" y="1918.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="477.8" y="1891.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="480.8" y="1902.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="477.8" y="1875.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.8" y="1886.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="478.6" y="1971.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="481.6" y="1982.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="479.3" y="1971.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.3" y="1982.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="479.3" y="1955.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.3" y="1966.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="479.3" y="1939.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.3" y="1950.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="479.3" y="1923.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.3" y="1934.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="479.3" y="1907.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.3" y="1918.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.06%)</title><rect x="479.3" y="1891.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.3" y="1902.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.06%)</title><rect x="479.3" y="1875.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="482.3" y="1886.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="479.3" y="1859.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="482.3" y="1870.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="479.3" y="1843.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.3" y="1854.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="479.3" y="1827.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.3" y="1838.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="479.3" y="1811.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.3" y="1822.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="479.3" y="1795.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="482.3" y="1806.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="479.3" y="1779.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.3" y="1790.0"></text>
</g>
<g>
<title>ip_route_input_noref (1 samples, 0.06%)</title><rect x="479.3" y="1763.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.3" y="1774.0"></text>
</g>
<g>
<title>ip_route_input_rcu (1 samples, 0.06%)</title><rect x="479.3" y="1747.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.69%)</title><rect x="480.1" y="1987.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="483.1" y="1998.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.63%)</title><rect x="480.1" y="1971.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="483.1" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.63%)</title><rect x="480.1" y="1955.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.1" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.63%)</title><rect x="480.1" y="1939.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.1" y="1950.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.57%)</title><rect x="480.8" y="1923.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.8" y="1934.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.57%)</title><rect x="480.8" y="1907.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="483.8" y="1918.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.50%)</title><rect x="481.6" y="1891.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.6" y="1902.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.44%)</title><rect x="481.6" y="1875.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.6" y="1886.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.44%)</title><rect x="481.6" y="1859.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.6" y="1870.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.44%)</title><rect x="481.6" y="1843.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.6" y="1854.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.44%)</title><rect x="481.6" y="1827.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.6" y="1838.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="486.0" y="1811.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="489.0" y="1822.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="486.0" y="1795.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.0" y="1806.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="486.0" y="1779.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="489.0" y="1790.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="486.0" y="1763.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="489.0" y="1774.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="486.0" y="1747.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="489.0" y="1758.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.06%)</title><rect x="486.0" y="1731.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="489.0" y="1742.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.06%)</title><rect x="486.0" y="1715.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.0" y="1726.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.06%)</title><rect x="486.0" y="1699.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.0" y="1710.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.06%)</title><rect x="486.0" y="1683.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.0" y="1694.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="486.0" y="1667.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.0" y="1678.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="486.0" y="1651.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="489.0" y="1662.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="486.0" y="1635.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.0" y="1646.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="486.0" y="1619.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.0" y="1630.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="486.0" y="1603.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="489.0" y="1614.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="486.0" y="1587.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.0" y="1598.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="486.0" y="1571.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.0" y="1582.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="486.0" y="1555.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.0" y="1566.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="486.0" y="1539.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="489.0" y="1550.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.06%)</title><rect x="486.0" y="1523.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.0" y="1534.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="486.0" y="1507.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="489.0" y="1518.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="486.0" y="1491.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="489.0" y="1502.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="486.0" y="1475.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.0" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="486.0" y="1459.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.0" y="1470.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="486.8" y="1875.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.8" y="1886.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="487.5" y="1971.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="490.5" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (4 samples, 0.25%)</title><rect x="488.2" y="2019.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.19%)</title><rect x="489.0" y="2003.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.0" y="2014.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.13%)</title><rect x="489.0" y="1987.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.0" y="1998.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="489.0" y="1971.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="492.0" y="1982.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="489.7" y="1971.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="492.7" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.06%)</title><rect x="490.5" y="1987.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="493.5" y="1998.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="491.2" y="2051.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="494.2" y="2062.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.44%)</title><rect x="492.0" y="2051.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="495.0" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.44%)</title><rect x="492.0" y="2035.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.0" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.38%)</title><rect x="492.0" y="2019.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.0" y="2030.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.31%)</title><rect x="492.7" y="2003.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="495.7" y="2014.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.31%)</title><rect x="492.7" y="1987.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.7" y="1998.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.31%)</title><rect x="492.7" y="1971.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.7" y="1982.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.25%)</title><rect x="493.4" y="1955.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.4" y="1966.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.25%)</title><rect x="493.4" y="1939.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.4" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.25%)</title><rect x="493.4" y="1923.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.4" y="1934.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="496.4" y="2019.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.4" y="2030.0"></text>
</g>
<g>
<title>start_thread (933 samples, 58.72%)</title><rect x="497.1" y="2051.0" width="692.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="500.1" y="2062.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (933 samples, 58.72%)</title><rect x="497.1" y="2035.0" width="692.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="500.1" y="2046.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (933 samples, 58.72%)</title><rect x="497.1" y="2019.0" width="692.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="500.1" y="2030.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (7 samples, 0.44%)</title><rect x="497.1" y="2003.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="500.1" y="2014.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (7 samples, 0.44%)</title><rect x="497.1" y="1987.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="500.1" y="1998.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (6 samples, 0.38%)</title><rect x="497.1" y="1971.0" width="4.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="500.1" y="1982.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (5 samples, 0.31%)</title><rect x="497.9" y="1955.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="500.9" y="1966.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (2 samples, 0.13%)</title><rect x="498.6" y="1939.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="501.6" y="1950.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.13%)</title><rect x="498.6" y="1923.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="501.6" y="1934.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.06%)</title><rect x="499.4" y="1907.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="502.4" y="1918.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (2 samples, 0.13%)</title><rect x="500.1" y="1939.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="503.1" y="1950.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.06%)</title><rect x="501.6" y="1971.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="504.6" y="1982.0"></text>
</g>
<g>
<title>GangWorker::loop() (28 samples, 1.76%)</title><rect x="502.3" y="2003.0" width="20.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="505.3" y="2014.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.31%)</title><rect x="502.3" y="1987.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="505.3" y="1998.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.31%)</title><rect x="502.3" y="1971.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="505.3" y="1982.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.31%)</title><rect x="502.3" y="1955.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="505.3" y="1966.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (1 samples, 0.06%)</title><rect x="502.3" y="1939.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="505.3" y="1950.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.06%)</title><rect x="502.3" y="1923.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="505.3" y="1934.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="502.3" y="1907.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="505.3" y="1918.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.06%)</title><rect x="502.3" y="1891.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="505.3" y="1902.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="502.3" y="1875.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="505.3" y="1886.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.25%)</title><rect x="503.1" y="1939.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.1" y="1950.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="503.8" y="1923.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.8" y="1934.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="504.6" y="1923.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="507.6" y="1934.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.06%)</title><rect x="504.6" y="1907.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="507.6" y="1918.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="505.3" y="1923.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="508.3" y="1934.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.06%)</title><rect x="505.3" y="1907.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="508.3" y="1918.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.06%)</title><rect x="505.3" y="1891.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="508.3" y="1902.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="506.1" y="1987.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="509.1" y="1998.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (2 samples, 0.13%)</title><rect x="506.8" y="1987.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="509.8" y="1998.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.13%)</title><rect x="506.8" y="1971.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="509.8" y="1982.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="507.5" y="1955.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="510.5" y="1966.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.38%)</title><rect x="508.3" y="1987.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="511.3" y="1998.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="508.3" y="1971.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="511.3" y="1982.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="508.3" y="1955.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="511.3" y="1966.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="508.3" y="1939.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="511.3" y="1950.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="508.3" y="1923.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="511.3" y="1934.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.06%)</title><rect x="508.3" y="1907.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="511.3" y="1918.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="508.3" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="511.3" y="1902.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.13%)</title><rect x="509.0" y="1971.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="512.0" y="1982.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.13%)</title><rect x="509.0" y="1955.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="512.0" y="1966.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.13%)</title><rect x="509.0" y="1939.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="512.0" y="1950.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.06%)</title><rect x="509.0" y="1923.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="512.0" y="1934.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.06%)</title><rect x="509.0" y="1907.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="512.0" y="1918.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.06%)</title><rect x="509.0" y="1891.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="512.0" y="1902.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.06%)</title><rect x="509.0" y="1875.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="512.0" y="1886.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.06%)</title><rect x="509.0" y="1859.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="512.0" y="1870.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.06%)</title><rect x="509.8" y="1923.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="512.8" y="1934.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.06%)</title><rect x="509.8" y="1907.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="512.8" y="1918.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.06%)</title><rect x="509.8" y="1891.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="512.8" y="1902.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="509.8" y="1875.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="512.8" y="1886.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.19%)</title><rect x="510.5" y="1971.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="513.5" y="1982.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.06%)</title><rect x="510.5" y="1955.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="513.5" y="1966.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.06%)</title><rect x="510.5" y="1939.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="513.5" y="1950.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.06%)</title><rect x="510.5" y="1923.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="513.5" y="1934.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="510.5" y="1907.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.5" y="1918.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="510.5" y="1891.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="513.5" y="1902.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="510.5" y="1875.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="513.5" y="1886.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.13%)</title><rect x="511.3" y="1955.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="514.3" y="1966.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)2&gt;::do_oop(oopDesc**) (2 samples, 0.13%)</title><rect x="511.3" y="1939.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="514.3" y="1950.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="512.0" y="1923.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="515.0" y="1934.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (3 samples, 0.19%)</title><rect x="512.7" y="1987.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="515.7" y="1998.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.06%)</title><rect x="512.7" y="1971.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="515.7" y="1982.0"></text>
</g>
<g>
<title>nmethod::do_unloading_oops(unsigned char*, BoolObjectClosure*) (1 samples, 0.06%)</title><rect x="512.7" y="1955.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="515.7" y="1966.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (2 samples, 0.13%)</title><rect x="513.5" y="1971.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="516.5" y="1982.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.13%)</title><rect x="515.0" y="1987.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="518.0" y="1998.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.13%)</title><rect x="515.0" y="1971.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="518.0" y="1982.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.13%)</title><rect x="515.0" y="1955.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="518.0" y="1966.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="515.7" y="1939.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="518.7" y="1950.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.233] (1 samples, 0.06%)</title><rect x="515.7" y="1923.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="518.7" y="1934.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (9 samples, 0.57%)</title><rect x="516.5" y="1987.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="519.5" y="1998.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (9 samples, 0.57%)</title><rect x="516.5" y="1971.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="519.5" y="1982.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="516.5" y="1955.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="519.5" y="1966.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (8 samples, 0.50%)</title><rect x="517.2" y="1955.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="520.2" y="1966.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.50%)</title><rect x="517.2" y="1939.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.2" y="1950.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.19%)</title><rect x="520.9" y="1923.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="523.9" y="1934.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.13%)</title><rect x="521.7" y="1907.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="524.7" y="1918.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.13%)</title><rect x="521.7" y="1891.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="524.7" y="1902.0"></text>
</g>
<g>
<title>JavaThread::run() (869 samples, 54.69%)</title><rect x="523.1" y="2003.0" width="645.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="526.1" y="2014.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (869 samples, 54.69%)</title><rect x="523.1" y="1987.0" width="645.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="526.1" y="1998.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (847 samples, 53.30%)</title><rect x="523.1" y="1971.0" width="629.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="526.1" y="1982.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (843 samples, 53.05%)</title><rect x="523.1" y="1955.0" width="626.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="526.1" y="1966.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (678 samples, 42.67%)</title><rect x="523.1" y="1939.0" width="503.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="526.1" y="1950.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.06%)</title><rect x="523.1" y="1923.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="526.1" y="1934.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (677 samples, 42.61%)</title><rect x="523.9" y="1923.0" width="502.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="526.9" y="1934.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, boo..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.13%)</title><rect x="523.9" y="1907.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="526.9" y="1918.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.13%)</title><rect x="523.9" y="1891.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="526.9" y="1902.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.13%)</title><rect x="523.9" y="1875.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="526.9" y="1886.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.13%)</title><rect x="523.9" y="1859.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="526.9" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.13%)</title><rect x="523.9" y="1843.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="526.9" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.13%)</title><rect x="523.9" y="1827.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="526.9" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::SuccIter::next() (1 samples, 0.06%)</title><rect x="523.9" y="1811.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="526.9" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="524.6" y="1811.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="527.6" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="524.6" y="1795.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="527.6" y="1806.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="524.6" y="1779.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="527.6" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="524.6" y="1763.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="527.6" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="524.6" y="1747.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="527.6" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="524.6" y="1731.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="527.6" y="1742.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.06%)</title><rect x="524.6" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="527.6" y="1726.0"></text>
</g>
<g>
<title>CallGenerator::for_osr(ciMethod*, int) (1 samples, 0.06%)</title><rect x="525.4" y="1907.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.4" y="1918.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="525.4" y="1891.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="528.4" y="1902.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="525.4" y="1875.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="528.4" y="1886.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="525.4" y="1859.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.4" y="1870.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="525.4" y="1843.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="528.4" y="1854.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="525.4" y="1827.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="528.4" y="1838.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="525.4" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="528.4" y="1822.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="525.4" y="1795.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="528.4" y="1806.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="525.4" y="1779.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="528.4" y="1790.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (373 samples, 23.47%)</title><rect x="526.1" y="1907.0" width="277.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="529.1" y="1918.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (19 samples, 1.20%)</title><rect x="526.1" y="1891.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="529.1" y="1902.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.13%)</title><rect x="526.1" y="1875.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="529.1" y="1886.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (7 samples, 0.44%)</title><rect x="527.6" y="1875.0" width="5.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.6" y="1886.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.13%)</title><rect x="531.3" y="1859.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="534.3" y="1870.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.13%)</title><rect x="531.3" y="1843.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="534.3" y="1854.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (10 samples, 0.63%)</title><rect x="532.8" y="1875.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="535.8" y="1886.0"></text>
</g>
<g>
<title>CodeBuffer::initialize(int, int) (1 samples, 0.06%)</title><rect x="532.8" y="1859.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="535.8" y="1870.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="532.8" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="535.8" y="1854.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (8 samples, 0.50%)</title><rect x="533.5" y="1859.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="536.5" y="1870.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (4 samples, 0.25%)</title><rect x="535.0" y="1843.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="538.0" y="1854.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, RegisterImpl*) (1 samples, 0.06%)</title><rect x="535.8" y="1827.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="538.8" y="1838.0"></text>
</g>
<g>
<title>loadBNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="536.5" y="1827.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="539.5" y="1838.0"></text>
</g>
<g>
<title>Address::make_raw(int, int, int, int, relocInfo::relocType) (1 samples, 0.06%)</title><rect x="536.5" y="1811.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="539.5" y="1822.0"></text>
</g>
<g>
<title>subI_rRegNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="537.2" y="1827.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="540.2" y="1838.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.06%)</title><rect x="538.0" y="1843.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="541.0" y="1854.0"></text>
</g>
<g>
<title>jmpConNode::short_branch_version() (1 samples, 0.06%)</title><rect x="538.7" y="1843.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="541.7" y="1854.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.06%)</title><rect x="539.5" y="1859.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="542.5" y="1870.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (10 samples, 0.63%)</title><rect x="540.2" y="1891.0" width="7.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="543.2" y="1902.0"></text>
</g>
<g>
<title>Block::code_alignment() const (1 samples, 0.06%)</title><rect x="541.0" y="1875.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="544.0" y="1886.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="541.0" y="1859.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.0" y="1870.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="541.0" y="1843.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.0" y="1854.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="541.0" y="1827.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.0" y="1838.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="541.0" y="1811.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.0" y="1822.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.06%)</title><rect x="541.7" y="1875.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="544.7" y="1886.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="541.7" y="1859.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="544.7" y="1870.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="541.7" y="1843.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="544.7" y="1854.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="542.4" y="1875.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="545.4" y="1886.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.06%)</title><rect x="543.2" y="1875.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="546.2" y="1886.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.06%)</title><rect x="543.9" y="1875.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="546.9" y="1886.0"></text>
</g>
<g>
<title>Assembler::movl(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="543.9" y="1859.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="546.9" y="1870.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (4 samples, 0.25%)</title><rect x="544.7" y="1875.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="547.7" y="1886.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.19%)</title><rect x="545.4" y="1859.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.4" y="1870.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.13%)</title><rect x="546.2" y="1843.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="549.2" y="1854.0"></text>
</g>
<g>
<title>Matcher::match() (24 samples, 1.51%)</title><rect x="547.6" y="1891.0" width="17.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="550.6" y="1902.0"></text>
</g>
<g>
<title>CastP2XNode::Opcode() const (1 samples, 0.06%)</title><rect x="547.6" y="1875.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="550.6" y="1886.0"></text>
</g>
<g>
<title>IfNode::Opcode() const (1 samples, 0.06%)</title><rect x="548.4" y="1875.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="551.4" y="1886.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (3 samples, 0.19%)</title><rect x="549.1" y="1875.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="552.1" y="1886.0"></text>
</g>
<g>
<title>ThreadLocalNode::Opcode() const (1 samples, 0.06%)</title><rect x="550.6" y="1859.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="553.6" y="1870.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (19 samples, 1.20%)</title><rect x="551.4" y="1875.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="554.4" y="1886.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (7 samples, 0.44%)</title><rect x="552.1" y="1859.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="555.1" y="1870.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.13%)</title><rect x="557.3" y="1859.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.3" y="1870.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.06%)</title><rect x="558.0" y="1843.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="561.0" y="1854.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="558.0" y="1827.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="561.0" y="1838.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="558.0" y="1811.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="561.0" y="1822.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (8 samples, 0.50%)</title><rect x="558.8" y="1859.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="561.8" y="1870.0"></text>
</g>
<g>
<title>HaltNode::match_edge(unsigned int) const (1 samples, 0.06%)</title><rect x="560.3" y="1843.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="563.3" y="1854.0"></text>
</g>
<g>
<title>LoadNode::match_edge(unsigned int) const (1 samples, 0.06%)</title><rect x="561.0" y="1843.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="564.0" y="1854.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.06%)</title><rect x="561.8" y="1843.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="564.8" y="1854.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="561.8" y="1827.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="564.8" y="1838.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.13%)</title><rect x="562.5" y="1843.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="565.5" y="1854.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.13%)</title><rect x="562.5" y="1827.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="565.5" y="1838.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="562.5" y="1811.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="565.5" y="1822.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="562.5" y="1795.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="565.5" y="1806.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="562.5" y="1779.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="565.5" y="1790.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="563.2" y="1811.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="566.2" y="1822.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="563.2" y="1795.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="566.2" y="1806.0"></text>
</g>
<g>
<title>addP_rReg_immNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.06%)</title><rect x="564.0" y="1843.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="567.0" y="1854.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="564.7" y="1859.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="567.7" y="1870.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="564.7" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="567.7" y="1854.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="564.7" y="1827.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="567.7" y="1838.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="564.7" y="1811.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="567.7" y="1822.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.13%)</title><rect x="565.5" y="1891.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="568.5" y="1902.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.13%)</title><rect x="565.5" y="1875.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="568.5" y="1886.0"></text>
</g>
<g>
<title>jmpDirNode::ideal_Opcode() const (1 samples, 0.06%)</title><rect x="566.2" y="1859.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="569.2" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (2 samples, 0.13%)</title><rect x="567.0" y="1891.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="570.0" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (2 samples, 0.13%)</title><rect x="567.0" y="1875.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="570.0" y="1886.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="567.7" y="1859.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="570.7" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (45 samples, 2.83%)</title><rect x="568.4" y="1891.0" width="33.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="571.4" y="1902.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.06%)</title><rect x="568.4" y="1875.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.4" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.06%)</title><rect x="569.2" y="1875.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="572.2" y="1886.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.06%)</title><rect x="569.2" y="1859.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="572.2" y="1870.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.06%)</title><rect x="569.2" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="572.2" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (43 samples, 2.71%)</title><rect x="569.9" y="1875.0" width="32.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="572.9" y="1886.0">Ph..</text>
</g>
<g>
<title>MachProjNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="569.9" y="1859.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="572.9" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.06%)</title><rect x="570.7" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="573.7" y="1870.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="570.7" y="1843.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.7" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (2 samples, 0.13%)</title><rect x="571.4" y="1859.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="574.4" y="1870.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="571.4" y="1843.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.4" y="1854.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="571.4" y="1827.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="574.4" y="1838.0"></text>
</g>
<g>
<title>immIOper::constant() const (1 samples, 0.06%)</title><rect x="572.2" y="1843.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="575.2" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (9 samples, 0.57%)</title><rect x="572.9" y="1859.0" width="6.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="575.9" y="1870.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.06%)</title><rect x="573.6" y="1843.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="576.6" y="1854.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.13%)</title><rect x="574.4" y="1843.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="577.4" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.06%)</title><rect x="575.9" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="578.9" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (2 samples, 0.13%)</title><rect x="576.6" y="1843.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.6" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.13%)</title><rect x="578.1" y="1843.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="581.1" y="1854.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="578.8" y="1827.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="581.8" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (8 samples, 0.50%)</title><rect x="579.6" y="1859.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="582.6" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="581.8" y="1843.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="584.8" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.06%)</title><rect x="582.5" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.5" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="583.3" y="1843.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="586.3" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.06%)</title><rect x="584.0" y="1843.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="587.0" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (1 samples, 0.06%)</title><rect x="584.8" y="1843.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="587.8" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="584.8" y="1827.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="587.8" y="1838.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (2 samples, 0.13%)</title><rect x="585.5" y="1859.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="588.5" y="1870.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.06%)</title><rect x="586.3" y="1843.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="589.3" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.38%)</title><rect x="587.0" y="1859.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="590.0" y="1870.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="588.5" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="591.5" y="1854.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="589.2" y="1843.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="592.2" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.13%)</title><rect x="590.0" y="1843.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="593.0" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.13%)</title><rect x="591.5" y="1859.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="594.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.19%)</title><rect x="592.9" y="1859.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="595.9" y="1870.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.13%)</title><rect x="593.7" y="1843.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="596.7" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (7 samples, 0.44%)</title><rect x="595.2" y="1859.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="598.2" y="1870.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="596.7" y="1843.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="599.7" y="1854.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="596.7" y="1827.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.7" y="1838.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="596.7" y="1811.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.7" y="1822.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="596.7" y="1795.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.7" y="1806.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="596.7" y="1779.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.7" y="1790.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.06%)</title><rect x="596.7" y="1763.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.7" y="1774.0"></text>
</g>
<g>
<title>call_rwsem_wake (1 samples, 0.06%)</title><rect x="596.7" y="1747.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="599.7" y="1758.0"></text>
</g>
<g>
<title>rwsem_wake (1 samples, 0.06%)</title><rect x="596.7" y="1731.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.7" y="1742.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="596.7" y="1715.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="599.7" y="1726.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="596.7" y="1699.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.7" y="1710.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="596.7" y="1683.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="599.7" y="1694.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="597.4" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="600.4" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="598.1" y="1843.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="601.1" y="1854.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (2 samples, 0.13%)</title><rect x="598.9" y="1843.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="601.9" y="1854.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.06%)</title><rect x="600.4" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="603.4" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="601.1" y="1859.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.1" y="1870.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.06%)</title><rect x="601.9" y="1891.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="604.9" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::insert_goto_at(unsigned int, unsigned int) (1 samples, 0.06%)</title><rect x="601.9" y="1875.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.9" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&amp;, Matcher&amp;, bool) (1 samples, 0.06%)</title><rect x="602.6" y="1891.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="605.6" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (268 samples, 16.87%)</title><rect x="603.3" y="1891.0" width="199.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="606.3" y="1902.0">PhaseChaitin::Register_All..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (4 samples, 0.25%)</title><rect x="604.1" y="1875.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="607.1" y="1886.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="606.3" y="1859.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.3" y="1870.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="606.3" y="1843.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.3" y="1854.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="606.3" y="1827.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.3" y="1838.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="606.3" y="1811.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="609.3" y="1822.0"></text>
</g>
<g>
<title>ConNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="607.1" y="1875.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="610.1" y="1886.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.06%)</title><rect x="607.8" y="1875.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="610.8" y="1886.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="608.5" y="1875.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="611.5" y="1886.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.06%)</title><rect x="609.3" y="1875.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="612.3" y="1886.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="610.0" y="1875.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="613.0" y="1886.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="610.8" y="1875.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="613.8" y="1886.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.13%)</title><rect x="611.5" y="1875.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="614.5" y="1886.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (6 samples, 0.38%)</title><rect x="613.0" y="1875.0" width="4.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="616.0" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 1.20%)</title><rect x="617.5" y="1875.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="620.5" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.13%)</title><rect x="621.9" y="1859.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="624.9" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="623.4" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="626.4" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (3 samples, 0.19%)</title><rect x="624.1" y="1859.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="627.1" y="1870.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.06%)</title><rect x="624.9" y="1843.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="627.9" y="1854.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="625.6" y="1843.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="628.6" y="1854.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (7 samples, 0.44%)</title><rect x="626.4" y="1859.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="629.4" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="628.6" y="1843.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.6" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.19%)</title><rect x="629.3" y="1843.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="632.3" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (16 samples, 1.01%)</title><rect x="631.6" y="1875.0" width="11.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="634.6" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.25%)</title><rect x="634.5" y="1859.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="637.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (8 samples, 0.50%)</title><rect x="637.5" y="1859.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="640.5" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.25%)</title><rect x="639.7" y="1843.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="642.7" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="642.7" y="1843.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="645.7" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (25 samples, 1.57%)</title><rect x="643.4" y="1875.0" width="18.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="646.4" y="1886.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="658.3" y="1859.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="661.3" y="1870.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="659.0" y="1859.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="662.0" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.19%)</title><rect x="659.8" y="1859.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="662.8" y="1870.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.06%)</title><rect x="659.8" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="662.8" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (2 samples, 0.13%)</title><rect x="660.5" y="1843.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="663.5" y="1854.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="661.3" y="1827.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="664.3" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (63 samples, 3.96%)</title><rect x="662.0" y="1875.0" width="46.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="665.0" y="1886.0">Phas..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.13%)</title><rect x="672.4" y="1859.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="675.4" y="1870.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.06%)</title><rect x="673.9" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="676.9" y="1870.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="674.6" y="1859.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="677.6" y="1870.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="675.4" y="1859.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="678.4" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.31%)</title><rect x="676.1" y="1859.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.1" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (24 samples, 1.51%)</title><rect x="679.8" y="1859.0" width="17.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="682.8" y="1870.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="689.5" y="1843.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="692.5" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.57%)</title><rect x="690.2" y="1843.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="693.2" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="696.9" y="1843.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="699.9" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (12 samples, 0.76%)</title><rect x="697.7" y="1859.0" width="8.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="700.7" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.13%)</title><rect x="698.4" y="1843.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="701.4" y="1854.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.25%)</title><rect x="699.9" y="1843.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="702.9" y="1854.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (5 samples, 0.31%)</title><rect x="702.9" y="1843.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.9" y="1854.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.13%)</title><rect x="706.6" y="1859.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="709.6" y="1870.0"></text>
</g>
<g>
<title>loadRangeNode::rule() const (1 samples, 0.06%)</title><rect x="708.0" y="1859.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="711.0" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (4 samples, 0.25%)</title><rect x="708.8" y="1875.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="711.8" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.19%)</title><rect x="709.5" y="1859.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="712.5" y="1870.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="710.3" y="1843.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.3" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="711.0" y="1843.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="714.0" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (20 samples, 1.26%)</title><rect x="711.8" y="1875.0" width="14.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.8" y="1886.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (2 samples, 0.13%)</title><rect x="715.5" y="1859.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="718.5" y="1870.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="716.2" y="1843.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="719.2" y="1854.0"></text>
</g>
<g>
<title>rRegNOper::type() const (1 samples, 0.06%)</title><rect x="716.2" y="1827.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.2" y="1838.0"></text>
</g>
<g>
<title>RegMask::Size() const (8 samples, 0.50%)</title><rect x="717.0" y="1859.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="720.0" y="1870.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="722.9" y="1859.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="725.9" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.13%)</title><rect x="723.6" y="1859.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="726.6" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="725.1" y="1859.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="728.1" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.06%)</title><rect x="725.9" y="1859.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="728.9" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (8 samples, 0.50%)</title><rect x="726.6" y="1875.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="729.6" y="1886.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="729.6" y="1859.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.6" y="1870.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="730.3" y="1859.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="733.3" y="1870.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="731.1" y="1859.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="734.1" y="1870.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="731.8" y="1859.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="734.8" y="1870.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="731.8" y="1843.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.8" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (5 samples, 0.31%)</title><rect x="732.6" y="1875.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="735.6" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (33 samples, 2.08%)</title><rect x="736.3" y="1875.0" width="24.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="739.3" y="1886.0">P..</text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="745.9" y="1859.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="748.9" y="1870.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.06%)</title><rect x="745.9" y="1843.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.9" y="1854.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (17 samples, 1.07%)</title><rect x="746.7" y="1859.0" width="12.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="749.7" y="1870.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.13%)</title><rect x="759.3" y="1859.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="762.3" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (3 samples, 0.19%)</title><rect x="760.8" y="1875.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="763.8" y="1886.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="762.3" y="1859.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="765.3" y="1870.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (12 samples, 0.76%)</title><rect x="763.0" y="1875.0" width="8.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="766.0" y="1886.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="763.0" y="1859.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="766.0" y="1870.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (3 samples, 0.19%)</title><rect x="763.7" y="1859.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="766.7" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.06%)</title><rect x="765.2" y="1843.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="768.2" y="1854.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (8 samples, 0.50%)</title><rect x="766.0" y="1859.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="769.0" y="1870.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.06%)</title><rect x="767.5" y="1843.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="770.5" y="1854.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="768.2" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.2" y="1854.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (2 samples, 0.13%)</title><rect x="768.9" y="1843.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="771.9" y="1854.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.06%)</title><rect x="770.4" y="1843.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="773.4" y="1854.0"></text>
</g>
<g>
<title>PhaseIFG::test_edge_sq(unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="771.2" y="1843.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="774.2" y="1854.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (8 samples, 0.50%)</title><rect x="771.9" y="1875.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="774.9" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.19%)</title><rect x="775.6" y="1859.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="778.6" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (7 samples, 0.44%)</title><rect x="777.9" y="1875.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="780.9" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.19%)</title><rect x="780.8" y="1859.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="783.8" y="1870.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (5 samples, 0.31%)</title><rect x="783.1" y="1875.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.1" y="1886.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.31%)</title><rect x="783.1" y="1859.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.1" y="1870.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (14 samples, 0.88%)</title><rect x="786.8" y="1875.0" width="10.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="789.8" y="1886.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.25%)</title><rect x="794.2" y="1859.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="797.2" y="1870.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.13%)</title><rect x="795.7" y="1843.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="798.7" y="1854.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="797.2" y="1875.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.2" y="1886.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (1 samples, 0.06%)</title><rect x="797.9" y="1875.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="800.9" y="1886.0"></text>
</g>
<g>
<title>ShouldNotReachHereNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="798.6" y="1875.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="801.6" y="1886.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="799.4" y="1875.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="802.4" y="1886.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="800.1" y="1875.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.1" y="1886.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="800.1" y="1859.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="803.1" y="1870.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="800.1" y="1843.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="803.1" y="1854.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="800.1" y="1827.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.1" y="1838.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="800.1" y="1811.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="803.1" y="1822.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="800.1" y="1795.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.1" y="1806.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.06%)</title><rect x="800.9" y="1875.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="803.9" y="1886.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.06%)</title><rect x="801.6" y="1875.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="804.6" y="1886.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.06%)</title><rect x="802.4" y="1891.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.4" y="1902.0"></text>
</g>
<g>
<title>Compile::Init(int) (1 samples, 0.06%)</title><rect x="803.1" y="1907.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.1" y="1918.0"></text>
</g>
<g>
<title>Compile::Optimize() (243 samples, 15.29%)</title><rect x="803.8" y="1907.0" width="180.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="806.8" y="1918.0">Compile::Optimize()</text>
</g>
<g>
<title>CallNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="803.8" y="1891.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="806.8" y="1902.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.31%)</title><rect x="804.6" y="1891.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="807.6" y="1902.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (5 samples, 0.31%)</title><rect x="804.6" y="1875.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="807.6" y="1886.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (1 samples, 0.06%)</title><rect x="806.1" y="1859.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="809.1" y="1870.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="806.1" y="1843.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="809.1" y="1854.0"></text>
</g>
<g>
<title>LoadBNode::Opcode() const (1 samples, 0.06%)</title><rect x="806.8" y="1859.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="809.8" y="1870.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.06%)</title><rect x="807.6" y="1859.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="810.6" y="1870.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (2 samples, 0.13%)</title><rect x="808.3" y="1891.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="811.3" y="1902.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.06%)</title><rect x="808.3" y="1875.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="811.3" y="1886.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.06%)</title><rect x="808.3" y="1859.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="811.3" y="1870.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.06%)</title><rect x="808.3" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="811.3" y="1854.0"></text>
</g>
<g>
<title>PhaseStringOpts::copy_string(GraphKit&amp;, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="808.3" y="1827.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.3" y="1838.0"></text>
</g>
<g>
<title>GraphKit::load_String_value(Node*, Node*) (1 samples, 0.06%)</title><rect x="808.3" y="1811.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.3" y="1822.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="808.3" y="1795.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="811.3" y="1806.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="808.3" y="1779.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.3" y="1790.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="809.0" y="1875.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="812.0" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="809.0" y="1859.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="812.0" y="1870.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="809.0" y="1843.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="812.0" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.06%)</title><rect x="809.0" y="1827.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.0" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1811.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="812.0" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1795.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="812.0" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1779.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.0" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1763.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="812.0" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1747.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.0" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1731.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="812.0" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1715.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="812.0" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1699.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="812.0" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1683.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="812.0" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1667.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.0" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1651.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.0" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1635.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="812.0" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1619.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="812.0" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1603.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="812.0" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="812.0" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1571.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="812.0" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1555.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="812.0" y="1566.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1539.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="812.0" y="1550.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1523.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.0" y="1534.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="809.0" y="1507.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="812.0" y="1518.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="809.0" y="1491.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="812.0" y="1502.0"></text>
</g>
<g>
<title>Compile::print_method(CompilerPhaseType, int) [clone .isra.340] (1 samples, 0.06%)</title><rect x="809.8" y="1891.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="812.8" y="1902.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.06%)</title><rect x="809.8" y="1875.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="812.8" y="1886.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.06%)</title><rect x="809.8" y="1859.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.8" y="1870.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (2 samples, 0.13%)</title><rect x="810.5" y="1891.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="813.5" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.19%)</title><rect x="812.0" y="1891.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.0" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.19%)</title><rect x="812.0" y="1875.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="815.0" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.171] (1 samples, 0.06%)</title><rect x="812.0" y="1859.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.0" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.06%)</title><rect x="812.0" y="1843.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="815.0" y="1854.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.06%)</title><rect x="812.0" y="1827.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="815.0" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::add_final_edges(Node*) (1 samples, 0.06%)</title><rect x="812.8" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="815.8" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::get_addp_base(Node*) (1 samples, 0.06%)</title><rect x="812.8" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="815.8" y="1854.0"></text>
</g>
<g>
<title>Node::uncast() const (1 samples, 0.06%)</title><rect x="812.8" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.8" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="813.5" y="1859.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="816.5" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="813.5" y="1843.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="816.5" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="813.5" y="1827.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="816.5" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.06%)</title><rect x="813.5" y="1811.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="816.5" y="1822.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="813.5" y="1795.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.5" y="1806.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="813.5" y="1779.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="816.5" y="1790.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="813.5" y="1763.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="816.5" y="1774.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="813.5" y="1747.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.5" y="1758.0"></text>
</g>
<g>
<title>LoadNode::bottom_type() const (1 samples, 0.06%)</title><rect x="814.2" y="1891.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="817.2" y="1902.0"></text>
</g>
<g>
<title>MemBarNode::bottom_type() const (1 samples, 0.06%)</title><rect x="815.0" y="1891.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="818.0" y="1902.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.31%)</title><rect x="815.7" y="1891.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="818.7" y="1902.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="818.0" y="1875.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="821.0" y="1886.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="818.7" y="1875.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="821.7" y="1886.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="818.7" y="1859.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="821.7" y="1870.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (2 samples, 0.13%)</title><rect x="819.4" y="1891.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="822.4" y="1902.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (2 samples, 0.13%)</title><rect x="819.4" y="1875.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="822.4" y="1886.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.06%)</title><rect x="820.2" y="1859.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="823.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (190 samples, 11.96%)</title><rect x="820.9" y="1891.0" width="141.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="823.9" y="1902.0">PhaseIdealLoop::bu..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="820.9" y="1875.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="823.9" y="1886.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="820.9" y="1859.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="823.9" y="1870.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.06%)</title><rect x="820.9" y="1843.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="823.9" y="1854.0"></text>
</g>
<g>
<title>Compile::should_optimize_expensive_nodes(PhaseIterGVN&amp;) (1 samples, 0.06%)</title><rect x="821.7" y="1875.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="824.7" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1875.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="825.4" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1859.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="825.4" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1843.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.4" y="1854.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1827.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="825.4" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1811.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="825.4" y="1822.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1795.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.4" y="1806.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1779.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.4" y="1790.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1763.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="825.4" y="1774.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1747.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="825.4" y="1758.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1731.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="825.4" y="1742.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="825.4" y="1726.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="822.4" y="1699.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="825.4" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (1 samples, 0.06%)</title><rect x="822.4" y="1683.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="825.4" y="1694.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.13%)</title><rect x="823.2" y="1875.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="826.2" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="823.2" y="1859.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="826.2" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="823.2" y="1843.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="826.2" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unswitching(IdealLoopTree*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="823.2" y="1827.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="826.2" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_slow_version_of_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.06%)</title><rect x="823.2" y="1811.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="826.2" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.06%)</title><rect x="823.2" y="1795.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="826.2" y="1806.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="823.9" y="1859.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="826.9" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="823.9" y="1843.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="826.9" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.06%)</title><rect x="823.9" y="1827.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.9" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.25%)</title><rect x="824.6" y="1875.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="827.6" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (3 samples, 0.19%)</title><rect x="824.6" y="1859.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="827.6" y="1870.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.13%)</title><rect x="824.6" y="1843.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="827.6" y="1854.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="824.6" y="1827.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="827.6" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="824.6" y="1811.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="827.6" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="824.6" y="1795.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="827.6" y="1806.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="824.6" y="1779.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="827.6" y="1790.0"></text>
</g>
<g>
<title>Invariance::is_invariant(Node*) (1 samples, 0.06%)</title><rect x="824.6" y="1763.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="827.6" y="1774.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="824.6" y="1747.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="827.6" y="1758.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="825.4" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="828.4" y="1838.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.06%)</title><rect x="825.4" y="1811.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="828.4" y="1822.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.06%)</title><rect x="826.1" y="1843.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="829.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.06%)</title><rect x="826.9" y="1859.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="829.9" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="826.9" y="1843.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="829.9" y="1854.0"></text>
</g>
<g>
<title>Invariance::is_invariant(Node*) (1 samples, 0.06%)</title><rect x="826.9" y="1827.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="829.9" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::is_invariant(Node*) const (1 samples, 0.06%)</title><rect x="826.9" y="1811.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="829.9" y="1822.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="827.6" y="1875.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="830.6" y="1886.0"></text>
</g>
<g>
<title>ParmNode::is_CFG() const (2 samples, 0.13%)</title><rect x="828.4" y="1875.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="831.4" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (7 samples, 0.44%)</title><rect x="829.8" y="1875.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="832.8" y="1886.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.13%)</title><rect x="833.5" y="1859.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="836.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (9 samples, 0.57%)</title><rect x="835.0" y="1875.0" width="6.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="838.0" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.13%)</title><rect x="840.2" y="1859.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="843.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (112 samples, 7.05%)</title><rect x="841.7" y="1875.0" width="83.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.7" y="1886.0">PhaseIdea..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (104 samples, 6.54%)</title><rect x="847.7" y="1859.0" width="77.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="850.7" y="1870.0">PhaseIdea..</text>
</g>
<g>
<title>CallStaticJavaNode::Opcode() const (1 samples, 0.06%)</title><rect x="851.4" y="1843.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="854.4" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="852.1" y="1843.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="855.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (97 samples, 6.10%)</title><rect x="852.9" y="1843.0" width="72.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="855.9" y="1854.0">PhaseIde..</text>
</g>
<g>
<title>CallStaticJavaNode::Opcode() const (1 samples, 0.06%)</title><rect x="854.3" y="1827.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="857.3" y="1838.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.06%)</title><rect x="855.1" y="1827.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="858.1" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.13%)</title><rect x="855.8" y="1827.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="858.8" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.13%)</title><rect x="857.3" y="1827.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="860.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.06%)</title><rect x="858.1" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="861.1" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (89 samples, 5.60%)</title><rect x="858.8" y="1827.0" width="66.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="861.8" y="1838.0">PhaseId..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="924.1" y="1811.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.1" y="1822.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="924.1" y="1795.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="927.1" y="1806.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="924.1" y="1779.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.1" y="1790.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.06%)</title><rect x="924.1" y="1763.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="927.1" y="1774.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (7 samples, 0.44%)</title><rect x="924.9" y="1875.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="927.9" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (2 samples, 0.13%)</title><rect x="927.9" y="1859.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="930.9" y="1870.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="929.3" y="1859.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="932.3" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_intrinsify_fill() (1 samples, 0.06%)</title><rect x="930.1" y="1875.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="933.1" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::intrinsify_fill(IdealLoopTree*) [clone .part.135] (1 samples, 0.06%)</title><rect x="930.1" y="1859.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="933.1" y="1870.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.128] (1 samples, 0.06%)</title><rect x="930.1" y="1843.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="933.1" y="1854.0"></text>
</g>
<g>
<title>CountedLoopNode::incr() const (1 samples, 0.06%)</title><rect x="930.1" y="1827.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="933.1" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (19 samples, 1.20%)</title><rect x="930.8" y="1875.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="933.8" y="1886.0"></text>
</g>
<g>
<title>OuterStripMinedLoopNode::Opcode() const (1 samples, 0.06%)</title><rect x="934.5" y="1859.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="937.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="935.3" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="938.3" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="935.3" y="1843.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="938.3" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::spinup(Node*, Node*, Node*, Node*, Node*, small_cache*) [clone .part.41] (1 samples, 0.06%)</title><rect x="935.3" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="938.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (4 samples, 0.25%)</title><rect x="936.0" y="1859.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="939.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.06%)</title><rect x="938.3" y="1843.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="941.3" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="938.3" y="1827.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="941.3" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (7 samples, 0.44%)</title><rect x="939.0" y="1859.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.0" y="1870.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="940.5" y="1843.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="943.5" y="1854.0"></text>
</g>
<g>
<title>CmpPNode::Opcode() const (1 samples, 0.06%)</title><rect x="940.5" y="1827.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="943.5" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.06%)</title><rect x="941.2" y="1843.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="944.2" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.06%)</title><rect x="942.0" y="1843.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="945.0" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="942.0" y="1827.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="945.0" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.13%)</title><rect x="942.7" y="1843.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="945.7" y="1854.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="942.7" y="1827.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="945.7" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="942.7" y="1811.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="945.7" y="1822.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="942.7" y="1795.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="945.7" y="1806.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="942.7" y="1779.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="945.7" y="1790.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="943.5" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="946.5" y="1838.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="943.5" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="946.5" y="1822.0"></text>
</g>
<g>
<title>PhiNode::Opcode() const (1 samples, 0.06%)</title><rect x="944.2" y="1859.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="947.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (18 samples, 1.13%)</title><rect x="944.9" y="1875.0" width="13.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.9" y="1886.0"></text>
</g>
<g>
<title>AddNode::hash() const (1 samples, 0.06%)</title><rect x="945.7" y="1859.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.7" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (16 samples, 1.01%)</title><rect x="946.4" y="1859.0" width="11.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.4" y="1870.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="947.9" y="1843.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.9" y="1854.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.19%)</title><rect x="948.7" y="1843.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="951.7" y="1854.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="948.7" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="951.7" y="1838.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.240] (1 samples, 0.06%)</title><rect x="948.7" y="1811.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="951.7" y="1822.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.13%)</title><rect x="949.4" y="1827.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="952.4" y="1838.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (2 samples, 0.13%)</title><rect x="949.4" y="1811.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.4" y="1822.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (2 samples, 0.13%)</title><rect x="949.4" y="1795.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.4" y="1806.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.06%)</title><rect x="950.1" y="1779.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.1" y="1790.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="950.9" y="1843.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="953.9" y="1854.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.06%)</title><rect x="950.9" y="1827.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="953.9" y="1838.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.06%)</title><rect x="950.9" y="1811.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="953.9" y="1822.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.13%)</title><rect x="951.6" y="1843.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="954.6" y="1854.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.06%)</title><rect x="952.4" y="1827.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="955.4" y="1838.0"></text>
</g>
<g>
<title>PhaseTransform::makecon(Type const*) (1 samples, 0.06%)</title><rect x="953.1" y="1843.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="956.1" y="1854.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="953.9" y="1843.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="956.9" y="1854.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="953.9" y="1827.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.9" y="1838.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="954.6" y="1843.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="957.6" y="1854.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="954.6" y="1827.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="957.6" y="1838.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.19%)</title><rect x="955.3" y="1843.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.3" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (3 samples, 0.19%)</title><rect x="955.3" y="1827.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="958.3" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.19%)</title><rect x="955.3" y="1811.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="958.3" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.19%)</title><rect x="955.3" y="1795.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.3" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1779.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="958.3" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1763.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="958.3" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1747.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="958.3" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1731.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="958.3" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1715.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.3" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1699.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="958.3" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1683.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.3" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.13%)</title><rect x="955.3" y="1667.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.3" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="955.3" y="1651.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.3" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="955.3" y="1635.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="958.3" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="955.3" y="1619.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="958.3" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="955.3" y="1603.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="958.3" y="1614.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="955.3" y="1587.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="958.3" y="1598.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="955.3" y="1571.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.3" y="1582.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="956.1" y="1651.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="959.1" y="1662.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="956.1" y="1635.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="959.1" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="956.8" y="1779.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="959.8" y="1790.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="956.8" y="1763.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="959.8" y="1774.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="957.6" y="1843.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="960.6" y="1854.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.06%)</title><rect x="957.6" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="960.6" y="1838.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.06%)</title><rect x="958.3" y="1875.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="961.3" y="1886.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="959.0" y="1875.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="962.0" y="1886.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.13%)</title><rect x="959.8" y="1875.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="962.8" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="961.3" y="1875.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.3" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (25 samples, 1.57%)</title><rect x="962.0" y="1891.0" width="18.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="965.0" y="1902.0"></text>
</g>
<g>
<title>MergeMemNode::hash() const (1 samples, 0.06%)</title><rect x="962.0" y="1875.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="965.0" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="962.8" y="1875.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="965.8" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (23 samples, 1.45%)</title><rect x="963.5" y="1875.0" width="17.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="966.5" y="1886.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="965.0" y="1859.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.0" y="1870.0"></text>
</g>
<g>
<title>CheckCastPPNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="965.7" y="1859.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="968.7" y="1870.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="965.7" y="1843.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.7" y="1854.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="965.7" y="1827.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="968.7" y="1838.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="965.7" y="1811.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="968.7" y="1822.0"></text>
</g>
<g>
<title>ConNode::hash() const (1 samples, 0.06%)</title><rect x="966.5" y="1859.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="969.5" y="1870.0"></text>
</g>
<g>
<title>ciObject::hash() (1 samples, 0.06%)</title><rect x="966.5" y="1843.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="969.5" y="1854.0"></text>
</g>
<g>
<title>IfNode::dominated_by(Node*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="967.2" y="1859.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="970.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="967.2" y="1843.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="970.2" y="1854.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="967.2" y="1827.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="970.2" y="1838.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="968.0" y="1859.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="971.0" y="1870.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="968.0" y="1843.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="971.0" y="1854.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="968.0" y="1827.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="971.0" y="1838.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="968.7" y="1859.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="971.7" y="1870.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="969.4" y="1859.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="972.4" y="1870.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="969.4" y="1843.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="972.4" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.13%)</title><rect x="970.2" y="1859.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="973.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="970.9" y="1843.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="973.9" y="1854.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="971.7" y="1859.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="974.7" y="1870.0"></text>
</g>
<g>
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (2 samples, 0.13%)</title><rect x="972.4" y="1859.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="975.4" y="1870.0"></text>
</g>
<g>
<title>IfNode::dominated_by(Node*, PhaseIterGVN*) (2 samples, 0.13%)</title><rect x="972.4" y="1843.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="975.4" y="1854.0"></text>
</g>
<g>
<title>MultiNode::proj_out(unsigned int) const (1 samples, 0.06%)</title><rect x="972.4" y="1827.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="975.4" y="1838.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="973.2" y="1827.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="976.2" y="1838.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="973.2" y="1811.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.2" y="1822.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.19%)</title><rect x="973.9" y="1859.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.9" y="1870.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="973.9" y="1843.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="976.9" y="1854.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.13%)</title><rect x="974.6" y="1843.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="977.6" y="1854.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (6 samples, 0.38%)</title><rect x="976.1" y="1859.0" width="4.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="979.1" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (6 samples, 0.38%)</title><rect x="976.1" y="1843.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.1" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.38%)</title><rect x="976.1" y="1827.0" width="4.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="979.1" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.38%)</title><rect x="976.1" y="1811.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="979.1" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1795.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="979.1" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1779.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="979.1" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1763.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.1" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1747.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="979.1" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1731.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.1" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.31%)</title><rect x="976.1" y="1715.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="979.1" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.25%)</title><rect x="976.1" y="1699.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="979.1" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.25%)</title><rect x="976.1" y="1683.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.1" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.25%)</title><rect x="976.1" y="1667.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.1" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.19%)</title><rect x="976.1" y="1651.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.1" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="976.1" y="1635.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.1" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="976.1" y="1619.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.1" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="976.1" y="1603.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.1" y="1614.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="976.1" y="1587.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.1" y="1598.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="976.1" y="1571.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.1" y="1582.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.13%)</title><rect x="976.9" y="1635.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.9" y="1646.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.13%)</title><rect x="976.9" y="1619.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="979.9" y="1630.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="978.4" y="1651.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.4" y="1662.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="978.4" y="1635.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="981.4" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="979.1" y="1699.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="982.1" y="1710.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="979.1" y="1683.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="982.1" y="1694.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="979.8" y="1795.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="982.8" y="1806.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="979.8" y="1779.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="982.8" y="1790.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (4 samples, 0.25%)</title><rect x="980.6" y="1891.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="983.6" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.25%)</title><rect x="980.6" y="1875.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="983.6" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.25%)</title><rect x="980.6" y="1859.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="983.6" y="1870.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="980.6" y="1843.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="983.6" y="1854.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="980.6" y="1827.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="983.6" y="1838.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="981.3" y="1843.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.3" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="981.3" y="1827.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.3" y="1838.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="982.1" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.1" y="1854.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="982.8" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.8" y="1854.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="982.8" y="1827.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="985.8" y="1838.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="983.6" y="1891.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="986.6" y="1902.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="983.6" y="1875.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="986.6" y="1886.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="983.6" y="1859.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="986.6" y="1870.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (2 samples, 0.13%)</title><rect x="984.3" y="1907.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="987.3" y="1918.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (2 samples, 0.13%)</title><rect x="984.3" y="1891.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.3" y="1902.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="984.3" y="1875.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="987.3" y="1886.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="984.3" y="1859.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="987.3" y="1870.0"></text>
</g>
<g>
<title>TypeAry::hash() const (1 samples, 0.06%)</title><rect x="985.0" y="1875.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="988.0" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (47 samples, 2.96%)</title><rect x="985.8" y="1907.0" width="34.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.8" y="1918.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (47 samples, 2.96%)</title><rect x="985.8" y="1891.0" width="34.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="988.8" y="1902.0">Pa..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="985.8" y="1875.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="988.8" y="1886.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (46 samples, 2.89%)</title><rect x="986.5" y="1875.0" width="34.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="989.5" y="1886.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (46 samples, 2.89%)</title><rect x="986.5" y="1859.0" width="34.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.5" y="1870.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (46 samples, 2.89%)</title><rect x="986.5" y="1843.0" width="34.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.5" y="1854.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (41 samples, 2.58%)</title><rect x="986.5" y="1827.0" width="30.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.5" y="1838.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.19%)</title><rect x="986.5" y="1811.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.5" y="1822.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.19%)</title><rect x="986.5" y="1795.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.5" y="1806.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.19%)</title><rect x="986.5" y="1779.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="989.5" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.19%)</title><rect x="986.5" y="1763.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.5" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.19%)</title><rect x="986.5" y="1747.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="989.5" y="1758.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.19%)</title><rect x="986.5" y="1731.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.5" y="1742.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.19%)</title><rect x="986.5" y="1715.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.5" y="1726.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="986.5" y="1699.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.5" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="987.3" y="1699.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.3" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="987.3" y="1683.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.3" y="1694.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="987.3" y="1667.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.3" y="1678.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="987.3" y="1651.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.3" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="987.3" y="1635.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="990.3" y="1646.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="987.3" y="1619.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.3" y="1630.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="987.3" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.3" y="1614.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="987.3" y="1587.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="990.3" y="1598.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="987.3" y="1571.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="990.3" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="987.3" y="1555.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.3" y="1566.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="987.3" y="1539.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="990.3" y="1550.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="987.3" y="1523.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="990.3" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="988.0" y="1699.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="991.0" y="1710.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="988.8" y="1811.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.8" y="1822.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (2 samples, 0.13%)</title><rect x="988.8" y="1795.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="991.8" y="1806.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.180] (2 samples, 0.13%)</title><rect x="988.8" y="1779.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="991.8" y="1790.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.13%)</title><rect x="988.8" y="1763.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="991.8" y="1774.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="989.5" y="1747.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="992.5" y="1758.0"></text>
</g>
<g>
<title>CatchProjNode::hash() const (1 samples, 0.06%)</title><rect x="989.5" y="1731.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="992.5" y="1742.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.06%)</title><rect x="989.5" y="1715.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="992.5" y="1726.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="990.2" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.2" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (30 samples, 1.89%)</title><rect x="991.0" y="1811.0" width="22.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.0" y="1822.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (30 samples, 1.89%)</title><rect x="991.0" y="1795.0" width="22.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.0" y="1806.0">P..</text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.06%)</title><rect x="991.0" y="1779.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.0" y="1790.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="991.0" y="1763.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="994.0" y="1774.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="991.0" y="1747.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.0" y="1758.0"></text>
</g>
<g>
<title>ReplacedNodes::clone() (1 samples, 0.06%)</title><rect x="991.0" y="1731.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.0" y="1742.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="991.7" y="1779.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="994.7" y="1790.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="991.7" y="1763.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="994.7" y="1774.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.06%)</title><rect x="991.7" y="1747.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="994.7" y="1758.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="991.7" y="1731.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="994.7" y="1742.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="991.7" y="1715.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="994.7" y="1726.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="991.7" y="1699.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.7" y="1710.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="991.7" y="1683.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.7" y="1694.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="991.7" y="1667.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.7" y="1678.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="991.7" y="1651.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="994.7" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (28 samples, 1.76%)</title><rect x="992.5" y="1779.0" width="20.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="995.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_block() (27 samples, 1.70%)</title><rect x="992.5" y="1763.0" width="20.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="995.5" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (27 samples, 1.70%)</title><rect x="992.5" y="1747.0" width="20.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.5" y="1758.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 1.51%)</title><rect x="992.5" y="1731.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.5" y="1742.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="992.5" y="1715.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.5" y="1726.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.06%)</title><rect x="992.5" y="1699.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.5" y="1710.0"></text>
</g>
<g>
<title>ciMemberName::get_vmtarget() const (1 samples, 0.06%)</title><rect x="992.5" y="1683.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="995.5" y="1694.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (2 samples, 0.13%)</title><rect x="993.2" y="1715.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="996.2" y="1726.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (2 samples, 0.13%)</title><rect x="993.2" y="1699.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.2" y="1710.0"></text>
</g>
<g>
<title>Type::hashcons() (2 samples, 0.13%)</title><rect x="993.2" y="1683.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="996.2" y="1694.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="993.2" y="1667.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="996.2" y="1678.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.06%)</title><rect x="993.2" y="1651.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="996.2" y="1662.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="994.0" y="1667.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="997.0" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.94%)</title><rect x="994.7" y="1715.0" width="11.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="997.7" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.94%)</title><rect x="994.7" y="1699.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.7" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.94%)</title><rect x="994.7" y="1683.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.7" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.94%)</title><rect x="994.7" y="1667.0" width="11.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="997.7" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.94%)</title><rect x="994.7" y="1651.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.7" y="1662.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.06%)</title><rect x="994.7" y="1635.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="997.7" y="1646.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.06%)</title><rect x="994.7" y="1619.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="997.7" y="1630.0"></text>
</g>
<g>
<title>GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*) (1 samples, 0.06%)</title><rect x="994.7" y="1603.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="997.7" y="1614.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="994.7" y="1587.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.7" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.82%)</title><rect x="995.4" y="1635.0" width="9.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.4" y="1646.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.13%)</title><rect x="995.4" y="1619.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="998.4" y="1630.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.13%)</title><rect x="995.4" y="1603.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.4" y="1614.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.13%)</title><rect x="995.4" y="1587.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="998.4" y="1598.0"></text>
</g>
<g>
<title>DirectiveSet::should_not_inline(ciMethod*) (1 samples, 0.06%)</title><rect x="995.4" y="1571.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.4" y="1582.0"></text>
</g>
<g>
<title>CompilerOracle::should_not_inline(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="995.4" y="1555.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="998.4" y="1566.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.06%)</title><rect x="996.2" y="1571.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="999.2" y="1582.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="996.2" y="1555.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="999.2" y="1566.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (1 samples, 0.06%)</title><rect x="996.2" y="1539.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="999.2" y="1550.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.06%)</title><rect x="996.2" y="1523.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="999.2" y="1534.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="996.9" y="1619.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="999.9" y="1630.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.06%)</title><rect x="996.9" y="1603.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="999.9" y="1614.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="996.9" y="1587.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="999.9" y="1598.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="996.9" y="1571.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="999.9" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.38%)</title><rect x="997.7" y="1619.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.7" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.38%)</title><rect x="997.7" y="1603.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1000.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.38%)</title><rect x="997.7" y="1587.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1000.7" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.38%)</title><rect x="997.7" y="1571.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.7" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.38%)</title><rect x="997.7" y="1555.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.38%)</title><rect x="997.7" y="1539.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.7" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.31%)</title><rect x="997.7" y="1523.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.31%)</title><rect x="997.7" y="1507.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1000.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.25%)</title><rect x="997.7" y="1491.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1000.7" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.25%)</title><rect x="997.7" y="1475.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1000.7" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.25%)</title><rect x="997.7" y="1459.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.25%)</title><rect x="997.7" y="1443.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.7" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.19%)</title><rect x="997.7" y="1427.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.19%)</title><rect x="997.7" y="1411.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1000.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.19%)</title><rect x="997.7" y="1395.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.19%)</title><rect x="997.7" y="1379.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1000.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.19%)</title><rect x="997.7" y="1363.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1000.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.19%)</title><rect x="997.7" y="1347.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.19%)</title><rect x="997.7" y="1331.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1000.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.19%)</title><rect x="997.7" y="1315.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1000.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.19%)</title><rect x="997.7" y="1299.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1000.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.19%)</title><rect x="997.7" y="1283.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1000.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.19%)</title><rect x="997.7" y="1267.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="997.7" y="1251.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1000.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="997.7" y="1235.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="997.7" y="1219.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1000.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="997.7" y="1203.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="997.7" y="1187.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="997.7" y="1171.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="997.7" y="1155.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="997.7" y="1139.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1000.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="997.7" y="1123.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="997.7" y="1107.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1000.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="997.7" y="1091.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="997.7" y="1075.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="997.7" y="1059.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1000.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="997.7" y="1043.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="997.7" y="1027.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1000.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="997.7" y="1011.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1000.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="997.7" y="995.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="997.7" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.7" y="990.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="997.7" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1000.7" y="974.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.06%)</title><rect x="997.7" y="947.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1000.7" y="958.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="997.7" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.4" y="979.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.06%)</title><rect x="998.4" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1001.4" y="974.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.06%)</title><rect x="998.4" y="947.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.4" y="958.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="998.4" y="931.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.4" y="942.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="998.4" y="915.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.4" y="926.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="998.4" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.4" y="910.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="998.4" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1001.4" y="894.0"></text>
</g>
<g>
<title>JVMState::clone_deep(Compile*) const (1 samples, 0.06%)</title><rect x="998.4" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="999.2" y="1251.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.2" y="1262.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="999.2" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1002.2" y="1246.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="999.2" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.2" y="1230.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="999.2" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.2" y="1214.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="999.2" y="1187.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.2" y="1198.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="999.2" y="1171.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.2" y="1182.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.06%)</title><rect x="999.2" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.2" y="1166.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*) (1 samples, 0.06%)</title><rect x="999.2" y="1139.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.2" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="999.9" y="1427.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.9" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="999.9" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="999.9" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="999.9" y="1379.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1002.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="999.9" y="1363.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="999.9" y="1347.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="999.9" y="1331.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.9" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="999.9" y="1315.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.9" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="999.9" y="1299.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="999.9" y="1283.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.9" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="999.9" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="999.9" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.9" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="999.9" y="1235.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.9" y="1246.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="999.9" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.9" y="1230.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="999.9" y="1203.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.9" y="1214.0"></text>
</g>
<g>
<title>ciKlass::is_subtype_of(ciKlass*) (1 samples, 0.06%)</title><rect x="999.9" y="1187.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.06%)</title><rect x="1000.6" y="1491.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.6" y="1502.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_parameters_for_speculation() (1 samples, 0.06%)</title><rect x="1000.6" y="1475.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.6" y="1486.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1001.4" y="1523.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.4" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1001.4" y="1507.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.4" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1001.4" y="1491.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1004.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1001.4" y="1475.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1004.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1001.4" y="1459.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1004.4" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1001.4" y="1443.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1004.4" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1001.4" y="1427.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1004.4" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1001.4" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1004.4" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1001.4" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1001.4" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1001.4" y="1363.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1004.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1001.4" y="1347.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1004.4" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1001.4" y="1331.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1004.4" y="1342.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1001.4" y="1315.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1004.4" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1001.4" y="1299.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1004.4" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1001.4" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1004.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1001.4" y="1267.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1004.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1001.4" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.4" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1001.4" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1004.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1001.4" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.4" y="1230.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1001.4" y="1203.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.4" y="1214.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1001.4" y="1187.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1004.4" y="1198.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1001.4" y="1171.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1004.4" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1001.4" y="1155.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1004.4" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1001.4" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1004.4" y="1150.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.19%)</title><rect x="1002.1" y="1619.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.1" y="1630.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1002.1" y="1603.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1005.1" y="1614.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1002.1" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1005.1" y="1598.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1002.1" y="1571.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1005.1" y="1582.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*) (1 samples, 0.06%)</title><rect x="1002.1" y="1555.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1005.1" y="1566.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.06%)</title><rect x="1002.1" y="1539.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.1" y="1550.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1002.1" y="1523.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1005.1" y="1534.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1002.1" y="1507.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.1" y="1518.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="1002.1" y="1491.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1005.1" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1002.9" y="1603.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.9" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1002.9" y="1587.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1005.9" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1002.9" y="1571.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1005.9" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1002.9" y="1555.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.9" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1002.9" y="1539.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1005.9" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1002.9" y="1523.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1005.9" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1002.9" y="1507.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.9" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1002.9" y="1491.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1005.9" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1002.9" y="1475.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1005.9" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1002.9" y="1459.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1005.9" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1002.9" y="1443.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1005.9" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1002.9" y="1427.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1005.9" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1002.9" y="1411.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1005.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1002.9" y="1395.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1002.9" y="1379.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1002.9" y="1363.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1002.9" y="1347.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1002.9" y="1331.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1005.9" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1002.9" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1005.9" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1002.9" y="1299.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1005.9" y="1310.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="1002.9" y="1283.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1005.9" y="1294.0"></text>
</g>
<g>
<title>ReplacedNodes::reset() (1 samples, 0.06%)</title><rect x="1002.9" y="1267.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.9" y="1278.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1003.6" y="1315.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.6" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1003.6" y="1299.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.6" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1003.6" y="1283.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1003.6" y="1267.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1003.6" y="1251.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1006.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1003.6" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1003.6" y="1219.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.6" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1003.6" y="1203.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.6" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1003.6" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1003.6" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1006.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1003.6" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1003.6" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1003.6" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.6" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1003.6" y="1107.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.6" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1003.6" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1003.6" y="1075.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1003.6" y="1059.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1003.6" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1003.6" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.6" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1003.6" y="1011.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.6" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1003.6" y="995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.6" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1003.6" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.6" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1003.6" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.6" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1003.6" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1006.6" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1003.6" y="931.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.6" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1003.6" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1006.6" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1003.6" y="899.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1006.6" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="1003.6" y="883.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.6" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1003.6" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.6" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1003.6" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.6" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1003.6" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.6" y="846.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1003.6" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.6" y="830.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1003.6" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1006.6" y="814.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1003.6" y="787.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1003.6" y="771.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.6" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="1003.6" y="755.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.6" y="766.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.06%)</title><rect x="1004.3" y="1619.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1007.3" y="1630.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="1004.3" y="1603.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1007.3" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1004.3" y="1587.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1007.3" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1004.3" y="1571.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1007.3" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1004.3" y="1555.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1007.3" y="1566.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1004.3" y="1539.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1007.3" y="1550.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="1004.3" y="1523.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1007.3" y="1534.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1004.3" y="1507.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1005.1" y="1635.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.1" y="1646.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1005.1" y="1619.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.1" y="1630.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1005.1" y="1603.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.1" y="1614.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1005.1" y="1587.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.1" y="1598.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1005.1" y="1571.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.1" y="1582.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1005.1" y="1555.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.1" y="1566.0"></text>
</g>
<g>
<title>IdealKit::load(Node*, Node*, Type const*, BasicType, int, bool) (1 samples, 0.06%)</title><rect x="1005.1" y="1539.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1008.1" y="1550.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1005.1" y="1523.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1008.1" y="1534.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1005.1" y="1507.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.1" y="1518.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.31%)</title><rect x="1005.8" y="1715.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1008.8" y="1726.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.06%)</title><rect x="1005.8" y="1699.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1008.8" y="1710.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.06%)</title><rect x="1005.8" y="1683.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.8" y="1694.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.06%)</title><rect x="1005.8" y="1667.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.8" y="1678.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1005.8" y="1651.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.8" y="1662.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1005.8" y="1635.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1008.8" y="1646.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="1005.8" y="1619.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.8" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1006.6" y="1699.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.6" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1006.6" y="1683.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.6" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1006.6" y="1667.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.6" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1006.6" y="1651.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.6" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1006.6" y="1635.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.6" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1006.6" y="1619.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.6" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1006.6" y="1603.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.6" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1006.6" y="1587.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1006.6" y="1571.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.6" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1006.6" y="1555.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.6" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1006.6" y="1539.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.6" y="1550.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1523.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.6" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1507.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.6" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1006.6" y="1491.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.6" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1006.6" y="1475.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1006.6" y="1459.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.6" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1006.6" y="1443.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.6" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1427.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1009.6" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1411.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.6" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1006.6" y="1395.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.6" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1006.6" y="1379.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.6" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1006.6" y="1363.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.6" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1006.6" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.6" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1331.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.6" y="1342.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1315.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.6" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1299.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.6" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1006.6" y="1283.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1006.6" y="1267.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1006.6" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1006.6" y="1235.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.6" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.6" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1006.6" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1006.6" y="1171.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1006.6" y="1155.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1009.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1006.6" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1123.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1009.6" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1006.6" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.6" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1006.6" y="1091.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1006.6" y="1075.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1006.6" y="1059.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1006.6" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1006.6" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.6" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1006.6" y="1011.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.6" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1006.6" y="995.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.6" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1006.6" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.6" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1006.6" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.6" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1006.6" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.6" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1006.6" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.6" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1006.6" y="915.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.6" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1006.6" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1007.3" y="1523.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1010.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1007.3" y="1507.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.3" y="1518.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1007.3" y="1491.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1010.3" y="1502.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1007.3" y="1475.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.3" y="1486.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1007.3" y="1459.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.3" y="1470.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1007.3" y="1443.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.3" y="1454.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1007.3" y="1427.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.3" y="1438.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1007.3" y="1411.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1010.3" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.06%)</title><rect x="1007.3" y="1395.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.3" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1379.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.3" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.3" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1347.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.3" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1331.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.3" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1315.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1010.3" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1299.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.3" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1283.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.3" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1267.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.3" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1251.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.3" y="1262.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.06%)</title><rect x="1007.3" y="1235.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.3" y="1246.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="1007.3" y="1219.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.3" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1008.1" y="1699.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.1" y="1710.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1008.1" y="1683.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.1" y="1694.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1008.1" y="1667.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1011.1" y="1678.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1008.1" y="1651.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.1" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1008.1" y="1635.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.1" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1008.1" y="1619.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.1" y="1630.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1008.1" y="1603.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.1" y="1614.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1008.1" y="1587.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.1" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1008.1" y="1571.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.1" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1008.1" y="1555.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.1" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1008.1" y="1539.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1011.1" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1008.1" y="1523.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1011.1" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1008.1" y="1507.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.1" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1008.1" y="1491.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.1" y="1502.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1008.1" y="1475.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.1" y="1486.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1008.1" y="1459.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.1" y="1470.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.06%)</title><rect x="1008.1" y="1443.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.1" y="1454.0"></text>
</g>
<g>
<title>ciMethod::interpreter_call_site_count(int) (1 samples, 0.06%)</title><rect x="1008.1" y="1427.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1011.1" y="1438.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1008.8" y="1571.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.8" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1008.8" y="1555.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1011.8" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1008.8" y="1539.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.8" y="1550.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1008.8" y="1523.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.8" y="1534.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1008.8" y="1507.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.8" y="1518.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1008.8" y="1491.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.8" y="1502.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.06%)</title><rect x="1009.5" y="1715.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.5" y="1726.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.06%)</title><rect x="1009.5" y="1699.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1012.5" y="1710.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.06%)</title><rect x="1009.5" y="1683.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1012.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.13%)</title><rect x="1010.3" y="1731.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1013.3" y="1742.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.13%)</title><rect x="1010.3" y="1715.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1013.3" y="1726.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1010.3" y="1699.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1013.3" y="1710.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1010.3" y="1683.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1013.3" y="1694.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1010.3" y="1667.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1013.3" y="1678.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="1010.3" y="1651.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1013.3" y="1662.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1010.3" y="1635.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1013.3" y="1646.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1011.0" y="1699.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.0" y="1710.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1011.0" y="1683.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1014.0" y="1694.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1011.0" y="1667.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1014.0" y="1678.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1011.0" y="1651.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1014.0" y="1662.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.06%)</title><rect x="1011.0" y="1635.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.0" y="1646.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.06%)</title><rect x="1011.0" y="1619.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.0" y="1630.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.06%)</title><rect x="1011.0" y="1603.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1014.0" y="1614.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.06%)</title><rect x="1011.0" y="1587.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1014.0" y="1598.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.06%)</title><rect x="1011.0" y="1571.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.0" y="1582.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.06%)</title><rect x="1011.0" y="1555.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1014.0" y="1566.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="1011.0" y="1539.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1014.0" y="1550.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1011.8" y="1731.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.8" y="1742.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1011.8" y="1715.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.8" y="1726.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1011.8" y="1699.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.8" y="1710.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*) (1 samples, 0.06%)</title><rect x="1011.8" y="1683.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.8" y="1694.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.06%)</title><rect x="1011.8" y="1667.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1014.8" y="1678.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1011.8" y="1651.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.8" y="1662.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1011.8" y="1635.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.8" y="1646.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.06%)</title><rect x="1012.5" y="1763.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1015.5" y="1774.0"></text>
</g>
<g>
<title>GraphKit::clean_stack(int) (1 samples, 0.06%)</title><rect x="1012.5" y="1747.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1015.5" y="1758.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.31%)</title><rect x="1013.3" y="1811.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1016.3" y="1822.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1013.3" y="1795.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1016.3" y="1806.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.06%)</title><rect x="1013.3" y="1779.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.3" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.25%)</title><rect x="1014.0" y="1795.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.0" y="1806.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.25%)</title><rect x="1014.0" y="1779.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="1790.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.25%)</title><rect x="1014.0" y="1763.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1017.0" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.25%)</title><rect x="1014.0" y="1747.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.0" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.25%)</title><rect x="1014.0" y="1731.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.0" y="1742.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.25%)</title><rect x="1014.0" y="1715.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.0" y="1726.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.25%)</title><rect x="1014.0" y="1699.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.0" y="1710.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.25%)</title><rect x="1014.0" y="1683.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.0" y="1694.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.25%)</title><rect x="1014.0" y="1667.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.0" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.25%)</title><rect x="1014.0" y="1651.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="1662.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.25%)</title><rect x="1014.0" y="1635.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.0" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.25%)</title><rect x="1014.0" y="1619.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.0" y="1630.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.19%)</title><rect x="1014.0" y="1603.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.0" y="1614.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.19%)</title><rect x="1014.0" y="1587.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="1598.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.19%)</title><rect x="1014.0" y="1571.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.0" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.19%)</title><rect x="1014.0" y="1555.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1017.0" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.19%)</title><rect x="1014.0" y="1539.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.0" y="1550.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.06%)</title><rect x="1014.0" y="1523.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.0" y="1534.0"></text>
</g>
<g>
<title>Parse::array_store_check() (1 samples, 0.06%)</title><rect x="1014.0" y="1507.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.0" y="1518.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.06%)</title><rect x="1014.0" y="1491.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1017.0" y="1502.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1014.0" y="1475.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.0" y="1486.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.06%)</title><rect x="1014.0" y="1459.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="1470.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.06%)</title><rect x="1014.0" y="1443.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.0" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1014.7" y="1523.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.7" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.13%)</title><rect x="1014.7" y="1507.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.7" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.13%)</title><rect x="1014.7" y="1491.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.7" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.13%)</title><rect x="1014.7" y="1475.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1017.7" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.13%)</title><rect x="1014.7" y="1459.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.7" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.13%)</title><rect x="1014.7" y="1443.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1017.7" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.13%)</title><rect x="1014.7" y="1427.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.7" y="1438.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1014.7" y="1411.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.7" y="1422.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1014.7" y="1395.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.7" y="1406.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1014.7" y="1379.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.7" y="1390.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="1014.7" y="1363.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.7" y="1374.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.5" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1018.5" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1015.5" y="1379.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1015.5" y="1363.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1015.5" y="1347.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1018.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1015.5" y="1331.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1015.5" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1018.5" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1018.5" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1015.5" y="1283.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1018.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1015.5" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1015.5" y="1251.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1018.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1015.5" y="1235.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1015.5" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.5" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.5" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1187.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.5" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1015.5" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1015.5" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1018.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1015.5" y="1139.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1015.5" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1018.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1015.5" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.5" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1015.5" y="1091.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1018.5" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1015.5" y="1075.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1015.5" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1018.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1015.5" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1015.5" y="1027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1018.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1015.5" y="1011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.5" y="1022.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1015.5" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.5" y="1006.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1015.5" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1018.5" y="990.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1015.5" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1018.5" y="974.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1015.5" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.5" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1016.2" y="1603.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1019.2" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1016.2" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1019.2" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1016.2" y="1571.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.2" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1016.2" y="1555.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1019.2" y="1566.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1016.2" y="1539.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1019.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.19%)</title><rect x="1017.0" y="1827.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.0" y="1838.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1017.0" y="1811.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.0" y="1822.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.06%)</title><rect x="1017.0" y="1795.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.0" y="1806.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1017.0" y="1779.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.0" y="1790.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1017.0" y="1763.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.0" y="1774.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1017.0" y="1747.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.0" y="1758.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.06%)</title><rect x="1017.0" y="1731.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.0" y="1742.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.06%)</title><rect x="1017.0" y="1715.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.0" y="1726.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.06%)</title><rect x="1017.0" y="1699.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.0" y="1710.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1017.7" y="1811.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.7" y="1822.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1017.7" y="1795.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.7" y="1806.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1017.7" y="1779.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1020.7" y="1790.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1017.7" y="1763.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1020.7" y="1774.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1017.7" y="1747.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1020.7" y="1758.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.06%)</title><rect x="1017.7" y="1731.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.7" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1018.5" y="1811.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1021.5" y="1822.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1018.5" y="1795.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1021.5" y="1806.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1018.5" y="1779.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1021.5" y="1790.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1018.5" y="1763.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1021.5" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1018.5" y="1747.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.5" y="1758.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.06%)</title><rect x="1018.5" y="1731.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1021.5" y="1742.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1019.2" y="1827.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1022.2" y="1838.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.06%)</title><rect x="1019.2" y="1811.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1022.2" y="1822.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.06%)</title><rect x="1019.2" y="1795.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1022.2" y="1806.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1019.9" y="1827.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1022.9" y="1838.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="1019.9" y="1811.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1022.9" y="1822.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="1019.9" y="1795.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.9" y="1806.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_input_for_runtime_call(SafePointNode*, Node*) (1 samples, 0.06%)</title><rect x="1019.9" y="1779.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.9" y="1790.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (5 samples, 0.31%)</title><rect x="1020.7" y="1907.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.7" y="1918.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.13%)</title><rect x="1020.7" y="1891.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.7" y="1902.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (3 samples, 0.19%)</title><rect x="1022.2" y="1891.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.2" y="1902.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1024.4" y="1907.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1027.4" y="1918.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="1024.4" y="1891.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1027.4" y="1902.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1025.1" y="1907.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1028.1" y="1918.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1025.1" y="1891.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1028.1" y="1902.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="1025.9" y="1907.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1028.9" y="1918.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.06%)</title><rect x="1025.9" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1028.9" y="1902.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="1025.9" y="1875.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1028.9" y="1886.0"></text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.06%)</title><rect x="1026.6" y="1939.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.6" y="1950.0"></text>
</g>
<g>
<title>PerfString::set_string(char const*) (1 samples, 0.06%)</title><rect x="1026.6" y="1923.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1029.6" y="1934.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (160 samples, 10.07%)</title><rect x="1027.4" y="1939.0" width="118.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1030.4" y="1950.0">Compiler::comp..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (160 samples, 10.07%)</title><rect x="1027.4" y="1923.0" width="118.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1030.4" y="1934.0">Compilation::C..</text>
</g>
<g>
<title>Compilation::compile_method() (160 samples, 10.07%)</title><rect x="1027.4" y="1907.0" width="118.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1030.4" y="1918.0">Compilation::c..</text>
</g>
<g>
<title>Compilation::compile_java_method() (144 samples, 9.06%)</title><rect x="1027.4" y="1891.0" width="106.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1030.4" y="1902.0">Compilation::..</text>
</g>
<g>
<title>AbstractICache::invalidate_range(unsigned char*, int) (1 samples, 0.06%)</title><rect x="1027.4" y="1875.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1030.4" y="1886.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (60 samples, 3.78%)</title><rect x="1028.1" y="1875.0" width="44.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1031.1" y="1886.0">Comp..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (9 samples, 0.57%)</title><rect x="1028.1" y="1859.0" width="6.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.1" y="1870.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.19%)</title><rect x="1028.9" y="1843.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.9" y="1854.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1827.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1031.9" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1811.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1031.9" y="1822.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1795.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.9" y="1806.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1779.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.9" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1763.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1031.9" y="1774.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1747.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.9" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.13%)</title><rect x="1028.9" y="1731.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1031.9" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1028.9" y="1715.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1031.9" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1028.9" y="1699.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1031.9" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1028.9" y="1683.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.9" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1028.9" y="1667.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1031.9" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1028.9" y="1651.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1031.9" y="1662.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1028.9" y="1635.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.9" y="1646.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1028.9" y="1619.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1031.9" y="1630.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1029.6" y="1715.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1032.6" y="1726.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1030.3" y="1827.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1033.3" y="1838.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1030.3" y="1811.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.3" y="1822.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1030.3" y="1795.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1033.3" y="1806.0"></text>
</g>
<g>
<title>ValueMap::ValueMap(ValueMap*) (2 samples, 0.13%)</title><rect x="1031.1" y="1843.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1034.1" y="1854.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.06%)</title><rect x="1032.6" y="1843.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.6" y="1854.0"></text>
</g>
<g>
<title>ValueMap::increase_table_size() (1 samples, 0.06%)</title><rect x="1032.6" y="1827.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1035.6" y="1838.0"></text>
</g>
<g>
<title>ValueMap::kill_memory() (1 samples, 0.06%)</title><rect x="1033.3" y="1843.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1036.3" y="1854.0"></text>
</g>
<g>
<title>ValueNumberingVisitor::do_LoadField(LoadField*) (1 samples, 0.06%)</title><rect x="1034.1" y="1843.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1037.1" y="1854.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (42 samples, 2.64%)</title><rect x="1034.8" y="1859.0" width="31.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1037.8" y="1870.0">IR..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (42 samples, 2.64%)</title><rect x="1034.8" y="1843.0" width="31.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.8" y="1854.0">IR..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (41 samples, 2.58%)</title><rect x="1034.8" y="1827.0" width="30.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.8" y="1838.0">Gr..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.06%)</title><rect x="1034.8" y="1811.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1037.8" y="1822.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.06%)</title><rect x="1034.8" y="1795.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1037.8" y="1806.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.06%)</title><rect x="1034.8" y="1779.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1037.8" y="1790.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.06%)</title><rect x="1034.8" y="1763.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1037.8" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (38 samples, 2.39%)</title><rect x="1035.5" y="1811.0" width="28.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1038.5" y="1822.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (37 samples, 2.33%)</title><rect x="1035.5" y="1795.0" width="27.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.5" y="1806.0">G..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (4 samples, 0.25%)</title><rect x="1035.5" y="1779.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1038.5" y="1790.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (4 samples, 0.25%)</title><rect x="1035.5" y="1763.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.5" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (4 samples, 0.25%)</title><rect x="1035.5" y="1747.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.5" y="1758.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (4 samples, 0.25%)</title><rect x="1035.5" y="1731.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.5" y="1742.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="1035.5" y="1715.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.5" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1036.3" y="1715.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1039.3" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1036.3" y="1699.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.3" y="1710.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.13%)</title><rect x="1037.0" y="1715.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1040.0" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1037.0" y="1699.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.0" y="1710.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1037.0" y="1683.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1040.0" y="1694.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1037.0" y="1667.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1040.0" y="1678.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1037.0" y="1651.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.0" y="1662.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1037.0" y="1635.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1040.0" y="1646.0"></text>
</g>
<g>
<title>ciInstanceKlass::loader() (1 samples, 0.06%)</title><rect x="1037.8" y="1699.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1040.8" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (32 samples, 2.01%)</title><rect x="1038.5" y="1779.0" width="23.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.5" y="1790.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (22 samples, 1.38%)</title><rect x="1038.5" y="1763.0" width="16.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.5" y="1774.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (22 samples, 1.38%)</title><rect x="1038.5" y="1747.0" width="16.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.5" y="1758.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (18 samples, 1.13%)</title><rect x="1038.5" y="1731.0" width="13.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.5" y="1742.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (17 samples, 1.07%)</title><rect x="1038.5" y="1715.0" width="12.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.5" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.13%)</title><rect x="1038.5" y="1699.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.5" y="1710.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.13%)</title><rect x="1038.5" y="1683.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.5" y="1694.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.13%)</title><rect x="1038.5" y="1667.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.5" y="1678.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.13%)</title><rect x="1038.5" y="1651.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.5" y="1662.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1038.5" y="1635.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.5" y="1646.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1039.3" y="1635.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.3" y="1646.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1039.3" y="1619.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1042.3" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (15 samples, 0.94%)</title><rect x="1040.0" y="1699.0" width="11.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1043.0" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (15 samples, 0.94%)</title><rect x="1040.0" y="1683.0" width="11.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1043.0" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (15 samples, 0.94%)</title><rect x="1040.0" y="1667.0" width="11.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1043.0" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (13 samples, 0.82%)</title><rect x="1040.0" y="1651.0" width="9.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1043.0" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (13 samples, 0.82%)</title><rect x="1040.0" y="1635.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1043.0" y="1646.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.06%)</title><rect x="1040.0" y="1619.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.0" y="1630.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1040.0" y="1603.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1043.0" y="1614.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="1040.0" y="1587.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1043.0" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1040.7" y="1619.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.7" y="1630.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1040.7" y="1603.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.7" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1040.7" y="1587.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.7" y="1598.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1040.7" y="1571.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.7" y="1582.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.06%)</title><rect x="1040.7" y="1555.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1043.7" y="1566.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1040.7" y="1539.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.7" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 0.57%)</title><rect x="1041.5" y="1619.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1044.5" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.38%)</title><rect x="1041.5" y="1603.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1044.5" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.38%)</title><rect x="1041.5" y="1587.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.5" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.38%)</title><rect x="1041.5" y="1571.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.5" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.38%)</title><rect x="1041.5" y="1555.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1044.5" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1041.5" y="1539.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.5" y="1550.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1041.5" y="1523.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1044.5" y="1534.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1041.5" y="1507.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.5" y="1518.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1041.5" y="1491.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.5" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1041.5" y="1475.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1044.5" y="1486.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1041.5" y="1459.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1044.5" y="1470.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1041.5" y="1443.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.5" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.25%)</title><rect x="1042.2" y="1539.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1045.2" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.13%)</title><rect x="1043.0" y="1523.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.0" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.13%)</title><rect x="1043.0" y="1507.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1046.0" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1043.0" y="1491.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.0" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1043.0" y="1475.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1046.0" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1043.0" y="1459.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1046.0" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.0" y="1443.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1046.0" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.0" y="1427.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.0" y="1438.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1043.0" y="1411.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.0" y="1422.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1043.0" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1046.0" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1043.0" y="1379.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.0" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.0" y="1363.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.0" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.0" y="1347.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.0" y="1358.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.06%)</title><rect x="1043.0" y="1331.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1046.0" y="1342.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1043.0" y="1315.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.0" y="1326.0"></text>
</g>
<g>
<title>VirtualCallData::cell_count() const (1 samples, 0.06%)</title><rect x="1043.0" y="1299.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1046.0" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1043.7" y="1491.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1046.7" y="1502.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1044.4" y="1523.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.4" y="1534.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1044.4" y="1507.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1047.4" y="1518.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="1044.4" y="1491.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1047.4" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.06%)</title><rect x="1045.2" y="1539.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.2" y="1550.0"></text>
</g>
<g>
<title>Invoke::Invoke(Bytecodes::Code, ValueType*, Instruction*, GrowableArray&lt;Instruction*&gt;*, int, ciMethod*, ValueStack*) (1 samples, 0.06%)</title><rect x="1045.9" y="1603.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.9" y="1614.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1045.9" y="1587.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.9" y="1598.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1045.9" y="1571.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.9" y="1582.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1045.9" y="1555.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1048.9" y="1566.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1046.7" y="1603.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1049.7" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1046.7" y="1587.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.7" y="1598.0"></text>
</g>
<g>
<title>ciSymbol::ciSymbol(Symbol*, vmSymbols::SID) (1 samples, 0.06%)</title><rect x="1046.7" y="1571.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1049.7" y="1582.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1555.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.7" y="1566.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1539.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1049.7" y="1550.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1523.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1049.7" y="1534.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1507.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.7" y="1518.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1491.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1049.7" y="1502.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1046.7" y="1475.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1049.7" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1047.4" y="1603.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.4" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1047.4" y="1587.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.4" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1047.4" y="1571.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.4" y="1582.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1047.4" y="1555.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.4" y="1566.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1047.4" y="1539.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.4" y="1550.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1047.4" y="1523.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.4" y="1534.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1047.4" y="1507.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.4" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1047.4" y="1491.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.4" y="1502.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.06%)</title><rect x="1047.4" y="1475.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.4" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (1 samples, 0.06%)</title><rect x="1048.2" y="1619.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.2" y="1630.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.06%)</title><rect x="1048.2" y="1603.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1051.2" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index(constantPoolHandle const&amp;, int, int, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1048.2" y="1587.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1051.2" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle const&amp;, int, int, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1048.2" y="1571.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.2" y="1582.0"></text>
</g>
<g>
<title>ValueStack::push(ValueType*, Instruction*) (1 samples, 0.06%)</title><rect x="1048.9" y="1619.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1051.9" y="1630.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::append(Instruction* const&amp;) (1 samples, 0.06%)</title><rect x="1048.9" y="1603.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1051.9" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1049.6" y="1651.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.6" y="1662.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.06%)</title><rect x="1049.6" y="1635.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1052.6" y="1646.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.06%)</title><rect x="1049.6" y="1619.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1052.6" y="1630.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.06%)</title><rect x="1049.6" y="1603.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1052.6" y="1614.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.06%)</title><rect x="1049.6" y="1587.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1052.6" y="1598.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.06%)</title><rect x="1049.6" y="1571.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.6" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_not_inline(ciEnv*, ciMethod*) (1 samples, 0.06%)</title><rect x="1050.4" y="1651.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1053.4" y="1662.0"></text>
</g>
<g>
<title>Method::highest_osr_comp_level() const (1 samples, 0.06%)</title><rect x="1050.4" y="1635.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.4" y="1646.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1051.1" y="1715.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.1" y="1726.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1051.1" y="1699.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1054.1" y="1710.0"></text>
</g>
<g>
<title>GraphBuilder::null_check(Instruction*) (1 samples, 0.06%)</title><rect x="1051.9" y="1731.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.9" y="1742.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1051.9" y="1715.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1054.9" y="1726.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1052.6" y="1731.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.6" y="1742.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (1 samples, 0.06%)</title><rect x="1052.6" y="1715.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1055.6" y="1726.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="1053.4" y="1731.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.4" y="1742.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1054.1" y="1731.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.1" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1054.8" y="1763.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.8" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1054.8" y="1747.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.8" y="1758.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1054.8" y="1731.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.8" y="1742.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (8 samples, 0.50%)</title><rect x="1055.6" y="1763.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.6" y="1774.0"></text>
</g>
<g>
<title>ConstantPool::has_method_type_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1055.6" y="1747.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1058.6" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.44%)</title><rect x="1056.3" y="1747.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1059.3" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.44%)</title><rect x="1056.3" y="1731.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1059.3" y="1742.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.06%)</title><rect x="1056.3" y="1715.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.3" y="1726.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1057.1" y="1715.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.1" y="1726.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1057.1" y="1699.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.1" y="1710.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="1057.1" y="1683.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1060.1" y="1694.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (5 samples, 0.31%)</title><rect x="1057.8" y="1715.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1060.8" y="1726.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.19%)</title><rect x="1059.3" y="1699.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1062.3" y="1710.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.19%)</title><rect x="1059.3" y="1683.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.3" y="1694.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (3 samples, 0.19%)</title><rect x="1059.3" y="1667.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.3" y="1678.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="1060.0" y="1651.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.0" y="1662.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1060.0" y="1635.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.0" y="1646.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1060.0" y="1619.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.0" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1060.8" y="1651.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.8" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1060.8" y="1635.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.8" y="1646.0"></text>
</g>
<g>
<title>Klass::array_klass_or_null(int) (1 samples, 0.06%)</title><rect x="1060.8" y="1619.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.8" y="1630.0"></text>
</g>
<g>
<title>TypeArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.06%)</title><rect x="1060.8" y="1603.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1063.8" y="1614.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.06%)</title><rect x="1061.5" y="1763.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.5" y="1774.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.06%)</title><rect x="1061.5" y="1747.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.5" y="1758.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.06%)</title><rect x="1061.5" y="1731.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.5" y="1742.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.06%)</title><rect x="1061.5" y="1715.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.5" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1061.5" y="1699.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.5" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.06%)</title><rect x="1061.5" y="1683.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.5" y="1694.0"></text>
</g>
<g>
<title>GraphBuilder::new_instance(int) (1 samples, 0.06%)</title><rect x="1062.3" y="1779.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1065.3" y="1790.0"></text>
</g>
<g>
<title>_init (1 samples, 0.06%)</title><rect x="1062.3" y="1763.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1065.3" y="1774.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1063.0" y="1795.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.0" y="1806.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1063.0" y="1779.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1066.0" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::state_at_entry() (1 samples, 0.06%)</title><rect x="1063.8" y="1811.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1066.8" y="1822.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1064.5" y="1811.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1067.5" y="1822.0"></text>
</g>
<g>
<title>XHandlers::XHandlers(ciMethod*) (1 samples, 0.06%)</title><rect x="1065.2" y="1827.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1068.2" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1065.2" y="1811.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1068.2" y="1822.0"></text>
</g>
<g>
<title>IR::compute_code() (2 samples, 0.13%)</title><rect x="1066.0" y="1859.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1069.0" y="1870.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (2 samples, 0.13%)</title><rect x="1066.0" y="1843.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1069.0" y="1854.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_dominator_impl(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1066.0" y="1827.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1069.0" y="1838.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1066.7" y="1827.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1069.7" y="1838.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::count_edges(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1066.7" y="1811.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.7" y="1822.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (3 samples, 0.19%)</title><rect x="1067.5" y="1859.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1070.5" y="1870.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (3 samples, 0.19%)</title><rect x="1067.5" y="1843.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1070.5" y="1854.0"></text>
</g>
<g>
<title>StateSplit::input_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1067.5" y="1827.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1070.5" y="1838.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1067.5" y="1811.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1070.5" y="1822.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1067.5" y="1795.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.5" y="1806.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1067.5" y="1779.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.5" y="1790.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.13%)</title><rect x="1068.2" y="1827.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1071.2" y="1838.0"></text>
</g>
<g>
<title>Invoke::input_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1069.0" y="1811.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1072.0" y="1822.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (4 samples, 0.25%)</title><rect x="1069.7" y="1859.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1072.7" y="1870.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (4 samples, 0.25%)</title><rect x="1069.7" y="1843.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1072.7" y="1854.0"></text>
</g>
<g>
<title>Base::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1069.7" y="1827.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1072.7" y="1838.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (2 samples, 0.13%)</title><rect x="1070.4" y="1827.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1073.4" y="1838.0"></text>
</g>
<g>
<title>NullCheckEliminator::visit(Instruction**) (1 samples, 0.06%)</title><rect x="1071.2" y="1811.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.2" y="1822.0"></text>
</g>
<g>
<title>NullCheckVisitor::do_LoadIndexed(LoadIndexed*) (1 samples, 0.06%)</title><rect x="1071.9" y="1827.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.9" y="1838.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (30 samples, 1.89%)</title><rect x="1072.7" y="1875.0" width="22.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.7" y="1886.0">C..</text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1072.7" y="1859.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1075.7" y="1870.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (18 samples, 1.13%)</title><rect x="1073.4" y="1859.0" width="13.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.4" y="1870.0"></text>
</g>
<g>
<title>LIR_Assembler::cmove(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.06%)</title><rect x="1074.2" y="1843.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1077.2" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (4 samples, 0.25%)</title><rect x="1074.9" y="1843.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1077.9" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (3 samples, 0.19%)</title><rect x="1074.9" y="1827.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1077.9" y="1838.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.19%)</title><rect x="1074.9" y="1811.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.9" y="1822.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.13%)</title><rect x="1074.9" y="1795.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.9" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_safepoint(int, OopMap*) (1 samples, 0.06%)</title><rect x="1074.9" y="1779.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1077.9" y="1790.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1075.6" y="1779.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.6" y="1790.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.06%)</title><rect x="1076.4" y="1795.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1079.4" y="1806.0"></text>
</g>
<g>
<title>PcDesc::PcDesc(int, int, int) (1 samples, 0.06%)</title><rect x="1076.4" y="1779.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.4" y="1790.0"></text>
</g>
<g>
<title>LIR_Assembler::ic_call(LIR_OpJavaCall*) (1 samples, 0.06%)</title><rect x="1077.1" y="1827.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1080.1" y="1838.0"></text>
</g>
<g>
<title>MacroAssembler::ic_call(unsigned char*, int) (1 samples, 0.06%)</title><rect x="1077.1" y="1811.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.1" y="1822.0"></text>
</g>
<g>
<title>Assembler::mov64(RegisterImpl*, long) (1 samples, 0.06%)</title><rect x="1077.1" y="1795.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.1" y="1806.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.06%)</title><rect x="1077.9" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.9" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (1 samples, 0.06%)</title><rect x="1077.9" y="1827.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1080.9" y="1838.0"></text>
</g>
<g>
<title>C1_MacroAssembler::inline_cache_check(RegisterImpl*, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1077.9" y="1811.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.9" y="1822.0"></text>
</g>
<g>
<title>MacroAssembler::jump_cc(Assembler::Condition, AddressLiteral) (1 samples, 0.06%)</title><rect x="1077.9" y="1795.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.9" y="1806.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 0.13%)</title><rect x="1078.6" y="1843.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.6" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::mem2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool) (1 samples, 0.06%)</title><rect x="1078.6" y="1827.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.6" y="1838.0"></text>
</g>
<g>
<title>LIR_Assembler::stack2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.06%)</title><rect x="1079.4" y="1827.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1082.4" y="1838.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.06%)</title><rect x="1079.4" y="1811.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1082.4" y="1822.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (2 samples, 0.13%)</title><rect x="1080.1" y="1843.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1083.1" y="1854.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(Address, Metadata*) (1 samples, 0.06%)</title><rect x="1080.1" y="1827.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1083.1" y="1838.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1080.1" y="1811.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.1" y="1822.0"></text>
</g>
<g>
<title>Assembler::prefixq(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1080.1" y="1795.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1083.1" y="1806.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="1080.8" y="1827.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1083.8" y="1838.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (5 samples, 0.31%)</title><rect x="1081.6" y="1843.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1084.6" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (3 samples, 0.19%)</title><rect x="1083.1" y="1827.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.1" y="1838.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.19%)</title><rect x="1083.1" y="1811.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.1" y="1822.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (3 samples, 0.19%)</title><rect x="1083.1" y="1795.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1086.1" y="1806.0"></text>
</g>
<g>
<title>LIR_OpAllocObj::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1085.3" y="1843.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.3" y="1854.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_object(RegisterImpl*, RegisterImpl*, RegisterImpl*, int, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.06%)</title><rect x="1085.3" y="1827.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1088.3" y="1838.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1086.0" y="1843.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.0" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.06%)</title><rect x="1086.0" y="1827.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.0" y="1838.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.06%)</title><rect x="1086.0" y="1811.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.0" y="1822.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.06%)</title><rect x="1086.0" y="1795.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.0" y="1806.0"></text>
</g>
<g>
<title>Assembler::jmp(Label&amp;, bool) (1 samples, 0.06%)</title><rect x="1086.0" y="1779.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.0" y="1790.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (1 samples, 0.06%)</title><rect x="1086.0" y="1763.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.0" y="1774.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.06%)</title><rect x="1086.0" y="1747.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.0" y="1758.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (10 samples, 0.63%)</title><rect x="1086.8" y="1859.0" width="7.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.8" y="1870.0"></text>
</g>
<g>
<title>ArrayCopyStub::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1086.8" y="1843.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.8" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1086.8" y="1827.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.8" y="1838.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="1086.8" y="1811.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.8" y="1822.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (1 samples, 0.06%)</title><rect x="1086.8" y="1795.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.8" y="1806.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.06%)</title><rect x="1086.8" y="1779.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.8" y="1790.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (6 samples, 0.38%)</title><rect x="1087.5" y="1843.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.5" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (4 samples, 0.25%)</title><rect x="1087.5" y="1827.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.5" y="1838.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (4 samples, 0.25%)</title><rect x="1087.5" y="1811.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1090.5" y="1822.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.13%)</title><rect x="1087.5" y="1795.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.5" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1087.5" y="1779.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.5" y="1790.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.06%)</title><rect x="1088.3" y="1779.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.3" y="1790.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.13%)</title><rect x="1089.0" y="1795.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1092.0" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.13%)</title><rect x="1089.0" y="1779.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1092.0" y="1790.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(Metadata*, int) (1 samples, 0.06%)</title><rect x="1090.5" y="1827.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1093.5" y="1838.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(Address, Metadata*) (1 samples, 0.06%)</title><rect x="1090.5" y="1811.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1093.5" y="1822.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.06%)</title><rect x="1090.5" y="1795.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.5" y="1806.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(int, int) (1 samples, 0.06%)</title><rect x="1091.2" y="1827.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.2" y="1838.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (2 samples, 0.13%)</title><rect x="1092.0" y="1843.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1095.0" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.13%)</title><rect x="1092.0" y="1827.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.0" y="1838.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.13%)</title><rect x="1092.0" y="1811.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1095.0" y="1822.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1092.0" y="1795.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.0" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1092.7" y="1795.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.7" y="1806.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1092.7" y="1779.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.7" y="1790.0"></text>
</g>
<g>
<title>SimpleExceptionStub::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1093.5" y="1843.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.5" y="1854.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1093.5" y="1827.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.5" y="1838.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="1093.5" y="1811.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.5" y="1822.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1093.5" y="1795.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1096.5" y="1806.0"></text>
</g>
<g>
<title>MacroAssembler::movptr(Address, long) (1 samples, 0.06%)</title><rect x="1094.2" y="1859.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.2" y="1870.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (53 samples, 3.34%)</title><rect x="1094.9" y="1875.0" width="39.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.9" y="1886.0">Com..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (17 samples, 1.07%)</title><rect x="1094.9" y="1859.0" width="12.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1097.9" y="1870.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.06%)</title><rect x="1094.9" y="1843.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.9" y="1854.0"></text>
</g>
<g>
<title>ProfileInvoke::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1095.7" y="1843.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.7" y="1854.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (15 samples, 0.94%)</title><rect x="1096.4" y="1843.0" width="11.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.4" y="1854.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.06%)</title><rect x="1096.4" y="1827.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.4" y="1838.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (1 samples, 0.06%)</title><rect x="1096.4" y="1811.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.4" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (4 samples, 0.25%)</title><rect x="1097.2" y="1827.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.2" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (4 samples, 0.25%)</title><rect x="1097.2" y="1811.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1100.2" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.06%)</title><rect x="1097.2" y="1795.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.2" y="1806.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.06%)</title><rect x="1097.2" y="1779.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1100.2" y="1790.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (3 samples, 0.19%)</title><rect x="1097.9" y="1795.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1100.9" y="1806.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::grow(int) (2 samples, 0.13%)</title><rect x="1098.7" y="1779.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.7" y="1790.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1763.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1102.4" y="1774.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1747.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1102.4" y="1758.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1731.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1102.4" y="1742.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1715.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1102.4" y="1726.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1699.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.4" y="1710.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1099.4" y="1683.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.4" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="1099.4" y="1667.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1102.4" y="1678.0"></text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (1 samples, 0.06%)</title><rect x="1100.1" y="1827.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.1" y="1838.0"></text>
</g>
<g>
<title>ciMethod::method_data_or_null() (1 samples, 0.06%)</title><rect x="1100.1" y="1811.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.1" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (2 samples, 0.13%)</title><rect x="1100.9" y="1827.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1103.9" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::access_load_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1100.9" y="1811.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.9" y="1822.0"></text>
</g>
<g>
<title>G1BarrierSetC1::load_at_resolved(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.06%)</title><rect x="1100.9" y="1795.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1103.9" y="1806.0"></text>
</g>
<g>
<title>LIR_Address::as_address() (1 samples, 0.06%)</title><rect x="1100.9" y="1779.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.9" y="1790.0"></text>
</g>
<g>
<title>LIR_OprFact::intConst(int) (1 samples, 0.06%)</title><rect x="1101.6" y="1811.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1104.6" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewInstance(NewInstance*) (1 samples, 0.06%)</title><rect x="1102.4" y="1827.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.4" y="1838.0"></text>
</g>
<g>
<title>as_BasicType(ValueType*) (1 samples, 0.06%)</title><rect x="1102.4" y="1811.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1105.4" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewTypeArray(NewTypeArray*) (1 samples, 0.06%)</title><rect x="1103.1" y="1827.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1106.1" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::do_NullCheck(NullCheck*) (1 samples, 0.06%)</title><rect x="1103.9" y="1827.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.9" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.06%)</title><rect x="1103.9" y="1811.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1106.9" y="1822.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1103.9" y="1795.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1106.9" y="1806.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1103.9" y="1779.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.9" y="1790.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long) (1 samples, 0.06%)</title><rect x="1103.9" y="1763.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1106.9" y="1774.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1103.9" y="1747.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1106.9" y="1758.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (1 samples, 0.06%)</title><rect x="1104.6" y="1827.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.6" y="1838.0"></text>
</g>
<g>
<title>LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.263] (1 samples, 0.06%)</title><rect x="1104.6" y="1811.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.6" y="1822.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (3 samples, 0.19%)</title><rect x="1105.3" y="1827.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1108.3" y="1838.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, LIR_OprDesc*, int, int, bool, bool) (1 samples, 0.06%)</title><rect x="1105.3" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.3" y="1822.0"></text>
</g>
<g>
<title>LIR_OprFact::intConst(int) (1 samples, 0.06%)</title><rect x="1105.3" y="1795.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.3" y="1806.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.13%)</title><rect x="1106.1" y="1811.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.1" y="1822.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1106.8" y="1795.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1109.8" y="1806.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1106.8" y="1779.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.8" y="1790.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1106.8" y="1763.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.8" y="1774.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (36 samples, 2.27%)</title><rect x="1107.6" y="1859.0" width="26.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.6" y="1870.0">L..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (8 samples, 0.50%)</title><rect x="1107.6" y="1843.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1110.6" y="1854.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (8 samples, 0.50%)</title><rect x="1107.6" y="1827.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.6" y="1838.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (3 samples, 0.19%)</title><rect x="1108.3" y="1811.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1111.3" y="1822.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (4 samples, 0.25%)</title><rect x="1110.5" y="1811.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.5" y="1822.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.13%)</title><rect x="1110.5" y="1795.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1113.5" y="1806.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.06%)</title><rect x="1110.5" y="1779.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1113.5" y="1790.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.06%)</title><rect x="1111.3" y="1779.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.3" y="1790.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.06%)</title><rect x="1112.0" y="1795.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.0" y="1806.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (1 samples, 0.06%)</title><rect x="1112.0" y="1779.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.0" y="1790.0"></text>
</g>
<g>
<title>LinearScanWalker::combine_spilled_intervals(Interval*) (1 samples, 0.06%)</title><rect x="1112.8" y="1795.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.8" y="1806.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (8 samples, 0.50%)</title><rect x="1113.5" y="1843.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.5" y="1854.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (7 samples, 0.44%)</title><rect x="1114.3" y="1827.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.3" y="1838.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (3 samples, 0.19%)</title><rect x="1114.3" y="1811.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1117.3" y="1822.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (2 samples, 0.13%)</title><rect x="1115.0" y="1795.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.0" y="1806.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.13%)</title><rect x="1116.5" y="1811.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.5" y="1822.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.13%)</title><rect x="1116.5" y="1795.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="1806.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.13%)</title><rect x="1116.5" y="1779.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.5" y="1790.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (2 samples, 0.13%)</title><rect x="1116.5" y="1763.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="1774.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.13%)</title><rect x="1116.5" y="1747.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.5" y="1758.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (2 samples, 0.13%)</title><rect x="1118.0" y="1811.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.0" y="1822.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (2 samples, 0.13%)</title><rect x="1118.0" y="1795.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.0" y="1806.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.06%)</title><rect x="1118.7" y="1779.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.7" y="1790.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (13 samples, 0.82%)</title><rect x="1119.5" y="1843.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.5" y="1854.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.06%)</title><rect x="1123.2" y="1827.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.2" y="1838.0"></text>
</g>
<g>
<title>Interval::add_use_pos(int, IntervalUseKind) (1 samples, 0.06%)</title><rect x="1123.9" y="1827.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.9" y="1838.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.06%)</title><rect x="1124.7" y="1827.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.7" y="1838.0"></text>
</g>
<g>
<title>LinearScan::add_def(LIR_OprDesc*, int, IntervalUseKind) (1 samples, 0.06%)</title><rect x="1125.4" y="1827.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.4" y="1838.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.06%)</title><rect x="1126.1" y="1827.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.1" y="1838.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.06%)</title><rect x="1126.1" y="1811.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.1" y="1822.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (3 samples, 0.19%)</title><rect x="1126.9" y="1827.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.9" y="1838.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.13%)</title><rect x="1129.1" y="1843.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.1" y="1854.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.06%)</title><rect x="1129.1" y="1827.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1132.1" y="1838.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1811.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.1" y="1822.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1795.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.1" y="1806.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1779.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1132.1" y="1790.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1763.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1132.1" y="1774.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1747.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.1" y="1758.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1129.1" y="1731.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1132.1" y="1742.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="1129.1" y="1715.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.1" y="1726.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.06%)</title><rect x="1129.8" y="1827.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.8" y="1838.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.06%)</title><rect x="1130.6" y="1843.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.6" y="1854.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (4 samples, 0.25%)</title><rect x="1131.3" y="1843.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.3" y="1854.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.13%)</title><rect x="1131.3" y="1827.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.3" y="1838.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.13%)</title><rect x="1131.3" y="1811.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.3" y="1822.0"></text>
</g>
<g>
<title>MoveResolver::MoveResolver(LinearScan*) (1 samples, 0.06%)</title><rect x="1132.8" y="1827.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.8" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1132.8" y="1811.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1135.8" y="1822.0"></text>
</g>
<g>
<title>MoveResolver::resolve_and_append_moves() (1 samples, 0.06%)</title><rect x="1133.6" y="1827.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.6" y="1838.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.06%)</title><rect x="1133.6" y="1811.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1136.6" y="1822.0"></text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 0.06%)</title><rect x="1134.3" y="1891.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.3" y="1902.0"></text>
</g>
<g>
<title>Dependencies::initialize(ciEnv*) (1 samples, 0.06%)</title><rect x="1134.3" y="1875.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.3" y="1886.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (15 samples, 0.94%)</title><rect x="1135.0" y="1891.0" width="11.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.0" y="1902.0"></text>
</g>
<g>
<title>Dependencies::DepStream::context_type() (1 samples, 0.06%)</title><rect x="1135.0" y="1875.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.0" y="1886.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.06%)</title><rect x="1135.8" y="1875.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.8" y="1886.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="1135.8" y="1859.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.8" y="1870.0"></text>
</g>
<g>
<title>Dependencies::validate_dependencies(CompileTask*, bool, char**) (1 samples, 0.06%)</title><rect x="1136.5" y="1875.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.5" y="1886.0"></text>
</g>
<g>
<title>Dependencies::DepStream::check_klass_dependency(KlassDepChange*) (1 samples, 0.06%)</title><rect x="1136.5" y="1859.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.5" y="1870.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (12 samples, 0.76%)</title><rect x="1137.3" y="1875.0" width="8.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.3" y="1886.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1137.3" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.3" y="1870.0"></text>
</g>
<g>
<title>append_oop_references(GrowableArray&lt;oopDesc*&gt;*, Klass*) (1 samples, 0.06%)</title><rect x="1137.3" y="1843.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1140.3" y="1854.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (1 samples, 0.06%)</title><rect x="1138.0" y="1859.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.0" y="1870.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="1138.0" y="1843.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.0" y="1854.0"></text>
</g>
<g>
<title>CodeHeap::header_size() (1 samples, 0.06%)</title><rect x="1138.8" y="1859.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.8" y="1870.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (9 samples, 0.57%)</title><rect x="1139.5" y="1859.0" width="6.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.5" y="1870.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.13%)</title><rect x="1139.5" y="1843.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1142.5" y="1854.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (5 samples, 0.31%)</title><rect x="1141.0" y="1843.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.0" y="1854.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.13%)</title><rect x="1141.0" y="1827.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1144.0" y="1838.0"></text>
</g>
<g>
<title>async_page_fault (2 samples, 0.13%)</title><rect x="1141.0" y="1811.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1144.0" y="1822.0"></text>
</g>
<g>
<title>do_async_page_fault (2 samples, 0.13%)</title><rect x="1141.0" y="1795.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1144.0" y="1806.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.13%)</title><rect x="1141.0" y="1779.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1144.0" y="1790.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.13%)</title><rect x="1141.0" y="1763.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1144.0" y="1774.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.06%)</title><rect x="1141.0" y="1747.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.0" y="1758.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1141.7" y="1747.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.7" y="1758.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1141.7" y="1731.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.7" y="1742.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="1141.7" y="1715.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.7" y="1726.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="1141.7" y="1699.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.7" y="1710.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.06%)</title><rect x="1141.7" y="1683.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.7" y="1694.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (3 samples, 0.19%)</title><rect x="1142.5" y="1827.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.5" y="1838.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (2 samples, 0.13%)</title><rect x="1143.2" y="1811.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.2" y="1822.0"></text>
</g>
<g>
<title>Relocation::pd_call_destination(unsigned char*) (2 samples, 0.13%)</title><rect x="1143.2" y="1795.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.2" y="1806.0"></text>
</g>
<g>
<title>nmethod::copy_values(GrowableArray&lt;_jobject*&gt;*) (1 samples, 0.06%)</title><rect x="1144.7" y="1843.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.7" y="1854.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.06%)</title><rect x="1145.4" y="1843.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.4" y="1854.0"></text>
</g>
<g>
<title>metadata_Relocation::unpack_data() (1 samples, 0.06%)</title><rect x="1145.4" y="1827.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.4" y="1838.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.19%)</title><rect x="1146.2" y="1939.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.2" y="1950.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.06%)</title><rect x="1146.2" y="1923.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.2" y="1934.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1146.2" y="1907.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.2" y="1918.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1146.2" y="1891.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.2" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (2 samples, 0.13%)</title><rect x="1146.9" y="1923.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.9" y="1934.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.06%)</title><rect x="1146.9" y="1907.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.9" y="1918.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="1146.9" y="1891.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.9" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1147.7" y="1907.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.7" y="1918.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1147.7" y="1891.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1902.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.06%)</title><rect x="1147.7" y="1875.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.7" y="1886.0"></text>
</g>
<g>
<title>ciKlass::ciKlass(Klass*) (1 samples, 0.06%)</title><rect x="1147.7" y="1859.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.7" y="1870.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1147.7" y="1843.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.7" y="1854.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1147.7" y="1827.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1838.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.06%)</title><rect x="1148.4" y="1939.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.4" y="1950.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1148.4" y="1923.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.4" y="1934.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1148.4" y="1907.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.4" y="1918.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1148.4" y="1891.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.4" y="1902.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1148.4" y="1875.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.4" y="1886.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.06%)</title><rect x="1149.2" y="1955.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.2" y="1966.0"></text>
</g>
<g>
<title>os::available_memory() (1 samples, 0.06%)</title><rect x="1149.2" y="1939.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.2" y="1950.0"></text>
</g>
<g>
<title>OSContainer::memory_limit_in_bytes() (1 samples, 0.06%)</title><rect x="1149.2" y="1923.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.2" y="1934.0"></text>
</g>
<g>
<title>_IO_fgets (1 samples, 0.06%)</title><rect x="1149.2" y="1907.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1152.2" y="1918.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.06%)</title><rect x="1149.9" y="1955.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.9" y="1966.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1149.9" y="1939.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.9" y="1950.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1149.9" y="1923.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.9" y="1934.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="1149.9" y="1907.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1152.9" y="1918.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1149.9" y="1891.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.9" y="1902.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1149.9" y="1875.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.9" y="1886.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.06%)</title><rect x="1149.9" y="1859.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.9" y="1870.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="1149.9" y="1843.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1152.9" y="1854.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="1149.9" y="1827.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.9" y="1838.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="1149.9" y="1811.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1152.9" y="1822.0"></text>
</g>
<g>
<title>CompileTask::free(CompileTask*) (1 samples, 0.06%)</title><rect x="1150.6" y="1955.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.6" y="1966.0"></text>
</g>
<g>
<title>JNIHandles::destroy_global(_jobject*) (1 samples, 0.06%)</title><rect x="1150.6" y="1939.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.6" y="1950.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 1097844ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.06%)</title><rect x="1150.6" y="1923.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.6" y="1934.0"></text>
</g>
<g>
<title>os::available_memory() (1 samples, 0.06%)</title><rect x="1151.4" y="1955.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.4" y="1966.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (10 samples, 0.63%)</title><rect x="1152.1" y="1971.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.1" y="1982.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1152.1" y="1955.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.1" y="1966.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1152.1" y="1939.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.1" y="1950.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.06%)</title><rect x="1152.1" y="1923.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.1" y="1934.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (9 samples, 0.57%)</title><rect x="1152.9" y="1955.0" width="6.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.9" y="1966.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (9 samples, 0.57%)</title><rect x="1152.9" y="1939.0" width="6.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.9" y="1950.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.06%)</title><rect x="1152.9" y="1923.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.9" y="1934.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (8 samples, 0.50%)</title><rect x="1153.6" y="1923.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.6" y="1934.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (6 samples, 0.38%)</title><rect x="1153.6" y="1907.0" width="4.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.6" y="1918.0"></text>
</g>
<g>
<title>InlineCacheBuffer::contains(unsigned char*) (1 samples, 0.06%)</title><rect x="1154.4" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.4" y="1902.0"></text>
</g>
<g>
<title>NativeCall::destination() const (3 samples, 0.19%)</title><rect x="1155.1" y="1891.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.1" y="1902.0"></text>
</g>
<g>
<title>bool clean_if_nmethod_is_unloaded&lt;CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool, bool) (1 samples, 0.06%)</title><rect x="1157.3" y="1891.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1160.3" y="1902.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.06%)</title><rect x="1158.1" y="1907.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.1" y="1918.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (1 samples, 0.06%)</title><rect x="1158.8" y="1907.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.8" y="1918.0"></text>
</g>
<g>
<title>CodeCache::reverse_free_ratio(int) (1 samples, 0.06%)</title><rect x="1158.8" y="1891.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.8" y="1902.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (12 samples, 0.76%)</title><rect x="1159.6" y="1971.0" width="8.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.6" y="1982.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (10 samples, 0.63%)</title><rect x="1159.6" y="1955.0" width="7.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.6" y="1966.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (10 samples, 0.63%)</title><rect x="1159.6" y="1939.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.6" y="1950.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.13%)</title><rect x="1160.3" y="1923.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.3" y="1934.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.13%)</title><rect x="1160.3" y="1907.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.3" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.13%)</title><rect x="1160.3" y="1891.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.3" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1161.0" y="1875.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1164.0" y="1886.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 0.44%)</title><rect x="1161.8" y="1923.0" width="5.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1164.8" y="1934.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (4 samples, 0.25%)</title><rect x="1161.8" y="1907.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.8" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (3 samples, 0.19%)</title><rect x="1162.5" y="1891.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.5" y="1902.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.13%)</title><rect x="1163.3" y="1875.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.3" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (2 samples, 0.13%)</title><rect x="1164.8" y="1907.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.8" y="1918.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1166.2" y="1907.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.2" y="1918.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1891.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.2" y="1902.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1875.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.2" y="1886.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1859.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.2" y="1870.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1843.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.2" y="1854.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1827.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.2" y="1838.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1166.2" y="1811.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1169.2" y="1822.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="1166.2" y="1795.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.2" y="1806.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.06%)</title><rect x="1166.2" y="1779.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.2" y="1790.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.06%)</title><rect x="1167.0" y="1955.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.0" y="1966.0"></text>
</g>
<g>
<title>LowMemoryDetector::has_pending_requests() (1 samples, 0.06%)</title><rect x="1167.7" y="1955.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.7" y="1966.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.06%)</title><rect x="1168.5" y="2003.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.5" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1168.5" y="1987.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.5" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1168.5" y="1971.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.5" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1168.5" y="1955.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.5" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1168.5" y="1939.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.5" y="1950.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="1168.5" y="1923.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1171.5" y="1934.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.06%)</title><rect x="1168.5" y="1907.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1171.5" y="1918.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="1168.5" y="1891.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.5" y="1902.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.06%)</title><rect x="1168.5" y="1875.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.5" y="1886.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (1 samples, 0.06%)</title><rect x="1169.2" y="2003.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.2" y="2014.0"></text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.06%)</title><rect x="1169.9" y="2003.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.9" y="2014.0"></text>
</g>
<g>
<title>VMThread::run() (11 samples, 0.69%)</title><rect x="1170.7" y="2003.0" width="8.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.7" y="2014.0"></text>
</g>
<g>
<title>VMThread::loop() (11 samples, 0.69%)</title><rect x="1170.7" y="1987.0" width="8.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.7" y="1998.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.19%)</title><rect x="1170.7" y="1971.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.7" y="1982.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.19%)</title><rect x="1170.7" y="1955.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.7" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.19%)</title><rect x="1170.7" y="1939.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1173.7" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="1171.4" y="1923.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.4" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.13%)</title><rect x="1171.4" y="1907.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.4" y="1918.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.13%)</title><rect x="1171.4" y="1891.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1174.4" y="1902.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.13%)</title><rect x="1171.4" y="1875.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.4" y="1886.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.13%)</title><rect x="1171.4" y="1859.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.4" y="1870.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.25%)</title><rect x="1172.9" y="1971.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.9" y="1982.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.06%)</title><rect x="1175.1" y="1955.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.1" y="1966.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.13%)</title><rect x="1175.9" y="1971.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.9" y="1982.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.13%)</title><rect x="1175.9" y="1955.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.9" y="1966.0"></text>
</g>
<g>
<title>VM_CGC_Operation::doit() (1 samples, 0.06%)</title><rect x="1175.9" y="1939.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.9" y="1950.0"></text>
</g>
<g>
<title>G1ConcurrentMark::remark() (1 samples, 0.06%)</title><rect x="1175.9" y="1923.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.9" y="1934.0"></text>
</g>
<g>
<title>G1ConcurrentMark::weak_refs_work(bool) (1 samples, 0.06%)</title><rect x="1175.9" y="1907.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.9" y="1918.0"></text>
</g>
<g>
<title>SystemDictionary::do_unloading(GCTimer*, bool) (1 samples, 0.06%)</title><rect x="1175.9" y="1891.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.9" y="1902.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::do_unloading(bool) (1 samples, 0.06%)</title><rect x="1175.9" y="1875.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.9" y="1886.0"></text>
</g>
<g>
<title>ClassLoaderData::free_deallocate_list() (1 samples, 0.06%)</title><rect x="1175.9" y="1859.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.9" y="1870.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.06%)</title><rect x="1175.9" y="1843.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.9" y="1854.0"></text>
</g>
<g>
<title>VM_RevokeBias::doit() (1 samples, 0.06%)</title><rect x="1176.6" y="1939.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.6" y="1950.0"></text>
</g>
<g>
<title>__sched_yield (2 samples, 0.13%)</title><rect x="1177.4" y="1971.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1180.4" y="1982.0"></text>
</g>
<g>
<title>WatcherThread::run() (15 samples, 0.94%)</title><rect x="1178.9" y="2003.0" width="11.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.9" y="2014.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="1178.9" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="1998.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (4 samples, 0.25%)</title><rect x="1179.6" y="1987.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="1998.0"></text>
</g>
<g>
<title>ChunkPoolCleaner::task() (1 samples, 0.06%)</title><rect x="1179.6" y="1971.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.6" y="1982.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 0.06%)</title><rect x="1180.3" y="1971.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="1982.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.06%)</title><rect x="1181.1" y="1971.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.1" y="1982.0"></text>
</g>
<g>
<title>HighResTimeSampler::take_sample() (1 samples, 0.06%)</title><rect x="1181.1" y="1955.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.1" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1181.8" y="1971.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1184.8" y="1982.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (9 samples, 0.57%)</title><rect x="1182.6" y="1987.0" width="6.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.6" y="1998.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="1183.3" y="1971.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.3" y="1982.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.38%)</title><rect x="1184.1" y="1971.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.1" y="1982.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 0.31%)</title><rect x="1184.1" y="1955.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.1" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="1184.8" y="1939.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1187.8" y="1950.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.19%)</title><rect x="1185.5" y="1939.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.5" y="1950.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.06%)</title><rect x="1187.8" y="1955.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="1966.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="1188.5" y="1971.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.5" y="1982.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="1189.3" y="1987.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="1998.0"></text>
</g>
</g>
</svg>
