<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (6,683 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (2 samples, 0.03%)</title><rect x="10.0" y="1603.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="1587.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1598.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="1571.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="1555.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1566.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.4" y="1603.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.4" y="1614.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.4" y="1587.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.4" y="1598.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.03%)</title><rect x="10.4" y="1571.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="1582.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.03%)</title><rect x="10.4" y="1555.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="1566.0"></text>
</g>
<g>
<title>[deoptimization] (8 samples, 0.12%)</title><rect x="10.7" y="1603.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.7" y="1614.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*, int) (2 samples, 0.03%)</title><rect x="10.9" y="1587.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.9" y="1598.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (2 samples, 0.03%)</title><rect x="10.9" y="1571.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.9" y="1582.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (2 samples, 0.03%)</title><rect x="10.9" y="1555.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.9" y="1566.0"></text>
</g>
<g>
<title>vframeArrayElement::fill_in(compiledVFrame*, bool) (2 samples, 0.03%)</title><rect x="10.9" y="1539.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.9" y="1550.0"></text>
</g>
<g>
<title>[not_walkable_Java] (106 samples, 1.59%)</title><rect x="12.3" y="1603.0" width="18.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="15.3" y="1614.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.03%)</title><rect x="12.3" y="1587.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.53%)</title><rect x="13.0" y="1587.0" width="18.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.0" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (102 samples, 1.53%)</title><rect x="13.0" y="1571.0" width="18.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.0" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (102 samples, 1.53%)</title><rect x="13.0" y="1555.0" width="18.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="16.0" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.79%)</title><rect x="21.7" y="1539.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.7" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 0.79%)</title><rect x="21.7" y="1523.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="24.7" y="1534.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (3 samples, 0.04%)</title><rect x="24.8" y="1507.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.8" y="1518.0"></text>
</g>
<g>
<title>sys_clock_gettime (32 samples, 0.48%)</title><rect x="25.4" y="1507.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.4" y="1518.0"></text>
</g>
<g>
<title>clockid_to_kclock.part.8 (3 samples, 0.04%)</title><rect x="26.2" y="1491.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.2" y="1502.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (20 samples, 0.30%)</title><rect x="27.0" y="1491.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.0" y="1502.0"></text>
</g>
<g>
<title>ktime_get_ts64 (18 samples, 0.27%)</title><rect x="27.0" y="1475.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.0" y="1486.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (14 samples, 0.21%)</title><rect x="27.7" y="1459.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.7" y="1470.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (14 samples, 0.21%)</title><rect x="27.7" y="1443.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.7" y="1454.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (2 samples, 0.03%)</title><rect x="30.1" y="1475.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.1" y="1486.0"></text>
</g>
<g>
<title>put_timespec64 (3 samples, 0.04%)</title><rect x="30.5" y="1491.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.5" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="30.7" y="1475.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="33.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.24%)</title><rect x="31.0" y="1603.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="34.0" y="1614.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.10%)</title><rect x="31.2" y="1587.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.2" y="1598.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.10%)</title><rect x="31.2" y="1571.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.2" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="31.5" y="1555.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.5" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="31.5" y="1539.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.5" y="1550.0"></text>
</g>
<g>
<title>sys_clock_gettime (2 samples, 0.03%)</title><rect x="32.1" y="1523.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.1" y="1534.0"></text>
</g>
<g>
<title>open64 (5 samples, 0.07%)</title><rect x="33.0" y="1587.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="36.0" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="33.0" y="1571.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.0" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="33.0" y="1555.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="36.0" y="1566.0"></text>
</g>
<g>
<title>sys_openat (5 samples, 0.07%)</title><rect x="33.0" y="1539.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.0" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (5 samples, 0.07%)</title><rect x="33.0" y="1523.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="36.0" y="1534.0"></text>
</g>
<g>
<title>do_filp_open (4 samples, 0.06%)</title><rect x="33.0" y="1507.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.0" y="1518.0"></text>
</g>
<g>
<title>path_openat (4 samples, 0.06%)</title><rect x="33.0" y="1491.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.0" y="1502.0"></text>
</g>
<g>
<title>link_path_walk (2 samples, 0.03%)</title><rect x="33.0" y="1475.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.0" y="1486.0"></text>
</g>
<g>
<title>vfs_open (2 samples, 0.03%)</title><rect x="33.3" y="1475.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="36.3" y="1486.0"></text>
</g>
<g>
<title>do_dentry_open (2 samples, 0.03%)</title><rect x="33.3" y="1459.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.3" y="1470.0"></text>
</g>
<g>
<title>kernfs_fop_open (2 samples, 0.03%)</title><rect x="33.3" y="1443.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="36.3" y="1454.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.58%)</title><rect x="33.8" y="1603.0" width="6.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="36.8" y="1614.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (3 samples, 0.04%)</title><rect x="34.0" y="1587.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.0" y="1598.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (3 samples, 0.04%)</title><rect x="34.5" y="1587.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.5" y="1598.0"></text>
</g>
<g>
<title>Interpreter (20 samples, 0.30%)</title><rect x="35.1" y="1587.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="38.1" y="1598.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (7 samples, 0.10%)</title><rect x="38.8" y="1587.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.8" y="1598.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="39.0" y="1571.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="40.0" y="1587.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.0" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="40.2" y="1571.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="43.2" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="40.2" y="1555.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="43.2" y="1566.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="40.7" y="1603.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="43.7" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="40.7" y="1587.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.7" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="40.7" y="1571.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.7" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (132 samples, 1.98%)</title><rect x="42.1" y="1603.0" width="23.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.1" y="1614.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (113 samples, 1.69%)</title><rect x="42.8" y="1587.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.8" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (113 samples, 1.69%)</title><rect x="42.8" y="1571.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (3 samples, 0.04%)</title><rect x="42.8" y="1555.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.8" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (110 samples, 1.65%)</title><rect x="43.4" y="1555.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.4" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (110 samples, 1.65%)</title><rect x="43.4" y="1539.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.4" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (53 samples, 0.79%)</title><rect x="43.4" y="1523.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.4" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (52 samples, 0.78%)</title><rect x="43.4" y="1507.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.4" y="1518.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (52 samples, 0.78%)</title><rect x="43.4" y="1491.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.4" y="1502.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (52 samples, 0.78%)</title><rect x="43.4" y="1475.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.4" y="1486.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (52 samples, 0.78%)</title><rect x="43.4" y="1459.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.4" y="1470.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (52 samples, 0.78%)</title><rect x="43.4" y="1443.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.4" y="1454.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (9 samples, 0.13%)</title><rect x="43.4" y="1427.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="46.4" y="1438.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.03%)</title><rect x="43.5" y="1411.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="46.5" y="1422.0"></text>
</g>
<g>
<title>writeBytes (6 samples, 0.09%)</title><rect x="43.9" y="1411.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="46.9" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="43.9" y="1395.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="46.9" y="1406.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.03%)</title><rect x="44.6" y="1395.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="47.6" y="1406.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (2 samples, 0.03%)</title><rect x="44.6" y="1379.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="47.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.64%)</title><rect x="45.0" y="1427.0" width="7.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="48.0" y="1438.0"></text>
</g>
<g>
<title>__write (43 samples, 0.64%)</title><rect x="45.0" y="1411.0" width="7.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="48.0" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.64%)</title><rect x="45.0" y="1395.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.0" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.64%)</title><rect x="45.0" y="1379.0" width="7.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.0" y="1390.0"></text>
</g>
<g>
<title>sys_write (43 samples, 0.64%)</title><rect x="45.0" y="1363.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.0" y="1374.0"></text>
</g>
<g>
<title>vfs_write (41 samples, 0.61%)</title><rect x="45.3" y="1347.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.3" y="1358.0"></text>
</g>
<g>
<title>__vfs_write (25 samples, 0.37%)</title><rect x="45.3" y="1331.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.3" y="1342.0"></text>
</g>
<g>
<title>new_sync_write (24 samples, 0.36%)</title><rect x="45.5" y="1315.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.5" y="1326.0"></text>
</g>
<g>
<title>ext4_file_write_iter (24 samples, 0.36%)</title><rect x="45.5" y="1299.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.5" y="1310.0"></text>
</g>
<g>
<title>__generic_file_write_iter (24 samples, 0.36%)</title><rect x="45.5" y="1283.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.5" y="1294.0"></text>
</g>
<g>
<title>file_update_time (6 samples, 0.09%)</title><rect x="45.7" y="1267.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.7" y="1278.0"></text>
</g>
<g>
<title>generic_update_time (6 samples, 0.09%)</title><rect x="45.7" y="1251.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.7" y="1262.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.09%)</title><rect x="45.7" y="1235.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.7" y="1246.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.09%)</title><rect x="45.7" y="1219.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.7" y="1230.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.07%)</title><rect x="45.8" y="1203.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.8" y="1214.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.04%)</title><rect x="45.8" y="1187.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="48.8" y="1198.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="46.0" y="1171.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="49.0" y="1182.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.03%)</title><rect x="46.4" y="1187.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.4" y="1198.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="46.4" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="49.4" y="1182.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.03%)</title><rect x="46.4" y="1155.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.4" y="1166.0"></text>
</g>
<g>
<title>generic_perform_write (16 samples, 0.24%)</title><rect x="46.7" y="1267.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.7" y="1278.0"></text>
</g>
<g>
<title>ext4_da_write_begin (7 samples, 0.10%)</title><rect x="46.9" y="1251.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.9" y="1262.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.03%)</title><rect x="46.9" y="1235.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.9" y="1246.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.03%)</title><rect x="47.3" y="1235.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="50.3" y="1246.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.04%)</title><rect x="47.6" y="1235.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.6" y="1246.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="47.6" y="1219.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.6" y="1230.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.09%)</title><rect x="48.1" y="1251.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.1" y="1262.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.07%)</title><rect x="48.3" y="1235.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="51.3" y="1246.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.06%)</title><rect x="48.3" y="1219.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.3" y="1230.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.06%)</title><rect x="48.3" y="1203.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.3" y="1214.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.04%)</title><rect x="48.5" y="1187.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.5" y="1198.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="48.5" y="1171.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.5" y="1182.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="48.5" y="1155.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.5" y="1166.0"></text>
</g>
<g>
<title>fsnotify (16 samples, 0.24%)</title><rect x="49.7" y="1331.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="52.7" y="1342.0"></text>
</g>
<g>
<title>inotify_handle_event (16 samples, 0.24%)</title><rect x="49.7" y="1315.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="52.7" y="1326.0"></text>
</g>
<g>
<title>fsnotify_add_event (16 samples, 0.24%)</title><rect x="49.7" y="1299.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.7" y="1310.0"></text>
</g>
<g>
<title>__wake_up (16 samples, 0.24%)</title><rect x="49.7" y="1283.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.7" y="1294.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.24%)</title><rect x="49.7" y="1267.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.7" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.24%)</title><rect x="49.7" y="1251.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="52.7" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (57 samples, 0.85%)</title><rect x="52.7" y="1523.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.7" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (56 samples, 0.84%)</title><rect x="52.7" y="1507.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.7" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (20 samples, 0.30%)</title><rect x="52.7" y="1491.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.7" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (20 samples, 0.30%)</title><rect x="52.7" y="1475.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.7" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createJsonGenerator (4 samples, 0.06%)</title><rect x="52.7" y="1459.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.7" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createGenerator (4 samples, 0.06%)</title><rect x="52.7" y="1443.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.7" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createGenerator (4 samples, 0.06%)</title><rect x="52.7" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.7" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="52.7" y="1411.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonGeneratorImpl.&lt;init&gt; (3 samples, 0.04%)</title><rect x="52.9" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.9" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/GeneratorBase.&lt;init&gt; (3 samples, 0.04%)</title><rect x="52.9" y="1379.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.9" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonWriteContext.createRootContext (3 samples, 0.04%)</title><rect x="52.9" y="1363.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.9" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (10 samples, 0.15%)</title><rect x="53.4" y="1459.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.4" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (8 samples, 0.12%)</title><rect x="53.8" y="1443.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.8" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (7 samples, 0.10%)</title><rect x="54.0" y="1427.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.0" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (7 samples, 0.10%)</title><rect x="54.0" y="1411.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.0" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (5 samples, 0.07%)</title><rect x="54.3" y="1395.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.3" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StringSerializer.serialize (5 samples, 0.07%)</title><rect x="54.3" y="1379.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.3" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeString (5 samples, 0.07%)</title><rect x="54.3" y="1363.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString (3 samples, 0.04%)</title><rect x="54.7" y="1347.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.7" y="1358.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString2 (3 samples, 0.04%)</title><rect x="54.7" y="1331.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.7" y="1342.0"></text>
</g>
<g>
<title>java/io/StringWriter.&lt;init&gt; (6 samples, 0.09%)</title><rect x="55.2" y="1459.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.2" y="1470.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="55.9" y="1443.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.9" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (36 samples, 0.54%)</title><rect x="56.3" y="1491.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.3" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (36 samples, 0.54%)</title><rect x="56.3" y="1475.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.3" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.add (6 samples, 0.09%)</title><rect x="56.4" y="1459.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.4" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.09%)</title><rect x="56.4" y="1443.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.4" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.09%)</title><rect x="56.4" y="1427.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.4" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (29 samples, 0.43%)</title><rect x="57.5" y="1459.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.5" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (28 samples, 0.42%)</title><rect x="57.5" y="1443.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.5" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (17 samples, 0.25%)</title><rect x="57.5" y="1427.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.5" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (17 samples, 0.25%)</title><rect x="57.5" y="1411.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.5" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (17 samples, 0.25%)</title><rect x="57.5" y="1395.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.5" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initialize (12 samples, 0.18%)</title><rect x="57.5" y="1379.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.5" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.compile (6 samples, 0.09%)</title><rect x="57.5" y="1363.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.5" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.encode (2 samples, 0.03%)</title><rect x="58.2" y="1347.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="58.2" y="1331.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="58.2" y="1315.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (2 samples, 0.03%)</title><rect x="58.2" y="1299.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newBytesFor (2 samples, 0.03%)</title><rect x="58.2" y="1283.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.2" y="1294.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeDefaultCentury (6 samples, 0.09%)</title><rect x="58.6" y="1363.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.6" y="1374.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (5 samples, 0.07%)</title><rect x="58.7" y="1347.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.7" y="1358.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.07%)</title><rect x="58.7" y="1331.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.7" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="58.9" y="1315.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="61.9" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="58.9" y="1299.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="61.9" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="59.3" y="1283.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.3" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="59.3" y="1267.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.3" y="1278.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="59.3" y="1251.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.3" y="1262.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.03%)</title><rect x="59.3" y="1235.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.3" y="1246.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="59.3" y="1219.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.3" y="1230.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (2 samples, 0.03%)</title><rect x="59.3" y="1203.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.3" y="1214.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="59.3" y="1187.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.3" y="1198.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (5 samples, 0.07%)</title><rect x="59.6" y="1379.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.6" y="1390.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (5 samples, 0.07%)</title><rect x="59.6" y="1363.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.6" y="1374.0"></text>
</g>
<g>
<title>java/util/Calendar.createCalendar (5 samples, 0.07%)</title><rect x="59.6" y="1347.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.6" y="1358.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarProviderImpl.getInstance (5 samples, 0.07%)</title><rect x="59.6" y="1331.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.6" y="1342.0"></text>
</g>
<g>
<title>java/util/Calendar$Builder.build (2 samples, 0.03%)</title><rect x="59.6" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.6" y="1326.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (2 samples, 0.03%)</title><rect x="59.6" y="1299.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.6" y="1310.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 0.03%)</title><rect x="59.6" y="1283.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.6" y="1294.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 0.03%)</title><rect x="59.6" y="1267.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.6" y="1278.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="60.0" y="1315.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="63.0" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="60.0" y="1299.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="63.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="60.1" y="1283.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.1" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="60.1" y="1267.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.1" y="1278.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="60.1" y="1251.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.1" y="1262.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="60.1" y="1235.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="63.1" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.format (11 samples, 0.16%)</title><rect x="60.5" y="1427.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.5" y="1438.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (11 samples, 0.16%)</title><rect x="60.5" y="1411.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.5" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (10 samples, 0.15%)</title><rect x="60.7" y="1395.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.7" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (10 samples, 0.15%)</title><rect x="60.7" y="1379.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.7" y="1390.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (9 samples, 0.13%)</title><rect x="60.7" y="1363.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.7" y="1374.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (6 samples, 0.09%)</title><rect x="61.0" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (3 samples, 0.04%)</title><rect x="61.0" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="61.0" y="1315.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.0" y="1326.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.04%)</title><rect x="61.6" y="1331.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.6" y="1342.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.04%)</title><rect x="61.6" y="1315.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.6" y="1326.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (2 samples, 0.03%)</title><rect x="61.7" y="1299.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.7" y="1310.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.getPositiveSuffixFieldPositions (2 samples, 0.03%)</title><rect x="61.7" y="1283.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.22%)</title><rect x="62.8" y="1587.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.8" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.22%)</title><rect x="62.8" y="1571.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.8" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.03%)</title><rect x="62.8" y="1555.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.8" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.19%)</title><rect x="63.1" y="1555.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.1" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.19%)</title><rect x="63.1" y="1539.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.1" y="1550.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="63.3" y="1523.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="66.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.15%)</title><rect x="63.7" y="1523.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="66.7" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.10%)</title><rect x="63.7" y="1507.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="66.7" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="63.7" y="1491.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.7" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="63.7" y="1475.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="66.7" y="1486.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="64.0" y="1459.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="67.0" y="1470.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="64.0" y="1443.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.0" y="1454.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.07%)</title><rect x="64.0" y="1427.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="67.0" y="1438.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="64.0" y="1411.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.0" y="1422.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="64.0" y="1395.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.0" y="1406.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="64.0" y="1379.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.0" y="1390.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="64.0" y="1363.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.0" y="1374.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="64.6" y="1411.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="67.6" y="1422.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="64.9" y="1507.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="67.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.03%)</title><rect x="65.4" y="1603.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.03%)</title><rect x="65.4" y="1587.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.03%)</title><rect x="65.4" y="1571.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.4" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.03%)</title><rect x="65.4" y="1555.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.03%)</title><rect x="65.4" y="1539.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.03%)</title><rect x="65.4" y="1523.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/Thread.run (846 samples, 12.66%)</title><rect x="65.8" y="1603.0" width="149.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.8" y="1614.0">java/lang/Thread.run</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (44 samples, 0.66%)</title><rect x="65.8" y="1587.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (44 samples, 0.66%)</title><rect x="65.8" y="1571.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.8" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (5 samples, 0.07%)</title><rect x="65.8" y="1555.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.8" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (4 samples, 0.06%)</title><rect x="66.0" y="1539.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.0" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (32 samples, 0.48%)</title><rect x="66.7" y="1555.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.7" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (32 samples, 0.48%)</title><rect x="66.7" y="1539.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.7" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (32 samples, 0.48%)</title><rect x="66.7" y="1523.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.7" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (32 samples, 0.48%)</title><rect x="66.7" y="1507.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.7" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (32 samples, 0.48%)</title><rect x="66.7" y="1491.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.7" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (32 samples, 0.48%)</title><rect x="66.7" y="1475.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.7" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (32 samples, 0.48%)</title><rect x="66.7" y="1459.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (32 samples, 0.48%)</title><rect x="66.7" y="1443.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (32 samples, 0.48%)</title><rect x="66.7" y="1427.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.7" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (32 samples, 0.48%)</title><rect x="66.7" y="1411.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.13%)</title><rect x="70.6" y="1395.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.13%)</title><rect x="70.6" y="1379.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.13%)</title><rect x="70.6" y="1363.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (9 samples, 0.13%)</title><rect x="70.6" y="1347.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.13%)</title><rect x="70.6" y="1331.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.13%)</title><rect x="70.6" y="1315.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.12%)</title><rect x="70.7" y="1299.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.7" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.12%)</title><rect x="70.7" y="1283.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.7" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.12%)</title><rect x="70.7" y="1267.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.7" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.12%)</title><rect x="70.7" y="1251.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.7" y="1262.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.10%)</title><rect x="70.9" y="1235.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="73.9" y="1246.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.10%)</title><rect x="70.9" y="1219.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="73.9" y="1230.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.10%)</title><rect x="70.9" y="1203.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="73.9" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.09%)</title><rect x="71.1" y="1187.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.1" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.09%)</title><rect x="71.1" y="1171.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="74.1" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.09%)</title><rect x="71.1" y="1155.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (7 samples, 0.10%)</title><rect x="72.3" y="1555.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (7 samples, 0.10%)</title><rect x="72.3" y="1539.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.3" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (2 samples, 0.03%)</title><rect x="72.3" y="1523.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="75.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="72.7" y="1523.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.7" y="1534.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.04%)</title><rect x="72.7" y="1507.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.7" y="1518.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="72.7" y="1491.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="75.7" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="73.2" y="1523.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="76.2" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="73.2" y="1507.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.2" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="73.2" y="1491.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.2" y="1502.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="73.2" y="1475.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.2" y="1486.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="73.2" y="1459.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.2" y="1470.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="73.2" y="1443.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (802 samples, 12.00%)</title><rect x="73.6" y="1587.0" width="141.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.6" y="1598.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (802 samples, 12.00%)</title><rect x="73.6" y="1571.0" width="141.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.6" y="1582.0">java/util/concurre..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (531 samples, 7.95%)</title><rect x="76.4" y="1555.0" width="93.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.4" y="1566.0">akka/dispat..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (531 samples, 7.95%)</title><rect x="76.4" y="1539.0" width="93.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="1550.0">akka/util/S..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (530 samples, 7.93%)</title><rect x="76.6" y="1523.0" width="93.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.6" y="1534.0">akka/util/S..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (434 samples, 6.49%)</title><rect x="78.3" y="1507.0" width="76.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.3" y="1518.0">akka/io/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (424 samples, 6.34%)</title><rect x="78.7" y="1491.0" width="74.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.7" y="1502.0">akka/io/..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (424 samples, 6.34%)</title><rect x="78.7" y="1475.0" width="74.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.7" y="1486.0">akka/io/..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (137 samples, 2.05%)</title><rect x="79.4" y="1459.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.4" y="1470.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (137 samples, 2.05%)</title><rect x="79.4" y="1443.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.4" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (137 samples, 2.05%)</title><rect x="79.4" y="1427.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.4" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (137 samples, 2.05%)</title><rect x="79.4" y="1411.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.4" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (137 samples, 2.05%)</title><rect x="79.4" y="1395.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.4" y="1406.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (137 samples, 2.05%)</title><rect x="79.4" y="1379.0" width="24.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (133 samples, 1.99%)</title><rect x="80.1" y="1363.0" width="23.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.1" y="1374.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (132 samples, 1.98%)</title><rect x="80.3" y="1347.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.3" y="1358.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (126 samples, 1.89%)</title><rect x="80.3" y="1331.0" width="22.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="1342.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (125 samples, 1.87%)</title><rect x="80.3" y="1315.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.3" y="1326.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (125 samples, 1.87%)</title><rect x="80.3" y="1299.0" width="22.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.3" y="1310.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (125 samples, 1.87%)</title><rect x="80.3" y="1283.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.3" y="1294.0">a..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (125 samples, 1.87%)</title><rect x="80.3" y="1267.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.3" y="1278.0">a..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (125 samples, 1.87%)</title><rect x="80.3" y="1251.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (125 samples, 1.87%)</title><rect x="80.3" y="1235.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.3" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (124 samples, 1.86%)</title><rect x="80.5" y="1219.0" width="21.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.5" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (124 samples, 1.86%)</title><rect x="80.5" y="1203.0" width="21.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.5" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (124 samples, 1.86%)</title><rect x="80.5" y="1187.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (116 samples, 1.74%)</title><rect x="81.9" y="1171.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.9" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.24%)</title><rect x="82.2" y="1155.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="85.2" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.06%)</title><rect x="83.5" y="1139.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="86.5" y="1150.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="84.7" y="1139.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.7" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="85.0" y="1155.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="88.0" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (96 samples, 1.44%)</title><rect x="85.4" y="1155.0" width="16.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="88.4" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 1.33%)</title><rect x="86.6" y="1139.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.6" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 1.33%)</title><rect x="86.6" y="1123.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.6" y="1134.0"></text>
</g>
<g>
<title>sys_futex (83 samples, 1.24%)</title><rect x="87.7" y="1107.0" width="14.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="90.7" y="1118.0"></text>
</g>
<g>
<title>do_futex (83 samples, 1.24%)</title><rect x="87.7" y="1091.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.7" y="1102.0"></text>
</g>
<g>
<title>futex_wake (80 samples, 1.20%)</title><rect x="87.9" y="1075.0" width="14.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.9" y="1086.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="88.4" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="91.4" y="1070.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="88.7" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.7" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (72 samples, 1.08%)</title><rect x="89.3" y="1059.0" width="12.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.3" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (71 samples, 1.06%)</title><rect x="89.5" y="1043.0" width="12.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.5" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 1.06%)</title><rect x="89.5" y="1027.0" width="12.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.5" y="1038.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="102.0" y="1075.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (6 samples, 0.09%)</title><rect x="102.5" y="1331.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.5" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (5 samples, 0.07%)</title><rect x="102.7" y="1315.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (5 samples, 0.07%)</title><rect x="102.7" y="1299.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (5 samples, 0.07%)</title><rect x="102.7" y="1283.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (5 samples, 0.07%)</title><rect x="102.7" y="1267.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (5 samples, 0.07%)</title><rect x="102.7" y="1251.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (4 samples, 0.06%)</title><rect x="102.9" y="1235.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.06%)</title><rect x="102.9" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (4 samples, 0.06%)</title><rect x="102.9" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (5 samples, 0.07%)</title><rect x="103.6" y="1459.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (5 samples, 0.07%)</title><rect x="103.6" y="1443.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.6" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (275 samples, 4.11%)</title><rect x="104.6" y="1459.0" width="48.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.6" y="1470.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (274 samples, 4.10%)</title><rect x="104.8" y="1443.0" width="48.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.8" y="1454.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (270 samples, 4.04%)</title><rect x="105.3" y="1427.0" width="47.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.3" y="1438.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (80 samples, 1.20%)</title><rect x="105.5" y="1411.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="1422.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 1.09%)</title><rect x="106.8" y="1395.0" width="12.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="109.8" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (73 samples, 1.09%)</title><rect x="106.8" y="1379.0" width="12.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="109.8" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.84%)</title><rect x="109.8" y="1363.0" width="9.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.8" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 0.81%)</title><rect x="109.8" y="1347.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.8" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (49 samples, 0.73%)</title><rect x="110.6" y="1331.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.6" y="1342.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="110.8" y="1315.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.8" y="1326.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="110.8" y="1299.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.8" y="1310.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="110.8" y="1283.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.8" y="1294.0"></text>
</g>
<g>
<title>ep_poll (45 samples, 0.67%)</title><rect x="111.3" y="1315.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.3" y="1326.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="111.7" y="1299.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.7" y="1310.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (9 samples, 0.13%)</title><rect x="112.4" y="1299.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.4" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="112.6" y="1283.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.6" y="1294.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.09%)</title><rect x="112.9" y="1283.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.9" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (4 samples, 0.06%)</title><rect x="112.9" y="1267.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="115.9" y="1278.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="113.3" y="1251.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.3" y="1262.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (24 samples, 0.36%)</title><rect x="114.4" y="1299.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.4" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 0.36%)</title><rect x="114.4" y="1283.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.4" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.09%)</title><rect x="114.4" y="1267.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.4" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.07%)</title><rect x="114.5" y="1251.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.5" y="1262.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.25%)</title><rect x="115.6" y="1267.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.6" y="1278.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.24%)</title><rect x="115.8" y="1251.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.8" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.21%)</title><rect x="116.1" y="1235.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.1" y="1246.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.03%)</title><rect x="118.8" y="1299.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.8" y="1310.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.03%)</title><rect x="119.3" y="1347.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.3" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (52 samples, 0.78%)</title><rect x="119.6" y="1411.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.6" y="1422.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="120.0" y="1395.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="123.0" y="1406.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="120.2" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="123.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.06%)</title><rect x="120.5" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="120.5" y="1379.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.03%)</title><rect x="120.7" y="1363.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="120.7" y="1347.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.03%)</title><rect x="120.7" y="1331.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (37 samples, 0.55%)</title><rect x="121.4" y="1395.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.4" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (36 samples, 0.54%)</title><rect x="121.6" y="1379.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.40%)</title><rect x="122.5" y="1363.0" width="4.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="125.5" y="1374.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.03%)</title><rect x="122.5" y="1347.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="125.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="122.5" y="1331.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="125.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="122.5" y="1315.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="125.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.09%)</title><rect x="122.8" y="1347.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="125.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="123.0" y="1331.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="126.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="123.0" y="1315.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="126.0" y="1326.0"></text>
</g>
<g>
<title>__read (2 samples, 0.03%)</title><rect x="123.0" y="1299.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="126.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="123.0" y="1283.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.0" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="123.0" y="1267.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="126.0" y="1278.0"></text>
</g>
<g>
<title>__read (3 samples, 0.04%)</title><rect x="123.4" y="1315.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="126.4" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="123.4" y="1299.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.4" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="123.4" y="1283.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="126.4" y="1294.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.04%)</title><rect x="123.4" y="1267.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.4" y="1278.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="123.4" y="1251.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.4" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.04%)</title><rect x="123.4" y="1235.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.4" y="1246.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="123.4" y="1219.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.4" y="1230.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.03%)</title><rect x="123.4" y="1203.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="126.4" y="1214.0"></text>
</g>
<g>
<title>__read (19 samples, 0.28%)</title><rect x="123.9" y="1347.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="126.9" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.25%)</title><rect x="124.2" y="1331.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.2" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.24%)</title><rect x="124.2" y="1315.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.2" y="1326.0"></text>
</g>
<g>
<title>sys_read (14 samples, 0.21%)</title><rect x="124.6" y="1299.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.6" y="1310.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="124.6" y="1283.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.6" y="1294.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="124.6" y="1267.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.6" y="1278.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.15%)</title><rect x="125.3" y="1283.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.3" y="1294.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.13%)</title><rect x="125.3" y="1267.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.3" y="1278.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.13%)</title><rect x="125.3" y="1251.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="128.3" y="1262.0"></text>
</g>
<g>
<title>pipe_read (5 samples, 0.07%)</title><rect x="126.0" y="1235.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="129.0" y="1246.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="126.4" y="1219.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.4" y="1230.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="126.4" y="1203.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.4" y="1214.0"></text>
</g>
<g>
<title>__read (3 samples, 0.04%)</title><rect x="127.2" y="1363.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="130.2" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.07%)</title><rect x="127.9" y="1395.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="127.9" y="1379.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="127.9" y="1363.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="127.9" y="1347.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.9" y="1358.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.03%)</title><rect x="128.3" y="1379.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.3" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.03%)</title><rect x="128.3" y="1363.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="128.3" y="1347.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.3" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (86 samples, 1.29%)</title><rect x="128.8" y="1411.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.8" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.03%)</title><rect x="130.1" y="1395.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (7 samples, 0.10%)</title><rect x="130.4" y="1395.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.10%)</title><rect x="130.4" y="1379.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (2 samples, 0.03%)</title><rect x="131.1" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.1" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (65 samples, 0.97%)</title><rect x="131.7" y="1395.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (62 samples, 0.93%)</title><rect x="132.2" y="1379.0" width="10.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="135.2" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.85%)</title><rect x="133.1" y="1363.0" width="10.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.1" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 0.82%)</title><rect x="133.1" y="1347.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.1" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (50 samples, 0.75%)</title><rect x="134.0" y="1331.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.0" y="1342.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="136.1" y="1315.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.1" y="1326.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="136.1" y="1299.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.1" y="1310.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="136.1" y="1283.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.1" y="1294.0"></text>
</g>
<g>
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="137.1" y="1315.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.1" y="1326.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (8 samples, 0.12%)</title><rect x="137.7" y="1315.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="140.7" y="1326.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.12%)</title><rect x="137.7" y="1299.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.7" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.09%)</title><rect x="138.0" y="1283.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="141.0" y="1294.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (4 samples, 0.06%)</title><rect x="138.4" y="1267.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="141.4" y="1278.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="138.5" y="1251.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.5" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="138.5" y="1235.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.5" y="1246.0"></text>
</g>
<g>
<title>ep_remove (16 samples, 0.24%)</title><rect x="139.1" y="1315.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="142.1" y="1326.0"></text>
</g>
<g>
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="139.4" y="1299.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.4" y="1310.0"></text>
</g>
<g>
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="139.4" y="1283.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.4" y="1294.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (9 samples, 0.13%)</title><rect x="139.8" y="1299.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.8" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="140.7" y="1283.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.7" y="1294.0"></text>
</g>
<g>
<title>rb_erase_cached (2 samples, 0.03%)</title><rect x="141.4" y="1299.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.4" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.06%)</title><rect x="141.9" y="1315.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.9" y="1326.0"></text>
</g>
<g>
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="142.8" y="1347.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (3 samples, 0.04%)</title><rect x="143.1" y="1395.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.1" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (3 samples, 0.04%)</title><rect x="143.1" y="1379.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (50 samples, 0.75%)</title><rect x="144.2" y="1411.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.2" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (7 samples, 0.10%)</title><rect x="144.7" y="1395.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.7" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (6 samples, 0.09%)</title><rect x="144.9" y="1379.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.9" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (5 samples, 0.07%)</title><rect x="145.1" y="1363.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="148.1" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="145.4" y="1347.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="148.4" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="145.4" y="1331.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="148.4" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="145.6" y="1315.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="148.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (40 samples, 0.60%)</title><rect x="146.0" y="1395.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.0" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (39 samples, 0.58%)</title><rect x="146.1" y="1379.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (39 samples, 0.58%)</title><rect x="146.1" y="1363.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.1" y="1374.0"></text>
</g>
<g>
<title>close (38 samples, 0.57%)</title><rect x="146.3" y="1347.0" width="6.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="149.3" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.52%)</title><rect x="146.8" y="1331.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.8" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.52%)</title><rect x="146.8" y="1315.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.8" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (33 samples, 0.49%)</title><rect x="146.8" y="1299.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="149.8" y="1310.0"></text>
</g>
<g>
<title>task_work_run (33 samples, 0.49%)</title><rect x="146.8" y="1283.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="149.8" y="1294.0"></text>
</g>
<g>
<title>____fput (33 samples, 0.49%)</title><rect x="146.8" y="1267.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.8" y="1278.0"></text>
</g>
<g>
<title>__fput (33 samples, 0.49%)</title><rect x="146.8" y="1251.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.8" y="1262.0"></text>
</g>
<g>
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="147.0" y="1235.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.0" y="1246.0"></text>
</g>
<g>
<title>dput (8 samples, 0.12%)</title><rect x="147.5" y="1235.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.5" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (7 samples, 0.10%)</title><rect x="147.5" y="1219.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.5" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (7 samples, 0.10%)</title><rect x="147.5" y="1203.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.5" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (5 samples, 0.07%)</title><rect x="147.9" y="1187.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.9" y="1198.0"></text>
</g>
<g>
<title>iput (4 samples, 0.06%)</title><rect x="148.1" y="1171.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="151.1" y="1182.0"></text>
</g>
<g>
<title>evict (3 samples, 0.04%)</title><rect x="148.3" y="1155.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="151.3" y="1166.0"></text>
</g>
<g>
<title>destroy_inode (3 samples, 0.04%)</title><rect x="148.3" y="1139.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.3" y="1150.0"></text>
</g>
<g>
<title>__destroy_inode (2 samples, 0.03%)</title><rect x="148.3" y="1123.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="151.3" y="1134.0"></text>
</g>
<g>
<title>sock_close (20 samples, 0.30%)</title><rect x="149.1" y="1235.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.1" y="1246.0"></text>
</g>
<g>
<title>__sock_release (20 samples, 0.30%)</title><rect x="149.1" y="1219.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="152.1" y="1230.0"></text>
</g>
<g>
<title>inet6_release (18 samples, 0.27%)</title><rect x="149.3" y="1203.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="152.3" y="1214.0"></text>
</g>
<g>
<title>inet_release (18 samples, 0.27%)</title><rect x="149.3" y="1187.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.3" y="1198.0"></text>
</g>
<g>
<title>tcp_close (18 samples, 0.27%)</title><rect x="149.3" y="1171.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="152.3" y="1182.0"></text>
</g>
<g>
<title>inet_csk_destroy_sock (4 samples, 0.06%)</title><rect x="149.5" y="1155.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="152.5" y="1166.0"></text>
</g>
<g>
<title>tcp_v6_destroy_sock (4 samples, 0.06%)</title><rect x="149.5" y="1139.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.5" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_destroy_sock (2 samples, 0.03%)</title><rect x="149.8" y="1123.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.8" y="1134.0"></text>
</g>
<g>
<title>tcp_disconnect (9 samples, 0.13%)</title><rect x="150.5" y="1155.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="153.5" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (7 samples, 0.10%)</title><rect x="150.5" y="1139.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.5" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.09%)</title><rect x="150.7" y="1123.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.7" y="1134.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.07%)</title><rect x="150.9" y="1107.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.9" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.07%)</title><rect x="150.9" y="1091.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.9" y="1102.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.07%)</title><rect x="150.9" y="1075.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="153.9" y="1086.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.07%)</title><rect x="150.9" y="1059.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.9" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.07%)</title><rect x="150.9" y="1043.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.9" y="1054.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="151.4" y="1027.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.4" y="1038.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="151.4" y="1011.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.4" y="1022.0"></text>
</g>
<g>
<title>tcp_set_state (2 samples, 0.03%)</title><rect x="151.8" y="1139.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.8" y="1150.0"></text>
</g>
<g>
<title>inet_unhash (2 samples, 0.03%)</title><rect x="151.8" y="1123.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.8" y="1134.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="152.1" y="1155.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="155.1" y="1166.0"></text>
</g>
<g>
<title>sys_close (2 samples, 0.03%)</title><rect x="152.7" y="1299.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.7" y="1310.0"></text>
</g>
<g>
<title>__close_fd (2 samples, 0.03%)</title><rect x="152.7" y="1283.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.7" y="1294.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.03%)</title><rect x="152.7" y="1267.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="155.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.03%)</title><rect x="153.2" y="1459.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.2" y="1470.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (8 samples, 0.12%)</title><rect x="153.5" y="1491.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.5" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (8 samples, 0.12%)</title><rect x="153.5" y="1475.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.5" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (85 samples, 1.27%)</title><rect x="155.0" y="1507.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (14 samples, 0.21%)</title><rect x="155.3" y="1491.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.3" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (8 samples, 0.12%)</title><rect x="155.5" y="1475.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.12%)</title><rect x="155.5" y="1459.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.5" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.12%)</title><rect x="155.5" y="1443.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.12%)</title><rect x="155.5" y="1427.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.12%)</title><rect x="155.5" y="1411.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.12%)</title><rect x="155.5" y="1395.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.12%)</title><rect x="155.5" y="1379.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.5" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.12%)</title><rect x="155.5" y="1363.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.12%)</title><rect x="155.5" y="1347.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.12%)</title><rect x="155.5" y="1331.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.5" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.12%)</title><rect x="155.5" y="1315.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.12%)</title><rect x="155.5" y="1299.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.12%)</title><rect x="155.5" y="1283.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.12%)</title><rect x="155.5" y="1267.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.12%)</title><rect x="155.5" y="1251.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.12%)</title><rect x="155.5" y="1235.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.12%)</title><rect x="155.5" y="1219.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.12%)</title><rect x="155.5" y="1203.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.09%)</title><rect x="155.8" y="1187.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.8" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="156.2" y="1171.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="159.2" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="156.2" y="1155.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.2" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="156.2" y="1139.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.2" y="1150.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="156.2" y="1123.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="159.2" y="1134.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="156.2" y="1107.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.2" y="1118.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="156.2" y="1091.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.2" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="156.4" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.4" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="156.4" y="1059.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.4" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="156.4" y="1043.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (5 samples, 0.07%)</title><rect x="156.9" y="1475.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.9" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (5 samples, 0.07%)</title><rect x="156.9" y="1459.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (4 samples, 0.06%)</title><rect x="157.1" y="1443.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (4 samples, 0.06%)</title><rect x="157.1" y="1427.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.1" y="1438.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$6.tryRun (6 samples, 0.09%)</title><rect x="157.8" y="1491.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.8" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (4 samples, 0.06%)</title><rect x="158.1" y="1475.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.1" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (22 samples, 0.33%)</title><rect x="158.8" y="1491.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.8" y="1502.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$runThunk (4 samples, 0.06%)</title><rect x="158.8" y="1475.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.8" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (4 samples, 0.06%)</title><rect x="158.8" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.8" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.06%)</title><rect x="158.8" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.8" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.06%)</title><rect x="158.8" y="1427.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.8" y="1438.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.03%)</title><rect x="158.8" y="1411.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="161.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="159.2" y="1411.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="162.2" y="1422.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="159.2" y="1395.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="162.2" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="159.2" y="1379.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.2" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="159.2" y="1363.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="162.2" y="1374.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="159.2" y="1347.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.2" y="1358.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="159.2" y="1331.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.2" y="1342.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="159.2" y="1315.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="162.2" y="1326.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="159.2" y="1299.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.2" y="1310.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="159.2" y="1283.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="162.2" y="1294.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (16 samples, 0.24%)</title><rect x="159.9" y="1475.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.9" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (16 samples, 0.24%)</title><rect x="159.9" y="1459.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.9" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1018/1617337402.apply$mcV$sp (2 samples, 0.03%)</title><rect x="159.9" y="1443.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.9" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$1 (2 samples, 0.03%)</title><rect x="159.9" y="1427.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.9" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (2 samples, 0.03%)</title><rect x="159.9" y="1411.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.9" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (2 samples, 0.03%)</title><rect x="159.9" y="1395.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="159.9" y="1379.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="159.9" y="1363.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1019/1372167476.apply$mcV$sp (14 samples, 0.21%)</title><rect x="160.3" y="1443.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.3" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (14 samples, 0.21%)</title><rect x="160.3" y="1427.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.3" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (14 samples, 0.21%)</title><rect x="160.3" y="1411.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.3" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (14 samples, 0.21%)</title><rect x="160.3" y="1395.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.3" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (13 samples, 0.19%)</title><rect x="160.4" y="1379.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (9 samples, 0.13%)</title><rect x="160.8" y="1363.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.8" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (7 samples, 0.10%)</title><rect x="161.0" y="1347.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.0" y="1358.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (7 samples, 0.10%)</title><rect x="161.0" y="1331.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="164.0" y="1342.0"></text>
</g>
<g>
<title>getsockopt (7 samples, 0.10%)</title><rect x="161.0" y="1315.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="164.0" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="161.3" y="1299.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="161.3" y="1283.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.3" y="1294.0"></text>
</g>
<g>
<title>sys_getsockopt (4 samples, 0.06%)</title><rect x="161.5" y="1267.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="164.5" y="1278.0"></text>
</g>
<g>
<title>sock_getsockopt (4 samples, 0.06%)</title><rect x="161.5" y="1251.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (2 samples, 0.03%)</title><rect x="162.4" y="1363.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.4" y="1374.0"></text>
</g>
<g>
<title>shutdown (2 samples, 0.03%)</title><rect x="162.4" y="1347.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="165.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (40 samples, 0.60%)</title><rect x="162.7" y="1491.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.7" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1017/220777640.apply$mcV$sp (40 samples, 0.60%)</title><rect x="162.7" y="1475.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.7" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (40 samples, 0.60%)</title><rect x="162.7" y="1459.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (39 samples, 0.58%)</title><rect x="162.7" y="1443.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (39 samples, 0.58%)</title><rect x="162.7" y="1427.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (39 samples, 0.58%)</title><rect x="162.7" y="1411.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (39 samples, 0.58%)</title><rect x="162.7" y="1395.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (39 samples, 0.58%)</title><rect x="162.7" y="1379.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (39 samples, 0.58%)</title><rect x="162.7" y="1363.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (39 samples, 0.58%)</title><rect x="162.7" y="1347.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.7" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (39 samples, 0.58%)</title><rect x="162.7" y="1331.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (37 samples, 0.55%)</title><rect x="162.7" y="1315.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (37 samples, 0.55%)</title><rect x="162.7" y="1299.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (37 samples, 0.55%)</title><rect x="162.7" y="1283.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (37 samples, 0.55%)</title><rect x="162.7" y="1267.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (37 samples, 0.55%)</title><rect x="162.7" y="1251.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (37 samples, 0.55%)</title><rect x="162.7" y="1235.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (37 samples, 0.55%)</title><rect x="162.7" y="1219.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (37 samples, 0.55%)</title><rect x="162.7" y="1203.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (37 samples, 0.55%)</title><rect x="162.7" y="1187.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 0.55%)</title><rect x="162.7" y="1171.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.54%)</title><rect x="162.9" y="1155.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.9" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="162.9" y="1139.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="165.9" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (34 samples, 0.51%)</title><rect x="163.3" y="1139.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="166.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.46%)</title><rect x="163.8" y="1123.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.8" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.46%)</title><rect x="163.8" y="1107.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.8" y="1118.0"></text>
</g>
<g>
<title>sys_futex (31 samples, 0.46%)</title><rect x="163.8" y="1091.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.8" y="1102.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.46%)</title><rect x="163.8" y="1075.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.8" y="1086.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.45%)</title><rect x="164.0" y="1059.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.0" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.43%)</title><rect x="164.1" y="1043.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="167.1" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.43%)</title><rect x="164.1" y="1027.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.1" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.43%)</title><rect x="164.1" y="1011.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (2 samples, 0.03%)</title><rect x="169.3" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (2 samples, 0.03%)</title><rect x="169.3" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (2 samples, 0.03%)</title><rect x="169.3" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (2 samples, 0.03%)</title><rect x="169.3" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (2 samples, 0.03%)</title><rect x="169.3" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (2 samples, 0.03%)</title><rect x="169.3" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="169.3" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="169.3" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.03%)</title><rect x="169.3" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.3" y="1198.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (31 samples, 0.46%)</title><rect x="170.1" y="1555.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.1" y="1566.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (31 samples, 0.46%)</title><rect x="170.1" y="1539.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.1" y="1550.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (31 samples, 0.46%)</title><rect x="170.1" y="1523.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.1" y="1534.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (31 samples, 0.46%)</title><rect x="170.1" y="1507.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.1" y="1518.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (31 samples, 0.46%)</title><rect x="170.1" y="1491.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.1" y="1502.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (31 samples, 0.46%)</title><rect x="170.1" y="1475.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.1" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (31 samples, 0.46%)</title><rect x="170.1" y="1459.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.1" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (31 samples, 0.46%)</title><rect x="170.1" y="1443.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.1" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (31 samples, 0.46%)</title><rect x="170.1" y="1427.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.1" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (31 samples, 0.46%)</title><rect x="170.1" y="1411.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.1" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (31 samples, 0.46%)</title><rect x="170.1" y="1395.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.1" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (31 samples, 0.46%)</title><rect x="170.1" y="1379.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.1" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (31 samples, 0.46%)</title><rect x="170.1" y="1363.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.1" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (31 samples, 0.46%)</title><rect x="170.1" y="1347.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.1" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (31 samples, 0.46%)</title><rect x="170.1" y="1331.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (30 samples, 0.45%)</title><rect x="170.3" y="1315.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (29 samples, 0.43%)</title><rect x="170.3" y="1299.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (29 samples, 0.43%)</title><rect x="170.3" y="1283.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (29 samples, 0.43%)</title><rect x="170.3" y="1267.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (29 samples, 0.43%)</title><rect x="170.3" y="1251.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (29 samples, 0.43%)</title><rect x="170.3" y="1235.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (29 samples, 0.43%)</title><rect x="170.3" y="1219.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (29 samples, 0.43%)</title><rect x="170.3" y="1203.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (29 samples, 0.43%)</title><rect x="170.3" y="1187.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (29 samples, 0.43%)</title><rect x="170.3" y="1171.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.43%)</title><rect x="170.3" y="1155.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 0.42%)</title><rect x="170.5" y="1139.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.5" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.39%)</title><rect x="170.9" y="1123.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="173.9" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.36%)</title><rect x="171.2" y="1107.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.36%)</title><rect x="171.2" y="1091.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.2" y="1102.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.33%)</title><rect x="171.6" y="1075.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.6" y="1086.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.33%)</title><rect x="171.6" y="1059.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.6" y="1070.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.31%)</title><rect x="171.6" y="1043.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.6" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.30%)</title><rect x="171.7" y="1027.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.7" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.30%)</title><rect x="171.7" y="1011.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.7" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.30%)</title><rect x="171.7" y="995.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.7" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1159/1566197423.run (167 samples, 2.50%)</title><rect x="175.6" y="1555.0" width="29.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.6" y="1566.0">co..</text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$3 (167 samples, 2.50%)</title><rect x="175.6" y="1539.0" width="29.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.6" y="1550.0">co..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (40 samples, 0.60%)</title><rect x="175.6" y="1523.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.6" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (40 samples, 0.60%)</title><rect x="175.6" y="1507.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.6" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (39 samples, 0.58%)</title><rect x="175.6" y="1491.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.6" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (36 samples, 0.54%)</title><rect x="175.6" y="1475.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.6" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (36 samples, 0.54%)</title><rect x="175.6" y="1459.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.6" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (36 samples, 0.54%)</title><rect x="175.6" y="1443.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.6" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (35 samples, 0.52%)</title><rect x="175.8" y="1427.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.8" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (33 samples, 0.49%)</title><rect x="175.8" y="1411.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.8" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (12 samples, 0.18%)</title><rect x="175.8" y="1395.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.8" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/AsyncAppender.preprocess (11 samples, 0.16%)</title><rect x="175.8" y="1379.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.8" y="1390.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (11 samples, 0.16%)</title><rect x="175.8" y="1363.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.8" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (11 samples, 0.16%)</title><rect x="175.8" y="1347.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.8" y="1358.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (11 samples, 0.16%)</title><rect x="175.8" y="1331.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.8" y="1342.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (11 samples, 0.16%)</title><rect x="175.8" y="1315.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.8" y="1326.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (7 samples, 0.10%)</title><rect x="176.3" y="1299.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.3" y="1310.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (5 samples, 0.07%)</title><rect x="176.7" y="1283.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.7" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$Loggable.toString (4 samples, 0.06%)</title><rect x="176.7" y="1267.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="176.9" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="176.9" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.9" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="176.9" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.9" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (20 samples, 0.30%)</title><rect x="178.1" y="1395.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.1" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (20 samples, 0.30%)</title><rect x="178.1" y="1379.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (20 samples, 0.30%)</title><rect x="178.1" y="1363.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.03%)</title><rect x="178.1" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.03%)</title><rect x="178.1" y="1331.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="178.1" y="1315.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="178.1" y="1299.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.27%)</title><rect x="178.4" y="1347.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.27%)</title><rect x="178.4" y="1331.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.27%)</title><rect x="178.4" y="1315.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.27%)</title><rect x="178.4" y="1299.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.27%)</title><rect x="178.4" y="1283.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.4" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.25%)</title><rect x="178.6" y="1267.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="181.6" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.22%)</title><rect x="179.0" y="1251.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="182.0" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.22%)</title><rect x="179.0" y="1235.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.0" y="1246.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.22%)</title><rect x="179.0" y="1219.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.0" y="1230.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.21%)</title><rect x="179.2" y="1203.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.2" y="1214.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.21%)</title><rect x="179.2" y="1187.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="182.2" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.21%)</title><rect x="179.2" y="1171.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.2" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.21%)</title><rect x="179.2" y="1155.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.2" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.21%)</title><rect x="179.2" y="1139.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.2" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.03%)</title><rect x="181.6" y="1411.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.6" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.03%)</title><rect x="181.6" y="1395.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.6" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.03%)</title><rect x="181.6" y="1379.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.6" y="1390.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (2 samples, 0.03%)</title><rect x="181.6" y="1363.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.6" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (2 samples, 0.03%)</title><rect x="181.6" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.6" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (2 samples, 0.03%)</title><rect x="181.6" y="1331.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.6" y="1342.0"></text>
</g>
<g>
<title>java/io/StringWriter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="181.6" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.6" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="182.0" y="1475.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.0" y="1486.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="182.2" y="1459.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="185.2" y="1470.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="182.2" y="1443.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="185.2" y="1454.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (26 samples, 0.39%)</title><rect x="182.7" y="1523.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.7" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (26 samples, 0.39%)</title><rect x="182.7" y="1507.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.7" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (26 samples, 0.39%)</title><rect x="182.7" y="1491.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.7" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (26 samples, 0.39%)</title><rect x="182.7" y="1475.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (25 samples, 0.37%)</title><rect x="182.9" y="1459.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.37%)</title><rect x="182.9" y="1443.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="185.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.37%)</title><rect x="182.9" y="1427.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.36%)</title><rect x="183.0" y="1411.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.36%)</title><rect x="183.0" y="1395.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.0" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.36%)</title><rect x="183.0" y="1379.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.36%)</title><rect x="183.0" y="1363.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.36%)</title><rect x="183.0" y="1347.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.36%)</title><rect x="183.0" y="1331.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.0" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.36%)</title><rect x="183.0" y="1315.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="186.0" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.33%)</title><rect x="183.2" y="1299.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.2" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.33%)</title><rect x="183.2" y="1283.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.2" y="1294.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.31%)</title><rect x="183.4" y="1267.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.4" y="1278.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.31%)</title><rect x="183.4" y="1251.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="186.4" y="1262.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.30%)</title><rect x="183.4" y="1235.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="186.4" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.28%)</title><rect x="183.6" y="1219.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.6" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.28%)</title><rect x="183.6" y="1203.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.6" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.28%)</title><rect x="183.6" y="1187.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.6" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (87 samples, 1.30%)</title><rect x="187.5" y="1523.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.5" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (83 samples, 1.24%)</title><rect x="187.6" y="1507.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.6" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="187.6" y="1491.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.6" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="187.6" y="1475.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.6" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="187.6" y="1459.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.6" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="187.6" y="1443.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.6" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (81 samples, 1.21%)</title><rect x="188.0" y="1491.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.0" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (81 samples, 1.21%)</title><rect x="188.0" y="1475.0" width="14.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (81 samples, 1.21%)</title><rect x="188.0" y="1459.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.0" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (80 samples, 1.20%)</title><rect x="188.2" y="1443.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.2" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (78 samples, 1.17%)</title><rect x="188.5" y="1427.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.5" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (75 samples, 1.12%)</title><rect x="189.0" y="1411.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.0" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.&lt;init&gt; (3 samples, 0.04%)</title><rect x="189.2" y="1395.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="189.9" y="1395.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="189.9" y="1379.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.9" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$848/1824108215.get$Lambda (2 samples, 0.03%)</title><rect x="189.9" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (68 samples, 1.02%)</title><rect x="190.3" y="1395.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.3" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (22 samples, 0.33%)</title><rect x="191.9" y="1379.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.9" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (6 samples, 0.09%)</title><rect x="192.2" y="1363.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.2" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (5 samples, 0.07%)</title><rect x="192.2" y="1347.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (13 samples, 0.19%)</title><rect x="193.3" y="1363.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.3" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (12 samples, 0.18%)</title><rect x="193.5" y="1347.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.5" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (12 samples, 0.18%)</title><rect x="193.5" y="1331.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.5" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (32 samples, 0.48%)</title><rect x="195.7" y="1379.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.7" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (29 samples, 0.43%)</title><rect x="196.3" y="1363.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (29 samples, 0.43%)</title><rect x="196.3" y="1347.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.3" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (29 samples, 0.43%)</title><rect x="196.3" y="1331.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.3" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.size (7 samples, 0.10%)</title><rect x="196.3" y="1315.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.3" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (22 samples, 0.33%)</title><rect x="197.5" y="1315.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.33%)</title><rect x="197.5" y="1299.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (4 samples, 0.06%)</title><rect x="200.7" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.7" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.07%)</title><rect x="201.4" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (4 samples, 0.06%)</title><rect x="201.6" y="1363.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.6" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (4 samples, 0.06%)</title><rect x="201.6" y="1347.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.6" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (4 samples, 0.06%)</title><rect x="201.6" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="204.6" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (3 samples, 0.04%)</title><rect x="201.6" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="202.5" y="1507.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.5" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.isSafeToJoin (4 samples, 0.06%)</title><rect x="202.8" y="1523.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.8" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="203.2" y="1507.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.2" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="203.2" y="1491.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.03%)</title><rect x="203.2" y="1475.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.2" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$Builder.addAllEndpoints (4 samples, 0.06%)</title><rect x="203.7" y="1523.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.7" y="1534.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite$Builder.addAll (4 samples, 0.06%)</title><rect x="203.7" y="1507.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.7" y="1518.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite$Builder.addAllCheckingNulls (4 samples, 0.06%)</title><rect x="203.7" y="1491.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.7" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacity (2 samples, 0.03%)</title><rect x="204.0" y="1475.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.0" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.newBuilder (2 samples, 0.03%)</title><rect x="204.6" y="1523.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.6" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.toBuilder (2 samples, 0.03%)</title><rect x="204.6" y="1507.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.6" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$Builder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="204.6" y="1491.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.6" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse$Builder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="204.6" y="1475.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1223/1067617874.run (13 samples, 0.19%)</title><rect x="205.1" y="1555.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.1" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$5 (12 samples, 0.18%)</title><rect x="205.3" y="1539.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.3" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView$Configuration.getConfigurationId (5 samples, 0.07%)</title><rect x="205.8" y="1523.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.8" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView$Configuration.getConfigurationId (5 samples, 0.07%)</title><rect x="205.8" y="1507.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.8" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="207.0" y="1523.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.0" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.equals (2 samples, 0.03%)</title><rect x="207.0" y="1507.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.0" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (2 samples, 0.03%)</title><rect x="207.0" y="1491.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.0" y="1502.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (2 samples, 0.03%)</title><rect x="207.0" y="1475.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.0" y="1486.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (2 samples, 0.03%)</title><rect x="207.0" y="1459.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.toStringInternal (2 samples, 0.03%)</title><rect x="207.0" y="1443.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="207.0" y="1427.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.0" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1364/615198403.run (6 samples, 0.09%)</title><rect x="207.6" y="1555.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.6" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (6 samples, 0.09%)</title><rect x="207.6" y="1539.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.6" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (6 samples, 0.09%)</title><rect x="207.6" y="1523.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.6" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (5 samples, 0.07%)</title><rect x="207.6" y="1507.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.6" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$854/1678075512.accept (5 samples, 0.07%)</title><rect x="207.6" y="1491.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.6" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (5 samples, 0.07%)</title><rect x="207.6" y="1475.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.6" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$853/1429622810.accept (5 samples, 0.07%)</title><rect x="207.6" y="1459.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.6" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (5 samples, 0.07%)</title><rect x="207.6" y="1443.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.6" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (3 samples, 0.04%)</title><rect x="207.9" y="1427.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.9" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (2 samples, 0.03%)</title><rect x="207.9" y="1411.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.9" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (2 samples, 0.03%)</title><rect x="207.9" y="1395.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.9" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (2 samples, 0.03%)</title><rect x="207.9" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.9" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (2 samples, 0.03%)</title><rect x="207.9" y="1363.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.9" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.03%)</title><rect x="207.9" y="1347.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.03%)</title><rect x="207.9" y="1331.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (5 samples, 0.07%)</title><rect x="208.8" y="1555.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.8" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (5 samples, 0.07%)</title><rect x="208.8" y="1539.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.07%)</title><rect x="208.8" y="1523.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (3 samples, 0.04%)</title><rect x="208.8" y="1507.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.8" y="1518.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.sendHeartBeatHttpMessaging (2 samples, 0.03%)</title><rect x="208.8" y="1491.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$AlertBatcher.run (2 samples, 0.03%)</title><rect x="209.3" y="1507.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.3" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (2 samples, 0.03%)</title><rect x="209.3" y="1491.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.3" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (2 samples, 0.03%)</title><rect x="209.3" y="1475.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.3" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (2 samples, 0.03%)</title><rect x="209.3" y="1459.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 0.42%)</title><rect x="210.1" y="1555.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26 samples, 0.39%)</title><rect x="210.4" y="1539.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.4" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.34%)</title><rect x="210.4" y="1523.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.03%)</title><rect x="210.4" y="1507.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.03%)</title><rect x="210.9" y="1507.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.9" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="210.9" y="1491.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.9" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="210.9" y="1475.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.27%)</title><rect x="211.3" y="1507.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.27%)</title><rect x="211.3" y="1491.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.3" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.10%)</title><rect x="211.5" y="1475.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="214.5" y="1486.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="212.3" y="1459.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="215.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.15%)</title><rect x="212.7" y="1475.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="215.7" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.10%)</title><rect x="212.9" y="1459.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="215.9" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="213.2" y="1443.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="216.2" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="213.2" y="1427.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="216.2" y="1438.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="213.8" y="1411.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="216.8" y="1422.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="213.8" y="1395.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.8" y="1406.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="213.8" y="1379.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.04%)</title><rect x="214.5" y="1523.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.04%)</title><rect x="214.5" y="1507.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="214.5" y="1491.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="214.5" y="1475.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.03%)</title><rect x="214.6" y="1459.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.6" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4,163 samples, 62.29%)</title><rect x="215.2" y="1603.0" width="735.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.2" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4,163 samples, 62.29%)</title><rect x="215.2" y="1587.0" width="735.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.2" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,742 samples, 55.99%)</title><rect x="215.5" y="1571.0" width="660.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.5" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,709 samples, 55.50%)</title><rect x="216.1" y="1555.0" width="654.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.1" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (2 samples, 0.03%)</title><rect x="224.5" y="1539.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.5" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (2 samples, 0.03%)</title><rect x="224.5" y="1523.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.5" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (2 samples, 0.03%)</title><rect x="224.5" y="1507.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.5" y="1518.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (2 samples, 0.03%)</title><rect x="224.5" y="1491.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.5" y="1502.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (2 samples, 0.03%)</title><rect x="224.5" y="1475.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.5" y="1486.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull (2 samples, 0.03%)</title><rect x="224.5" y="1459.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.5" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (2 samples, 0.03%)</title><rect x="224.5" y="1443.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (2 samples, 0.03%)</title><rect x="224.5" y="1427.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (2 samples, 0.03%)</title><rect x="224.5" y="1411.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (26 samples, 0.39%)</title><rect x="224.9" y="1539.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.9" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (6 samples, 0.09%)</title><rect x="228.2" y="1523.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (6 samples, 0.09%)</title><rect x="228.2" y="1507.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (3 samples, 0.04%)</title><rect x="228.8" y="1491.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.8" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (21 samples, 0.31%)</title><rect x="229.5" y="1539.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (2 samples, 0.03%)</title><rect x="232.8" y="1523.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.8" y="1534.0"></text>
</g>
<g>
<title>__sched_yield (2 samples, 0.03%)</title><rect x="232.8" y="1507.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="235.8" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,612 samples, 54.05%)</title><rect x="233.2" y="1539.0" width="637.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (3 samples, 0.04%)</title><rect x="235.8" y="1523.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="238.8" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (3 samples, 0.04%)</title><rect x="235.8" y="1507.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="238.8" y="1518.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.04%)</title><rect x="235.8" y="1491.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="238.8" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.04%)</title><rect x="235.8" y="1475.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="238.8" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (2 samples, 0.03%)</title><rect x="236.0" y="1459.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="239.0" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.07%)</title><rect x="236.4" y="1523.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.4" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (376 samples, 5.63%)</title><rect x="237.2" y="1523.0" width="66.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.2" y="1534.0">akka/di..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (372 samples, 5.57%)</title><rect x="237.9" y="1507.0" width="65.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.9" y="1518.0">akka/di..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (141 samples, 2.11%)</title><rect x="237.9" y="1491.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.9" y="1502.0">a..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (16 samples, 0.24%)</title><rect x="238.8" y="1475.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.8" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (12 samples, 0.18%)</title><rect x="239.5" y="1459.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.5" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (4 samples, 0.06%)</title><rect x="241.0" y="1443.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.0" y="1454.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (4 samples, 0.06%)</title><rect x="241.0" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.0" y="1438.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (4 samples, 0.06%)</title><rect x="241.0" y="1411.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.0" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (4 samples, 0.06%)</title><rect x="241.0" y="1395.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.0" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (4 samples, 0.06%)</title><rect x="241.0" y="1379.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.0" y="1390.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (4 samples, 0.06%)</title><rect x="241.0" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.0" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (4 samples, 0.06%)</title><rect x="241.0" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.0" y="1358.0"></text>
</g>
<g>
<title>scala/runtime/RichLong.self (3 samples, 0.04%)</title><rect x="241.1" y="1331.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.1" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (3 samples, 0.04%)</title><rect x="241.1" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.04%)</title><rect x="241.1" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.akka$actor$Scheduler$$anon$$swap (2 samples, 0.03%)</title><rect x="241.7" y="1475.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.7" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$688/232298168.run (118 samples, 1.77%)</title><rect x="242.0" y="1475.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.0" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (118 samples, 1.77%)</title><rect x="242.0" y="1459.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.0" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (113 samples, 1.69%)</title><rect x="242.7" y="1443.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.7" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (113 samples, 1.69%)</title><rect x="242.7" y="1427.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.7" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized (13 samples, 0.19%)</title><rect x="244.0" y="1411.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.0" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized$lzycompute$1 (13 samples, 0.19%)</title><rect x="244.0" y="1395.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.0" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (90 samples, 1.35%)</title><rect x="246.2" y="1411.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.2" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (78 samples, 1.17%)</title><rect x="248.2" y="1395.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.2" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (78 samples, 1.17%)</title><rect x="248.2" y="1379.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.2" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (78 samples, 1.17%)</title><rect x="248.2" y="1363.0" width="13.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (60 samples, 0.90%)</title><rect x="250.0" y="1347.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (53 samples, 0.79%)</title><rect x="250.0" y="1331.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (53 samples, 0.79%)</title><rect x="250.0" y="1315.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (53 samples, 0.79%)</title><rect x="250.0" y="1299.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (49 samples, 0.73%)</title><rect x="250.0" y="1283.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (49 samples, 0.73%)</title><rect x="250.0" y="1267.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (45 samples, 0.67%)</title><rect x="250.7" y="1251.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (44 samples, 0.66%)</title><rect x="250.8" y="1235.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (23 samples, 0.34%)</title><rect x="251.0" y="1219.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.0" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (20 samples, 0.30%)</title><rect x="251.4" y="1203.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (20 samples, 0.30%)</title><rect x="251.4" y="1187.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.4" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (20 samples, 0.30%)</title><rect x="251.4" y="1171.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (20 samples, 0.30%)</title><rect x="251.4" y="1155.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (20 samples, 0.30%)</title><rect x="251.4" y="1139.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (18 samples, 0.27%)</title><rect x="251.7" y="1123.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (17 samples, 0.25%)</title><rect x="251.7" y="1107.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.25%)</title><rect x="251.7" y="1091.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.25%)</title><rect x="251.7" y="1075.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.22%)</title><rect x="252.1" y="1059.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.1" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="252.3" y="1043.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="255.3" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.18%)</title><rect x="252.6" y="1043.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="255.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.18%)</title><rect x="252.6" y="1027.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="255.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.18%)</title><rect x="252.6" y="1011.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="255.6" y="1022.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.18%)</title><rect x="252.6" y="995.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="255.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.18%)</title><rect x="252.6" y="979.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.18%)</title><rect x="252.6" y="963.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="255.6" y="974.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.16%)</title><rect x="252.8" y="947.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.8" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.16%)</title><rect x="252.8" y="931.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="255.8" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.16%)</title><rect x="252.8" y="915.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="255.8" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (20 samples, 0.30%)</title><rect x="255.1" y="1219.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (4 samples, 0.06%)</title><rect x="255.1" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (16 samples, 0.24%)</title><rect x="255.8" y="1203.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (16 samples, 0.24%)</title><rect x="255.8" y="1187.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (16 samples, 0.24%)</title><rect x="255.8" y="1171.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (16 samples, 0.24%)</title><rect x="255.8" y="1155.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (16 samples, 0.24%)</title><rect x="255.8" y="1139.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (12 samples, 0.18%)</title><rect x="256.3" y="1123.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (12 samples, 0.18%)</title><rect x="256.3" y="1107.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (12 samples, 0.18%)</title><rect x="256.3" y="1091.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Envelope$.apply (2 samples, 0.03%)</title><rect x="258.6" y="1283.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.6" y="1294.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (2 samples, 0.03%)</title><rect x="259.0" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.0" y="1294.0"></text>
</g>
<g>
<title>akka/routing/RandomPool.isManagementMessage (2 samples, 0.03%)</title><rect x="259.0" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="1278.0"></text>
</g>
<g>
<title>akka/routing/RouterConfig.isManagementMessage$ (2 samples, 0.03%)</title><rect x="259.0" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.0" y="1262.0"></text>
</g>
<g>
<title>akka/routing/RouterConfig.isManagementMessage (2 samples, 0.03%)</title><rect x="259.0" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.underlying (7 samples, 0.10%)</title><rect x="259.3" y="1331.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreterOrNull (8 samples, 0.12%)</title><rect x="260.5" y="1347.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.12%)</title><rect x="260.5" y="1331.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.12%)</title><rect x="260.5" y="1315.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (3 samples, 0.04%)</title><rect x="262.1" y="1411.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="265.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (3 samples, 0.04%)</title><rect x="262.1" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.1" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (3 samples, 0.04%)</title><rect x="262.1" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.1" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (211 samples, 3.16%)</title><rect x="262.8" y="1491.0" width="37.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.8" y="1502.0">akk..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="263.2" y="1475.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.03%)</title><rect x="263.7" y="1475.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="263.7" y="1459.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.03%)</title><rect x="263.7" y="1443.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.7" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (203 samples, 3.04%)</title><rect x="264.3" y="1475.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.3" y="1486.0">sca..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$560/490785353.apply$mcV$sp (2 samples, 0.03%)</title><rect x="264.3" y="1459.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.3" y="1470.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (201 samples, 3.01%)</title><rect x="264.6" y="1459.0" width="35.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.6" y="1470.0">sca..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$560/490785353.apply$mcV$sp (201 samples, 3.01%)</title><rect x="264.6" y="1443.0" width="35.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.6" y="1454.0">akk..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (201 samples, 3.01%)</title><rect x="264.6" y="1427.0" width="35.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.6" y="1438.0">akk..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (201 samples, 3.01%)</title><rect x="264.6" y="1411.0" width="35.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.6" y="1422.0">akk..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (198 samples, 2.96%)</title><rect x="265.1" y="1395.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.1" y="1406.0">sc..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$922/466222186.apply (5 samples, 0.07%)</title><rect x="265.1" y="1379.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.1" y="1390.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3$adapted (5 samples, 0.07%)</title><rect x="265.1" y="1363.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.1" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$3 (5 samples, 0.07%)</title><rect x="265.1" y="1347.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.1" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.removeConnection (5 samples, 0.07%)</title><rect x="265.1" y="1331.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (5 samples, 0.07%)</title><rect x="265.1" y="1315.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (5 samples, 0.07%)</title><rect x="265.1" y="1299.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (5 samples, 0.07%)</title><rect x="265.1" y="1283.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (5 samples, 0.07%)</title><rect x="265.1" y="1267.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (5 samples, 0.07%)</title><rect x="265.1" y="1251.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (5 samples, 0.07%)</title><rect x="265.1" y="1235.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (3 samples, 0.04%)</title><rect x="265.3" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (3 samples, 0.04%)</title><rect x="265.3" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (3 samples, 0.04%)</title><rect x="265.3" y="1187.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (3 samples, 0.04%)</title><rect x="265.3" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1142/710513513.apply (190 samples, 2.84%)</title><rect x="266.0" y="1379.0" width="33.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.0" y="1390.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (187 samples, 2.80%)</title><rect x="266.6" y="1363.0" width="33.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.6" y="1374.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (144 samples, 2.15%)</title><rect x="266.6" y="1347.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.6" y="1358.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1149/1416907231.apply (129 samples, 1.93%)</title><rect x="266.6" y="1331.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.6" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (129 samples, 1.93%)</title><rect x="266.6" y="1315.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.6" y="1326.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1147/1502115275.apply (129 samples, 1.93%)</title><rect x="266.6" y="1299.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.6" y="1310.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (128 samples, 1.92%)</title><rect x="266.7" y="1283.0" width="22.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.7" y="1294.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (2 samples, 0.03%)</title><rect x="266.7" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (2 samples, 0.03%)</title><rect x="266.7" y="1251.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$262/708926121.apply (2 samples, 0.03%)</title><rect x="266.7" y="1235.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (2 samples, 0.03%)</title><rect x="266.7" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1115/1488747003.apply (2 samples, 0.03%)</title><rect x="266.7" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$3 (2 samples, 0.03%)</title><rect x="266.7" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.provide (2 samples, 0.03%)</title><rect x="266.7" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (70 samples, 1.05%)</title><rect x="267.1" y="1267.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (70 samples, 1.05%)</title><rect x="267.1" y="1251.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$970/1312341122.apply (70 samples, 1.05%)</title><rect x="267.1" y="1235.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (70 samples, 1.05%)</title><rect x="267.1" y="1219.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (69 samples, 1.03%)</title><rect x="267.3" y="1203.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (68 samples, 1.02%)</title><rect x="267.3" y="1187.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (68 samples, 1.02%)</title><rect x="267.3" y="1171.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (68 samples, 1.02%)</title><rect x="267.3" y="1155.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (68 samples, 1.02%)</title><rect x="267.3" y="1139.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (8 samples, 0.12%)</title><rect x="267.3" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1181/515012849.apply (8 samples, 0.12%)</title><rect x="267.3" y="1107.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$2 (8 samples, 0.12%)</title><rect x="267.3" y="1091.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (7 samples, 0.10%)</title><rect x="267.3" y="1075.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1183/34121233.apply (6 samples, 0.09%)</title><rect x="267.3" y="1059.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$2 (6 samples, 0.09%)</title><rect x="267.3" y="1043.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.07%)</title><rect x="267.4" y="1027.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (5 samples, 0.07%)</title><rect x="267.4" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (5 samples, 0.07%)</title><rect x="267.4" y="995.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$940/2014132213.apply (5 samples, 0.07%)</title><rect x="267.4" y="979.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.4" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (5 samples, 0.07%)</title><rect x="267.4" y="963.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1191/1934243345.apply (2 samples, 0.03%)</title><rect x="267.4" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.4" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$3 (2 samples, 0.03%)</title><rect x="267.4" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.4" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="267.4" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.4" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1195/2117250425.apply (2 samples, 0.03%)</title><rect x="267.4" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$937/1067265784.apply (3 samples, 0.04%)</title><rect x="267.8" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (3 samples, 0.04%)</title><rect x="267.8" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1191/1934243345.apply (2 samples, 0.03%)</title><rect x="268.0" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (9 samples, 0.13%)</title><rect x="268.7" y="1123.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (9 samples, 0.13%)</title><rect x="268.7" y="1107.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/CharsetNegotiator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="268.7" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (2 samples, 0.03%)</title><rect x="268.7" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="268.7" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="268.7" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (2 samples, 0.03%)</title><rect x="268.7" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (7 samples, 0.10%)</title><rect x="269.0" y="1091.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (7 samples, 0.10%)</title><rect x="269.0" y="1075.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (7 samples, 0.10%)</title><rect x="269.0" y="1059.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.0" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (7 samples, 0.10%)</title><rect x="269.0" y="1043.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (7 samples, 0.10%)</title><rect x="269.0" y="1027.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.0" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (7 samples, 0.10%)</title><rect x="269.0" y="1011.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (5 samples, 0.07%)</title><rect x="269.2" y="995.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (3 samples, 0.04%)</title><rect x="269.6" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$984/1328453781.apply (2 samples, 0.03%)</title><rect x="269.6" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.6" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1$adapted (2 samples, 0.03%)</title><rect x="269.6" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.6" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1 (2 samples, 0.03%)</title><rect x="269.6" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.6" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (51 samples, 0.76%)</title><rect x="270.3" y="1123.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (51 samples, 0.76%)</title><rect x="270.3" y="1107.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (50 samples, 0.75%)</title><rect x="270.4" y="1091.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$940/2014132213.apply (49 samples, 0.73%)</title><rect x="270.4" y="1075.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (49 samples, 0.73%)</title><rect x="270.4" y="1059.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$992/813441768.apply (49 samples, 0.73%)</title><rect x="270.4" y="1043.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (49 samples, 0.73%)</title><rect x="270.4" y="1027.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType$$Lambda$1203/2145686157.apply (44 samples, 0.66%)</title><rect x="270.6" y="1011.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType.$anonfun$map$5 (44 samples, 0.66%)</title><rect x="270.6" y="995.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2$$Lambda$1187/35167978.apply (44 samples, 0.66%)</title><rect x="270.6" y="979.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.$anonfun$apply$1 (44 samples, 0.66%)</title><rect x="270.6" y="963.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.6" y="974.0"></text>
</g>
<g>
<title>scala/Function1$$Lambda$1170/1052217621.apply (44 samples, 0.66%)</title><rect x="270.6" y="947.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.6" y="958.0"></text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (44 samples, 0.66%)</title><rect x="270.6" y="931.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.6" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1165/1108351186.apply (41 samples, 0.61%)</title><rect x="270.6" y="915.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.6" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseMarshaller$1 (41 samples, 0.61%)</title><rect x="270.6" y="899.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.6" y="910.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (40 samples, 0.60%)</title><rect x="270.8" y="883.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.8" y="894.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.getSerializedSize (5 samples, 0.07%)</title><rect x="270.8" y="867.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.8" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (3 samples, 0.04%)</title><rect x="271.0" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.0" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (3 samples, 0.04%)</title><rect x="271.0" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.0" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.writeTo (35 samples, 0.52%)</title><rect x="271.7" y="867.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.7" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (35 samples, 0.52%)</title><rect x="271.7" y="851.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.7" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (35 samples, 0.52%)</title><rect x="271.7" y="835.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.7" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.writeTo (35 samples, 0.52%)</title><rect x="271.7" y="819.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="830.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (6 samples, 0.09%)</title><rect x="271.8" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.8" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (5 samples, 0.07%)</title><rect x="272.0" y="787.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.0" y="798.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.writeTo (2 samples, 0.03%)</title><rect x="272.2" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.2" y="782.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.writeTo (2 samples, 0.03%)</title><rect x="272.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.6" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (28 samples, 0.42%)</title><rect x="272.9" y="803.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.9" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (28 samples, 0.42%)</title><rect x="272.9" y="787.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.9" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (26 samples, 0.39%)</title><rect x="273.1" y="771.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.1" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (26 samples, 0.39%)</title><rect x="273.1" y="755.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.1" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (4 samples, 0.06%)</title><rect x="273.1" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.1" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (3 samples, 0.04%)</title><rect x="273.3" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.3" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (3 samples, 0.04%)</title><rect x="273.3" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.3" y="718.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (3 samples, 0.04%)</title><rect x="273.3" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.3" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (2 samples, 0.03%)</title><rect x="273.4" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.4" y="686.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.writeTo (22 samples, 0.33%)</title><rect x="273.8" y="739.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.8" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.writeTo (21 samples, 0.31%)</title><rect x="274.0" y="723.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.0" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElement (20 samples, 0.30%)</title><rect x="274.1" y="707.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.1" y="718.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (19 samples, 0.28%)</title><rect x="274.3" y="691.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.3" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (15 samples, 0.22%)</title><rect x="274.5" y="675.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.5" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (15 samples, 0.22%)</title><rect x="274.5" y="659.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.5" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (15 samples, 0.22%)</title><rect x="274.5" y="643.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.5" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (14 samples, 0.21%)</title><rect x="274.5" y="627.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.5" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (10 samples, 0.15%)</title><rect x="274.7" y="611.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.7" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (10 samples, 0.15%)</title><rect x="274.7" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.7" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (2 samples, 0.03%)</title><rect x="274.7" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.7" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (2 samples, 0.03%)</title><rect x="274.7" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.7" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (2 samples, 0.03%)</title><rect x="274.7" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.7" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (2 samples, 0.03%)</title><rect x="274.7" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.7" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.writeTo (8 samples, 0.12%)</title><rect x="275.0" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.0" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.writeTo (7 samples, 0.10%)</title><rect x="275.2" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElement (7 samples, 0.10%)</title><rect x="275.2" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (7 samples, 0.10%)</title><rect x="275.2" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.2" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeStringNoTag (6 samples, 0.09%)</title><rect x="275.4" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.4" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.encode (4 samples, 0.06%)</title><rect x="275.7" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.7" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (3 samples, 0.04%)</title><rect x="275.9" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.9" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeStringNoTag (3 samples, 0.04%)</title><rect x="277.1" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.1" y="686.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.encode (3 samples, 0.04%)</title><rect x="277.1" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.1" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (3 samples, 0.04%)</title><rect x="277.1" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.1" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers$$Lambda$971/896763862.apply (3 samples, 0.04%)</title><rect x="277.9" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers.$anonfun$byteArrayMarshaller$1 (3 samples, 0.04%)</title><rect x="277.9" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (2 samples, 0.03%)</title><rect x="278.0" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="894.0"></text>
</g>
<g>
<title>scala/Option.flatMap (2 samples, 0.03%)</title><rect x="278.6" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$968/1768989079.apply (54 samples, 0.81%)</title><rect x="279.6" y="1267.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (54 samples, 0.81%)</title><rect x="279.6" y="1251.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (2 samples, 0.03%)</title><rect x="279.6" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (2 samples, 0.03%)</title><rect x="279.6" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$266/2057077925.apply (2 samples, 0.03%)</title><rect x="279.6" y="1203.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (2 samples, 0.03%)</title><rect x="279.6" y="1187.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.6" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1102/197435152.apply (2 samples, 0.03%)</title><rect x="279.6" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.6" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$4 (2 samples, 0.03%)</title><rect x="279.6" y="1155.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1117/1980726678.apply (50 samples, 0.75%)</title><rect x="280.0" y="1235.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (50 samples, 0.75%)</title><rect x="280.0" y="1219.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.0" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1153/1184883878.apply (47 samples, 0.70%)</title><rect x="280.0" y="1203.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.0" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (47 samples, 0.70%)</title><rect x="280.0" y="1187.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.0" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (47 samples, 0.70%)</title><rect x="280.0" y="1171.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (2 samples, 0.03%)</title><rect x="280.0" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (38 samples, 0.57%)</title><rect x="280.3" y="1155.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.3" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (36 samples, 0.54%)</title><rect x="280.3" y="1139.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (34 samples, 0.51%)</title><rect x="280.7" y="1123.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.51%)</title><rect x="280.7" y="1107.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 0.51%)</title><rect x="280.7" y="1091.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (31 samples, 0.46%)</title><rect x="280.9" y="1075.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 0.43%)</title><rect x="281.2" y="1059.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.43%)</title><rect x="281.2" y="1043.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.43%)</title><rect x="281.2" y="1027.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.43%)</title><rect x="281.2" y="1011.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.43%)</title><rect x="281.2" y="995.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.06%)</title><rect x="281.4" y="979.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="284.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.36%)</title><rect x="282.1" y="979.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="285.1" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.34%)</title><rect x="282.3" y="963.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.3" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.34%)</title><rect x="282.3" y="947.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="285.3" y="958.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.33%)</title><rect x="282.4" y="931.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.4" y="942.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.33%)</title><rect x="282.4" y="915.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.4" y="926.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.33%)</title><rect x="282.4" y="899.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="285.4" y="910.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.30%)</title><rect x="282.8" y="883.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.8" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.30%)</title><rect x="282.8" y="867.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="285.8" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.30%)</title><rect x="282.8" y="851.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.8" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.getContentCase (2 samples, 0.03%)</title><rect x="286.7" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.andThen (7 samples, 0.10%)</title><rect x="287.0" y="1155.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/Future.andThen$ (7 samples, 0.10%)</title><rect x="287.0" y="1139.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Future.andThen (7 samples, 0.10%)</title><rect x="287.0" y="1123.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.0" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.transform (7 samples, 0.10%)</title><rect x="287.0" y="1107.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.0" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (7 samples, 0.10%)</title><rect x="287.0" y="1091.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (7 samples, 0.10%)</title><rect x="287.0" y="1075.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.0" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="287.6" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="290.6" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="287.6" y="1043.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="290.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1111/52122369.apply (2 samples, 0.03%)</title><rect x="288.3" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (2 samples, 0.03%)</title><rect x="288.3" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (2 samples, 0.03%)</title><rect x="288.3" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="288.8" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="288.8" y="1219.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (2 samples, 0.03%)</title><rect x="288.8" y="1203.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.8" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="288.8" y="1187.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="291.8" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$940/2014132213.apply (15 samples, 0.22%)</title><rect x="289.3" y="1331.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (15 samples, 0.22%)</title><rect x="289.3" y="1315.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="292.3" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1095/994266438.apply (10 samples, 0.15%)</title><rect x="289.3" y="1299.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.3" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (10 samples, 0.15%)</title><rect x="289.3" y="1283.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.3" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (10 samples, 0.15%)</title><rect x="289.3" y="1267.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="292.3" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (10 samples, 0.15%)</title><rect x="289.3" y="1251.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.3" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (10 samples, 0.15%)</title><rect x="289.3" y="1235.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.3" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (10 samples, 0.15%)</title><rect x="289.3" y="1219.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.3" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (9 samples, 0.13%)</title><rect x="289.5" y="1203.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.5" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (9 samples, 0.13%)</title><rect x="289.5" y="1187.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (8 samples, 0.12%)</title><rect x="289.7" y="1171.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.7" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (8 samples, 0.12%)</title><rect x="289.7" y="1155.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.7" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (8 samples, 0.12%)</title><rect x="289.7" y="1139.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.7" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (8 samples, 0.12%)</title><rect x="289.7" y="1123.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.7" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (6 samples, 0.09%)</title><rect x="289.9" y="1107.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.9" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="289.9" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.9" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="289.9" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.9" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.9" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.9" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="289.9" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.9" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="289.9" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.9" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/PreJoinMessage$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="290.2" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.2" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/PreJoinMessage$1.parsePartialFrom (3 samples, 0.04%)</title><rect x="290.2" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.2" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/PreJoinMessage.&lt;init&gt; (3 samples, 0.04%)</title><rect x="290.2" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.2" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/PreJoinMessage.&lt;init&gt; (3 samples, 0.04%)</title><rect x="290.2" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.2" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="290.2" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.2" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="290.2" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.2" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="290.2" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.2" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (2 samples, 0.03%)</title><rect x="290.2" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.2" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (2 samples, 0.03%)</title><rect x="290.2" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.2" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (2 samples, 0.03%)</title><rect x="290.2" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.2" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (2 samples, 0.03%)</title><rect x="290.2" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.2" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (2 samples, 0.03%)</title><rect x="290.2" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="290.2" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="290.2" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="290.2" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.2" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1089/1262365021.apply (3 samples, 0.04%)</title><rect x="291.1" y="1299.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteArrayUnmarshaller$1 (3 samples, 0.04%)</title><rect x="291.1" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.1" y="1294.0"></text>
</g>
<g>
<title>akka/util/ByteString.toArray (3 samples, 0.04%)</title><rect x="291.1" y="1267.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$937/1067265784.apply (2 samples, 0.03%)</title><rect x="291.6" y="1299.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (2 samples, 0.03%)</title><rect x="291.6" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.6" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (43 samples, 0.64%)</title><rect x="292.0" y="1347.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.0" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (42 samples, 0.63%)</title><rect x="292.2" y="1331.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$FulfilledFuture.value (5 samples, 0.07%)</title><rect x="292.3" y="1315.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1149/1416907231.apply (3 samples, 0.04%)</title><rect x="292.3" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="1310.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="292.9" y="1299.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="295.9" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (34 samples, 0.51%)</title><rect x="293.6" y="1315.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.6" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (34 samples, 0.51%)</title><rect x="293.6" y="1299.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.6" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (34 samples, 0.51%)</title><rect x="293.6" y="1283.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (28 samples, 0.42%)</title><rect x="293.6" y="1267.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (27 samples, 0.40%)</title><rect x="293.7" y="1251.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.7" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (27 samples, 0.40%)</title><rect x="293.7" y="1235.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.7" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (26 samples, 0.39%)</title><rect x="293.7" y="1219.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (26 samples, 0.39%)</title><rect x="293.7" y="1203.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (25 samples, 0.37%)</title><rect x="293.7" y="1187.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (24 samples, 0.36%)</title><rect x="293.9" y="1171.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$534/21723014.apply (24 samples, 0.36%)</title><rect x="293.9" y="1155.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (24 samples, 0.36%)</title><rect x="293.9" y="1139.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (24 samples, 0.36%)</title><rect x="293.9" y="1123.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (23 samples, 0.34%)</title><rect x="294.1" y="1107.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (23 samples, 0.34%)</title><rect x="294.1" y="1091.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (23 samples, 0.34%)</title><rect x="294.1" y="1075.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (23 samples, 0.34%)</title><rect x="294.1" y="1059.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (22 samples, 0.33%)</title><rect x="294.3" y="1043.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (22 samples, 0.33%)</title><rect x="294.3" y="1027.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (22 samples, 0.33%)</title><rect x="294.3" y="1011.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (22 samples, 0.33%)</title><rect x="294.3" y="995.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (22 samples, 0.33%)</title><rect x="294.3" y="979.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (22 samples, 0.33%)</title><rect x="294.3" y="963.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.3" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (22 samples, 0.33%)</title><rect x="294.3" y="947.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.3" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (22 samples, 0.33%)</title><rect x="294.3" y="931.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.3" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (22 samples, 0.33%)</title><rect x="294.3" y="915.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.3" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (22 samples, 0.33%)</title><rect x="294.3" y="899.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.3" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (22 samples, 0.33%)</title><rect x="294.3" y="883.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.3" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (22 samples, 0.33%)</title><rect x="294.3" y="867.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.3" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (22 samples, 0.33%)</title><rect x="294.3" y="851.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.3" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (22 samples, 0.33%)</title><rect x="294.3" y="835.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.3" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (22 samples, 0.33%)</title><rect x="294.3" y="819.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (22 samples, 0.33%)</title><rect x="294.3" y="803.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (22 samples, 0.33%)</title><rect x="294.3" y="787.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (22 samples, 0.33%)</title><rect x="294.3" y="771.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (22 samples, 0.33%)</title><rect x="294.3" y="755.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.33%)</title><rect x="294.3" y="739.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.33%)</title><rect x="294.3" y="723.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.3" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (22 samples, 0.33%)</title><rect x="294.3" y="707.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="297.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.30%)</title><rect x="294.6" y="691.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.30%)</title><rect x="294.6" y="675.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.6" y="686.0"></text>
</g>
<g>
<title>sys_futex (19 samples, 0.28%)</title><rect x="294.8" y="659.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.8" y="670.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.28%)</title><rect x="294.8" y="643.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.28%)</title><rect x="294.8" y="627.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="297.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.25%)</title><rect x="295.2" y="611.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.25%)</title><rect x="295.2" y="595.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="298.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.25%)</title><rect x="295.2" y="579.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.2" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (3 samples, 0.04%)</title><rect x="298.5" y="1267.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.5" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (3 samples, 0.04%)</title><rect x="298.5" y="1251.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.5" y="1262.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="299.0" y="1267.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="302.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/872522004.apply (2 samples, 0.03%)</title><rect x="299.7" y="1379.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.7" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future.$anonfun$andThen$1 (2 samples, 0.03%)</title><rect x="299.7" y="1363.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.7" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (2 samples, 0.03%)</title><rect x="299.7" y="1347.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.7" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (2 samples, 0.03%)</title><rect x="299.7" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.7" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="299.7" y="1315.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="302.7" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="299.7" y="1299.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="302.7" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="299.7" y="1283.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.7" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="299.7" y="1267.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher$$Lambda$116/1640612861.apply$mcV$sp (4 samples, 0.06%)</title><rect x="300.1" y="1491.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.$anonfun$taskCleanup$1 (4 samples, 0.06%)</title><rect x="300.1" y="1475.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.addInhabitants (4 samples, 0.06%)</title><rect x="300.1" y="1459.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.cleanup (6 samples, 0.09%)</title><rect x="300.8" y="1491.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.8" y="1502.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.09%)</title><rect x="300.8" y="1475.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="303.8" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl$$anon$8.run (10 samples, 0.15%)</title><rect x="301.9" y="1491.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.9" y="1502.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.apply (6 samples, 0.09%)</title><rect x="302.0" y="1475.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.0" y="1486.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.apply (6 samples, 0.09%)</title><rect x="302.0" y="1459.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.0" y="1470.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (4 samples, 0.06%)</title><rect x="302.2" y="1443.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="302.6" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="302.6" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.6" y="1422.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Path.toString (2 samples, 0.03%)</title><rect x="302.6" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.6" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.03%)</title><rect x="303.1" y="1475.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.1" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.03%)</title><rect x="303.1" y="1459.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.1" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.03%)</title><rect x="303.1" y="1443.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.1" y="1454.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (2 samples, 0.03%)</title><rect x="303.1" y="1427.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.1" y="1438.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.03%)</title><rect x="303.1" y="1411.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.03%)</title><rect x="303.1" y="1395.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.1" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (3,212 samples, 48.06%)</title><rect x="303.6" y="1523.0" width="567.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.6" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (3,210 samples, 48.03%)</title><rect x="304.0" y="1507.0" width="566.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.0" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.13%)</title><rect x="304.2" y="1491.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.2" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="304.2" y="1475.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.07%)</title><rect x="304.2" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.07%)</title><rect x="304.2" y="1443.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.06%)</title><rect x="304.2" y="1427.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.06%)</title><rect x="304.2" y="1411.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.06%)</title><rect x="304.2" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.06%)</title><rect x="304.2" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.06%)</title><rect x="304.2" y="1363.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.06%)</title><rect x="304.2" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.06%)</title><rect x="304.2" y="1331.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.2" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="304.2" y="1315.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="307.2" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="304.2" y="1299.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="307.2" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="304.2" y="1283.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="307.2" y="1294.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="304.2" y="1267.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.2" y="1278.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="304.2" y="1251.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.2" y="1262.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="304.2" y="1235.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.2" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="304.2" y="1219.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.2" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="304.2" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.2" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="304.2" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (4 samples, 0.06%)</title><rect x="305.0" y="1475.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.0" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.hasSystemMessages (2 samples, 0.03%)</title><rect x="305.4" y="1459.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages$ (2 samples, 0.03%)</title><rect x="305.4" y="1443.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages (2 samples, 0.03%)</title><rect x="305.4" y="1427.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.4" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (848 samples, 12.69%)</title><rect x="305.8" y="1491.0" width="149.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="1502.0">akka/dispatch/Mailb..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (817 samples, 12.23%)</title><rect x="305.9" y="1475.0" width="144.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.9" y="1486.0">akka/actor/ActorCe..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (815 samples, 12.20%)</title><rect x="306.3" y="1459.0" width="143.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.3" y="1470.0">akka/actor/ActorCe..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (5 samples, 0.07%)</title><rect x="306.6" y="1443.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (5 samples, 0.07%)</title><rect x="306.6" y="1427.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (5 samples, 0.07%)</title><rect x="306.6" y="1411.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (5 samples, 0.07%)</title><rect x="306.6" y="1395.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.6" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (5 samples, 0.07%)</title><rect x="306.6" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$137/870361452.apply$mcV$sp (5 samples, 0.07%)</title><rect x="306.6" y="1363.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (5 samples, 0.07%)</title><rect x="306.6" y="1347.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (3 samples, 0.04%)</title><rect x="306.8" y="1331.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (3 samples, 0.04%)</title><rect x="306.8" y="1315.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (3 samples, 0.04%)</title><rect x="306.8" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="306.8" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="306.8" y="1267.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="306.8" y="1251.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="306.8" y="1235.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (4 samples, 0.06%)</title><rect x="307.5" y="1443.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.waitingForChildrenOrNull (4 samples, 0.06%)</title><rect x="307.5" y="1427.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull$ (4 samples, 0.06%)</title><rect x="307.5" y="1411.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.waitingForChildrenOrNull (4 samples, 0.06%)</title><rect x="307.5" y="1395.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (4 samples, 0.06%)</title><rect x="307.5" y="1379.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (4 samples, 0.06%)</title><rect x="307.5" y="1363.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs (4 samples, 0.06%)</title><rect x="307.5" y="1347.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (379 samples, 5.67%)</title><rect x="308.2" y="1443.0" width="66.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.2" y="1454.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (2 samples, 0.03%)</title><rect x="308.2" y="1427.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (2 samples, 0.03%)</title><rect x="308.2" y="1411.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (2 samples, 0.03%)</title><rect x="308.2" y="1395.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (50 samples, 0.75%)</title><rect x="308.6" y="1427.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (44 samples, 0.66%)</title><rect x="308.8" y="1411.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (36 samples, 0.54%)</title><rect x="308.9" y="1395.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.9" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (35 samples, 0.52%)</title><rect x="309.1" y="1379.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (32 samples, 0.48%)</title><rect x="309.1" y="1363.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (32 samples, 0.48%)</title><rect x="309.1" y="1347.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (28 samples, 0.42%)</title><rect x="309.1" y="1331.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (28 samples, 0.42%)</title><rect x="309.1" y="1315.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.1" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (18 samples, 0.27%)</title><rect x="309.6" y="1299.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (18 samples, 0.27%)</title><rect x="309.6" y="1283.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.27%)</title><rect x="309.6" y="1267.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.27%)</title><rect x="309.6" y="1251.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.27%)</title><rect x="309.6" y="1235.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="312.6" y="1246.0"></text>
</g>
<g>
<title>__write (18 samples, 0.27%)</title><rect x="309.6" y="1219.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="312.6" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.25%)</title><rect x="309.8" y="1203.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.8" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.25%)</title><rect x="309.8" y="1187.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.8" y="1198.0"></text>
</g>
<g>
<title>sys_write (16 samples, 0.24%)</title><rect x="310.0" y="1171.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.0" y="1182.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.22%)</title><rect x="310.2" y="1155.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.2" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (14 samples, 0.21%)</title><rect x="310.2" y="1139.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.2" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.21%)</title><rect x="310.2" y="1123.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.2" y="1134.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.21%)</title><rect x="310.2" y="1107.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.2" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.19%)</title><rect x="310.2" y="1091.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.2" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.19%)</title><rect x="310.2" y="1075.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="313.2" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.19%)</title><rect x="310.2" y="1059.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.2" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="312.8" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (3 samples, 0.04%)</title><rect x="312.8" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.8" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (4 samples, 0.06%)</title><rect x="313.3" y="1299.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (4 samples, 0.06%)</title><rect x="313.3" y="1283.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (4 samples, 0.06%)</title><rect x="313.3" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (4 samples, 0.06%)</title><rect x="313.3" y="1251.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (4 samples, 0.06%)</title><rect x="313.3" y="1235.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.3" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.06%)</title><rect x="313.3" y="1219.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/1441994947.apply$mcV$sp (4 samples, 0.06%)</title><rect x="313.3" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (4 samples, 0.06%)</title><rect x="313.3" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (4 samples, 0.06%)</title><rect x="313.3" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (4 samples, 0.06%)</title><rect x="313.3" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (2 samples, 0.03%)</title><rect x="313.5" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.5" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="313.5" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$554/2117762823.apply$mcV$sp (2 samples, 0.03%)</title><rect x="313.5" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$addWatcher$1 (2 samples, 0.03%)</title><rect x="313.5" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.03%)</title><rect x="313.5" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (2 samples, 0.03%)</title><rect x="313.5" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (2 samples, 0.03%)</title><rect x="313.5" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="313.5" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="313.5" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (2 samples, 0.03%)</title><rect x="314.0" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="314.0" y="1315.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.03%)</title><rect x="314.4" y="1331.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.4" y="1342.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (3 samples, 0.04%)</title><rect x="314.8" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (3 samples, 0.04%)</title><rect x="314.8" y="1347.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (3 samples, 0.04%)</title><rect x="314.8" y="1331.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (3 samples, 0.04%)</title><rect x="314.8" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="314.9" y="1299.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.03%)</title><rect x="314.9" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (7 samples, 0.10%)</title><rect x="315.3" y="1395.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.3" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$536/2125346660.apply (7 samples, 0.10%)</title><rect x="315.3" y="1379.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.3" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (7 samples, 0.10%)</title><rect x="315.3" y="1363.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.3" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (7 samples, 0.10%)</title><rect x="315.3" y="1347.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (5 samples, 0.07%)</title><rect x="315.3" y="1331.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$actor$Actor$_setter_$context_$eq (3 samples, 0.04%)</title><rect x="315.3" y="1315.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (2 samples, 0.03%)</title><rect x="315.8" y="1315.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="315.8" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="316.2" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (327 samples, 4.89%)</title><rect x="317.4" y="1427.0" width="57.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.4" y="1438.0">akka/s..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (327 samples, 4.89%)</title><rect x="317.4" y="1411.0" width="57.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.4" y="1422.0">akka/a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (327 samples, 4.89%)</title><rect x="317.4" y="1395.0" width="57.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.4" y="1406.0">akka/a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (327 samples, 4.89%)</title><rect x="317.4" y="1379.0" width="57.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="1390.0">akka/s..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (7 samples, 0.10%)</title><rect x="317.4" y="1363.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (7 samples, 0.10%)</title><rect x="317.4" y="1347.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (7 samples, 0.10%)</title><rect x="317.4" y="1331.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.stop (5 samples, 0.07%)</title><rect x="317.6" y="1315.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (3 samples, 0.04%)</title><rect x="317.9" y="1299.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (3 samples, 0.04%)</title><rect x="317.9" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop (3 samples, 0.04%)</title><rect x="317.9" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.9" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="318.1" y="1251.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="318.1" y="1235.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="318.1" y="1219.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Terminate.unlinked (2 samples, 0.03%)</title><rect x="318.1" y="1203.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (320 samples, 4.79%)</title><rect x="318.6" y="1363.0" width="56.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.6" y="1374.0">akka/s..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (316 samples, 4.73%)</title><rect x="318.8" y="1347.0" width="55.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.8" y="1358.0">akka/..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (121 samples, 1.81%)</title><rect x="319.3" y="1331.0" width="21.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.3" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.preStart (6 samples, 0.09%)</title><rect x="319.7" y="1315.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback (2 samples, 0.03%)</title><rect x="320.1" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.failureCallback$lzycompute (2 samples, 0.03%)</title><rect x="320.1" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (17 samples, 0.25%)</title><rect x="320.8" y="1315.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (7 samples, 0.10%)</title><rect x="321.1" y="1299.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.1" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$greater (4 samples, 0.06%)</title><rect x="321.3" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.3" y="1294.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater$ (4 samples, 0.06%)</title><rect x="321.3" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.3" y="1278.0"></text>
</g>
<g>
<title>scala/math/Ordered.$greater (4 samples, 0.06%)</title><rect x="321.3" y="1251.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.3" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (4 samples, 0.06%)</title><rect x="321.3" y="1235.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.3" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (4 samples, 0.06%)</title><rect x="321.3" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.3" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (4 samples, 0.06%)</title><rect x="321.3" y="1203.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.3" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (4 samples, 0.06%)</title><rect x="321.3" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.3" y="1198.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (3 samples, 0.04%)</title><rect x="321.5" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.5" y="1182.0"></text>
</g>
<g>
<title>scala/math/Ordering$Long$.compare (3 samples, 0.04%)</title><rect x="321.5" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.5" y="1166.0"></text>
</g>
<g>
<title>scala/math/Ordering$LongOrdering.compare$ (3 samples, 0.04%)</title><rect x="321.5" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.5" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.second (2 samples, 0.03%)</title><rect x="322.0" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.0" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second$ (2 samples, 0.03%)</title><rect x="322.0" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second (2 samples, 0.03%)</title><rect x="322.0" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.seconds (2 samples, 0.03%)</title><rect x="322.0" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds$ (2 samples, 0.03%)</title><rect x="322.0" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds (2 samples, 0.03%)</title><rect x="322.0" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.durationIn (2 samples, 0.03%)</title><rect x="322.0" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (8 samples, 0.12%)</title><rect x="322.3" y="1299.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (6 samples, 0.09%)</title><rect x="322.3" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (6 samples, 0.09%)</title><rect x="322.3" y="1267.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay$ (6 samples, 0.09%)</title><rect x="322.3" y="1251.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay (6 samples, 0.09%)</title><rect x="322.3" y="1235.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.&lt;init&gt; (5 samples, 0.07%)</title><rect x="322.3" y="1219.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (4 samples, 0.06%)</title><rect x="322.3" y="1203.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (4 samples, 0.06%)</title><rect x="322.3" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (2 samples, 0.03%)</title><rect x="323.4" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (2 samples, 0.03%)</title><rect x="323.4" y="1267.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (2 samples, 0.03%)</title><rect x="323.4" y="1251.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.preStart (5 samples, 0.07%)</title><rect x="323.8" y="1315.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.tryPull (3 samples, 0.04%)</title><rect x="324.1" y="1299.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.preStart (3 samples, 0.04%)</title><rect x="324.6" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.6" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Buffer$.apply (3 samples, 0.04%)</title><rect x="324.6" y="1299.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Buffer$.apply (2 samples, 0.03%)</title><rect x="324.8" y="1283.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/FixedSizeBuffer$.apply (2 samples, 0.03%)</title><rect x="324.8" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (77 samples, 1.15%)</title><rect x="325.2" y="1315.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (10 samples, 0.15%)</title><rect x="325.2" y="1299.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.15%)</title><rect x="325.2" y="1283.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (10 samples, 0.15%)</title><rect x="325.2" y="1267.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (10 samples, 0.15%)</title><rect x="325.2" y="1251.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.15%)</title><rect x="325.2" y="1235.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.15%)</title><rect x="325.2" y="1219.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.15%)</title><rect x="325.2" y="1203.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.2" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (10 samples, 0.15%)</title><rect x="325.2" y="1187.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.15%)</title><rect x="325.2" y="1171.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.13%)</title><rect x="325.3" y="1155.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.13%)</title><rect x="325.3" y="1139.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.13%)</title><rect x="325.3" y="1123.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.13%)</title><rect x="325.3" y="1107.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.13%)</title><rect x="325.3" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.13%)</title><rect x="325.3" y="1075.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.12%)</title><rect x="325.5" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.12%)</title><rect x="325.5" y="1043.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.12%)</title><rect x="325.5" y="1027.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.12%)</title><rect x="325.5" y="1011.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.10%)</title><rect x="325.7" y="995.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="328.7" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="325.9" y="979.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="325.9" y="963.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.9" y="974.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.09%)</title><rect x="325.9" y="947.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.9" y="958.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.09%)</title><rect x="325.9" y="931.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="328.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.09%)</title><rect x="325.9" y="915.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.09%)</title><rect x="325.9" y="899.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="328.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.09%)</title><rect x="325.9" y="883.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="328.9" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.09%)</title><rect x="325.9" y="867.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.9" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (46 samples, 0.69%)</title><rect x="327.1" y="1299.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (46 samples, 0.69%)</title><rect x="327.1" y="1283.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (2 samples, 0.03%)</title><rect x="327.1" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (43 samples, 0.64%)</title><rect x="327.5" y="1267.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (43 samples, 0.64%)</title><rect x="327.5" y="1251.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (43 samples, 0.64%)</title><rect x="327.5" y="1235.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (43 samples, 0.64%)</title><rect x="327.5" y="1219.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (43 samples, 0.64%)</title><rect x="327.5" y="1203.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.5" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="327.6" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="327.6" y="1171.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="327.6" y="1155.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (40 samples, 0.60%)</title><rect x="328.0" y="1187.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (40 samples, 0.60%)</title><rect x="328.0" y="1171.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (40 samples, 0.60%)</title><rect x="328.0" y="1155.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (40 samples, 0.60%)</title><rect x="328.0" y="1139.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (40 samples, 0.60%)</title><rect x="328.0" y="1123.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (40 samples, 0.60%)</title><rect x="328.0" y="1107.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (40 samples, 0.60%)</title><rect x="328.0" y="1091.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (40 samples, 0.60%)</title><rect x="328.0" y="1075.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (40 samples, 0.60%)</title><rect x="328.0" y="1059.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.60%)</title><rect x="328.0" y="1043.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (40 samples, 0.60%)</title><rect x="328.0" y="1027.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.0" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="328.4" y="1011.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="331.4" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.52%)</title><rect x="328.9" y="1011.0" width="6.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="331.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.45%)</title><rect x="329.8" y="995.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.45%)</title><rect x="329.8" y="979.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.8" y="990.0"></text>
</g>
<g>
<title>sys_futex (28 samples, 0.42%)</title><rect x="330.1" y="963.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.1" y="974.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.42%)</title><rect x="330.1" y="947.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.1" y="958.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.42%)</title><rect x="330.1" y="931.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.1" y="942.0"></text>
</g>
<g>
<title>wake_up_q (26 samples, 0.39%)</title><rect x="330.5" y="915.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.5" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (26 samples, 0.39%)</title><rect x="330.5" y="899.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.39%)</title><rect x="330.5" y="883.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.5" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (19 samples, 0.28%)</title><rect x="335.2" y="1299.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (16 samples, 0.24%)</title><rect x="335.6" y="1283.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (14 samples, 0.21%)</title><rect x="335.9" y="1267.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (12 samples, 0.18%)</title><rect x="336.1" y="1251.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (12 samples, 0.18%)</title><rect x="336.1" y="1235.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (12 samples, 0.18%)</title><rect x="336.1" y="1219.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (9 samples, 0.13%)</title><rect x="336.5" y="1203.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (9 samples, 0.13%)</title><rect x="336.5" y="1187.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (9 samples, 0.13%)</title><rect x="336.5" y="1171.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (8 samples, 0.12%)</title><rect x="336.5" y="1155.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.10%)</title><rect x="336.6" y="1139.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.10%)</title><rect x="336.6" y="1123.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (7 samples, 0.10%)</title><rect x="336.6" y="1107.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (6 samples, 0.09%)</title><rect x="336.8" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndMigrateFromInlineToNode (2 samples, 0.03%)</title><rect x="336.8" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="337.4" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="337.5" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashCollisionMapNode.updated (2 samples, 0.03%)</title><rect x="337.5" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (8 samples, 0.12%)</title><rect x="338.8" y="1315.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (7 samples, 0.10%)</title><rect x="338.9" y="1299.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$545/1361144757.apply (6 samples, 0.09%)</title><rect x="339.1" y="1283.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (6 samples, 0.09%)</title><rect x="339.1" y="1267.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (6 samples, 0.09%)</title><rect x="339.1" y="1251.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (6 samples, 0.09%)</title><rect x="339.1" y="1235.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.03%)</title><rect x="339.5" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="339.5" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.preStart (2 samples, 0.03%)</title><rect x="340.2" y="1315.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (23 samples, 0.34%)</title><rect x="340.7" y="1331.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (23 samples, 0.34%)</title><rect x="340.7" y="1315.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (5 samples, 0.07%)</title><rect x="340.7" y="1299.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="1310.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (3 samples, 0.04%)</title><rect x="341.1" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.1" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (2 samples, 0.03%)</title><rect x="341.2" y="1267.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="341.2" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (17 samples, 0.25%)</title><rect x="341.8" y="1299.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (16 samples, 0.24%)</title><rect x="341.8" y="1283.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.8" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (16 samples, 0.24%)</title><rect x="341.8" y="1267.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (16 samples, 0.24%)</title><rect x="341.8" y="1251.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (15 samples, 0.22%)</title><rect x="341.8" y="1235.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (15 samples, 0.22%)</title><rect x="341.8" y="1219.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (15 samples, 0.22%)</title><rect x="341.8" y="1203.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (14 samples, 0.21%)</title><rect x="341.8" y="1187.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (13 samples, 0.19%)</title><rect x="341.8" y="1171.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="341.9" y="1155.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (10 samples, 0.15%)</title><rect x="342.3" y="1155.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (10 samples, 0.15%)</title><rect x="342.3" y="1139.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.15%)</title><rect x="342.3" y="1123.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.3" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.15%)</title><rect x="342.3" y="1107.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.3" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.09%)</title><rect x="343.0" y="1091.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="346.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (169 samples, 2.53%)</title><rect x="344.8" y="1331.0" width="29.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.8" y="1342.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (169 samples, 2.53%)</title><rect x="344.8" y="1315.0" width="29.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.8" y="1326.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (4 samples, 0.06%)</title><rect x="344.9" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (4 samples, 0.06%)</title><rect x="344.9" y="1283.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.9" y="1294.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="345.3" y="1267.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="348.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (143 samples, 2.14%)</title><rect x="345.8" y="1299.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.8" y="1310.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onPull (2 samples, 0.03%)</title><rect x="346.0" y="1283.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$3.onPull (2 samples, 0.03%)</title><rect x="346.4" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$11.onPull (2 samples, 0.03%)</title><rect x="346.7" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onUpstreamFinish (3 samples, 0.04%)</title><rect x="347.6" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (2 samples, 0.03%)</title><rect x="347.8" y="1267.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="347.8" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (2 samples, 0.03%)</title><rect x="348.1" y="1283.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.enqueue (6 samples, 0.09%)</title><rect x="348.5" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onPull (3 samples, 0.04%)</title><rect x="348.5" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.5" y="1278.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="349.0" y="1267.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="352.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (22 samples, 0.33%)</title><rect x="349.5" y="1283.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (17 samples, 0.25%)</title><rect x="350.4" y="1267.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (17 samples, 0.25%)</title><rect x="350.4" y="1251.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="350.4" y="1235.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (17 samples, 0.25%)</title><rect x="350.4" y="1219.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (17 samples, 0.25%)</title><rect x="350.4" y="1203.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="350.4" y="1187.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (17 samples, 0.25%)</title><rect x="350.4" y="1171.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (17 samples, 0.25%)</title><rect x="350.4" y="1155.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (17 samples, 0.25%)</title><rect x="350.4" y="1139.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (15 samples, 0.22%)</title><rect x="350.4" y="1123.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (15 samples, 0.22%)</title><rect x="350.4" y="1107.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (15 samples, 0.22%)</title><rect x="350.4" y="1091.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (15 samples, 0.22%)</title><rect x="350.4" y="1075.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (15 samples, 0.22%)</title><rect x="350.4" y="1059.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.22%)</title><rect x="350.4" y="1043.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.22%)</title><rect x="350.4" y="1027.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (15 samples, 0.22%)</title><rect x="350.4" y="1011.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.22%)</title><rect x="350.4" y="995.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.22%)</title><rect x="350.4" y="979.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.19%)</title><rect x="350.8" y="963.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.8" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="350.8" y="947.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="353.8" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.15%)</title><rect x="351.3" y="947.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="354.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.15%)</title><rect x="351.3" y="931.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="354.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.15%)</title><rect x="351.3" y="915.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.3" y="926.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.15%)</title><rect x="351.3" y="899.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.3" y="910.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.15%)</title><rect x="351.3" y="883.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.3" y="894.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.15%)</title><rect x="351.3" y="867.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.3" y="878.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.12%)</title><rect x="351.7" y="851.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="354.7" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.12%)</title><rect x="351.7" y="835.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="354.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.12%)</title><rect x="351.7" y="819.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="354.7" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (2 samples, 0.03%)</title><rect x="353.1" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (2 samples, 0.03%)</title><rect x="353.1" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (2 samples, 0.03%)</title><rect x="353.1" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (2 samples, 0.03%)</title><rect x="353.1" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (2 samples, 0.03%)</title><rect x="353.1" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (2 samples, 0.03%)</title><rect x="353.1" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (85 samples, 1.27%)</title><rect x="353.4" y="1283.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (83 samples, 1.24%)</title><rect x="353.4" y="1267.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (4 samples, 0.06%)</title><rect x="353.4" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (4 samples, 0.06%)</title><rect x="353.4" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (4 samples, 0.06%)</title><rect x="353.4" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="353.6" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.6" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (79 samples, 1.18%)</title><rect x="354.1" y="1251.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.1" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (79 samples, 1.18%)</title><rect x="354.1" y="1235.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.1" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (79 samples, 1.18%)</title><rect x="354.1" y="1219.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="357.1" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (79 samples, 1.18%)</title><rect x="354.1" y="1203.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.1" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (79 samples, 1.18%)</title><rect x="354.1" y="1187.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.1" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (79 samples, 1.18%)</title><rect x="354.1" y="1171.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.1" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (79 samples, 1.18%)</title><rect x="354.1" y="1155.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (79 samples, 1.18%)</title><rect x="354.1" y="1139.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (78 samples, 1.17%)</title><rect x="354.3" y="1123.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (78 samples, 1.17%)</title><rect x="354.3" y="1107.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (66 samples, 0.99%)</title><rect x="354.7" y="1091.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (66 samples, 0.99%)</title><rect x="354.7" y="1075.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (64 samples, 0.96%)</title><rect x="354.7" y="1059.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.7" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (62 samples, 0.93%)</title><rect x="355.0" y="1043.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.0" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (62 samples, 0.93%)</title><rect x="355.0" y="1027.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.0" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (62 samples, 0.93%)</title><rect x="355.0" y="1011.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.0" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (62 samples, 0.93%)</title><rect x="355.0" y="995.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (62 samples, 0.93%)</title><rect x="355.0" y="979.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.0" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (60 samples, 0.90%)</title><rect x="355.2" y="963.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.2" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (58 samples, 0.87%)</title><rect x="355.5" y="947.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (56 samples, 0.84%)</title><rect x="355.5" y="931.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.5" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (55 samples, 0.82%)</title><rect x="355.5" y="915.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (55 samples, 0.82%)</title><rect x="355.5" y="899.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (55 samples, 0.82%)</title><rect x="355.5" y="883.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.5" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (55 samples, 0.82%)</title><rect x="355.5" y="867.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (55 samples, 0.82%)</title><rect x="355.5" y="851.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (55 samples, 0.82%)</title><rect x="355.5" y="835.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (55 samples, 0.82%)</title><rect x="355.5" y="819.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (55 samples, 0.82%)</title><rect x="355.5" y="803.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (55 samples, 0.82%)</title><rect x="355.5" y="787.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 0.82%)</title><rect x="355.5" y="771.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (55 samples, 0.82%)</title><rect x="355.5" y="755.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="355.5" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="358.5" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 0.78%)</title><rect x="356.1" y="739.0" width="9.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="359.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.70%)</title><rect x="357.0" y="723.0" width="8.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.70%)</title><rect x="357.0" y="707.0" width="8.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.0" y="718.0"></text>
</g>
<g>
<title>sys_futex (46 samples, 0.69%)</title><rect x="357.1" y="691.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.1" y="702.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.67%)</title><rect x="357.3" y="675.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (45 samples, 0.67%)</title><rect x="357.3" y="659.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="360.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 0.66%)</title><rect x="357.5" y="643.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.66%)</title><rect x="357.5" y="627.0" width="7.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.66%)</title><rect x="357.5" y="611.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="360.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="365.4" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.4" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (2 samples, 0.03%)</title><rect x="366.5" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.07%)</title><rect x="366.8" y="1091.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="367.0" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="367.4" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.4" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (2 samples, 0.03%)</title><rect x="367.7" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (2 samples, 0.03%)</title><rect x="367.7" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="367.7" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (2 samples, 0.03%)</title><rect x="368.4" y="1283.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.4" y="1294.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.15%)</title><rect x="369.1" y="1283.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="372.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (20 samples, 0.30%)</title><rect x="371.1" y="1299.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.1" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPull (4 samples, 0.06%)</title><rect x="371.1" y="1283.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPull (2 samples, 0.03%)</title><rect x="372.3" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPull (2 samples, 0.03%)</title><rect x="372.8" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (2 samples, 0.03%)</title><rect x="372.8" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="372.8" y="1251.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (2 samples, 0.03%)</title><rect x="373.4" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (2 samples, 0.03%)</title><rect x="373.4" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="373.4" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (2 samples, 0.03%)</title><rect x="373.7" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (2 samples, 0.03%)</title><rect x="374.1" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (2 samples, 0.03%)</title><rect x="374.1" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="374.1" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.03%)</title><rect x="374.8" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (2 samples, 0.03%)</title><rect x="374.8" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (2 samples, 0.03%)</title><rect x="374.8" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$EmptySet$.incl (2 samples, 0.03%)</title><rect x="374.8" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$EmptySet$.incl (2 samples, 0.03%)</title><rect x="374.8" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (133 samples, 1.99%)</title><rect x="375.1" y="1443.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.1" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (126 samples, 1.89%)</title><rect x="375.1" y="1427.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.1" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (126 samples, 1.89%)</title><rect x="375.1" y="1411.0" width="22.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.1" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.start (69 samples, 1.03%)</title><rect x="375.1" y="1395.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (69 samples, 1.03%)</title><rect x="375.1" y="1379.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (69 samples, 1.03%)</title><rect x="375.1" y="1363.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (69 samples, 1.03%)</title><rect x="375.1" y="1347.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.1" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (69 samples, 1.03%)</title><rect x="375.1" y="1331.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (69 samples, 1.03%)</title><rect x="375.1" y="1315.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (69 samples, 1.03%)</title><rect x="375.1" y="1299.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (69 samples, 1.03%)</title><rect x="375.1" y="1283.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (69 samples, 1.03%)</title><rect x="375.1" y="1267.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (69 samples, 1.03%)</title><rect x="375.1" y="1251.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (69 samples, 1.03%)</title><rect x="375.1" y="1235.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (69 samples, 1.03%)</title><rect x="375.1" y="1219.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (69 samples, 1.03%)</title><rect x="375.1" y="1203.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (69 samples, 1.03%)</title><rect x="375.1" y="1187.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (69 samples, 1.03%)</title><rect x="375.1" y="1171.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (68 samples, 1.02%)</title><rect x="375.3" y="1155.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.3" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="375.3" y="1139.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="378.3" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (63 samples, 0.94%)</title><rect x="376.2" y="1139.0" width="11.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="379.2" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.84%)</title><rect x="377.4" y="1123.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.4" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.84%)</title><rect x="377.4" y="1107.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.4" y="1118.0"></text>
</g>
<g>
<title>sys_futex (55 samples, 0.82%)</title><rect x="377.6" y="1091.0" width="9.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.6" y="1102.0"></text>
</g>
<g>
<title>do_futex (55 samples, 0.82%)</title><rect x="377.6" y="1075.0" width="9.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.6" y="1086.0"></text>
</g>
<g>
<title>futex_wake (55 samples, 0.82%)</title><rect x="377.6" y="1059.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.6" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (51 samples, 0.76%)</title><rect x="378.3" y="1043.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="381.3" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 0.76%)</title><rect x="378.3" y="1027.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="381.3" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 0.76%)</title><rect x="378.3" y="1011.0" width="9.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (56 samples, 0.84%)</title><rect x="387.3" y="1395.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (55 samples, 0.82%)</title><rect x="387.5" y="1379.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (55 samples, 0.82%)</title><rect x="387.5" y="1363.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (55 samples, 0.82%)</title><rect x="387.5" y="1347.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (52 samples, 0.78%)</title><rect x="387.5" y="1331.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (52 samples, 0.78%)</title><rect x="387.5" y="1315.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (52 samples, 0.78%)</title><rect x="387.5" y="1299.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (5 samples, 0.07%)</title><rect x="391.6" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.isTerminated (2 samples, 0.03%)</title><rect x="392.6" y="1283.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.path (2 samples, 0.03%)</title><rect x="393.3" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.swapLookup (2 samples, 0.03%)</title><rect x="393.7" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.$colon$colon$extension (2 samples, 0.03%)</title><rect x="394.7" y="1283.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.7" y="1294.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.06%)</title><rect x="395.4" y="1283.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="398.4" y="1294.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="396.3" y="1283.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="399.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (3 samples, 0.04%)</title><rect x="396.7" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (3 samples, 0.04%)</title><rect x="396.7" y="1315.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (3 samples, 0.04%)</title><rect x="396.7" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (2 samples, 0.03%)</title><rect x="396.7" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (7 samples, 0.10%)</title><rect x="397.4" y="1427.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (7 samples, 0.10%)</title><rect x="397.4" y="1411.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (7 samples, 0.10%)</title><rect x="397.4" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (6 samples, 0.09%)</title><rect x="397.6" y="1379.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (6 samples, 0.09%)</title><rect x="397.6" y="1363.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.6" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (6 samples, 0.09%)</title><rect x="397.6" y="1347.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (6 samples, 0.09%)</title><rect x="397.6" y="1331.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.6" y="1342.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (5 samples, 0.07%)</title><rect x="397.7" y="1315.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.7" y="1326.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (4 samples, 0.06%)</title><rect x="397.9" y="1299.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.9" y="1310.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (4 samples, 0.06%)</title><rect x="397.9" y="1283.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.9" y="1294.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (4 samples, 0.06%)</title><rect x="397.9" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (4 samples, 0.06%)</title><rect x="397.9" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (221 samples, 3.31%)</title><rect x="398.6" y="1443.0" width="39.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.6" y="1454.0">akk..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (221 samples, 3.31%)</title><rect x="398.6" y="1427.0" width="39.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.6" y="1438.0">akk..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (220 samples, 3.29%)</title><rect x="398.8" y="1411.0" width="38.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.8" y="1422.0">akk..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (218 samples, 3.26%)</title><rect x="399.2" y="1395.0" width="38.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.2" y="1406.0">akk..</text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (24 samples, 0.36%)</title><rect x="399.2" y="1379.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.2" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (24 samples, 0.36%)</title><rect x="399.2" y="1363.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.2" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (8 samples, 0.12%)</title><rect x="399.2" y="1347.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="399.2" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (6 samples, 0.09%)</title><rect x="399.5" y="1331.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (6 samples, 0.09%)</title><rect x="399.5" y="1315.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (5 samples, 0.07%)</title><rect x="399.7" y="1299.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (16 samples, 0.24%)</title><rect x="400.6" y="1347.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (11 samples, 0.16%)</title><rect x="400.6" y="1331.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (9 samples, 0.13%)</title><rect x="400.9" y="1315.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (7 samples, 0.10%)</title><rect x="401.1" y="1299.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (7 samples, 0.10%)</title><rect x="401.1" y="1283.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (2 samples, 0.03%)</title><rect x="402.0" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (5 samples, 0.07%)</title><rect x="402.5" y="1331.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.04%)</title><rect x="402.9" y="1315.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.9" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (40 samples, 0.60%)</title><rect x="403.4" y="1379.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.currentMessage_$eq (3 samples, 0.04%)</title><rect x="403.4" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (37 samples, 0.55%)</title><rect x="403.9" y="1363.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.9" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (36 samples, 0.54%)</title><rect x="404.1" y="1347.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.1" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (18 samples, 0.27%)</title><rect x="404.1" y="1331.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.06%)</title><rect x="404.6" y="1315.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (9 samples, 0.13%)</title><rect x="405.5" y="1315.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.set (7 samples, 0.10%)</title><rect x="405.5" y="1299.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (2 samples, 0.03%)</title><rect x="406.7" y="1299.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (18 samples, 0.27%)</title><rect x="407.3" y="1331.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (9 samples, 0.13%)</title><rect x="407.5" y="1315.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (9 samples, 0.13%)</title><rect x="407.5" y="1299.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (8 samples, 0.12%)</title><rect x="407.6" y="1283.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (8 samples, 0.12%)</title><rect x="407.6" y="1267.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (5 samples, 0.07%)</title><rect x="408.2" y="1251.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (8 samples, 0.12%)</title><rect x="409.0" y="1315.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (6 samples, 0.09%)</title><rect x="409.4" y="1299.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (5 samples, 0.07%)</title><rect x="409.6" y="1283.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stopFunctionRefs (6 samples, 0.09%)</title><rect x="410.5" y="1379.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs$ (6 samples, 0.09%)</title><rect x="410.5" y="1363.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stopFunctionRefs (6 samples, 0.09%)</title><rect x="410.5" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.foreach (5 samples, 0.07%)</title><rect x="410.6" y="1331.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (5 samples, 0.07%)</title><rect x="410.6" y="1315.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (5 samples, 0.07%)</title><rect x="410.6" y="1299.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorSystem$Settings.DebugLifecycle (4 samples, 0.06%)</title><rect x="411.7" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.7" y="1390.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="411.9" y="1363.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="414.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (103 samples, 1.54%)</title><rect x="412.4" y="1379.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (103 samples, 1.54%)</title><rect x="412.4" y="1363.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (103 samples, 1.54%)</title><rect x="412.4" y="1347.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (103 samples, 1.54%)</title><rect x="412.4" y="1331.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (103 samples, 1.54%)</title><rect x="412.4" y="1315.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (3 samples, 0.04%)</title><rect x="412.6" y="1299.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (3 samples, 0.04%)</title><rect x="412.6" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (3 samples, 0.04%)</title><rect x="412.6" y="1267.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (3 samples, 0.04%)</title><rect x="412.6" y="1251.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.6" y="1262.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (3 samples, 0.04%)</title><rect x="412.6" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/DeathWatchNotification.next_$eq (2 samples, 0.03%)</title><rect x="412.8" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (99 samples, 1.48%)</title><rect x="413.1" y="1299.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (99 samples, 1.48%)</title><rect x="413.1" y="1283.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (99 samples, 1.48%)</title><rect x="413.1" y="1267.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (99 samples, 1.48%)</title><rect x="413.1" y="1251.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (99 samples, 1.48%)</title><rect x="413.1" y="1235.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (99 samples, 1.48%)</title><rect x="413.1" y="1219.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (99 samples, 1.48%)</title><rect x="413.1" y="1203.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (99 samples, 1.48%)</title><rect x="413.1" y="1187.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (99 samples, 1.48%)</title><rect x="413.1" y="1171.0" width="17.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (99 samples, 1.48%)</title><rect x="413.1" y="1155.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (97 samples, 1.45%)</title><rect x="413.5" y="1139.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.5" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.13%)</title><rect x="413.5" y="1123.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="416.5" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="413.8" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="416.8" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="414.2" y="1107.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="417.2" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (88 samples, 1.32%)</title><rect x="415.0" y="1123.0" width="15.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="418.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 1.21%)</title><rect x="416.3" y="1107.0" width="14.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.3" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 1.21%)</title><rect x="416.3" y="1091.0" width="14.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.3" y="1102.0"></text>
</g>
<g>
<title>sys_futex (79 samples, 1.18%)</title><rect x="416.6" y="1075.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="419.6" y="1086.0"></text>
</g>
<g>
<title>do_futex (79 samples, 1.18%)</title><rect x="416.6" y="1059.0" width="14.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="419.6" y="1070.0"></text>
</g>
<g>
<title>futex_wake (77 samples, 1.15%)</title><rect x="417.0" y="1043.0" width="13.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="420.0" y="1054.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="418.0" y="1027.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="421.0" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (68 samples, 1.02%)</title><rect x="418.6" y="1027.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.6" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (68 samples, 1.02%)</title><rect x="418.6" y="1011.0" width="12.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="421.6" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (68 samples, 1.02%)</title><rect x="418.6" y="995.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="421.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (4 samples, 0.06%)</title><rect x="430.6" y="1379.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (4 samples, 0.06%)</title><rect x="430.6" y="1363.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.6" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (32 samples, 0.48%)</title><rect x="431.3" y="1379.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (32 samples, 0.48%)</title><rect x="431.3" y="1363.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (32 samples, 0.48%)</title><rect x="431.3" y="1347.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.3" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (32 samples, 0.48%)</title><rect x="431.3" y="1331.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (31 samples, 0.46%)</title><rect x="431.5" y="1315.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="431.6" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.03%)</title><rect x="431.6" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="431.6" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (24 samples, 0.36%)</title><rect x="432.0" y="1299.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (20 samples, 0.30%)</title><rect x="432.2" y="1283.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (19 samples, 0.28%)</title><rect x="432.3" y="1267.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.25%)</title><rect x="432.5" y="1251.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="432.5" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (13 samples, 0.19%)</title><rect x="432.9" y="1235.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (13 samples, 0.19%)</title><rect x="432.9" y="1219.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (12 samples, 0.18%)</title><rect x="432.9" y="1203.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (10 samples, 0.15%)</title><rect x="432.9" y="1187.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.parent (3 samples, 0.04%)</title><rect x="433.1" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (5 samples, 0.07%)</title><rect x="433.8" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (5 samples, 0.07%)</title><rect x="433.8" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="433.8" y="1139.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.8" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="433.8" y="1123.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.8" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="434.1" y="1107.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="437.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (2 samples, 0.03%)</title><rect x="434.6" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (2 samples, 0.03%)</title><rect x="434.6" y="1171.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.fillNull (2 samples, 0.03%)</title><rect x="434.6" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="437.6" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.03%)</title><rect x="434.6" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="435.2" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="435.2" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="435.7" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="435.7" y="1267.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="435.7" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.7" y="1262.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="435.9" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="436.2" y="1299.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.03%)</title><rect x="436.2" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.2" y="1294.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (2 samples, 0.03%)</title><rect x="436.9" y="1379.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.9" y="1390.0"></text>
</g>
<g>
<title>scala/collection/MapOps$$anon$3.hasNext (2 samples, 0.03%)</title><rect x="437.3" y="1379.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (70 samples, 1.05%)</title><rect x="437.6" y="1443.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (70 samples, 1.05%)</title><rect x="437.6" y="1427.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (70 samples, 1.05%)</title><rect x="437.6" y="1411.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (52 samples, 0.78%)</title><rect x="437.8" y="1395.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (52 samples, 0.78%)</title><rect x="437.8" y="1379.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (52 samples, 0.78%)</title><rect x="437.8" y="1363.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.children (2 samples, 0.03%)</title><rect x="438.2" y="1347.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.children$ (2 samples, 0.03%)</title><rect x="438.2" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.children (2 samples, 0.03%)</title><rect x="438.2" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.children (2 samples, 0.03%)</title><rect x="438.2" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="441.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (43 samples, 0.64%)</title><rect x="438.5" y="1347.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (43 samples, 0.64%)</title><rect x="438.5" y="1331.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (43 samples, 0.64%)</title><rect x="438.5" y="1315.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (3 samples, 0.04%)</title><rect x="438.5" y="1299.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (3 samples, 0.04%)</title><rect x="438.5" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (40 samples, 0.60%)</title><rect x="439.1" y="1299.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (40 samples, 0.60%)</title><rect x="439.1" y="1283.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (40 samples, 0.60%)</title><rect x="439.1" y="1267.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (40 samples, 0.60%)</title><rect x="439.1" y="1251.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (40 samples, 0.60%)</title><rect x="439.1" y="1235.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (40 samples, 0.60%)</title><rect x="439.1" y="1219.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (40 samples, 0.60%)</title><rect x="439.1" y="1203.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (40 samples, 0.60%)</title><rect x="439.1" y="1187.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.blacken (2 samples, 0.03%)</title><rect x="439.1" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (38 samples, 0.57%)</title><rect x="439.4" y="1171.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (8 samples, 0.12%)</title><rect x="439.6" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (7 samples, 0.10%)</title><rect x="439.8" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (5 samples, 0.07%)</title><rect x="439.8" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (5 samples, 0.07%)</title><rect x="439.8" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="440.1" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="440.1" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="440.1" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="440.1" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.03%)</title><rect x="440.6" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (28 samples, 0.42%)</title><rect x="441.0" y="1155.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (26 samples, 0.39%)</title><rect x="441.2" y="1139.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (26 samples, 0.39%)</title><rect x="441.2" y="1123.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (25 samples, 0.37%)</title><rect x="441.4" y="1107.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (25 samples, 0.37%)</title><rect x="441.4" y="1091.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (24 samples, 0.36%)</title><rect x="441.5" y="1075.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (22 samples, 0.33%)</title><rect x="441.9" y="1059.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (21 samples, 0.31%)</title><rect x="442.1" y="1043.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (20 samples, 0.30%)</title><rect x="442.2" y="1027.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (17 samples, 0.25%)</title><rect x="442.2" y="1011.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (17 samples, 0.25%)</title><rect x="442.2" y="995.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (17 samples, 0.25%)</title><rect x="442.2" y="979.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (16 samples, 0.24%)</title><rect x="442.4" y="963.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.4" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (16 samples, 0.24%)</title><rect x="442.4" y="947.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.4" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (15 samples, 0.22%)</title><rect x="442.6" y="931.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (15 samples, 0.22%)</title><rect x="442.6" y="915.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.6" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (14 samples, 0.21%)</title><rect x="442.8" y="899.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.8" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (14 samples, 0.21%)</title><rect x="442.8" y="883.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.8" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="442.8" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.8" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="442.8" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.8" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (12 samples, 0.18%)</title><rect x="443.1" y="867.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.1" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (11 samples, 0.16%)</title><rect x="443.1" y="851.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.1" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (10 samples, 0.15%)</title><rect x="443.3" y="835.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.3" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (9 samples, 0.13%)</title><rect x="443.3" y="819.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.3" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (3 samples, 0.04%)</title><rect x="443.3" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.3" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="443.5" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.5" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (6 samples, 0.09%)</title><rect x="443.8" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.8" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.09%)</title><rect x="443.8" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.8" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (5 samples, 0.07%)</title><rect x="444.0" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.0" y="782.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (4 samples, 0.06%)</title><rect x="444.0" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.0" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="444.0" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.0" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="444.0" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.0" y="734.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="444.0" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.0" y="718.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.03%)</title><rect x="444.4" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.4" y="750.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="444.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.4" y="734.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (2 samples, 0.03%)</title><rect x="444.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.4" y="718.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (2 samples, 0.03%)</title><rect x="445.2" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.&lt;init&gt; (2 samples, 0.03%)</title><rect x="445.2" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.2" y="1006.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (5 samples, 0.07%)</title><rect x="446.1" y="1347.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (5 samples, 0.07%)</title><rect x="446.1" y="1331.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anon$10.&lt;init&gt; (5 samples, 0.07%)</title><rect x="446.1" y="1315.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/OneForOneStrategy.&lt;init&gt; (5 samples, 0.07%)</title><rect x="446.1" y="1299.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (4 samples, 0.06%)</title><rect x="447.0" y="1395.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (4 samples, 0.06%)</title><rect x="447.0" y="1379.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor (3 samples, 0.04%)</title><rect x="447.0" y="1363.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (2 samples, 0.03%)</title><rect x="447.0" y="1347.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (2 samples, 0.03%)</title><rect x="447.0" y="1331.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (2 samples, 0.03%)</title><rect x="447.0" y="1315.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="447.0" y="1299.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="447.0" y="1283.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (4 samples, 0.06%)</title><rect x="447.9" y="1395.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (3 samples, 0.04%)</title><rect x="448.1" y="1379.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (3 samples, 0.04%)</title><rect x="448.1" y="1363.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (3 samples, 0.04%)</title><rect x="448.1" y="1347.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.1" y="1358.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="448.2" y="1331.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.2" y="1342.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="448.2" y="1315.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.2" y="1326.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (2 samples, 0.03%)</title><rect x="448.2" y="1299.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.2" y="1310.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (2 samples, 0.03%)</title><rect x="448.2" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.03%)</title><rect x="448.2" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (5 samples, 0.07%)</title><rect x="448.6" y="1395.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.6" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (5 samples, 0.07%)</title><rect x="448.6" y="1379.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1025/12269478.apply$mcV$sp (5 samples, 0.07%)</title><rect x="448.6" y="1363.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (5 samples, 0.07%)</title><rect x="448.6" y="1347.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (5 samples, 0.07%)</title><rect x="448.6" y="1331.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (5 samples, 0.07%)</title><rect x="448.6" y="1315.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (5 samples, 0.07%)</title><rect x="448.6" y="1299.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (5 samples, 0.07%)</title><rect x="448.6" y="1283.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (5 samples, 0.07%)</title><rect x="448.6" y="1267.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (5 samples, 0.07%)</title><rect x="448.6" y="1251.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="448.8" y="1235.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="448.8" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="448.8" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="448.8" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashCollisionMapNode.removed (2 samples, 0.03%)</title><rect x="449.1" y="1203.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.03%)</title><rect x="449.7" y="1395.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.7" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="449.7" y="1379.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.7" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (18 samples, 0.27%)</title><rect x="450.2" y="1475.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (18 samples, 0.27%)</title><rect x="450.2" y="1459.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (18 samples, 0.27%)</title><rect x="450.2" y="1443.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (3 samples, 0.04%)</title><rect x="450.2" y="1427.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (6 samples, 0.09%)</title><rect x="450.7" y="1427.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.7" y="1438.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (6 samples, 0.09%)</title><rect x="450.7" y="1411.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (5 samples, 0.07%)</title><rect x="451.8" y="1427.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.8" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (5 samples, 0.07%)</title><rect x="451.8" y="1411.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.8" y="1422.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="452.1" y="1395.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="455.1" y="1406.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="453.0" y="1427.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="456.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (6 samples, 0.09%)</title><rect x="453.4" y="1475.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Create.unlink (2 samples, 0.03%)</title><rect x="453.4" y="1459.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Terminate.unlink (2 samples, 0.03%)</title><rect x="453.7" y="1459.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.isClosed (4 samples, 0.06%)</title><rect x="454.4" y="1475.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (4 samples, 0.06%)</title><rect x="454.4" y="1459.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.4" y="1470.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (4 samples, 0.06%)</title><rect x="454.4" y="1443.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Supervise.next_$eq (2 samples, 0.03%)</title><rect x="454.8" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="455.1" y="1475.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.1" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (2,345 samples, 35.09%)</title><rect x="455.5" y="1491.0" width="414.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.5" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (2,145 samples, 32.10%)</title><rect x="455.8" y="1475.0" width="378.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.8" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (6 samples, 0.09%)</title><rect x="455.8" y="1459.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.8" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (6 samples, 0.09%)</title><rect x="455.8" y="1443.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (5 samples, 0.07%)</title><rect x="456.0" y="1427.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (4 samples, 0.06%)</title><rect x="456.2" y="1411.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.2" y="1422.0"></text>
</g>
<g>
<title>scala/Option.foreach (3 samples, 0.04%)</title><rect x="456.2" y="1395.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1035/761551278.apply (3 samples, 0.04%)</title><rect x="456.2" y="1379.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1$adapted (3 samples, 0.04%)</title><rect x="456.2" y="1363.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1 (3 samples, 0.04%)</title><rect x="456.2" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeoutIfNeeded (30 samples, 0.45%)</title><rect x="456.9" y="1459.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded$ (30 samples, 0.45%)</title><rect x="456.9" y="1443.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeoutIfNeeded (29 samples, 0.43%)</title><rect x="457.1" y="1427.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (29 samples, 0.43%)</title><rect x="457.1" y="1411.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (29 samples, 0.43%)</title><rect x="457.1" y="1395.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (29 samples, 0.43%)</title><rect x="457.1" y="1379.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.akka$actor$dungeon$ReceiveTimeout$$receiveTimeoutData_$eq (6 samples, 0.09%)</title><rect x="457.8" y="1363.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.8" y="1374.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (19 samples, 0.28%)</title><rect x="458.8" y="1363.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.8" y="1374.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.09%)</title><rect x="461.0" y="1347.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="464.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (2 samples, 0.03%)</title><rect x="462.2" y="1459.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.2" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (2 samples, 0.03%)</title><rect x="462.2" y="1443.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (2 samples, 0.03%)</title><rect x="462.2" y="1427.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (2 samples, 0.03%)</title><rect x="462.2" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (2 samples, 0.03%)</title><rect x="462.2" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (2 samples, 0.03%)</title><rect x="462.2" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.currentMessage_$eq (3 samples, 0.04%)</title><rect x="462.5" y="1459.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.5" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (2,104 samples, 31.48%)</title><rect x="463.1" y="1459.0" width="371.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.1" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (2 samples, 0.03%)</title><rect x="463.1" y="1443.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.03%)</title><rect x="463.1" y="1427.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.03%)</title><rect x="463.1" y="1411.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.1" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (2 samples, 0.03%)</title><rect x="463.1" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.1" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (2 samples, 0.03%)</title><rect x="463.1" y="1379.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.1" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (2 samples, 0.03%)</title><rect x="463.1" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (2 samples, 0.03%)</title><rect x="463.1" y="1347.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.1" y="1358.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (12 samples, 0.18%)</title><rect x="463.4" y="1443.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (12 samples, 0.18%)</title><rect x="463.4" y="1427.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (12 samples, 0.18%)</title><rect x="463.4" y="1411.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.4" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (11 samples, 0.16%)</title><rect x="463.6" y="1395.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.6" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (9 samples, 0.13%)</title><rect x="463.8" y="1379.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.8" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$150/599853708.apply$mcV$sp (2 samples, 0.03%)</title><rect x="463.8" y="1363.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.8" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$4 (2 samples, 0.03%)</title><rect x="463.8" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.8" y="1358.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.formatTimestamp (2 samples, 0.03%)</title><rect x="464.3" y="1363.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.3" y="1374.0"></text>
</g>
<g>
<title>akka/util/Helpers$.currentTimeMillisToUTCString (2 samples, 0.03%)</title><rect x="464.3" y="1347.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.3" y="1358.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (4 samples, 0.06%)</title><rect x="464.7" y="1363.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.7" y="1374.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (4 samples, 0.06%)</title><rect x="464.7" y="1347.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="464.8" y="1331.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.8" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (10 samples, 0.15%)</title><rect x="465.5" y="1443.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (10 samples, 0.15%)</title><rect x="465.5" y="1427.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (10 samples, 0.15%)</title><rect x="465.5" y="1411.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.5" y="1422.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (10 samples, 0.15%)</title><rect x="465.5" y="1395.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.5" y="1406.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (6 samples, 0.09%)</title><rect x="465.9" y="1379.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.9" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (5 samples, 0.07%)</title><rect x="465.9" y="1363.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.9" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (4 samples, 0.06%)</title><rect x="465.9" y="1347.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.9" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (4 samples, 0.06%)</title><rect x="465.9" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.9" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (2 samples, 0.03%)</title><rect x="465.9" y="1315.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (2 samples, 0.03%)</title><rect x="465.9" y="1299.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (2 samples, 0.03%)</title><rect x="465.9" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (2 samples, 0.03%)</title><rect x="465.9" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (2 samples, 0.03%)</title><rect x="465.9" y="1251.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1232/1329928672.apply (2 samples, 0.03%)</title><rect x="465.9" y="1235.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (2 samples, 0.03%)</title><rect x="465.9" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.9" y="1230.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (113 samples, 1.69%)</title><rect x="467.5" y="1443.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (113 samples, 1.69%)</title><rect x="467.5" y="1427.0" width="19.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (113 samples, 1.69%)</title><rect x="467.5" y="1411.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (113 samples, 1.69%)</title><rect x="467.5" y="1395.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (113 samples, 1.69%)</title><rect x="467.5" y="1379.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (90 samples, 1.35%)</title><rect x="467.5" y="1363.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (90 samples, 1.35%)</title><rect x="467.5" y="1347.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (90 samples, 1.35%)</title><rect x="467.5" y="1331.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (90 samples, 1.35%)</title><rect x="467.5" y="1315.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (8 samples, 0.12%)</title><rect x="467.5" y="1299.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (8 samples, 0.12%)</title><rect x="467.5" y="1283.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (8 samples, 0.12%)</title><rect x="467.5" y="1267.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (3 samples, 0.04%)</title><rect x="467.7" y="1251.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.04%)</title><rect x="467.7" y="1235.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.04%)</title><rect x="467.7" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="467.7" y="1203.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="467.7" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="467.8" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="467.8" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="467.8" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="467.8" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (3 samples, 0.04%)</title><rect x="468.2" y="1251.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (3 samples, 0.04%)</title><rect x="468.2" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (3 samples, 0.04%)</title><rect x="468.2" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (3 samples, 0.04%)</title><rect x="468.2" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.2" y="1214.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="468.4" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.4" y="1198.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="468.4" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.4" y="1182.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (2 samples, 0.03%)</title><rect x="468.4" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.4" y="1166.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (2 samples, 0.03%)</title><rect x="468.4" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.03%)</title><rect x="468.4" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (17 samples, 0.25%)</title><rect x="468.9" y="1299.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (17 samples, 0.25%)</title><rect x="468.9" y="1283.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (17 samples, 0.25%)</title><rect x="468.9" y="1267.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (17 samples, 0.25%)</title><rect x="468.9" y="1251.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (2 samples, 0.03%)</title><rect x="468.9" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (2 samples, 0.03%)</title><rect x="468.9" y="1219.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (2 samples, 0.03%)</title><rect x="468.9" y="1203.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="468.9" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="468.9" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="468.9" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.9" y="1166.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="468.9" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.9" y="1150.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="468.9" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.9" y="1134.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (2 samples, 0.03%)</title><rect x="468.9" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.9" y="1118.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (2 samples, 0.03%)</title><rect x="468.9" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.03%)</title><rect x="468.9" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (15 samples, 0.22%)</title><rect x="469.3" y="1235.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (14 samples, 0.21%)</title><rect x="469.4" y="1219.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.21%)</title><rect x="469.4" y="1203.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.21%)</title><rect x="469.4" y="1187.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1171.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1155.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1139.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1123.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1107.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="469.8" y="1091.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.09%)</title><rect x="469.8" y="1075.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="469.8" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="469.8" y="1043.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="469.8" y="1027.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="469.8" y="1011.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="470.0" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="470.0" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="470.0" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (2 samples, 0.03%)</title><rect x="470.0" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.0" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.0" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.0" y="1166.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="471.0" y="1139.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="474.0" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (2 samples, 0.03%)</title><rect x="471.5" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.5" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (2 samples, 0.03%)</title><rect x="471.5" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.5" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (2 samples, 0.03%)</title><rect x="471.5" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.5" y="1150.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="471.5" y="1123.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="474.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (27 samples, 0.40%)</title><rect x="471.9" y="1299.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (26 samples, 0.39%)</title><rect x="472.1" y="1283.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (26 samples, 0.39%)</title><rect x="472.1" y="1267.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (26 samples, 0.39%)</title><rect x="472.1" y="1251.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (26 samples, 0.39%)</title><rect x="472.1" y="1235.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (26 samples, 0.39%)</title><rect x="472.1" y="1219.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (26 samples, 0.39%)</title><rect x="472.1" y="1203.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (26 samples, 0.39%)</title><rect x="472.1" y="1187.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.1" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (26 samples, 0.39%)</title><rect x="472.1" y="1171.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (26 samples, 0.39%)</title><rect x="472.1" y="1155.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (26 samples, 0.39%)</title><rect x="472.1" y="1139.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (26 samples, 0.39%)</title><rect x="472.1" y="1123.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (26 samples, 0.39%)</title><rect x="472.1" y="1107.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (26 samples, 0.39%)</title><rect x="472.1" y="1091.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 0.39%)</title><rect x="472.1" y="1075.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.36%)</title><rect x="472.4" y="1059.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.4" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.36%)</title><rect x="472.4" y="1043.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="475.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.34%)</title><rect x="472.6" y="1027.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.34%)</title><rect x="472.6" y="1011.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="475.6" y="1022.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.33%)</title><rect x="472.8" y="995.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.8" y="1006.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.33%)</title><rect x="472.8" y="979.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.8" y="990.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.33%)</title><rect x="472.8" y="963.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.8" y="974.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.30%)</title><rect x="473.1" y="947.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.1" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.30%)</title><rect x="473.1" y="931.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.1" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.30%)</title><rect x="473.1" y="915.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.1" y="926.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (3 samples, 0.04%)</title><rect x="476.7" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (2 samples, 0.03%)</title><rect x="476.7" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (2 samples, 0.03%)</title><rect x="476.7" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (2 samples, 0.03%)</title><rect x="476.7" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (2 samples, 0.03%)</title><rect x="476.7" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="1246.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (35 samples, 0.52%)</title><rect x="477.2" y="1299.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (6 samples, 0.09%)</title><rect x="477.4" y="1283.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.4" y="1294.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (6 samples, 0.09%)</title><rect x="477.4" y="1267.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.4" y="1278.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (3 samples, 0.04%)</title><rect x="477.4" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (23 samples, 0.34%)</title><rect x="478.4" y="1283.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (4 samples, 0.06%)</title><rect x="478.6" y="1267.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (4 samples, 0.06%)</title><rect x="478.6" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.6" y="1262.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (4 samples, 0.06%)</title><rect x="478.6" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.6" y="1246.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (4 samples, 0.06%)</title><rect x="478.6" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (4 samples, 0.06%)</title><rect x="478.6" y="1203.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (4 samples, 0.06%)</title><rect x="478.6" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.getNode (2 samples, 0.03%)</title><rect x="479.0" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (7 samples, 0.10%)</title><rect x="479.3" y="1267.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (7 samples, 0.10%)</title><rect x="479.3" y="1251.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (7 samples, 0.10%)</title><rect x="479.3" y="1235.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (7 samples, 0.10%)</title><rect x="479.3" y="1219.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="479.7" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="479.7" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="479.7" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="479.7" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.7" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="479.7" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="479.7" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="479.7" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="479.7" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (9 samples, 0.13%)</title><rect x="480.7" y="1267.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (5 samples, 0.07%)</title><rect x="481.4" y="1251.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.actorRequirement$1 (2 samples, 0.03%)</title><rect x="481.4" y="1235.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.actorRequirement$lzycompute$1 (2 samples, 0.03%)</title><rect x="481.4" y="1219.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.4" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (2 samples, 0.03%)</title><rect x="481.4" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.4" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (2 samples, 0.03%)</title><rect x="481.4" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.4" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (2 samples, 0.03%)</title><rect x="481.4" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (2 samples, 0.03%)</title><rect x="481.4" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (3 samples, 0.04%)</title><rect x="481.8" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (3 samples, 0.04%)</title><rect x="481.8" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getProducedMessageQueueType (3 samples, 0.04%)</title><rect x="481.8" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.8" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (3 samples, 0.04%)</title><rect x="481.8" y="1187.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.8" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (3 samples, 0.04%)</title><rect x="481.8" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (2 samples, 0.03%)</title><rect x="482.0" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (4 samples, 0.06%)</title><rect x="482.7" y="1283.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (4 samples, 0.06%)</title><rect x="482.7" y="1267.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (4 samples, 0.06%)</title><rect x="482.7" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (4 samples, 0.06%)</title><rect x="482.7" y="1235.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (4 samples, 0.06%)</title><rect x="482.7" y="1219.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (4 samples, 0.06%)</title><rect x="482.7" y="1203.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.isEmpty (4 samples, 0.06%)</title><rect x="482.7" y="1187.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty$ (4 samples, 0.06%)</title><rect x="482.7" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty (3 samples, 0.04%)</title><rect x="482.8" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (3 samples, 0.04%)</title><rect x="482.8" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (2 samples, 0.03%)</title><rect x="483.0" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$19.hasNext (2 samples, 0.03%)</title><rect x="483.0" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.0" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (10 samples, 0.15%)</title><rect x="483.4" y="1363.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (10 samples, 0.15%)</title><rect x="483.4" y="1347.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (10 samples, 0.15%)</title><rect x="483.4" y="1331.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (6 samples, 0.09%)</title><rect x="483.4" y="1315.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (6 samples, 0.09%)</title><rect x="483.4" y="1299.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/1441994947.apply$mcV$sp (6 samples, 0.09%)</title><rect x="483.4" y="1283.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (6 samples, 0.09%)</title><rect x="483.4" y="1267.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="483.4" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="483.4" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="483.4" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="483.4" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.4" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="483.4" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (4 samples, 0.06%)</title><rect x="483.7" y="1251.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.06%)</title><rect x="483.7" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.06%)</title><rect x="483.7" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="483.7" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="483.7" y="1187.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="483.7" y="1171.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="483.7" y="1155.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.04%)</title><rect x="483.7" y="1139.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (4 samples, 0.06%)</title><rect x="484.4" y="1315.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (3 samples, 0.04%)</title><rect x="484.4" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.getNode (2 samples, 0.03%)</title><rect x="484.6" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$902/95072878.apply (10 samples, 0.15%)</title><rect x="485.5" y="1363.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (10 samples, 0.15%)</title><rect x="485.5" y="1347.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (10 samples, 0.15%)</title><rect x="485.5" y="1331.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (8 samples, 0.12%)</title><rect x="485.7" y="1315.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (6 samples, 0.09%)</title><rect x="485.7" y="1299.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (5 samples, 0.07%)</title><rect x="485.7" y="1283.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (4 samples, 0.06%)</title><rect x="485.8" y="1267.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (4 samples, 0.06%)</title><rect x="485.8" y="1251.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.8" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (4 samples, 0.06%)</title><rect x="485.8" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (2 samples, 0.03%)</title><rect x="486.0" y="1219.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.0" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/896138248.apply (2 samples, 0.03%)</title><rect x="486.0" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (2 samples, 0.03%)</title><rect x="486.7" y="1299.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (2 samples, 0.03%)</title><rect x="486.7" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (2 samples, 0.03%)</title><rect x="486.7" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="486.7" y="1251.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (2 samples, 0.03%)</title><rect x="486.7" y="1235.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.03%)</title><rect x="486.7" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.7" y="1230.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (3 samples, 0.04%)</title><rect x="487.4" y="1443.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (3 samples, 0.04%)</title><rect x="487.4" y="1427.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (3 samples, 0.04%)</title><rect x="487.4" y="1411.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.4" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (3 samples, 0.04%)</title><rect x="487.4" y="1395.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (3 samples, 0.04%)</title><rect x="487.4" y="1379.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (3 samples, 0.04%)</title><rect x="487.4" y="1363.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (3 samples, 0.04%)</title><rect x="487.4" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.04%)</title><rect x="487.4" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.04%)</title><rect x="487.4" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.04%)</title><rect x="487.4" y="1299.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.4" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (3 samples, 0.04%)</title><rect x="487.4" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.4" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (3 samples, 0.04%)</title><rect x="487.4" y="1267.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.4" y="1278.0"></text>
</g>
<g>
<title>akka/routing/Router.send (2 samples, 0.03%)</title><rect x="487.6" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.6" y="1262.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (2 samples, 0.03%)</title><rect x="487.6" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.03%)</title><rect x="487.6" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="487.6" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="487.6" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="487.6" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="487.6" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="487.6" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="487.6" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="487.6" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="487.6" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="487.6" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="487.6" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.6" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="487.6" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.6" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="487.6" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="487.6" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.03%)</title><rect x="487.6" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.start (2 samples, 0.03%)</title><rect x="487.6" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (2 samples, 0.03%)</title><rect x="487.6" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="487.6" y="947.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="490.6" y="958.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (441 samples, 6.60%)</title><rect x="488.0" y="1443.0" width="77.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.0" y="1454.0">akka/io/T..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (441 samples, 6.60%)</title><rect x="488.0" y="1427.0" width="77.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.0" y="1438.0">akka/acto..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (441 samples, 6.60%)</title><rect x="488.0" y="1411.0" width="77.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.0" y="1422.0">akka/acto..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (24 samples, 0.36%)</title><rect x="488.0" y="1395.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (3 samples, 0.04%)</title><rect x="488.1" y="1379.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (20 samples, 0.30%)</title><rect x="488.7" y="1379.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (8 samples, 0.12%)</title><rect x="488.7" y="1363.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (8 samples, 0.12%)</title><rect x="488.7" y="1347.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (8 samples, 0.12%)</title><rect x="488.7" y="1331.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (7 samples, 0.10%)</title><rect x="488.9" y="1315.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.9" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (7 samples, 0.10%)</title><rect x="488.9" y="1299.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/1441994947.apply$mcV$sp (7 samples, 0.10%)</title><rect x="488.9" y="1283.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (7 samples, 0.10%)</title><rect x="488.9" y="1267.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (5 samples, 0.07%)</title><rect x="488.9" y="1251.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (5 samples, 0.07%)</title><rect x="488.9" y="1235.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (3 samples, 0.04%)</title><rect x="489.0" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.0" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.04%)</title><rect x="489.0" y="1203.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$554/2117762823.apply$mcV$sp (3 samples, 0.04%)</title><rect x="489.0" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$addWatcher$1 (3 samples, 0.04%)</title><rect x="489.0" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (3 samples, 0.04%)</title><rect x="489.0" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (3 samples, 0.04%)</title><rect x="489.0" y="1139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (3 samples, 0.04%)</title><rect x="489.0" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="489.0" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.04%)</title><rect x="489.0" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (2 samples, 0.03%)</title><rect x="489.7" y="1251.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.7" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (11 samples, 0.16%)</title><rect x="490.1" y="1363.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (10 samples, 0.15%)</title><rect x="490.1" y="1347.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (10 samples, 0.15%)</title><rect x="490.1" y="1331.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (10 samples, 0.15%)</title><rect x="490.1" y="1315.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (8 samples, 0.12%)</title><rect x="490.3" y="1299.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (7 samples, 0.10%)</title><rect x="490.3" y="1283.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (4 samples, 0.06%)</title><rect x="490.6" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.6" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.06%)</title><rect x="490.6" y="1251.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$925/834400155.apply$mcV$sp (4 samples, 0.06%)</title><rect x="490.6" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$remWatcher$1 (4 samples, 0.06%)</title><rect x="490.6" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (4 samples, 0.06%)</title><rect x="490.6" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (4 samples, 0.06%)</title><rect x="490.6" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (4 samples, 0.06%)</title><rect x="490.6" y="1171.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (4 samples, 0.06%)</title><rect x="490.6" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (4 samples, 0.06%)</title><rect x="490.6" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (3 samples, 0.04%)</title><rect x="490.6" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.6" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (12 samples, 0.18%)</title><rect x="492.2" y="1395.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.2" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (12 samples, 0.18%)</title><rect x="492.2" y="1379.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.12%)</title><rect x="492.2" y="1363.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.2" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$549/159081775.apply (8 samples, 0.12%)</title><rect x="492.2" y="1347.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.2" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.12%)</title><rect x="492.2" y="1331.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.12%)</title><rect x="492.2" y="1315.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.12%)</title><rect x="492.2" y="1299.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.12%)</title><rect x="492.2" y="1283.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.12%)</title><rect x="492.2" y="1267.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (8 samples, 0.12%)</title><rect x="492.2" y="1251.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (8 samples, 0.12%)</title><rect x="492.2" y="1235.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (8 samples, 0.12%)</title><rect x="492.2" y="1219.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.12%)</title><rect x="492.2" y="1203.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.12%)</title><rect x="492.2" y="1187.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.12%)</title><rect x="492.2" y="1171.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.12%)</title><rect x="492.2" y="1155.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.10%)</title><rect x="492.2" y="1139.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.10%)</title><rect x="492.2" y="1123.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.10%)</title><rect x="492.2" y="1107.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.10%)</title><rect x="492.2" y="1091.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.09%)</title><rect x="492.2" y="1075.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.09%)</title><rect x="492.2" y="1059.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.09%)</title><rect x="492.2" y="1043.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.09%)</title><rect x="492.2" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.09%)</title><rect x="492.2" y="1011.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.09%)</title><rect x="492.2" y="995.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.09%)</title><rect x="492.2" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.09%)</title><rect x="492.2" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.09%)</title><rect x="492.2" y="947.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.09%)</title><rect x="492.2" y="931.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.09%)</title><rect x="492.2" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.2" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.09%)</title><rect x="492.2" y="899.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="495.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="492.4" y="883.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="492.4" y="867.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.4" y="878.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="492.4" y="851.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.4" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="492.4" y="835.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="492.4" y="819.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.4" y="830.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="492.7" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="492.7" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="492.7" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (3 samples, 0.04%)</title><rect x="493.6" y="1363.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.6" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (3 samples, 0.04%)</title><rect x="493.6" y="1347.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (3 samples, 0.04%)</title><rect x="493.6" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (3 samples, 0.04%)</title><rect x="493.6" y="1315.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (3 samples, 0.04%)</title><rect x="493.6" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.6" y="1310.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (2 samples, 0.03%)</title><rect x="493.6" y="1283.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="496.6" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (4 samples, 0.06%)</title><rect x="494.3" y="1395.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (4 samples, 0.06%)</title><rect x="494.3" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$stop (4 samples, 0.06%)</title><rect x="494.3" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (3 samples, 0.04%)</title><rect x="494.3" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="495.0" y="1395.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.0" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.03%)</title><rect x="495.0" y="1379.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.0" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$1288/813339962.apply$mcV$sp (2 samples, 0.03%)</title><rect x="495.0" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (2 samples, 0.03%)</title><rect x="495.0" y="1347.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.0" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (2 samples, 0.03%)</title><rect x="495.0" y="1331.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.0" y="1342.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="495.6" y="1395.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="498.6" y="1406.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (396 samples, 5.93%)</title><rect x="495.9" y="1395.0" width="69.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.9" y="1406.0">scala/P..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (305 samples, 4.56%)</title><rect x="496.4" y="1379.0" width="53.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.4" y="1390.0">akka/..</text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (228 samples, 3.41%)</title><rect x="496.4" y="1363.0" width="40.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.4" y="1374.0">akk..</text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (2 samples, 0.03%)</title><rect x="496.6" y="1347.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (2 samples, 0.03%)</title><rect x="496.6" y="1331.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (61 samples, 0.91%)</title><rect x="497.0" y="1347.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.0" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (4 samples, 0.06%)</title><rect x="497.3" y="1331.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.3" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (4 samples, 0.06%)</title><rect x="497.3" y="1315.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.3" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (4 samples, 0.06%)</title><rect x="497.3" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.3" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (4 samples, 0.06%)</title><rect x="497.3" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.3" y="1294.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (4 samples, 0.06%)</title><rect x="497.3" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (4 samples, 0.06%)</title><rect x="497.3" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.3" y="1262.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (4 samples, 0.06%)</title><rect x="497.3" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.3" y="1246.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (3 samples, 0.04%)</title><rect x="497.5" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.5" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (2 samples, 0.03%)</title><rect x="497.5" y="1203.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.5" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (2 samples, 0.03%)</title><rect x="497.5" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.5" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.extractMsg (2 samples, 0.03%)</title><rect x="498.0" y="1331.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (11 samples, 0.16%)</title><rect x="498.4" y="1331.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (11 samples, 0.16%)</title><rect x="498.4" y="1315.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (11 samples, 0.16%)</title><rect x="498.4" y="1299.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.4" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (10 samples, 0.15%)</title><rect x="498.6" y="1283.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.6" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (9 samples, 0.13%)</title><rect x="498.7" y="1267.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.7" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (9 samples, 0.13%)</title><rect x="498.7" y="1251.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.7" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (9 samples, 0.13%)</title><rect x="498.7" y="1235.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.7" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (9 samples, 0.13%)</title><rect x="498.7" y="1219.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (9 samples, 0.13%)</title><rect x="498.7" y="1203.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (9 samples, 0.13%)</title><rect x="498.7" y="1187.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (6 samples, 0.09%)</title><rect x="499.1" y="1171.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (6 samples, 0.09%)</title><rect x="499.1" y="1155.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (5 samples, 0.07%)</title><rect x="499.3" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (5 samples, 0.07%)</title><rect x="499.3" y="1123.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="499.3" y="1107.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.3" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="499.3" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.3" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="499.8" y="1075.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="502.8" y="1086.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (36 samples, 0.54%)</title><rect x="500.3" y="1331.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.3" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (28 samples, 0.42%)</title><rect x="500.7" y="1315.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (28 samples, 0.42%)</title><rect x="500.7" y="1299.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.7" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (28 samples, 0.42%)</title><rect x="500.7" y="1283.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 0.40%)</title><rect x="500.9" y="1267.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (27 samples, 0.40%)</title><rect x="500.9" y="1251.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.40%)</title><rect x="500.9" y="1235.0" width="4.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="503.9" y="1246.0"></text>
</g>
<g>
<title>__write (27 samples, 0.40%)</title><rect x="500.9" y="1219.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="503.9" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.39%)</title><rect x="501.0" y="1203.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.0" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.39%)</title><rect x="501.0" y="1187.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="504.0" y="1198.0"></text>
</g>
<g>
<title>sys_write (25 samples, 0.37%)</title><rect x="501.2" y="1171.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="504.2" y="1182.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.36%)</title><rect x="501.4" y="1155.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.4" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.33%)</title><rect x="501.6" y="1139.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.6" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.33%)</title><rect x="501.6" y="1123.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="504.6" y="1134.0"></text>
</g>
<g>
<title>pipe_write (21 samples, 0.31%)</title><rect x="501.7" y="1107.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="504.7" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.28%)</title><rect x="501.9" y="1091.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="504.9" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.28%)</title><rect x="501.9" y="1075.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="504.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.28%)</title><rect x="501.9" y="1059.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.9" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (5 samples, 0.07%)</title><rect x="505.8" y="1315.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (5 samples, 0.07%)</title><rect x="505.8" y="1299.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (5 samples, 0.07%)</title><rect x="505.8" y="1283.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (5 samples, 0.07%)</title><rect x="505.8" y="1267.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="506.2" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (2 samples, 0.03%)</title><rect x="506.2" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.apply (6 samples, 0.09%)</title><rect x="506.7" y="1331.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.7" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (6 samples, 0.09%)</title><rect x="506.7" y="1315.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.7" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (6 samples, 0.09%)</title><rect x="506.7" y="1299.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.7" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (6 samples, 0.09%)</title><rect x="506.7" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (6 samples, 0.09%)</title><rect x="506.7" y="1267.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.7" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (2 samples, 0.03%)</title><rect x="506.7" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (3 samples, 0.04%)</title><rect x="507.2" y="1251.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (3 samples, 0.04%)</title><rect x="507.2" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (3 samples, 0.04%)</title><rect x="507.2" y="1219.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/ArraySeq$ofRef.iterator (2 samples, 0.03%)</title><rect x="507.4" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$ArrayIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="507.4" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.4" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (164 samples, 2.45%)</title><rect x="507.7" y="1347.0" width="29.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.7" y="1358.0">ak..</text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (62 samples, 0.93%)</title><rect x="508.3" y="1331.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$549/159081775.apply (62 samples, 0.93%)</title><rect x="508.3" y="1315.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (62 samples, 0.93%)</title><rect x="508.3" y="1299.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (62 samples, 0.93%)</title><rect x="508.3" y="1283.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (62 samples, 0.93%)</title><rect x="508.3" y="1267.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (62 samples, 0.93%)</title><rect x="508.3" y="1251.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (62 samples, 0.93%)</title><rect x="508.3" y="1235.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (57 samples, 0.85%)</title><rect x="509.2" y="1219.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (57 samples, 0.85%)</title><rect x="509.2" y="1203.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (57 samples, 0.85%)</title><rect x="509.2" y="1187.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (55 samples, 0.82%)</title><rect x="509.2" y="1171.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (54 samples, 0.81%)</title><rect x="509.2" y="1155.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (54 samples, 0.81%)</title><rect x="509.2" y="1139.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (54 samples, 0.81%)</title><rect x="509.2" y="1123.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (53 samples, 0.79%)</title><rect x="509.2" y="1107.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (53 samples, 0.79%)</title><rect x="509.2" y="1091.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (53 samples, 0.79%)</title><rect x="509.2" y="1075.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (53 samples, 0.79%)</title><rect x="509.2" y="1059.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (52 samples, 0.78%)</title><rect x="509.2" y="1043.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (52 samples, 0.78%)</title><rect x="509.2" y="1027.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (52 samples, 0.78%)</title><rect x="509.2" y="1011.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.2" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (52 samples, 0.78%)</title><rect x="509.2" y="995.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.2" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (52 samples, 0.78%)</title><rect x="509.2" y="979.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (52 samples, 0.78%)</title><rect x="509.2" y="963.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (52 samples, 0.78%)</title><rect x="509.2" y="947.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (51 samples, 0.76%)</title><rect x="509.3" y="931.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (51 samples, 0.76%)</title><rect x="509.3" y="915.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 0.76%)</title><rect x="509.3" y="899.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 0.76%)</title><rect x="509.3" y="883.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.09%)</title><rect x="509.5" y="867.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="512.5" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="509.7" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="512.7" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (44 samples, 0.66%)</title><rect x="510.6" y="867.0" width="7.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="513.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.61%)</title><rect x="511.1" y="851.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.60%)</title><rect x="511.1" y="835.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="514.1" y="846.0"></text>
</g>
<g>
<title>sys_futex (39 samples, 0.58%)</title><rect x="511.3" y="819.0" width="6.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.3" y="830.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.58%)</title><rect x="511.3" y="803.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.3" y="814.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.58%)</title><rect x="511.3" y="787.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.3" y="798.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="511.3" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="514.3" y="782.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.14 (2 samples, 0.03%)</title><rect x="511.3" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="514.3" y="766.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.55%)</title><rect x="511.6" y="771.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.6" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.55%)</title><rect x="511.6" y="755.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.55%)</title><rect x="511.6" y="739.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.6" y="750.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (2 samples, 0.03%)</title><rect x="519.2" y="1331.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.2" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (95 samples, 1.42%)</title><rect x="519.9" y="1331.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.9" y="1342.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (3 samples, 0.04%)</title><rect x="520.1" y="1315.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="523.1" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (3 samples, 0.04%)</title><rect x="520.1" y="1299.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="523.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (89 samples, 1.33%)</title><rect x="521.0" y="1315.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (89 samples, 1.33%)</title><rect x="521.0" y="1299.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (89 samples, 1.33%)</title><rect x="521.0" y="1283.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (89 samples, 1.33%)</title><rect x="521.0" y="1267.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (89 samples, 1.33%)</title><rect x="521.0" y="1251.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.0" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="521.2" y="1235.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="524.2" y="1246.0"></text>
</g>
<g>
<title>__strerror_r (2 samples, 0.03%)</title><rect x="521.2" y="1219.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="524.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.37%)</title><rect x="521.5" y="1235.0" width="4.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="524.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="521.7" y="1219.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.7" y="1230.0"></text>
</g>
<g>
<title>__strerror_r (2 samples, 0.03%)</title><rect x="521.9" y="1203.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="524.9" y="1214.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="521.9" y="1187.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="524.9" y="1198.0"></text>
</g>
<g>
<title>__read (18 samples, 0.27%)</title><rect x="522.4" y="1219.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="525.4" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.25%)</title><rect x="522.6" y="1203.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.6" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.25%)</title><rect x="522.6" y="1187.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="525.6" y="1198.0"></text>
</g>
<g>
<title>sys_read (16 samples, 0.24%)</title><rect x="522.8" y="1171.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="525.8" y="1182.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.22%)</title><rect x="522.9" y="1155.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.9" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.18%)</title><rect x="523.1" y="1139.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.1" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.16%)</title><rect x="523.3" y="1123.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.3" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (9 samples, 0.13%)</title><rect x="523.6" y="1107.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.6" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.13%)</title><rect x="523.6" y="1091.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.6" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (9 samples, 0.13%)</title><rect x="523.6" y="1075.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="526.6" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.13%)</title><rect x="523.6" y="1059.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.6" y="1070.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.06%)</title><rect x="524.0" y="1043.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.0" y="1054.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="524.0" y="1027.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.0" y="1038.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="525.2" y="1139.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.2" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="525.2" y="1123.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.2" y="1134.0"></text>
</g>
<g>
<title>__vsnprintf_chk (4 samples, 0.06%)</title><rect x="526.1" y="1235.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="529.1" y="1246.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.03%)</title><rect x="526.5" y="1219.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="529.5" y="1230.0"></text>
</g>
<g>
<title>convertReturnVal (36 samples, 0.54%)</title><rect x="526.8" y="1235.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="529.8" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (36 samples, 0.54%)</title><rect x="526.8" y="1219.0" width="6.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="529.8" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (15 samples, 0.22%)</title><rect x="527.0" y="1203.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="530.0" y="1214.0"></text>
</g>
<g>
<title>jni_FindClass (4 samples, 0.06%)</title><rect x="527.5" y="1187.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="530.5" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (2 samples, 0.03%)</title><rect x="527.5" y="1171.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="530.5" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (2 samples, 0.03%)</title><rect x="527.5" y="1155.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="530.5" y="1166.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (2 samples, 0.03%)</title><rect x="527.9" y="1171.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="530.9" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.03%)</title><rect x="527.9" y="1155.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="530.9" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.03%)</title><rect x="527.9" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="530.9" y="1150.0"></text>
</g>
<g>
<title>jni_GetMethodID (5 samples, 0.07%)</title><rect x="528.2" y="1187.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="531.2" y="1198.0"></text>
</g>
<g>
<title>get_method_id(JNIEnv_*, _jclass*, char const*, char const*, bool, Thread*) [clone .constprop.205] (5 samples, 0.07%)</title><rect x="528.2" y="1171.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="531.2" y="1182.0"></text>
</g>
<g>
<title>jni_NewObjectV (3 samples, 0.04%)</title><rect x="529.1" y="1187.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="532.1" y="1198.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (3 samples, 0.04%)</title><rect x="529.1" y="1171.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="532.1" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.04%)</title><rect x="529.1" y="1155.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="532.1" y="1166.0"></text>
</g>
<g>
<title>JNU_NewStringPlatform (7 samples, 0.10%)</title><rect x="529.6" y="1203.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="532.6" y="1214.0"></text>
</g>
<g>
<title>newSizedString8859_1 (5 samples, 0.07%)</title><rect x="530.0" y="1187.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="533.0" y="1198.0"></text>
</g>
<g>
<title>jni_NewString (5 samples, 0.07%)</title><rect x="530.0" y="1171.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="533.0" y="1182.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_unicode(unsigned short*, int, Thread*) (5 samples, 0.07%)</title><rect x="530.0" y="1155.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.0" y="1166.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (5 samples, 0.07%)</title><rect x="530.0" y="1139.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="533.0" y="1150.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (4 samples, 0.06%)</title><rect x="530.2" y="1123.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.2" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="530.2" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="533.2" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="530.2" y="1091.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.2" y="1102.0"></text>
</g>
<g>
<title>jni_NewObjectV (2 samples, 0.03%)</title><rect x="531.1" y="1203.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="534.1" y="1214.0"></text>
</g>
<g>
<title>jni_Throw (10 samples, 0.15%)</title><rect x="531.4" y="1203.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="534.4" y="1214.0"></text>
</g>
<g>
<title>Exceptions::_throw_oop(Thread*, char const*, int, oopDesc*) (10 samples, 0.15%)</title><rect x="531.4" y="1187.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="534.4" y="1198.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (8 samples, 0.12%)</title><rect x="531.8" y="1171.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="534.8" y="1182.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="531.8" y="1155.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="534.8" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (4 samples, 0.06%)</title><rect x="532.1" y="1155.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="535.1" y="1166.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (2 samples, 0.03%)</title><rect x="532.1" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="535.1" y="1150.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (2 samples, 0.03%)</title><rect x="532.1" y="1123.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="535.1" y="1134.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (2 samples, 0.03%)</title><rect x="532.5" y="1139.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="535.5" y="1150.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="533.2" y="1235.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="536.2" y="1246.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (18 samples, 0.27%)</title><rect x="533.5" y="1235.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (18 samples, 0.27%)</title><rect x="533.5" y="1219.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (18 samples, 0.27%)</title><rect x="533.5" y="1203.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 0.27%)</title><rect x="533.5" y="1187.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (18 samples, 0.27%)</title><rect x="533.5" y="1171.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.5" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (17 samples, 0.25%)</title><rect x="533.7" y="1155.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="536.7" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (16 samples, 0.24%)</title><rect x="533.7" y="1139.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="536.7" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (15 samples, 0.22%)</title><rect x="533.9" y="1123.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="536.9" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (13 samples, 0.19%)</title><rect x="534.2" y="1107.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="537.2" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="534.4" y="1091.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="537.4" y="1102.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.03%)</title><rect x="535.1" y="1091.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="538.1" y="1102.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.03%)</title><rect x="535.1" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="538.1" y="1086.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.04%)</title><rect x="535.5" y="1091.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="538.5" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (18 samples, 0.27%)</title><rect x="536.7" y="1363.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.7" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (16 samples, 0.24%)</title><rect x="536.9" y="1347.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (7 samples, 0.10%)</title><rect x="536.9" y="1331.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (2 samples, 0.03%)</title><rect x="536.9" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.9" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (2 samples, 0.03%)</title><rect x="536.9" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.9" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.03%)</title><rect x="536.9" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.03%)</title><rect x="536.9" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.03%)</title><rect x="536.9" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="536.9" y="1235.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="539.9" y="1246.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="536.9" y="1219.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="539.9" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="536.9" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.9" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="536.9" y="1187.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="539.9" y="1198.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.03%)</title><rect x="536.9" y="1171.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="539.9" y="1182.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.03%)</title><rect x="536.9" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.9" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.03%)</title><rect x="536.9" y="1139.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="539.9" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.03%)</title><rect x="536.9" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="539.9" y="1134.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.03%)</title><rect x="536.9" y="1107.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.9" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="536.9" y="1091.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="539.9" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="536.9" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="536.9" y="1059.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.9" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (4 samples, 0.06%)</title><rect x="537.2" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.2" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (4 samples, 0.06%)</title><rect x="537.2" y="1299.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.2" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (4 samples, 0.06%)</title><rect x="537.2" y="1283.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (3 samples, 0.04%)</title><rect x="537.4" y="1267.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (3 samples, 0.04%)</title><rect x="537.4" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (2 samples, 0.03%)</title><rect x="537.4" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.4" y="1246.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (2 samples, 0.03%)</title><rect x="537.4" y="1219.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="540.4" y="1230.0"></text>
</g>
<g>
<title>setsockopt (2 samples, 0.03%)</title><rect x="537.4" y="1203.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="540.4" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="537.4" y="1187.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.4" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="537.4" y="1171.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="540.4" y="1182.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.03%)</title><rect x="537.4" y="1155.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="540.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (8 samples, 0.12%)</title><rect x="538.1" y="1331.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (8 samples, 0.12%)</title><rect x="538.1" y="1315.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (8 samples, 0.12%)</title><rect x="538.1" y="1299.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.1" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.concat (8 samples, 0.12%)</title><rect x="538.1" y="1283.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.1" y="1294.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat$ (8 samples, 0.12%)</title><rect x="538.1" y="1267.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.1" y="1278.0"></text>
</g>
<g>
<title>scala/collection/SetOps.concat (8 samples, 0.12%)</title><rect x="538.1" y="1251.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.1" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (4 samples, 0.06%)</title><rect x="538.8" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.fromSpecific (4 samples, 0.06%)</title><rect x="538.8" y="1219.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific$ (4 samples, 0.06%)</title><rect x="538.8" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.fromSpecific (4 samples, 0.06%)</title><rect x="538.8" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (4 samples, 0.06%)</title><rect x="538.8" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (4 samples, 0.06%)</title><rect x="538.8" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (4 samples, 0.06%)</title><rect x="538.8" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (4 samples, 0.06%)</title><rect x="538.8" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (4 samples, 0.06%)</title><rect x="538.8" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (4 samples, 0.06%)</title><rect x="538.8" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (2 samples, 0.03%)</title><rect x="539.2" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIteratorCell.headIterator (2 samples, 0.03%)</title><rect x="539.2" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SetOps$$Lambda$1229/1664735308.apply (2 samples, 0.03%)</title><rect x="539.2" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.2" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (59 samples, 0.88%)</title><rect x="539.9" y="1363.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (58 samples, 0.87%)</title><rect x="540.1" y="1347.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (58 samples, 0.87%)</title><rect x="540.1" y="1331.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (58 samples, 0.87%)</title><rect x="540.1" y="1315.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.1" y="1326.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (5 samples, 0.07%)</title><rect x="540.2" y="1299.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (5 samples, 0.07%)</title><rect x="540.2" y="1283.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (4 samples, 0.06%)</title><rect x="540.4" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (4 samples, 0.06%)</title><rect x="540.4" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (4 samples, 0.06%)</title><rect x="540.4" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (52 samples, 0.78%)</title><rect x="541.1" y="1299.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (51 samples, 0.76%)</title><rect x="541.3" y="1283.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.75%)</title><rect x="541.3" y="1267.0" width="8.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="544.3" y="1278.0"></text>
</g>
<g>
<title>__write (50 samples, 0.75%)</title><rect x="541.3" y="1251.0" width="8.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="544.3" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.75%)</title><rect x="541.3" y="1235.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.3" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.75%)</title><rect x="541.3" y="1219.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="544.3" y="1230.0"></text>
</g>
<g>
<title>sys_write (49 samples, 0.73%)</title><rect x="541.5" y="1203.0" width="8.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.5" y="1214.0"></text>
</g>
<g>
<title>vfs_write (48 samples, 0.72%)</title><rect x="541.6" y="1187.0" width="8.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="544.6" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (44 samples, 0.66%)</title><rect x="541.8" y="1171.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="544.8" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (44 samples, 0.66%)</title><rect x="541.8" y="1155.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="544.8" y="1166.0"></text>
</g>
<g>
<title>pipe_write (44 samples, 0.66%)</title><rect x="541.8" y="1139.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.8" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (41 samples, 0.61%)</title><rect x="542.0" y="1123.0" width="7.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.0" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (41 samples, 0.61%)</title><rect x="542.0" y="1107.0" width="7.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.0" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 0.61%)</title><rect x="542.0" y="1091.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.0" y="1102.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (2 samples, 0.03%)</title><rect x="548.9" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.9" y="1086.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (2 samples, 0.03%)</title><rect x="548.9" y="1059.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="551.9" y="1070.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="548.9" y="1043.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.9" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="548.9" y="1027.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.9" y="1038.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="549.8" y="1171.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.8" y="1182.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="549.8" y="1155.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.8" y="1166.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="549.8" y="1139.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.8" y="1150.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="549.8" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="552.8" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (85 samples, 1.27%)</title><rect x="550.3" y="1379.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (6 samples, 0.09%)</title><rect x="550.3" y="1363.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (6 samples, 0.09%)</title><rect x="550.3" y="1347.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (4 samples, 0.06%)</title><rect x="550.5" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.5" y="1342.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (4 samples, 0.06%)</title><rect x="550.5" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.5" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyItToTheBuffer$1 (4 samples, 0.06%)</title><rect x="550.5" y="1299.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.5" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (3 samples, 0.04%)</title><rect x="550.6" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.6" y="1294.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.04%)</title><rect x="550.6" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (78 samples, 1.17%)</title><rect x="551.4" y="1363.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.4" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (77 samples, 1.15%)</title><rect x="551.5" y="1347.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.5" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (77 samples, 1.15%)</title><rect x="551.5" y="1331.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (41 samples, 0.61%)</title><rect x="551.7" y="1315.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$549/159081775.apply (41 samples, 0.61%)</title><rect x="551.7" y="1299.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (41 samples, 0.61%)</title><rect x="551.7" y="1283.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (41 samples, 0.61%)</title><rect x="551.7" y="1267.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (41 samples, 0.61%)</title><rect x="551.7" y="1251.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (41 samples, 0.61%)</title><rect x="551.7" y="1235.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (41 samples, 0.61%)</title><rect x="551.7" y="1219.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (41 samples, 0.61%)</title><rect x="551.7" y="1203.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (39 samples, 0.58%)</title><rect x="552.1" y="1187.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (39 samples, 0.58%)</title><rect x="552.1" y="1171.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (38 samples, 0.57%)</title><rect x="552.1" y="1155.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (38 samples, 0.57%)</title><rect x="552.1" y="1139.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (38 samples, 0.57%)</title><rect x="552.1" y="1123.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (38 samples, 0.57%)</title><rect x="552.1" y="1107.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (38 samples, 0.57%)</title><rect x="552.1" y="1091.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (38 samples, 0.57%)</title><rect x="552.1" y="1075.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (38 samples, 0.57%)</title><rect x="552.1" y="1059.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (38 samples, 0.57%)</title><rect x="552.1" y="1043.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (38 samples, 0.57%)</title><rect x="552.1" y="1027.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (37 samples, 0.55%)</title><rect x="552.1" y="1011.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (37 samples, 0.55%)</title><rect x="552.1" y="995.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (37 samples, 0.55%)</title><rect x="552.1" y="979.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.1" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (37 samples, 0.55%)</title><rect x="552.1" y="963.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (37 samples, 0.55%)</title><rect x="552.1" y="947.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (37 samples, 0.55%)</title><rect x="552.1" y="931.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (37 samples, 0.55%)</title><rect x="552.1" y="915.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (37 samples, 0.55%)</title><rect x="552.1" y="899.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 0.55%)</title><rect x="552.1" y="883.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 0.55%)</title><rect x="552.1" y="867.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.1" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.52%)</title><rect x="552.4" y="851.0" width="6.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="555.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.51%)</title><rect x="552.6" y="835.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="555.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.51%)</title><rect x="552.6" y="819.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.6" y="830.0"></text>
</g>
<g>
<title>sys_futex (32 samples, 0.48%)</title><rect x="552.9" y="803.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.9" y="814.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.48%)</title><rect x="552.9" y="787.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.48%)</title><rect x="552.9" y="771.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.46%)</title><rect x="553.1" y="755.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.1" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.46%)</title><rect x="553.1" y="739.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="556.1" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.46%)</title><rect x="553.1" y="723.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (35 samples, 0.52%)</title><rect x="558.9" y="1315.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="558.9" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="558.9" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (33 samples, 0.49%)</title><rect x="559.3" y="1299.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.3" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (33 samples, 0.49%)</title><rect x="559.3" y="1283.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.49%)</title><rect x="559.3" y="1267.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (32 samples, 0.48%)</title><rect x="559.5" y="1251.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (32 samples, 0.48%)</title><rect x="559.5" y="1235.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.43%)</title><rect x="559.8" y="1219.0" width="5.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="562.8" y="1230.0"></text>
</g>
<g>
<title>__write (29 samples, 0.43%)</title><rect x="559.8" y="1203.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="562.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.39%)</title><rect x="560.4" y="1187.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.4" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.39%)</title><rect x="560.4" y="1171.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="563.4" y="1182.0"></text>
</g>
<g>
<title>sys_write (26 samples, 0.39%)</title><rect x="560.4" y="1155.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.4" y="1166.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="560.4" y="1139.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.4" y="1150.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="560.4" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.4" y="1134.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="560.4" y="1107.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.4" y="1118.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.34%)</title><rect x="560.9" y="1139.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.9" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.33%)</title><rect x="560.9" y="1123.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.9" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.33%)</title><rect x="560.9" y="1107.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.9" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (22 samples, 0.33%)</title><rect x="560.9" y="1091.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.9" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (22 samples, 0.33%)</title><rect x="560.9" y="1075.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="563.9" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (22 samples, 0.33%)</title><rect x="560.9" y="1059.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="563.9" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (22 samples, 0.33%)</title><rect x="560.9" y="1043.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.9" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (21 samples, 0.31%)</title><rect x="561.1" y="1027.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.1" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="561.9" y="1011.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="564.9" y="1022.0"></text>
</g>
<g>
<title>tcp_push (14 samples, 0.21%)</title><rect x="562.3" y="1011.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.3" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 0.19%)</title><rect x="562.5" y="995.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="565.5" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 0.19%)</title><rect x="562.5" y="979.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="565.5" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.09%)</title><rect x="562.7" y="963.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="565.7" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.07%)</title><rect x="562.8" y="947.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="565.8" y="958.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.06%)</title><rect x="562.8" y="931.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="565.8" y="942.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.06%)</title><rect x="562.8" y="915.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.8" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.06%)</title><rect x="562.8" y="899.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="565.8" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.06%)</title><rect x="562.8" y="883.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="565.8" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.04%)</title><rect x="563.0" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.0" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.04%)</title><rect x="563.0" y="851.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="566.0" y="862.0"></text>
</g>
<g>
<title>sch_direct_xmit (2 samples, 0.03%)</title><rect x="563.2" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.2" y="846.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="563.9" y="963.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="566.9" y="974.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="564.2" y="947.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.2" y="958.0"></text>
</g>
<g>
<title>scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred (3 samples, 0.04%)</title><rect x="565.3" y="1379.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (2 samples, 0.03%)</title><rect x="565.5" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.5" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (142 samples, 2.12%)</title><rect x="565.8" y="1443.0" width="25.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.8" y="1454.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (142 samples, 2.12%)</title><rect x="565.8" y="1427.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.8" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (142 samples, 2.12%)</title><rect x="565.8" y="1411.0" width="25.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.8" y="1422.0">a..</text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (141 samples, 2.11%)</title><rect x="566.0" y="1395.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.0" y="1406.0">a..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (43 samples, 0.64%)</title><rect x="566.0" y="1379.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.0" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (43 samples, 0.64%)</title><rect x="566.0" y="1363.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (43 samples, 0.64%)</title><rect x="566.0" y="1347.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.0" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (43 samples, 0.64%)</title><rect x="566.0" y="1331.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (40 samples, 0.60%)</title><rect x="566.5" y="1315.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.60%)</title><rect x="566.5" y="1299.0" width="7.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="569.5" y="1310.0"></text>
</g>
<g>
<title>__write (40 samples, 0.60%)</title><rect x="566.5" y="1283.0" width="7.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="569.5" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.54%)</title><rect x="567.2" y="1267.0" width="6.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.2" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.54%)</title><rect x="567.2" y="1251.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.2" y="1262.0"></text>
</g>
<g>
<title>sys_write (35 samples, 0.52%)</title><rect x="567.4" y="1235.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.4" y="1246.0"></text>
</g>
<g>
<title>vfs_write (33 samples, 0.49%)</title><rect x="567.8" y="1219.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.8" y="1230.0"></text>
</g>
<g>
<title>__vfs_write (30 samples, 0.45%)</title><rect x="567.8" y="1203.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.8" y="1214.0"></text>
</g>
<g>
<title>new_sync_write (30 samples, 0.45%)</title><rect x="567.8" y="1187.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.8" y="1198.0"></text>
</g>
<g>
<title>pipe_write (28 samples, 0.42%)</title><rect x="568.1" y="1171.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.1" y="1182.0"></text>
</g>
<g>
<title>__wake_up_sync_key (28 samples, 0.42%)</title><rect x="568.1" y="1155.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.1" y="1166.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.42%)</title><rect x="568.1" y="1139.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="571.1" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.40%)</title><rect x="568.3" y="1123.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.3" y="1134.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="573.3" y="1203.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.3" y="1214.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="573.3" y="1187.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="576.3" y="1198.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="573.3" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.3" y="1182.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="573.3" y="1155.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.3" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (98 samples, 1.47%)</title><rect x="573.6" y="1379.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (33 samples, 0.49%)</title><rect x="573.6" y="1363.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (33 samples, 0.49%)</title><rect x="573.6" y="1347.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (33 samples, 0.49%)</title><rect x="573.6" y="1331.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (33 samples, 0.49%)</title><rect x="573.6" y="1315.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.6" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (33 samples, 0.49%)</title><rect x="573.6" y="1299.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.6" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (33 samples, 0.49%)</title><rect x="573.6" y="1283.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.6" y="1294.0"></text>
</g>
<g>
<title>akka/routing/RandomRoutingLogic.select (3 samples, 0.04%)</title><rect x="573.6" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (2 samples, 0.03%)</title><rect x="573.6" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (2 samples, 0.03%)</title><rect x="573.6" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.6" y="1246.0"></text>
</g>
<g>
<title>akka/routing/Router.send (30 samples, 0.45%)</title><rect x="574.1" y="1267.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.1" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (30 samples, 0.45%)</title><rect x="574.1" y="1251.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (30 samples, 0.45%)</title><rect x="574.1" y="1235.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (30 samples, 0.45%)</title><rect x="574.1" y="1219.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (30 samples, 0.45%)</title><rect x="574.1" y="1203.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (30 samples, 0.45%)</title><rect x="574.1" y="1187.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (30 samples, 0.45%)</title><rect x="574.1" y="1171.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (30 samples, 0.45%)</title><rect x="574.1" y="1155.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (30 samples, 0.45%)</title><rect x="574.1" y="1139.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (30 samples, 0.45%)</title><rect x="574.1" y="1123.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.1" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (30 samples, 0.45%)</title><rect x="574.1" y="1107.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (30 samples, 0.45%)</title><rect x="574.1" y="1091.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (30 samples, 0.45%)</title><rect x="574.1" y="1075.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (30 samples, 0.45%)</title><rect x="574.1" y="1059.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (30 samples, 0.45%)</title><rect x="574.1" y="1043.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (30 samples, 0.45%)</title><rect x="574.1" y="1027.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (30 samples, 0.45%)</title><rect x="574.1" y="1011.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (30 samples, 0.45%)</title><rect x="574.1" y="995.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (30 samples, 0.45%)</title><rect x="574.1" y="979.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (30 samples, 0.45%)</title><rect x="574.1" y="963.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.45%)</title><rect x="574.1" y="947.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.45%)</title><rect x="574.1" y="931.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.1" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="574.3" y="915.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="577.3" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="574.5" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="577.5" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.39%)</title><rect x="574.8" y="915.0" width="4.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="577.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.33%)</title><rect x="575.5" y="899.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.33%)</title><rect x="575.5" y="883.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.5" y="894.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.33%)</title><rect x="575.5" y="867.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.5" y="878.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.33%)</title><rect x="575.5" y="851.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.5" y="862.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.33%)</title><rect x="575.5" y="835.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.5" y="846.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.31%)</title><rect x="575.7" y="819.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="578.7" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.31%)</title><rect x="575.7" y="803.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="578.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.31%)</title><rect x="575.7" y="787.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="578.7" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (3 samples, 0.04%)</title><rect x="579.6" y="1363.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.6" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (3 samples, 0.04%)</title><rect x="579.6" y="1347.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (3 samples, 0.04%)</title><rect x="579.6" y="1331.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.6" y="1342.0"></text>
</g>
<g>
<title>__fcntl (3 samples, 0.04%)</title><rect x="579.6" y="1315.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="582.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (61 samples, 0.91%)</title><rect x="580.1" y="1363.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.1" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (2 samples, 0.03%)</title><rect x="580.3" y="1347.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.3" y="1358.0"></text>
</g>
<g>
<title>__fcntl (2 samples, 0.03%)</title><rect x="580.3" y="1331.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="583.3" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (45 samples, 0.67%)</title><rect x="580.7" y="1347.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (45 samples, 0.67%)</title><rect x="580.7" y="1331.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.7" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (19 samples, 0.28%)</title><rect x="580.7" y="1315.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="583.7" y="1326.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (13 samples, 0.19%)</title><rect x="581.2" y="1299.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="584.2" y="1310.0"></text>
</g>
<g>
<title>jni_NewObject (12 samples, 0.18%)</title><rect x="581.4" y="1283.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="584.4" y="1294.0"></text>
</g>
<g>
<title>alloc_object(_jclass*, Thread*) (2 samples, 0.03%)</title><rect x="582.4" y="1267.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="585.4" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="582.4" y="1251.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.4" y="1262.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (3 samples, 0.04%)</title><rect x="582.8" y="1267.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="585.8" y="1278.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="582.8" y="1251.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.8" y="1262.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.03%)</title><rect x="583.5" y="1299.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="586.5" y="1310.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.25%)</title><rect x="584.2" y="1315.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="587.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="584.2" y="1299.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.2" y="1310.0"></text>
</g>
<g>
<title>accept (3 samples, 0.04%)</title><rect x="584.2" y="1283.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="587.2" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="584.2" y="1267.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.2" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="584.2" y="1251.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.2" y="1262.0"></text>
</g>
<g>
<title>sys_accept (3 samples, 0.04%)</title><rect x="584.2" y="1235.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.2" y="1246.0"></text>
</g>
<g>
<title>SYSC_accept4 (3 samples, 0.04%)</title><rect x="584.2" y="1219.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.15%)</title><rect x="584.7" y="1299.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="587.7" y="1310.0"></text>
</g>
<g>
<title>accept (10 samples, 0.15%)</title><rect x="584.7" y="1283.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="587.7" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.15%)</title><rect x="584.7" y="1267.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.7" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.15%)</title><rect x="584.7" y="1251.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.7" y="1262.0"></text>
</g>
<g>
<title>sys_accept (10 samples, 0.15%)</title><rect x="584.7" y="1235.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.7" y="1246.0"></text>
</g>
<g>
<title>SYSC_accept4 (10 samples, 0.15%)</title><rect x="584.7" y="1219.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.7" y="1230.0"></text>
</g>
<g>
<title>inet_accept (2 samples, 0.03%)</title><rect x="585.3" y="1203.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.3" y="1214.0"></text>
</g>
<g>
<title>inet_csk_accept (2 samples, 0.03%)</title><rect x="585.3" y="1187.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.3" y="1198.0"></text>
</g>
<g>
<title>sock_alloc (3 samples, 0.04%)</title><rect x="585.8" y="1203.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.8" y="1214.0"></text>
</g>
<g>
<title>new_inode_pseudo (3 samples, 0.04%)</title><rect x="585.8" y="1187.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="588.8" y="1198.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.03%)</title><rect x="585.8" y="1171.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.8" y="1182.0"></text>
</g>
<g>
<title>sock_alloc_inode (2 samples, 0.03%)</title><rect x="585.8" y="1155.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.8" y="1166.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="585.8" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.8" y="1150.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="585.8" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.8" y="1134.0"></text>
</g>
<g>
<title>accept (4 samples, 0.06%)</title><rect x="586.5" y="1299.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="589.5" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="586.7" y="1283.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.7" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="586.7" y="1267.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.7" y="1278.0"></text>
</g>
<g>
<title>sys_accept (3 samples, 0.04%)</title><rect x="586.7" y="1251.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.7" y="1262.0"></text>
</g>
<g>
<title>SYSC_accept4 (3 samples, 0.04%)</title><rect x="586.7" y="1235.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.7" y="1246.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.03%)</title><rect x="586.8" y="1219.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.8" y="1230.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.03%)</title><rect x="586.8" y="1203.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="589.8" y="1214.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.03%)</title><rect x="586.8" y="1187.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.8" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.06%)</title><rect x="587.2" y="1315.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="590.2" y="1326.0"></text>
</g>
<g>
<title>accept (4 samples, 0.06%)</title><rect x="587.2" y="1299.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="590.2" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="587.2" y="1283.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.2" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="587.2" y="1267.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="590.2" y="1278.0"></text>
</g>
<g>
<title>sys_accept (4 samples, 0.06%)</title><rect x="587.2" y="1251.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.2" y="1262.0"></text>
</g>
<g>
<title>SYSC_accept4 (4 samples, 0.06%)</title><rect x="587.2" y="1235.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.2" y="1246.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.03%)</title><rect x="587.4" y="1219.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="590.4" y="1230.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.03%)</title><rect x="587.4" y="1203.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.4" y="1214.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.03%)</title><rect x="587.4" y="1187.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.4" y="1198.0"></text>
</g>
<g>
<title>accept (2 samples, 0.03%)</title><rect x="587.9" y="1315.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="590.9" y="1326.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1315.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.3" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (13 samples, 0.19%)</title><rect x="588.6" y="1347.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (13 samples, 0.19%)</title><rect x="588.6" y="1331.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (10 samples, 0.15%)</title><rect x="588.6" y="1315.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.6" y="1326.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (3 samples, 0.04%)</title><rect x="588.8" y="1299.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="591.8" y="1310.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (2 samples, 0.03%)</title><rect x="588.8" y="1283.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="591.8" y="1294.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.03%)</title><rect x="588.8" y="1267.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="591.8" y="1278.0"></text>
</g>
<g>
<title>getsockname (6 samples, 0.09%)</title><rect x="589.3" y="1299.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="592.3" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="589.5" y="1283.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.5" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="589.5" y="1267.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.5" y="1278.0"></text>
</g>
<g>
<title>sys_getsockname (4 samples, 0.06%)</title><rect x="589.7" y="1251.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.7" y="1262.0"></text>
</g>
<g>
<title>SYSC_getsockname (4 samples, 0.06%)</title><rect x="589.7" y="1235.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="592.7" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (3 samples, 0.04%)</title><rect x="590.4" y="1315.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.4" y="1326.0"></text>
</g>
<g>
<title>getsockname (3 samples, 0.04%)</title><rect x="590.4" y="1299.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="593.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (1,377 samples, 20.60%)</title><rect x="591.1" y="1443.0" width="243.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.1" y="1454.0">akka/stream/impl/fusing/ActorGra..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1,377 samples, 20.60%)</title><rect x="591.1" y="1427.0" width="243.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.1" y="1438.0">akka/actor/Actor.aroundReceive$</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1,377 samples, 20.60%)</title><rect x="591.1" y="1411.0" width="243.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.1" y="1422.0">akka/actor/Actor.aroundReceive</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (1,375 samples, 20.57%)</title><rect x="591.4" y="1395.0" width="242.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.4" y="1406.0">akka/stream/impl/fusing/ActorGra..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (1,359 samples, 20.34%)</title><rect x="591.8" y="1379.0" width="239.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.8" y="1390.0">akka/stream/impl/fusing/ActorGra..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (5 samples, 0.07%)</title><rect x="592.0" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (5 samples, 0.07%)</title><rect x="592.0" y="1347.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (5 samples, 0.07%)</title><rect x="592.0" y="1331.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.stop (2 samples, 0.03%)</title><rect x="592.1" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (2 samples, 0.03%)</title><rect x="592.5" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (2 samples, 0.03%)</title><rect x="592.5" y="1299.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (2 samples, 0.03%)</title><rect x="592.5" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$currentLimit (5 samples, 0.07%)</title><rect x="592.8" y="1363.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.8" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$687/1447385941.apply (3 samples, 0.04%)</title><rect x="593.0" y="1347.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.0" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (1,345 samples, 20.13%)</title><rect x="593.7" y="1363.0" width="237.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.7" y="1374.0">akka/stream/impl/fusing/GraphIn..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (1,345 samples, 20.13%)</title><rect x="593.7" y="1347.0" width="237.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.7" y="1358.0">akka/stream/impl/fusing/GraphIn..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (97 samples, 1.45%)</title><rect x="594.3" y="1331.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$1245/2093143802.apply (8 samples, 0.12%)</title><rect x="595.9" y="1315.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (8 samples, 0.12%)</title><rect x="595.9" y="1299.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (8 samples, 0.12%)</title><rect x="595.9" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.normalizePort (2 samples, 0.03%)</title><rect x="596.2" y="1267.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (4 samples, 0.06%)</title><rect x="596.6" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (4 samples, 0.06%)</title><rect x="596.6" y="1251.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (4 samples, 0.06%)</title><rect x="596.6" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.6" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.06%)</title><rect x="596.6" y="1219.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.6" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.06%)</title><rect x="596.6" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.6" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.06%)</title><rect x="596.6" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1231/1216099784.apply (4 samples, 0.06%)</title><rect x="596.6" y="1171.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (4 samples, 0.06%)</title><rect x="596.6" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (4 samples, 0.06%)</title><rect x="596.6" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (4 samples, 0.06%)</title><rect x="596.6" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (4 samples, 0.06%)</title><rect x="596.6" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (4 samples, 0.06%)</title><rect x="596.6" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (4 samples, 0.06%)</title><rect x="596.6" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.6" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="596.7" y="1059.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="599.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1241/1081627945.apply (5 samples, 0.07%)</title><rect x="597.3" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (5 samples, 0.07%)</title><rect x="597.3" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (5 samples, 0.07%)</title><rect x="597.3" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1336/2102645462.apply$mcV$sp (4 samples, 0.06%)</title><rect x="597.4" y="1267.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (4 samples, 0.06%)</title><rect x="597.4" y="1251.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1279/1333109595.apply (4 samples, 0.06%)</title><rect x="597.4" y="1235.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (4 samples, 0.06%)</title><rect x="597.4" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (4 samples, 0.06%)</title><rect x="597.4" y="1203.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (4 samples, 0.06%)</title><rect x="597.4" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1393/1320115485.apply (4 samples, 0.06%)</title><rect x="597.4" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3$adapted (4 samples, 0.06%)</title><rect x="597.4" y="1155.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$3 (4 samples, 0.06%)</title><rect x="597.4" y="1139.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptFailed (3 samples, 0.04%)</title><rect x="597.4" y="1123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (2 samples, 0.03%)</title><rect x="597.6" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (2 samples, 0.03%)</title><rect x="597.6" y="1091.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (2 samples, 0.03%)</title><rect x="597.6" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.6" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (2 samples, 0.03%)</title><rect x="598.1" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (17 samples, 0.25%)</title><rect x="598.5" y="1315.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (13 samples, 0.19%)</title><rect x="598.9" y="1299.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (13 samples, 0.19%)</title><rect x="598.9" y="1283.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (13 samples, 0.19%)</title><rect x="598.9" y="1267.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (13 samples, 0.19%)</title><rect x="598.9" y="1251.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (13 samples, 0.19%)</title><rect x="598.9" y="1235.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (13 samples, 0.19%)</title><rect x="598.9" y="1219.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (13 samples, 0.19%)</title><rect x="598.9" y="1203.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (4 samples, 0.06%)</title><rect x="598.9" y="1187.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (4 samples, 0.06%)</title><rect x="598.9" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unsubscribeAddressTerminated (2 samples, 0.03%)</title><rect x="598.9" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (7 samples, 0.10%)</title><rect x="599.6" y="1187.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (7 samples, 0.10%)</title><rect x="599.6" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.6" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (7 samples, 0.10%)</title><rect x="599.6" y="1155.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (7 samples, 0.10%)</title><rect x="599.6" y="1139.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (7 samples, 0.10%)</title><rect x="599.6" y="1123.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1059.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.1" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.1" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (4 samples, 0.06%)</title><rect x="600.1" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.1" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashCollisionMapNode.removed (2 samples, 0.03%)</title><rect x="600.3" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.3" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (2 samples, 0.03%)</title><rect x="600.8" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (2 samples, 0.03%)</title><rect x="600.8" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (2 samples, 0.03%)</title><rect x="600.8" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (2 samples, 0.03%)</title><rect x="600.8" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.containsKey (2 samples, 0.03%)</title><rect x="600.8" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.isStageCompleted (2 samples, 0.03%)</title><rect x="601.1" y="1299.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$548/1020735156.apply (18 samples, 0.27%)</title><rect x="601.9" y="1315.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (17 samples, 0.25%)</title><rect x="602.0" y="1299.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (17 samples, 0.25%)</title><rect x="602.0" y="1283.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (17 samples, 0.25%)</title><rect x="602.0" y="1267.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$546/1280479010.apply (9 samples, 0.13%)</title><rect x="602.0" y="1251.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (9 samples, 0.13%)</title><rect x="602.0" y="1235.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (9 samples, 0.13%)</title><rect x="602.0" y="1219.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (9 samples, 0.13%)</title><rect x="602.0" y="1203.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (9 samples, 0.13%)</title><rect x="602.0" y="1187.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (4 samples, 0.06%)</title><rect x="602.0" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.06%)</title><rect x="602.0" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (4 samples, 0.06%)</title><rect x="602.0" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (3 samples, 0.04%)</title><rect x="602.2" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (2 samples, 0.03%)</title><rect x="602.4" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator$ (2 samples, 0.03%)</title><rect x="602.4" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (5 samples, 0.07%)</title><rect x="602.7" y="1171.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (5 samples, 0.07%)</title><rect x="602.7" y="1155.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (5 samples, 0.07%)</title><rect x="602.7" y="1139.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.06%)</title><rect x="602.9" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="602.9" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$923/2007992248.apply (8 samples, 0.12%)</title><rect x="603.6" y="1251.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2$adapted (8 samples, 0.12%)</title><rect x="603.6" y="1235.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$2 (6 samples, 0.09%)</title><rect x="604.0" y="1219.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connected (6 samples, 0.09%)</title><rect x="604.0" y="1203.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.akka$stream$impl$io$TcpConnectionStage$TcpStreamLogic$$fail (4 samples, 0.06%)</title><rect x="604.1" y="1187.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (4 samples, 0.06%)</title><rect x="604.1" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (4 samples, 0.06%)</title><rect x="604.1" y="1155.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.fail (2 samples, 0.03%)</title><rect x="604.3" y="1139.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$687/1447385941.apply (33 samples, 0.49%)</title><rect x="605.0" y="1315.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (33 samples, 0.49%)</title><rect x="605.0" y="1299.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (33 samples, 0.49%)</title><rect x="605.0" y="1283.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (33 samples, 0.49%)</title><rect x="605.0" y="1267.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (15 samples, 0.22%)</title><rect x="605.0" y="1251.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="605.0" y="1235.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="605.0" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.toString (2 samples, 0.03%)</title><rect x="605.0" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.unitString (2 samples, 0.03%)</title><rect x="605.0" y="1187.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (13 samples, 0.19%)</title><rect x="605.4" y="1235.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (13 samples, 0.19%)</title><rect x="605.4" y="1219.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (13 samples, 0.19%)</title><rect x="605.4" y="1203.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (13 samples, 0.19%)</title><rect x="605.4" y="1187.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.16%)</title><rect x="605.7" y="1171.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.7" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (11 samples, 0.16%)</title><rect x="605.7" y="1155.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="608.7" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (11 samples, 0.16%)</title><rect x="605.7" y="1139.0" width="2.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="608.7" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (10 samples, 0.15%)</title><rect x="605.9" y="1123.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="608.9" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (10 samples, 0.15%)</title><rect x="605.9" y="1107.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="608.9" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="606.3" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="609.3" y="1102.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.04%)</title><rect x="606.8" y="1091.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="609.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerMessages$Scheduled.timerId (5 samples, 0.07%)</title><rect x="607.7" y="1251.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (13 samples, 0.19%)</title><rect x="608.6" y="1251.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (6 samples, 0.09%)</title><rect x="609.4" y="1235.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (2 samples, 0.03%)</title><rect x="611.0" y="1315.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.0" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (2 samples, 0.03%)</title><rect x="611.0" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.0" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (2 samples, 0.03%)</title><rect x="611.0" y="1283.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.0" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (2 samples, 0.03%)</title><rect x="611.0" y="1267.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.0" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (2 samples, 0.03%)</title><rect x="611.0" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (2 samples, 0.03%)</title><rect x="611.0" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (2 samples, 0.03%)</title><rect x="611.0" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.03%)</title><rect x="611.0" y="1203.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.03%)</title><rect x="611.0" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="611.0" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="611.0" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.03%)</title><rect x="611.0" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (1,244 samples, 18.61%)</title><rect x="611.6" y="1331.0" width="219.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.6" y="1342.0">akka/stream/impl/fusing/Graph..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (1,242 samples, 18.58%)</title><rect x="611.7" y="1315.0" width="219.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.7" y="1326.0">akka/stream/impl/fusing/Graph..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (16 samples, 0.24%)</title><rect x="613.2" y="1299.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (16 samples, 0.24%)</title><rect x="613.2" y="1283.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.postStop (3 samples, 0.04%)</title><rect x="613.2" y="1267.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.2" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (2 samples, 0.03%)</title><rect x="613.3" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.3" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (2 samples, 0.03%)</title><rect x="613.3" y="1235.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.3" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (2 samples, 0.03%)</title><rect x="613.3" y="1219.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (5 samples, 0.07%)</title><rect x="613.9" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (4 samples, 0.06%)</title><rect x="614.0" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (4 samples, 0.06%)</title><rect x="614.0" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (4 samples, 0.06%)</title><rect x="614.0" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (5 samples, 0.07%)</title><rect x="614.7" y="1267.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (3 samples, 0.04%)</title><rect x="614.9" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (3 samples, 0.04%)</title><rect x="614.9" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.cell (2 samples, 0.03%)</title><rect x="615.1" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.1" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.03%)</title><rect x="615.1" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.1" y="1214.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="615.6" y="1267.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="618.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (5 samples, 0.07%)</title><rect x="616.0" y="1299.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (569 samples, 8.51%)</title><rect x="616.9" y="1299.0" width="100.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.9" y="1310.0">akka/stream/..</text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onUpstreamFinish (7 samples, 0.10%)</title><rect x="619.5" y="1283.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.shouldComplete$ (4 samples, 0.06%)</title><rect x="619.5" y="1267.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.shouldComplete (3 samples, 0.04%)</title><rect x="619.7" y="1251.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/Object.equals (2 samples, 0.03%)</title><rect x="619.9" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (3 samples, 0.04%)</title><rect x="620.2" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (3 samples, 0.04%)</title><rect x="620.2" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (3 samples, 0.04%)</title><rect x="620.2" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="620.2" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onUpstreamFinish (2 samples, 0.03%)</title><rect x="620.7" y="1283.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFinish$ (2 samples, 0.03%)</title><rect x="620.7" y="1267.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFinish (2 samples, 0.03%)</title><rect x="620.7" y="1251.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (2 samples, 0.03%)</title><rect x="620.7" y="1235.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="620.7" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onUpstreamFailure (3 samples, 0.04%)</title><rect x="621.6" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (3 samples, 0.04%)</title><rect x="621.6" y="1267.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (2 samples, 0.03%)</title><rect x="621.8" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (2 samples, 0.03%)</title><rect x="621.8" y="1235.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="621.8" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (3 samples, 0.04%)</title><rect x="622.2" y="1283.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="622.2" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="622.2" y="1251.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (3 samples, 0.04%)</title><rect x="622.2" y="1235.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="622.2" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="622.2" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.04%)</title><rect x="622.2" y="1187.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="622.3" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="622.3" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onUpstreamFailure (3 samples, 0.04%)</title><rect x="622.7" y="1283.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (2 samples, 0.03%)</title><rect x="622.9" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (2 samples, 0.03%)</title><rect x="622.9" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$Connection.slot_$eq (2 samples, 0.03%)</title><rect x="623.2" y="1283.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (5 samples, 0.07%)</title><rect x="623.7" y="1283.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.activeStage_$eq (3 samples, 0.04%)</title><rect x="624.1" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="1278.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="624.3" y="1251.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="627.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (266 samples, 3.98%)</title><rect x="624.6" y="1283.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.6" y="1294.0">akka..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$IgnoreSink$$anon$10.onPush (2 samples, 0.03%)</title><rect x="625.2" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (2 samples, 0.03%)</title><rect x="625.2" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (238 samples, 3.56%)</title><rect x="625.5" y="1267.0" width="42.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.5" y="1278.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$528/1195615010.apply (235 samples, 3.52%)</title><rect x="625.5" y="1251.0" width="41.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.5" y="1262.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (235 samples, 3.52%)</title><rect x="625.5" y="1235.0" width="41.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.5" y="1246.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.addAttributes (2 samples, 0.03%)</title><rect x="625.5" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.withAttributes (2 samples, 0.03%)</title><rect x="625.5" y="1203.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (2 samples, 0.03%)</title><rect x="625.5" y="1187.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (2 samples, 0.03%)</title><rect x="625.5" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (2 samples, 0.03%)</title><rect x="625.5" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$433/368242083.apply (2 samples, 0.03%)</title><rect x="625.5" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.watchTermination (9 samples, 0.13%)</title><rect x="626.0" y="1219.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination$ (9 samples, 0.13%)</title><rect x="626.0" y="1203.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination (9 samples, 0.13%)</title><rect x="626.0" y="1187.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (9 samples, 0.13%)</title><rect x="626.0" y="1171.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (9 samples, 0.13%)</title><rect x="626.0" y="1155.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (9 samples, 0.13%)</title><rect x="626.0" y="1139.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (9 samples, 0.13%)</title><rect x="626.0" y="1123.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (8 samples, 0.12%)</title><rect x="626.0" y="1107.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.09%)</title><rect x="626.0" y="1091.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (5 samples, 0.07%)</title><rect x="626.0" y="1075.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (4 samples, 0.06%)</title><rect x="626.0" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="626.0" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (221 samples, 3.31%)</title><rect x="627.6" y="1219.0" width="39.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.6" y="1230.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (221 samples, 3.31%)</title><rect x="627.6" y="1203.0" width="39.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.6" y="1214.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (221 samples, 3.31%)</title><rect x="627.6" y="1187.0" width="39.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.6" y="1198.0">akk..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (220 samples, 3.29%)</title><rect x="627.8" y="1171.0" width="38.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.8" y="1182.0">akk..</text>
</g>
<g>
<title>akka/stream/Attributes.and (7 samples, 0.10%)</title><rect x="629.2" y="1155.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="630.5" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="630.5" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="630.5" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (2 samples, 0.03%)</title><rect x="630.5" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (45 samples, 0.67%)</title><rect x="631.0" y="1155.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="632.0" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="632.0" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (35 samples, 0.52%)</title><rect x="632.4" y="1139.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage.createLogicAndMaterializedValue (5 samples, 0.07%)</title><rect x="632.4" y="1123.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1.&lt;init&gt; (5 samples, 0.07%)</title><rect x="632.4" y="1107.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.&lt;init&gt; (4 samples, 0.06%)</title><rect x="632.4" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/Iterator$.from (2 samples, 0.03%)</title><rect x="632.6" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$24.&lt;init&gt; (2 samples, 0.03%)</title><rect x="632.6" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (29 samples, 0.43%)</title><rect x="633.5" y="1123.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser.createLogic (4 samples, 0.06%)</title><rect x="633.6" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.&lt;init&gt; (3 samples, 0.04%)</title><rect x="633.8" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$.createLogic (2 samples, 0.03%)</title><rect x="634.3" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="634.3" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.setHandler (2 samples, 0.03%)</title><rect x="634.3" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage.createLogic (3 samples, 0.04%)</title><rect x="634.7" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9.&lt;init&gt; (3 samples, 0.04%)</title><rect x="634.7" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.&lt;init&gt; (2 samples, 0.03%)</title><rect x="634.9" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="634.9" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage.createLogic (3 samples, 0.04%)</title><rect x="635.4" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15.&lt;init&gt; (3 samples, 0.04%)</title><rect x="635.4" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.4" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.&lt;init&gt; (2 samples, 0.03%)</title><rect x="635.6" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi.createLogic (3 samples, 0.04%)</title><rect x="636.1" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1.&lt;init&gt; (3 samples, 0.04%)</title><rect x="636.1" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (2 samples, 0.03%)</title><rect x="636.6" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.6" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher.createLogic (2 samples, 0.03%)</title><rect x="637.0" y="1107.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$.createLogic (3 samples, 0.04%)</title><rect x="637.3" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="637.5" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered.createLogic (2 samples, 0.03%)</title><rect x="638.1" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (93 samples, 1.39%)</title><rect x="638.9" y="1155.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (81 samples, 1.21%)</title><rect x="639.3" y="1139.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (81 samples, 1.21%)</title><rect x="639.3" y="1123.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (81 samples, 1.21%)</title><rect x="639.3" y="1107.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (81 samples, 1.21%)</title><rect x="639.3" y="1091.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (80 samples, 1.20%)</title><rect x="639.5" y="1075.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (3 samples, 0.04%)</title><rect x="639.5" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (3 samples, 0.04%)</title><rect x="639.5" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.5" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (3 samples, 0.04%)</title><rect x="639.5" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (3 samples, 0.04%)</title><rect x="639.5" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.04%)</title><rect x="639.5" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="639.5" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="639.5" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="639.5" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.5" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="639.5" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.5" y="942.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (13 samples, 0.19%)</title><rect x="640.0" y="1059.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.0" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (13 samples, 0.19%)</title><rect x="640.0" y="1043.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.0" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (13 samples, 0.19%)</title><rect x="640.0" y="1027.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.0" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (12 samples, 0.18%)</title><rect x="640.2" y="1011.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (4 samples, 0.06%)</title><rect x="640.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (4 samples, 0.06%)</title><rect x="640.2" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (4 samples, 0.06%)</title><rect x="640.2" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (4 samples, 0.06%)</title><rect x="640.2" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (4 samples, 0.06%)</title><rect x="640.2" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (4 samples, 0.06%)</title><rect x="640.2" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.2" y="926.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (3 samples, 0.04%)</title><rect x="640.3" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.3" y="910.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (3 samples, 0.04%)</title><rect x="640.3" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.3" y="894.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (3 samples, 0.04%)</title><rect x="640.3" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.3" y="878.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (3 samples, 0.04%)</title><rect x="640.3" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (3 samples, 0.04%)</title><rect x="640.3" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (8 samples, 0.12%)</title><rect x="640.9" y="995.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (8 samples, 0.12%)</title><rect x="640.9" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.12%)</title><rect x="640.9" y="963.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.12%)</title><rect x="640.9" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="931.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="915.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="899.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.9" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="867.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.9" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.10%)</title><rect x="640.9" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.9" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.09%)</title><rect x="640.9" y="835.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.9" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="641.2" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.2" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="641.2" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.2" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="641.4" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.4" y="798.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (18 samples, 0.27%)</title><rect x="642.3" y="1059.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (3 samples, 0.04%)</title><rect x="642.3" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (2 samples, 0.03%)</title><rect x="642.5" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (14 samples, 0.21%)</title><rect x="642.8" y="1043.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.09%)</title><rect x="643.5" y="1027.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.5" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.09%)</title><rect x="643.5" y="1011.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (6 samples, 0.09%)</title><rect x="643.5" y="995.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (6 samples, 0.09%)</title><rect x="643.5" y="979.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.5" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (6 samples, 0.09%)</title><rect x="643.5" y="963.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.09%)</title><rect x="643.5" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.09%)</title><rect x="643.5" y="931.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.5" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.09%)</title><rect x="643.5" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.09%)</title><rect x="643.5" y="899.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.09%)</title><rect x="643.5" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.09%)</title><rect x="643.5" y="867.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.09%)</title><rect x="643.5" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.09%)</title><rect x="643.5" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.09%)</title><rect x="643.5" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.09%)</title><rect x="643.5" y="803.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.09%)</title><rect x="643.5" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="643.5" y="771.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="646.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="643.9" y="771.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="646.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="643.9" y="755.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="643.9" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.9" y="750.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="643.9" y="723.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.9" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="643.9" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="643.9" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="643.9" y="675.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="646.9" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="643.9" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="643.9" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.9" y="654.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.swapLookup (2 samples, 0.03%)</title><rect x="644.6" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.6" y="1038.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.9" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.9" y="1038.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (44 samples, 0.66%)</title><rect x="645.5" y="1059.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.5" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (4 samples, 0.06%)</title><rect x="645.5" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.5" y="1054.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (4 samples, 0.06%)</title><rect x="645.5" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.5" y="1038.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (2 samples, 0.03%)</title><rect x="645.6" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (32 samples, 0.48%)</title><rect x="646.2" y="1043.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (27 samples, 0.40%)</title><rect x="646.3" y="1027.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (25 samples, 0.37%)</title><rect x="646.5" y="1011.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.5" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (25 samples, 0.37%)</title><rect x="646.5" y="995.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.5" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (25 samples, 0.37%)</title><rect x="646.5" y="979.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.5" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (25 samples, 0.37%)</title><rect x="646.5" y="963.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.5" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (25 samples, 0.37%)</title><rect x="646.5" y="947.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.5" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (25 samples, 0.37%)</title><rect x="646.5" y="931.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.5" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (24 samples, 0.36%)</title><rect x="646.5" y="915.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.5" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (24 samples, 0.36%)</title><rect x="646.5" y="899.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.5" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (24 samples, 0.36%)</title><rect x="646.5" y="883.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.5" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (24 samples, 0.36%)</title><rect x="646.5" y="867.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (24 samples, 0.36%)</title><rect x="646.5" y="851.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (24 samples, 0.36%)</title><rect x="646.5" y="835.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (24 samples, 0.36%)</title><rect x="646.5" y="819.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (24 samples, 0.36%)</title><rect x="646.5" y="803.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.36%)</title><rect x="646.5" y="787.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.34%)</title><rect x="646.7" y="771.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="646.7" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="649.7" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (21 samples, 0.31%)</title><rect x="647.1" y="755.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="650.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.31%)</title><rect x="647.1" y="739.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.31%)</title><rect x="647.1" y="723.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.1" y="734.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.31%)</title><rect x="647.1" y="707.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.1" y="718.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.31%)</title><rect x="647.1" y="691.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.31%)</title><rect x="647.1" y="675.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="650.1" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="647.2" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="650.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.27%)</title><rect x="647.6" y="659.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.27%)</title><rect x="647.6" y="643.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="650.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.27%)</title><rect x="647.6" y="627.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="650.6" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (4 samples, 0.06%)</title><rect x="651.1" y="1027.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookup (3 samples, 0.04%)</title><rect x="651.3" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupConfigurator (2 samples, 0.03%)</title><rect x="651.5" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="651.5" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="651.5" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="652.2" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="652.2" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.2" y="1038.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$$Lambda$657/637587887.get$Lambda (2 samples, 0.03%)</title><rect x="652.2" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (3 samples, 0.04%)</title><rect x="652.5" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (3 samples, 0.04%)</title><rect x="652.5" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (3 samples, 0.04%)</title><rect x="652.5" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.5" y="1022.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (3 samples, 0.04%)</title><rect x="652.5" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (3 samples, 0.04%)</title><rect x="652.5" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (3 samples, 0.04%)</title><rect x="652.5" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (10 samples, 0.15%)</title><rect x="653.6" y="1139.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (9 samples, 0.13%)</title><rect x="653.6" y="1123.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.6" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (8 samples, 0.12%)</title><rect x="653.8" y="1107.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.8" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (8 samples, 0.12%)</title><rect x="653.8" y="1091.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (7 samples, 0.10%)</title><rect x="653.9" y="1075.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (7 samples, 0.10%)</title><rect x="653.9" y="1059.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (7 samples, 0.10%)</title><rect x="653.9" y="1043.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (7 samples, 0.10%)</title><rect x="653.9" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (3 samples, 0.04%)</title><rect x="653.9" y="1011.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.03%)</title><rect x="654.1" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (4 samples, 0.06%)</title><rect x="654.5" y="1011.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (4 samples, 0.06%)</title><rect x="654.5" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (3 samples, 0.04%)</title><rect x="655.4" y="1155.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (4 samples, 0.06%)</title><rect x="655.9" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (4 samples, 0.06%)</title><rect x="655.9" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (3 samples, 0.04%)</title><rect x="655.9" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (3 samples, 0.04%)</title><rect x="655.9" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (3 samples, 0.04%)</title><rect x="655.9" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (3 samples, 0.04%)</title><rect x="655.9" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (3 samples, 0.04%)</title><rect x="656.6" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (19 samples, 0.28%)</title><rect x="657.1" y="1155.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (15 samples, 0.22%)</title><rect x="657.6" y="1139.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (13 samples, 0.19%)</title><rect x="657.8" y="1123.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (13 samples, 0.19%)</title><rect x="657.8" y="1107.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (5 samples, 0.07%)</title><rect x="659.2" y="1091.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (9 samples, 0.13%)</title><rect x="660.5" y="1155.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Shape$.hasOnePort (2 samples, 0.03%)</title><rect x="660.5" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (5 samples, 0.07%)</title><rect x="660.8" y="1139.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (5 samples, 0.07%)</title><rect x="660.8" y="1123.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (5 samples, 0.07%)</title><rect x="660.8" y="1107.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (10 samples, 0.15%)</title><rect x="662.1" y="1155.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$911/2081265998.apply (10 samples, 0.15%)</title><rect x="662.1" y="1139.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (10 samples, 0.15%)</title><rect x="662.1" y="1123.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (10 samples, 0.15%)</title><rect x="662.1" y="1107.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (8 samples, 0.12%)</title><rect x="662.4" y="1091.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (8 samples, 0.12%)</title><rect x="662.4" y="1075.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (8 samples, 0.12%)</title><rect x="662.4" y="1059.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (8 samples, 0.12%)</title><rect x="662.4" y="1043.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (8 samples, 0.12%)</title><rect x="662.4" y="1027.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (4 samples, 0.06%)</title><rect x="662.4" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (4 samples, 0.06%)</title><rect x="662.4" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (4 samples, 0.06%)</title><rect x="662.4" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (3 samples, 0.04%)</title><rect x="662.6" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.6" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (3 samples, 0.04%)</title><rect x="662.6" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.6" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (3 samples, 0.04%)</title><rect x="662.6" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.6" y="942.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (4 samples, 0.06%)</title><rect x="663.1" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.06%)</title><rect x="663.1" y="995.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.1" y="1006.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.03%)</title><rect x="663.3" y="979.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="666.3" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="663.3" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="666.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.&lt;init&gt; (2 samples, 0.03%)</title><rect x="664.0" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (4 samples, 0.06%)</title><rect x="664.4" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (3 samples, 0.04%)</title><rect x="664.5" y="1139.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.grow (2 samples, 0.03%)</title><rect x="664.7" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (4 samples, 0.06%)</title><rect x="665.1" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (2 samples, 0.03%)</title><rect x="665.4" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeLast (2 samples, 0.03%)</title><rect x="666.1" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="666.7" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$439/169049466.apply (3 samples, 0.04%)</title><rect x="667.0" y="1251.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (3 samples, 0.04%)</title><rect x="667.0" y="1235.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="667.2" y="1219.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="667.2" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.2" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (2 samples, 0.03%)</title><rect x="667.2" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.2" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (2 samples, 0.03%)</title><rect x="667.2" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.03%)</title><rect x="667.2" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="667.2" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="667.2" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.2" y="1134.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="667.2" y="1107.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (23 samples, 0.34%)</title><rect x="667.5" y="1267.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (20 samples, 0.30%)</title><rect x="667.5" y="1251.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (20 samples, 0.30%)</title><rect x="667.5" y="1235.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (20 samples, 0.30%)</title><rect x="667.5" y="1219.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (20 samples, 0.30%)</title><rect x="667.5" y="1203.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (20 samples, 0.30%)</title><rect x="667.5" y="1187.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (20 samples, 0.30%)</title><rect x="667.5" y="1171.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (20 samples, 0.30%)</title><rect x="667.5" y="1155.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (20 samples, 0.30%)</title><rect x="667.5" y="1139.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (20 samples, 0.30%)</title><rect x="667.5" y="1123.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (20 samples, 0.30%)</title><rect x="667.5" y="1107.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (20 samples, 0.30%)</title><rect x="667.5" y="1091.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (20 samples, 0.30%)</title><rect x="667.5" y="1075.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (20 samples, 0.30%)</title><rect x="667.5" y="1059.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (20 samples, 0.30%)</title><rect x="667.5" y="1043.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (20 samples, 0.30%)</title><rect x="667.5" y="1027.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (20 samples, 0.30%)</title><rect x="667.5" y="1011.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 0.30%)</title><rect x="667.5" y="995.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.30%)</title><rect x="667.5" y="979.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.27%)</title><rect x="667.9" y="963.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.9" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.25%)</title><rect x="668.1" y="947.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="671.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.24%)</title><rect x="668.2" y="931.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="671.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.24%)</title><rect x="668.2" y="915.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.2" y="926.0"></text>
</g>
<g>
<title>sys_futex (16 samples, 0.24%)</title><rect x="668.2" y="899.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="671.2" y="910.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.24%)</title><rect x="668.2" y="883.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="671.2" y="894.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.24%)</title><rect x="668.2" y="867.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.2" y="878.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.24%)</title><rect x="668.2" y="851.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="671.2" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.24%)</title><rect x="668.2" y="835.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.24%)</title><rect x="668.2" y="819.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="671.2" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onUpstreamFailure (3 samples, 0.04%)</title><rect x="672.0" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (3 samples, 0.04%)</title><rect x="672.0" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (3 samples, 0.04%)</title><rect x="672.0" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (3 samples, 0.04%)</title><rect x="672.0" y="1235.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (3 samples, 0.04%)</title><rect x="672.0" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (3 samples, 0.04%)</title><rect x="672.0" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="672.0" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (9 samples, 0.13%)</title><rect x="672.5" y="1283.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (9 samples, 0.13%)</title><rect x="672.5" y="1267.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (9 samples, 0.13%)</title><rect x="672.5" y="1251.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (8 samples, 0.12%)</title><rect x="672.7" y="1235.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (8 samples, 0.12%)</title><rect x="672.7" y="1219.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (8 samples, 0.12%)</title><rect x="672.7" y="1203.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (8 samples, 0.12%)</title><rect x="672.7" y="1187.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="672.7" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="672.7" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="672.7" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (5 samples, 0.07%)</title><rect x="673.2" y="1171.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (5 samples, 0.07%)</title><rect x="673.2" y="1155.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (4 samples, 0.06%)</title><rect x="673.4" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (3 samples, 0.04%)</title><rect x="673.4" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (3 samples, 0.04%)</title><rect x="673.4" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="673.5" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onUpstreamFailure (3 samples, 0.04%)</title><rect x="674.1" y="1283.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (2 samples, 0.03%)</title><rect x="674.2" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (2 samples, 0.03%)</title><rect x="674.2" y="1251.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (2 samples, 0.03%)</title><rect x="674.2" y="1235.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="674.2" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onDownstreamFinish (29 samples, 0.43%)</title><rect x="674.6" y="1283.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (5 samples, 0.07%)</title><rect x="675.0" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (5 samples, 0.07%)</title><rect x="675.0" y="1251.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (4 samples, 0.06%)</title><rect x="675.1" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (3 samples, 0.04%)</title><rect x="675.3" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="675.3" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="675.3" y="1187.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="675.3" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.3" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (20 samples, 0.30%)</title><rect x="675.8" y="1267.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.8" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (20 samples, 0.30%)</title><rect x="675.8" y="1251.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.8" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (19 samples, 0.28%)</title><rect x="676.0" y="1235.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.0" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (19 samples, 0.28%)</title><rect x="676.0" y="1219.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.0" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (19 samples, 0.28%)</title><rect x="676.0" y="1203.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.0" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (19 samples, 0.28%)</title><rect x="676.0" y="1187.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.0" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (19 samples, 0.28%)</title><rect x="676.0" y="1171.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.0" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (19 samples, 0.28%)</title><rect x="676.0" y="1155.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.0" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (19 samples, 0.28%)</title><rect x="676.0" y="1139.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.0" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (19 samples, 0.28%)</title><rect x="676.0" y="1123.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (19 samples, 0.28%)</title><rect x="676.0" y="1107.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (19 samples, 0.28%)</title><rect x="676.0" y="1091.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (19 samples, 0.28%)</title><rect x="676.0" y="1075.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (19 samples, 0.28%)</title><rect x="676.0" y="1059.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (19 samples, 0.28%)</title><rect x="676.0" y="1043.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (19 samples, 0.28%)</title><rect x="676.0" y="1027.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (19 samples, 0.28%)</title><rect x="676.0" y="1011.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (19 samples, 0.28%)</title><rect x="676.0" y="995.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.0" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (19 samples, 0.28%)</title><rect x="676.0" y="979.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (19 samples, 0.28%)</title><rect x="676.0" y="963.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (19 samples, 0.28%)</title><rect x="676.0" y="947.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (19 samples, 0.28%)</title><rect x="676.0" y="931.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 0.28%)</title><rect x="676.0" y="915.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.28%)</title><rect x="676.0" y="899.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.28%)</title><rect x="676.0" y="883.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.0" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="676.0" y="867.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="679.0" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.24%)</title><rect x="676.5" y="867.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="679.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.24%)</title><rect x="676.5" y="851.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="679.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.24%)</title><rect x="676.5" y="835.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.5" y="846.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.21%)</title><rect x="676.9" y="819.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.9" y="830.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.21%)</title><rect x="676.9" y="803.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="679.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.19%)</title><rect x="676.9" y="787.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="679.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.19%)</title><rect x="676.9" y="771.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="679.9" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.19%)</title><rect x="676.9" y="755.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="679.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.19%)</title><rect x="676.9" y="739.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.9" y="750.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (2 samples, 0.03%)</title><rect x="679.4" y="1267.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.4" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (2 samples, 0.03%)</title><rect x="679.4" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.4" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (2 samples, 0.03%)</title><rect x="679.4" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (2 samples, 0.03%)</title><rect x="679.4" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (2 samples, 0.03%)</title><rect x="679.4" y="1203.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (2 samples, 0.03%)</title><rect x="679.4" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (2 samples, 0.03%)</title><rect x="679.4" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.03%)</title><rect x="679.4" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (66 samples, 0.99%)</title><rect x="679.9" y="1283.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (5 samples, 0.07%)</title><rect x="679.9" y="1267.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (5 samples, 0.07%)</title><rect x="679.9" y="1251.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="680.4" y="1235.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (61 samples, 0.91%)</title><rect x="680.8" y="1267.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.8" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (61 samples, 0.91%)</title><rect x="680.8" y="1251.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.8" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (61 samples, 0.91%)</title><rect x="680.8" y="1235.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.8" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (61 samples, 0.91%)</title><rect x="680.8" y="1219.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.8" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (61 samples, 0.91%)</title><rect x="680.8" y="1203.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.8" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (61 samples, 0.91%)</title><rect x="680.8" y="1187.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.8" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (61 samples, 0.91%)</title><rect x="680.8" y="1171.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.8" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (61 samples, 0.91%)</title><rect x="680.8" y="1155.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.8" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (61 samples, 0.91%)</title><rect x="680.8" y="1139.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.8" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (61 samples, 0.91%)</title><rect x="680.8" y="1123.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (59 samples, 0.88%)</title><rect x="681.0" y="1107.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (58 samples, 0.87%)</title><rect x="681.1" y="1091.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (58 samples, 0.87%)</title><rect x="681.1" y="1075.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (54 samples, 0.81%)</title><rect x="681.3" y="1059.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (54 samples, 0.81%)</title><rect x="681.3" y="1043.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (53 samples, 0.79%)</title><rect x="681.3" y="1027.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.3" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (52 samples, 0.78%)</title><rect x="681.5" y="1011.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$534/21723014.apply (50 samples, 0.75%)</title><rect x="681.7" y="995.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (49 samples, 0.73%)</title><rect x="681.8" y="979.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.8" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (49 samples, 0.73%)</title><rect x="681.8" y="963.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (49 samples, 0.73%)</title><rect x="681.8" y="947.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.8" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (49 samples, 0.73%)</title><rect x="681.8" y="931.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.8" y="942.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (49 samples, 0.73%)</title><rect x="681.8" y="915.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.8" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (48 samples, 0.72%)</title><rect x="682.0" y="899.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.0" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (48 samples, 0.72%)</title><rect x="682.0" y="883.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.0" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (48 samples, 0.72%)</title><rect x="682.0" y="867.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.0" y="878.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (47 samples, 0.70%)</title><rect x="682.0" y="851.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.0" y="862.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (47 samples, 0.70%)</title><rect x="682.0" y="835.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.0" y="846.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (47 samples, 0.70%)</title><rect x="682.0" y="819.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.0" y="830.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (47 samples, 0.70%)</title><rect x="682.0" y="803.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.0" y="814.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (47 samples, 0.70%)</title><rect x="682.0" y="787.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.0" y="798.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (47 samples, 0.70%)</title><rect x="682.0" y="771.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.0" y="782.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (47 samples, 0.70%)</title><rect x="682.0" y="755.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.0" y="766.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (47 samples, 0.70%)</title><rect x="682.0" y="739.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.0" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (45 samples, 0.67%)</title><rect x="682.0" y="723.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.0" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (44 samples, 0.66%)</title><rect x="682.0" y="707.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.0" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (44 samples, 0.66%)</title><rect x="682.0" y="691.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (44 samples, 0.66%)</title><rect x="682.0" y="675.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.0" y="686.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (44 samples, 0.66%)</title><rect x="682.0" y="659.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (44 samples, 0.66%)</title><rect x="682.0" y="643.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (44 samples, 0.66%)</title><rect x="682.0" y="627.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (44 samples, 0.66%)</title><rect x="682.0" y="611.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (44 samples, 0.66%)</title><rect x="682.0" y="595.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (44 samples, 0.66%)</title><rect x="682.0" y="579.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 0.66%)</title><rect x="682.0" y="563.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.0" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="682.0" y="547.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="685.0" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.61%)</title><rect x="682.5" y="547.0" width="7.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="685.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.57%)</title><rect x="683.1" y="531.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.57%)</title><rect x="683.1" y="515.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.1" y="526.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.57%)</title><rect x="683.1" y="499.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.1" y="510.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.57%)</title><rect x="683.1" y="483.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="686.1" y="494.0"></text>
</g>
<g>
<title>futex_wake (38 samples, 0.57%)</title><rect x="683.1" y="467.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="686.1" y="478.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.52%)</title><rect x="683.6" y="451.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="686.6" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.52%)</title><rect x="683.6" y="435.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="686.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.52%)</title><rect x="683.6" y="419.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="686.6" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (2 samples, 0.03%)</title><rect x="690.0" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.0" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (2 samples, 0.03%)</title><rect x="690.0" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.0" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (2 samples, 0.03%)</title><rect x="690.0" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.0" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (2 samples, 0.03%)</title><rect x="690.0" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (2 samples, 0.03%)</title><rect x="690.0" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (2 samples, 0.03%)</title><rect x="690.0" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="690.0" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="690.0" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.03%)</title><rect x="690.0" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="690.8" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.04%)</title><rect x="690.8" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (3 samples, 0.04%)</title><rect x="691.6" y="1283.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.03%)</title><rect x="691.7" y="1267.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.03%)</title><rect x="691.7" y="1251.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (2 samples, 0.03%)</title><rect x="691.7" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.03%)</title><rect x="691.7" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.03%)</title><rect x="691.7" y="1203.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (2 samples, 0.03%)</title><rect x="691.7" y="1187.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="691.7" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="691.7" y="1155.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onUpstreamFailure (2 samples, 0.03%)</title><rect x="692.1" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onUpstreamFinish (4 samples, 0.06%)</title><rect x="692.4" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFinish$ (4 samples, 0.06%)</title><rect x="692.4" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFinish (4 samples, 0.06%)</title><rect x="692.4" y="1251.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreter (3 samples, 0.04%)</title><rect x="692.4" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="692.4" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="692.6" y="1203.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onDownstreamFinish (9 samples, 0.13%)</title><rect x="693.1" y="1283.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (8 samples, 0.12%)</title><rect x="693.3" y="1267.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (8 samples, 0.12%)</title><rect x="693.3" y="1251.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onDownstreamFinish (8 samples, 0.12%)</title><rect x="693.3" y="1235.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (7 samples, 0.10%)</title><rect x="693.5" y="1219.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (7 samples, 0.10%)</title><rect x="693.5" y="1203.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (7 samples, 0.10%)</title><rect x="693.5" y="1187.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (6 samples, 0.09%)</title><rect x="693.5" y="1171.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (6 samples, 0.09%)</title><rect x="693.5" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (4 samples, 0.06%)</title><rect x="693.8" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onDownstreamFinish (3 samples, 0.04%)</title><rect x="694.7" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="694.7" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="694.7" y="1251.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (21 samples, 0.31%)</title><rect x="695.4" y="1283.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (17 samples, 0.25%)</title><rect x="695.6" y="1267.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="695.6" y="1251.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (17 samples, 0.25%)</title><rect x="695.6" y="1235.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (17 samples, 0.25%)</title><rect x="695.6" y="1219.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="695.6" y="1203.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (17 samples, 0.25%)</title><rect x="695.6" y="1187.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (17 samples, 0.25%)</title><rect x="695.6" y="1171.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (17 samples, 0.25%)</title><rect x="695.6" y="1155.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (16 samples, 0.24%)</title><rect x="695.6" y="1139.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.24%)</title><rect x="695.6" y="1123.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.24%)</title><rect x="695.6" y="1107.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.24%)</title><rect x="695.6" y="1091.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (16 samples, 0.24%)</title><rect x="695.6" y="1075.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.24%)</title><rect x="695.6" y="1059.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.24%)</title><rect x="695.6" y="1043.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (16 samples, 0.24%)</title><rect x="695.6" y="1027.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.24%)</title><rect x="695.6" y="1011.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.24%)</title><rect x="695.6" y="995.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.19%)</title><rect x="696.1" y="979.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.19%)</title><rect x="696.1" y="963.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="699.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.18%)</title><rect x="696.3" y="947.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.18%)</title><rect x="696.3" y="931.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="699.3" y="942.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.18%)</title><rect x="696.3" y="915.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.3" y="926.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.18%)</title><rect x="696.3" y="899.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="699.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.18%)</title><rect x="696.3" y="883.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.3" y="894.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.18%)</title><rect x="696.3" y="867.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.3" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.18%)</title><rect x="696.3" y="851.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.3" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.18%)</title><rect x="696.3" y="835.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.3" y="846.0"></text>
</g>
<g>
<title>akka/actor/package$.actorRef2Scala (3 samples, 0.04%)</title><rect x="698.6" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (56 samples, 0.84%)</title><rect x="699.3" y="1283.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (13 samples, 0.19%)</title><rect x="699.3" y="1267.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.19%)</title><rect x="699.3" y="1251.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (13 samples, 0.19%)</title><rect x="699.3" y="1235.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (13 samples, 0.19%)</title><rect x="699.3" y="1219.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.19%)</title><rect x="699.3" y="1203.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (13 samples, 0.19%)</title><rect x="699.3" y="1187.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (13 samples, 0.19%)</title><rect x="699.3" y="1171.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (13 samples, 0.19%)</title><rect x="699.3" y="1155.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (13 samples, 0.19%)</title><rect x="699.3" y="1139.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.19%)</title><rect x="699.3" y="1123.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.19%)</title><rect x="699.3" y="1107.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.19%)</title><rect x="699.3" y="1091.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.19%)</title><rect x="699.3" y="1075.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.19%)</title><rect x="699.3" y="1059.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.19%)</title><rect x="699.3" y="1043.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (13 samples, 0.19%)</title><rect x="699.3" y="1027.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.19%)</title><rect x="699.3" y="1011.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.19%)</title><rect x="699.3" y="995.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.18%)</title><rect x="699.5" y="979.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.18%)</title><rect x="699.5" y="963.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="702.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.18%)</title><rect x="699.5" y="947.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.18%)</title><rect x="699.5" y="931.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="702.5" y="942.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.18%)</title><rect x="699.5" y="915.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.5" y="926.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.18%)</title><rect x="699.5" y="899.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.5" y="910.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.18%)</title><rect x="699.5" y="883.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.15%)</title><rect x="699.8" y="867.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.15%)</title><rect x="699.8" y="851.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.15%)</title><rect x="699.8" y="835.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.8" y="846.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (39 samples, 0.58%)</title><rect x="701.8" y="1267.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (39 samples, 0.58%)</title><rect x="701.8" y="1251.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.8" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (39 samples, 0.58%)</title><rect x="701.8" y="1235.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.8" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (11 samples, 0.16%)</title><rect x="701.8" y="1219.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (11 samples, 0.16%)</title><rect x="701.8" y="1203.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.8" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (11 samples, 0.16%)</title><rect x="701.8" y="1187.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.8" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (11 samples, 0.16%)</title><rect x="701.8" y="1171.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.12%)</title><rect x="702.1" y="1155.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (8 samples, 0.12%)</title><rect x="702.1" y="1139.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/Throwable.toString (3 samples, 0.04%)</title><rect x="702.1" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.1" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (5 samples, 0.07%)</title><rect x="702.7" y="1123.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.7" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (5 samples, 0.07%)</title><rect x="702.7" y="1107.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.7" y="1118.0"></text>
</g>
<g>
<title>java/net/InetAddress.toString (3 samples, 0.04%)</title><rect x="703.0" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.0" y="1102.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getHostAddress (2 samples, 0.03%)</title><rect x="703.2" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.2" y="1086.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getAddress (2 samples, 0.03%)</title><rect x="703.2" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.2" y="1070.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.03%)</title><rect x="703.7" y="1219.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.7" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (2 samples, 0.03%)</title><rect x="703.7" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.7" y="1214.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (25 samples, 0.37%)</title><rect x="704.1" y="1219.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.1" y="1230.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (17 samples, 0.25%)</title><rect x="704.3" y="1203.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.3" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (17 samples, 0.25%)</title><rect x="704.3" y="1187.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.3" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (17 samples, 0.25%)</title><rect x="704.3" y="1171.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (16 samples, 0.24%)</title><rect x="704.4" y="1155.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.4" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (16 samples, 0.24%)</title><rect x="704.4" y="1139.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.4" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (16 samples, 0.24%)</title><rect x="704.4" y="1123.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.4" y="1134.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (16 samples, 0.24%)</title><rect x="704.4" y="1107.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.4" y="1118.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (16 samples, 0.24%)</title><rect x="704.4" y="1091.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.4" y="1102.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (14 samples, 0.21%)</title><rect x="704.8" y="1075.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (13 samples, 0.19%)</title><rect x="705.0" y="1059.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.0" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.19%)</title><rect x="705.0" y="1043.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.0" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (13 samples, 0.19%)</title><rect x="705.0" y="1027.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.0" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (13 samples, 0.19%)</title><rect x="705.0" y="1011.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.0" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (12 samples, 0.18%)</title><rect x="705.0" y="995.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.0" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (12 samples, 0.18%)</title><rect x="705.0" y="979.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.0" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (12 samples, 0.18%)</title><rect x="705.0" y="963.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.0" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (12 samples, 0.18%)</title><rect x="705.0" y="947.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.0" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.15%)</title><rect x="705.0" y="931.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.0" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.15%)</title><rect x="705.0" y="915.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.15%)</title><rect x="705.0" y="899.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.0" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.15%)</title><rect x="705.0" y="883.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.0" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.15%)</title><rect x="705.0" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.15%)</title><rect x="705.0" y="851.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.15%)</title><rect x="705.0" y="835.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.15%)</title><rect x="705.0" y="819.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.15%)</title><rect x="705.0" y="803.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.15%)</title><rect x="705.0" y="787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.15%)</title><rect x="705.0" y="771.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.0" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.15%)</title><rect x="705.0" y="755.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="708.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="705.5" y="739.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="708.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="705.5" y="723.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.5" y="734.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.10%)</title><rect x="705.5" y="707.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="708.5" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.10%)</title><rect x="705.5" y="691.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="708.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.10%)</title><rect x="705.5" y="675.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="708.5" y="686.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.09%)</title><rect x="705.7" y="659.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.09%)</title><rect x="705.7" y="643.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="708.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.09%)</title><rect x="705.7" y="627.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.7" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (2 samples, 0.03%)</title><rect x="706.7" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.7" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (2 samples, 0.03%)</title><rect x="706.7" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.7" y="926.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug$.apply (7 samples, 0.10%)</title><rect x="707.3" y="1203.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.3" y="1214.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug2.&lt;init&gt; (6 samples, 0.09%)</title><rect x="707.4" y="1187.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="1198.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug.&lt;init&gt; (6 samples, 0.09%)</title><rect x="707.4" y="1171.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.4" y="1182.0"></text>
</g>
<g>
<title>akka/event/Logging$LogEvent.$init$ (3 samples, 0.04%)</title><rect x="707.4" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.4" y="1166.0"></text>
</g>
<g>
<title>akka/event/Logging$Debug.akka$event$Logging$LogEvent$_setter_$timestamp_$eq (3 samples, 0.04%)</title><rect x="707.4" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.4" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="707.6" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="710.6" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="707.6" y="1107.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.6" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="707.6" y="1091.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="710.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="707.6" y="1075.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (2 samples, 0.03%)</title><rect x="708.0" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (3 samples, 0.04%)</title><rect x="708.7" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (2 samples, 0.03%)</title><rect x="708.9" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (6 samples, 0.09%)</title><rect x="709.2" y="1283.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (6 samples, 0.09%)</title><rect x="709.2" y="1267.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (6 samples, 0.09%)</title><rect x="709.2" y="1251.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$EagerTerminateOutput$.onDownstreamFinish (4 samples, 0.06%)</title><rect x="709.6" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (4 samples, 0.06%)</title><rect x="709.6" y="1219.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (4 samples, 0.06%)</title><rect x="709.6" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (4 samples, 0.06%)</title><rect x="709.6" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="709.6" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="709.6" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="709.9" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="709.9" y="1155.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (17 samples, 0.25%)</title><rect x="710.4" y="1283.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onDownstreamFinish (5 samples, 0.07%)</title><rect x="710.4" y="1267.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (5 samples, 0.07%)</title><rect x="710.4" y="1251.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (5 samples, 0.07%)</title><rect x="710.4" y="1235.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (4 samples, 0.06%)</title><rect x="710.6" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="710.6" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="710.6" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="710.6" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="711.0" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="711.0" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$5.onDownstreamFinish (3 samples, 0.04%)</title><rect x="711.3" y="1267.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.04%)</title><rect x="711.3" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.04%)</title><rect x="711.3" y="1235.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (2 samples, 0.03%)</title><rect x="711.5" y="1219.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="711.5" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="711.5" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$17.onDownstreamFinish (3 samples, 0.04%)</title><rect x="711.9" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (3 samples, 0.04%)</title><rect x="711.9" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (3 samples, 0.04%)</title><rect x="711.9" y="1235.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$5.onDownstreamFinish (2 samples, 0.03%)</title><rect x="712.6" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="712.6" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="712.6" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="712.6" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreter (3 samples, 0.04%)</title><rect x="712.9" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="712.9" y="1251.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$5.onDownstreamFinish (2 samples, 0.03%)</title><rect x="712.9" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.9" y="1246.0"></text>
</g>
<g>
<title>itable stub (22 samples, 0.33%)</title><rect x="713.4" y="1283.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="716.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (75 samples, 1.12%)</title><rect x="717.3" y="1299.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (17 samples, 0.25%)</title><rect x="718.4" y="1283.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (17 samples, 0.25%)</title><rect x="718.4" y="1267.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="718.4" y="1251.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (17 samples, 0.25%)</title><rect x="718.4" y="1235.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (17 samples, 0.25%)</title><rect x="718.4" y="1219.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.25%)</title><rect x="718.4" y="1203.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (17 samples, 0.25%)</title><rect x="718.4" y="1187.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (17 samples, 0.25%)</title><rect x="718.4" y="1171.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (17 samples, 0.25%)</title><rect x="718.4" y="1155.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (17 samples, 0.25%)</title><rect x="718.4" y="1139.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (17 samples, 0.25%)</title><rect x="718.4" y="1123.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (17 samples, 0.25%)</title><rect x="718.4" y="1107.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (17 samples, 0.25%)</title><rect x="718.4" y="1091.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (17 samples, 0.25%)</title><rect x="718.4" y="1075.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (17 samples, 0.25%)</title><rect x="718.4" y="1059.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (17 samples, 0.25%)</title><rect x="718.4" y="1043.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (17 samples, 0.25%)</title><rect x="718.4" y="1027.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.25%)</title><rect x="718.4" y="1011.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.25%)</title><rect x="718.4" y="995.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.25%)</title><rect x="718.4" y="979.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="718.4" y="963.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="721.4" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 0.22%)</title><rect x="718.7" y="963.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="721.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.18%)</title><rect x="719.3" y="947.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.18%)</title><rect x="719.3" y="931.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="722.3" y="942.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.16%)</title><rect x="719.4" y="915.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.4" y="926.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.16%)</title><rect x="719.4" y="899.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.16%)</title><rect x="719.4" y="883.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.16%)</title><rect x="719.4" y="867.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.16%)</title><rect x="719.4" y="851.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.16%)</title><rect x="719.4" y="835.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="722.4" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (51 samples, 0.76%)</title><rect x="721.4" y="1283.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (51 samples, 0.76%)</title><rect x="721.4" y="1267.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (51 samples, 0.76%)</title><rect x="721.4" y="1251.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (51 samples, 0.76%)</title><rect x="721.4" y="1235.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (51 samples, 0.76%)</title><rect x="721.4" y="1219.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (51 samples, 0.76%)</title><rect x="721.4" y="1203.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (51 samples, 0.76%)</title><rect x="721.4" y="1187.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (51 samples, 0.76%)</title><rect x="721.4" y="1171.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (51 samples, 0.76%)</title><rect x="721.4" y="1155.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (49 samples, 0.73%)</title><rect x="721.6" y="1139.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (49 samples, 0.73%)</title><rect x="721.6" y="1123.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (49 samples, 0.73%)</title><rect x="721.6" y="1107.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (49 samples, 0.73%)</title><rect x="721.6" y="1091.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (49 samples, 0.73%)</title><rect x="721.6" y="1075.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (49 samples, 0.73%)</title><rect x="721.6" y="1059.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (49 samples, 0.73%)</title><rect x="721.6" y="1043.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (49 samples, 0.73%)</title><rect x="721.6" y="1027.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (49 samples, 0.73%)</title><rect x="721.6" y="1011.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.73%)</title><rect x="721.6" y="995.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 0.70%)</title><rect x="721.9" y="979.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.9" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="721.9" y="963.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="724.9" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (45 samples, 0.67%)</title><rect x="722.3" y="963.0" width="7.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="725.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.63%)</title><rect x="722.8" y="947.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.63%)</title><rect x="722.8" y="931.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.8" y="942.0"></text>
</g>
<g>
<title>sys_futex (42 samples, 0.63%)</title><rect x="722.8" y="915.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.8" y="926.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.61%)</title><rect x="723.0" y="899.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.0" y="910.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.60%)</title><rect x="723.2" y="883.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 0.57%)</title><rect x="723.5" y="867.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.5" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.57%)</title><rect x="723.5" y="851.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.5" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 0.57%)</title><rect x="723.5" y="835.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="726.5" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (558 samples, 8.35%)</title><rect x="730.6" y="1299.0" width="98.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="1310.0">akka/stream/..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (2 samples, 0.03%)</title><rect x="730.6" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (2 samples, 0.03%)</title><rect x="730.6" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (2 samples, 0.03%)</title><rect x="730.6" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (2 samples, 0.03%)</title><rect x="730.6" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (2 samples, 0.03%)</title><rect x="730.6" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (2 samples, 0.03%)</title><rect x="730.6" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (2 samples, 0.03%)</title><rect x="730.6" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (2 samples, 0.03%)</title><rect x="730.6" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1344/1240342785.apply (2 samples, 0.03%)</title><rect x="730.6" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (2 samples, 0.03%)</title><rect x="730.6" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1343/735879134.apply (2 samples, 0.03%)</title><rect x="730.6" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (2 samples, 0.03%)</title><rect x="730.6" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (2 samples, 0.03%)</title><rect x="730.6" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (2 samples, 0.03%)</title><rect x="730.6" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (2 samples, 0.03%)</title><rect x="730.6" y="1059.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (2 samples, 0.03%)</title><rect x="730.6" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (2 samples, 0.03%)</title><rect x="730.6" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (2 samples, 0.03%)</title><rect x="730.6" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (2 samples, 0.03%)</title><rect x="730.6" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (2 samples, 0.03%)</title><rect x="730.6" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (2 samples, 0.03%)</title><rect x="730.6" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (2 samples, 0.03%)</title><rect x="730.6" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (2 samples, 0.03%)</title><rect x="730.6" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (2 samples, 0.03%)</title><rect x="730.6" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$448/925936450.apply (2 samples, 0.03%)</title><rect x="730.6" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.03%)</title><rect x="730.6" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (2 samples, 0.03%)</title><rect x="730.6" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="730.6" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.6" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="730.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.6" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="730.6" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$1355/224293831.apply (2 samples, 0.03%)</title><rect x="730.6" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.6" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (2 samples, 0.03%)</title><rect x="730.6" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (2 samples, 0.03%)</title><rect x="730.6" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (2 samples, 0.03%)</title><rect x="730.6" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (2 samples, 0.03%)</title><rect x="730.6" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.6" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (2 samples, 0.03%)</title><rect x="730.6" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.6" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (2 samples, 0.03%)</title><rect x="730.6" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.6" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (2 samples, 0.03%)</title><rect x="730.6" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (2 samples, 0.03%)</title><rect x="730.6" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.6" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (2 samples, 0.03%)</title><rect x="730.6" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.6" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (2 samples, 0.03%)</title><rect x="730.6" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.6" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (12 samples, 0.18%)</title><rect x="730.9" y="1283.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (12 samples, 0.18%)</title><rect x="730.9" y="1267.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (12 samples, 0.18%)</title><rect x="730.9" y="1251.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (12 samples, 0.18%)</title><rect x="730.9" y="1235.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (12 samples, 0.18%)</title><rect x="730.9" y="1219.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (12 samples, 0.18%)</title><rect x="730.9" y="1203.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1259/1125322523.apply (11 samples, 0.16%)</title><rect x="730.9" y="1187.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (11 samples, 0.16%)</title><rect x="730.9" y="1171.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$OutOfEmbargo$.onNewRequest (5 samples, 0.07%)</title><rect x="730.9" y="1155.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (5 samples, 0.07%)</title><rect x="730.9" y="1139.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (5 samples, 0.07%)</title><rect x="730.9" y="1123.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (5 samples, 0.07%)</title><rect x="730.9" y="1107.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (5 samples, 0.07%)</title><rect x="730.9" y="1091.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (2 samples, 0.03%)</title><rect x="730.9" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (2 samples, 0.03%)</title><rect x="730.9" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (2 samples, 0.03%)</title><rect x="730.9" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.9" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (2 samples, 0.03%)</title><rect x="730.9" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (2 samples, 0.03%)</title><rect x="730.9" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="730.9" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="730.9" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (6 samples, 0.09%)</title><rect x="731.8" y="1155.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (6 samples, 0.09%)</title><rect x="731.8" y="1139.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (6 samples, 0.09%)</title><rect x="731.8" y="1123.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (6 samples, 0.09%)</title><rect x="731.8" y="1107.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (6 samples, 0.09%)</title><rect x="731.8" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.8" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (2 samples, 0.03%)</title><rect x="731.8" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (2 samples, 0.03%)</title><rect x="731.8" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (2 samples, 0.03%)</title><rect x="731.8" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.8" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (2 samples, 0.03%)</title><rect x="731.8" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.8" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (2 samples, 0.03%)</title><rect x="731.8" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.8" y="1022.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="731.8" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (2 samples, 0.03%)</title><rect x="731.8" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.8" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="732.3" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.&lt;init&gt; (2 samples, 0.03%)</title><rect x="732.3" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (101 samples, 1.51%)</title><rect x="733.0" y="1283.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.handleParserOutput (2 samples, 0.03%)</title><rect x="733.0" y="1267.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (99 samples, 1.48%)</title><rect x="733.4" y="1267.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (99 samples, 1.48%)</title><rect x="733.4" y="1251.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (99 samples, 1.48%)</title><rect x="733.4" y="1235.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (99 samples, 1.48%)</title><rect x="733.4" y="1219.0" width="17.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (99 samples, 1.48%)</title><rect x="733.4" y="1203.0" width="17.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (99 samples, 1.48%)</title><rect x="733.4" y="1187.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (99 samples, 1.48%)</title><rect x="733.4" y="1171.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$917/1180193943.apply (62 samples, 0.93%)</title><rect x="733.4" y="1155.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (62 samples, 0.93%)</title><rect x="733.4" y="1139.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (62 samples, 0.93%)</title><rect x="733.4" y="1123.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (62 samples, 0.93%)</title><rect x="733.4" y="1107.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (62 samples, 0.93%)</title><rect x="733.4" y="1091.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (62 samples, 0.93%)</title><rect x="733.4" y="1075.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (56 samples, 0.84%)</title><rect x="733.4" y="1059.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (56 samples, 0.84%)</title><rect x="733.4" y="1043.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (56 samples, 0.84%)</title><rect x="733.4" y="1027.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (54 samples, 0.81%)</title><rect x="733.4" y="1011.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (50 samples, 0.75%)</title><rect x="733.9" y="995.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (43 samples, 0.64%)</title><rect x="734.1" y="979.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.akka$http$impl$engine$parsing$HttpHeaderParser$$scanHeaderValue (5 samples, 0.07%)</title><rect x="734.3" y="963.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.asciiString (4 samples, 0.06%)</title><rect x="734.5" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/package$.build$1 (2 samples, 0.03%)</title><rect x="734.8" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="734.8" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.8" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="734.8" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$448/925936450.apply (36 samples, 0.54%)</title><rect x="735.2" y="963.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (36 samples, 0.54%)</title><rect x="735.2" y="947.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (13 samples, 0.19%)</title><rect x="735.2" y="931.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.2" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (13 samples, 0.19%)</title><rect x="735.2" y="915.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.2" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (12 samples, 0.18%)</title><rect x="735.2" y="899.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.2" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (12 samples, 0.18%)</title><rect x="735.2" y="883.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.2" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1058/54253406.apply (12 samples, 0.18%)</title><rect x="735.2" y="867.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.2" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (12 samples, 0.18%)</title><rect x="735.2" y="851.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.2" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (12 samples, 0.18%)</title><rect x="735.2" y="835.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.2" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (12 samples, 0.18%)</title><rect x="735.2" y="819.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.2" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (12 samples, 0.18%)</title><rect x="735.2" y="803.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.2" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (6 samples, 0.09%)</title><rect x="735.2" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.2" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (4 samples, 0.06%)</title><rect x="735.3" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (4 samples, 0.06%)</title><rect x="735.3" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (4 samples, 0.06%)</title><rect x="735.3" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.3" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaTypes$.getForKey (3 samples, 0.04%)</title><rect x="735.5" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.5" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey$ (3 samples, 0.04%)</title><rect x="735.5" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.5" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey (3 samples, 0.04%)</title><rect x="735.5" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.5" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (3 samples, 0.04%)</title><rect x="735.5" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.5" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="735.5" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.5" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="735.5" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.5" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (6 samples, 0.09%)</title><rect x="736.2" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.2" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (6 samples, 0.09%)</title><rect x="736.2" y="771.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.2" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (6 samples, 0.09%)</title><rect x="736.2" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.2" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.type (3 samples, 0.04%)</title><rect x="736.4" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.type$ (3 samples, 0.04%)</title><rect x="736.4" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.type (3 samples, 0.04%)</title><rect x="736.4" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.4" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token (3 samples, 0.04%)</title><rect x="736.4" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.4" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token$ (3 samples, 0.04%)</title><rect x="736.4" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.4" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token (3 samples, 0.04%)</title><rect x="736.4" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.4" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.token0 (3 samples, 0.04%)</title><rect x="736.4" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.4" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token0$ (3 samples, 0.04%)</title><rect x="736.4" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.4" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.token0 (3 samples, 0.04%)</title><rect x="736.4" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.4" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$72 (3 samples, 0.04%)</title><rect x="736.4" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (2 samples, 0.03%)</title><rect x="736.6" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.6" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (16 samples, 0.24%)</title><rect x="737.5" y="931.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.5" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (14 samples, 0.21%)</title><rect x="737.6" y="915.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.6" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (14 samples, 0.21%)</title><rect x="737.6" y="899.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.6" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (14 samples, 0.21%)</title><rect x="737.6" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31$$Lambda$450/1929969663.apply (13 samples, 0.19%)</title><rect x="737.6" y="867.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.6" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.$anonfun$apply$31 (13 samples, 0.19%)</title><rect x="737.6" y="851.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.6" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.host (13 samples, 0.19%)</title><rect x="737.6" y="835.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.6" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host$ (13 samples, 0.19%)</title><rect x="737.6" y="819.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.host (13 samples, 0.19%)</title><rect x="737.6" y="803.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.6" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.newUriParser (2 samples, 0.03%)</title><rect x="737.6" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.6" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="737.6" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.6" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="737.6" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort$minuspushed (11 samples, 0.16%)</title><rect x="738.0" y="787.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hostAndPort (11 samples, 0.16%)</title><rect x="738.0" y="771.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.host (10 samples, 0.15%)</title><rect x="738.0" y="755.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (9 samples, 0.13%)</title><rect x="738.0" y="739.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (6 samples, 0.09%)</title><rect x="738.2" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.2" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (2 samples, 0.03%)</title><rect x="738.2" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.2" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (2 samples, 0.03%)</title><rect x="738.2" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.2" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (2 samples, 0.03%)</title><rect x="738.2" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="738.2" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.2" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="738.2" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.2" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="738.2" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.2" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="738.2" y="611.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="741.2" y="622.0"></text>
</g>
<g>
<title>akka/parboiled2/CharPredicate$MaskBased.apply (3 samples, 0.04%)</title><rect x="738.5" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.5" y="718.0"></text>
</g>
<g>
<title>akka/parboiled2/CharPredicate$MaskBased.apply (2 samples, 0.03%)</title><rect x="738.5" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.5" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (7 samples, 0.10%)</title><rect x="740.3" y="931.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.3" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (7 samples, 0.10%)</title><rect x="740.3" y="915.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (5 samples, 0.07%)</title><rect x="740.3" y="899.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.3" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (5 samples, 0.07%)</title><rect x="740.3" y="883.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$932/740366268.apply (5 samples, 0.07%)</title><rect x="740.3" y="867.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (5 samples, 0.07%)</title><rect x="740.3" y="851.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (5 samples, 0.07%)</title><rect x="740.3" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.3" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (5 samples, 0.07%)</title><rect x="740.3" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.3" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (5 samples, 0.07%)</title><rect x="740.3" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (3 samples, 0.04%)</title><rect x="740.5" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (3 samples, 0.04%)</title><rect x="740.5" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.5" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (3 samples, 0.04%)</title><rect x="740.5" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.5" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product$minusor$minuscomment (2 samples, 0.03%)</title><rect x="740.5" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.5" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment$ (2 samples, 0.03%)</title><rect x="740.5" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.5" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$minusor$minuscomment (2 samples, 0.03%)</title><rect x="740.5" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.5" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.product (2 samples, 0.03%)</title><rect x="740.5" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.5" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product$ (2 samples, 0.03%)</title><rect x="740.5" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.5" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.product (2 samples, 0.03%)</title><rect x="740.5" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.5" y="670.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.toHList (2 samples, 0.03%)</title><rect x="741.2" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (2 samples, 0.03%)</title><rect x="741.7" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.7" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (2 samples, 0.03%)</title><rect x="741.7" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.7" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="741.7" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.unshareIfRequired (4 samples, 0.06%)</title><rect x="742.0" y="979.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.0" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="742.4" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (2 samples, 0.03%)</title><rect x="742.9" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (6 samples, 0.09%)</title><rect x="743.3" y="1059.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (5 samples, 0.07%)</title><rect x="743.5" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (5 samples, 0.07%)</title><rect x="743.5" y="1027.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.5" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (5 samples, 0.07%)</title><rect x="743.5" y="1011.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.5" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (5 samples, 0.07%)</title><rect x="743.5" y="995.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.5" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (5 samples, 0.07%)</title><rect x="743.5" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$931/580980351.apply (2 samples, 0.03%)</title><rect x="743.5" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (2 samples, 0.03%)</title><rect x="743.5" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (2 samples, 0.03%)</title><rect x="743.5" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (2 samples, 0.03%)</title><rect x="743.5" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.5" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (3 samples, 0.04%)</title><rect x="743.8" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$934/539459581.apply (37 samples, 0.55%)</title><rect x="744.3" y="1155.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (37 samples, 0.55%)</title><rect x="744.3" y="1139.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$933/1837955577.apply (37 samples, 0.55%)</title><rect x="744.3" y="1123.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (37 samples, 0.55%)</title><rect x="744.3" y="1107.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (37 samples, 0.55%)</title><rect x="744.3" y="1091.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (37 samples, 0.55%)</title><rect x="744.3" y="1075.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (37 samples, 0.55%)</title><rect x="744.3" y="1059.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (37 samples, 0.55%)</title><rect x="744.3" y="1043.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (37 samples, 0.55%)</title><rect x="744.3" y="1027.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (11 samples, 0.16%)</title><rect x="744.3" y="1011.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (11 samples, 0.16%)</title><rect x="744.3" y="995.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (11 samples, 0.16%)</title><rect x="744.3" y="979.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (7 samples, 0.10%)</title><rect x="744.5" y="963.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractBuffer.$plus$eq (2 samples, 0.03%)</title><rect x="745.9" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq$ (2 samples, 0.03%)</title><rect x="745.9" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$eq (2 samples, 0.03%)</title><rect x="745.9" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addOne (2 samples, 0.03%)</title><rect x="745.9" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addOne (2 samples, 0.03%)</title><rect x="745.9" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.next_$eq (2 samples, 0.03%)</title><rect x="745.9" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (2 samples, 0.03%)</title><rect x="745.9" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (25 samples, 0.37%)</title><rect x="746.5" y="1011.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.findUriEnd$1 (5 samples, 0.07%)</title><rect x="746.5" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.5" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToCharacter (2 samples, 0.03%)</title><rect x="747.0" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.valueOf (2 samples, 0.03%)</title><rect x="747.0" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (20 samples, 0.30%)</title><rect x="747.3" y="995.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (20 samples, 0.30%)</title><rect x="747.3" y="979.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.3" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (20 samples, 0.30%)</title><rect x="747.3" y="963.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.3" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (19 samples, 0.28%)</title><rect x="747.3" y="947.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.3" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (19 samples, 0.28%)</title><rect x="747.3" y="931.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$931/580980351.apply (9 samples, 0.13%)</title><rect x="747.3" y="915.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHttpRequestTarget$1 (9 samples, 0.13%)</title><rect x="747.3" y="899.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.request$minustarget (9 samples, 0.13%)</title><rect x="747.3" y="883.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.absolute$minuspath (7 samples, 0.10%)</title><rect x="747.3" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$26 (7 samples, 0.10%)</title><rect x="747.3" y="851.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.segment (5 samples, 0.07%)</title><rect x="747.5" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.5" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$12 (5 samples, 0.07%)</title><rect x="747.5" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.pchar (5 samples, 0.07%)</title><rect x="747.5" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.5" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.appendSB (4 samples, 0.06%)</title><rect x="747.5" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.5" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB$ (4 samples, 0.06%)</title><rect x="747.5" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/StringBuilding.appendSB (3 samples, 0.04%)</title><rect x="747.5" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="747.5" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="747.5" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.5" y="734.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__restoreState (2 samples, 0.03%)</title><rect x="748.6" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.6" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (10 samples, 0.15%)</title><rect x="748.9" y="915.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.9" y="926.0"></text>
</g>
<g>
<title>page_fault (5 samples, 0.07%)</title><rect x="749.8" y="899.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="752.8" y="910.0"></text>
</g>
<g>
<title>do_page_fault (5 samples, 0.07%)</title><rect x="749.8" y="883.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.8" y="894.0"></text>
</g>
<g>
<title>__do_page_fault (5 samples, 0.07%)</title><rect x="749.8" y="867.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="752.8" y="878.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="750.0" y="851.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.0" y="862.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="750.2" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.2" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (24 samples, 0.36%)</title><rect x="750.9" y="1283.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (24 samples, 0.36%)</title><rect x="750.9" y="1267.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (20 samples, 0.30%)</title><rect x="750.9" y="1251.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (2 samples, 0.03%)</title><rect x="751.4" y="1235.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (8 samples, 0.12%)</title><rect x="751.8" y="1235.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (5 samples, 0.07%)</title><rect x="752.3" y="1219.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.3" y="1230.0"></text>
</g>
<g>
<title>scala/Tuple2.&lt;init&gt; (5 samples, 0.07%)</title><rect x="752.3" y="1203.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.3" y="1214.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.07%)</title><rect x="752.3" y="1187.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="755.3" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.07%)</title><rect x="752.3" y="1171.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="755.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="752.6" y="1155.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.6" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="752.6" y="1139.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (4 samples, 0.06%)</title><rect x="753.2" y="1235.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (4 samples, 0.06%)</title><rect x="753.2" y="1219.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (4 samples, 0.06%)</title><rect x="753.2" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (4 samples, 0.06%)</title><rect x="753.2" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (4 samples, 0.06%)</title><rect x="753.2" y="1171.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (4 samples, 0.06%)</title><rect x="753.2" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.render (4 samples, 0.06%)</title><rect x="753.2" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render$ (4 samples, 0.06%)</title><rect x="753.2" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render (3 samples, 0.04%)</title><rect x="753.3" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="753.3" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.3" y="1102.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.$plus$plus (3 samples, 0.04%)</title><rect x="753.9" y="1235.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.9" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings$.apply (3 samples, 0.04%)</title><rect x="753.9" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.apply (2 samples, 0.03%)</title><rect x="754.1" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (2 samples, 0.03%)</title><rect x="754.1" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (2 samples, 0.03%)</title><rect x="754.1" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.03%)</title><rect x="754.1" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.03%)</title><rect x="754.1" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderStatusLine$1 (3 samples, 0.04%)</title><rect x="754.4" y="1251.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$4.onPush (3 samples, 0.04%)</title><rect x="755.3" y="1283.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$10.onPush (2 samples, 0.03%)</title><rect x="755.8" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (2 samples, 0.03%)</title><rect x="756.2" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (2 samples, 0.03%)</title><rect x="756.5" y="1283.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.apply (2 samples, 0.03%)</title><rect x="756.5" y="1267.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$4.onPush (7 samples, 0.10%)</title><rect x="756.9" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.&lt;init&gt; (5 samples, 0.07%)</title><rect x="757.1" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.07%)</title><rect x="757.1" y="1251.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (5 samples, 0.07%)</title><rect x="757.1" y="1235.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (2 samples, 0.03%)</title><rect x="757.1" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$940/2014132213.apply (2 samples, 0.03%)</title><rect x="757.1" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (2 samples, 0.03%)</title><rect x="757.1" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.1" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.value (3 samples, 0.04%)</title><rect x="757.4" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.value0 (3 samples, 0.04%)</title><rect x="757.4" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$RequestTimeoutSupport$$anon$3$$anon$6.onPush (2 samples, 0.03%)</title><rect x="758.1" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$TimeoutAccessImpl.clear (2 samples, 0.03%)</title><rect x="758.1" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.foreach$extension (2 samples, 0.03%)</title><rect x="758.1" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="758.1" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="758.1" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$2.onPush (2 samples, 0.03%)</title><rect x="758.5" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5$IdleBidiHandler.onPush (2 samples, 0.03%)</title><rect x="758.8" y="1283.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (2 samples, 0.03%)</title><rect x="758.8" y="1267.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="758.8" y="1251.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onPush (2 samples, 0.03%)</title><rect x="759.2" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (4 samples, 0.06%)</title><rect x="759.9" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (365 samples, 5.46%)</title><rect x="760.6" y="1283.0" width="64.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.6" y="1294.0">akka/st..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$439/169049466.apply (365 samples, 5.46%)</title><rect x="760.6" y="1267.0" width="64.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.6" y="1278.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (365 samples, 5.46%)</title><rect x="760.6" y="1251.0" width="64.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.6" y="1262.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="760.8" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="760.8" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (357 samples, 5.34%)</title><rect x="761.1" y="1235.0" width="63.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.1" y="1246.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (357 samples, 5.34%)</title><rect x="761.1" y="1219.0" width="63.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.1" y="1230.0">akka/ht..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$946/1524906209.apply (353 samples, 5.28%)</title><rect x="761.1" y="1203.0" width="62.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.1" y="1214.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (353 samples, 5.28%)</title><rect x="761.1" y="1187.0" width="62.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.1" y="1198.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1605755694.apply (3 samples, 0.04%)</title><rect x="761.1" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (3 samples, 0.04%)</title><rect x="761.1" y="1155.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.03%)</title><rect x="761.1" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (350 samples, 5.24%)</title><rect x="761.6" y="1171.0" width="61.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.6" y="1182.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (350 samples, 5.24%)</title><rect x="761.6" y="1155.0" width="61.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.6" y="1166.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (2 samples, 0.03%)</title><rect x="761.6" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (2 samples, 0.03%)</title><rect x="761.6" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (2 samples, 0.03%)</title><rect x="762.0" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (2 samples, 0.03%)</title><rect x="762.0" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.0" y="1134.0"></text>
</g>
<g>
<title>scala/Tuple1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="762.0" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="762.0" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$951/976316419.apply (346 samples, 5.18%)</title><rect x="762.4" y="1139.0" width="61.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.4" y="1150.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (345 samples, 5.16%)</title><rect x="762.5" y="1123.0" width="60.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.5" y="1134.0">akka/h..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$276/2063009760.apply (34 samples, 0.51%)</title><rect x="762.7" y="1107.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (34 samples, 0.51%)</title><rect x="762.7" y="1091.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$276/2063009760.apply (34 samples, 0.51%)</title><rect x="762.7" y="1075.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (34 samples, 0.51%)</title><rect x="762.7" y="1059.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$276/2063009760.apply (34 samples, 0.51%)</title><rect x="762.7" y="1043.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (34 samples, 0.51%)</title><rect x="762.7" y="1027.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$276/2063009760.apply (6 samples, 0.09%)</title><rect x="762.7" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (6 samples, 0.09%)</title><rect x="762.7" y="995.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (6 samples, 0.09%)</title><rect x="762.7" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (6 samples, 0.09%)</title><rect x="762.7" y="963.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (6 samples, 0.09%)</title><rect x="762.7" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$952/65472809.apply (6 samples, 0.09%)</title><rect x="762.7" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (6 samples, 0.09%)</title><rect x="762.7" y="915.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (5 samples, 0.07%)</title><rect x="762.7" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.7" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (5 samples, 0.07%)</title><rect x="762.7" y="883.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.7" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (3 samples, 0.04%)</title><rect x="762.7" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (2 samples, 0.03%)</title><rect x="762.9" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.9" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (2 samples, 0.03%)</title><rect x="762.9" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.9" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (2 samples, 0.03%)</title><rect x="762.9" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.9" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="762.9" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.9" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="762.9" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.9" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/1775721113.apply (2 samples, 0.03%)</title><rect x="763.2" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.2" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (2 samples, 0.03%)</title><rect x="763.2" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.2" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (2 samples, 0.03%)</title><rect x="763.2" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.2" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (2 samples, 0.03%)</title><rect x="763.2" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.2" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$968/1768989079.apply (2 samples, 0.03%)</title><rect x="763.2" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.2" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (2 samples, 0.03%)</title><rect x="763.2" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.2" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (2 samples, 0.03%)</title><rect x="763.2" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.2" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (2 samples, 0.03%)</title><rect x="763.2" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.2" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$273/1896558831.apply (2 samples, 0.03%)</title><rect x="763.2" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.2" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (2 samples, 0.03%)</title><rect x="763.2" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.2" y="734.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$966/1610604010.apply (2 samples, 0.03%)</title><rect x="763.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.2" y="718.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$2 (2 samples, 0.03%)</title><rect x="763.2" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.2" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (28 samples, 0.42%)</title><rect x="763.8" y="1011.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (28 samples, 0.42%)</title><rect x="763.8" y="995.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.8" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (28 samples, 0.42%)</title><rect x="763.8" y="979.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$952/65472809.apply (28 samples, 0.42%)</title><rect x="763.8" y="963.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (28 samples, 0.42%)</title><rect x="763.8" y="947.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (28 samples, 0.42%)</title><rect x="763.8" y="931.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (28 samples, 0.42%)</title><rect x="763.8" y="915.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (6 samples, 0.09%)</title><rect x="763.8" y="899.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (6 samples, 0.09%)</title><rect x="763.8" y="883.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (5 samples, 0.07%)</title><rect x="763.8" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/216563480.apply (4 samples, 0.06%)</title><rect x="763.8" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (3 samples, 0.04%)</title><rect x="763.8" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (3 samples, 0.04%)</title><rect x="763.8" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.8" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$955/325048750.apply (3 samples, 0.04%)</title><rect x="763.8" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.8" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (3 samples, 0.04%)</title><rect x="763.8" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.8" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1605755694.apply (3 samples, 0.04%)</title><rect x="763.8" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.8" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (3 samples, 0.04%)</title><rect x="763.8" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.8" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (3 samples, 0.04%)</title><rect x="763.8" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.8" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$958/764010489.apply (3 samples, 0.04%)</title><rect x="763.8" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.8" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (3 samples, 0.04%)</title><rect x="763.8" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (3 samples, 0.04%)</title><rect x="763.8" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (3 samples, 0.04%)</title><rect x="763.8" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$266/2057077925.apply (3 samples, 0.04%)</title><rect x="763.8" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.8" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (3 samples, 0.04%)</title><rect x="763.8" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.8" y="654.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$269/2114270481.apply (3 samples, 0.04%)</title><rect x="763.8" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.8" y="638.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$4 (2 samples, 0.03%)</title><rect x="763.9" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.9" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$271/1405055124.apply (2 samples, 0.03%)</title><rect x="763.9" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.9" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (2 samples, 0.03%)</title><rect x="763.9" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.9" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.03%)</title><rect x="763.9" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.9" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (3 samples, 0.04%)</title><rect x="764.8" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (3 samples, 0.04%)</title><rect x="764.8" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (3 samples, 0.04%)</title><rect x="764.8" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (2 samples, 0.03%)</title><rect x="765.0" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (2 samples, 0.03%)</title><rect x="765.0" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (2 samples, 0.03%)</title><rect x="765.0" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="765.0" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.0" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$953/2117733823.apply (2 samples, 0.03%)</title><rect x="765.0" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.0" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="765.0" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="765.0" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (2 samples, 0.03%)</title><rect x="765.0" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (2 samples, 0.03%)</title><rect x="765.0" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.0" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="765.0" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.0" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$953/2117733823.apply (2 samples, 0.03%)</title><rect x="765.0" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="765.0" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.0" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/1775721113.apply (18 samples, 0.27%)</title><rect x="765.4" y="899.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (18 samples, 0.27%)</title><rect x="765.4" y="883.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (18 samples, 0.27%)</title><rect x="765.4" y="867.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (18 samples, 0.27%)</title><rect x="765.4" y="851.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$968/1768989079.apply (17 samples, 0.25%)</title><rect x="765.4" y="835.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (17 samples, 0.25%)</title><rect x="765.4" y="819.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.4" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (9 samples, 0.13%)</title><rect x="765.4" y="803.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.4" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (9 samples, 0.13%)</title><rect x="765.4" y="787.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.4" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$273/1896558831.apply (9 samples, 0.13%)</title><rect x="765.4" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.4" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (9 samples, 0.13%)</title><rect x="765.4" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.4" y="766.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$1012/1707726766.apply (9 samples, 0.13%)</title><rect x="765.4" y="739.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.4" y="750.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$5 (9 samples, 0.13%)</title><rect x="765.4" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.4" y="734.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.itIsTime (5 samples, 0.07%)</title><rect x="765.4" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.4" y="718.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.StartupBatchInterval (2 samples, 0.03%)</title><rect x="765.4" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.4" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="765.4" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="768.4" y="686.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="765.4" y="659.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="768.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="765.4" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="768.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="765.4" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="768.4" y="638.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.toMillis (3 samples, 0.04%)</title><rect x="765.7" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toMillis (3 samples, 0.04%)</title><rect x="765.7" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.7" y="686.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.indexWhere (3 samples, 0.04%)</title><rect x="766.2" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.2" y="718.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.indexWhere$ (3 samples, 0.04%)</title><rect x="766.2" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.2" y="702.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.indexWhere (3 samples, 0.04%)</title><rect x="766.2" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.2" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.indexWhere (3 samples, 0.04%)</title><rect x="766.2" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.2" y="670.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.indexWhere$ (3 samples, 0.04%)</title><rect x="766.2" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.2" y="654.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.indexWhere (3 samples, 0.04%)</title><rect x="766.2" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.2" y="638.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator$$Lambda$1013/1183045019.apply (3 samples, 0.04%)</title><rect x="766.2" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.2" y="622.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$7$adapted (3 samples, 0.04%)</title><rect x="766.2" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.2" y="606.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/StartupCoordinator.$anonfun$route$7 (3 samples, 0.04%)</title><rect x="766.2" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.2" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.contains (3 samples, 0.04%)</title><rect x="766.2" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.2" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet$Node.findNode (2 samples, 0.03%)</title><rect x="766.4" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.4" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (8 samples, 0.12%)</title><rect x="766.9" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.9" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (8 samples, 0.12%)</title><rect x="766.9" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.9" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$970/1312341122.apply (8 samples, 0.12%)</title><rect x="766.9" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.9" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (8 samples, 0.12%)</title><rect x="766.9" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.9" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (8 samples, 0.12%)</title><rect x="766.9" y="739.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.9" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (8 samples, 0.12%)</title><rect x="766.9" y="723.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.9" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (8 samples, 0.12%)</title><rect x="766.9" y="707.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.9" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (8 samples, 0.12%)</title><rect x="766.9" y="691.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.9" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (8 samples, 0.12%)</title><rect x="766.9" y="675.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.9" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (3 samples, 0.04%)</title><rect x="766.9" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.9" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="766.9" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.9" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="766.9" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.9" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (3 samples, 0.04%)</title><rect x="766.9" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.9" y="622.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="766.9" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.9" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (3 samples, 0.04%)</title><rect x="766.9" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (3 samples, 0.04%)</title><rect x="766.9" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.03%)</title><rect x="767.1" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.1" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.07%)</title><rect x="767.5" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.5" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (5 samples, 0.07%)</title><rect x="767.5" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.5" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (4 samples, 0.06%)</title><rect x="767.7" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.7" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$940/2014132213.apply (4 samples, 0.06%)</title><rect x="767.7" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.7" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (4 samples, 0.06%)</title><rect x="767.7" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.7" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$992/813441768.apply (4 samples, 0.06%)</title><rect x="767.7" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.7" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (4 samples, 0.06%)</title><rect x="767.7" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.7" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$$Lambda$991/1626405092.apply (2 samples, 0.03%)</title><rect x="767.7" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.7" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$.$anonfun$opaque$2 (2 samples, 0.03%)</title><rect x="767.7" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.7" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$980/1042503510.apply (2 samples, 0.03%)</title><rect x="767.7" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.7" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCode$1 (2 samples, 0.03%)</title><rect x="767.7" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.7" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$.akka$http$scaladsl$marshalling$PredefinedToResponseMarshallers$$statusCodeResponse (2 samples, 0.03%)</title><rect x="767.7" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.7" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse$.apply (2 samples, 0.03%)</title><rect x="767.7" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.7" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.&lt;init&gt; (2 samples, 0.03%)</title><rect x="767.7" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.7" y="462.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (2 samples, 0.03%)</title><rect x="768.0" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.0" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (2 samples, 0.03%)</title><rect x="768.0" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.0" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (2 samples, 0.03%)</title><rect x="768.0" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.0" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (2 samples, 0.03%)</title><rect x="768.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.0" y="510.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="768.0" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="768.0" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.0" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (309 samples, 4.62%)</title><rect x="768.7" y="1107.0" width="54.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="1118.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (309 samples, 4.62%)</title><rect x="768.7" y="1091.0" width="54.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="1102.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (7 samples, 0.10%)</title><rect x="768.7" y="1075.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (7 samples, 0.10%)</title><rect x="768.7" y="1059.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.09%)</title><rect x="768.7" y="1043.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/216563480.apply (6 samples, 0.09%)</title><rect x="768.7" y="1027.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (6 samples, 0.09%)</title><rect x="768.7" y="1011.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (6 samples, 0.09%)</title><rect x="768.7" y="995.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$955/325048750.apply (6 samples, 0.09%)</title><rect x="768.7" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$tprovide$1 (6 samples, 0.09%)</title><rect x="768.7" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$945/1605755694.apply (6 samples, 0.09%)</title><rect x="768.7" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (6 samples, 0.09%)</title><rect x="768.7" y="931.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (5 samples, 0.07%)</title><rect x="768.7" y="915.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$958/764010489.apply (4 samples, 0.06%)</title><rect x="768.7" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.7" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (4 samples, 0.06%)</title><rect x="768.7" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (3 samples, 0.04%)</title><rect x="768.9" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.9" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (3 samples, 0.04%)</title><rect x="768.9" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.9" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$273/1896558831.apply (3 samples, 0.04%)</title><rect x="768.9" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.9" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (2 samples, 0.03%)</title><rect x="768.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.9" y="830.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$842/244900076.apply (2 samples, 0.03%)</title><rect x="768.9" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.9" y="814.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$1 (2 samples, 0.03%)</title><rect x="768.9" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.9" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$271/1405055124.apply (2 samples, 0.03%)</title><rect x="768.9" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.9" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (2 samples, 0.03%)</title><rect x="768.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.9" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.03%)</title><rect x="768.9" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.9" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$943/216563480.apply (2 samples, 0.03%)</title><rect x="768.9" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.9" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (6 samples, 0.09%)</title><rect x="769.9" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (6 samples, 0.09%)</title><rect x="769.9" y="1059.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (6 samples, 0.09%)</title><rect x="769.9" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (6 samples, 0.09%)</title><rect x="769.9" y="1027.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (6 samples, 0.09%)</title><rect x="769.9" y="1011.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (6 samples, 0.09%)</title><rect x="769.9" y="995.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (6 samples, 0.09%)</title><rect x="769.9" y="979.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (6 samples, 0.09%)</title><rect x="769.9" y="963.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (6 samples, 0.09%)</title><rect x="769.9" y="947.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$953/2117733823.apply (6 samples, 0.09%)</title><rect x="769.9" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (6 samples, 0.09%)</title><rect x="769.9" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (4 samples, 0.06%)</title><rect x="769.9" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (4 samples, 0.06%)</title><rect x="769.9" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (2 samples, 0.03%)</title><rect x="770.3" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (2 samples, 0.03%)</title><rect x="770.3" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.3" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="770.3" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.3" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$953/2117733823.apply (2 samples, 0.03%)</title><rect x="770.3" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.3" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="770.3" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.3" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.map (2 samples, 0.03%)</title><rect x="770.3" y="787.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.3" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.map (2 samples, 0.03%)</title><rect x="770.3" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.3" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$954/1820670970.apply (2 samples, 0.03%)</title><rect x="770.3" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.3" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$3 (2 samples, 0.03%)</title><rect x="770.3" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="770.3" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.3" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/1775721113.apply (296 samples, 4.43%)</title><rect x="771.0" y="1075.0" width="52.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.0" y="1086.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (296 samples, 4.43%)</title><rect x="771.0" y="1059.0" width="52.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.0" y="1070.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (296 samples, 4.43%)</title><rect x="771.0" y="1043.0" width="52.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.0" y="1054.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (296 samples, 4.43%)</title><rect x="771.0" y="1027.0" width="52.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.0" y="1038.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$968/1768989079.apply (295 samples, 4.41%)</title><rect x="771.2" y="1011.0" width="52.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.2" y="1022.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (295 samples, 4.41%)</title><rect x="771.2" y="995.0" width="52.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.2" y="1006.0">akka/..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$947/364612634.apply (15 samples, 0.22%)</title><rect x="771.2" y="979.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.2" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (15 samples, 0.22%)</title><rect x="771.2" y="963.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.2" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$273/1896558831.apply (15 samples, 0.22%)</title><rect x="771.2" y="947.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.2" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (15 samples, 0.22%)</title><rect x="771.2" y="931.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.2" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1059/1512637920.apply (15 samples, 0.22%)</title><rect x="771.2" y="915.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.2" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (15 samples, 0.22%)</title><rect x="771.2" y="899.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.2" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$271/1405055124.apply (13 samples, 0.19%)</title><rect x="771.4" y="883.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (13 samples, 0.19%)</title><rect x="771.4" y="867.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (13 samples, 0.19%)</title><rect x="771.4" y="851.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$958/764010489.apply (13 samples, 0.19%)</title><rect x="771.4" y="835.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.4" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (13 samples, 0.19%)</title><rect x="771.4" y="819.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.4" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$273/1896558831.apply (13 samples, 0.19%)</title><rect x="771.4" y="803.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.4" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (13 samples, 0.19%)</title><rect x="771.4" y="787.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.4" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1071/1679971321.apply (12 samples, 0.18%)</title><rect x="771.5" y="771.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.5" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (12 samples, 0.18%)</title><rect x="771.5" y="755.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.5" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (4 samples, 0.06%)</title><rect x="771.5" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.5" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (3 samples, 0.04%)</title><rect x="771.7" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.7" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (2 samples, 0.03%)</title><rect x="771.9" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (2 samples, 0.03%)</title><rect x="771.9" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.9" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.entity (4 samples, 0.06%)</title><rect x="772.6" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.6" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity$ (4 samples, 0.06%)</title><rect x="772.6" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.6" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity (4 samples, 0.06%)</title><rect x="772.6" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.6" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (4 samples, 0.06%)</title><rect x="772.6" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.6" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (4 samples, 0.06%)</title><rect x="772.6" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.6" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (4 samples, 0.06%)</title><rect x="772.6" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.6" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (3 samples, 0.04%)</title><rect x="772.8" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.8" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (3 samples, 0.04%)</title><rect x="772.8" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.8" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections (3 samples, 0.04%)</title><rect x="772.8" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.8" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRejections (3 samples, 0.04%)</title><rect x="772.8" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.8" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRejections$ (3 samples, 0.04%)</title><rect x="772.8" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.8" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRejections (3 samples, 0.04%)</title><rect x="772.8" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.8" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.recoverRejections (3 samples, 0.04%)</title><rect x="772.8" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.8" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejections$ (3 samples, 0.04%)</title><rect x="772.8" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.8" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.recoverRejections (2 samples, 0.03%)</title><rect x="772.9" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.9" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.mapRouteResultPF (2 samples, 0.03%)</title><rect x="772.9" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.9" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultPF$ (2 samples, 0.03%)</title><rect x="772.9" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.9" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.mapRouteResultPF (2 samples, 0.03%)</title><rect x="772.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.9" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/1775721113.apply (277 samples, 4.14%)</title><rect x="773.8" y="979.0" width="48.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.8" y="990.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (277 samples, 4.14%)</title><rect x="773.8" y="963.0" width="48.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.8" y="974.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (267 samples, 4.00%)</title><rect x="773.8" y="947.0" width="47.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.8" y="958.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (267 samples, 4.00%)</title><rect x="773.8" y="931.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.8" y="942.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (2 samples, 0.03%)</title><rect x="773.8" y="915.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (2 samples, 0.03%)</title><rect x="773.8" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$262/708926121.apply (2 samples, 0.03%)</title><rect x="773.8" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (2 samples, 0.03%)</title><rect x="773.8" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1099/1781324841.apply (2 samples, 0.03%)</title><rect x="773.8" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$1 (2 samples, 0.03%)</title><rect x="773.8" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1117/1980726678.apply (265 samples, 3.97%)</title><rect x="774.2" y="915.0" width="46.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.2" y="926.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (265 samples, 3.97%)</title><rect x="774.2" y="899.0" width="46.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.2" y="910.0">akka..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1153/1184883878.apply (3 samples, 0.04%)</title><rect x="774.2" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.2" y="894.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (3 samples, 0.04%)</title><rect x="774.2" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.2" y="878.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (3 samples, 0.04%)</title><rect x="774.2" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.2" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (3 samples, 0.04%)</title><rect x="774.2" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.2" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (3 samples, 0.04%)</title><rect x="774.2" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="774.4" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="774.4" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.4" y="798.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1159/1566197423.get$Lambda (2 samples, 0.03%)</title><rect x="774.4" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.4" y="782.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1159/1566197423.&lt;init&gt; (2 samples, 0.03%)</title><rect x="774.4" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.4" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1111/52122369.apply (261 samples, 3.91%)</title><rect x="774.7" y="883.0" width="46.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.7" y="894.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (260 samples, 3.89%)</title><rect x="774.7" y="867.0" width="45.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.7" y="878.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (260 samples, 3.89%)</title><rect x="774.7" y="851.0" width="45.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.7" y="862.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1121/922420883.apply (259 samples, 3.88%)</title><rect x="774.7" y="835.0" width="45.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.7" y="846.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (259 samples, 3.88%)</title><rect x="774.7" y="819.0" width="45.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.7" y="830.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (259 samples, 3.88%)</title><rect x="774.7" y="803.0" width="45.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.7" y="814.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1125/6155755.apply (257 samples, 3.85%)</title><rect x="775.1" y="787.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.1" y="798.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (257 samples, 3.85%)</title><rect x="775.1" y="771.0" width="45.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.1" y="782.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1129/1009975926.apply (3 samples, 0.04%)</title><rect x="775.8" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.8" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (3 samples, 0.04%)</title><rect x="775.8" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.8" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (3 samples, 0.04%)</title><rect x="775.8" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.8" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.04%)</title><rect x="775.8" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (250 samples, 3.74%)</title><rect x="776.3" y="755.0" width="44.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.3" y="766.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1125/6155755.apply (248 samples, 3.71%)</title><rect x="776.5" y="739.0" width="43.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.5" y="750.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (247 samples, 3.70%)</title><rect x="776.7" y="723.0" width="43.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.7" y="734.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1129/1009975926.apply (5 samples, 0.07%)</title><rect x="776.8" y="707.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (5 samples, 0.07%)</title><rect x="776.8" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.07%)</title><rect x="776.8" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (4 samples, 0.06%)</title><rect x="776.8" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.8" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (241 samples, 3.61%)</title><rect x="777.7" y="707.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="718.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1133/1882656581.apply (240 samples, 3.59%)</title><rect x="777.9" y="691.0" width="42.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.9" y="702.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (238 samples, 3.56%)</title><rect x="778.2" y="675.0" width="42.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.2" y="686.0">akka..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (237 samples, 3.55%)</title><rect x="778.4" y="659.0" width="41.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.4" y="670.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (37 samples, 0.55%)</title><rect x="778.6" y="643.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.6" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (10 samples, 0.15%)</title><rect x="778.6" y="627.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.6" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (10 samples, 0.15%)</title><rect x="778.6" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.6" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="778.6" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="781.6" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="778.6" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="781.6" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (8 samples, 0.12%)</title><rect x="779.0" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (3 samples, 0.04%)</title><rect x="779.0" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.0" y="590.0"></text>
</g>
<g>
<title>akka/stream/FlowShape.&lt;init&gt; (3 samples, 0.04%)</title><rect x="779.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.0" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (3 samples, 0.04%)</title><rect x="779.0" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.0" y="558.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="779.1" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.1" y="542.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (2 samples, 0.03%)</title><rect x="779.1" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.1" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (5 samples, 0.07%)</title><rect x="779.5" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.5" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (5 samples, 0.07%)</title><rect x="779.5" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.5" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (4 samples, 0.06%)</title><rect x="779.7" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.7" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="779.7" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="779.7" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.7" y="526.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.03%)</title><rect x="780.0" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.0" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.03%)</title><rect x="780.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.0" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (2 samples, 0.03%)</title><rect x="780.0" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.0" y="510.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (6 samples, 0.09%)</title><rect x="780.4" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (6 samples, 0.09%)</title><rect x="780.4" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.4" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (6 samples, 0.09%)</title><rect x="780.4" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.traversal (2 samples, 0.03%)</title><rect x="780.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.7" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.addMatCompose (2 samples, 0.03%)</title><rect x="781.1" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (19 samples, 0.28%)</title><rect x="781.4" y="627.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (17 samples, 0.25%)</title><rect x="781.6" y="611.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.6" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (2 samples, 0.03%)</title><rect x="781.6" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.6" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GenericGraphWithChangedAttributes.traversalBuilder (3 samples, 0.04%)</title><rect x="782.0" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.0" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.setAttributes (2 samples, 0.03%)</title><rect x="782.1" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes$ (2 samples, 0.03%)</title><rect x="782.1" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes (2 samples, 0.03%)</title><rect x="782.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.internalSetAttributes (2 samples, 0.03%)</title><rect x="782.1" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.1" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (10 samples, 0.15%)</title><rect x="782.5" y="595.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (10 samples, 0.15%)</title><rect x="782.5" y="579.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.5" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (2 samples, 0.03%)</title><rect x="782.5" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (5 samples, 0.07%)</title><rect x="783.0" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.0" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (5 samples, 0.07%)</title><rect x="783.0" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.0" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (5 samples, 0.07%)</title><rect x="783.0" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.0" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (5 samples, 0.07%)</title><rect x="783.0" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.0" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (4 samples, 0.06%)</title><rect x="783.2" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (4 samples, 0.06%)</title><rect x="783.2" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.2" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (4 samples, 0.06%)</title><rect x="783.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.2" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="783.5" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.5" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="783.5" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.5" y="446.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="783.9" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.9" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="783.9" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.9" y="558.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.withAttributes (2 samples, 0.03%)</title><rect x="784.2" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.2" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (2 samples, 0.03%)</title><rect x="784.8" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.8" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (199 samples, 2.98%)</title><rect x="785.1" y="643.0" width="35.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.1" y="654.0">akk..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (196 samples, 2.93%)</title><rect x="785.1" y="627.0" width="34.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="638.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (196 samples, 2.93%)</title><rect x="785.1" y="611.0" width="34.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="622.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (196 samples, 2.93%)</title><rect x="785.1" y="595.0" width="34.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="606.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (196 samples, 2.93%)</title><rect x="785.1" y="579.0" width="34.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="590.0">ak..</text>
</g>
<g>
<title>akka/stream/Attributes.and (4 samples, 0.06%)</title><rect x="785.7" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.7" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (4 samples, 0.06%)</title><rect x="785.7" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.7" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (3 samples, 0.04%)</title><rect x="785.8" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.8" y="542.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps$$anon$1.hasNext (2 samples, 0.03%)</title><rect x="786.0" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.0" y="526.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="786.4" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="786.4" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/Compose.apply (2 samples, 0.03%)</title><rect x="786.7" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.7" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (10 samples, 0.15%)</title><rect x="787.1" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (8 samples, 0.12%)</title><rect x="787.4" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (6 samples, 0.09%)</title><rect x="787.8" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.8" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (3 samples, 0.04%)</title><rect x="788.0" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.0" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource.createLogic (2 samples, 0.03%)</title><rect x="788.5" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.5" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (145 samples, 2.17%)</title><rect x="788.8" y="563.0" width="25.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.8" y="574.0">a..</text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (119 samples, 1.78%)</title><rect x="789.2" y="547.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.2" y="558.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (119 samples, 1.78%)</title><rect x="789.2" y="531.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.2" y="542.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (119 samples, 1.78%)</title><rect x="789.2" y="515.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.2" y="526.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (119 samples, 1.78%)</title><rect x="789.2" y="499.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.2" y="510.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/Children.checkName (2 samples, 0.03%)</title><rect x="789.2" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.2" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (2 samples, 0.03%)</title><rect x="789.2" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.2" y="478.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (2 samples, 0.03%)</title><rect x="789.2" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.2" y="462.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.findInvalidPathElementCharPosition (2 samples, 0.03%)</title><rect x="789.2" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.2" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validate$1 (2 samples, 0.03%)</title><rect x="789.2" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="789.2" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.2" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (117 samples, 1.75%)</title><rect x="789.5" y="483.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.5" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (11 samples, 0.16%)</title><rect x="789.5" y="467.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.5" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (11 samples, 0.16%)</title><rect x="789.5" y="451.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.5" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (11 samples, 0.16%)</title><rect x="789.5" y="435.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.5" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (5 samples, 0.07%)</title><rect x="790.1" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.1" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (5 samples, 0.07%)</title><rect x="790.1" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (5 samples, 0.07%)</title><rect x="790.1" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.1" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="790.1" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.1" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="790.3" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="790.3" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="790.3" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="790.4" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="793.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="790.4" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.4" y="174.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (2 samples, 0.03%)</title><rect x="791.0" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.0" y="430.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="791.0" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.0" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="791.0" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.0" y="398.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (18 samples, 0.27%)</title><rect x="791.5" y="467.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.5" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (17 samples, 0.25%)</title><rect x="791.7" y="451.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.7" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (17 samples, 0.25%)</title><rect x="791.7" y="435.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.7" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (16 samples, 0.24%)</title><rect x="791.8" y="419.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.8" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (7 samples, 0.10%)</title><rect x="791.8" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (7 samples, 0.10%)</title><rect x="791.8" y="387.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (7 samples, 0.10%)</title><rect x="791.8" y="371.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.8" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (7 samples, 0.10%)</title><rect x="791.8" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.8" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (7 samples, 0.10%)</title><rect x="791.8" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.8" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (6 samples, 0.09%)</title><rect x="792.0" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.0" y="334.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (6 samples, 0.09%)</title><rect x="792.0" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.0" y="318.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (6 samples, 0.09%)</title><rect x="792.0" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.0" y="302.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (6 samples, 0.09%)</title><rect x="792.0" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.0" y="286.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (6 samples, 0.09%)</title><rect x="792.0" y="259.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (6 samples, 0.09%)</title><rect x="792.0" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.0" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (9 samples, 0.13%)</title><rect x="793.1" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.1" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (8 samples, 0.12%)</title><rect x="793.3" y="387.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.12%)</title><rect x="793.3" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.12%)</title><rect x="793.3" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="793.3" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="793.3" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="793.3" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="793.3" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.07%)</title><rect x="793.3" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="793.4" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.4" y="270.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="793.4" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.4" y="254.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="793.4" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.4" y="238.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="793.4" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.4" y="222.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.06%)</title><rect x="793.4" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.4" y="206.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.04%)</title><rect x="793.4" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.4" y="190.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$RedTree.&lt;init&gt; (2 samples, 0.03%)</title><rect x="794.1" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.1" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.&lt;init&gt; (2 samples, 0.03%)</title><rect x="794.1" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.1" y="334.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (88 samples, 1.32%)</title><rect x="794.7" y="467.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.7" y="478.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (4 samples, 0.06%)</title><rect x="795.0" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.0" y="462.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (4 samples, 0.06%)</title><rect x="795.0" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.0" y="446.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithTerminalDoubleWildcard (2 samples, 0.03%)</title><rect x="795.0" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.0" y="430.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (72 samples, 1.08%)</title><rect x="795.7" y="451.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.7" y="462.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (3 samples, 0.04%)</title><rect x="795.7" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.7" y="446.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (3 samples, 0.04%)</title><rect x="795.7" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.7" y="430.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (3 samples, 0.04%)</title><rect x="795.7" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.7" y="414.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (3 samples, 0.04%)</title><rect x="795.7" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.7" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.03%)</title><rect x="795.9" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.9" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.03%)</title><rect x="795.9" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.9" y="366.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (65 samples, 0.97%)</title><rect x="796.3" y="435.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.3" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (59 samples, 0.88%)</title><rect x="796.4" y="419.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.4" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (59 samples, 0.88%)</title><rect x="796.4" y="403.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.4" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (59 samples, 0.88%)</title><rect x="796.4" y="387.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.4" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (59 samples, 0.88%)</title><rect x="796.4" y="371.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.4" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (59 samples, 0.88%)</title><rect x="796.4" y="355.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.4" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (58 samples, 0.87%)</title><rect x="796.6" y="339.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.6" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (55 samples, 0.82%)</title><rect x="796.8" y="323.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.8" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (55 samples, 0.82%)</title><rect x="796.8" y="307.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.8" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (55 samples, 0.82%)</title><rect x="796.8" y="291.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.8" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (54 samples, 0.81%)</title><rect x="797.0" y="275.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (54 samples, 0.81%)</title><rect x="797.0" y="259.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (54 samples, 0.81%)</title><rect x="797.0" y="243.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (54 samples, 0.81%)</title><rect x="797.0" y="227.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (54 samples, 0.81%)</title><rect x="797.0" y="211.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 0.81%)</title><rect x="797.0" y="195.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 0.81%)</title><rect x="797.0" y="179.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.0" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="797.7" y="163.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="800.7" y="174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (47 samples, 0.70%)</title><rect x="798.2" y="163.0" width="8.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="801.2" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.67%)</title><rect x="798.6" y="147.0" width="7.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="801.6" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.67%)</title><rect x="798.6" y="131.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.6" y="142.0"></text>
</g>
<g>
<title>sys_futex (42 samples, 0.63%)</title><rect x="799.1" y="115.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="802.1" y="126.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.61%)</title><rect x="799.3" y="99.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="802.3" y="110.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.61%)</title><rect x="799.3" y="83.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.3" y="94.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="799.6" y="67.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.6" y="78.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.55%)</title><rect x="800.0" y="67.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.0" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.55%)</title><rect x="800.0" y="51.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.54%)</title><rect x="800.1" y="35.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.1" y="46.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.setAsScheduled (2 samples, 0.03%)</title><rect x="806.5" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.5" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.currentStatus (2 samples, 0.03%)</title><rect x="806.5" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.5" y="318.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getIntVolatile (2 samples, 0.03%)</title><rect x="806.5" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (2 samples, 0.03%)</title><rect x="806.5" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.5" y="286.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.&lt;init&gt; (5 samples, 0.07%)</title><rect x="806.8" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (3 samples, 0.04%)</title><rect x="807.2" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.2" y="414.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (3 samples, 0.04%)</title><rect x="807.9" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.9" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (4 samples, 0.06%)</title><rect x="808.4" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (3 samples, 0.04%)</title><rect x="808.6" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.04%)</title><rect x="808.6" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="808.6" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.6" y="414.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduce (5 samples, 0.07%)</title><rect x="809.3" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.3" y="462.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce$ (5 samples, 0.07%)</title><rect x="809.3" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.3" y="446.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduce (5 samples, 0.07%)</title><rect x="809.3" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.reduceLeft (5 samples, 0.07%)</title><rect x="809.3" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft$ (5 samples, 0.07%)</title><rect x="809.3" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.reduceLeft (5 samples, 0.07%)</title><rect x="809.3" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.isEmpty (2 samples, 0.03%)</title><rect x="809.5" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.5" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty$ (2 samples, 0.03%)</title><rect x="809.5" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.5" y="350.0"></text>
</g>
<g>
<title>scala/collection/Iterator.isEmpty (2 samples, 0.03%)</title><rect x="809.5" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.5" y="334.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (2 samples, 0.03%)</title><rect x="809.5" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.5" y="318.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (2 samples, 0.03%)</title><rect x="809.5" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.5" y="302.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$19.hasNext (2 samples, 0.03%)</title><rect x="809.5" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.5" y="286.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (24 samples, 0.36%)</title><rect x="810.2" y="547.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.2" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (23 samples, 0.34%)</title><rect x="810.2" y="531.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.2" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (23 samples, 0.34%)</title><rect x="810.2" y="515.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.2" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (23 samples, 0.34%)</title><rect x="810.2" y="499.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.2" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (22 samples, 0.33%)</title><rect x="810.4" y="483.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.4" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (22 samples, 0.33%)</title><rect x="810.4" y="467.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.4" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (22 samples, 0.33%)</title><rect x="810.4" y="451.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.4" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (22 samples, 0.33%)</title><rect x="810.4" y="435.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.4" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (6 samples, 0.09%)</title><rect x="810.4" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.4" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (6 samples, 0.09%)</title><rect x="810.4" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.4" y="414.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="810.6" y="387.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="813.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.toList (16 samples, 0.24%)</title><rect x="811.4" y="419.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.4" y="430.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (15 samples, 0.22%)</title><rect x="811.6" y="403.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.6" y="414.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (2 samples, 0.03%)</title><rect x="812.9" y="387.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="815.9" y="398.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (4 samples, 0.06%)</title><rect x="814.6" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (3 samples, 0.04%)</title><rect x="814.8" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.8" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (2 samples, 0.03%)</title><rect x="814.8" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.8" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (2 samples, 0.03%)</title><rect x="814.8" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.8" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (2 samples, 0.03%)</title><rect x="814.8" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.8" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (2 samples, 0.03%)</title><rect x="814.8" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.8" y="494.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.&lt;init&gt; (2 samples, 0.03%)</title><rect x="814.8" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="814.8" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.8" y="462.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (7 samples, 0.10%)</title><rect x="815.3" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.3" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (7 samples, 0.10%)</title><rect x="815.3" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="816.0" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="816.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.0" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (5 samples, 0.07%)</title><rect x="816.6" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (3 samples, 0.04%)</title><rect x="816.7" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.7" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (3 samples, 0.04%)</title><rect x="816.7" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (3 samples, 0.04%)</title><rect x="816.7" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.7" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (4 samples, 0.06%)</title><rect x="817.4" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (2 samples, 0.03%)</title><rect x="817.6" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.03%)</title><rect x="817.6" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.6" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.03%)</title><rect x="817.6" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (3 samples, 0.04%)</title><rect x="818.1" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1138/771793008.apply (2 samples, 0.03%)</title><rect x="818.3" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.3" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.$anonfun$head$1 (2 samples, 0.03%)</title><rect x="818.3" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (4 samples, 0.06%)</title><rect x="818.9" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (3 samples, 0.04%)</title><rect x="819.7" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.7" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.04%)</title><rect x="819.7" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.7" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.04%)</title><rect x="819.7" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.7" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (2 samples, 0.03%)</title><rect x="819.9" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.9" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (2 samples, 0.03%)</title><rect x="819.9" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.9" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (2 samples, 0.03%)</title><rect x="819.9" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.9" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (2 samples, 0.03%)</title><rect x="819.9" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.9" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (2 samples, 0.03%)</title><rect x="819.9" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.9" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (2 samples, 0.03%)</title><rect x="819.9" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.9" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1070/1863212221.apply (10 samples, 0.15%)</title><rect x="821.0" y="947.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (10 samples, 0.15%)</title><rect x="821.0" y="931.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (9 samples, 0.13%)</title><rect x="821.2" y="915.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.2" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1103/272887769.apply (8 samples, 0.12%)</title><rect x="821.3" y="899.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.3" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (8 samples, 0.12%)</title><rect x="821.3" y="883.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.3" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (8 samples, 0.12%)</title><rect x="821.3" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.3" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1105/2123922250.apply (8 samples, 0.12%)</title><rect x="821.3" y="851.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.3" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (8 samples, 0.12%)</title><rect x="821.3" y="835.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.3" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (8 samples, 0.12%)</title><rect x="821.3" y="819.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.3" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (8 samples, 0.12%)</title><rect x="821.3" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.3" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (8 samples, 0.12%)</title><rect x="821.3" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.3" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (7 samples, 0.10%)</title><rect x="821.5" y="771.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (6 samples, 0.09%)</title><rect x="821.7" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.7" y="766.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.06%)</title><rect x="822.0" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.0" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (3 samples, 0.04%)</title><rect x="822.0" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.0" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (3 samples, 0.04%)</title><rect x="822.0" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (3 samples, 0.04%)</title><rect x="822.7" y="979.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="822.7" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (2 samples, 0.03%)</title><rect x="822.7" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$266/2057077925.apply (4 samples, 0.06%)</title><rect x="823.4" y="1203.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (4 samples, 0.06%)</title><rect x="823.4" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$438/1491623023.apply (4 samples, 0.06%)</title><rect x="823.4" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (4 samples, 0.06%)</title><rect x="823.4" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (4 samples, 0.06%)</title><rect x="823.4" y="1139.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (5 samples, 0.07%)</title><rect x="824.2" y="1235.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (4 samples, 0.06%)</title><rect x="824.2" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.2" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (2 samples, 0.03%)</title><rect x="824.3" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.3" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (2 samples, 0.03%)</title><rect x="824.3" y="1187.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.03%)</title><rect x="824.3" y="1171.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="824.3" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="824.3" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPush (2 samples, 0.03%)</title><rect x="825.0" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (2 samples, 0.03%)</title><rect x="825.0" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (2 samples, 0.03%)</title><rect x="825.0" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (21 samples, 0.31%)</title><rect x="825.4" y="1283.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (19 samples, 0.28%)</title><rect x="825.4" y="1267.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (19 samples, 0.28%)</title><rect x="825.4" y="1251.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (19 samples, 0.28%)</title><rect x="825.4" y="1235.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (19 samples, 0.28%)</title><rect x="825.4" y="1219.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (18 samples, 0.27%)</title><rect x="825.4" y="1203.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (18 samples, 0.27%)</title><rect x="825.4" y="1187.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (18 samples, 0.27%)</title><rect x="825.4" y="1171.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.4" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (18 samples, 0.27%)</title><rect x="825.4" y="1155.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.4" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (18 samples, 0.27%)</title><rect x="825.4" y="1139.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (18 samples, 0.27%)</title><rect x="825.4" y="1123.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (18 samples, 0.27%)</title><rect x="825.4" y="1107.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (18 samples, 0.27%)</title><rect x="825.4" y="1091.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (18 samples, 0.27%)</title><rect x="825.4" y="1075.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (18 samples, 0.27%)</title><rect x="825.4" y="1059.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (18 samples, 0.27%)</title><rect x="825.4" y="1043.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (18 samples, 0.27%)</title><rect x="825.4" y="1027.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (18 samples, 0.27%)</title><rect x="825.4" y="1011.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.27%)</title><rect x="825.4" y="995.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.25%)</title><rect x="825.6" y="979.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.6" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (16 samples, 0.24%)</title><rect x="825.7" y="963.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="828.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.22%)</title><rect x="825.9" y="947.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="828.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.22%)</title><rect x="825.9" y="931.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="828.9" y="942.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.21%)</title><rect x="826.1" y="915.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.1" y="926.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.19%)</title><rect x="826.1" y="899.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.1" y="910.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.19%)</title><rect x="826.1" y="883.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="829.1" y="894.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.18%)</title><rect x="826.3" y="867.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="829.3" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.18%)</title><rect x="826.3" y="851.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="829.3" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.18%)</title><rect x="826.3" y="835.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.3" y="846.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.13%)</title><rect x="829.4" y="1299.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="832.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (14 samples, 0.21%)</title><rect x="831.7" y="1379.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.7" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (13 samples, 0.19%)</title><rect x="831.7" y="1363.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.7" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (12 samples, 0.18%)</title><rect x="831.9" y="1347.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (12 samples, 0.18%)</title><rect x="831.9" y="1331.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (5 samples, 0.07%)</title><rect x="831.9" y="1315.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$1272/2087018170.apply (5 samples, 0.07%)</title><rect x="831.9" y="1299.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (5 samples, 0.07%)</title><rect x="831.9" y="1283.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (5 samples, 0.07%)</title><rect x="831.9" y="1267.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (3 samples, 0.04%)</title><rect x="831.9" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.9" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (3 samples, 0.04%)</title><rect x="831.9" y="1235.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.9" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1359/896515300.apply (3 samples, 0.04%)</title><rect x="831.9" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.9" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (3 samples, 0.04%)</title><rect x="831.9" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.9" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (3 samples, 0.04%)</title><rect x="831.9" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (3 samples, 0.04%)</title><rect x="831.9" y="1171.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (2 samples, 0.03%)</title><rect x="831.9" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (2 samples, 0.03%)</title><rect x="831.9" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (2 samples, 0.03%)</title><rect x="831.9" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFinish (2 samples, 0.03%)</title><rect x="832.5" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (2 samples, 0.03%)</title><rect x="832.5" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1404/2043532553.apply (2 samples, 0.03%)</title><rect x="832.5" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFinish$1$adapted (2 samples, 0.03%)</title><rect x="832.5" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFinish$1 (2 samples, 0.03%)</title><rect x="832.5" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionCompleted (2 samples, 0.03%)</title><rect x="832.5" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (2 samples, 0.03%)</title><rect x="832.5" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (2 samples, 0.03%)</title><rect x="832.5" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (2 samples, 0.03%)</title><rect x="832.5" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (2 samples, 0.03%)</title><rect x="832.5" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (2 samples, 0.03%)</title><rect x="832.5" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (2 samples, 0.03%)</title><rect x="832.5" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.5" y="1086.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (2 samples, 0.03%)</title><rect x="832.5" y="1059.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1395/1095368885.apply (2 samples, 0.03%)</title><rect x="832.5" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (2 samples, 0.03%)</title><rect x="832.5" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.5" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.5" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.5" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="832.5" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.03%)</title><rect x="832.5" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.5" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.03%)</title><rect x="832.5" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.5" y="942.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.03%)</title><rect x="832.5" y="915.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="835.5" y="926.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.03%)</title><rect x="832.5" y="899.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="835.5" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.03%)</title><rect x="832.5" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="835.5" y="894.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="832.5" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="835.5" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (7 samples, 0.10%)</title><rect x="832.8" y="1315.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (7 samples, 0.10%)</title><rect x="832.8" y="1299.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (6 samples, 0.09%)</title><rect x="833.0" y="1283.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (4 samples, 0.06%)</title><rect x="833.2" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1235/844888515.apply (4 samples, 0.06%)</title><rect x="833.2" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (4 samples, 0.06%)</title><rect x="833.2" y="1235.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (4 samples, 0.06%)</title><rect x="833.2" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (4 samples, 0.06%)</title><rect x="833.2" y="1203.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (3 samples, 0.04%)</title><rect x="833.2" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.2" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (25 samples, 0.37%)</title><rect x="834.6" y="1475.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.messageQueue (2 samples, 0.03%)</title><rect x="834.7" y="1459.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (22 samples, 0.33%)</title><rect x="835.1" y="1459.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (22 samples, 0.33%)</title><rect x="835.1" y="1443.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (22 samples, 0.33%)</title><rect x="835.1" y="1427.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (22 samples, 0.33%)</title><rect x="835.1" y="1411.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.1" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (169 samples, 2.53%)</title><rect x="839.0" y="1475.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.0" y="1486.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (165 samples, 2.47%)</title><rect x="839.0" y="1459.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.0" y="1470.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (164 samples, 2.45%)</title><rect x="839.2" y="1443.0" width="28.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.2" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (8 samples, 0.12%)</title><rect x="839.5" y="1427.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (8 samples, 0.12%)</title><rect x="839.5" y="1411.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (8 samples, 0.12%)</title><rect x="839.5" y="1395.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (8 samples, 0.12%)</title><rect x="839.5" y="1379.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (8 samples, 0.12%)</title><rect x="839.5" y="1363.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (8 samples, 0.12%)</title><rect x="839.5" y="1347.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (8 samples, 0.12%)</title><rect x="839.5" y="1331.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (8 samples, 0.12%)</title><rect x="839.5" y="1315.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (8 samples, 0.12%)</title><rect x="839.5" y="1299.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox (8 samples, 0.12%)</title><rect x="839.5" y="1283.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.calculateState$1 (2 samples, 0.03%)</title><rect x="839.9" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.9" y="1278.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="840.2" y="1267.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="843.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (152 samples, 2.27%)</title><rect x="840.9" y="1427.0" width="26.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.9" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (152 samples, 2.27%)</title><rect x="840.9" y="1411.0" width="26.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.9" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (152 samples, 2.27%)</title><rect x="840.9" y="1395.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.9" y="1406.0">a..</text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (147 samples, 2.20%)</title><rect x="841.8" y="1379.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.8" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (9 samples, 0.13%)</title><rect x="842.9" y="1363.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.9" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (9 samples, 0.13%)</title><rect x="842.9" y="1347.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.9" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (3 samples, 0.04%)</title><rect x="842.9" y="1331.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.setAccessible (2 samples, 0.03%)</title><rect x="843.0" y="1315.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (2 samples, 0.03%)</title><rect x="843.0" y="1299.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (6 samples, 0.09%)</title><rect x="843.4" y="1331.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (4 samples, 0.06%)</title><rect x="843.4" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (3 samples, 0.04%)</title><rect x="843.6" y="1299.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (2 samples, 0.03%)</title><rect x="843.8" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (2 samples, 0.03%)</title><rect x="843.8" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (2 samples, 0.03%)</title><rect x="844.1" y="1315.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.1" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (19 samples, 0.28%)</title><rect x="844.5" y="1363.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.currentMessage_$eq (2 samples, 0.03%)</title><rect x="844.5" y="1347.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (2 samples, 0.03%)</title><rect x="844.5" y="1331.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (17 samples, 0.25%)</title><rect x="844.8" y="1347.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.8" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (17 samples, 0.25%)</title><rect x="844.8" y="1331.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.8" y="1342.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (7 samples, 0.10%)</title><rect x="844.8" y="1315.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="844.8" y="1299.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (4 samples, 0.06%)</title><rect x="845.3" y="1299.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.set (2 samples, 0.03%)</title><rect x="845.3" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (2 samples, 0.03%)</title><rect x="845.3" y="1267.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.set (2 samples, 0.03%)</title><rect x="845.7" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (10 samples, 0.15%)</title><rect x="846.0" y="1315.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (7 samples, 0.10%)</title><rect x="846.2" y="1299.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (7 samples, 0.10%)</title><rect x="846.2" y="1283.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (5 samples, 0.07%)</title><rect x="846.6" y="1267.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (5 samples, 0.07%)</title><rect x="846.6" y="1251.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.6" y="1262.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.04%)</title><rect x="846.9" y="1235.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="849.9" y="1246.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.04%)</title><rect x="846.9" y="1219.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="849.9" y="1230.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.04%)</title><rect x="846.9" y="1203.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="849.9" y="1214.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="846.9" y="1187.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="849.9" y="1198.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="847.1" y="1171.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="850.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (2 samples, 0.03%)</title><rect x="847.5" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (15 samples, 0.22%)</title><rect x="848.2" y="1363.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (15 samples, 0.22%)</title><rect x="848.2" y="1347.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (15 samples, 0.22%)</title><rect x="848.2" y="1331.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (8 samples, 0.12%)</title><rect x="848.2" y="1315.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.hasNonLocalAddress$1 (7 samples, 0.10%)</title><rect x="848.2" y="1299.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (5 samples, 0.07%)</title><rect x="848.3" y="1283.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (5 samples, 0.07%)</title><rect x="848.3" y="1267.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (5 samples, 0.07%)</title><rect x="848.3" y="1251.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1031/1351736766.apply (2 samples, 0.03%)</title><rect x="848.3" y="1235.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$19.hasNext (2 samples, 0.03%)</title><rect x="848.7" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (7 samples, 0.10%)</title><rect x="849.6" y="1315.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1027/1371274389.apply (4 samples, 0.06%)</title><rect x="850.1" y="1299.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$tellWatchersWeDied$2$adapted (4 samples, 0.06%)</title><rect x="850.1" y="1283.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$tellWatchersWeDied$2 (4 samples, 0.06%)</title><rect x="850.1" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.sendTerminated$1 (4 samples, 0.06%)</title><rect x="850.1" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (3 samples, 0.04%)</title><rect x="850.3" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (3 samples, 0.04%)</title><rect x="850.3" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$549/159081775.apply (3 samples, 0.04%)</title><rect x="850.3" y="1203.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (3 samples, 0.04%)</title><rect x="850.3" y="1187.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (3 samples, 0.04%)</title><rect x="850.3" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (3 samples, 0.04%)</title><rect x="850.3" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (3 samples, 0.04%)</title><rect x="850.3" y="1139.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.04%)</title><rect x="850.3" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (3 samples, 0.04%)</title><rect x="850.3" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.04%)</title><rect x="850.3" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (3 samples, 0.04%)</title><rect x="850.3" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.03%)</title><rect x="850.3" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="850.3" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="850.3" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="850.3" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="850.3" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="850.3" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="850.3" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.3" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="850.3" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.3" y="958.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (45 samples, 0.67%)</title><rect x="850.8" y="1363.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (45 samples, 0.67%)</title><rect x="850.8" y="1347.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (45 samples, 0.67%)</title><rect x="850.8" y="1331.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (45 samples, 0.67%)</title><rect x="850.8" y="1315.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="853.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (45 samples, 0.67%)</title><rect x="850.8" y="1299.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="850.8" y="1283.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="850.8" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="850.8" y="1251.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (43 samples, 0.64%)</title><rect x="851.2" y="1283.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (43 samples, 0.64%)</title><rect x="851.2" y="1267.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (43 samples, 0.64%)</title><rect x="851.2" y="1251.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.2" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (43 samples, 0.64%)</title><rect x="851.2" y="1235.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (43 samples, 0.64%)</title><rect x="851.2" y="1219.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (43 samples, 0.64%)</title><rect x="851.2" y="1203.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (43 samples, 0.64%)</title><rect x="851.2" y="1187.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (43 samples, 0.64%)</title><rect x="851.2" y="1171.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (43 samples, 0.64%)</title><rect x="851.2" y="1155.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.64%)</title><rect x="851.2" y="1139.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.63%)</title><rect x="851.3" y="1123.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="851.5" y="1107.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="854.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="851.5" y="1091.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="854.5" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (38 samples, 0.57%)</title><rect x="852.0" y="1107.0" width="6.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="855.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.51%)</title><rect x="852.8" y="1091.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="855.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.51%)</title><rect x="852.8" y="1075.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.8" y="1086.0"></text>
</g>
<g>
<title>sys_futex (33 samples, 0.49%)</title><rect x="852.9" y="1059.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.9" y="1070.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.49%)</title><rect x="852.9" y="1043.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="855.9" y="1054.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.49%)</title><rect x="852.9" y="1027.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.9" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.45%)</title><rect x="853.5" y="1011.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.5" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.43%)</title><rect x="853.6" y="995.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.43%)</title><rect x="853.6" y="979.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.6" y="990.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (2 samples, 0.03%)</title><rect x="858.4" y="963.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.4" y="974.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (2 samples, 0.03%)</title><rect x="858.4" y="947.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="861.4" y="958.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="858.4" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.4" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="858.4" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="861.4" y="926.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="858.4" y="899.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="861.4" y="910.0"></text>
</g>
<g>
<title>ixgbevf_poll?[ixgbevf] (2 samples, 0.03%)</title><rect x="858.4" y="883.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="861.4" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (8 samples, 0.12%)</title><rect x="858.8" y="1363.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.8" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (7 samples, 0.10%)</title><rect x="858.9" y="1347.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (7 samples, 0.10%)</title><rect x="858.9" y="1331.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (6 samples, 0.09%)</title><rect x="859.1" y="1315.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (6 samples, 0.09%)</title><rect x="859.1" y="1299.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (6 samples, 0.09%)</title><rect x="859.1" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (4 samples, 0.06%)</title><rect x="859.1" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (3 samples, 0.04%)</title><rect x="859.3" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (2 samples, 0.03%)</title><rect x="859.3" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (2 samples, 0.03%)</title><rect x="859.3" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.specialHandle (2 samples, 0.03%)</title><rect x="859.3" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.3" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (34 samples, 0.51%)</title><rect x="860.2" y="1363.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (34 samples, 0.51%)</title><rect x="860.2" y="1347.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (34 samples, 0.51%)</title><rect x="860.2" y="1331.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (34 samples, 0.51%)</title><rect x="860.2" y="1315.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (24 samples, 0.36%)</title><rect x="860.2" y="1299.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.2" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (24 samples, 0.36%)</title><rect x="860.2" y="1283.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1022/1081039713.apply (24 samples, 0.36%)</title><rect x="860.2" y="1267.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.2" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (24 samples, 0.36%)</title><rect x="860.2" y="1251.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (24 samples, 0.36%)</title><rect x="860.2" y="1235.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (23 samples, 0.34%)</title><rect x="860.3" y="1219.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.3" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1023/1340044780.apply (23 samples, 0.34%)</title><rect x="860.3" y="1203.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.3" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (23 samples, 0.34%)</title><rect x="860.3" y="1187.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.3" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (23 samples, 0.34%)</title><rect x="860.3" y="1171.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="863.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (23 samples, 0.34%)</title><rect x="860.3" y="1155.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$549/159081775.apply (23 samples, 0.34%)</title><rect x="860.3" y="1139.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (23 samples, 0.34%)</title><rect x="860.3" y="1123.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (23 samples, 0.34%)</title><rect x="860.3" y="1107.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.3" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (23 samples, 0.34%)</title><rect x="860.3" y="1091.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (23 samples, 0.34%)</title><rect x="860.3" y="1075.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (23 samples, 0.34%)</title><rect x="860.3" y="1059.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$543/2037288488.apply (23 samples, 0.34%)</title><rect x="860.3" y="1043.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (23 samples, 0.34%)</title><rect x="860.3" y="1027.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (23 samples, 0.34%)</title><rect x="860.3" y="1011.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (22 samples, 0.33%)</title><rect x="860.3" y="995.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (22 samples, 0.33%)</title><rect x="860.3" y="979.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (22 samples, 0.33%)</title><rect x="860.3" y="963.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.3" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (22 samples, 0.33%)</title><rect x="860.3" y="947.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.3" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (22 samples, 0.33%)</title><rect x="860.3" y="931.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.3" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (22 samples, 0.33%)</title><rect x="860.3" y="915.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.3" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (22 samples, 0.33%)</title><rect x="860.3" y="899.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.3" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (22 samples, 0.33%)</title><rect x="860.3" y="883.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.3" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (22 samples, 0.33%)</title><rect x="860.3" y="867.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.3" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (22 samples, 0.33%)</title><rect x="860.3" y="851.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.3" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (22 samples, 0.33%)</title><rect x="860.3" y="835.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.3" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (22 samples, 0.33%)</title><rect x="860.3" y="819.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.3" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (22 samples, 0.33%)</title><rect x="860.3" y="803.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (22 samples, 0.33%)</title><rect x="860.3" y="787.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (22 samples, 0.33%)</title><rect x="860.3" y="771.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (22 samples, 0.33%)</title><rect x="860.3" y="755.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (22 samples, 0.33%)</title><rect x="860.3" y="739.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.33%)</title><rect x="860.3" y="723.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.31%)</title><rect x="860.5" y="707.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.5" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="860.5" y="691.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="863.5" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.28%)</title><rect x="860.9" y="691.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="863.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.25%)</title><rect x="861.2" y="675.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="864.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.25%)</title><rect x="861.2" y="659.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="864.2" y="670.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.25%)</title><rect x="861.2" y="643.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.2" y="654.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.25%)</title><rect x="861.2" y="627.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="864.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.25%)</title><rect x="861.2" y="611.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="864.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.22%)</title><rect x="861.6" y="595.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.6" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.22%)</title><rect x="861.6" y="579.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="864.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.22%)</title><rect x="861.6" y="563.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="864.6" y="574.0"></text>
</g>
<g>
<title>scala/Option.toList (2 samples, 0.03%)</title><rect x="864.4" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="864.4" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.$plus$plus (6 samples, 0.09%)</title><rect x="864.8" y="1299.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus$ (6 samples, 0.09%)</title><rect x="864.8" y="1283.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.8" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus (6 samples, 0.09%)</title><rect x="864.8" y="1267.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.8" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.concat (6 samples, 0.09%)</title><rect x="864.8" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat$ (6 samples, 0.09%)</title><rect x="864.8" y="1235.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat (6 samples, 0.09%)</title><rect x="864.8" y="1219.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (5 samples, 0.07%)</title><rect x="864.9" y="1203.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (5 samples, 0.07%)</title><rect x="864.9" y="1187.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (5 samples, 0.07%)</title><rect x="864.9" y="1171.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (5 samples, 0.07%)</title><rect x="864.9" y="1155.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (5 samples, 0.07%)</title><rect x="864.9" y="1139.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (3 samples, 0.04%)</title><rect x="864.9" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.9" y="1134.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="864.9" y="1107.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="867.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.03%)</title><rect x="865.8" y="1299.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (9 samples, 0.13%)</title><rect x="866.2" y="1363.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (9 samples, 0.13%)</title><rect x="866.2" y="1347.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (9 samples, 0.13%)</title><rect x="866.2" y="1331.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (9 samples, 0.13%)</title><rect x="866.2" y="1315.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (8 samples, 0.12%)</title><rect x="866.4" y="1299.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.09%)</title><rect x="866.5" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.07%)</title><rect x="866.5" y="1267.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (5 samples, 0.07%)</title><rect x="866.5" y="1251.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.06%)</title><rect x="866.7" y="1235.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.06%)</title><rect x="866.7" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (4 samples, 0.06%)</title><rect x="866.7" y="1203.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (4 samples, 0.06%)</title><rect x="866.7" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (3 samples, 0.04%)</title><rect x="866.7" y="1171.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (2 samples, 0.03%)</title><rect x="866.9" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (2 samples, 0.03%)</title><rect x="867.8" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (2 samples, 0.03%)</title><rect x="867.8" y="1411.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="870.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (2 samples, 0.03%)</title><rect x="867.8" y="1395.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.8" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (2 samples, 0.03%)</title><rect x="868.1" y="1459.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.1" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (2 samples, 0.03%)</title><rect x="868.1" y="1443.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.1" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (2 samples, 0.03%)</title><rect x="868.1" y="1427.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.1" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueuePut (2 samples, 0.03%)</title><rect x="868.1" y="1411.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.1" y="1422.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (2 samples, 0.03%)</title><rect x="868.1" y="1395.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.1" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (2 samples, 0.03%)</title><rect x="868.8" y="1475.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="869.2" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox$default$1 (2 samples, 0.03%)</title><rect x="869.5" y="1491.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.5" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dispatcher (2 samples, 0.03%)</title><rect x="869.5" y="1475.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.actor (2 samples, 0.03%)</title><rect x="869.5" y="1459.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.setAsIdle (4 samples, 0.06%)</title><rect x="870.1" y="1491.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.1" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.updateStatus (4 samples, 0.06%)</title><rect x="870.1" y="1475.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.1" y="1486.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapInt (4 samples, 0.06%)</title><rect x="870.1" y="1459.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (27 samples, 0.40%)</title><rect x="870.9" y="1555.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.40%)</title><rect x="870.9" y="1539.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.9" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 0.39%)</title><rect x="871.1" y="1523.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.1" y="1534.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="871.1" y="1507.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="874.1" y="1518.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="871.1" y="1491.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="874.1" y="1502.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.36%)</title><rect x="871.5" y="1507.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="874.5" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.34%)</title><rect x="871.6" y="1491.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="874.6" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.34%)</title><rect x="871.6" y="1475.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.6" y="1486.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.34%)</title><rect x="871.6" y="1459.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.6" y="1470.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.34%)</title><rect x="871.6" y="1443.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="874.6" y="1454.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.34%)</title><rect x="871.6" y="1427.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.6" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.34%)</title><rect x="871.6" y="1411.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.6" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.34%)</title><rect x="871.6" y="1395.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="874.6" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.34%)</title><rect x="871.6" y="1379.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="874.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="875.7" y="1555.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.7" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (232 samples, 3.47%)</title><rect x="876.2" y="1571.0" width="41.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.2" y="1582.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (227 samples, 3.40%)</title><rect x="877.1" y="1555.0" width="40.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.1" y="1566.0">jdk..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="877.3" y="1539.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="880.3" y="1550.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="877.7" y="1539.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="880.7" y="1550.0"></text>
</g>
<g>
<title>Unsafe_Park (84 samples, 1.26%)</title><rect x="878.2" y="1539.0" width="14.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="881.2" y="1550.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (10 samples, 0.15%)</title><rect x="878.5" y="1523.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="881.5" y="1534.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="880.3" y="1523.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="883.3" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.19%)</title><rect x="880.8" y="1523.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="883.8" y="1534.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="882.1" y="1507.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="885.1" y="1518.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="882.4" y="1507.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="885.4" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="882.8" y="1507.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="885.8" y="1518.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="883.1" y="1523.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="886.1" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.06%)</title><rect x="883.5" y="1523.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="886.5" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (27 samples, 0.40%)</title><rect x="884.2" y="1523.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="887.2" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.19%)</title><rect x="886.7" y="1507.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.7" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.19%)</title><rect x="886.7" y="1491.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="889.7" y="1502.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.12%)</title><rect x="887.5" y="1475.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.5" y="1486.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="887.5" y="1459.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="890.5" y="1470.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="887.7" y="1443.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.7" y="1454.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="888.4" y="1459.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="891.4" y="1470.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.10%)</title><rect x="889.0" y="1523.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="892.0" y="1534.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="890.4" y="1523.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="893.4" y="1534.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="890.7" y="1523.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="893.7" y="1534.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="891.1" y="1523.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.1" y="1534.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="891.6" y="1523.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.6" y="1534.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.07%)</title><rect x="892.1" y="1523.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="895.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 2.05%)</title><rect x="893.0" y="1539.0" width="24.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="896.0" y="1550.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_push (4 samples, 0.06%)</title><rect x="893.2" y="1523.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="896.2" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (121 samples, 1.81%)</title><rect x="893.9" y="1523.0" width="21.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="896.9" y="1534.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 1.45%)</title><rect x="898.0" y="1507.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.0" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 1.44%)</title><rect x="898.0" y="1491.0" width="16.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.0" y="1502.0"></text>
</g>
<g>
<title>sys_futex (77 samples, 1.15%)</title><rect x="901.3" y="1475.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="904.3" y="1486.0"></text>
</g>
<g>
<title>do_futex (72 samples, 1.08%)</title><rect x="902.0" y="1459.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="905.0" y="1470.0"></text>
</g>
<g>
<title>futex_wait (70 samples, 1.05%)</title><rect x="902.2" y="1443.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.2" y="1454.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.03%)</title><rect x="902.7" y="1427.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="905.7" y="1438.0"></text>
</g>
<g>
<title>futex_wait_queue_me (44 samples, 0.66%)</title><rect x="903.1" y="1427.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="906.1" y="1438.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="903.6" y="1411.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="906.6" y="1422.0"></text>
</g>
<g>
<title>schedule (39 samples, 0.58%)</title><rect x="904.0" y="1411.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.0" y="1422.0"></text>
</g>
<g>
<title>__schedule (39 samples, 0.58%)</title><rect x="904.0" y="1395.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.0" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (36 samples, 0.54%)</title><rect x="904.5" y="1379.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.5" y="1390.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (2 samples, 0.03%)</title><rect x="910.5" y="1363.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="913.5" y="1374.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (2 samples, 0.03%)</title><rect x="910.5" y="1347.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.5" y="1358.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="910.5" y="1331.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.5" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="910.5" y="1315.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="913.5" y="1326.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.22%)</title><rect x="910.8" y="1427.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.8" y="1438.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="912.3" y="1411.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="915.3" y="1422.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.06%)</title><rect x="912.8" y="1411.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="915.8" y="1422.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="913.5" y="1427.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.5" y="1438.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="914.2" y="1427.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.2" y="1438.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.09%)</title><rect x="915.3" y="1523.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="918.3" y="1534.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="916.5" y="1523.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (187 samples, 2.80%)</title><rect x="917.2" y="1571.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.2" y="1582.0">ja..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="919.9" y="1555.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="922.9" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 2.06%)</title><rect x="920.4" y="1555.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="923.4" y="1566.0">j..</text>
</g>
<g>
<title>Unsafe_Park (62 samples, 0.93%)</title><rect x="920.9" y="1539.0" width="11.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="923.9" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="921.8" y="1523.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="924.8" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (25 samples, 0.37%)</title><rect x="922.3" y="1523.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.3" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (20 samples, 0.30%)</title><rect x="923.2" y="1507.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="926.2" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (18 samples, 0.27%)</title><rect x="923.6" y="1491.0" width="3.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="926.6" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="925.7" y="1475.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="928.7" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="925.7" y="1459.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.7" y="1470.0"></text>
</g>
<g>
<title>sys_gettimeofday (3 samples, 0.04%)</title><rect x="926.2" y="1443.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.2" y="1454.0"></text>
</g>
<g>
<title>getnstimeofday64 (3 samples, 0.04%)</title><rect x="926.2" y="1427.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.2" y="1438.0"></text>
</g>
<g>
<title>__getnstimeofday64 (3 samples, 0.04%)</title><rect x="926.2" y="1411.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.2" y="1422.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (3 samples, 0.04%)</title><rect x="926.2" y="1395.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.2" y="1406.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.04%)</title><rect x="926.2" y="1379.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.2" y="1390.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="926.7" y="1523.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="929.7" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="927.3" y="1523.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="930.3" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.10%)</title><rect x="927.6" y="1523.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="930.6" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="928.5" y="1507.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.5" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="928.5" y="1491.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="931.5" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.07%)</title><rect x="928.9" y="1523.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="931.9" y="1534.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="930.3" y="1523.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="933.3" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="931.0" y="1523.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="934.0" y="1534.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="931.3" y="1523.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="934.3" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (71 samples, 1.06%)</title><rect x="932.0" y="1539.0" width="12.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="935.0" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 1.00%)</title><rect x="932.7" y="1523.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="935.7" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 1.00%)</title><rect x="932.7" y="1507.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="935.7" y="1518.0"></text>
</g>
<g>
<title>sys_futex (58 samples, 0.87%)</title><rect x="934.3" y="1491.0" width="10.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.3" y="1502.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.78%)</title><rect x="935.0" y="1475.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="938.0" y="1486.0"></text>
</g>
<g>
<title>futex_wait (44 samples, 0.66%)</title><rect x="935.9" y="1459.0" width="7.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="938.9" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (27 samples, 0.40%)</title><rect x="936.6" y="1443.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="939.6" y="1454.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.07%)</title><rect x="937.2" y="1427.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.2" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="937.2" y="1411.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.2" y="1422.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.28%)</title><rect x="938.0" y="1427.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.0" y="1438.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.28%)</title><rect x="938.0" y="1411.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.0" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.25%)</title><rect x="938.4" y="1395.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.4" y="1406.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.13%)</title><rect x="941.4" y="1443.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="944.4" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="942.1" y="1427.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="945.1" y="1438.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="942.5" y="1427.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="945.5" y="1438.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="943.0" y="1443.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.0" y="1454.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.03%)</title><rect x="943.3" y="1443.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.3" y="1454.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.03%)</title><rect x="943.9" y="1459.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="946.9" y="1470.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="944.2" y="1475.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.2" y="1486.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (31 samples, 0.46%)</title><rect x="944.7" y="1555.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="947.7" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (30 samples, 0.45%)</title><rect x="944.9" y="1539.0" width="5.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="947.9" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.21%)</title><rect x="947.7" y="1523.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="950.7" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.18%)</title><rect x="947.7" y="1507.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.7" y="1518.0"></text>
</g>
<g>
<title>sys_gettimeofday (5 samples, 0.07%)</title><rect x="949.0" y="1491.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="952.0" y="1502.0"></text>
</g>
<g>
<title>getnstimeofday64 (4 samples, 0.06%)</title><rect x="949.2" y="1475.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.2" y="1486.0"></text>
</g>
<g>
<title>__getnstimeofday64 (3 samples, 0.04%)</title><rect x="949.2" y="1459.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="952.2" y="1470.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (2 samples, 0.03%)</title><rect x="949.3" y="1443.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.3" y="1454.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="949.3" y="1427.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.3" y="1438.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="949.9" y="1507.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="952.9" y="1518.0"></text>
</g>
<g>
<title>madvise (2 samples, 0.03%)</title><rect x="950.2" y="1603.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="953.2" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="950.2" y="1587.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.2" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="950.2" y="1571.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="953.2" y="1582.0"></text>
</g>
<g>
<title>sys_madvise (2 samples, 0.03%)</title><rect x="950.2" y="1555.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="953.2" y="1566.0"></text>
</g>
<g>
<title>zap_page_range (2 samples, 0.03%)</title><rect x="950.2" y="1539.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.2" y="1550.0"></text>
</g>
<g>
<title>tlb_finish_mmu (2 samples, 0.03%)</title><rect x="950.2" y="1523.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.2" y="1534.0"></text>
</g>
<g>
<title>arch_tlb_finish_mmu (2 samples, 0.03%)</title><rect x="950.2" y="1507.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.2" y="1518.0"></text>
</g>
<g>
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="950.2" y="1491.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="953.2" y="1502.0"></text>
</g>
<g>
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="950.2" y="1475.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.2" y="1486.0"></text>
</g>
<g>
<title>release_pages (2 samples, 0.03%)</title><rect x="950.2" y="1459.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="953.2" y="1470.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="950.2" y="1443.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.2" y="1454.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="950.6" y="1603.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="953.6" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="950.6" y="1587.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.6" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="950.6" y="1571.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.6" y="1582.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="950.6" y="1555.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="953.6" y="1566.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="950.6" y="1539.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="953.6" y="1550.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="950.6" y="1523.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.6" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.07%)</title><rect x="950.6" y="1507.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="953.6" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.07%)</title><rect x="950.6" y="1491.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.6" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.07%)</title><rect x="950.6" y="1475.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="953.6" y="1486.0"></text>
</g>
<g>
<title>start_thread (1,351 samples, 20.22%)</title><rect x="951.5" y="1603.0" width="238.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="954.5" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,351 samples, 20.22%)</title><rect x="951.5" y="1587.0" width="238.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="954.5" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (1,351 samples, 20.22%)</title><rect x="951.5" y="1571.0" width="238.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="954.5" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (38 samples, 0.57%)</title><rect x="951.5" y="1555.0" width="6.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="954.5" y="1566.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (10 samples, 0.15%)</title><rect x="951.5" y="1539.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="954.5" y="1550.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (10 samples, 0.15%)</title><rect x="951.5" y="1523.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.5" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (10 samples, 0.15%)</title><rect x="951.5" y="1507.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="954.5" y="1518.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (10 samples, 0.15%)</title><rect x="951.5" y="1491.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="954.5" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (4 samples, 0.06%)</title><rect x="952.3" y="1475.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="955.3" y="1486.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (28 samples, 0.42%)</title><rect x="953.2" y="1539.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="956.2" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (28 samples, 0.42%)</title><rect x="953.2" y="1523.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="956.2" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (26 samples, 0.39%)</title><rect x="953.4" y="1507.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="956.4" y="1518.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (7 samples, 0.10%)</title><rect x="954.3" y="1491.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.3" y="1502.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (6 samples, 0.09%)</title><rect x="954.5" y="1475.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="957.5" y="1486.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="955.5" y="1491.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="958.5" y="1502.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (12 samples, 0.18%)</title><rect x="955.9" y="1491.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="958.9" y="1502.0"></text>
</g>
<g>
<title>GangWorker::loop() (48 samples, 0.72%)</title><rect x="958.2" y="1555.0" width="8.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="961.2" y="1566.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (48 samples, 0.72%)</title><rect x="958.2" y="1539.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="961.2" y="1550.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (14 samples, 0.21%)</title><rect x="958.2" y="1523.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="961.2" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="958.2" y="1507.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="961.2" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (11 samples, 0.16%)</title><rect x="958.5" y="1507.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="961.5" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.09%)</title><rect x="959.4" y="1491.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="962.4" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="959.9" y="1475.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="962.9" y="1486.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (28 samples, 0.42%)</title><rect x="960.6" y="1523.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.6" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (28 samples, 0.42%)</title><rect x="960.6" y="1507.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.6" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (28 samples, 0.42%)</title><rect x="960.6" y="1491.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.6" y="1502.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (28 samples, 0.42%)</title><rect x="960.6" y="1475.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="963.6" y="1486.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (28 samples, 0.42%)</title><rect x="960.6" y="1459.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="963.6" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (27 samples, 0.40%)</title><rect x="960.6" y="1443.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="963.6" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="962.2" y="1427.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="965.2" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (16 samples, 0.24%)</title><rect x="962.6" y="1427.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.6" y="1438.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.04%)</title><rect x="963.8" y="1411.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.8" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.04%)</title><rect x="963.8" y="1395.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.8" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.04%)</title><rect x="963.8" y="1379.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="966.8" y="1390.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.07%)</title><rect x="964.3" y="1411.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="967.3" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.09%)</title><rect x="965.6" y="1523.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="968.6" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (6 samples, 0.09%)</title><rect x="965.6" y="1507.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="968.6" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (6 samples, 0.09%)</title><rect x="965.6" y="1491.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="968.6" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (6 samples, 0.09%)</title><rect x="965.6" y="1475.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.6" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.04%)</title><rect x="965.6" y="1459.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="968.6" y="1470.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (3 samples, 0.04%)</title><rect x="966.1" y="1459.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="969.1" y="1470.0"></text>
</g>
<g>
<title>JavaThread::run() (1,261 samples, 18.87%)</title><rect x="966.6" y="1555.0" width="222.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="969.6" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1,261 samples, 18.87%)</title><rect x="966.6" y="1539.0" width="222.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="969.6" y="1550.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1,235 samples, 18.48%)</title><rect x="966.6" y="1523.0" width="218.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="969.6" y="1534.0">CompileBroker::compiler_threa..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1,229 samples, 18.39%)</title><rect x="966.6" y="1507.0" width="217.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="969.6" y="1518.0">CompileBroker::invoke_compile..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1,115 samples, 16.68%)</title><rect x="966.6" y="1491.0" width="196.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="969.6" y="1502.0">C2Compiler::compile_method..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1,115 samples, 16.68%)</title><rect x="966.6" y="1475.0" width="196.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="969.6" y="1486.0">Compile::Compile(ciEnv*, C..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (10 samples, 0.15%)</title><rect x="966.6" y="1459.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="969.6" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (10 samples, 0.15%)</title><rect x="966.6" y="1443.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="969.6" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (10 samples, 0.15%)</title><rect x="966.6" y="1427.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="969.6" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (10 samples, 0.15%)</title><rect x="966.6" y="1411.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="969.6" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (10 samples, 0.15%)</title><rect x="966.6" y="1395.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="969.6" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.13%)</title><rect x="966.8" y="1379.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="969.8" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (9 samples, 0.13%)</title><rect x="966.8" y="1363.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="969.8" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (7 samples, 0.10%)</title><rect x="967.0" y="1347.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.0" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.06%)</title><rect x="967.3" y="1331.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.3" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.06%)</title><rect x="967.3" y="1315.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.3" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.06%)</title><rect x="967.3" y="1299.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="970.3" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.06%)</title><rect x="967.3" y="1283.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="970.3" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.04%)</title><rect x="967.5" y="1267.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="970.5" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.04%)</title><rect x="967.5" y="1251.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.5" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="967.5" y="1235.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="970.5" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="967.7" y="1219.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="970.7" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.03%)</title><rect x="967.7" y="1203.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.7" y="1214.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (616 samples, 9.22%)</title><rect x="968.4" y="1459.0" width="108.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="971.4" y="1470.0">Compile::Code..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.03%)</title><rect x="968.4" y="1443.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="971.4" y="1454.0"></text>
</g>
<g>
<title>Compile::Output() (21 samples, 0.31%)</title><rect x="968.8" y="1443.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="971.8" y="1454.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (10 samples, 0.15%)</title><rect x="968.9" y="1427.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="971.9" y="1438.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (10 samples, 0.15%)</title><rect x="970.7" y="1427.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="973.7" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (10 samples, 0.15%)</title><rect x="970.7" y="1411.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="973.7" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (8 samples, 0.12%)</title><rect x="970.9" y="1395.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="973.9" y="1406.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (2 samples, 0.03%)</title><rect x="971.8" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="974.8" y="1390.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (21 samples, 0.31%)</title><rect x="972.5" y="1443.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.5" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (4 samples, 0.06%)</title><rect x="973.2" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="976.2" y="1438.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (8 samples, 0.12%)</title><rect x="974.8" y="1427.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="977.8" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (5 samples, 0.07%)</title><rect x="974.9" y="1411.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="977.9" y="1422.0"></text>
</g>
<g>
<title>Matcher::match() (65 samples, 0.97%)</title><rect x="976.5" y="1443.0" width="11.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="979.5" y="1454.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (2 samples, 0.03%)</title><rect x="976.9" y="1427.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="979.9" y="1438.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (2 samples, 0.03%)</title><rect x="976.9" y="1411.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.9" y="1422.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (10 samples, 0.15%)</title><rect x="977.2" y="1427.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="980.2" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (50 samples, 0.75%)</title><rect x="979.0" y="1427.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="982.0" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (8 samples, 0.12%)</title><rect x="980.4" y="1411.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="983.4" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (4 samples, 0.06%)</title><rect x="982.2" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="985.2" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.06%)</title><rect x="982.2" y="1395.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="985.2" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="982.4" y="1379.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="985.4" y="1390.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (27 samples, 0.40%)</title><rect x="982.9" y="1411.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="985.9" y="1422.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (7 samples, 0.10%)</title><rect x="984.3" y="1395.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="987.3" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.06%)</title><rect x="984.7" y="1379.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="987.7" y="1390.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.03%)</title><rect x="985.0" y="1363.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="988.0" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (10 samples, 0.15%)</title><rect x="985.5" y="1395.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="988.5" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.03%)</title><rect x="986.1" y="1379.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.1" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="986.1" y="1363.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.1" y="1374.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (3 samples, 0.04%)</title><rect x="986.6" y="1379.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="989.6" y="1390.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (4 samples, 0.06%)</title><rect x="988.0" y="1443.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="991.0" y="1454.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (3 samples, 0.04%)</title><rect x="988.0" y="1427.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="991.0" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (4 samples, 0.06%)</title><rect x="988.7" y="1443.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="991.7" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (3 samples, 0.04%)</title><rect x="988.9" y="1427.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="991.9" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (81 samples, 1.21%)</title><rect x="989.4" y="1443.0" width="14.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.4" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (4 samples, 0.06%)</title><rect x="989.4" y="1427.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="992.4" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (76 samples, 1.14%)</title><rect x="990.3" y="1427.0" width="13.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.3" y="1438.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (5 samples, 0.07%)</title><rect x="990.3" y="1411.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="993.3" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="991.4" y="1411.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="994.4" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (20 samples, 0.30%)</title><rect x="991.7" y="1411.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="994.7" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (3 samples, 0.04%)</title><rect x="992.8" y="1395.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.8" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (8 samples, 0.12%)</title><rect x="993.5" y="1395.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="996.5" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.03%)</title><rect x="994.9" y="1395.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="997.9" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (13 samples, 0.19%)</title><rect x="995.2" y="1411.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="998.2" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.04%)</title><rect x="995.8" y="1395.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="998.8" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (2 samples, 0.03%)</title><rect x="996.3" y="1395.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="999.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (3 samples, 0.04%)</title><rect x="996.7" y="1395.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="999.7" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (4 samples, 0.06%)</title><rect x="997.5" y="1411.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (8 samples, 0.12%)</title><rect x="998.4" y="1411.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.4" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.04%)</title><rect x="999.1" y="1395.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (4 samples, 0.06%)</title><rect x="1000.0" y="1411.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1003.0" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.04%)</title><rect x="1000.2" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1003.2" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (16 samples, 0.24%)</title><rect x="1000.7" y="1411.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.7" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (7 samples, 0.10%)</title><rect x="1002.0" y="1395.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1005.0" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1002.7" y="1379.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1005.7" y="1390.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (2 samples, 0.03%)</title><rect x="1003.2" y="1395.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.2" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (414 samples, 6.19%)</title><rect x="1003.9" y="1443.0" width="73.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.9" y="1454.0">PhaseCha..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (4 samples, 0.06%)</title><rect x="1004.1" y="1427.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1007.1" y="1438.0"></text>
</g>
<g>
<title>JVMState::debug_end() const (2 samples, 0.03%)</title><rect x="1005.0" y="1427.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.0" y="1438.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (2 samples, 0.03%)</title><rect x="1005.8" y="1427.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1008.8" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (15 samples, 0.22%)</title><rect x="1006.4" y="1427.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (11 samples, 0.16%)</title><rect x="1009.0" y="1427.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.0" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1009.5" y="1411.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (4 samples, 0.06%)</title><rect x="1009.9" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (20 samples, 0.30%)</title><rect x="1011.0" y="1427.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.0" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1011.5" y="1411.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (15 samples, 0.22%)</title><rect x="1011.8" y="1411.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1014.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.12%)</title><rect x="1013.1" y="1395.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1016.1" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (40 samples, 0.60%)</title><rect x="1014.5" y="1427.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.5" y="1438.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="1019.4" y="1411.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.4" y="1422.0"></text>
</g>
<g>
<title>Node::rematerialize() const (3 samples, 0.04%)</title><rect x="1019.8" y="1411.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1022.8" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (5 samples, 0.07%)</title><rect x="1020.3" y="1411.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.3" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (3 samples, 0.04%)</title><rect x="1020.3" y="1395.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.3" y="1406.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (2 samples, 0.03%)</title><rect x="1020.5" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.5" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (107 samples, 1.60%)</title><rect x="1021.7" y="1427.0" width="18.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.7" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1025.4" y="1411.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1028.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (9 samples, 0.13%)</title><rect x="1026.0" y="1411.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1029.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (32 samples, 0.48%)</title><rect x="1027.6" y="1411.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1030.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.12%)</title><rect x="1031.8" y="1395.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1034.8" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (34 samples, 0.51%)</title><rect x="1033.2" y="1411.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1036.2" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.06%)</title><rect x="1034.6" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1037.6" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.07%)</title><rect x="1035.3" y="1395.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (17 samples, 0.25%)</title><rect x="1036.2" y="1395.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1039.2" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (4 samples, 0.06%)</title><rect x="1039.2" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1042.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.03%)</title><rect x="1039.9" y="1411.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (5 samples, 0.07%)</title><rect x="1040.6" y="1427.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1043.6" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.06%)</title><rect x="1040.8" y="1411.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1041.2" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.2" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (2 samples, 0.03%)</title><rect x="1041.5" y="1427.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.5" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (2 samples, 0.03%)</title><rect x="1041.9" y="1427.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1044.9" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.03%)</title><rect x="1042.2" y="1427.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.2" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (44 samples, 0.66%)</title><rect x="1042.6" y="1427.0" width="7.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1045.6" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (18 samples, 0.27%)</title><rect x="1045.7" y="1411.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.7" y="1422.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (4 samples, 0.06%)</title><rect x="1048.9" y="1411.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1051.9" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (2 samples, 0.03%)</title><rect x="1049.6" y="1411.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (13 samples, 0.19%)</title><rect x="1050.3" y="1427.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.3" y="1438.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (2 samples, 0.03%)</title><rect x="1051.6" y="1411.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1054.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.06%)</title><rect x="1051.9" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1054.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (8 samples, 0.12%)</title><rect x="1052.6" y="1427.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1055.6" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (50 samples, 0.75%)</title><rect x="1054.0" y="1427.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (32 samples, 0.48%)</title><rect x="1056.5" y="1411.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1059.5" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (4 samples, 0.06%)</title><rect x="1062.2" y="1411.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1065.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (4 samples, 0.06%)</title><rect x="1063.0" y="1427.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1066.0" y="1438.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (13 samples, 0.19%)</title><rect x="1063.8" y="1427.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.8" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="1063.8" y="1411.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1066.8" y="1422.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (11 samples, 0.16%)</title><rect x="1064.1" y="1411.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1067.1" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (3 samples, 0.04%)</title><rect x="1064.3" y="1395.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1067.3" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (4 samples, 0.06%)</title><rect x="1065.2" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (12 samples, 0.18%)</title><rect x="1066.0" y="1427.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.0" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.10%)</title><rect x="1066.8" y="1411.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (10 samples, 0.15%)</title><rect x="1068.2" y="1427.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.2" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.12%)</title><rect x="1068.5" y="1411.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1071.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.03%)</title><rect x="1069.9" y="1427.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.9" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (27 samples, 0.40%)</title><rect x="1070.5" y="1427.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1073.5" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (9 samples, 0.13%)</title><rect x="1073.3" y="1411.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1076.3" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (2 samples, 0.03%)</title><rect x="1073.6" y="1395.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1076.6" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.07%)</title><rect x="1074.0" y="1395.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1077.0" y="1406.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.04%)</title><rect x="1075.8" y="1427.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1078.8" y="1438.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (3 samples, 0.04%)</title><rect x="1076.3" y="1427.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.3" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (323 samples, 4.83%)</title><rect x="1077.2" y="1459.0" width="57.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.2" y="1470.0">Compil..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.07%)</title><rect x="1077.5" y="1443.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1080.5" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (4 samples, 0.06%)</title><rect x="1077.7" y="1427.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.7" y="1438.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (4 samples, 0.06%)</title><rect x="1078.4" y="1443.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.4" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (2 samples, 0.03%)</title><rect x="1078.8" y="1427.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.8" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (17 samples, 0.25%)</title><rect x="1079.1" y="1443.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1082.1" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (17 samples, 0.25%)</title><rect x="1079.1" y="1427.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.1" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (2 samples, 0.03%)</title><rect x="1079.1" y="1411.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.1" y="1422.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (2 samples, 0.03%)</title><rect x="1079.1" y="1395.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1082.1" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (6 samples, 0.09%)</title><rect x="1079.5" y="1411.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1082.5" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (6 samples, 0.09%)</title><rect x="1079.5" y="1395.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1082.5" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.194] (2 samples, 0.03%)</title><rect x="1079.8" y="1379.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.8" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (2 samples, 0.03%)</title><rect x="1080.2" y="1379.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1083.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::add_fields_to_worklist(FieldNode*, PointsToNode*) (2 samples, 0.03%)</title><rect x="1080.2" y="1363.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1083.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (7 samples, 0.10%)</title><rect x="1080.9" y="1411.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.9" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (5 samples, 0.07%)</title><rect x="1081.1" y="1395.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.1" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1081.2" y="1379.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1084.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1081.2" y="1363.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1084.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1081.4" y="1347.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.4" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1081.4" y="1331.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1084.4" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1081.4" y="1315.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.4" y="1326.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (15 samples, 0.22%)</title><rect x="1082.1" y="1443.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.1" y="1454.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (2 samples, 0.03%)</title><rect x="1083.5" y="1427.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.5" y="1438.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (3 samples, 0.04%)</title><rect x="1083.9" y="1427.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1086.9" y="1438.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (2 samples, 0.03%)</title><rect x="1084.1" y="1411.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.1" y="1422.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (2 samples, 0.03%)</title><rect x="1084.1" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1087.1" y="1406.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (2 samples, 0.03%)</title><rect x="1084.4" y="1427.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1087.4" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (5 samples, 0.07%)</title><rect x="1084.8" y="1443.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.8" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (5 samples, 0.07%)</title><rect x="1084.8" y="1427.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1087.8" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (2 samples, 0.03%)</title><rect x="1085.3" y="1411.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1088.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (208 samples, 3.11%)</title><rect x="1085.8" y="1443.0" width="36.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1088.8" y="1454.0">Pha..</text>
</g>
<g>
<title>Node::is_CFG() const (2 samples, 0.03%)</title><rect x="1086.5" y="1427.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (14 samples, 0.21%)</title><rect x="1087.1" y="1427.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.1" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.03%)</title><rect x="1089.0" y="1411.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1092.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (16 samples, 0.24%)</title><rect x="1089.5" y="1427.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1092.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.06%)</title><rect x="1091.7" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (113 samples, 1.69%)</title><rect x="1092.4" y="1427.0" width="19.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1095.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (97 samples, 1.45%)</title><rect x="1094.8" y="1411.0" width="17.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (85 samples, 1.27%)</title><rect x="1096.6" y="1395.0" width="15.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.03%)</title><rect x="1097.5" y="1379.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1100.5" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (78 samples, 1.17%)</title><rect x="1097.8" y="1379.0" width="13.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1112.0" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (12 samples, 0.18%)</title><rect x="1112.3" y="1427.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.3" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (4 samples, 0.06%)</title><rect x="1113.5" y="1411.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (25 samples, 0.37%)</title><rect x="1114.4" y="1427.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (3 samples, 0.04%)</title><rect x="1115.5" y="1411.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.03%)</title><rect x="1116.0" y="1411.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (14 samples, 0.21%)</title><rect x="1116.4" y="1411.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.4" y="1422.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (3 samples, 0.04%)</title><rect x="1116.9" y="1395.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1119.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.03%)</title><rect x="1117.1" y="1379.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (2 samples, 0.03%)</title><rect x="1117.4" y="1395.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (3 samples, 0.04%)</title><rect x="1117.8" y="1395.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.8" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1118.0" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1118.5" y="1395.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1118.5" y="1379.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1121.5" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (15 samples, 0.22%)</title><rect x="1118.8" y="1427.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1121.8" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (15 samples, 0.22%)</title><rect x="1118.8" y="1411.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.8" y="1422.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1119.7" y="1395.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1122.7" y="1406.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.03%)</title><rect x="1119.7" y="1379.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1120.4" y="1395.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1120.4" y="1379.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.4" y="1390.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (3 samples, 0.04%)</title><rect x="1121.5" y="1427.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (54 samples, 0.81%)</title><rect x="1122.9" y="1443.0" width="9.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1125.9" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (52 samples, 0.78%)</title><rect x="1123.1" y="1427.0" width="9.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.1" y="1438.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1123.6" y="1411.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1126.6" y="1422.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1123.6" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.6" y="1406.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="1124.5" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.5" y="1422.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (2 samples, 0.03%)</title><rect x="1124.8" y="1395.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1127.8" y="1406.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1125.6" y="1411.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.6" y="1422.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1125.6" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.6" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.06%)</title><rect x="1126.3" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1129.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (5 samples, 0.07%)</title><rect x="1127.0" y="1411.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1127.5" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.5" y="1406.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (2 samples, 0.03%)</title><rect x="1127.5" y="1379.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.5" y="1390.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="1128.2" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.2" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (18 samples, 0.27%)</title><rect x="1128.9" y="1411.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.9" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (18 samples, 0.27%)</title><rect x="1128.9" y="1395.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.9" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.27%)</title><rect x="1128.9" y="1379.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.9" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.27%)</title><rect x="1128.9" y="1363.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1131.9" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.22%)</title><rect x="1128.9" y="1347.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.9" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (15 samples, 0.22%)</title><rect x="1128.9" y="1331.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.9" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.19%)</title><rect x="1128.9" y="1315.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.9" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.16%)</title><rect x="1128.9" y="1299.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.9" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.12%)</title><rect x="1128.9" y="1283.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.9" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.12%)</title><rect x="1128.9" y="1267.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.9" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.12%)</title><rect x="1128.9" y="1251.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.9" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.12%)</title><rect x="1128.9" y="1235.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.9" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.12%)</title><rect x="1128.9" y="1219.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.9" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1128.9" y="1203.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.9" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1128.9" y="1187.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.9" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1128.9" y="1171.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.9" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.09%)</title><rect x="1128.9" y="1155.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.9" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.09%)</title><rect x="1128.9" y="1139.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.9" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.09%)</title><rect x="1128.9" y="1123.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.9" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1128.9" y="1107.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.9" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1128.9" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.9" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1128.9" y="1075.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.9" y="1086.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1128.9" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.9" y="1070.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1128.9" y="1043.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.9" y="1054.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (3 samples, 0.04%)</title><rect x="1129.3" y="1091.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.3" y="1102.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1129.3" y="1075.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.3" y="1086.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (3 samples, 0.04%)</title><rect x="1130.3" y="1283.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.3" y="1294.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1130.3" y="1267.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.3" y="1278.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1130.8" y="1299.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.8" y="1310.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1130.8" y="1283.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.8" y="1294.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1131.2" y="1315.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.2" y="1326.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1131.2" y="1299.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.2" y="1310.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1131.6" y="1347.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.6" y="1358.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1131.6" y="1331.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.6" y="1342.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (6 samples, 0.09%)</title><rect x="1132.4" y="1443.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.4" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.07%)</title><rect x="1132.4" y="1427.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1135.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.07%)</title><rect x="1132.4" y="1411.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.4" y="1422.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1133.5" y="1443.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.5" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1133.5" y="1427.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.5" y="1438.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1133.5" y="1411.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.5" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.06%)</title><rect x="1134.2" y="1459.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.2" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (3 samples, 0.04%)</title><rect x="1134.2" y="1443.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1137.2" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1134.2" y="1427.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.2" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1134.2" y="1411.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1134.2" y="1395.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1134.2" y="1379.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.2" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1134.2" y="1363.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.2" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1134.2" y="1347.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.2" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1134.2" y="1331.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1134.2" y="1315.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1134.2" y="1299.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1134.2" y="1283.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1134.2" y="1267.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1134.2" y="1251.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1134.2" y="1235.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.2" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1134.2" y="1219.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1134.2" y="1203.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.2" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1134.2" y="1187.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1134.2" y="1171.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.2" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1134.2" y="1155.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1134.2" y="1139.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.2" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1134.2" y="1123.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1134.2" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1134.2" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1134.2" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.2" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (151 samples, 2.26%)</title><rect x="1135.1" y="1459.0" width="26.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.1" y="1470.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (151 samples, 2.26%)</title><rect x="1135.1" y="1443.0" width="26.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.1" y="1454.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (150 samples, 2.24%)</title><rect x="1135.3" y="1427.0" width="26.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.3" y="1438.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (149 samples, 2.23%)</title><rect x="1135.3" y="1411.0" width="26.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.3" y="1422.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (148 samples, 2.21%)</title><rect x="1135.4" y="1395.0" width="26.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.4" y="1406.0">P..</text>
</g>
<g>
<title>Parse::do_call() (141 samples, 2.11%)</title><rect x="1135.6" y="1379.0" width="24.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.6" y="1390.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (5 samples, 0.07%)</title><rect x="1135.6" y="1363.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.6" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (5 samples, 0.07%)</title><rect x="1135.6" y="1347.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.6" y="1358.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (5 samples, 0.07%)</title><rect x="1135.6" y="1331.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.6" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.07%)</title><rect x="1135.6" y="1315.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.6" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.07%)</title><rect x="1135.6" y="1299.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.6" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.06%)</title><rect x="1135.6" y="1283.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.6" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1136.0" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.0" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1136.0" y="1251.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.0" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="1136.0" y="1235.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.0" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1136.0" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.0" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1136.0" y="1203.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.0" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1136.0" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.0" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1136.0" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.0" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1136.0" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.0" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1136.0" y="1139.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.0" y="1150.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="1136.0" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.0" y="1134.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.03%)</title><rect x="1136.0" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.0" y="1118.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1136.0" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.0" y="1102.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (2 samples, 0.03%)</title><rect x="1136.7" y="1363.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.7" y="1374.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1136.7" y="1347.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.7" y="1358.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.03%)</title><rect x="1136.7" y="1331.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.7" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (112 samples, 1.68%)</title><rect x="1137.2" y="1363.0" width="19.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1140.2" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (112 samples, 1.68%)</title><rect x="1137.2" y="1347.0" width="19.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.2" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (108 samples, 1.62%)</title><rect x="1137.4" y="1331.0" width="19.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (108 samples, 1.62%)</title><rect x="1137.4" y="1315.0" width="19.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (108 samples, 1.62%)</title><rect x="1137.4" y="1299.0" width="19.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (100 samples, 1.50%)</title><rect x="1137.6" y="1283.0" width="17.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.6" y="1294.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.10%)</title><rect x="1137.6" y="1267.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.6" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (5 samples, 0.07%)</title><rect x="1137.7" y="1251.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.7" y="1262.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1137.7" y="1235.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.7" y="1246.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (2 samples, 0.03%)</title><rect x="1137.7" y="1219.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.7" y="1230.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1137.7" y="1203.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.7" y="1214.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1138.1" y="1235.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.1" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1138.1" y="1219.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.1" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1138.1" y="1203.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.1" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1138.1" y="1187.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.1" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1138.1" y="1171.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.1" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1138.1" y="1155.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.1" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (3 samples, 0.04%)</title><rect x="1138.1" y="1139.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.1" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1138.1" y="1123.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.1" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1138.1" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.1" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1138.1" y="1091.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.1" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.04%)</title><rect x="1138.1" y="1075.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.1" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.04%)</title><rect x="1138.1" y="1059.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.1" y="1070.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1138.1" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.1" y="1054.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (3 samples, 0.04%)</title><rect x="1138.1" y="1027.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.1" y="1038.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.03%)</title><rect x="1138.1" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.1" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1138.1" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.1" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (2 samples, 0.03%)</title><rect x="1138.1" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.1" y="990.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (2 samples, 0.03%)</title><rect x="1138.8" y="1267.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.8" y="1278.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1138.8" y="1251.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (79 samples, 1.18%)</title><rect x="1139.3" y="1267.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.3" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (79 samples, 1.18%)</title><rect x="1139.3" y="1251.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.3" y="1262.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.03%)</title><rect x="1139.3" y="1235.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.3" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (77 samples, 1.15%)</title><rect x="1139.7" y="1235.0" width="13.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.7" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (76 samples, 1.14%)</title><rect x="1139.7" y="1219.0" width="13.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (76 samples, 1.14%)</title><rect x="1139.7" y="1203.0" width="13.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (71 samples, 1.06%)</title><rect x="1139.7" y="1187.0" width="12.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.7" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (61 samples, 0.91%)</title><rect x="1139.9" y="1171.0" width="10.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1142.9" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (61 samples, 0.91%)</title><rect x="1139.9" y="1155.0" width="10.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (60 samples, 0.90%)</title><rect x="1140.0" y="1139.0" width="10.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.0" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (58 samples, 0.87%)</title><rect x="1140.0" y="1123.0" width="10.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.0" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (58 samples, 0.87%)</title><rect x="1140.0" y="1107.0" width="10.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.0" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (53 samples, 0.79%)</title><rect x="1140.2" y="1091.0" width="9.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.2" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.09%)</title><rect x="1140.2" y="1075.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.2" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (4 samples, 0.06%)</title><rect x="1140.6" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.6" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1140.7" y="1043.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.7" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1140.7" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.7" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1140.7" y="1011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.7" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1140.7" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.7" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1140.7" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.7" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (42 samples, 0.63%)</title><rect x="1141.3" y="1075.0" width="7.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.3" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (42 samples, 0.63%)</title><rect x="1141.3" y="1059.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (39 samples, 0.58%)</title><rect x="1141.4" y="1043.0" width="6.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (39 samples, 0.58%)</title><rect x="1141.4" y="1027.0" width="6.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (39 samples, 0.58%)</title><rect x="1141.4" y="1011.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (31 samples, 0.46%)</title><rect x="1141.4" y="995.0" width="5.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.4" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1141.4" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.37%)</title><rect x="1142.0" y="979.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.0" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.37%)</title><rect x="1142.0" y="963.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (23 samples, 0.34%)</title><rect x="1142.2" y="947.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (23 samples, 0.34%)</title><rect x="1142.2" y="931.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.33%)</title><rect x="1142.3" y="915.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.30%)</title><rect x="1142.3" y="899.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.3" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1142.3" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1145.3" y="894.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1142.3" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.3" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.19%)</title><rect x="1143.0" y="883.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.19%)</title><rect x="1143.0" y="867.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.16%)</title><rect x="1143.2" y="851.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.16%)</title><rect x="1143.2" y="835.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.16%)</title><rect x="1143.2" y="819.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.16%)</title><rect x="1143.2" y="803.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.2" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.13%)</title><rect x="1143.4" y="787.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.4" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.12%)</title><rect x="1143.6" y="771.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.12%)</title><rect x="1143.6" y="755.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.12%)</title><rect x="1143.6" y="739.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.12%)</title><rect x="1143.6" y="723.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.09%)</title><rect x="1143.7" y="707.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1143.7" y="691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1143.7" y="675.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1143.7" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1146.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1143.7" y="643.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1143.7" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1143.7" y="611.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.7" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1143.7" y="595.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1143.7" y="579.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1143.7" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1143.7" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1143.7" y="531.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.7" y="542.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1144.4" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1147.4" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1145.3" y="883.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1145.5" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.5" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1145.5" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1145.5" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1145.5" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1145.5" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1145.5" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.5" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1146.4" y="979.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (2 samples, 0.03%)</title><rect x="1146.9" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="1006.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (2 samples, 0.03%)</title><rect x="1146.9" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (4 samples, 0.06%)</title><rect x="1147.3" y="995.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1147.3" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.3" y="990.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1147.3" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.3" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1147.3" y="947.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.3" y="958.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1147.3" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.3" y="942.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1147.3" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.3" y="926.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1147.3" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.3" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1148.7" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1148.7" y="1059.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.7" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1148.7" y="1043.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1148.7" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1148.7" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1148.7" y="995.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1148.7" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.7" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1148.7" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.7" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1148.7" y="947.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1148.7" y="931.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1148.7" y="915.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1148.7" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1148.7" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.7" y="894.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1148.9" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.9" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1148.9" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.9" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1148.9" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1148.9" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1148.9" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1148.9" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1148.9" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.9" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1148.9" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.9" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1148.9" y="739.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1148.9" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1148.9" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1148.9" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1148.9" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1149.6" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1149.6" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.6" y="1086.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1149.6" y="1059.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.6" y="1070.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1149.6" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.6" y="1054.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1149.6" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.6" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="1150.6" y="1171.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.09%)</title><rect x="1150.6" y="1155.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.6" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.09%)</title><rect x="1150.6" y="1139.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.09%)</title><rect x="1150.6" y="1123.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.09%)</title><rect x="1150.6" y="1107.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.09%)</title><rect x="1150.6" y="1091.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.09%)</title><rect x="1150.6" y="1075.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.6" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1150.6" y="1059.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.6" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1150.6" y="1043.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1150.8" y="1027.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1150.8" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1150.8" y="995.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1150.8" y="979.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.8" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1151.0" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.0" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1151.0" y="947.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1151.0" y="931.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1151.0" y="915.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1151.0" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1151.0" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.0" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1151.0" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.0" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1151.0" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1151.0" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1151.0" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1151.0" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="1152.2" y="1187.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.2" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (10 samples, 0.15%)</title><rect x="1153.3" y="1267.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.3" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="1153.3" y="1251.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.3" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.10%)</title><rect x="1153.3" y="1235.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.3" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.10%)</title><rect x="1153.3" y="1219.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.10%)</title><rect x="1153.3" y="1203.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.10%)</title><rect x="1153.3" y="1187.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.09%)</title><rect x="1153.3" y="1171.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.3" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1153.3" y="1155.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.3" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1153.3" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.3" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1153.3" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1153.3" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1153.3" y="1091.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1153.3" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.3" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1153.5" y="1059.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1153.5" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1153.6" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1153.6" y="1011.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.6" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1153.6" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.6" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1154.5" y="1251.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1154.5" y="1235.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1154.5" y="1219.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1154.5" y="1203.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1154.5" y="1187.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1154.5" y="1171.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1154.5" y="1155.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.5" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1154.5" y="1139.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.5" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1154.5" y="1123.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1154.5" y="1107.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1154.5" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1154.5" y="1075.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1154.5" y="1059.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.5" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1154.5" y="1043.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.5" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1154.5" y="1027.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1154.5" y="1011.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1154.5" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1154.5" y="979.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1154.5" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.5" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1154.5" y="947.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.5" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1154.5" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1154.5" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1154.5" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1154.5" y="883.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1154.5" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.5" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1154.5" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.5" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1154.5" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1154.5" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1154.5" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1154.5" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1154.5" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.5" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1154.5" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1154.5" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1154.5" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1154.5" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1154.5" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1154.5" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.07%)</title><rect x="1155.2" y="1283.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (3 samples, 0.04%)</title><rect x="1155.2" y="1267.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1155.7" y="1267.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.7" y="1278.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1155.7" y="1251.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.7" y="1262.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1155.7" y="1235.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.7" y="1246.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1155.7" y="1219.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.7" y="1230.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1155.7" y="1203.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.7" y="1214.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1155.7" y="1187.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.7" y="1198.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (20 samples, 0.30%)</title><rect x="1157.0" y="1363.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.0" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.22%)</title><rect x="1157.2" y="1347.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.2" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.22%)</title><rect x="1157.2" y="1331.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.21%)</title><rect x="1157.2" y="1315.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.21%)</title><rect x="1157.2" y="1299.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.21%)</title><rect x="1157.2" y="1283.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.21%)</title><rect x="1157.2" y="1267.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.2" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.18%)</title><rect x="1157.2" y="1251.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.2" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.18%)</title><rect x="1157.2" y="1235.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.2" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.18%)</title><rect x="1157.2" y="1219.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.18%)</title><rect x="1157.2" y="1203.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.2" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.18%)</title><rect x="1157.2" y="1187.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.15%)</title><rect x="1157.2" y="1171.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.2" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.12%)</title><rect x="1157.3" y="1155.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.3" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.12%)</title><rect x="1157.3" y="1139.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.3" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.12%)</title><rect x="1157.3" y="1123.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.12%)</title><rect x="1157.3" y="1107.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.12%)</title><rect x="1157.3" y="1091.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.09%)</title><rect x="1157.5" y="1075.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.09%)</title><rect x="1157.5" y="1059.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.09%)</title><rect x="1157.5" y="1043.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.09%)</title><rect x="1157.5" y="1027.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.09%)</title><rect x="1157.5" y="1011.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.09%)</title><rect x="1157.5" y="995.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="1157.5" y="979.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1157.7" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.7" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1157.7" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1157.7" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1157.7" y="915.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1157.7" y="899.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1157.7" y="883.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1158.0" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.0" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1158.0" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.0" y="862.0"></text>
</g>
<g>
<title>Parse::build_exits() (2 samples, 0.03%)</title><rect x="1158.0" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.0" y="846.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (2 samples, 0.03%)</title><rect x="1158.0" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.0" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.3" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.3" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.3" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.3" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.3" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.3" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.3" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.3" y="1171.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.3" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.3" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.3" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.3" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.3" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.3" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.3" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.3" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.3" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.3" y="1043.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.3" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.3" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.3" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.3" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.3" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.3" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.3" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1159.8" y="1347.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.8" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1159.8" y="1331.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.8" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1159.8" y="1315.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1159.8" y="1299.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1159.8" y="1283.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1159.8" y="1267.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.8" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1159.8" y="1251.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1159.8" y="1235.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.8" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1159.8" y="1219.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1159.8" y="1203.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1159.8" y="1187.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1159.8" y="1171.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1159.8" y="1155.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.8" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.8" y="1139.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.8" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.8" y="1107.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.8" y="1091.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.8" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.8" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.8" y="1043.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.8" y="1027.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.8" y="1011.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.8" y="995.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.8" y="979.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.8" y="963.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.8" y="947.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.8" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.8" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.8" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.8" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.8" y="883.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.8" y="867.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.8" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1159.8" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1159.8" y="835.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1159.8" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1159.8" y="803.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1159.8" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1159.8" y="771.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (2 samples, 0.03%)</title><rect x="1160.5" y="1379.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.5" y="1390.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (2 samples, 0.03%)</title><rect x="1160.5" y="1363.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.5" y="1374.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (5 samples, 0.07%)</title><rect x="1161.7" y="1459.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.7" y="1470.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1162.1" y="1443.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.1" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (4 samples, 0.06%)</title><rect x="1162.8" y="1459.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.8" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.04%)</title><rect x="1162.8" y="1443.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.8" y="1454.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1163.0" y="1427.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.0" y="1438.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (110 samples, 1.65%)</title><rect x="1163.7" y="1491.0" width="19.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.7" y="1502.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (109 samples, 1.63%)</title><rect x="1163.9" y="1475.0" width="19.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.9" y="1486.0"></text>
</g>
<g>
<title>Compilation::compile_method() (109 samples, 1.63%)</title><rect x="1163.9" y="1459.0" width="19.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.9" y="1470.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (103 samples, 1.54%)</title><rect x="1163.9" y="1443.0" width="18.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.9" y="1454.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (50 samples, 0.75%)</title><rect x="1163.9" y="1427.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.9" y="1438.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (4 samples, 0.06%)</title><rect x="1164.0" y="1411.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="1422.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.04%)</title><rect x="1164.0" y="1395.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1164.2" y="1379.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.2" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1164.2" y="1363.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.2" y="1374.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (39 samples, 0.58%)</title><rect x="1164.8" y="1411.0" width="6.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.8" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (39 samples, 0.58%)</title><rect x="1164.8" y="1395.0" width="6.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.8" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (39 samples, 0.58%)</title><rect x="1164.8" y="1379.0" width="6.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.8" y="1390.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.03%)</title><rect x="1164.9" y="1363.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.9" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (35 samples, 0.52%)</title><rect x="1165.3" y="1363.0" width="6.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.3" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (35 samples, 0.52%)</title><rect x="1165.3" y="1347.0" width="6.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.3" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (29 samples, 0.43%)</title><rect x="1166.0" y="1331.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.0" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (25 samples, 0.37%)</title><rect x="1166.2" y="1315.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.2" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (25 samples, 0.37%)</title><rect x="1166.2" y="1299.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.2" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (20 samples, 0.30%)</title><rect x="1166.3" y="1283.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.3" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (20 samples, 0.30%)</title><rect x="1166.3" y="1267.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.3" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (15 samples, 0.22%)</title><rect x="1166.9" y="1251.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.9" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (14 samples, 0.21%)</title><rect x="1166.9" y="1235.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (14 samples, 0.21%)</title><rect x="1166.9" y="1219.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.9" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (12 samples, 0.18%)</title><rect x="1166.9" y="1203.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (12 samples, 0.18%)</title><rect x="1166.9" y="1187.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1166.9" y="1171.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.9" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1167.0" y="1155.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.0" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 0.10%)</title><rect x="1167.4" y="1171.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.4" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.09%)</title><rect x="1167.4" y="1155.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.4" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.07%)</title><rect x="1167.4" y="1139.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.4" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.07%)</title><rect x="1167.4" y="1123.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.4" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.07%)</title><rect x="1167.4" y="1107.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.07%)</title><rect x="1167.4" y="1091.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.4" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.07%)</title><rect x="1167.4" y="1075.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.4" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.07%)</title><rect x="1167.4" y="1059.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.04%)</title><rect x="1167.4" y="1043.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.04%)</title><rect x="1167.4" y="1027.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1167.4" y="1011.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.4" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1167.4" y="995.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.4" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1167.4" y="979.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1167.4" y="963.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1167.4" y="947.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1167.4" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.4" y="942.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1167.4" y="915.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.4" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1167.4" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.4" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1167.4" y="883.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.4" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1167.4" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.4" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.03%)</title><rect x="1169.0" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.0" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (2 samples, 0.03%)</title><rect x="1169.0" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.0" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (2 samples, 0.03%)</title><rect x="1169.5" y="1251.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.5" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.03%)</title><rect x="1169.9" y="1283.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.9" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.03%)</title><rect x="1169.9" y="1267.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.9" y="1278.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.03%)</title><rect x="1169.9" y="1251.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.9" y="1262.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.03%)</title><rect x="1169.9" y="1235.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.9" y="1246.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.03%)</title><rect x="1169.9" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.9" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.03%)</title><rect x="1170.2" y="1283.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.2" y="1294.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (2 samples, 0.03%)</title><rect x="1170.2" y="1267.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.2" y="1278.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1170.2" y="1251.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.2" y="1262.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1170.2" y="1235.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.2" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.04%)</title><rect x="1170.6" y="1315.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.6" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1170.6" y="1299.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.6" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1170.6" y="1283.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.6" y="1294.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (4 samples, 0.06%)</title><rect x="1171.6" y="1411.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.6" y="1422.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (4 samples, 0.06%)</title><rect x="1171.6" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.6" y="1406.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (3 samples, 0.04%)</title><rect x="1171.8" y="1379.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.8" y="1390.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (13 samples, 0.19%)</title><rect x="1172.7" y="1427.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.7" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (9 samples, 0.13%)</title><rect x="1172.9" y="1411.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.9" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (2 samples, 0.03%)</title><rect x="1173.4" y="1395.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.4" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (2 samples, 0.03%)</title><rect x="1173.8" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.8" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (3 samples, 0.04%)</title><rect x="1174.5" y="1411.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.5" y="1422.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (2 samples, 0.03%)</title><rect x="1174.5" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.5" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1174.5" y="1379.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.5" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.03%)</title><rect x="1174.5" y="1363.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.5" y="1374.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (39 samples, 0.58%)</title><rect x="1175.0" y="1427.0" width="6.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.0" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (12 samples, 0.18%)</title><rect x="1175.0" y="1411.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.0" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (11 samples, 0.16%)</title><rect x="1175.2" y="1395.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.2" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.03%)</title><rect x="1175.5" y="1379.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.5" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (2 samples, 0.03%)</title><rect x="1175.5" y="1363.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.5" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (4 samples, 0.06%)</title><rect x="1176.2" y="1379.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.2" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.03%)</title><rect x="1176.4" y="1363.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.4" y="1374.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1176.4" y="1347.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.4" y="1358.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (2 samples, 0.03%)</title><rect x="1176.4" y="1331.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="1342.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (27 samples, 0.40%)</title><rect x="1177.1" y="1411.0" width="4.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.1" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (10 samples, 0.15%)</title><rect x="1177.1" y="1395.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.1" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (9 samples, 0.13%)</title><rect x="1177.3" y="1379.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.3" y="1390.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (5 samples, 0.07%)</title><rect x="1177.8" y="1363.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.8" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.03%)</title><rect x="1177.8" y="1347.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.8" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (3 samples, 0.04%)</title><rect x="1178.2" y="1347.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.2" y="1358.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (3 samples, 0.04%)</title><rect x="1178.2" y="1331.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.2" y="1342.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (7 samples, 0.10%)</title><rect x="1178.9" y="1395.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.9" y="1406.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (7 samples, 0.10%)</title><rect x="1178.9" y="1379.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.9" y="1390.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.04%)</title><rect x="1179.2" y="1363.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.2" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (2 samples, 0.03%)</title><rect x="1179.8" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (2 samples, 0.03%)</title><rect x="1179.8" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.8" y="1358.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (5 samples, 0.07%)</title><rect x="1180.1" y="1395.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.1" y="1406.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.03%)</title><rect x="1181.0" y="1395.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="1406.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (3 samples, 0.04%)</title><rect x="1181.3" y="1395.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="1406.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (5 samples, 0.07%)</title><rect x="1182.2" y="1443.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.2" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (5 samples, 0.07%)</title><rect x="1182.2" y="1427.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.2" y="1438.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.04%)</title><rect x="1182.6" y="1411.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="1422.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (2 samples, 0.03%)</title><rect x="1182.8" y="1395.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.8" y="1406.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.03%)</title><rect x="1182.8" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.8" y="1390.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.04%)</title><rect x="1183.1" y="1491.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.1" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (2 samples, 0.03%)</title><rect x="1183.3" y="1475.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="1486.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (4 samples, 0.06%)</title><rect x="1183.6" y="1507.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.6" y="1518.0"></text>
</g>
<g>
<title>os::available_memory() (3 samples, 0.04%)</title><rect x="1183.8" y="1491.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="1502.0"></text>
</g>
<g>
<title>OSContainer::memory_limit_in_bytes() (2 samples, 0.03%)</title><rect x="1184.0" y="1475.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="1486.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.03%)</title><rect x="1184.3" y="1507.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.3" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (4 samples, 0.06%)</title><rect x="1184.9" y="1523.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (3 samples, 0.04%)</title><rect x="1185.1" y="1507.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.1" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (3 samples, 0.04%)</title><rect x="1185.1" y="1491.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (3 samples, 0.04%)</title><rect x="1185.1" y="1475.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="1486.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (2 samples, 0.03%)</title><rect x="1185.2" y="1459.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.2" y="1470.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (21 samples, 0.31%)</title><rect x="1185.6" y="1523.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.6" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (20 samples, 0.30%)</title><rect x="1185.6" y="1507.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.6" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (20 samples, 0.30%)</title><rect x="1185.6" y="1491.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="1502.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (6 samples, 0.09%)</title><rect x="1185.6" y="1475.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.06%)</title><rect x="1185.8" y="1459.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.8" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.03%)</title><rect x="1185.8" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.8" y="1454.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (13 samples, 0.19%)</title><rect x="1186.8" y="1475.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.8" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.03%)</title><rect x="1187.4" y="1459.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (5 samples, 0.07%)</title><rect x="1187.7" y="1459.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (4 samples, 0.06%)</title><rect x="1187.9" y="1443.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="1454.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.03%)</title><rect x="1188.6" y="1459.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.6" y="1470.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.06%)</title><rect x="1189.3" y="1555.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.3" y="1566.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.06%)</title><rect x="1189.3" y="1539.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="1550.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.04%)</title><rect x="1189.3" y="1523.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="1534.0"></text>
</g>
</g>
</svg>
