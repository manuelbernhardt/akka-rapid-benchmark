<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (1,132 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="10.0" y="1603.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.09%)</title><rect x="11.0" y="1603.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1614.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.09%)</title><rect x="11.0" y="1587.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1598.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.09%)</title><rect x="11.0" y="1571.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.09%)</title><rect x="11.0" y="1555.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="1566.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.09%)</title><rect x="11.0" y="1539.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="1550.0"></text>
</g>
<g>
<title>Method::load_signature_classes(methodHandle const&amp;, Thread*) (1 samples, 0.09%)</title><rect x="11.0" y="1523.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.09%)</title><rect x="11.0" y="1507.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.0" y="1518.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1187956ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1187956ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="11.0" y="1491.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="12.1" y="1603.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.1" y="1614.0"></text>
</g>
<g>
<title>open64 (1 samples, 0.09%)</title><rect x="12.1" y="1587.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.1" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="12.1" y="1571.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.1" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="12.1" y="1555.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.1" y="1566.0"></text>
</g>
<g>
<title>sys_openat (1 samples, 0.09%)</title><rect x="12.1" y="1539.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.1" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.09%)</title><rect x="12.1" y="1523.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.1" y="1534.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.09%)</title><rect x="12.1" y="1507.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.1" y="1518.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.09%)</title><rect x="12.1" y="1491.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.1" y="1502.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.09%)</title><rect x="12.1" y="1475.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.1" y="1486.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.09%)</title><rect x="12.1" y="1459.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.1" y="1470.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.09%)</title><rect x="12.1" y="1443.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.1" y="1454.0"></text>
</g>
<g>
<title>kernfs_dop_revalidate (1 samples, 0.09%)</title><rect x="12.1" y="1427.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="15.1" y="1438.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="12.1" y="1411.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.1" y="1422.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.18%)</title><rect x="13.1" y="1603.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="16.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="13.1" y="1587.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="16.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="13.1" y="1571.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="16.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="13.1" y="1555.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="16.1" y="1566.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="13.1" y="1539.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="16.1" y="1550.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.09%)</title><rect x="14.2" y="1571.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="17.2" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="14.2" y="1555.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="17.2" y="1566.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="14.2" y="1539.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.2" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.18%)</title><rect x="15.2" y="1603.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="18.2" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="15.2" y="1587.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.2" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="15.2" y="1571.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.2" y="1582.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="15.2" y="1555.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.2" y="1566.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="15.2" y="1539.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.2" y="1550.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.18%)</title><rect x="15.2" y="1523.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.2" y="1534.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.18%)</title><rect x="15.2" y="1507.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.2" y="1518.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.09%)</title><rect x="15.2" y="1491.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.2" y="1502.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="16.3" y="1491.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.3" y="1502.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="16.3" y="1475.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.3" y="1486.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="16.3" y="1459.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.3" y="1470.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="17.3" y="1603.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.3" y="1614.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.09%)</title><rect x="18.3" y="1603.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="21.3" y="1614.0"></text>
</g>
<g>
<title>_IO_vfprintf (1 samples, 0.09%)</title><rect x="18.3" y="1587.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.3" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (2 samples, 0.18%)</title><rect x="19.4" y="1603.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.4" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.18%)</title><rect x="19.4" y="1587.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.4" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.18%)</title><rect x="19.4" y="1571.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.4" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.18%)</title><rect x="19.4" y="1555.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.4" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.18%)</title><rect x="19.4" y="1539.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.4" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.18%)</title><rect x="19.4" y="1523.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.4" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (2 samples, 0.18%)</title><rect x="19.4" y="1507.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.4" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (1 samples, 0.09%)</title><rect x="19.4" y="1491.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.4" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (1 samples, 0.09%)</title><rect x="19.4" y="1475.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createJsonGenerator (1 samples, 0.09%)</title><rect x="19.4" y="1459.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.4" y="1470.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createGenerator (1 samples, 0.09%)</title><rect x="19.4" y="1443.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.4" y="1454.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createGenerator (1 samples, 0.09%)</title><rect x="19.4" y="1427.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.4" y="1438.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.&lt;init&gt; (1 samples, 0.09%)</title><rect x="19.4" y="1411.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.4" y="1422.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer (1 samples, 0.09%)</title><rect x="19.4" y="1395.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="1406.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (1 samples, 0.09%)</title><rect x="19.4" y="1379.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.4" y="1390.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer (1 samples, 0.09%)</title><rect x="19.4" y="1363.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="1374.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.calloc (1 samples, 0.09%)</title><rect x="19.4" y="1347.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.4" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.09%)</title><rect x="19.4" y="1331.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.4" y="1342.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="19.4" y="1315.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.4" y="1326.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="19.4" y="1299.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.4" y="1310.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="19.4" y="1283.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="22.4" y="1294.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="19.4" y="1267.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="22.4" y="1278.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="19.4" y="1251.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.4" y="1262.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="19.4" y="1235.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.4" y="1246.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="19.4" y="1219.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="22.4" y="1230.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="19.4" y="1203.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.4" y="1214.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="19.4" y="1187.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.4" y="1198.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="19.4" y="1171.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.4" y="1182.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="19.4" y="1155.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="22.4" y="1166.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="19.4" y="1139.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="22.4" y="1150.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="19.4" y="1123.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.4" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (1 samples, 0.09%)</title><rect x="20.4" y="1491.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.4" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (1 samples, 0.09%)</title><rect x="20.4" y="1475.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.4" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (1 samples, 0.09%)</title><rect x="20.4" y="1459.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.4" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (1 samples, 0.09%)</title><rect x="20.4" y="1443.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.4" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (1 samples, 0.09%)</title><rect x="20.4" y="1427.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.4" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (1 samples, 0.09%)</title><rect x="20.4" y="1411.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.4" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (1 samples, 0.09%)</title><rect x="20.4" y="1395.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.4" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (1 samples, 0.09%)</title><rect x="20.4" y="1379.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.4" y="1390.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (1 samples, 0.09%)</title><rect x="20.4" y="1363.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.4" y="1374.0"></text>
</g>
<g>
<title>java/util/Calendar.defaultTimeZone (1 samples, 0.09%)</title><rect x="20.4" y="1347.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.4" y="1358.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.09%)</title><rect x="20.4" y="1331.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.4" y="1342.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.09%)</title><rect x="20.4" y="1315.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.4" y="1326.0"></text>
</g>
<g>
<title>free (1 samples, 0.09%)</title><rect x="21.5" y="1603.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/Thread.run (141 samples, 12.46%)</title><rect x="22.5" y="1603.0" width="147.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.5" y="1614.0">java/lang/Thread.run</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (37 samples, 3.27%)</title><rect x="22.5" y="1587.0" width="38.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.5" y="1598.0">akk..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (37 samples, 3.27%)</title><rect x="22.5" y="1571.0" width="38.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.5" y="1582.0">akk..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (2 samples, 0.18%)</title><rect x="23.6" y="1555.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (27 samples, 2.39%)</title><rect x="25.6" y="1555.0" width="28.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.6" y="1566.0">ak..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (23 samples, 2.03%)</title><rect x="27.7" y="1539.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.7" y="1550.0">a..</text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (23 samples, 2.03%)</title><rect x="27.7" y="1523.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1534.0">a..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (23 samples, 2.03%)</title><rect x="27.7" y="1507.0" width="24.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.7" y="1518.0">a..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (23 samples, 2.03%)</title><rect x="27.7" y="1491.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="1502.0">a..</text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (23 samples, 2.03%)</title><rect x="27.7" y="1475.0" width="24.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="1486.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (23 samples, 2.03%)</title><rect x="27.7" y="1459.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1470.0">a..</text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (23 samples, 2.03%)</title><rect x="27.7" y="1443.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.7" y="1454.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (23 samples, 2.03%)</title><rect x="27.7" y="1427.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.7" y="1438.0">a..</text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (23 samples, 2.03%)</title><rect x="27.7" y="1411.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.7" y="1422.0">a..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (23 samples, 2.03%)</title><rect x="27.7" y="1395.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1406.0">a..</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.&lt;init&gt; (9 samples, 0.80%)</title><rect x="27.7" y="1379.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (9 samples, 0.80%)</title><rect x="27.7" y="1363.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.7" y="1374.0"></text>
</g>
<g>
<title>async_page_fault (2 samples, 0.18%)</title><rect x="35.0" y="1347.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.0" y="1358.0"></text>
</g>
<g>
<title>do_async_page_fault (2 samples, 0.18%)</title><rect x="35.0" y="1331.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="38.0" y="1342.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.18%)</title><rect x="35.0" y="1315.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.0" y="1326.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.18%)</title><rect x="35.0" y="1299.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.0" y="1310.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.18%)</title><rect x="35.0" y="1283.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="38.0" y="1294.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.18%)</title><rect x="35.0" y="1267.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="38.0" y="1278.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.18%)</title><rect x="35.0" y="1251.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.0" y="1262.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.18%)</title><rect x="35.0" y="1235.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.0" y="1246.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.18%)</title><rect x="35.0" y="1219.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 1.24%)</title><rect x="37.1" y="1379.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 1.24%)</title><rect x="37.1" y="1363.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (14 samples, 1.24%)</title><rect x="37.1" y="1347.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 1.24%)</title><rect x="37.1" y="1331.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 1.24%)</title><rect x="37.1" y="1315.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 1.15%)</title><rect x="38.1" y="1299.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.1" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.18%)</title><rect x="38.1" y="1283.0" width="2.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="41.1" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="38.1" y="1267.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.1" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="39.2" y="1267.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.2" y="1278.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.97%)</title><rect x="40.2" y="1283.0" width="11.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="43.2" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.80%)</title><rect x="42.3" y="1267.0" width="9.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="45.3" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.80%)</title><rect x="42.3" y="1251.0" width="9.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.3" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="42.3" y="1235.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.3" y="1246.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="42.3" y="1219.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.3" y="1230.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="42.3" y="1203.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.3" y="1214.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="42.3" y="1187.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.3" y="1198.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.71%)</title><rect x="43.4" y="1235.0" width="8.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.4" y="1246.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.71%)</title><rect x="43.4" y="1219.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.4" y="1230.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.71%)</title><rect x="43.4" y="1203.0" width="8.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.4" y="1214.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.09%)</title><rect x="44.4" y="1187.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.4" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="45.4" y="1187.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="48.4" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.44%)</title><rect x="46.5" y="1187.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="49.5" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.44%)</title><rect x="46.5" y="1171.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.5" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.44%)</title><rect x="46.5" y="1155.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (2 samples, 0.18%)</title><rect x="51.7" y="1539.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.7" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (7 samples, 0.62%)</title><rect x="53.8" y="1555.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (7 samples, 0.62%)</title><rect x="53.8" y="1539.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.8" y="1550.0"></text>
</g>
<g>
<title>JVM_Sleep (1 samples, 0.09%)</title><rect x="54.8" y="1523.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="57.8" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="54.8" y="1507.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.8" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="54.8" y="1491.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.8" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="54.8" y="1475.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.8" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.35%)</title><rect x="55.9" y="1523.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="58.9" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.35%)</title><rect x="55.9" y="1507.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.9" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.35%)</title><rect x="55.9" y="1491.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.9" y="1502.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.35%)</title><rect x="55.9" y="1475.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.9" y="1486.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.27%)</title><rect x="55.9" y="1459.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.9" y="1470.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.18%)</title><rect x="56.9" y="1443.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.9" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.18%)</title><rect x="56.9" y="1427.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.9" y="1438.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.18%)</title><rect x="56.9" y="1411.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.9" y="1422.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.18%)</title><rect x="56.9" y="1395.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.9" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.18%)</title><rect x="56.9" y="1379.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.9" y="1390.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="59.0" y="1459.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.0" y="1470.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.09%)</title><rect x="60.0" y="1523.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="63.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (104 samples, 9.19%)</title><rect x="61.1" y="1587.0" width="108.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.1" y="1598.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (104 samples, 9.19%)</title><rect x="61.1" y="1571.0" width="108.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.1" y="1582.0">java/util/con..</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (13 samples, 1.15%)</title><rect x="66.3" y="1555.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (13 samples, 1.15%)</title><rect x="66.3" y="1539.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.3" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (13 samples, 1.15%)</title><rect x="66.3" y="1523.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.3" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (13 samples, 1.15%)</title><rect x="66.3" y="1507.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.3" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (13 samples, 1.15%)</title><rect x="66.3" y="1491.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.3" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (13 samples, 1.15%)</title><rect x="66.3" y="1475.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.3" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (13 samples, 1.15%)</title><rect x="66.3" y="1459.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.3" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (13 samples, 1.15%)</title><rect x="66.3" y="1443.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="66.3" y="1427.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="66.3" y="1411.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="66.3" y="1395.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="66.3" y="1379.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="66.3" y="1363.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="66.3" y="1347.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="66.3" y="1331.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="66.3" y="1315.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.09%)</title><rect x="66.3" y="1299.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.09%)</title><rect x="66.3" y="1283.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.09%)</title><rect x="66.3" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (1 samples, 0.09%)</title><rect x="66.3" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.09%)</title><rect x="66.3" y="1235.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.09%)</title><rect x="66.3" y="1219.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.3" y="1230.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.akka$io$InetAddressDnsResolver$$addressToRecords (1 samples, 0.09%)</title><rect x="67.3" y="1427.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.3" y="1438.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.collect (1 samples, 0.09%)</title><rect x="67.3" y="1411.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.collect (1 samples, 0.09%)</title><rect x="67.3" y="1395.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$akka$io$InetAddressDnsResolver$$addressToRecords$1.applyOrElse (1 samples, 0.09%)</title><rect x="67.3" y="1379.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.3" y="1390.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$akka$io$InetAddressDnsResolver$$addressToRecords$1.applyOrElse (1 samples, 0.09%)</title><rect x="67.3" y="1363.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/dns/CachePolicy$Ttl$.toTll (1 samples, 0.09%)</title><rect x="67.3" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.3" y="1358.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="67.3" y="1331.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.3" y="1342.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="67.3" y="1315.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.3" y="1326.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="67.3" y="1299.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.3" y="1310.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="67.3" y="1283.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.3" y="1294.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="67.3" y="1267.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.3" y="1278.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="67.3" y="1251.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.3" y="1262.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="67.3" y="1235.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.3" y="1246.0"></text>
</g>
<g>
<title>napi_gro_frags (1 samples, 0.09%)</title><rect x="67.3" y="1219.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.3" y="1230.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="67.3" y="1203.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="70.3" y="1214.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="67.3" y="1187.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="70.3" y="1198.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="67.3" y="1171.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.3" y="1182.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="67.3" y="1155.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="70.3" y="1166.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="67.3" y="1139.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.3" y="1150.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="67.3" y="1123.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.3" y="1134.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="67.3" y="1107.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="70.3" y="1118.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="67.3" y="1091.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.3" y="1102.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="67.3" y="1075.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.3" y="1086.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="67.3" y="1059.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.3" y="1070.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.09%)</title><rect x="67.3" y="1043.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.3" y="1054.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="67.3" y="1027.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="70.3" y="1038.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="67.3" y="1011.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.3" y="1022.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="67.3" y="995.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.3" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="67.3" y="979.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.3" y="990.0"></text>
</g>
<g>
<title>akka/io/dns/DnsProtocol$Resolved$.apply (1 samples, 0.09%)</title><rect x="68.4" y="1427.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.4" y="1438.0"></text>
</g>
<g>
<title>akka/io/dns/DnsProtocol$Resolved.&lt;init&gt; (1 samples, 0.09%)</title><rect x="68.4" y="1411.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.4" y="1422.0"></text>
</g>
<g>
<title>akka/io/IpVersionSelector$.getInetAddress (1 samples, 0.09%)</title><rect x="68.4" y="1395.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.4" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.88%)</title><rect x="69.4" y="1427.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.4" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.88%)</title><rect x="69.4" y="1411.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.4" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.88%)</title><rect x="69.4" y="1395.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.4" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (10 samples, 0.88%)</title><rect x="69.4" y="1379.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.4" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (9 samples, 0.80%)</title><rect x="69.4" y="1363.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.4" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (9 samples, 0.80%)</title><rect x="69.4" y="1347.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.4" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (9 samples, 0.80%)</title><rect x="69.4" y="1331.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.4" y="1342.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (2 samples, 0.18%)</title><rect x="69.4" y="1315.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.4" y="1326.0"></text>
</g>
<g>
<title>ObjArrayKlass::initialize(Thread*) (1 samples, 0.09%)</title><rect x="69.4" y="1299.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="72.4" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.223] (1 samples, 0.09%)</title><rect x="70.5" y="1299.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="73.5" y="1310.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="70.5" y="1283.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.5" y="1294.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="70.5" y="1267.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.5" y="1278.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="70.5" y="1251.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="73.5" y="1262.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="70.5" y="1235.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.35%)</title><rect x="71.5" y="1315.0" width="4.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="74.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="71.5" y="1299.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="74.5" y="1310.0"></text>
</g>
<g>
<title>__xstat64 (1 samples, 0.09%)</title><rect x="71.5" y="1283.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="74.5" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="71.5" y="1267.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.5" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="71.5" y="1251.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="74.5" y="1262.0"></text>
</g>
<g>
<title>sys_newstat (1 samples, 0.09%)</title><rect x="71.5" y="1235.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.5" y="1246.0"></text>
</g>
<g>
<title>SYSC_newstat (1 samples, 0.09%)</title><rect x="71.5" y="1219.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.5" y="1230.0"></text>
</g>
<g>
<title>vfs_statx (1 samples, 0.09%)</title><rect x="71.5" y="1203.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="74.5" y="1214.0"></text>
</g>
<g>
<title>user_path_at_empty (1 samples, 0.09%)</title><rect x="71.5" y="1187.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="74.5" y="1198.0"></text>
</g>
<g>
<title>filename_lookup (1 samples, 0.09%)</title><rect x="71.5" y="1171.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.5" y="1182.0"></text>
</g>
<g>
<title>path_lookupat (1 samples, 0.09%)</title><rect x="71.5" y="1155.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.5" y="1166.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.09%)</title><rect x="71.5" y="1139.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.5" y="1150.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.09%)</title><rect x="71.5" y="1123.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.5" y="1134.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.09%)</title><rect x="71.5" y="1107.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.5" y="1118.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.09%)</title><rect x="71.5" y="1091.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.5" y="1102.0"></text>
</g>
<g>
<title>fopen64 (1 samples, 0.09%)</title><rect x="72.5" y="1283.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="75.5" y="1294.0"></text>
</g>
<g>
<title>__sendmmsg (2 samples, 0.18%)</title><rect x="73.6" y="1299.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="76.6" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="73.6" y="1283.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.6" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="73.6" y="1267.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.6" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (2 samples, 0.18%)</title><rect x="73.6" y="1251.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.6" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (2 samples, 0.18%)</title><rect x="73.6" y="1235.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.6" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (2 samples, 0.18%)</title><rect x="73.6" y="1219.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.18%)</title><rect x="73.6" y="1203.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.18%)</title><rect x="73.6" y="1187.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.6" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (2 samples, 0.18%)</title><rect x="73.6" y="1171.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.6" y="1182.0"></text>
</g>
<g>
<title>udp_send_skb (2 samples, 0.18%)</title><rect x="73.6" y="1155.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.6" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (2 samples, 0.18%)</title><rect x="73.6" y="1139.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.6" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.18%)</title><rect x="73.6" y="1123.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.6" y="1134.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.18%)</title><rect x="73.6" y="1107.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.6" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.18%)</title><rect x="73.6" y="1091.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.6" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.18%)</title><rect x="73.6" y="1075.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.6" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.18%)</title><rect x="73.6" y="1059.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.6" y="1070.0"></text>
</g>
<g>
<title>do_softirq.part.17 (2 samples, 0.18%)</title><rect x="73.6" y="1043.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.6" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.18%)</title><rect x="73.6" y="1027.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.18%)</title><rect x="73.6" y="1011.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.6" y="1022.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.18%)</title><rect x="73.6" y="995.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.6" y="1006.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.18%)</title><rect x="73.6" y="979.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.6" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.18%)</title><rect x="73.6" y="963.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.6" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.18%)</title><rect x="73.6" y="947.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.6" y="958.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.18%)</title><rect x="73.6" y="931.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.6" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.18%)</title><rect x="73.6" y="915.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.18%)</title><rect x="73.6" y="899.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.6" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.18%)</title><rect x="73.6" y="883.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.6" y="894.0"></text>
</g>
<g>
<title>udp_rcv (2 samples, 0.18%)</title><rect x="73.6" y="867.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.6" y="878.0"></text>
</g>
<g>
<title>__udp4_lib_rcv (2 samples, 0.18%)</title><rect x="73.6" y="851.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.6" y="862.0"></text>
</g>
<g>
<title>compute_score (1 samples, 0.09%)</title><rect x="73.6" y="835.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.6" y="846.0"></text>
</g>
<g>
<title>udp_unicast_rcv_skb (1 samples, 0.09%)</title><rect x="74.6" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.6" y="846.0"></text>
</g>
<g>
<title>udp_queue_rcv_skb (1 samples, 0.09%)</title><rect x="74.6" y="819.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.6" y="830.0"></text>
</g>
<g>
<title>__udp_enqueue_schedule_skb (1 samples, 0.09%)</title><rect x="74.6" y="803.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.6" y="814.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="74.6" y="787.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.6" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="74.6" y="771.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.6" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="74.6" y="755.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.6" y="766.0"></text>
</g>
<g>
<title>__close_nocancel (1 samples, 0.09%)</title><rect x="75.7" y="1315.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.7" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="75.7" y="1299.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.7" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="75.7" y="1283.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.7" y="1294.0"></text>
</g>
<g>
<title>sys_close (1 samples, 0.09%)</title><rect x="75.7" y="1267.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.7" y="1278.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.09%)</title><rect x="75.7" y="1251.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.7" y="1262.0"></text>
</g>
<g>
<title>__read_nocancel (1 samples, 0.09%)</title><rect x="76.7" y="1315.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="79.7" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="76.7" y="1299.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.7" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="76.7" y="1283.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.7" y="1294.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.09%)</title><rect x="76.7" y="1267.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.7" y="1278.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.09%)</title><rect x="76.7" y="1251.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.7" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.09%)</title><rect x="76.7" y="1235.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.7" y="1246.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.09%)</title><rect x="76.7" y="1219.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.7" y="1230.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.09%)</title><rect x="76.7" y="1203.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="79.7" y="1214.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.09%)</title><rect x="76.7" y="1187.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.7" y="1198.0"></text>
</g>
<g>
<title>poll (1 samples, 0.09%)</title><rect x="77.8" y="1315.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="80.8" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="77.8" y="1299.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.8" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="77.8" y="1283.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.8" y="1294.0"></text>
</g>
<g>
<title>sys_poll (1 samples, 0.09%)</title><rect x="77.8" y="1267.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.8" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (1 samples, 0.09%)</title><rect x="77.8" y="1251.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="80.8" y="1262.0"></text>
</g>
<g>
<title>poll_schedule_timeout (1 samples, 0.09%)</title><rect x="77.8" y="1235.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.8" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.09%)</title><rect x="77.8" y="1219.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="80.8" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.09%)</title><rect x="77.8" y="1203.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.8" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="77.8" y="1187.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="80.8" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="77.8" y="1171.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.8" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="77.8" y="1155.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (1 samples, 0.09%)</title><rect x="78.8" y="1363.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.8" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (64 samples, 5.65%)</title><rect x="79.8" y="1555.0" width="66.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.8" y="1566.0">akka/di..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (64 samples, 5.65%)</title><rect x="79.8" y="1539.0" width="66.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.8" y="1550.0">akka/ut..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (64 samples, 5.65%)</title><rect x="79.8" y="1523.0" width="66.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.8" y="1534.0">akka/ut..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (56 samples, 4.95%)</title><rect x="79.8" y="1507.0" width="58.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.8" y="1518.0">akka/i..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (55 samples, 4.86%)</title><rect x="79.8" y="1491.0" width="57.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="1502.0">akka/i..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (54 samples, 4.77%)</title><rect x="80.9" y="1475.0" width="56.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.9" y="1486.0">akka/i..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (11 samples, 0.97%)</title><rect x="80.9" y="1459.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.97%)</title><rect x="80.9" y="1443.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.97%)</title><rect x="80.9" y="1427.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.97%)</title><rect x="80.9" y="1411.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.88%)</title><rect x="81.9" y="1395.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.88%)</title><rect x="81.9" y="1379.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.88%)</title><rect x="81.9" y="1363.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (10 samples, 0.88%)</title><rect x="81.9" y="1347.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.71%)</title><rect x="84.0" y="1331.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.71%)</title><rect x="84.0" y="1315.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.71%)</title><rect x="84.0" y="1299.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.71%)</title><rect x="84.0" y="1283.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.71%)</title><rect x="84.0" y="1267.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.71%)</title><rect x="84.0" y="1251.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.71%)</title><rect x="84.0" y="1235.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.71%)</title><rect x="84.0" y="1219.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.71%)</title><rect x="84.0" y="1203.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.71%)</title><rect x="84.0" y="1187.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.71%)</title><rect x="84.0" y="1171.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.09%)</title><rect x="84.0" y="1155.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="87.0" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.62%)</title><rect x="85.1" y="1155.0" width="7.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="88.1" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.53%)</title><rect x="85.1" y="1139.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.1" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.53%)</title><rect x="85.1" y="1123.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.1" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="85.1" y="1107.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.1" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="85.1" y="1091.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.1" y="1102.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="85.1" y="1075.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.1" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="85.1" y="1059.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.1" y="1070.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.44%)</title><rect x="86.1" y="1107.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="89.1" y="1118.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.35%)</title><rect x="86.1" y="1091.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.1" y="1102.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.35%)</title><rect x="86.1" y="1075.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.1" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.35%)</title><rect x="86.1" y="1059.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.1" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.35%)</title><rect x="86.1" y="1043.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="89.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.35%)</title><rect x="86.1" y="1027.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="89.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="90.3" y="1091.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="91.3" y="1139.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.3" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="91.3" y="1123.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.3" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="91.3" y="1107.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="94.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.18%)</title><rect x="92.3" y="1459.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.3" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.18%)</title><rect x="92.3" y="1443.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.3" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (41 samples, 3.62%)</title><rect x="94.4" y="1459.0" width="42.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.4" y="1470.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (41 samples, 3.62%)</title><rect x="94.4" y="1443.0" width="42.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.4" y="1454.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (41 samples, 3.62%)</title><rect x="94.4" y="1427.0" width="42.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.4" y="1438.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (10 samples, 0.88%)</title><rect x="94.4" y="1411.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.88%)</title><rect x="94.4" y="1395.0" width="10.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="97.4" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.88%)</title><rect x="94.4" y="1379.0" width="10.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="97.4" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.71%)</title><rect x="96.5" y="1363.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.5" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.71%)</title><rect x="96.5" y="1347.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.5" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (8 samples, 0.71%)</title><rect x="96.5" y="1331.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.5" y="1342.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.71%)</title><rect x="96.5" y="1315.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.5" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (2 samples, 0.18%)</title><rect x="96.5" y="1299.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="99.5" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="97.6" y="1283.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="100.6" y="1294.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="97.6" y="1267.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="100.6" y="1278.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="97.6" y="1251.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.6" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="97.6" y="1235.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.6" y="1246.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="97.6" y="1219.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="100.6" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.53%)</title><rect x="98.6" y="1299.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.6" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.53%)</title><rect x="98.6" y="1283.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="101.6" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="98.6" y="1267.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.6" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="98.6" y="1251.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.6" y="1262.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.44%)</title><rect x="99.6" y="1267.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.6" y="1278.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.44%)</title><rect x="99.6" y="1251.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.6" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.44%)</title><rect x="99.6" y="1235.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.53%)</title><rect x="104.9" y="1411.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.9" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (6 samples, 0.53%)</title><rect x="104.9" y="1395.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.9" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (6 samples, 0.53%)</title><rect x="104.9" y="1379.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="104.9" y="1363.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="107.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="104.9" y="1347.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="107.9" y="1358.0"></text>
</g>
<g>
<title>__read (1 samples, 0.09%)</title><rect x="104.9" y="1331.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="107.9" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="104.9" y="1315.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.9" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="104.9" y="1299.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="107.9" y="1310.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.09%)</title><rect x="104.9" y="1283.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="107.9" y="1294.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.09%)</title><rect x="104.9" y="1267.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="107.9" y="1278.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.09%)</title><rect x="104.9" y="1251.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.9" y="1262.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.09%)</title><rect x="104.9" y="1235.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.9" y="1246.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="104.9" y="1219.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="107.9" y="1230.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="104.9" y="1203.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.9" y="1214.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="104.9" y="1187.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.9" y="1198.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="104.9" y="1171.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.9" y="1182.0"></text>
</g>
<g>
<title>__read (2 samples, 0.18%)</title><rect x="105.9" y="1347.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.9" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="106.9" y="1331.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.9" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="106.9" y="1315.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="109.9" y="1326.0"></text>
</g>
<g>
<title>__read (3 samples, 0.27%)</title><rect x="108.0" y="1363.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="111.0" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="109.0" y="1347.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.0" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="109.0" y="1331.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.0" y="1342.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.09%)</title><rect x="110.1" y="1315.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.1" y="1326.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.09%)</title><rect x="110.1" y="1299.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.1" y="1310.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.09%)</title><rect x="110.1" y="1283.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.1" y="1294.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.09%)</title><rect x="110.1" y="1267.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.1" y="1278.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.09%)</title><rect x="110.1" y="1251.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.1" y="1262.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.09%)</title><rect x="110.1" y="1235.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (16 samples, 1.41%)</title><rect x="111.1" y="1411.0" width="16.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (3 samples, 0.27%)</title><rect x="112.2" y="1395.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.2" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.27%)</title><rect x="112.2" y="1379.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.2" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (12 samples, 1.06%)</title><rect x="115.3" y="1395.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.3" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (12 samples, 1.06%)</title><rect x="115.3" y="1379.0" width="12.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="118.3" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.97%)</title><rect x="116.3" y="1363.0" width="11.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.3" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.88%)</title><rect x="116.3" y="1347.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.3" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="117.4" y="1331.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.4" y="1342.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="117.4" y="1315.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.4" y="1326.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="117.4" y="1299.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.4" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="117.4" y="1283.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.4" y="1294.0"></text>
</g>
<g>
<title>sys_epoll_ctl (8 samples, 0.71%)</title><rect x="118.4" y="1331.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.4" y="1342.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="119.5" y="1315.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.5" y="1326.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="119.5" y="1299.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.5" y="1310.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="119.5" y="1283.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.5" y="1294.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.09%)</title><rect x="120.5" y="1315.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.5" y="1326.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.09%)</title><rect x="121.5" y="1315.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.5" y="1326.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (1 samples, 0.09%)</title><rect x="122.6" y="1315.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="125.6" y="1326.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.09%)</title><rect x="122.6" y="1299.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="125.6" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.09%)</title><rect x="122.6" y="1283.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.6" y="1294.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.09%)</title><rect x="122.6" y="1267.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.6" y="1278.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="122.6" y="1251.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="125.6" y="1262.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.09%)</title><rect x="122.6" y="1235.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.6" y="1246.0"></text>
</g>
<g>
<title>ep_remove (1 samples, 0.09%)</title><rect x="123.6" y="1315.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.6" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.09%)</title><rect x="123.6" y="1299.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.6" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.09%)</title><rect x="123.6" y="1283.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.6" y="1294.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.09%)</title><rect x="123.6" y="1267.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.6" y="1278.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="124.7" y="1315.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.7" y="1326.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.09%)</title><rect x="125.7" y="1315.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.7" y="1326.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.09%)</title><rect x="126.7" y="1347.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.09%)</title><rect x="127.8" y="1411.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.8" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.09%)</title><rect x="127.8" y="1395.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.8" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.09%)</title><rect x="127.8" y="1379.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.09%)</title><rect x="127.8" y="1363.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.09%)</title><rect x="127.8" y="1347.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (8 samples, 0.71%)</title><rect x="128.8" y="1411.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.8" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.09%)</title><rect x="129.9" y="1395.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.09%)</title><rect x="129.9" y="1379.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.9" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (1 samples, 0.09%)</title><rect x="130.9" y="1395.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.9" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (1 samples, 0.09%)</title><rect x="130.9" y="1379.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.9" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (1 samples, 0.09%)</title><rect x="130.9" y="1363.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="133.9" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="130.9" y="1347.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="133.9" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="130.9" y="1331.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.9" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.09%)</title><rect x="130.9" y="1315.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.9" y="1326.0"></text>
</g>
<g>
<title>ep_remove (1 samples, 0.09%)</title><rect x="130.9" y="1299.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="133.9" y="1310.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.09%)</title><rect x="130.9" y="1283.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="133.9" y="1294.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="130.9" y="1267.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="133.9" y="1278.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="130.9" y="1251.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.9" y="1262.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="130.9" y="1235.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.9" y="1246.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="130.9" y="1219.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="133.9" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (5 samples, 0.44%)</title><rect x="132.0" y="1395.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.0" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (5 samples, 0.44%)</title><rect x="132.0" y="1379.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.0" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (5 samples, 0.44%)</title><rect x="132.0" y="1363.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.0" y="1374.0"></text>
</g>
<g>
<title>close (5 samples, 0.44%)</title><rect x="132.0" y="1347.0" width="5.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="135.0" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.44%)</title><rect x="132.0" y="1331.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="135.0" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.44%)</title><rect x="132.0" y="1315.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.35%)</title><rect x="132.0" y="1299.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="135.0" y="1310.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.35%)</title><rect x="132.0" y="1283.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.0" y="1294.0"></text>
</g>
<g>
<title>____fput (4 samples, 0.35%)</title><rect x="132.0" y="1267.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.0" y="1278.0"></text>
</g>
<g>
<title>__fput (4 samples, 0.35%)</title><rect x="132.0" y="1251.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.0" y="1262.0"></text>
</g>
<g>
<title>dput (2 samples, 0.18%)</title><rect x="132.0" y="1235.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.0" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (2 samples, 0.18%)</title><rect x="132.0" y="1219.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="135.0" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (2 samples, 0.18%)</title><rect x="132.0" y="1203.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.0" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (2 samples, 0.18%)</title><rect x="132.0" y="1187.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.0" y="1198.0"></text>
</g>
<g>
<title>iput (2 samples, 0.18%)</title><rect x="132.0" y="1171.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="135.0" y="1182.0"></text>
</g>
<g>
<title>_atomic_dec_and_lock (1 samples, 0.09%)</title><rect x="132.0" y="1155.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.0" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="132.0" y="1139.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="135.0" y="1150.0"></text>
</g>
<g>
<title>evict (1 samples, 0.09%)</title><rect x="133.0" y="1155.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.0" y="1166.0"></text>
</g>
<g>
<title>inode_wait_for_writeback (1 samples, 0.09%)</title><rect x="133.0" y="1139.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="136.0" y="1150.0"></text>
</g>
<g>
<title>bit_waitqueue (1 samples, 0.09%)</title><rect x="133.0" y="1123.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.0" y="1134.0"></text>
</g>
<g>
<title>sock_close (2 samples, 0.18%)</title><rect x="134.0" y="1235.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.0" y="1246.0"></text>
</g>
<g>
<title>__sock_release (2 samples, 0.18%)</title><rect x="134.0" y="1219.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.0" y="1230.0"></text>
</g>
<g>
<title>inet6_release (2 samples, 0.18%)</title><rect x="134.0" y="1203.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.0" y="1214.0"></text>
</g>
<g>
<title>inet_release (1 samples, 0.09%)</title><rect x="134.0" y="1187.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.0" y="1198.0"></text>
</g>
<g>
<title>tcp_close (1 samples, 0.09%)</title><rect x="134.0" y="1171.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.0" y="1182.0"></text>
</g>
<g>
<title>percpu_counter_add_batch (1 samples, 0.09%)</title><rect x="134.0" y="1155.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="137.0" y="1166.0"></text>
</g>
<g>
<title>ip_mc_drop_socket (1 samples, 0.09%)</title><rect x="135.1" y="1187.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.1" y="1198.0"></text>
</g>
<g>
<title>sys_close (1 samples, 0.09%)</title><rect x="136.1" y="1299.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.1" y="1310.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.09%)</title><rect x="136.1" y="1283.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.1" y="1294.0"></text>
</g>
<g>
<title>dnotify_flush (1 samples, 0.09%)</title><rect x="136.1" y="1267.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="139.1" y="1278.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (1 samples, 0.09%)</title><rect x="137.2" y="1491.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.2" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (1 samples, 0.09%)</title><rect x="137.2" y="1475.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.2" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (7 samples, 0.62%)</title><rect x="138.2" y="1507.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.2" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (4 samples, 0.35%)</title><rect x="138.2" y="1491.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.2" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.27%)</title><rect x="139.3" y="1475.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.3" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="139.3" y="1459.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.3" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.27%)</title><rect x="139.3" y="1443.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.27%)</title><rect x="139.3" y="1427.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="139.3" y="1411.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.27%)</title><rect x="139.3" y="1395.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.27%)</title><rect x="139.3" y="1379.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.3" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.27%)</title><rect x="139.3" y="1363.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.3" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.27%)</title><rect x="139.3" y="1347.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.27%)</title><rect x="139.3" y="1331.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.27%)</title><rect x="139.3" y="1315.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.27%)</title><rect x="139.3" y="1299.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.27%)</title><rect x="139.3" y="1283.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.27%)</title><rect x="139.3" y="1267.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.27%)</title><rect x="139.3" y="1251.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.27%)</title><rect x="139.3" y="1235.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.27%)</title><rect x="139.3" y="1219.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.27%)</title><rect x="139.3" y="1203.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="140.3" y="1187.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.3" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="140.3" y="1171.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="143.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="140.3" y="1155.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.3" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="140.3" y="1139.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.3" y="1150.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="140.3" y="1123.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.3" y="1134.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="140.3" y="1107.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.3" y="1118.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="140.3" y="1091.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.3" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="140.3" y="1075.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.3" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="140.3" y="1059.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.3" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.18%)</title><rect x="140.3" y="1043.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.3" y="1054.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (2 samples, 0.18%)</title><rect x="142.4" y="1491.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.4" y="1502.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (2 samples, 0.18%)</title><rect x="142.4" y="1475.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.4" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.18%)</title><rect x="142.4" y="1459.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.4" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$671/1550002882.apply$mcV$sp (2 samples, 0.18%)</title><rect x="142.4" y="1443.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.4" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (2 samples, 0.18%)</title><rect x="142.4" y="1427.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.4" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (2 samples, 0.18%)</title><rect x="142.4" y="1411.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.4" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (2 samples, 0.18%)</title><rect x="142.4" y="1395.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.4" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (2 samples, 0.18%)</title><rect x="142.4" y="1379.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.09%)</title><rect x="142.4" y="1363.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.4" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (1 samples, 0.09%)</title><rect x="142.4" y="1347.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.4" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (1 samples, 0.09%)</title><rect x="143.4" y="1363.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.4" y="1374.0"></text>
</g>
<g>
<title>shutdown (1 samples, 0.09%)</title><rect x="143.4" y="1347.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="146.4" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (1 samples, 0.09%)</title><rect x="144.5" y="1491.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.5" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1272/954388747.apply$mcV$sp (1 samples, 0.09%)</title><rect x="144.5" y="1475.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.5" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (1 samples, 0.09%)</title><rect x="144.5" y="1459.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.5" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="144.5" y="1443.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="144.5" y="1427.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="144.5" y="1411.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="144.5" y="1395.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="144.5" y="1379.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="144.5" y="1363.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="144.5" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.5" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="144.5" y="1331.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.5" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="144.5" y="1315.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="144.5" y="1299.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.5" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="144.5" y="1283.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.5" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="144.5" y="1267.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.5" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="144.5" y="1251.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="144.5" y="1235.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="144.5" y="1219.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="144.5" y="1203.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="144.5" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="144.5" y="1171.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="144.5" y="1155.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.5" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="144.5" y="1139.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="147.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="144.5" y="1123.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="147.5" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="144.5" y="1107.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="147.5" y="1118.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="144.5" y="1091.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="147.5" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="144.5" y="1075.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="147.5" y="1086.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="144.5" y="1059.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.5" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="144.5" y="1043.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.5" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="144.5" y="1027.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="147.5" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="144.5" y="1011.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.5" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="145.5" y="1507.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="148.5" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (1 samples, 0.09%)</title><rect x="146.6" y="1555.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="1566.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (1 samples, 0.09%)</title><rect x="146.6" y="1539.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="1550.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (1 samples, 0.09%)</title><rect x="146.6" y="1523.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="1534.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (1 samples, 0.09%)</title><rect x="146.6" y="1507.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="1518.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (1 samples, 0.09%)</title><rect x="146.6" y="1491.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.6" y="1502.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (1 samples, 0.09%)</title><rect x="146.6" y="1475.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (1 samples, 0.09%)</title><rect x="146.6" y="1459.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (1 samples, 0.09%)</title><rect x="146.6" y="1443.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.6" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.09%)</title><rect x="146.6" y="1427.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.09%)</title><rect x="146.6" y="1411.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.09%)</title><rect x="146.6" y="1395.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.09%)</title><rect x="146.6" y="1379.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.09%)</title><rect x="146.6" y="1363.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.6" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.09%)</title><rect x="146.6" y="1347.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.09%)</title><rect x="146.6" y="1331.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.6" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.09%)</title><rect x="146.6" y="1315.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.6" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.09%)</title><rect x="146.6" y="1299.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="146.6" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="146.6" y="1267.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="146.6" y="1251.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="146.6" y="1235.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="146.6" y="1219.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="146.6" y="1203.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="146.6" y="1187.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="146.6" y="1171.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="146.6" y="1155.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.6" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1276/1122352107.run (7 samples, 0.62%)</title><rect x="147.6" y="1555.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.6" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (7 samples, 0.62%)</title><rect x="147.6" y="1539.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.6" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (4 samples, 0.35%)</title><rect x="147.6" y="1523.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.6" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (4 samples, 0.35%)</title><rect x="147.6" y="1507.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.6" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (4 samples, 0.35%)</title><rect x="147.6" y="1491.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.6" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (4 samples, 0.35%)</title><rect x="147.6" y="1475.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.6" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (4 samples, 0.35%)</title><rect x="147.6" y="1459.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.6" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$.apply (1 samples, 0.09%)</title><rect x="147.6" y="1443.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.09%)</title><rect x="147.6" y="1427.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.09%)</title><rect x="147.6" y="1411.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.09%)</title><rect x="147.6" y="1395.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.findExtension (1 samples, 0.09%)</title><rect x="147.6" y="1379.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.09%)</title><rect x="147.6" y="1363.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.6" y="1374.0"></text>
</g>
<g>
<title>akka/http/scaladsl/Http$.hashCode (1 samples, 0.09%)</title><rect x="147.6" y="1347.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest (1 samples, 0.09%)</title><rect x="148.6" y="1443.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.6" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequestImpl (1 samples, 0.09%)</title><rect x="148.6" y="1427.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.6" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.apply (1 samples, 0.09%)</title><rect x="148.6" y="1411.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.09%)</title><rect x="148.6" y="1395.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="148.6" y="1379.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="148.6" y="1363.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="148.6" y="1347.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="148.6" y="1331.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="148.6" y="1315.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="148.6" y="1299.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.6" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="148.6" y="1283.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.6" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.09%)</title><rect x="148.6" y="1267.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.6" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.09%)</title><rect x="148.6" y="1251.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.6" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.09%)</title><rect x="148.6" y="1235.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (1 samples, 0.09%)</title><rect x="148.6" y="1219.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.09%)</title><rect x="148.6" y="1203.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.09%)</title><rect x="148.6" y="1187.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="148.6" y="1171.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.6" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="148.6" y="1155.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="151.6" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="148.6" y="1139.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="151.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ConnectionPoolSettings.withMaxRetries (1 samples, 0.09%)</title><rect x="149.7" y="1443.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.7" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.copy (1 samples, 0.09%)</title><rect x="149.7" y="1427.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.7" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.&lt;init&gt; (1 samples, 0.09%)</title><rect x="149.7" y="1411.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.7" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (1 samples, 0.09%)</title><rect x="150.7" y="1443.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.7" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.writeTo (1 samples, 0.09%)</title><rect x="150.7" y="1427.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.09%)</title><rect x="150.7" y="1411.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.7" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.09%)</title><rect x="150.7" y="1395.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.7" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.writeTo (1 samples, 0.09%)</title><rect x="150.7" y="1379.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.09%)</title><rect x="150.7" y="1363.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.09%)</title><rect x="150.7" y="1347.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.7" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.writeTo (1 samples, 0.09%)</title><rect x="150.7" y="1331.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeInt32 (1 samples, 0.09%)</title><rect x="150.7" y="1315.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.7" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (1 samples, 0.09%)</title><rect x="150.7" y="1299.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.7" y="1310.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="150.7" y="1283.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="153.7" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.invalidateFailingEdges (2 samples, 0.18%)</title><rect x="151.8" y="1523.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.8" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (2 samples, 0.18%)</title><rect x="151.8" y="1507.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.8" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (2 samples, 0.18%)</title><rect x="151.8" y="1491.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.8" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (2 samples, 0.18%)</title><rect x="151.8" y="1475.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.8" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (2 samples, 0.18%)</title><rect x="151.8" y="1459.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.8" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (2 samples, 0.18%)</title><rect x="151.8" y="1443.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.8" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.18%)</title><rect x="151.8" y="1427.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.8" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.18%)</title><rect x="151.8" y="1411.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.8" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.18%)</title><rect x="151.8" y="1395.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.8" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.09%)</title><rect x="152.8" y="1379.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.8" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (1 samples, 0.09%)</title><rect x="152.8" y="1363.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (1 samples, 0.09%)</title><rect x="152.8" y="1347.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.8" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.09%)</title><rect x="153.9" y="1523.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.9" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.09%)</title><rect x="153.9" y="1507.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.9" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.09%)</title><rect x="153.9" y="1491.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.9" y="1502.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.09%)</title><rect x="153.9" y="1475.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.9" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.09%)</title><rect x="153.9" y="1459.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="1470.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.09%)</title><rect x="153.9" y="1443.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="156.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1285/1905205738.run (8 samples, 0.71%)</title><rect x="154.9" y="1555.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.9" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (8 samples, 0.71%)</title><rect x="154.9" y="1539.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.9" y="1550.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (1 samples, 0.09%)</title><rect x="154.9" y="1523.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.9" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (1 samples, 0.09%)</title><rect x="154.9" y="1507.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.9" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (1 samples, 0.09%)</title><rect x="154.9" y="1491.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.9" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (1 samples, 0.09%)</title><rect x="154.9" y="1475.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (1 samples, 0.09%)</title><rect x="154.9" y="1459.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="154.9" y="1443.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="154.9" y="1427.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.09%)</title><rect x="154.9" y="1411.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="154.9" y="1395.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="154.9" y="1379.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="154.9" y="1363.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="154.9" y="1347.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="154.9" y="1331.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.9" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="154.9" y="1315.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="157.9" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="154.9" y="1299.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.9" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="154.9" y="1283.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="157.9" y="1294.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="154.9" y="1267.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.9" y="1278.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="154.9" y="1251.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="157.9" y="1262.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="154.9" y="1235.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="157.9" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="154.9" y="1219.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.9" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="154.9" y="1203.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.9" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="154.9" y="1187.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.9" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (7 samples, 0.62%)</title><rect x="155.9" y="1523.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.9" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (6 samples, 0.53%)</title><rect x="155.9" y="1507.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.9" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$1089/1341793396.accept (3 samples, 0.27%)</title><rect x="155.9" y="1491.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (3 samples, 0.27%)</title><rect x="155.9" y="1475.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.9" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1294/311003229.accept (3 samples, 0.27%)</title><rect x="155.9" y="1459.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.9" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (3 samples, 0.27%)</title><rect x="155.9" y="1443.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.respondToJoiners (1 samples, 0.09%)</title><rect x="155.9" y="1427.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.9" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager.getAllMetadata (1 samples, 0.09%)</title><rect x="155.9" y="1411.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.forEach (1 samples, 0.09%)</title><rect x="155.9" y="1395.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.9" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager$$Lambda$1298/1173509561.accept (1 samples, 0.09%)</title><rect x="155.9" y="1379.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.9" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager.lambda$getAllMetadata$0 (1 samples, 0.09%)</title><rect x="155.9" y="1363.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.9" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostname (1 samples, 0.09%)</title><rect x="155.9" y="1347.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.9" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toStringUtf8 (1 samples, 0.09%)</title><rect x="155.9" y="1331.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.9" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toString (1 samples, 0.09%)</title><rect x="155.9" y="1315.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.9" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getRing (1 samples, 0.09%)</title><rect x="157.0" y="1427.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="1438.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableList.copyOf (1 samples, 0.09%)</title><rect x="157.0" y="1411.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.0" y="1422.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.09%)</title><rect x="157.0" y="1395.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.0" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.09%)</title><rect x="157.0" y="1379.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.0" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.09%)</title><rect x="157.0" y="1363.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="160.0" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.09%)</title><rect x="157.0" y="1347.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (1 samples, 0.09%)</title><rect x="158.0" y="1427.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.0" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (1 samples, 0.09%)</title><rect x="158.0" y="1411.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.0" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (1 samples, 0.09%)</title><rect x="158.0" y="1395.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.0" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (1 samples, 0.09%)</title><rect x="158.0" y="1379.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.0" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (1 samples, 0.09%)</title><rect x="158.0" y="1363.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.0" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.09%)</title><rect x="158.0" y="1347.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.0" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1 samples, 0.09%)</title><rect x="158.0" y="1331.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.0" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (1 samples, 0.09%)</title><rect x="158.0" y="1315.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.0" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.09%)</title><rect x="158.0" y="1299.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.0" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.27%)</title><rect x="159.1" y="1491.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.1" y="1502.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.equals (1 samples, 0.09%)</title><rect x="159.1" y="1475.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.1" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.equals (1 samples, 0.09%)</title><rect x="159.1" y="1459.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.1" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.equalsRange (1 samples, 0.09%)</title><rect x="159.1" y="1443.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.1" y="1454.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.09%)</title><rect x="159.1" y="1427.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.1" y="1438.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="159.1" y="1411.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.1" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.09%)</title><rect x="159.1" y="1395.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.18%)</title><rect x="160.1" y="1475.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.1" y="1486.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.hashCode (2 samples, 0.18%)</title><rect x="160.1" y="1459.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.1" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCode (2 samples, 0.18%)</title><rect x="160.1" y="1443.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.1" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.hashCodeRange (2 samples, 0.18%)</title><rect x="160.1" y="1427.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.1" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.hashCode (2 samples, 0.18%)</title><rect x="160.1" y="1411.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.09%)</title><rect x="161.1" y="1395.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.09%)</title><rect x="161.1" y="1379.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.1" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils.toRapidResponse (1 samples, 0.09%)</title><rect x="162.2" y="1507.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.2" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.newBuilder (1 samples, 0.09%)</title><rect x="162.2" y="1491.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.2" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.toBuilder (1 samples, 0.09%)</title><rect x="162.2" y="1475.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.53%)</title><rect x="163.2" y="1555.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (2 samples, 0.18%)</title><rect x="163.2" y="1539.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (2 samples, 0.18%)</title><rect x="163.2" y="1523.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.09%)</title><rect x="163.2" y="1507.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.2" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="163.2" y="1491.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="163.2" y="1475.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="163.2" y="1459.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.2" y="1470.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="163.2" y="1443.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="166.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.09%)</title><rect x="164.3" y="1507.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="164.3" y="1491.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.3" y="1502.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.09%)</title><rect x="164.3" y="1475.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="167.3" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="164.3" y="1459.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="167.3" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="164.3" y="1443.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="167.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.27%)</title><rect x="165.3" y="1539.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.27%)</title><rect x="165.3" y="1523.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.27%)</title><rect x="165.3" y="1507.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.27%)</title><rect x="165.3" y="1491.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="165.3" y="1475.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="168.3" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.27%)</title><rect x="165.3" y="1459.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="168.3" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="165.3" y="1443.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.3" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="165.3" y="1427.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.3" y="1438.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="166.4" y="1411.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.4" y="1422.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="166.4" y="1395.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="169.4" y="1406.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.18%)</title><rect x="166.4" y="1379.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.4" y="1390.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.18%)</title><rect x="166.4" y="1363.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.4" y="1374.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="167.4" y="1347.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="170.4" y="1358.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="167.4" y="1331.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.4" y="1342.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="167.4" y="1315.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="170.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.09%)</title><rect x="168.4" y="1539.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.4" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.09%)</title><rect x="168.4" y="1523.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.09%)</title><rect x="168.4" y="1507.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (651 samples, 57.51%)</title><rect x="169.5" y="1603.0" width="678.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.5" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (651 samples, 57.51%)</title><rect x="169.5" y="1587.0" width="678.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.5" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (526 samples, 46.47%)</title><rect x="170.5" y="1571.0" width="548.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.5" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (514 samples, 45.41%)</title><rect x="173.7" y="1555.0" width="535.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.7" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.09%)</title><rect x="185.1" y="1539.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.18%)</title><rect x="186.2" y="1539.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (500 samples, 44.17%)</title><rect x="188.3" y="1539.0" width="521.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.3" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (74 samples, 6.54%)</title><rect x="188.3" y="1523.0" width="77.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.3" y="1534.0">akka/disp..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (74 samples, 6.54%)</title><rect x="188.3" y="1507.0" width="77.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.3" y="1518.0">akka/disp..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (24 samples, 2.12%)</title><rect x="188.3" y="1491.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.3" y="1502.0">a..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (2 samples, 0.18%)</title><rect x="188.3" y="1475.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.3" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.09%)</title><rect x="189.3" y="1459.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.3" y="1470.0"></text>
</g>
<g>
<title>akka/actor/SchedulerException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="189.3" y="1443.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.akka$actor$Scheduler$$anon$$swap (1 samples, 0.09%)</title><rect x="190.3" y="1475.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.09%)</title><rect x="190.3" y="1459.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.09%)</title><rect x="190.3" y="1443.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="190.3" y="1427.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$3.run (2 samples, 0.18%)</title><rect x="191.4" y="1475.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.4" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$544/547257384.run (18 samples, 1.59%)</title><rect x="193.5" y="1475.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.5" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (18 samples, 1.59%)</title><rect x="193.5" y="1459.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.5" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (18 samples, 1.59%)</title><rect x="193.5" y="1443.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.5" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (16 samples, 1.41%)</title><rect x="195.5" y="1427.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.5" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (16 samples, 1.41%)</title><rect x="195.5" y="1411.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.5" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (16 samples, 1.41%)</title><rect x="195.5" y="1395.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.5" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (16 samples, 1.41%)</title><rect x="195.5" y="1379.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.5" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (12 samples, 1.06%)</title><rect x="199.7" y="1363.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (11 samples, 0.97%)</title><rect x="199.7" y="1347.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (11 samples, 0.97%)</title><rect x="199.7" y="1331.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (11 samples, 0.97%)</title><rect x="199.7" y="1315.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (11 samples, 0.97%)</title><rect x="199.7" y="1299.0" width="11.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.88%)</title><rect x="200.8" y="1283.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.88%)</title><rect x="200.8" y="1267.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.88%)</title><rect x="200.8" y="1251.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (10 samples, 0.88%)</title><rect x="200.8" y="1235.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.80%)</title><rect x="200.8" y="1219.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.80%)</title><rect x="200.8" y="1203.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.80%)</title><rect x="200.8" y="1187.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.80%)</title><rect x="200.8" y="1171.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.80%)</title><rect x="200.8" y="1155.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.80%)</title><rect x="200.8" y="1139.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.80%)</title><rect x="200.8" y="1123.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (9 samples, 0.80%)</title><rect x="200.8" y="1107.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.80%)</title><rect x="200.8" y="1091.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.80%)</title><rect x="200.8" y="1075.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (1 samples, 0.09%)</title><rect x="201.8" y="1059.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.62%)</title><rect x="202.8" y="1059.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.8" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.18%)</title><rect x="202.8" y="1043.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="205.8" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="202.8" y="1027.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="205.8" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.09%)</title><rect x="203.9" y="1027.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="206.9" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.44%)</title><rect x="204.9" y="1043.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="207.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.35%)</title><rect x="206.0" y="1027.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.0" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.35%)</title><rect x="206.0" y="1011.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="209.0" y="1022.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.35%)</title><rect x="206.0" y="995.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="209.0" y="1006.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.35%)</title><rect x="206.0" y="979.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="209.0" y="990.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.35%)</title><rect x="206.0" y="963.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.0" y="974.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.35%)</title><rect x="206.0" y="947.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="209.0" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.35%)</title><rect x="206.0" y="931.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.0" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.27%)</title><rect x="207.0" y="915.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (1 samples, 0.09%)</title><rect x="210.1" y="1219.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (1 samples, 0.09%)</title><rect x="210.1" y="1203.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (1 samples, 0.09%)</title><rect x="210.1" y="1187.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.1" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (1 samples, 0.09%)</title><rect x="210.1" y="1171.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.09%)</title><rect x="210.1" y="1155.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.09%)</title><rect x="210.1" y="1139.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreterOrNull (1 samples, 0.09%)</title><rect x="211.2" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="211.2" y="1331.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.09%)</title><rect x="211.2" y="1315.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.2" y="1326.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="212.2" y="1475.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="215.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (48 samples, 4.24%)</title><rect x="213.3" y="1491.0" width="50.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.3" y="1502.0">akka/..</text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (48 samples, 4.24%)</title><rect x="213.3" y="1475.0" width="50.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="1486.0">scala..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (48 samples, 4.24%)</title><rect x="213.3" y="1459.0" width="50.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.3" y="1470.0">scala..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$501/221753823.apply$mcV$sp (48 samples, 4.24%)</title><rect x="213.3" y="1443.0" width="50.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.3" y="1454.0">akka/..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (48 samples, 4.24%)</title><rect x="213.3" y="1427.0" width="50.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="1438.0">akka/..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (48 samples, 4.24%)</title><rect x="213.3" y="1411.0" width="50.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="1422.0">akka/..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (48 samples, 4.24%)</title><rect x="213.3" y="1395.0" width="50.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.3" y="1406.0">scala..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1032/1757659211.apply (24 samples, 2.12%)</title><rect x="213.3" y="1379.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.3" y="1390.0">a..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (24 samples, 2.12%)</title><rect x="213.3" y="1363.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="1374.0">a..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (2 samples, 0.18%)</title><rect x="213.3" y="1347.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (1 samples, 0.09%)</title><rect x="214.3" y="1331.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (1 samples, 0.09%)</title><rect x="214.3" y="1315.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (1 samples, 0.09%)</title><rect x="214.3" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteStringUnmarshaller (1 samples, 0.09%)</title><rect x="214.3" y="1283.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteStringUnmarshaller$ (1 samples, 0.09%)</title><rect x="214.3" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteStringUnmarshaller (1 samples, 0.09%)</title><rect x="214.3" y="1251.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.withMaterializer (1 samples, 0.09%)</title><rect x="214.3" y="1235.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="214.3" y="1219.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.3" y="1230.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.09%)</title><rect x="214.3" y="1203.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (1 samples, 0.09%)</title><rect x="215.4" y="1347.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.4" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (1 samples, 0.09%)</title><rect x="215.4" y="1331.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.4" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (1 samples, 0.09%)</title><rect x="215.4" y="1315.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Default.withSizeLimit (1 samples, 0.09%)</title><rect x="215.4" y="1299.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Limitable$.applyForByteStrings (1 samples, 0.09%)</title><rect x="215.4" y="1283.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Limitable$.applyLimit (1 samples, 0.09%)</title><rect x="215.4" y="1267.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.withAttributes (1 samples, 0.09%)</title><rect x="215.4" y="1251.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.setAttributes (1 samples, 0.09%)</title><rect x="215.4" y="1235.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.09%)</title><rect x="215.4" y="1219.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.09%)</title><rect x="215.4" y="1203.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes$$Lambda$405/286696477.apply (1 samples, 0.09%)</title><rect x="215.4" y="1187.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (21 samples, 1.86%)</title><rect x="216.4" y="1347.0" width="21.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.4" y="1358.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1057/1870591400.apply (21 samples, 1.86%)</title><rect x="216.4" y="1331.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.4" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (21 samples, 1.86%)</title><rect x="216.4" y="1315.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.4" y="1326.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1059/241421343.apply (1 samples, 0.09%)</title><rect x="216.4" y="1299.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (1 samples, 0.09%)</title><rect x="216.4" y="1283.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (1 samples, 0.09%)</title><rect x="216.4" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.09%)</title><rect x="216.4" y="1251.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (20 samples, 1.77%)</title><rect x="217.4" y="1299.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1057/1870591400.apply (20 samples, 1.77%)</title><rect x="217.4" y="1283.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (20 samples, 1.77%)</title><rect x="217.4" y="1267.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (20 samples, 1.77%)</title><rect x="217.4" y="1251.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1061/901735187.apply (19 samples, 1.68%)</title><rect x="218.5" y="1235.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (19 samples, 1.68%)</title><rect x="218.5" y="1219.0" width="19.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (19 samples, 1.68%)</title><rect x="218.5" y="1203.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (4 samples, 0.35%)</title><rect x="218.5" y="1187.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (2 samples, 0.18%)</title><rect x="218.5" y="1171.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (2 samples, 0.18%)</title><rect x="218.5" y="1155.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (2 samples, 0.18%)</title><rect x="218.5" y="1139.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.18%)</title><rect x="218.5" y="1123.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (2 samples, 0.18%)</title><rect x="218.5" y="1107.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (2 samples, 0.18%)</title><rect x="218.5" y="1091.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.18%)</title><rect x="218.5" y="1075.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.5" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.18%)</title><rect x="218.5" y="1059.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.09%)</title><rect x="219.5" y="1043.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/FlowShape.inlets (1 samples, 0.09%)</title><rect x="219.5" y="1027.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.5" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (1 samples, 0.09%)</title><rect x="220.6" y="1171.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (1 samples, 0.09%)</title><rect x="220.6" y="1155.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.09%)</title><rect x="220.6" y="1139.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (1 samples, 0.09%)</title><rect x="221.6" y="1171.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.6" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.addAttributes (1 samples, 0.09%)</title><rect x="221.6" y="1155.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.6" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (1 samples, 0.09%)</title><rect x="221.6" y="1139.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.6" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (15 samples, 1.33%)</title><rect x="222.7" y="1187.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (14 samples, 1.24%)</title><rect x="222.7" y="1171.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (14 samples, 1.24%)</title><rect x="222.7" y="1155.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (14 samples, 1.24%)</title><rect x="222.7" y="1139.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (14 samples, 1.24%)</title><rect x="222.7" y="1123.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.09%)</title><rect x="222.7" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.09%)</title><rect x="222.7" y="1091.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (2 samples, 0.18%)</title><rect x="223.7" y="1107.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.18%)</title><rect x="223.7" y="1091.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.7" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="223.7" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.7" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/Promise$.apply (1 samples, 0.09%)</title><rect x="223.7" y="1059.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="224.7" y="1075.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource.createLogic (1 samples, 0.09%)</title><rect x="224.7" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.&lt;init&gt; (1 samples, 0.09%)</title><rect x="224.7" y="1043.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.7" y="1054.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.09%)</title><rect x="224.7" y="1027.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.09%)</title><rect x="224.7" y="1011.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.09%)</title><rect x="224.7" y="995.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.09%)</title><rect x="224.7" y="979.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.length (1 samples, 0.09%)</title><rect x="224.7" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/SourceShape.inlets (1 samples, 0.09%)</title><rect x="224.7" y="947.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.7" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (10 samples, 0.88%)</title><rect x="225.8" y="1107.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (7 samples, 0.62%)</title><rect x="226.8" y="1091.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.8" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (7 samples, 0.62%)</title><rect x="226.8" y="1075.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (7 samples, 0.62%)</title><rect x="226.8" y="1059.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (7 samples, 0.62%)</title><rect x="226.8" y="1043.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (7 samples, 0.62%)</title><rect x="226.8" y="1027.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.8" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (1 samples, 0.09%)</title><rect x="227.9" y="1011.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (1 samples, 0.09%)</title><rect x="227.9" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (1 samples, 0.09%)</title><rect x="227.9" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (1 samples, 0.09%)</title><rect x="227.9" y="963.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (1 samples, 0.09%)</title><rect x="227.9" y="947.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (1 samples, 0.09%)</title><rect x="227.9" y="931.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="227.9" y="915.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="227.9" y="899.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (1 samples, 0.09%)</title><rect x="227.9" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.9" y="894.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (1 samples, 0.09%)</title><rect x="228.9" y="1011.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (1 samples, 0.09%)</title><rect x="228.9" y="995.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (1 samples, 0.09%)</title><rect x="228.9" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (1 samples, 0.09%)</title><rect x="228.9" y="963.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (1 samples, 0.09%)</title><rect x="228.9" y="947.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (1 samples, 0.09%)</title><rect x="228.9" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (1 samples, 0.09%)</title><rect x="228.9" y="915.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.09%)</title><rect x="228.9" y="899.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.09%)</title><rect x="228.9" y="883.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.9" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.09%)</title><rect x="228.9" y="867.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.9" y="878.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.09%)</title><rect x="228.9" y="851.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.9" y="862.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (4 samples, 0.35%)</title><rect x="229.9" y="1011.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.elements (2 samples, 0.18%)</title><rect x="229.9" y="995.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$1 (2 samples, 0.18%)</title><rect x="229.9" y="979.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (1 samples, 0.09%)</title><rect x="231.0" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.0" y="974.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (1 samples, 0.09%)</title><rect x="231.0" y="947.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.0" y="958.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (1 samples, 0.09%)</title><rect x="232.0" y="995.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.0" y="1006.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (1 samples, 0.09%)</title><rect x="232.0" y="979.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.0" y="990.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithTerminalDoubleWildcard (1 samples, 0.09%)</title><rect x="232.0" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.getOrElse (1 samples, 0.09%)</title><rect x="232.0" y="947.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.0" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="232.0" y="931.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.0" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="232.0" y="915.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="235.0" y="926.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (1 samples, 0.09%)</title><rect x="233.1" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (1 samples, 0.09%)</title><rect x="233.1" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.09%)</title><rect x="233.1" y="963.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.1" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.09%)</title><rect x="233.1" y="947.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.1" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.09%)</title><rect x="233.1" y="931.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.1" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.09%)</title><rect x="233.1" y="915.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.1" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.09%)</title><rect x="233.1" y="899.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.1" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.09%)</title><rect x="233.1" y="883.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.09%)</title><rect x="233.1" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.1" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.09%)</title><rect x="233.1" y="851.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.1" y="862.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (1 samples, 0.09%)</title><rect x="234.1" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.09%)</title><rect x="234.1" y="1075.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (1 samples, 0.09%)</title><rect x="234.1" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.1" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.09%)</title><rect x="234.1" y="1043.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.1" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (1 samples, 0.09%)</title><rect x="234.1" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.1" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (1 samples, 0.09%)</title><rect x="234.1" y="1011.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.1" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (1 samples, 0.09%)</title><rect x="234.1" y="995.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.1" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (1 samples, 0.09%)</title><rect x="234.1" y="979.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.1" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (1 samples, 0.09%)</title><rect x="234.1" y="963.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.1" y="974.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.keySet (1 samples, 0.09%)</title><rect x="234.1" y="947.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.1" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.09%)</title><rect x="234.1" y="931.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.1" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.09%)</title><rect x="235.2" y="1091.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.2" y="1102.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="235.2" y="1075.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="238.2" y="1086.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="235.2" y="1059.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.2" y="1070.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="235.2" y="1043.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.2" y="1054.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="235.2" y="1027.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.2" y="1038.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="235.2" y="1011.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.2" y="1022.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="235.2" y="995.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="238.2" y="1006.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="235.2" y="979.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.2" y="990.0"></text>
</g>
<g>
<title>__mod_node_page_state (1 samples, 0.09%)</title><rect x="235.2" y="963.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.2" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.inc (1 samples, 0.09%)</title><rect x="236.2" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (1 samples, 0.09%)</title><rect x="237.2" y="1171.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="237.2" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="237.2" y="1139.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (1 samples, 0.09%)</title><rect x="237.2" y="1123.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.09%)</title><rect x="237.2" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (1 samples, 0.09%)</title><rect x="237.2" y="1091.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="237.2" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="237.2" y="1059.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (1 samples, 0.09%)</title><rect x="237.2" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="237.2" y="1027.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.2" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="237.2" y="1011.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="240.2" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1074/1370920809.apply (21 samples, 1.86%)</title><rect x="238.3" y="1379.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.3" y="1390.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (21 samples, 1.86%)</title><rect x="238.3" y="1363.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.3" y="1374.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (21 samples, 1.86%)</title><rect x="238.3" y="1347.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.3" y="1358.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1068/1640171652.apply (9 samples, 0.80%)</title><rect x="238.3" y="1331.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.3" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (9 samples, 0.80%)</title><rect x="238.3" y="1315.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.3" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1053/2038920668.apply (3 samples, 0.27%)</title><rect x="238.3" y="1299.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.3" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseUnmarshaller$1 (3 samples, 0.27%)</title><rect x="238.3" y="1283.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.3" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.parseFrom (3 samples, 0.27%)</title><rect x="238.3" y="1267.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.3" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.27%)</title><rect x="238.3" y="1251.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.3" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.27%)</title><rect x="238.3" y="1235.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.3" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.27%)</title><rect x="238.3" y="1219.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.3" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (3 samples, 0.27%)</title><rect x="238.3" y="1203.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.3" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (3 samples, 0.27%)</title><rect x="238.3" y="1187.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.3" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="238.3" y="1171.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.3" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="238.3" y="1155.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.3" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (3 samples, 0.27%)</title><rect x="238.3" y="1139.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.3" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.&lt;init&gt; (3 samples, 0.27%)</title><rect x="238.3" y="1123.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.3" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownFieldProto3 (2 samples, 0.18%)</title><rect x="239.3" y="1107.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.3" y="1118.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.parseUnknownField (2 samples, 0.18%)</title><rect x="239.3" y="1091.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.3" y="1102.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet$Builder.mergeFieldFrom (2 samples, 0.18%)</title><rect x="239.3" y="1075.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.3" y="1086.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.invalidWireType (2 samples, 0.18%)</title><rect x="239.3" y="1059.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.3" y="1070.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException.&lt;init&gt; (2 samples, 0.18%)</title><rect x="239.3" y="1043.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/InvalidProtocolBufferException.&lt;init&gt; (2 samples, 0.18%)</title><rect x="239.3" y="1027.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.3" y="1038.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (2 samples, 0.18%)</title><rect x="239.3" y="1011.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.18%)</title><rect x="239.3" y="995.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.18%)</title><rect x="239.3" y="979.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.3" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.18%)</title><rect x="239.3" y="963.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.18%)</title><rect x="239.3" y="947.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.3" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.18%)</title><rect x="239.3" y="931.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="242.3" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.09%)</title><rect x="240.4" y="915.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="243.4" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1200/1920969335.apply (4 samples, 0.35%)</title><rect x="241.4" y="1299.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.4" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (4 samples, 0.35%)</title><rect x="241.4" y="1283.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.4" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (4 samples, 0.35%)</title><rect x="241.4" y="1267.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.4" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (4 samples, 0.35%)</title><rect x="241.4" y="1251.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.4" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (4 samples, 0.35%)</title><rect x="241.4" y="1235.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.4" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (4 samples, 0.35%)</title><rect x="241.4" y="1219.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.4" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (4 samples, 0.35%)</title><rect x="241.4" y="1203.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.4" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (4 samples, 0.35%)</title><rect x="241.4" y="1187.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.4" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (4 samples, 0.35%)</title><rect x="241.4" y="1171.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.4" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (4 samples, 0.35%)</title><rect x="241.4" y="1155.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.4" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (4 samples, 0.35%)</title><rect x="241.4" y="1139.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.4" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (4 samples, 0.35%)</title><rect x="241.4" y="1123.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.4" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (4 samples, 0.35%)</title><rect x="241.4" y="1107.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.4" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="1091.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.4" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.4" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="1059.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.4" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="1043.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.4" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.09%)</title><rect x="241.4" y="1027.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.4" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.4" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.4" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="979.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.4" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="963.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.4" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.09%)</title><rect x="241.4" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.4" y="958.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="931.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.4" y="942.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata$1.parsePartialFrom (1 samples, 0.09%)</title><rect x="241.4" y="915.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.4" y="926.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="899.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.4" y="910.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.&lt;init&gt; (1 samples, 0.09%)</title><rect x="241.4" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.4" y="894.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.09%)</title><rect x="241.4" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.4" y="878.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="242.5" y="1091.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.5" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="242.5" y="1075.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.5" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (3 samples, 0.27%)</title><rect x="242.5" y="1059.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.5" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (3 samples, 0.27%)</title><rect x="242.5" y="1043.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.5" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (3 samples, 0.27%)</title><rect x="242.5" y="1027.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.5" y="1038.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="242.5" y="1011.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.5" y="1022.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint$1.parsePartialFrom (3 samples, 0.27%)</title><rect x="242.5" y="995.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.5" y="1006.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (3 samples, 0.27%)</title><rect x="242.5" y="979.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.5" y="990.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.&lt;init&gt; (3 samples, 0.27%)</title><rect x="242.5" y="963.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.5" y="974.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (3 samples, 0.27%)</title><rect x="242.5" y="947.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.5" y="958.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.decodeUtf8 (2 samples, 0.18%)</title><rect x="243.5" y="931.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.5" y="942.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.decodeUtf8 (2 samples, 0.18%)</title><rect x="243.5" y="915.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.5" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1050/672070626.apply (1 samples, 0.09%)</title><rect x="245.6" y="1299.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteArrayUnmarshaller$1 (1 samples, 0.09%)</title><rect x="245.6" y="1283.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.6" y="1294.0"></text>
</g>
<g>
<title>akka/util/ByteString.toArray (1 samples, 0.09%)</title><rect x="245.6" y="1267.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.6" y="1278.0"></text>
</g>
<g>
<title>scala/reflect/ManifestFactory$ByteManifest.newArray (1 samples, 0.09%)</title><rect x="245.6" y="1251.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.6" y="1262.0"></text>
</g>
<g>
<title>scala/reflect/ManifestFactory$ByteManifest.newArray (1 samples, 0.09%)</title><rect x="245.6" y="1235.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.6" y="1246.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="245.6" y="1219.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="248.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1066/642337341.apply (1 samples, 0.09%)</title><rect x="246.6" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (1 samples, 0.09%)</title><rect x="246.6" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.6" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="246.6" y="1267.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="249.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1213/1353272787.apply (12 samples, 1.06%)</title><rect x="247.7" y="1331.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.7" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (12 samples, 1.06%)</title><rect x="247.7" y="1315.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1212/809762384.apply (12 samples, 1.06%)</title><rect x="247.7" y="1299.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (12 samples, 1.06%)</title><rect x="247.7" y="1283.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.97%)</title><rect x="247.7" y="1267.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (11 samples, 0.97%)</title><rect x="247.7" y="1251.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1219/93717299.apply (11 samples, 0.97%)</title><rect x="247.7" y="1235.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (11 samples, 0.97%)</title><rect x="247.7" y="1219.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (11 samples, 0.97%)</title><rect x="247.7" y="1203.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (11 samples, 0.97%)</title><rect x="247.7" y="1187.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.7" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (11 samples, 0.97%)</title><rect x="247.7" y="1171.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (11 samples, 0.97%)</title><rect x="247.7" y="1155.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (11 samples, 0.97%)</title><rect x="247.7" y="1139.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.7" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (1 samples, 0.09%)</title><rect x="247.7" y="1123.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1246/890084927.apply (1 samples, 0.09%)</title><rect x="247.7" y="1107.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$2 (1 samples, 0.09%)</title><rect x="247.7" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (1 samples, 0.09%)</title><rect x="247.7" y="1075.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1247/1494120273.apply (1 samples, 0.09%)</title><rect x="247.7" y="1059.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$2 (1 samples, 0.09%)</title><rect x="247.7" y="1043.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.apply (1 samples, 0.09%)</title><rect x="247.7" y="1027.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (1 samples, 0.09%)</title><rect x="247.7" y="1011.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (1 samples, 0.09%)</title><rect x="247.7" y="995.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (1 samples, 0.09%)</title><rect x="247.7" y="979.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/428746855.invoke_MT (1 samples, 0.09%)</title><rect x="247.7" y="963.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.checkGenericType (1 samples, 0.09%)</title><rect x="247.7" y="947.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$.apply (4 samples, 0.35%)</title><rect x="248.7" y="1123.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.&lt;init&gt; (4 samples, 0.35%)</title><rect x="248.7" y="1107.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.&lt;init&gt; (4 samples, 0.35%)</title><rect x="248.7" y="1091.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (3 samples, 0.27%)</title><rect x="248.7" y="1075.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (3 samples, 0.27%)</title><rect x="248.7" y="1059.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (3 samples, 0.27%)</title><rect x="248.7" y="1043.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.sorted (3 samples, 0.27%)</title><rect x="248.7" y="1027.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (3 samples, 0.27%)</title><rect x="248.7" y="1011.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (3 samples, 0.27%)</title><rect x="248.7" y="995.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (3 samples, 0.27%)</title><rect x="248.7" y="979.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (3 samples, 0.27%)</title><rect x="248.7" y="963.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (3 samples, 0.27%)</title><rect x="248.7" y="947.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.newSpecificBuilder (3 samples, 0.27%)</title><rect x="248.7" y="931.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.newSpecificBuilder$ (2 samples, 0.18%)</title><rect x="249.8" y="915.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.8" y="926.0"></text>
</g>
<g>
<title>scala/collection/IterableFactoryDefaults.newSpecificBuilder (2 samples, 0.18%)</title><rect x="249.8" y="899.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.8" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="249.8" y="883.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="252.8" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterableFactory (1 samples, 0.09%)</title><rect x="250.8" y="883.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.8" y="894.0"></text>
</g>
<g>
<title>scala/collection/IterableOps$WithFilter.flatMap (1 samples, 0.09%)</title><rect x="251.8" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.09%)</title><rect x="251.8" y="1059.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.09%)</title><rect x="251.8" y="1043.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (1 samples, 0.09%)</title><rect x="251.8" y="1027.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.09%)</title><rect x="251.8" y="1011.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$10.hasNext (1 samples, 0.09%)</title><rect x="251.8" y="995.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.8" y="1006.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.09%)</title><rect x="251.8" y="979.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.8" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator$$Lambda$1240/1513443705.apply (1 samples, 0.09%)</title><rect x="251.8" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.8" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1$adapted (1 samples, 0.09%)</title><rect x="251.8" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/MediaTypeNegotiator.$anonfun$acceptedMediaRanges$1 (1 samples, 0.09%)</title><rect x="251.8" y="931.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (6 samples, 0.53%)</title><rect x="252.9" y="1123.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (6 samples, 0.53%)</title><rect x="252.9" y="1107.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (6 samples, 0.53%)</title><rect x="252.9" y="1091.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1068/1640171652.apply (6 samples, 0.53%)</title><rect x="252.9" y="1075.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (6 samples, 0.53%)</title><rect x="252.9" y="1059.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$1253/489083603.apply (6 samples, 0.53%)</title><rect x="252.9" y="1043.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (6 samples, 0.53%)</title><rect x="252.9" y="1027.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.pickContentType (2 samples, 0.18%)</title><rect x="252.9" y="1011.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.18%)</title><rect x="252.9" y="995.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator$$Lambda$1254/180456942.apply (1 samples, 0.09%)</title><rect x="252.9" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.$anonfun$pickContentType$1 (1 samples, 0.09%)</title><rect x="252.9" y="963.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ContentNegotiator.qValueFor (1 samples, 0.09%)</title><rect x="252.9" y="947.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.9" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="253.9" y="979.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="256.9" y="990.0"></text>
</g>
<g>
<title>scala/Option.orElse (1 samples, 0.09%)</title><rect x="255.0" y="1011.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$1258/1483132590.apply (1 samples, 0.09%)</title><rect x="255.0" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$3 (1 samples, 0.09%)</title><rect x="255.0" y="979.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.collectFirst (1 samples, 0.09%)</title><rect x="255.0" y="963.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst$ (1 samples, 0.09%)</title><rect x="255.0" y="947.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.collectFirst (1 samples, 0.09%)</title><rect x="255.0" y="931.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$anonfun$$nestedInanonfun$toResponseFor$3$1.applyOrElse (1 samples, 0.09%)</title><rect x="255.0" y="915.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$anonfun$$nestedInanonfun$toResponseFor$3$1.applyOrElse (1 samples, 0.09%)</title><rect x="255.0" y="899.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (3 samples, 0.27%)</title><rect x="256.0" y="1011.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (3 samples, 0.27%)</title><rect x="256.0" y="995.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (3 samples, 0.27%)</title><rect x="256.0" y="979.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (3 samples, 0.27%)</title><rect x="256.0" y="963.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.09%)</title><rect x="258.1" y="947.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.09%)</title><rect x="258.1" y="931.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.1" y="942.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (1 samples, 0.09%)</title><rect x="258.1" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.1" y="926.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.09%)</title><rect x="258.1" y="899.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.1" y="910.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.iterator (1 samples, 0.09%)</title><rect x="258.1" y="883.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.1" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1187/1876874898.apply (1 samples, 0.09%)</title><rect x="259.1" y="1267.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (1 samples, 0.09%)</title><rect x="259.1" y="1251.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1209/2029199156.apply (1 samples, 0.09%)</title><rect x="259.1" y="1235.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (1 samples, 0.09%)</title><rect x="259.1" y="1219.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.1" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1215/250045874.apply (1 samples, 0.09%)</title><rect x="259.1" y="1203.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.1" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (1 samples, 0.09%)</title><rect x="259.1" y="1187.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.1" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (1 samples, 0.09%)</title><rect x="259.1" y="1171.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.1" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$.toScalaFuture (1 samples, 0.09%)</title><rect x="259.1" y="1155.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.1" y="1166.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures.addCallback (1 samples, 0.09%)</title><rect x="259.1" y="1139.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.1" y="1150.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ImmediateFuture.addListener (1 samples, 0.09%)</title><rect x="259.1" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (1 samples, 0.09%)</title><rect x="259.1" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="259.1" y="1091.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="259.1" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.09%)</title><rect x="259.1" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="259.1" y="1043.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="259.1" y="1027.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="259.1" y="1011.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="259.1" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="259.1" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.1" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="259.1" y="963.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="262.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="259.1" y="947.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="262.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="259.1" y="931.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.1" y="942.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="259.1" y="915.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.1" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="259.1" y="899.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.1" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="259.1" y="883.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.1" y="894.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/793293778.apply (1 samples, 0.09%)</title><rect x="260.2" y="1379.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.2" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="260.2" y="1363.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="263.2" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.18%)</title><rect x="261.2" y="1379.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.2" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.09%)</title><rect x="262.3" y="1363.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.3" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.09%)</title><rect x="262.3" y="1347.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.09%)</title><rect x="262.3" y="1331.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.09%)</title><rect x="262.3" y="1315.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.09%)</title><rect x="262.3" y="1299.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (1 samples, 0.09%)</title><rect x="262.3" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (1 samples, 0.09%)</title><rect x="262.3" y="1267.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.09%)</title><rect x="262.3" y="1251.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.3" y="1262.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="262.3" y="1235.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.3" y="1246.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="262.3" y="1219.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.3" y="1230.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="262.3" y="1203.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.3" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="262.3" y="1187.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.3" y="1198.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="262.3" y="1171.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="265.3" y="1182.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="262.3" y="1155.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.3" y="1166.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.09%)</title><rect x="262.3" y="1139.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.3" y="1150.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.09%)</title><rect x="262.3" y="1123.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher$$Lambda$116/1733022752.apply$mcV$sp (2 samples, 0.18%)</title><rect x="263.3" y="1491.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.3" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.$anonfun$taskCleanup$1 (2 samples, 0.18%)</title><rect x="263.3" y="1475.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.3" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (1 samples, 0.09%)</title><rect x="263.3" y="1459.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.3" y="1470.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="264.3" y="1459.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="267.3" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (421 samples, 37.19%)</title><rect x="265.4" y="1523.0" width="438.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.4" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (421 samples, 37.19%)</title><rect x="265.4" y="1507.0" width="438.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.4" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.27%)</title><rect x="266.4" y="1491.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.4" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="266.4" y="1475.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.4" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="266.4" y="1459.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.4" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="266.4" y="1443.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.4" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="266.4" y="1427.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.4" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="266.4" y="1411.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="266.4" y="1395.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="266.4" y="1379.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="266.4" y="1363.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="266.4" y="1347.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="267.5" y="1331.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.5" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="267.5" y="1315.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="270.5" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (1 samples, 0.09%)</title><rect x="268.5" y="1475.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.hasSystemMessages (1 samples, 0.09%)</title><rect x="268.5" y="1459.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages$ (1 samples, 0.09%)</title><rect x="268.5" y="1443.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.5" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.hasSystemMessages (1 samples, 0.09%)</title><rect x="268.5" y="1427.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.systemQueueGet (1 samples, 0.09%)</title><rect x="268.5" y="1411.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.5" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="268.5" y="1395.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="271.5" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (60 samples, 5.30%)</title><rect x="269.6" y="1491.0" width="62.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.6" y="1502.0">akka/d..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (56 samples, 4.95%)</title><rect x="269.6" y="1475.0" width="58.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.6" y="1486.0">akka/a..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (56 samples, 4.95%)</title><rect x="269.6" y="1459.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.6" y="1470.0">akka/a..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (2 samples, 0.18%)</title><rect x="269.6" y="1443.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (2 samples, 0.18%)</title><rect x="269.6" y="1427.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (2 samples, 0.18%)</title><rect x="269.6" y="1411.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (2 samples, 0.18%)</title><rect x="269.6" y="1395.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.6" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.18%)</title><rect x="269.6" y="1379.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$136/1429370458.apply$mcV$sp (2 samples, 0.18%)</title><rect x="269.6" y="1363.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (2 samples, 0.18%)</title><rect x="269.6" y="1347.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.18%)</title><rect x="269.6" y="1331.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (2 samples, 0.18%)</title><rect x="269.6" y="1315.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (2 samples, 0.18%)</title><rect x="269.6" y="1299.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.18%)</title><rect x="269.6" y="1283.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.18%)</title><rect x="269.6" y="1267.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.18%)</title><rect x="269.6" y="1251.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.6" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.09%)</title><rect x="270.6" y="1235.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (1 samples, 0.09%)</title><rect x="270.6" y="1219.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.copyAndInsertValue (1 samples, 0.09%)</title><rect x="270.6" y="1203.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.6" y="1214.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="270.6" y="1187.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.6" y="1198.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="270.6" y="1171.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.6" y="1182.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="270.6" y="1155.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="273.6" y="1166.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="270.6" y="1139.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.6" y="1150.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="270.6" y="1123.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.6" y="1134.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="270.6" y="1107.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.6" y="1118.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.09%)</title><rect x="270.6" y="1091.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.6" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (30 samples, 2.65%)</title><rect x="271.6" y="1443.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.6" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (1 samples, 0.09%)</title><rect x="271.6" y="1427.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (1 samples, 0.09%)</title><rect x="271.6" y="1411.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (1 samples, 0.09%)</title><rect x="271.6" y="1395.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (1 samples, 0.09%)</title><rect x="271.6" y="1379.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.6" y="1390.0"></text>
</g>
<g>
<title>scala/Tuple2._2 (1 samples, 0.09%)</title><rect x="271.6" y="1363.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.6" y="1374.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="271.6" y="1347.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.6" y="1358.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="271.6" y="1331.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.6" y="1342.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="271.6" y="1315.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="274.6" y="1326.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="271.6" y="1299.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.6" y="1310.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="271.6" y="1283.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.6" y="1294.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="271.6" y="1267.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.6" y="1278.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="271.6" y="1251.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="274.6" y="1262.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="271.6" y="1235.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.6" y="1246.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="271.6" y="1219.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.6" y="1230.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="271.6" y="1203.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.6" y="1214.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="271.6" y="1187.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.6" y="1198.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="271.6" y="1171.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.6" y="1182.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="271.6" y="1155.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.6" y="1166.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="271.6" y="1139.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.6" y="1150.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="271.6" y="1123.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.6" y="1134.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="271.6" y="1107.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="274.6" y="1118.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="271.6" y="1091.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.6" y="1102.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.09%)</title><rect x="271.6" y="1075.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.6" y="1086.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (1 samples, 0.09%)</title><rect x="271.6" y="1059.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.6" y="1070.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (1 samples, 0.09%)</title><rect x="271.6" y="1043.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.6" y="1054.0"></text>
</g>
<g>
<title>tcp_conn_request (1 samples, 0.09%)</title><rect x="271.6" y="1027.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="274.6" y="1038.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.09%)</title><rect x="271.6" y="1011.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.6" y="1022.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="271.6" y="995.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="271.6" y="979.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.6" y="990.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (9 samples, 0.80%)</title><rect x="272.7" y="1427.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (9 samples, 0.80%)</title><rect x="272.7" y="1411.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (6 samples, 0.53%)</title><rect x="272.7" y="1395.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.7" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (6 samples, 0.53%)</title><rect x="272.7" y="1379.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.44%)</title><rect x="272.7" y="1363.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (5 samples, 0.44%)</title><rect x="272.7" y="1347.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (5 samples, 0.44%)</title><rect x="272.7" y="1331.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (5 samples, 0.44%)</title><rect x="272.7" y="1315.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.7" y="1326.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (3 samples, 0.27%)</title><rect x="272.7" y="1299.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (3 samples, 0.27%)</title><rect x="272.7" y="1283.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (3 samples, 0.27%)</title><rect x="272.7" y="1267.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (3 samples, 0.27%)</title><rect x="272.7" y="1251.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.7" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (3 samples, 0.27%)</title><rect x="272.7" y="1235.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.7" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (3 samples, 0.27%)</title><rect x="272.7" y="1219.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.7" y="1230.0"></text>
</g>
<g>
<title>socket (3 samples, 0.27%)</title><rect x="272.7" y="1203.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="275.7" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="272.7" y="1187.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="272.7" y="1171.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.7" y="1182.0"></text>
</g>
<g>
<title>sys_socket (3 samples, 0.27%)</title><rect x="272.7" y="1155.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.7" y="1166.0"></text>
</g>
<g>
<title>__sock_create (3 samples, 0.27%)</title><rect x="272.7" y="1139.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.7" y="1150.0"></text>
</g>
<g>
<title>inet6_create (2 samples, 0.18%)</title><rect x="272.7" y="1123.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.7" y="1134.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.18%)</title><rect x="272.7" y="1107.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.7" y="1118.0"></text>
</g>
<g>
<title>sk_prot_alloc (2 samples, 0.18%)</title><rect x="272.7" y="1091.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.7" y="1102.0"></text>
</g>
<g>
<title>security_sk_alloc (2 samples, 0.18%)</title><rect x="272.7" y="1075.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.7" y="1086.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.09%)</title><rect x="273.7" y="1059.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="276.7" y="1070.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="273.7" y="1043.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.7" y="1054.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="273.7" y="1027.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="276.7" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="273.7" y="1011.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.7" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="273.7" y="995.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.7" y="1006.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="273.7" y="979.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.7" y="990.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="273.7" y="963.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.7" y="974.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="273.7" y="947.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.7" y="958.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="273.7" y="931.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.7" y="942.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="273.7" y="915.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.7" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="273.7" y="899.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="276.7" y="910.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="273.7" y="883.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.7" y="894.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="273.7" y="867.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="276.7" y="878.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="273.7" y="851.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.7" y="862.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.09%)</title><rect x="273.7" y="835.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.7" y="846.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.09%)</title><rect x="274.8" y="1123.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.8" y="1134.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.09%)</title><rect x="274.8" y="1107.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="277.8" y="1118.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.09%)</title><rect x="274.8" y="1091.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.8" y="1102.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.09%)</title><rect x="274.8" y="1075.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.8" y="1086.0"></text>
</g>
<g>
<title>security_inode_alloc (1 samples, 0.09%)</title><rect x="274.8" y="1059.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="277.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (2 samples, 0.18%)</title><rect x="275.8" y="1299.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (2 samples, 0.18%)</title><rect x="275.8" y="1283.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="275.8" y="1267.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="275.8" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="275.8" y="1235.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="275.8" y="1219.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.09%)</title><rect x="275.8" y="1203.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (1 samples, 0.09%)</title><rect x="276.9" y="1267.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.9" y="1278.0"></text>
</g>
<g>
<title>__fcntl (1 samples, 0.09%)</title><rect x="276.9" y="1251.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="279.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (1 samples, 0.09%)</title><rect x="277.9" y="1363.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.9" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (1 samples, 0.09%)</title><rect x="277.9" y="1347.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (1 samples, 0.09%)</title><rect x="277.9" y="1331.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (3 samples, 0.27%)</title><rect x="278.9" y="1395.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.9" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$$Lambda$481/1224196161.apply (3 samples, 0.27%)</title><rect x="278.9" y="1379.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.9" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.$anonfun$props$1 (3 samples, 0.27%)</title><rect x="278.9" y="1363.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.9" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.&lt;init&gt; (3 samples, 0.27%)</title><rect x="278.9" y="1347.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (2 samples, 0.18%)</title><rect x="280.0" y="1331.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.18%)</title><rect x="280.0" y="1315.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.0" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (2 samples, 0.18%)</title><rect x="280.0" y="1299.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (20 samples, 1.77%)</title><rect x="282.1" y="1427.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (20 samples, 1.77%)</title><rect x="282.1" y="1411.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (20 samples, 1.77%)</title><rect x="282.1" y="1395.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.1" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (20 samples, 1.77%)</title><rect x="282.1" y="1379.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.1" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (20 samples, 1.77%)</title><rect x="282.1" y="1363.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (19 samples, 1.68%)</title><rect x="282.1" y="1347.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (5 samples, 0.44%)</title><rect x="282.1" y="1331.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (3 samples, 0.27%)</title><rect x="282.1" y="1315.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (2 samples, 0.18%)</title><rect x="282.1" y="1299.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.1" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (2 samples, 0.18%)</title><rect x="282.1" y="1283.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="282.1" y="1267.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.18%)</title><rect x="282.1" y="1251.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.1" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.18%)</title><rect x="282.1" y="1235.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.1" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.18%)</title><rect x="282.1" y="1219.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.18%)</title><rect x="282.1" y="1203.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="282.1" y="1187.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.1" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="282.1" y="1171.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.1" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="282.1" y="1155.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.1" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="282.1" y="1139.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.1" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="282.1" y="1123.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="282.1" y="1107.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="282.1" y="1091.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.18%)</title><rect x="282.1" y="1075.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="282.1" y="1059.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="282.1" y="1043.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="282.1" y="1027.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.1" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="282.1" y="1011.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="285.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="282.1" y="995.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="282.1" y="979.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="285.1" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="282.1" y="963.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.1" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="282.1" y="947.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.1" y="958.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="282.1" y="931.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.1" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="282.1" y="915.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.1" y="926.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="283.1" y="963.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="286.1" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="283.1" y="947.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.1" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="283.1" y="931.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.1" y="942.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="283.1" y="915.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.1" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="283.1" y="899.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.1" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="283.1" y="883.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="286.1" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (1 samples, 0.09%)</title><rect x="284.2" y="1299.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (1 samples, 0.09%)</title><rect x="284.2" y="1283.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (1 samples, 0.09%)</title><rect x="284.2" y="1267.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (1 samples, 0.09%)</title><rect x="284.2" y="1251.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (1 samples, 0.09%)</title><rect x="284.2" y="1235.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onStart (1 samples, 0.09%)</title><rect x="284.2" y="1219.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.preStart (2 samples, 0.18%)</title><rect x="285.2" y="1315.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (2 samples, 0.18%)</title><rect x="287.3" y="1331.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (2 samples, 0.18%)</title><rect x="287.3" y="1315.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (1 samples, 0.09%)</title><rect x="287.3" y="1299.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.3" y="1310.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (1 samples, 0.09%)</title><rect x="287.3" y="1283.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.3" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (1 samples, 0.09%)</title><rect x="287.3" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.09%)</title><rect x="287.3" y="1251.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (1 samples, 0.09%)</title><rect x="288.3" y="1299.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (1 samples, 0.09%)</title><rect x="288.3" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.3" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.09%)</title><rect x="288.3" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.3" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.09%)</title><rect x="288.3" y="1251.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.3" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.09%)</title><rect x="288.3" y="1235.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.3" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.09%)</title><rect x="288.3" y="1219.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (1 samples, 0.09%)</title><rect x="288.3" y="1203.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (1 samples, 0.09%)</title><rect x="288.3" y="1187.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (1 samples, 0.09%)</title><rect x="288.3" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (1 samples, 0.09%)</title><rect x="288.3" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (1 samples, 0.09%)</title><rect x="288.3" y="1139.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.09%)</title><rect x="288.3" y="1123.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.3" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="288.3" y="1107.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.3" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="288.3" y="1091.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="291.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (12 samples, 1.06%)</title><rect x="289.4" y="1331.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="292.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (12 samples, 1.06%)</title><rect x="289.4" y="1315.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onPull (1 samples, 0.09%)</title><rect x="290.4" y="1299.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (8 samples, 0.71%)</title><rect x="291.4" y="1299.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (8 samples, 0.71%)</title><rect x="291.4" y="1283.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPull (1 samples, 0.09%)</title><rect x="292.5" y="1267.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (5 samples, 0.44%)</title><rect x="293.5" y="1267.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (1 samples, 0.09%)</title><rect x="293.5" y="1251.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (4 samples, 0.35%)</title><rect x="294.6" y="1251.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.6" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (4 samples, 0.35%)</title><rect x="294.6" y="1235.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.6" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (4 samples, 0.35%)</title><rect x="294.6" y="1219.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.6" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (4 samples, 0.35%)</title><rect x="294.6" y="1203.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (4 samples, 0.35%)</title><rect x="294.6" y="1187.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.6" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (4 samples, 0.35%)</title><rect x="294.6" y="1171.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (4 samples, 0.35%)</title><rect x="294.6" y="1155.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (4 samples, 0.35%)</title><rect x="294.6" y="1139.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (4 samples, 0.35%)</title><rect x="294.6" y="1123.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (4 samples, 0.35%)</title><rect x="294.6" y="1107.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (3 samples, 0.27%)</title><rect x="295.6" y="1091.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (3 samples, 0.27%)</title><rect x="295.6" y="1075.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (2 samples, 0.18%)</title><rect x="295.6" y="1059.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.6" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (2 samples, 0.18%)</title><rect x="295.6" y="1043.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.6" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.18%)</title><rect x="295.6" y="1027.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.6" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.18%)</title><rect x="295.6" y="1011.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.6" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.18%)</title><rect x="295.6" y="995.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.6" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (2 samples, 0.18%)</title><rect x="295.6" y="979.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.6" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.18%)</title><rect x="295.6" y="963.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.6" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.18%)</title><rect x="295.6" y="947.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.6" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (2 samples, 0.18%)</title><rect x="295.6" y="931.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.6" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (2 samples, 0.18%)</title><rect x="295.6" y="915.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.6" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="295.6" y="899.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.6" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="295.6" y="883.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.6" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="295.6" y="867.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.6" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="295.6" y="851.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="295.6" y="835.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="295.6" y="819.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="295.6" y="803.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="295.6" y="787.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="295.6" y="771.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="295.6" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.6" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="295.6" y="739.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="298.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="296.7" y="723.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="296.7" y="707.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.7" y="718.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="296.7" y="691.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.7" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="296.7" y="675.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="296.7" y="659.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="296.7" y="643.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="296.7" y="627.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="299.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="296.7" y="611.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.09%)</title><rect x="297.7" y="1059.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.09%)</title><rect x="297.7" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.7" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.onPush (1 samples, 0.09%)</title><rect x="298.7" y="1267.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1062/859635815.apply (1 samples, 0.09%)</title><rect x="298.7" y="1251.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$4 (1 samples, 0.09%)</title><rect x="298.7" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (1 samples, 0.09%)</title><rect x="299.8" y="1299.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SingleSource$$anon$6.onPull (1 samples, 0.09%)</title><rect x="299.8" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.completeStage (1 samples, 0.09%)</title><rect x="299.8" y="1267.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.09%)</title><rect x="299.8" y="1251.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (1 samples, 0.09%)</title><rect x="300.8" y="1299.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.8" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="301.9" y="1347.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="304.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (1 samples, 0.09%)</title><rect x="302.9" y="1443.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (1 samples, 0.09%)</title><rect x="302.9" y="1427.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (1 samples, 0.09%)</title><rect x="302.9" y="1411.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.09%)</title><rect x="302.9" y="1395.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.9" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.09%)</title><rect x="302.9" y="1379.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$582/644979273.apply$mcV$sp (1 samples, 0.09%)</title><rect x="302.9" y="1363.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$remWatcher$1 (1 samples, 0.09%)</title><rect x="302.9" y="1347.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (1 samples, 0.09%)</title><rect x="302.9" y="1331.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (1 samples, 0.09%)</title><rect x="302.9" y="1315.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (1 samples, 0.09%)</title><rect x="302.9" y="1299.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (1 samples, 0.09%)</title><rect x="302.9" y="1283.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (1 samples, 0.09%)</title><rect x="302.9" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (1 samples, 0.09%)</title><rect x="302.9" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (1 samples, 0.09%)</title><rect x="302.9" y="1235.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (4 samples, 0.35%)</title><rect x="304.0" y="1443.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (3 samples, 0.27%)</title><rect x="304.0" y="1427.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (3 samples, 0.27%)</title><rect x="304.0" y="1411.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.0" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (3 samples, 0.27%)</title><rect x="304.0" y="1395.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.0" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (3 samples, 0.27%)</title><rect x="304.0" y="1379.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (3 samples, 0.27%)</title><rect x="304.0" y="1363.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (3 samples, 0.27%)</title><rect x="304.0" y="1347.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.0" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (3 samples, 0.27%)</title><rect x="304.0" y="1331.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.0" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="305.0" y="1315.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="305.0" y="1299.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="305.0" y="1283.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.0" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="305.0" y="1267.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="305.0" y="1251.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="305.0" y="1235.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="305.0" y="1219.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="305.0" y="1203.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="305.0" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="305.0" y="1171.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="305.0" y="1155.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="305.0" y="1139.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="308.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="305.0" y="1123.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="305.0" y="1107.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.0" y="1118.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="305.0" y="1091.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="308.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="305.0" y="1075.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.0" y="1086.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="305.0" y="1059.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.0" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="305.0" y="1043.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.0" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="305.0" y="1027.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="308.0" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.18%)</title><rect x="305.0" y="1011.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="308.0" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (1 samples, 0.09%)</title><rect x="307.1" y="1427.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (1 samples, 0.09%)</title><rect x="307.1" y="1411.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (1 samples, 0.09%)</title><rect x="307.1" y="1395.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (1 samples, 0.09%)</title><rect x="307.1" y="1379.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.09%)</title><rect x="307.1" y="1363.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.09%)</title><rect x="307.1" y="1347.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.09%)</title><rect x="307.1" y="1331.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (11 samples, 0.97%)</title><rect x="308.1" y="1443.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (11 samples, 0.97%)</title><rect x="308.1" y="1427.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (11 samples, 0.97%)</title><rect x="308.1" y="1411.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (10 samples, 0.88%)</title><rect x="308.1" y="1395.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (3 samples, 0.27%)</title><rect x="308.1" y="1379.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.1" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (3 samples, 0.27%)</title><rect x="308.1" y="1363.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (3 samples, 0.27%)</title><rect x="308.1" y="1347.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (3 samples, 0.27%)</title><rect x="308.1" y="1331.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (2 samples, 0.18%)</title><rect x="309.2" y="1315.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (2 samples, 0.18%)</title><rect x="309.2" y="1299.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (2 samples, 0.18%)</title><rect x="309.2" y="1283.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (1 samples, 0.09%)</title><rect x="311.3" y="1379.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (1 samples, 0.09%)</title><rect x="311.3" y="1363.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.3" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (1 samples, 0.09%)</title><rect x="311.3" y="1347.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (1 samples, 0.09%)</title><rect x="311.3" y="1331.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (1 samples, 0.09%)</title><rect x="311.3" y="1315.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (1 samples, 0.09%)</title><rect x="311.3" y="1299.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (1 samples, 0.09%)</title><rect x="311.3" y="1283.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (1 samples, 0.09%)</title><rect x="311.3" y="1267.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="312.3" y="1379.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.18%)</title><rect x="312.3" y="1363.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.18%)</title><rect x="312.3" y="1347.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.18%)</title><rect x="312.3" y="1331.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.18%)</title><rect x="312.3" y="1315.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="312.3" y="1299.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="312.3" y="1283.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="312.3" y="1267.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="312.3" y="1251.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="312.3" y="1235.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="312.3" y="1219.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="312.3" y="1203.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="312.3" y="1187.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="312.3" y="1171.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="312.3" y="1155.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="312.3" y="1139.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.3" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="312.3" y="1123.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="315.3" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="312.3" y="1107.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.3" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="312.3" y="1091.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.3" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="312.3" y="1075.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="315.3" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="312.3" y="1059.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="315.3" y="1070.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="312.3" y="1043.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.3" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="312.3" y="1027.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.3" y="1038.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="313.3" y="1075.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="316.3" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="313.3" y="1059.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.3" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="313.3" y="1043.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="316.3" y="1054.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.09%)</title><rect x="313.3" y="1027.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="316.3" y="1038.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.09%)</title><rect x="313.3" y="1011.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (4 samples, 0.35%)</title><rect x="314.4" y="1379.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (4 samples, 0.35%)</title><rect x="314.4" y="1363.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (4 samples, 0.35%)</title><rect x="314.4" y="1347.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (4 samples, 0.35%)</title><rect x="314.4" y="1331.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (4 samples, 0.35%)</title><rect x="314.4" y="1315.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.35%)</title><rect x="314.4" y="1299.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="314.4" y="1283.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (4 samples, 0.35%)</title><rect x="314.4" y="1267.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.27%)</title><rect x="315.4" y="1251.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="315.4" y="1235.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.09%)</title><rect x="315.4" y="1219.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.4" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="315.4" y="1203.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.18%)</title><rect x="316.5" y="1235.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (1 samples, 0.09%)</title><rect x="317.5" y="1219.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (1 samples, 0.09%)</title><rect x="317.5" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (1 samples, 0.09%)</title><rect x="317.5" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (1 samples, 0.09%)</title><rect x="317.5" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (1 samples, 0.09%)</title><rect x="317.5" y="1155.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.09%)</title><rect x="317.5" y="1139.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.5" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="317.5" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.5" y="1134.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="317.5" y="1107.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="320.5" y="1118.0"></text>
</g>
<g>
<title>akka/util/Collections$EmptyImmutableSeq$.foreach (1 samples, 0.09%)</title><rect x="318.6" y="1395.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.6" y="1406.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.09%)</title><rect x="318.6" y="1379.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.09%)</title><rect x="318.6" y="1363.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.6" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="318.6" y="1347.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="321.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (8 samples, 0.71%)</title><rect x="319.6" y="1443.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (8 samples, 0.71%)</title><rect x="319.6" y="1427.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (8 samples, 0.71%)</title><rect x="319.6" y="1411.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (6 samples, 0.53%)</title><rect x="319.6" y="1395.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (6 samples, 0.53%)</title><rect x="319.6" y="1379.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (6 samples, 0.53%)</title><rect x="319.6" y="1363.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (5 samples, 0.44%)</title><rect x="319.6" y="1347.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.6" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (5 samples, 0.44%)</title><rect x="319.6" y="1331.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (5 samples, 0.44%)</title><rect x="319.6" y="1315.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.childrenRefs (2 samples, 0.18%)</title><rect x="319.6" y="1299.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.childrenRefs$ (2 samples, 0.18%)</title><rect x="319.6" y="1283.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (3 samples, 0.27%)</title><rect x="321.7" y="1299.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (3 samples, 0.27%)</title><rect x="321.7" y="1283.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.7" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (3 samples, 0.27%)</title><rect x="321.7" y="1267.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (3 samples, 0.27%)</title><rect x="321.7" y="1251.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.7" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (3 samples, 0.27%)</title><rect x="321.7" y="1235.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.7" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (3 samples, 0.27%)</title><rect x="321.7" y="1219.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (3 samples, 0.27%)</title><rect x="321.7" y="1203.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.7" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (3 samples, 0.27%)</title><rect x="321.7" y="1187.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.7" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.27%)</title><rect x="321.7" y="1171.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.27%)</title><rect x="321.7" y="1155.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.27%)</title><rect x="321.7" y="1139.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.18%)</title><rect x="321.7" y="1123.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.18%)</title><rect x="321.7" y="1107.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.18%)</title><rect x="321.7" y="1091.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.18%)</title><rect x="321.7" y="1075.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (1 samples, 0.09%)</title><rect x="321.7" y="1059.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.09%)</title><rect x="321.7" y="1043.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.09%)</title><rect x="321.7" y="1027.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.09%)</title><rect x="321.7" y="1011.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.09%)</title><rect x="321.7" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.09%)</title><rect x="322.7" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.09%)</title><rect x="322.7" y="1043.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.append (1 samples, 0.09%)</title><rect x="322.7" y="1027.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.append (1 samples, 0.09%)</title><rect x="322.7" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.append (1 samples, 0.09%)</title><rect x="322.7" y="995.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.append (1 samples, 0.09%)</title><rect x="322.7" y="979.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.09%)</title><rect x="323.8" y="1123.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.09%)</title><rect x="323.8" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (1 samples, 0.09%)</title><rect x="323.8" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (1 samples, 0.09%)</title><rect x="323.8" y="1075.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (1 samples, 0.09%)</title><rect x="323.8" y="1059.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.swapChildrenRefs (1 samples, 0.09%)</title><rect x="324.8" y="1347.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.8" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="324.8" y="1331.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.8" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="324.8" y="1315.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="327.8" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="324.8" y="1299.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="327.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (1 samples, 0.09%)</title><rect x="325.8" y="1395.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (1 samples, 0.09%)</title><rect x="325.8" y="1379.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (1 samples, 0.09%)</title><rect x="325.8" y="1363.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.8" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (1 samples, 0.09%)</title><rect x="325.8" y="1347.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.8" y="1358.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.09%)</title><rect x="325.8" y="1331.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.8" y="1342.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.09%)</title><rect x="325.8" y="1315.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.8" y="1326.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (1 samples, 0.09%)</title><rect x="325.8" y="1299.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.8" y="1310.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (1 samples, 0.09%)</title><rect x="325.8" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.09%)</title><rect x="325.8" y="1267.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.09%)</title><rect x="326.9" y="1395.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.9" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.09%)</title><rect x="326.9" y="1379.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$641/2061003883.apply$mcV$sp (1 samples, 0.09%)</title><rect x="326.9" y="1363.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (1 samples, 0.09%)</title><rect x="326.9" y="1347.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (1 samples, 0.09%)</title><rect x="326.9" y="1331.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (1 samples, 0.09%)</title><rect x="326.9" y="1315.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (1 samples, 0.09%)</title><rect x="326.9" y="1299.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map1.removed (1 samples, 0.09%)</title><rect x="326.9" y="1283.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map1.removed (1 samples, 0.09%)</title><rect x="326.9" y="1267.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="326.9" y="1251.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.9" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="326.9" y="1235.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.equals (1 samples, 0.09%)</title><rect x="326.9" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (2 samples, 0.18%)</title><rect x="327.9" y="1475.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.9" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (2 samples, 0.18%)</title><rect x="327.9" y="1459.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.9" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (2 samples, 0.18%)</title><rect x="327.9" y="1443.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.9" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (2 samples, 0.18%)</title><rect x="327.9" y="1427.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.9" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (2 samples, 0.18%)</title><rect x="327.9" y="1411.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.9" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Watch.next (1 samples, 0.09%)</title><rect x="327.9" y="1395.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.9" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="329.0" y="1395.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="332.0" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/EarliestFirstSystemMessageList$.tail$extension (2 samples, 0.18%)</title><rect x="330.0" y="1475.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.0" y="1486.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.18%)</title><rect x="330.0" y="1459.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="333.0" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (357 samples, 31.54%)</title><rect x="332.1" y="1491.0" width="372.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.1" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (342 samples, 30.21%)</title><rect x="333.1" y="1475.0" width="356.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.1" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (3 samples, 0.27%)</title><rect x="333.1" y="1459.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.1" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (3 samples, 0.27%)</title><rect x="333.1" y="1443.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (3 samples, 0.27%)</title><rect x="333.1" y="1427.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (3 samples, 0.27%)</title><rect x="333.1" y="1411.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.1" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (3 samples, 0.27%)</title><rect x="333.1" y="1395.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.1" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (3 samples, 0.27%)</title><rect x="333.1" y="1379.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (1 samples, 0.09%)</title><rect x="334.2" y="1363.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.09%)</title><rect x="334.2" y="1347.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (1 samples, 0.09%)</title><rect x="334.2" y="1331.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (1 samples, 0.09%)</title><rect x="334.2" y="1315.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.09%)</title><rect x="334.2" y="1299.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.09%)</title><rect x="334.2" y="1283.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/SchedulerException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="334.2" y="1267.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.2" y="1278.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="335.2" y="1363.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.2" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="335.2" y="1347.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.2" y="1358.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="335.2" y="1331.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.2" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="335.2" y="1315.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.2" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="335.2" y="1299.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.2" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="335.2" y="1283.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="338.2" y="1294.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="335.2" y="1267.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.2" y="1278.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="335.2" y="1251.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="338.2" y="1262.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="335.2" y="1235.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.2" y="1246.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="335.2" y="1219.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="338.2" y="1230.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="335.2" y="1203.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.2" y="1214.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="335.2" y="1187.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.2" y="1198.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="335.2" y="1171.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.2" y="1182.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="335.2" y="1155.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.2" y="1166.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="335.2" y="1139.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.2" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="335.2" y="1123.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.2" y="1134.0"></text>
</g>
<g>
<title>tcp_check_req (1 samples, 0.09%)</title><rect x="335.2" y="1107.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="338.2" y="1118.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (1 samples, 0.09%)</title><rect x="335.2" y="1091.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.2" y="1102.0"></text>
</g>
<g>
<title>tcp_initialize_rcv_mss (1 samples, 0.09%)</title><rect x="335.2" y="1075.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (339 samples, 29.95%)</title><rect x="336.3" y="1459.0" width="353.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.3" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (15 samples, 1.33%)</title><rect x="337.3" y="1443.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (15 samples, 1.33%)</title><rect x="337.3" y="1427.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (15 samples, 1.33%)</title><rect x="337.3" y="1411.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.3" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (15 samples, 1.33%)</title><rect x="337.3" y="1395.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.3" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (15 samples, 1.33%)</title><rect x="337.3" y="1379.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.3" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (15 samples, 1.33%)</title><rect x="337.3" y="1363.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.3" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (15 samples, 1.33%)</title><rect x="337.3" y="1347.0" width="15.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.3" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (15 samples, 1.33%)</title><rect x="337.3" y="1331.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.3" y="1342.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (15 samples, 1.33%)</title><rect x="337.3" y="1315.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (15 samples, 1.33%)</title><rect x="337.3" y="1299.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.3" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (15 samples, 1.33%)</title><rect x="337.3" y="1283.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.3" y="1294.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (15 samples, 1.33%)</title><rect x="337.3" y="1267.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (15 samples, 1.33%)</title><rect x="337.3" y="1251.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (1 samples, 0.09%)</title><rect x="337.3" y="1235.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.findLeftMostOrPopOnEmpty (1 samples, 0.09%)</title><rect x="337.3" y="1219.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (13 samples, 1.15%)</title><rect x="338.4" y="1235.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (13 samples, 1.15%)</title><rect x="338.4" y="1219.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.4" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (13 samples, 1.15%)</title><rect x="338.4" y="1203.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.4" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 1.15%)</title><rect x="338.4" y="1187.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.4" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (13 samples, 1.15%)</title><rect x="338.4" y="1171.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.4" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 1.06%)</title><rect x="338.4" y="1155.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (12 samples, 1.06%)</title><rect x="338.4" y="1139.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (11 samples, 0.97%)</title><rect x="338.4" y="1123.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.4" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (9 samples, 0.80%)</title><rect x="338.4" y="1107.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.4" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (8 samples, 0.71%)</title><rect x="338.4" y="1091.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.4" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.62%)</title><rect x="338.4" y="1075.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.4" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.53%)</title><rect x="338.4" y="1059.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (1 samples, 0.09%)</title><rect x="338.4" y="1043.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="339.4" y="1043.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.4" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="339.4" y="1027.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="339.4" y="1011.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.4" y="1022.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="340.4" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.4" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="340.4" y="995.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.4" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="340.4" y="979.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.4" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="340.4" y="963.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.4" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="340.4" y="947.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.4" y="958.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="340.4" y="931.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.4" y="942.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$875/2027701910.apply (1 samples, 0.09%)</title><rect x="340.4" y="915.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.4" y="926.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (3 samples, 0.27%)</title><rect x="341.5" y="1043.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.5" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (3 samples, 0.27%)</title><rect x="341.5" y="1027.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.5" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (3 samples, 0.27%)</title><rect x="341.5" y="1011.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.5" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (3 samples, 0.27%)</title><rect x="341.5" y="995.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.5" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (3 samples, 0.27%)</title><rect x="341.5" y="979.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.5" y="990.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (3 samples, 0.27%)</title><rect x="341.5" y="963.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.5" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$875/2027701910.apply (3 samples, 0.27%)</title><rect x="341.5" y="947.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.5" y="958.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1$adapted (3 samples, 0.27%)</title><rect x="341.5" y="931.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.5" y="942.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1 (3 samples, 0.27%)</title><rect x="341.5" y="915.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.5" y="926.0"></text>
</g>
<g>
<title>scala/Some.equals (3 samples, 0.27%)</title><rect x="341.5" y="899.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.5" y="910.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.27%)</title><rect x="341.5" y="883.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.5" y="894.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.27%)</title><rect x="341.5" y="867.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.5" y="878.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (2 samples, 0.18%)</title><rect x="342.5" y="851.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.5" y="862.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="344.6" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.6" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="344.6" y="1043.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.6" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="344.6" y="1027.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.6" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="344.6" y="1011.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.6" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="344.6" y="995.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.6" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="344.6" y="979.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.6" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="344.6" y="963.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="347.6" y="974.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="345.7" y="1075.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.7" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="345.7" y="1059.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.7" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="345.7" y="1043.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.7" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="345.7" y="1027.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="345.7" y="1011.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="1022.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="345.7" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.7" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$875/2027701910.apply (1 samples, 0.09%)</title><rect x="345.7" y="979.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.7" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1$adapted (1 samples, 0.09%)</title><rect x="345.7" y="963.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.7" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1 (1 samples, 0.09%)</title><rect x="345.7" y="947.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.7" y="958.0"></text>
</g>
<g>
<title>scala/Some.equals (1 samples, 0.09%)</title><rect x="345.7" y="931.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.7" y="942.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="345.7" y="915.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.7" y="926.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="345.7" y="899.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.7" y="910.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.09%)</title><rect x="345.7" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.7" y="894.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="346.7" y="1091.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.7" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="346.7" y="1075.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.7" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="346.7" y="1059.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.7" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="346.7" y="1043.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.7" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="346.7" y="1027.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.7" y="1038.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="346.7" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.7" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$875/2027701910.apply (1 samples, 0.09%)</title><rect x="346.7" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.7" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1$adapted (1 samples, 0.09%)</title><rect x="346.7" y="979.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.7" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$addressOrdering$1 (1 samples, 0.09%)</title><rect x="346.7" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.7" y="974.0"></text>
</g>
<g>
<title>scala/Some.equals (1 samples, 0.09%)</title><rect x="346.7" y="947.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.7" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="346.7" y="931.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.7" y="942.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="346.7" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.7" y="926.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (2 samples, 0.18%)</title><rect x="347.7" y="1107.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.7" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="347.7" y="1091.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.7" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="347.7" y="1075.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.7" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="347.7" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.7" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="347.7" y="1043.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (1 samples, 0.09%)</title><rect x="348.8" y="1091.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.8" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="348.8" y="1075.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="351.8" y="1086.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="349.8" y="1123.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.8" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="349.8" y="1107.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.8" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="349.8" y="1091.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.8" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="349.8" y="1075.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.8" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="349.8" y="1059.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="1070.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="349.8" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.8" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="349.8" y="1027.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="352.8" y="1038.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="350.9" y="1155.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.9" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$877/842422776.apply (1 samples, 0.09%)</title><rect x="350.9" y="1139.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.9" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (1 samples, 0.09%)</title><rect x="350.9" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.9" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (1 samples, 0.09%)</title><rect x="350.9" y="1107.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.9" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (1 samples, 0.09%)</title><rect x="350.9" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.9" y="1102.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (1 samples, 0.09%)</title><rect x="350.9" y="1075.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.9" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="351.9" y="1235.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.9" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="351.9" y="1219.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="354.9" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="351.9" y="1203.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.9" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="351.9" y="1187.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.9" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="351.9" y="1171.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.9" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="351.9" y="1155.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="354.9" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (1 samples, 0.09%)</title><rect x="353.0" y="1443.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.0" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.09%)</title><rect x="353.0" y="1427.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.0" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.09%)</title><rect x="353.0" y="1411.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.0" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (1 samples, 0.09%)</title><rect x="353.0" y="1395.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.0" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$148/1176424777.&lt;init&gt; (1 samples, 0.09%)</title><rect x="353.0" y="1379.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.0" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (43 samples, 3.80%)</title><rect x="354.0" y="1443.0" width="44.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.0" y="1454.0">akka..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (43 samples, 3.80%)</title><rect x="354.0" y="1427.0" width="44.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.0" y="1438.0">akka..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (43 samples, 3.80%)</title><rect x="354.0" y="1411.0" width="44.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.0" y="1422.0">akka..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (43 samples, 3.80%)</title><rect x="354.0" y="1395.0" width="44.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.0" y="1406.0">akka..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (2 samples, 0.18%)</title><rect x="354.0" y="1379.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.0" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (1 samples, 0.09%)</title><rect x="355.0" y="1363.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.0" y="1374.0"></text>
</g>
<g>
<title>scala/concurrent/Promise$.apply (1 samples, 0.09%)</title><rect x="355.0" y="1347.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.0" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.&lt;init&gt; (1 samples, 0.09%)</title><rect x="355.0" y="1331.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.0" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.&lt;init&gt; (1 samples, 0.09%)</title><rect x="355.0" y="1315.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.&lt;init&gt; (1 samples, 0.09%)</title><rect x="355.0" y="1299.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (36 samples, 3.18%)</title><rect x="356.1" y="1379.0" width="37.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.1" y="1390.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (34 samples, 3.00%)</title><rect x="356.1" y="1363.0" width="35.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.1" y="1374.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (27 samples, 2.39%)</title><rect x="356.1" y="1347.0" width="28.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.1" y="1358.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (27 samples, 2.39%)</title><rect x="356.1" y="1331.0" width="28.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.1" y="1342.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (5 samples, 0.44%)</title><rect x="356.1" y="1315.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.1" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (5 samples, 0.44%)</title><rect x="356.1" y="1299.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (5 samples, 0.44%)</title><rect x="356.1" y="1283.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (4 samples, 0.35%)</title><rect x="356.1" y="1267.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (3 samples, 0.27%)</title><rect x="356.1" y="1251.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (3 samples, 0.27%)</title><rect x="356.1" y="1235.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (3 samples, 0.27%)</title><rect x="356.1" y="1219.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.1" y="1230.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.18%)</title><rect x="357.1" y="1203.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="360.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.mapError (1 samples, 0.09%)</title><rect x="359.2" y="1251.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError$ (1 samples, 0.09%)</title><rect x="359.2" y="1235.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError (1 samples, 0.09%)</title><rect x="359.2" y="1219.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError.&lt;init&gt; (1 samples, 0.09%)</title><rect x="359.2" y="1203.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SimpleLinearGraphStage.&lt;init&gt; (1 samples, 0.09%)</title><rect x="359.2" y="1187.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="359.2" y="1171.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="359.2" y="1155.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.09%)</title><rect x="359.2" y="1139.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.2" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="359.2" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.09%)</title><rect x="360.2" y="1267.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.09%)</title><rect x="360.2" y="1251.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="360.2" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="360.2" y="1219.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.outPort (1 samples, 0.09%)</title><rect x="360.2" y="1203.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (20 samples, 1.77%)</title><rect x="361.3" y="1315.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.3" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (20 samples, 1.77%)</title><rect x="361.3" y="1299.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (20 samples, 1.77%)</title><rect x="361.3" y="1283.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (20 samples, 1.77%)</title><rect x="361.3" y="1267.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (20 samples, 1.77%)</title><rect x="361.3" y="1251.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$410/951873260.apply (19 samples, 1.68%)</title><rect x="361.3" y="1235.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (19 samples, 1.68%)</title><rect x="361.3" y="1219.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (11 samples, 0.97%)</title><rect x="362.3" y="1203.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (11 samples, 0.97%)</title><rect x="362.3" y="1187.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (8 samples, 0.71%)</title><rect x="362.3" y="1171.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (6 samples, 0.53%)</title><rect x="362.3" y="1155.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (3 samples, 0.27%)</title><rect x="362.3" y="1139.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (1 samples, 0.09%)</title><rect x="363.4" y="1123.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.4" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="363.4" y="1107.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="366.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.09%)</title><rect x="364.4" y="1123.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.09%)</title><rect x="364.4" y="1107.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.09%)</title><rect x="364.4" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1921698150.apply (1 samples, 0.09%)</title><rect x="364.4" y="1075.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.09%)</title><rect x="364.4" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.apply (1 samples, 0.09%)</title><rect x="364.4" y="1043.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.4" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.09%)</title><rect x="364.4" y="1027.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.4" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.09%)</title><rect x="364.4" y="1011.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.4" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.09%)</title><rect x="364.4" y="995.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14$$Lambda$432/206060352.apply (1 samples, 0.09%)</title><rect x="364.4" y="979.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.$anonfun$apply$14 (1 samples, 0.09%)</title><rect x="364.4" y="963.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.accept (1 samples, 0.09%)</title><rect x="364.4" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept$ (1 samples, 0.09%)</title><rect x="364.4" y="931.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.4" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept (1 samples, 0.09%)</title><rect x="364.4" y="915.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.4" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insert (1 samples, 0.09%)</title><rect x="365.5" y="1139.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.unshareIfRequired (1 samples, 0.09%)</title><rect x="365.5" y="1123.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.09%)</title><rect x="366.5" y="1139.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.09%)</title><rect x="366.5" y="1123.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.09%)</title><rect x="366.5" y="1107.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.5" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="367.5" y="1139.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="370.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.09%)</title><rect x="368.6" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (1 samples, 0.09%)</title><rect x="368.6" y="1139.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (1 samples, 0.09%)</title><rect x="368.6" y="1123.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1921698150.apply (1 samples, 0.09%)</title><rect x="368.6" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (1 samples, 0.09%)</title><rect x="368.6" y="1091.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29.apply (1 samples, 0.09%)</title><rect x="368.6" y="1075.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.6" y="1086.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.09%)</title><rect x="368.6" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.6" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.09%)</title><rect x="368.6" y="1043.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.6" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.09%)</title><rect x="368.6" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29$$Lambda$435/974007034.apply (1 samples, 0.09%)</title><rect x="368.6" y="1011.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$29.$anonfun$apply$29 (1 samples, 0.09%)</title><rect x="368.6" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.expect (1 samples, 0.09%)</title><rect x="368.6" y="979.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.expect$ (1 samples, 0.09%)</title><rect x="368.6" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.expect (1 samples, 0.09%)</title><rect x="368.6" y="947.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.6" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__matchIgnoreCaseString (1 samples, 0.09%)</title><rect x="368.6" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.6" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.apply (1 samples, 0.09%)</title><rect x="369.6" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.apply$ (1 samples, 0.09%)</title><rect x="369.6" y="1139.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/LinearSeqOps.apply (1 samples, 0.09%)</title><rect x="369.6" y="1123.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (2 samples, 0.18%)</title><rect x="370.7" y="1171.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (2 samples, 0.18%)</title><rect x="370.7" y="1155.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (2 samples, 0.18%)</title><rect x="370.7" y="1139.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (2 samples, 0.18%)</title><rect x="370.7" y="1123.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (2 samples, 0.18%)</title><rect x="370.7" y="1107.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (2 samples, 0.18%)</title><rect x="370.7" y="1091.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.from (2 samples, 0.18%)</title><rect x="370.7" y="1075.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.18%)</title><rect x="370.7" y="1059.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.18%)</title><rect x="370.7" y="1043.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (2 samples, 0.18%)</title><rect x="370.7" y="1027.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (1 samples, 0.09%)</title><rect x="370.7" y="1011.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (1 samples, 0.09%)</title><rect x="370.7" y="995.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (1 samples, 0.09%)</title><rect x="370.7" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (1 samples, 0.09%)</title><rect x="370.7" y="963.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$$$Lambda$421/796555069.apply (1 samples, 0.09%)</title><rect x="370.7" y="947.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.$anonfun$prime$2 (1 samples, 0.09%)</title><rect x="370.7" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.7" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.&lt;init&gt; (1 samples, 0.09%)</title><rect x="370.7" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.lookupParser (1 samples, 0.09%)</title><rect x="370.7" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$62.lookup (1 samples, 0.09%)</title><rect x="370.7" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.7" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.09%)</title><rect x="370.7" y="867.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.7" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.advanceToNextBlockIfNecessary (1 samples, 0.09%)</title><rect x="371.7" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable$ (1 samples, 0.09%)</title><rect x="371.7" y="995.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStartWritable (1 samples, 0.09%)</title><rect x="371.7" y="979.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.display1_$eq (1 samples, 0.09%)</title><rect x="371.7" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (1 samples, 0.09%)</title><rect x="372.8" y="1171.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (1 samples, 0.09%)</title><rect x="372.8" y="1155.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (1 samples, 0.09%)</title><rect x="372.8" y="1139.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (1 samples, 0.09%)</title><rect x="372.8" y="1123.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (1 samples, 0.09%)</title><rect x="372.8" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (1 samples, 0.09%)</title><rect x="372.8" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (1 samples, 0.09%)</title><rect x="372.8" y="1075.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (1 samples, 0.09%)</title><rect x="372.8" y="1059.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (1 samples, 0.09%)</title><rect x="372.8" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.8" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.09%)</title><rect x="372.8" y="1027.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.8" y="1038.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.09%)</title><rect x="372.8" y="1011.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.8" y="1022.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (1 samples, 0.09%)</title><rect x="372.8" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (4 samples, 0.35%)</title><rect x="373.8" y="1203.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (1 samples, 0.09%)</title><rect x="373.8" y="1187.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="1198.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (1 samples, 0.09%)</title><rect x="373.8" y="1171.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/FanInShape.deepCopy (1 samples, 0.09%)</title><rect x="373.8" y="1155.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.map (1 samples, 0.09%)</title><rect x="373.8" y="1139.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="1150.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (1 samples, 0.09%)</title><rect x="373.8" y="1123.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.8" y="1134.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map (1 samples, 0.09%)</title><rect x="373.8" y="1107.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.8" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.next (1 samples, 0.09%)</title><rect x="373.8" y="1091.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.8" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.advanceToNextBlockIfNecessary (1 samples, 0.09%)</title><rect x="373.8" y="1075.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.8" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.gotoNextBlockStart$ (1 samples, 0.09%)</title><rect x="373.8" y="1059.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.8" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.18%)</title><rect x="374.8" y="1187.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.8" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="374.8" y="1171.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="377.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="375.9" y="1171.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="375.9" y="1155.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.9" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="375.9" y="1139.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/InPort.hashCode (1 samples, 0.09%)</title><rect x="375.9" y="1123.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.09%)</title><rect x="375.9" y="1107.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.9" y="1118.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.09%)</title><rect x="375.9" y="1091.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="378.9" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.09%)</title><rect x="375.9" y="1075.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="378.9" y="1086.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.09%)</title><rect x="375.9" y="1059.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="378.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.09%)</title><rect x="376.9" y="1187.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.09%)</title><rect x="376.9" y="1171.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.09%)</title><rect x="376.9" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Shape$.hasOnePort (1 samples, 0.09%)</title><rect x="376.9" y="1139.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.09%)</title><rect x="376.9" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (1 samples, 0.09%)</title><rect x="376.9" y="1107.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty (1 samples, 0.09%)</title><rect x="376.9" y="1091.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.isEmpty (1 samples, 0.09%)</title><rect x="376.9" y="1075.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.09%)</title><rect x="376.9" y="1059.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.09%)</title><rect x="376.9" y="1043.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.lengthCompare (1 samples, 0.09%)</title><rect x="376.9" y="1027.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.09%)</title><rect x="376.9" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.09%)</title><rect x="376.9" y="995.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (2 samples, 0.18%)</title><rect x="378.0" y="1203.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (2 samples, 0.18%)</title><rect x="378.0" y="1187.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (2 samples, 0.18%)</title><rect x="378.0" y="1171.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (1 samples, 0.09%)</title><rect x="378.0" y="1155.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (1 samples, 0.09%)</title><rect x="378.0" y="1139.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="378.0" y="1123.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="378.0" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.0" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="378.0" y="1091.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/InPort.hashCode (1 samples, 0.09%)</title><rect x="378.0" y="1075.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.09%)</title><rect x="378.0" y="1059.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.0" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="378.0" y="1043.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="381.0" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="378.0" y="1027.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="381.0" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="378.0" y="1011.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.0" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="378.0" y="995.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.0" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (1 samples, 0.09%)</title><rect x="379.0" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (1 samples, 0.09%)</title><rect x="379.0" y="1139.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (1 samples, 0.09%)</title><rect x="379.0" y="1123.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (1 samples, 0.09%)</title><rect x="379.0" y="1107.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.0" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (1 samples, 0.09%)</title><rect x="379.0" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.0" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (1 samples, 0.09%)</title><rect x="379.0" y="1075.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (1 samples, 0.09%)</title><rect x="379.0" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/InPort.hashCode (1 samples, 0.09%)</title><rect x="379.0" y="1043.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="380.1" y="1203.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="380.1" y="1187.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$417/1868879535.get$Lambda (1 samples, 0.09%)</title><rect x="380.1" y="1171.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.createGraph (1 samples, 0.09%)</title><rect x="381.1" y="1235.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (1 samples, 0.09%)</title><rect x="381.1" y="1219.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.joinMat (2 samples, 0.18%)</title><rect x="382.1" y="1315.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/BidiShape.deepCopy (1 samples, 0.09%)</title><rect x="382.1" y="1299.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Inlet.carbonCopy (1 samples, 0.09%)</title><rect x="382.1" y="1283.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Inlet$.apply (1 samples, 0.09%)</title><rect x="382.1" y="1267.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/Inlet.&lt;init&gt; (1 samples, 0.09%)</title><rect x="382.1" y="1251.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/InPort.&lt;init&gt; (1 samples, 0.09%)</title><rect x="382.1" y="1235.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (1 samples, 0.09%)</title><rect x="383.2" y="1299.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (1 samples, 0.09%)</title><rect x="383.2" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.2" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map1.updated (1 samples, 0.09%)</title><rect x="383.2" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map1.updated (1 samples, 0.09%)</title><rect x="383.2" y="1251.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.2" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="383.2" y="1235.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.2" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="383.2" y="1219.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (7 samples, 0.62%)</title><rect x="384.2" y="1347.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.2" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.62%)</title><rect x="384.2" y="1331.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.2" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.62%)</title><rect x="384.2" y="1315.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.2" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (7 samples, 0.62%)</title><rect x="384.2" y="1299.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (7 samples, 0.62%)</title><rect x="384.2" y="1283.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.2" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (6 samples, 0.53%)</title><rect x="384.2" y="1267.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.2" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (6 samples, 0.53%)</title><rect x="384.2" y="1251.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/BufferOverflowException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="384.2" y="1235.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="384.2" y="1219.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.09%)</title><rect x="384.2" y="1203.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.09%)</title><rect x="384.2" y="1187.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.09%)</title><rect x="384.2" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.09%)</title><rect x="384.2" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.2" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.09%)</title><rect x="384.2" y="1139.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="387.2" y="1150.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.09%)</title><rect x="384.2" y="1123.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="387.2" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.09%)</title><rect x="384.2" y="1107.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="387.2" y="1118.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.09%)</title><rect x="384.2" y="1091.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="387.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.44%)</title><rect x="385.3" y="1235.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="385.3" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.3" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="385.3" y="1203.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="388.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="386.3" y="1219.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (4 samples, 0.35%)</title><rect x="386.3" y="1203.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.3" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (4 samples, 0.35%)</title><rect x="386.3" y="1187.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (4 samples, 0.35%)</title><rect x="386.3" y="1171.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (4 samples, 0.35%)</title><rect x="386.3" y="1155.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (4 samples, 0.35%)</title><rect x="386.3" y="1139.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (4 samples, 0.35%)</title><rect x="386.3" y="1123.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (4 samples, 0.35%)</title><rect x="386.3" y="1107.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (4 samples, 0.35%)</title><rect x="386.3" y="1091.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.35%)</title><rect x="386.3" y="1075.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="386.3" y="1059.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (4 samples, 0.35%)</title><rect x="386.3" y="1043.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.3" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (4 samples, 0.35%)</title><rect x="386.3" y="1027.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (4 samples, 0.35%)</title><rect x="386.3" y="1011.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (4 samples, 0.35%)</title><rect x="386.3" y="995.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (4 samples, 0.35%)</title><rect x="386.3" y="979.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (4 samples, 0.35%)</title><rect x="386.3" y="963.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (4 samples, 0.35%)</title><rect x="386.3" y="947.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (4 samples, 0.35%)</title><rect x="386.3" y="931.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.35%)</title><rect x="386.3" y="915.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="386.3" y="899.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (4 samples, 0.35%)</title><rect x="386.3" y="883.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.3" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (4 samples, 0.35%)</title><rect x="386.3" y="867.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.3" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (4 samples, 0.35%)</title><rect x="386.3" y="851.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (4 samples, 0.35%)</title><rect x="386.3" y="835.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.3" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (4 samples, 0.35%)</title><rect x="386.3" y="819.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.3" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (4 samples, 0.35%)</title><rect x="386.3" y="803.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.3" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (4 samples, 0.35%)</title><rect x="386.3" y="787.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (4 samples, 0.35%)</title><rect x="386.3" y="771.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.35%)</title><rect x="386.3" y="755.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="386.3" y="739.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.3" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (4 samples, 0.35%)</title><rect x="386.3" y="723.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.3" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (4 samples, 0.35%)</title><rect x="386.3" y="707.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.3" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (4 samples, 0.35%)</title><rect x="386.3" y="691.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (4 samples, 0.35%)</title><rect x="386.3" y="675.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.3" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (4 samples, 0.35%)</title><rect x="386.3" y="659.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.3" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (4 samples, 0.35%)</title><rect x="386.3" y="643.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.3" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (4 samples, 0.35%)</title><rect x="386.3" y="627.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.3" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (4 samples, 0.35%)</title><rect x="386.3" y="611.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.35%)</title><rect x="386.3" y="595.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.35%)</title><rect x="386.3" y="579.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.3" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.toString (2 samples, 0.18%)</title><rect x="386.3" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.3" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.18%)</title><rect x="386.3" y="547.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.3" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.18%)</title><rect x="386.3" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.3" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.18%)</title><rect x="386.3" y="515.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.18%)</title><rect x="386.3" y="499.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.3" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.18%)</title><rect x="386.3" y="483.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.3" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.18%)</title><rect x="386.3" y="467.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.3" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.18%)</title><rect x="386.3" y="451.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.18%)</title><rect x="386.3" y="435.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.18%)</title><rect x="386.3" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.09%)</title><rect x="386.3" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="386.3" y="387.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="386.3" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.09%)</title><rect x="386.3" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.getCoder (1 samples, 0.09%)</title><rect x="386.3" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.toString (1 samples, 0.09%)</title><rect x="387.3" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="414.0"></text>
</g>
<g>
<title>scala/collection/Map.toString$ (1 samples, 0.09%)</title><rect x="387.3" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.3" y="398.0"></text>
</g>
<g>
<title>scala/collection/Map.toString (1 samples, 0.09%)</title><rect x="387.3" y="371.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (1 samples, 0.09%)</title><rect x="387.3" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (1 samples, 0.09%)</title><rect x="387.3" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.3" y="350.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.mkString (1 samples, 0.09%)</title><rect x="387.3" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.3" y="334.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (1 samples, 0.09%)</title><rect x="387.3" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (1 samples, 0.09%)</title><rect x="387.3" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.addString (1 samples, 0.09%)</title><rect x="387.3" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.3" y="286.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString$ (1 samples, 0.09%)</title><rect x="387.3" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="270.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString (1 samples, 0.09%)</title><rect x="387.3" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="254.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (1 samples, 0.09%)</title><rect x="387.3" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.3" y="238.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (1 samples, 0.09%)</title><rect x="387.3" y="211.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.3" y="222.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (1 samples, 0.09%)</title><rect x="387.3" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.3" y="206.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (1 samples, 0.09%)</title><rect x="387.3" y="179.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.3" y="190.0"></text>
</g>
<g>
<title>scala/Some.toString (2 samples, 0.18%)</title><rect x="388.4" y="563.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.4" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (2 samples, 0.18%)</title><rect x="388.4" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.4" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (2 samples, 0.18%)</title><rect x="388.4" y="531.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (2 samples, 0.18%)</title><rect x="388.4" y="515.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.4" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (2 samples, 0.18%)</title><rect x="388.4" y="499.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.4" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (2 samples, 0.18%)</title><rect x="388.4" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.4" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (2 samples, 0.18%)</title><rect x="388.4" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.4" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (2 samples, 0.18%)</title><rect x="388.4" y="451.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.18%)</title><rect x="388.4" y="435.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.18%)</title><rect x="388.4" y="419.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.4" y="430.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader.toString (2 samples, 0.18%)</title><rect x="388.4" y="403.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.4" y="414.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString$ (2 samples, 0.18%)</title><rect x="388.4" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.4" y="398.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString (2 samples, 0.18%)</title><rect x="388.4" y="371.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.4" y="382.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (2 samples, 0.18%)</title><rect x="388.4" y="355.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.4" y="366.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (2 samples, 0.18%)</title><rect x="388.4" y="339.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.4" y="350.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (2 samples, 0.18%)</title><rect x="388.4" y="323.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.4" y="334.0"></text>
</g>
<g>
<title>akka/http/impl/util/StringRendering.$tilde$tilde (1 samples, 0.09%)</title><rect x="388.4" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.4" y="318.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.09%)</title><rect x="388.4" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.4" y="302.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.09%)</title><rect x="388.4" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.4" y="286.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.09%)</title><rect x="388.4" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.4" y="270.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (1 samples, 0.09%)</title><rect x="388.4" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.4" y="254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="388.4" y="227.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="391.4" y="238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="388.4" y="211.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="391.4" y="222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="388.4" y="195.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="391.4" y="206.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (1 samples, 0.09%)</title><rect x="389.4" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.4" y="318.0"></text>
</g>
<g>
<title>akka/http/impl/util/StringRendering.$tilde$tilde (1 samples, 0.09%)</title><rect x="389.4" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.4" y="302.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (1 samples, 0.09%)</title><rect x="389.4" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.4" y="286.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (1 samples, 0.09%)</title><rect x="389.4" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.4" y="270.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.09%)</title><rect x="389.4" y="243.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.4" y="254.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (1 samples, 0.09%)</title><rect x="389.4" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.4" y="238.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (1 samples, 0.09%)</title><rect x="389.4" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.4" y="222.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.09%)</title><rect x="389.4" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.4" y="206.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.09%)</title><rect x="389.4" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.4" y="190.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.render (1 samples, 0.09%)</title><rect x="389.4" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.4" y="174.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="390.5" y="1267.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="390.5" y="1251.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage.createLogic (1 samples, 0.09%)</title><rect x="390.5" y="1235.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="390.5" y="1219.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.setHandlers (1 samples, 0.09%)</title><rect x="390.5" y="1203.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.setHandler (1 samples, 0.09%)</title><rect x="390.5" y="1187.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (1 samples, 0.09%)</title><rect x="391.5" y="1363.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (1 samples, 0.09%)</title><rect x="391.5" y="1347.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (1 samples, 0.09%)</title><rect x="391.5" y="1331.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="391.5" y="1315.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="391.5" y="1299.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.5" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1267.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1251.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.5" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1235.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.5" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1203.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.5" y="1214.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="391.5" y="1187.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.5" y="1198.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="391.5" y="1171.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.5" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1155.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1139.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.5" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1123.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1107.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.5" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1091.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.5" y="1102.0"></text>
</g>
<g>
<title>scala/Some.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1075.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.5" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="391.5" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="391.5" y="1043.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="1011.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.5" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.09%)</title><rect x="391.5" y="995.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.5" y="1006.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="391.5" y="979.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.5" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="391.5" y="963.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.5" y="974.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="947.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.5" y="958.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="931.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="942.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode$ (1 samples, 0.09%)</title><rect x="391.5" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.5" y="926.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="899.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.5" y="910.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.seqHash (1 samples, 0.09%)</title><rect x="391.5" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.5" y="894.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.listHash (1 samples, 0.09%)</title><rect x="391.5" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.5" y="878.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="391.5" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.5" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.5" y="846.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.09%)</title><rect x="391.5" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.5" y="830.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="391.5" y="803.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.5" y="814.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="391.5" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.5" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.productElement (1 samples, 0.09%)</title><rect x="391.5" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.09%)</title><rect x="391.5" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.5" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (1 samples, 0.09%)</title><rect x="392.6" y="1363.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.6" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="392.6" y="1347.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1331.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.6" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1315.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="392.6" y="1299.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1283.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.6" y="1294.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1267.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.6" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="392.6" y="1251.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="1262.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="392.6" y="1235.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="392.6" y="1219.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1203.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.6" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="392.6" y="1187.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1171.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.6" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="392.6" y="1155.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.6" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1139.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.6" y="1150.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode$ (1 samples, 0.09%)</title><rect x="392.6" y="1123.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.6" y="1134.0"></text>
</g>
<g>
<title>scala/collection/Seq.hashCode (1 samples, 0.09%)</title><rect x="392.6" y="1107.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.6" y="1118.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.seqHash (1 samples, 0.09%)</title><rect x="392.6" y="1091.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.6" y="1102.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.listHash (1 samples, 0.09%)</title><rect x="392.6" y="1075.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (5 samples, 0.44%)</title><rect x="393.6" y="1379.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.6" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (3 samples, 0.27%)</title><rect x="393.6" y="1363.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.6" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (3 samples, 0.27%)</title><rect x="393.6" y="1347.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (2 samples, 0.18%)</title><rect x="393.6" y="1331.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.09%)</title><rect x="393.6" y="1315.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="393.6" y="1299.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.6" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="393.6" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.equals (1 samples, 0.09%)</title><rect x="393.6" y="1267.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.equals (1 samples, 0.09%)</title><rect x="393.6" y="1251.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="393.6" y="1235.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.6" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="394.6" y="1315.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.6" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="394.6" y="1299.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.equals (1 samples, 0.09%)</title><rect x="394.6" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.equals (1 samples, 0.09%)</title><rect x="394.6" y="1267.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="394.6" y="1251.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.6" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="395.7" y="1331.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.7" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="395.7" y="1315.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.equals (1 samples, 0.09%)</title><rect x="395.7" y="1299.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.7" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.equals (1 samples, 0.09%)</title><rect x="395.7" y="1283.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.equals (1 samples, 0.09%)</title><rect x="395.7" y="1267.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.7" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.18%)</title><rect x="396.7" y="1363.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.7" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1347.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.7" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1331.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.7" y="1342.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.18%)</title><rect x="396.7" y="1315.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.7" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1299.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.7" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1283.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.7" y="1294.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.18%)</title><rect x="396.7" y="1267.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.7" y="1278.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.18%)</title><rect x="396.7" y="1251.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.7" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.18%)</title><rect x="396.7" y="1235.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1219.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.18%)</title><rect x="396.7" y="1203.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (2 samples, 0.18%)</title><rect x="396.7" y="1187.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.7" y="1198.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.18%)</title><rect x="396.7" y="1171.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.7" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (1 samples, 0.09%)</title><rect x="396.7" y="1155.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.7" y="1166.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="396.7" y="1139.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.hashCode (1 samples, 0.09%)</title><rect x="396.7" y="1123.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.7" y="1134.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.unorderedHash (1 samples, 0.09%)</title><rect x="396.7" y="1107.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.foreach (1 samples, 0.09%)</title><rect x="396.7" y="1091.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach$ (1 samples, 0.09%)</title><rect x="396.7" y="1075.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.foreach (1 samples, 0.09%)</title><rect x="396.7" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$$Lambda$1098/2067828724.apply (1 samples, 0.09%)</title><rect x="396.7" y="1043.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.7" y="1054.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1$adapted (1 samples, 0.09%)</title><rect x="396.7" y="1027.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.7" y="1038.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.$anonfun$unorderedHash$1 (1 samples, 0.09%)</title><rect x="396.7" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="396.7" y="995.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapKeyValueTupleHashIterator.hashCode (1 samples, 0.09%)</title><rect x="396.7" y="979.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="990.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="396.7" y="963.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.7" y="974.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="396.7" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.7" y="958.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="396.7" y="931.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.7" y="942.0"></text>
</g>
<g>
<title>scala/Some.hashCode (1 samples, 0.09%)</title><rect x="397.8" y="1155.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.8" y="1166.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="397.8" y="1139.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.8" y="1150.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="397.8" y="1123.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.8" y="1134.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="397.8" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.hashCode (1 samples, 0.09%)</title><rect x="397.8" y="1091.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.8" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (1 samples, 0.09%)</title><rect x="397.8" y="1075.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.8" y="1086.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="397.8" y="1059.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.8" y="1070.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="397.8" y="1043.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.8" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="397.8" y="1027.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.8" y="1038.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (13 samples, 1.15%)</title><rect x="398.8" y="1443.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (13 samples, 1.15%)</title><rect x="398.8" y="1427.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (13 samples, 1.15%)</title><rect x="398.8" y="1411.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (13 samples, 1.15%)</title><rect x="398.8" y="1395.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.8" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (13 samples, 1.15%)</title><rect x="398.8" y="1379.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (9 samples, 0.80%)</title><rect x="398.8" y="1363.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (9 samples, 0.80%)</title><rect x="398.8" y="1347.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (9 samples, 0.80%)</title><rect x="398.8" y="1331.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (9 samples, 0.80%)</title><rect x="398.8" y="1315.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (1 samples, 0.09%)</title><rect x="398.8" y="1299.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (1 samples, 0.09%)</title><rect x="398.8" y="1283.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (1 samples, 0.09%)</title><rect x="398.8" y="1267.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (1 samples, 0.09%)</title><rect x="398.8" y="1251.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (1 samples, 0.09%)</title><rect x="398.8" y="1235.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (1 samples, 0.09%)</title><rect x="398.8" y="1219.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="398.8" y="1203.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="398.8" y="1187.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.8" y="1198.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (1 samples, 0.09%)</title><rect x="398.8" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (2 samples, 0.18%)</title><rect x="399.9" y="1299.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (2 samples, 0.18%)</title><rect x="399.9" y="1283.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (2 samples, 0.18%)</title><rect x="399.9" y="1267.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (2 samples, 0.18%)</title><rect x="399.9" y="1251.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.9" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (2 samples, 0.18%)</title><rect x="399.9" y="1235.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.9" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="399.9" y="1219.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="399.9" y="1203.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="399.9" y="1187.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="399.9" y="1171.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="399.9" y="1155.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="399.9" y="1139.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="399.9" y="1123.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="399.9" y="1107.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="399.9" y="1091.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="399.9" y="1075.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="399.9" y="1059.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.9" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="399.9" y="1043.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="402.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="399.9" y="1027.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="399.9" y="1011.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.9" y="1022.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="399.9" y="995.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.9" y="1006.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="399.9" y="979.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="402.9" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="399.9" y="963.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.9" y="974.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="399.9" y="947.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.9" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="399.9" y="931.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.9" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="399.9" y="915.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="402.9" y="926.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.09%)</title><rect x="400.9" y="963.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.9" y="974.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (6 samples, 0.53%)</title><rect x="401.9" y="1299.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (6 samples, 0.53%)</title><rect x="401.9" y="1283.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (2 samples, 0.18%)</title><rect x="401.9" y="1267.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (2 samples, 0.18%)</title><rect x="401.9" y="1251.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (2 samples, 0.18%)</title><rect x="401.9" y="1235.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (2 samples, 0.18%)</title><rect x="401.9" y="1219.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.09%)</title><rect x="401.9" y="1203.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.09%)</title><rect x="401.9" y="1187.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.09%)</title><rect x="401.9" y="1171.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (1 samples, 0.09%)</title><rect x="401.9" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.createMailbox (1 samples, 0.09%)</title><rect x="403.0" y="1203.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="403.0" y="1187.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox.create (1 samples, 0.09%)</title><rect x="403.0" y="1171.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="403.0" y="1155.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="403.0" y="1139.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.0" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.&lt;init&gt; (1 samples, 0.09%)</title><rect x="403.0" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.0" y="1134.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="403.0" y="1107.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.0" y="1118.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="403.0" y="1091.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.0" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="403.0" y="1075.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.0" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="403.0" y="1059.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.0" y="1070.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="403.0" y="1043.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.0" y="1054.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="403.0" y="1027.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="406.0" y="1038.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="403.0" y="1011.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.0" y="1022.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="403.0" y="995.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.0" y="1006.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="403.0" y="979.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.0" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="403.0" y="963.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.0" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="403.0" y="947.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="406.0" y="958.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="403.0" y="931.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.0" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="403.0" y="915.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.0" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="403.0" y="899.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="406.0" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="403.0" y="883.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.0" y="894.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="403.0" y="867.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.0" y="878.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="403.0" y="851.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="406.0" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.09%)</title><rect x="403.0" y="835.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.09%)</title><rect x="403.0" y="819.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (4 samples, 0.35%)</title><rect x="404.0" y="1267.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.0" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (2 samples, 0.18%)</title><rect x="404.0" y="1251.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.0" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (2 samples, 0.18%)</title><rect x="404.0" y="1235.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.0" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (2 samples, 0.18%)</title><rect x="404.0" y="1219.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (2 samples, 0.18%)</title><rect x="404.0" y="1203.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (2 samples, 0.18%)</title><rect x="406.1" y="1251.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$1 (2 samples, 0.18%)</title><rect x="406.1" y="1235.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.mqType$lzycompute$1 (2 samples, 0.18%)</title><rect x="406.1" y="1219.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getProducedMessageQueueType (2 samples, 0.18%)</title><rect x="406.1" y="1203.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.1" y="1214.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (2 samples, 0.18%)</title><rect x="406.1" y="1187.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.1" y="1198.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (2 samples, 0.18%)</title><rect x="406.1" y="1171.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.1" y="1182.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (1 samples, 0.09%)</title><rect x="407.2" y="1155.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (1 samples, 0.09%)</title><rect x="408.2" y="1363.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (1 samples, 0.09%)</title><rect x="408.2" y="1347.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (1 samples, 0.09%)</title><rect x="408.2" y="1331.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (1 samples, 0.09%)</title><rect x="408.2" y="1315.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.2" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.09%)</title><rect x="408.2" y="1299.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$133/829821784.apply$mcV$sp (1 samples, 0.09%)</title><rect x="408.2" y="1283.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (1 samples, 0.09%)</title><rect x="408.2" y="1267.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (1 samples, 0.09%)</title><rect x="408.2" y="1251.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="408.2" y="1235.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (1 samples, 0.09%)</title><rect x="408.2" y="1219.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.2" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.09%)</title><rect x="408.2" y="1203.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.09%)</title><rect x="408.2" y="1187.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (1 samples, 0.09%)</title><rect x="408.2" y="1171.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndInsertValue (1 samples, 0.09%)</title><rect x="408.2" y="1155.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (1 samples, 0.09%)</title><rect x="409.2" y="1363.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Props.copy (1 samples, 0.09%)</title><rect x="409.2" y="1347.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.09%)</title><rect x="409.2" y="1331.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.09%)</title><rect x="409.2" y="1315.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.09%)</title><rect x="409.2" y="1299.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.09%)</title><rect x="409.2" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.2" y="1294.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.09%)</title><rect x="409.2" y="1267.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.2" y="1278.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.09%)</title><rect x="409.2" y="1251.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.2" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (1 samples, 0.09%)</title><rect x="409.2" y="1235.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.2" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (1 samples, 0.09%)</title><rect x="409.2" y="1219.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.2" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (1 samples, 0.09%)</title><rect x="409.2" y="1203.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.forall (1 samples, 0.09%)</title><rect x="409.2" y="1187.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall$ (1 samples, 0.09%)</title><rect x="409.2" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall (1 samples, 0.09%)</title><rect x="409.2" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.2" y="1166.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$125/1408279755.apply (1 samples, 0.09%)</title><rect x="409.2" y="1139.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.2" y="1150.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5$adapted (1 samples, 0.09%)</title><rect x="409.2" y="1123.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.2" y="1134.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$5 (1 samples, 0.09%)</title><rect x="409.2" y="1107.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.2" y="1118.0"></text>
</g>
<g>
<title>akka/util/BoxedType$.apply (1 samples, 0.09%)</title><rect x="409.2" y="1091.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props.withDispatcher (1 samples, 0.09%)</title><rect x="410.3" y="1363.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Props.copy (1 samples, 0.09%)</title><rect x="410.3" y="1347.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.09%)</title><rect x="410.3" y="1331.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.09%)</title><rect x="410.3" y="1315.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.09%)</title><rect x="410.3" y="1299.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.09%)</title><rect x="410.3" y="1283.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.3" y="1294.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.09%)</title><rect x="410.3" y="1267.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.09%)</title><rect x="410.3" y="1251.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$$$Lambda$124/172215878.apply (1 samples, 0.09%)</title><rect x="410.3" y="1235.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.3" y="1246.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4$adapted (1 samples, 0.09%)</title><rect x="410.3" y="1219.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.3" y="1230.0"></text>
</g>
<g>
<title>akka/util/Reflect$.$anonfun$findConstructor$4 (1 samples, 0.09%)</title><rect x="410.3" y="1203.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.3" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.forall (1 samples, 0.09%)</title><rect x="410.3" y="1187.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall$ (1 samples, 0.09%)</title><rect x="410.3" y="1171.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.forall (1 samples, 0.09%)</title><rect x="410.3" y="1155.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.3" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$Lambda$1116/1838626526.apply (1 samples, 0.09%)</title><rect x="411.3" y="1363.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.3" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpListener.$anonfun$acceptAllPending$1 (1 samples, 0.09%)</title><rect x="411.3" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.3" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpListener.props$1 (1 samples, 0.09%)</title><rect x="411.3" y="1331.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.09%)</title><rect x="411.3" y="1315.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Props.&lt;init&gt; (1 samples, 0.09%)</title><rect x="411.3" y="1299.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Props.producer (1 samples, 0.09%)</title><rect x="411.3" y="1283.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/IndirectActorProducer$.apply (1 samples, 0.09%)</title><rect x="411.3" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.&lt;init&gt; (1 samples, 0.09%)</title><rect x="411.3" y="1251.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findConstructor (1 samples, 0.09%)</title><rect x="411.3" y="1235.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$6.hasNext (1 samples, 0.09%)</title><rect x="411.3" y="1219.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$ArrayIterator.next (1 samples, 0.09%)</title><rect x="411.3" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.3" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$.array_apply (1 samples, 0.09%)</title><rect x="411.3" y="1187.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.3" y="1198.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager.aroundReceive (1 samples, 0.09%)</title><rect x="412.4" y="1443.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (1 samples, 0.09%)</title><rect x="412.4" y="1427.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (1 samples, 0.09%)</title><rect x="412.4" y="1411.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.4" y="1422.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsManager$$anonfun$receive$1.applyOrElse (1 samples, 0.09%)</title><rect x="412.4" y="1395.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.forward (1 samples, 0.09%)</title><rect x="412.4" y="1379.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.09%)</title><rect x="412.4" y="1363.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.09%)</title><rect x="412.4" y="1347.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1331.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="412.4" y="1315.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1299.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.4" y="1310.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.route (1 samples, 0.09%)</title><rect x="412.4" y="1267.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.4" y="1278.0"></text>
</g>
<g>
<title>akka/routing/Router.send (1 samples, 0.09%)</title><rect x="412.4" y="1251.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.4" y="1262.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (1 samples, 0.09%)</title><rect x="412.4" y="1235.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (1 samples, 0.09%)</title><rect x="412.4" y="1219.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="412.4" y="1203.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1187.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="412.4" y="1171.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1155.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1139.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="412.4" y="1123.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="412.4" y="1107.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="412.4" y="1091.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="412.4" y="1075.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="412.4" y="1059.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="412.4" y="1043.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="412.4" y="1027.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="412.4" y="1011.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="412.4" y="995.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.09%)</title><rect x="412.4" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="412.4" y="963.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="412.4" y="947.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="412.4" y="931.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="412.4" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="412.4" y="899.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.4" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="412.4" y="883.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="415.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="412.4" y="867.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="412.4" y="851.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="415.4" y="862.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="412.4" y="835.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.4" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="412.4" y="819.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="415.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="412.4" y="803.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="412.4" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.4" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="412.4" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="415.4" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="412.4" y="755.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.4" y="766.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (57 samples, 5.04%)</title><rect x="413.4" y="1443.0" width="59.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.4" y="1454.0">akka/i..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (57 samples, 5.04%)</title><rect x="413.4" y="1427.0" width="59.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.4" y="1438.0">akka/a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (57 samples, 5.04%)</title><rect x="413.4" y="1411.0" width="59.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.4" y="1422.0">akka/a..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (2 samples, 0.18%)</title><rect x="413.4" y="1395.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.4" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (2 samples, 0.18%)</title><rect x="413.4" y="1379.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.4" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (2 samples, 0.18%)</title><rect x="413.4" y="1363.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (2 samples, 0.18%)</title><rect x="413.4" y="1347.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (2 samples, 0.18%)</title><rect x="413.4" y="1331.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (2 samples, 0.18%)</title><rect x="413.4" y="1315.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="413.4" y="1299.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (2 samples, 0.18%)</title><rect x="413.4" y="1283.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.maintainAddressTerminatedSubscription (1 samples, 0.09%)</title><rect x="414.5" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.5" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (1 samples, 0.09%)</title><rect x="414.5" y="1251.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$661/1100075787.apply$mcV$sp (1 samples, 0.09%)</title><rect x="414.5" y="1235.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$remWatcher$1 (1 samples, 0.09%)</title><rect x="414.5" y="1219.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$minus (1 samples, 0.09%)</title><rect x="414.5" y="1203.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus$ (1 samples, 0.09%)</title><rect x="414.5" y="1187.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$minus (1 samples, 0.09%)</title><rect x="414.5" y="1171.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (1 samples, 0.09%)</title><rect x="414.5" y="1155.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.excl (1 samples, 0.09%)</title><rect x="414.5" y="1139.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.removed (1 samples, 0.09%)</title><rect x="414.5" y="1123.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.copyAndRemoveValue (1 samples, 0.09%)</title><rect x="414.5" y="1107.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.5" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (4 samples, 0.35%)</title><rect x="415.5" y="1395.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.5" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (4 samples, 0.35%)</title><rect x="415.5" y="1379.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (1 samples, 0.09%)</title><rect x="415.5" y="1363.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become$ (1 samples, 0.09%)</title><rect x="415.5" y="1347.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorContext.become (1 samples, 0.09%)</title><rect x="415.5" y="1331.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.become (1 samples, 0.09%)</title><rect x="415.5" y="1315.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (1 samples, 0.09%)</title><rect x="415.5" y="1299.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.5" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (1 samples, 0.09%)</title><rect x="415.5" y="1283.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.5" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.&lt;init&gt; (1 samples, 0.09%)</title><rect x="415.5" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.5" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSeq.&lt;init&gt; (1 samples, 0.09%)</title><rect x="415.5" y="1251.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (1 samples, 0.09%)</title><rect x="415.5" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (1 samples, 0.09%)</title><rect x="415.5" y="1219.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (2 samples, 0.18%)</title><rect x="416.5" y="1363.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.5" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/376101767.apply (2 samples, 0.18%)</title><rect x="416.5" y="1347.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.5" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (2 samples, 0.18%)</title><rect x="416.5" y="1331.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (2 samples, 0.18%)</title><rect x="416.5" y="1315.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.18%)</title><rect x="416.5" y="1299.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.18%)</title><rect x="416.5" y="1283.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.18%)</title><rect x="416.5" y="1267.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (2 samples, 0.18%)</title><rect x="416.5" y="1251.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.18%)</title><rect x="416.5" y="1235.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.18%)</title><rect x="416.5" y="1219.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.18%)</title><rect x="416.5" y="1203.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="416.5" y="1187.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.18%)</title><rect x="416.5" y="1171.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.18%)</title><rect x="416.5" y="1155.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="416.5" y="1139.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.18%)</title><rect x="416.5" y="1123.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.18%)</title><rect x="416.5" y="1107.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.18%)</title><rect x="416.5" y="1091.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="416.5" y="1075.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="416.5" y="1059.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="416.5" y="1043.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="416.5" y="1027.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="416.5" y="1011.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="416.5" y="995.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="416.5" y="979.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.18%)</title><rect x="416.5" y="963.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="416.5" y="947.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="416.5" y="931.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="417.6" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.6" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="417.6" y="899.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="420.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="417.6" y="883.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="420.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="417.6" y="867.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.6" y="878.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="417.6" y="851.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.6" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="417.6" y="835.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="420.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="417.6" y="819.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.6" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="417.6" y="803.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.6" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="417.6" y="787.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="420.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="417.6" y="771.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="420.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.09%)</title><rect x="418.6" y="1363.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (3 samples, 0.27%)</title><rect x="419.7" y="1395.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (3 samples, 0.27%)</title><rect x="419.7" y="1379.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$572/1588202136.apply$mcV$sp (3 samples, 0.27%)</title><rect x="419.7" y="1363.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.7" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (3 samples, 0.27%)</title><rect x="419.7" y="1347.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (1 samples, 0.09%)</title><rect x="419.7" y="1331.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (1 samples, 0.09%)</title><rect x="419.7" y="1315.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/376101767.apply (1 samples, 0.09%)</title><rect x="419.7" y="1299.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (1 samples, 0.09%)</title><rect x="419.7" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (1 samples, 0.09%)</title><rect x="419.7" y="1267.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.09%)</title><rect x="419.7" y="1251.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.09%)</title><rect x="419.7" y="1235.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.09%)</title><rect x="419.7" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (1 samples, 0.09%)</title><rect x="419.7" y="1203.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.09%)</title><rect x="419.7" y="1187.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.09%)</title><rect x="419.7" y="1171.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.09%)</title><rect x="419.7" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="419.7" y="1139.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="419.7" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="419.7" y="1107.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="419.7" y="1091.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="419.7" y="1075.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="419.7" y="1059.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="419.7" y="1043.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="419.7" y="1027.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="419.7" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="419.7" y="995.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="419.7" y="979.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="419.7" y="963.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="419.7" y="947.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="419.7" y="931.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="419.7" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="419.7" y="899.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="419.7" y="883.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="419.7" y="867.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="419.7" y="851.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="422.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="419.7" y="835.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="419.7" y="819.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.7" y="830.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="419.7" y="803.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="422.7" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="419.7" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="419.7" y="771.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.7" y="782.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.09%)</title><rect x="419.7" y="755.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (2 samples, 0.18%)</title><rect x="420.7" y="1331.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (1 samples, 0.09%)</title><rect x="420.7" y="1315.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.7" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (1 samples, 0.09%)</title><rect x="421.7" y="1315.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.7" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.09%)</title><rect x="421.7" y="1299.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (1 samples, 0.09%)</title><rect x="421.7" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.7" y="1294.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (1 samples, 0.09%)</title><rect x="421.7" y="1267.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="424.7" y="1278.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (1 samples, 0.09%)</title><rect x="421.7" y="1251.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="424.7" y="1262.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.09%)</title><rect x="421.7" y="1235.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="424.7" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (2 samples, 0.18%)</title><rect x="422.8" y="1395.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.8" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (2 samples, 0.18%)</title><rect x="422.8" y="1379.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$550/572135612.apply$mcV$sp (2 samples, 0.18%)</title><rect x="422.8" y="1363.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (2 samples, 0.18%)</title><rect x="422.8" y="1347.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.8" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.09%)</title><rect x="422.8" y="1331.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.8" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.09%)</title><rect x="422.8" y="1315.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.8" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.09%)</title><rect x="422.8" y="1299.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.8" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.09%)</title><rect x="422.8" y="1283.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.8" y="1294.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.09%)</title><rect x="422.8" y="1267.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.8" y="1278.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.09%)</title><rect x="422.8" y="1251.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.8" y="1262.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.09%)</title><rect x="422.8" y="1235.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.8" y="1246.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.09%)</title><rect x="422.8" y="1219.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.8" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.09%)</title><rect x="422.8" y="1203.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.8" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (1 samples, 0.09%)</title><rect x="423.8" y="1331.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (1 samples, 0.09%)</title><rect x="423.8" y="1315.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.8" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$571/496148230.apply$mcV$sp (1 samples, 0.09%)</title><rect x="423.8" y="1299.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (1 samples, 0.09%)</title><rect x="423.8" y="1283.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (1 samples, 0.09%)</title><rect x="423.8" y="1267.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.09%)</title><rect x="423.8" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.09%)</title><rect x="423.8" y="1235.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (1 samples, 0.09%)</title><rect x="423.8" y="1219.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.8" y="1230.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_connect0 (1 samples, 0.09%)</title><rect x="423.8" y="1203.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="426.8" y="1214.0"></text>
</g>
<g>
<title>NET_InetAddressToSockaddr (1 samples, 0.09%)</title><rect x="423.8" y="1187.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="426.8" y="1198.0"></text>
</g>
<g>
<title>getInetAddress_family (1 samples, 0.09%)</title><rect x="423.8" y="1171.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="426.8" y="1182.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.09%)</title><rect x="423.8" y="1155.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="426.8" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.223] (1 samples, 0.09%)</title><rect x="423.8" y="1139.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="426.8" y="1150.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (8 samples, 0.71%)</title><rect x="424.9" y="1395.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.9" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (8 samples, 0.71%)</title><rect x="424.9" y="1379.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$570/258986370.apply$mcV$sp (8 samples, 0.71%)</title><rect x="424.9" y="1363.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (7 samples, 0.62%)</title><rect x="425.9" y="1347.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (7 samples, 0.62%)</title><rect x="425.9" y="1331.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (7 samples, 0.62%)</title><rect x="425.9" y="1315.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.9" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$571/496148230.apply$mcV$sp (7 samples, 0.62%)</title><rect x="425.9" y="1299.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.9" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (7 samples, 0.62%)</title><rect x="425.9" y="1283.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.9" y="1294.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.09%)</title><rect x="425.9" y="1267.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.9" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.09%)</title><rect x="425.9" y="1251.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.9" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.09%)</title><rect x="425.9" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.09%)</title><rect x="425.9" y="1219.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.9" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.09%)</title><rect x="425.9" y="1203.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.9" y="1214.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.09%)</title><rect x="425.9" y="1187.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.9" y="1198.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.09%)</title><rect x="425.9" y="1171.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.9" y="1182.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.09%)</title><rect x="425.9" y="1155.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.9" y="1166.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.09%)</title><rect x="425.9" y="1139.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.9" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.09%)</title><rect x="425.9" y="1123.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.09%)</title><rect x="425.9" y="1107.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.9" y="1118.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (1 samples, 0.09%)</title><rect x="427.0" y="1267.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.0" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (1 samples, 0.09%)</title><rect x="427.0" y="1251.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.0" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.09%)</title><rect x="427.0" y="1235.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.09%)</title><rect x="427.0" y="1219.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.0" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.09%)</title><rect x="427.0" y="1203.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="427.0" y="1187.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="430.0" y="1198.0"></text>
</g>
<g>
<title>__write (1 samples, 0.09%)</title><rect x="427.0" y="1171.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="430.0" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="427.0" y="1155.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.0" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="427.0" y="1139.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.0" y="1150.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.09%)</title><rect x="427.0" y="1123.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.0" y="1134.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.09%)</title><rect x="427.0" y="1107.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.0" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.09%)</title><rect x="427.0" y="1091.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.0" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.09%)</title><rect x="427.0" y="1075.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.0" y="1086.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.09%)</title><rect x="427.0" y="1059.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.0" y="1070.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="427.0" y="1043.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.0" y="1054.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="427.0" y="1027.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.0" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="427.0" y="1011.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (5 samples, 0.44%)</title><rect x="428.0" y="1267.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.checkAddress (1 samples, 0.09%)</title><rect x="428.0" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (4 samples, 0.35%)</title><rect x="429.0" y="1251.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (4 samples, 0.35%)</title><rect x="429.0" y="1235.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (4 samples, 0.35%)</title><rect x="429.0" y="1219.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.0" y="1230.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_connect0 (1 samples, 0.09%)</title><rect x="429.0" y="1203.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="432.0" y="1214.0"></text>
</g>
<g>
<title>NET_InetAddressToSockaddr (1 samples, 0.09%)</title><rect x="429.0" y="1187.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="432.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="430.1" y="1203.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="433.1" y="1214.0"></text>
</g>
<g>
<title>__connect (3 samples, 0.27%)</title><rect x="430.1" y="1187.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="433.1" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="430.1" y="1171.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.1" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="430.1" y="1155.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.1" y="1166.0"></text>
</g>
<g>
<title>sys_connect (3 samples, 0.27%)</title><rect x="430.1" y="1139.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="433.1" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (3 samples, 0.27%)</title><rect x="430.1" y="1123.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="433.1" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (3 samples, 0.27%)</title><rect x="430.1" y="1107.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.1" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (3 samples, 0.27%)</title><rect x="430.1" y="1091.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="433.1" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (3 samples, 0.27%)</title><rect x="430.1" y="1075.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="433.1" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (3 samples, 0.27%)</title><rect x="430.1" y="1059.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="433.1" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (3 samples, 0.27%)</title><rect x="430.1" y="1043.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.1" y="1054.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.18%)</title><rect x="430.1" y="1027.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="433.1" y="1038.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.18%)</title><rect x="430.1" y="1011.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.1" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.18%)</title><rect x="430.1" y="995.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="433.1" y="1006.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.18%)</title><rect x="430.1" y="979.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.1" y="990.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.18%)</title><rect x="430.1" y="963.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.1" y="974.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.18%)</title><rect x="430.1" y="947.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="433.1" y="958.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.09%)</title><rect x="430.1" y="931.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.1" y="942.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.09%)</title><rect x="430.1" y="915.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.1" y="926.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.09%)</title><rect x="430.1" y="899.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.1" y="910.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.09%)</title><rect x="430.1" y="883.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.1" y="894.0"></text>
</g>
<g>
<title>ena_start_xmit?[ena] (1 samples, 0.09%)</title><rect x="430.1" y="867.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.1" y="878.0"></text>
</g>
<g>
<title>neigh_resolve_output (1 samples, 0.09%)</title><rect x="431.1" y="931.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="434.1" y="942.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.09%)</title><rect x="431.1" y="915.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="434.1" y="926.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.09%)</title><rect x="431.1" y="899.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.1" y="910.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.09%)</title><rect x="431.1" y="883.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.1" y="894.0"></text>
</g>
<g>
<title>ipv4_default_advmss (1 samples, 0.09%)</title><rect x="432.2" y="1027.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.2" y="1038.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (38 samples, 3.36%)</title><rect x="433.2" y="1395.0" width="39.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.2" y="1406.0">sca..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (20 samples, 1.77%)</title><rect x="433.2" y="1379.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.2" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (17 samples, 1.50%)</title><rect x="433.2" y="1363.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.2" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (1 samples, 0.09%)</title><rect x="433.2" y="1347.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.2" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (1 samples, 0.09%)</title><rect x="433.2" y="1331.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (1 samples, 0.09%)</title><rect x="433.2" y="1315.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.2" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (1 samples, 0.09%)</title><rect x="433.2" y="1299.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.2" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.09%)</title><rect x="433.2" y="1283.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.2" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.09%)</title><rect x="433.2" y="1267.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.2" y="1278.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="433.2" y="1251.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="436.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (16 samples, 1.41%)</title><rect x="434.3" y="1347.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (4 samples, 0.35%)</title><rect x="434.3" y="1331.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.3" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/376101767.apply (4 samples, 0.35%)</title><rect x="434.3" y="1315.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (4 samples, 0.35%)</title><rect x="434.3" y="1299.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.3" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (4 samples, 0.35%)</title><rect x="434.3" y="1283.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (4 samples, 0.35%)</title><rect x="434.3" y="1267.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (3 samples, 0.27%)</title><rect x="435.3" y="1251.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.27%)</title><rect x="435.3" y="1235.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.3" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (3 samples, 0.27%)</title><rect x="435.3" y="1219.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.27%)</title><rect x="435.3" y="1203.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.18%)</title><rect x="436.3" y="1187.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.18%)</title><rect x="436.3" y="1171.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="436.3" y="1155.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.18%)</title><rect x="436.3" y="1139.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.18%)</title><rect x="436.3" y="1123.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="436.3" y="1107.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.3" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.18%)</title><rect x="436.3" y="1091.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.3" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.18%)</title><rect x="436.3" y="1075.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.18%)</title><rect x="436.3" y="1059.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.3" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="436.3" y="1043.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="436.3" y="1027.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="436.3" y="1011.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.3" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="436.3" y="995.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.3" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="436.3" y="979.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="436.3" y="963.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="436.3" y="947.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.18%)</title><rect x="436.3" y="931.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="436.3" y="915.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="436.3" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="436.3" y="883.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="436.3" y="867.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="439.3" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="436.3" y="851.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="439.3" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="437.4" y="867.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="440.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 1.06%)</title><rect x="438.4" y="1331.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="438.4" y="1315.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="438.4" y="1299.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="438.4" y="1283.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="438.4" y="1267.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.97%)</title><rect x="439.5" y="1315.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.97%)</title><rect x="439.5" y="1299.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.97%)</title><rect x="439.5" y="1283.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (11 samples, 0.97%)</title><rect x="439.5" y="1267.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (11 samples, 0.97%)</title><rect x="439.5" y="1251.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.53%)</title><rect x="439.5" y="1235.0" width="6.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="442.5" y="1246.0"></text>
</g>
<g>
<title>__read (5 samples, 0.44%)</title><rect x="439.5" y="1219.0" width="5.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="442.5" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="441.6" y="1203.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="444.6" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="441.6" y="1187.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.6" y="1198.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.27%)</title><rect x="441.6" y="1171.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.6" y="1182.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.27%)</title><rect x="441.6" y="1155.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.6" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.18%)</title><rect x="441.6" y="1139.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="444.6" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.18%)</title><rect x="441.6" y="1123.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.6" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (2 samples, 0.18%)</title><rect x="441.6" y="1107.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="444.6" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.18%)</title><rect x="441.6" y="1091.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.6" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.18%)</title><rect x="441.6" y="1075.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.6" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.18%)</title><rect x="441.6" y="1059.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.6" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.09%)</title><rect x="441.6" y="1043.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.6" y="1054.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.09%)</title><rect x="442.6" y="1043.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="445.6" y="1054.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.09%)</title><rect x="442.6" y="1027.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.6" y="1038.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.09%)</title><rect x="443.6" y="1139.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="446.6" y="1150.0"></text>
</g>
<g>
<title>__strerror_r (1 samples, 0.09%)</title><rect x="444.7" y="1219.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="447.7" y="1230.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="444.7" y="1203.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="447.7" y="1214.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.18%)</title><rect x="445.7" y="1235.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="448.7" y="1246.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.18%)</title><rect x="445.7" y="1219.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="448.7" y="1230.0"></text>
</g>
<g>
<title>convertReturnVal (3 samples, 0.27%)</title><rect x="447.8" y="1235.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="450.8" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (3 samples, 0.27%)</title><rect x="447.8" y="1219.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="450.8" y="1230.0"></text>
</g>
<g>
<title>JNU_NewStringPlatform (1 samples, 0.09%)</title><rect x="447.8" y="1203.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="450.8" y="1214.0"></text>
</g>
<g>
<title>newSizedString8859_1 (1 samples, 0.09%)</title><rect x="447.8" y="1187.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="450.8" y="1198.0"></text>
</g>
<g>
<title>jni_NewString (1 samples, 0.09%)</title><rect x="447.8" y="1171.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="450.8" y="1182.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.09%)</title><rect x="447.8" y="1155.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="450.8" y="1166.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.09%)</title><rect x="447.8" y="1139.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="450.8" y="1150.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.09%)</title><rect x="447.8" y="1123.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="450.8" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="447.8" y="1107.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="450.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="447.8" y="1091.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="450.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="447.8" y="1075.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.8" y="1086.0"></text>
</g>
<g>
<title>jni_Throw (2 samples, 0.18%)</title><rect x="448.9" y="1203.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="451.9" y="1214.0"></text>
</g>
<g>
<title>Exceptions::_throw_oop(Thread*, char const*, int, oopDesc*) (2 samples, 0.18%)</title><rect x="448.9" y="1187.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="451.9" y="1198.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (2 samples, 0.18%)</title><rect x="448.9" y="1171.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="451.9" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.09%)</title><rect x="448.9" y="1155.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="451.9" y="1166.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.09%)</title><rect x="448.9" y="1139.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="451.9" y="1150.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.09%)</title><rect x="448.9" y="1123.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="451.9" y="1134.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.09%)</title><rect x="448.9" y="1107.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="451.9" y="1118.0"></text>
</g>
<g>
<title>stringStream::as_string() const (1 samples, 0.09%)</title><rect x="449.9" y="1155.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="452.9" y="1166.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="449.9" y="1139.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="452.9" y="1150.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (1 samples, 0.09%)</title><rect x="450.9" y="1363.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (1 samples, 0.09%)</title><rect x="450.9" y="1347.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (1 samples, 0.09%)</title><rect x="450.9" y="1331.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (1 samples, 0.09%)</title><rect x="450.9" y="1315.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (1 samples, 0.09%)</title><rect x="450.9" y="1299.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.9" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (1 samples, 0.09%)</title><rect x="450.9" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (1 samples, 0.09%)</title><rect x="450.9" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (1 samples, 0.09%)</title><rect x="450.9" y="1251.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.9" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.09%)</title><rect x="450.9" y="1235.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.9" y="1246.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (1 samples, 0.09%)</title><rect x="450.9" y="1219.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="453.9" y="1230.0"></text>
</g>
<g>
<title>setsockopt (1 samples, 0.09%)</title><rect x="450.9" y="1203.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="453.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="450.9" y="1187.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.9" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="450.9" y="1171.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="453.9" y="1182.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.09%)</title><rect x="450.9" y="1155.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.9" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (2 samples, 0.18%)</title><rect x="452.0" y="1363.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (2 samples, 0.18%)</title><rect x="452.0" y="1347.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.0" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (2 samples, 0.18%)</title><rect x="452.0" y="1331.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (2 samples, 0.18%)</title><rect x="452.0" y="1315.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.18%)</title><rect x="452.0" y="1299.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.09%)</title><rect x="453.0" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="453.0" y="1267.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="456.0" y="1278.0"></text>
</g>
<g>
<title>__write (1 samples, 0.09%)</title><rect x="453.0" y="1251.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="456.0" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="453.0" y="1235.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.0" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="453.0" y="1219.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="456.0" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (18 samples, 1.59%)</title><rect x="454.1" y="1379.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.1" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (2 samples, 0.18%)</title><rect x="454.1" y="1363.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (2 samples, 0.18%)</title><rect x="454.1" y="1347.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (2 samples, 0.18%)</title><rect x="454.1" y="1331.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.1" y="1342.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (2 samples, 0.18%)</title><rect x="454.1" y="1315.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.1" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.length (1 samples, 0.09%)</title><rect x="454.1" y="1299.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.1" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="455.1" y="1299.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="458.1" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (16 samples, 1.41%)</title><rect x="456.1" y="1363.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.1" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (16 samples, 1.41%)</title><rect x="456.1" y="1347.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (16 samples, 1.41%)</title><rect x="456.1" y="1331.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (3 samples, 0.27%)</title><rect x="456.1" y="1315.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/376101767.apply (3 samples, 0.27%)</title><rect x="456.1" y="1299.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (3 samples, 0.27%)</title><rect x="456.1" y="1283.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (3 samples, 0.27%)</title><rect x="456.1" y="1267.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (3 samples, 0.27%)</title><rect x="456.1" y="1251.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.09%)</title><rect x="458.2" y="1235.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.09%)</title><rect x="458.2" y="1219.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (1 samples, 0.09%)</title><rect x="458.2" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.09%)</title><rect x="458.2" y="1187.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.09%)</title><rect x="458.2" y="1171.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.09%)</title><rect x="458.2" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="458.2" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="458.2" y="1123.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="458.2" y="1107.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="458.2" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="458.2" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="458.2" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="458.2" y="1043.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="458.2" y="1027.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="458.2" y="1011.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="458.2" y="995.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="458.2" y="979.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.2" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="458.2" y="963.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="458.2" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="458.2" y="931.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="458.2" y="915.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="458.2" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="458.2" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="458.2" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.2" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="458.2" y="851.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="461.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="458.2" y="835.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="458.2" y="819.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.2" y="830.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="458.2" y="803.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.2" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="458.2" y="787.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.2" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="458.2" y="771.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="461.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="458.2" y="755.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="461.2" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="458.2" y="739.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="461.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="458.2" y="723.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.2" y="734.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (1 samples, 0.09%)</title><rect x="459.3" y="1315.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.3" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (1 samples, 0.09%)</title><rect x="459.3" y="1299.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.3" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (1 samples, 0.09%)</title><rect x="459.3" y="1283.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.3" y="1294.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.acquire (1 samples, 0.09%)</title><rect x="459.3" y="1267.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.takeBufferFromPool (1 samples, 0.09%)</title><rect x="459.3" y="1251.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.3" y="1262.0"></text>
</g>
<g>
<title>akka/io/DirectByteBufferPool.allocate (1 samples, 0.09%)</title><rect x="459.3" y="1235.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.3" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (12 samples, 1.06%)</title><rect x="460.3" y="1315.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.3" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (12 samples, 1.06%)</title><rect x="460.3" y="1299.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.3" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (12 samples, 1.06%)</title><rect x="460.3" y="1283.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (12 samples, 1.06%)</title><rect x="460.3" y="1267.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.3" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (11 samples, 0.97%)</title><rect x="461.4" y="1251.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (11 samples, 0.97%)</title><rect x="461.4" y="1235.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.97%)</title><rect x="461.4" y="1219.0" width="11.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="464.4" y="1230.0"></text>
</g>
<g>
<title>__write (11 samples, 0.97%)</title><rect x="461.4" y="1203.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="464.4" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.97%)</title><rect x="461.4" y="1187.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.4" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.97%)</title><rect x="461.4" y="1171.0" width="11.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.4" y="1182.0"></text>
</g>
<g>
<title>sys_write (10 samples, 0.88%)</title><rect x="462.4" y="1155.0" width="10.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.4" y="1166.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.88%)</title><rect x="462.4" y="1139.0" width="10.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.4" y="1150.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.09%)</title><rect x="462.4" y="1123.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.4" y="1134.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="462.4" y="1107.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.4" y="1118.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="462.4" y="1091.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="465.4" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="462.4" y="1075.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.4" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="462.4" y="1059.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="465.4" y="1070.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="462.4" y="1043.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.4" y="1054.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="462.4" y="1027.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.4" y="1038.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="462.4" y="1011.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.4" y="1022.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="462.4" y="995.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.4" y="1006.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="462.4" y="979.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.4" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="462.4" y="963.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.4" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="462.4" y="947.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.4" y="958.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="462.4" y="931.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.4" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="462.4" y="915.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.4" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="462.4" y="899.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.4" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="462.4" y="883.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.4" y="894.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="462.4" y="867.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.4" y="878.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="462.4" y="851.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.4" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.09%)</title><rect x="462.4" y="835.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.4" y="846.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.09%)</title><rect x="462.4" y="819.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="465.4" y="830.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (1 samples, 0.09%)</title><rect x="462.4" y="803.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="465.4" y="814.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.09%)</title><rect x="462.4" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.4" y="798.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.09%)</title><rect x="462.4" y="771.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.4" y="782.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.09%)</title><rect x="462.4" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.4" y="766.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.62%)</title><rect x="463.4" y="1123.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.4" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.62%)</title><rect x="463.4" y="1107.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.4" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (7 samples, 0.62%)</title><rect x="463.4" y="1091.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.4" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (7 samples, 0.62%)</title><rect x="463.4" y="1075.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.4" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (7 samples, 0.62%)</title><rect x="463.4" y="1059.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.4" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 0.62%)</title><rect x="463.4" y="1043.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.4" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.09%)</title><rect x="463.4" y="1027.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.4" y="1038.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 0.53%)</title><rect x="464.5" y="1027.0" width="6.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.5" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.09%)</title><rect x="464.5" y="1011.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="467.5" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.09%)</title><rect x="464.5" y="995.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="467.5" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.09%)</title><rect x="464.5" y="979.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="467.5" y="990.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.09%)</title><rect x="464.5" y="963.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="467.5" y="974.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.44%)</title><rect x="465.5" y="1011.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.5" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.44%)</title><rect x="465.5" y="995.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="468.5" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 0.44%)</title><rect x="465.5" y="979.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="468.5" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.35%)</title><rect x="465.5" y="963.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="468.5" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.35%)</title><rect x="465.5" y="947.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="468.5" y="958.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.35%)</title><rect x="465.5" y="931.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.5" y="942.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.35%)</title><rect x="465.5" y="915.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="468.5" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.35%)</title><rect x="465.5" y="899.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.5" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.35%)</title><rect x="465.5" y="883.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.5" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.27%)</title><rect x="466.6" y="867.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.6" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.27%)</title><rect x="466.6" y="851.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.6" y="862.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.09%)</title><rect x="466.6" y="835.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.6" y="846.0"></text>
</g>
<g>
<title>ena_select_queue?[ena] (1 samples, 0.09%)</title><rect x="466.6" y="819.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.6" y="830.0"></text>
</g>
<g>
<title>__netdev_pick_tx (1 samples, 0.09%)</title><rect x="466.6" y="803.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.6" y="814.0"></text>
</g>
<g>
<title>sch_direct_xmit (2 samples, 0.18%)</title><rect x="467.6" y="835.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.6" y="846.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.09%)</title><rect x="467.6" y="819.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.6" y="830.0"></text>
</g>
<g>
<title>ena_start_xmit?[ena] (1 samples, 0.09%)</title><rect x="467.6" y="803.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="470.6" y="814.0"></text>
</g>
<g>
<title>validate_xmit_skb_list (1 samples, 0.09%)</title><rect x="468.7" y="819.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.7" y="830.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.09%)</title><rect x="468.7" y="803.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.7" y="814.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.09%)</title><rect x="468.7" y="787.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.7" y="798.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.09%)</title><rect x="469.7" y="963.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.7" y="974.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.09%)</title><rect x="469.7" y="947.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.7" y="958.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.09%)</title><rect x="469.7" y="931.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.7" y="942.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.09%)</title><rect x="469.7" y="915.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.7" y="926.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.18%)</title><rect x="470.7" y="1123.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.7" y="1134.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.09%)</title><rect x="471.8" y="1107.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="474.8" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (9 samples, 0.80%)</title><rect x="472.8" y="1443.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.80%)</title><rect x="472.8" y="1427.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.80%)</title><rect x="472.8" y="1411.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.8" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (9 samples, 0.80%)</title><rect x="472.8" y="1395.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.8" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (1 samples, 0.09%)</title><rect x="472.8" y="1379.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.8" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (1 samples, 0.09%)</title><rect x="472.8" y="1363.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (1 samples, 0.09%)</title><rect x="472.8" y="1347.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.09%)</title><rect x="472.8" y="1331.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.8" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.09%)</title><rect x="472.8" y="1315.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="472.8" y="1299.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="475.8" y="1310.0"></text>
</g>
<g>
<title>__write (1 samples, 0.09%)</title><rect x="472.8" y="1283.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="475.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="472.8" y="1267.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.8" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="472.8" y="1251.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.8" y="1262.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.09%)</title><rect x="472.8" y="1235.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.8" y="1246.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.09%)</title><rect x="472.8" y="1219.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.8" y="1230.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="472.8" y="1203.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.8" y="1214.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="472.8" y="1187.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="475.8" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (8 samples, 0.71%)</title><rect x="473.9" y="1379.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.18%)</title><rect x="473.9" y="1363.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1347.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.18%)</title><rect x="473.9" y="1331.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1315.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.9" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1299.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.9" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (2 samples, 0.18%)</title><rect x="473.9" y="1283.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.9" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.send (2 samples, 0.18%)</title><rect x="473.9" y="1267.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (2 samples, 0.18%)</title><rect x="473.9" y="1251.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.18%)</title><rect x="473.9" y="1235.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.18%)</title><rect x="473.9" y="1219.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1203.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.18%)</title><rect x="473.9" y="1187.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1171.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1155.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.18%)</title><rect x="473.9" y="1139.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.18%)</title><rect x="473.9" y="1123.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.18%)</title><rect x="473.9" y="1107.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="473.9" y="1091.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="473.9" y="1075.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="473.9" y="1059.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="473.9" y="1043.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="473.9" y="1027.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="473.9" y="1011.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="473.9" y="995.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="473.9" y="979.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="473.9" y="963.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="473.9" y="947.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="473.9" y="931.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.9" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="473.9" y="915.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="476.9" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.09%)</title><rect x="473.9" y="899.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="476.9" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="474.9" y="915.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="477.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="474.9" y="899.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="474.9" y="883.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.9" y="894.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="474.9" y="867.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="477.9" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="474.9" y="851.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.9" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="474.9" y="835.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.9" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="474.9" y="819.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="477.9" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="474.9" y="803.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="474.9" y="787.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (6 samples, 0.53%)</title><rect x="476.0" y="1363.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.0" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (6 samples, 0.53%)</title><rect x="476.0" y="1347.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.0" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (6 samples, 0.53%)</title><rect x="476.0" y="1331.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.0" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (1 samples, 0.09%)</title><rect x="476.0" y="1315.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="479.0" y="1326.0"></text>
</g>
<g>
<title>jni_SetObjectArrayElement (1 samples, 0.09%)</title><rect x="476.0" y="1299.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="479.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="477.0" y="1315.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="477.0" y="1299.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="480.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="477.0" y="1283.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="480.0" y="1294.0"></text>
</g>
<g>
<title>accept (2 samples, 0.18%)</title><rect x="477.0" y="1267.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="480.0" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="477.0" y="1251.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.0" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="477.0" y="1235.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.0" y="1246.0"></text>
</g>
<g>
<title>sys_accept (2 samples, 0.18%)</title><rect x="477.0" y="1219.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="480.0" y="1230.0"></text>
</g>
<g>
<title>SYSC_accept4 (2 samples, 0.18%)</title><rect x="477.0" y="1203.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.0" y="1214.0"></text>
</g>
<g>
<title>sock_alloc_file (2 samples, 0.18%)</title><rect x="477.0" y="1187.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.0" y="1198.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.09%)</title><rect x="477.0" y="1171.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="480.0" y="1182.0"></text>
</g>
<g>
<title>get_empty_filp (1 samples, 0.09%)</title><rect x="477.0" y="1155.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="480.0" y="1166.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="477.0" y="1139.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.0" y="1150.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.09%)</title><rect x="477.0" y="1123.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.0" y="1134.0"></text>
</g>
<g>
<title>d_alloc_pseudo (1 samples, 0.09%)</title><rect x="478.0" y="1171.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.0" y="1182.0"></text>
</g>
<g>
<title>__d_alloc (1 samples, 0.09%)</title><rect x="478.0" y="1155.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.0" y="1166.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.09%)</title><rect x="478.0" y="1139.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="481.0" y="1150.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.09%)</title><rect x="478.0" y="1123.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.0" y="1134.0"></text>
</g>
<g>
<title>accept (1 samples, 0.09%)</title><rect x="479.1" y="1299.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="482.1" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="479.1" y="1283.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.1" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="479.1" y="1267.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="482.1" y="1278.0"></text>
</g>
<g>
<title>sys_accept (1 samples, 0.09%)</title><rect x="479.1" y="1251.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.1" y="1262.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.09%)</title><rect x="479.1" y="1235.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.1" y="1246.0"></text>
</g>
<g>
<title>inet6_getname (1 samples, 0.09%)</title><rect x="479.1" y="1219.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="482.1" y="1230.0"></text>
</g>
<g>
<title>accept (1 samples, 0.09%)</title><rect x="480.1" y="1315.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="483.1" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="480.1" y="1299.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.1" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="480.1" y="1283.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.1" y="1294.0"></text>
</g>
<g>
<title>sys_accept (1 samples, 0.09%)</title><rect x="480.1" y="1267.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.1" y="1278.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.09%)</title><rect x="480.1" y="1251.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.1" y="1262.0"></text>
</g>
<g>
<title>inet_accept (1 samples, 0.09%)</title><rect x="480.1" y="1235.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.1" y="1246.0"></text>
</g>
<g>
<title>inet_csk_accept (1 samples, 0.09%)</title><rect x="480.1" y="1219.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.1" y="1230.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.09%)</title><rect x="480.1" y="1203.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.1" y="1214.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="480.1" y="1187.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.1" y="1198.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.09%)</title><rect x="480.1" y="1171.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.1" y="1182.0"></text>
</g>
<g>
<title>java/net/Inet4Address.&lt;init&gt; (1 samples, 0.09%)</title><rect x="481.2" y="1315.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.2" y="1326.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;init&gt; (1 samples, 0.09%)</title><rect x="481.2" y="1299.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (199 samples, 17.58%)</title><rect x="482.2" y="1443.0" width="207.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.2" y="1454.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (199 samples, 17.58%)</title><rect x="482.2" y="1427.0" width="207.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.2" y="1438.0">akka/actor/Actor.aroundRece..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (199 samples, 17.58%)</title><rect x="482.2" y="1411.0" width="207.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.2" y="1422.0">akka/actor/Actor.aroundRece..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (199 samples, 17.58%)</title><rect x="482.2" y="1395.0" width="207.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.2" y="1406.0">akka/stream/impl/fusing/Act..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (171 samples, 15.11%)</title><rect x="482.2" y="1379.0" width="178.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.2" y="1390.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (171 samples, 15.11%)</title><rect x="482.2" y="1363.0" width="178.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.2" y="1374.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (171 samples, 15.11%)</title><rect x="482.2" y="1347.0" width="178.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.2" y="1358.0">akka/stream/impl/fusing..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (23 samples, 2.03%)</title><rect x="483.3" y="1331.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.3" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$479/685228539.apply (5 samples, 0.44%)</title><rect x="486.4" y="1315.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (5 samples, 0.44%)</title><rect x="486.4" y="1299.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.4" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (5 samples, 0.44%)</title><rect x="486.4" y="1283.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (4 samples, 0.35%)</title><rect x="486.4" y="1267.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (4 samples, 0.35%)</title><rect x="486.4" y="1251.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (3 samples, 0.27%)</title><rect x="486.4" y="1235.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.4" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.27%)</title><rect x="486.4" y="1219.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.4" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.27%)</title><rect x="486.4" y="1203.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.4" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.27%)</title><rect x="486.4" y="1187.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$402/834609134.apply (1 samples, 0.09%)</title><rect x="488.5" y="1171.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (1 samples, 0.09%)</title><rect x="488.5" y="1155.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (1 samples, 0.09%)</title><rect x="488.5" y="1139.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (1 samples, 0.09%)</title><rect x="488.5" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$8 (1 samples, 0.09%)</title><rect x="488.5" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="1118.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.09%)</title><rect x="488.5" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.5" y="1102.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$.apply (1 samples, 0.09%)</title><rect x="489.5" y="1235.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.5" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$StringBasedParserInput.&lt;init&gt; (1 samples, 0.09%)</title><rect x="489.5" y="1219.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.5" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/ParserInput$DefaultParserInput.&lt;init&gt; (1 samples, 0.09%)</title><rect x="489.5" y="1203.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="489.5" y="1187.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.5" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.09%)</title><rect x="489.5" y="1171.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="492.5" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.09%)</title><rect x="489.5" y="1155.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="492.5" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.09%)</title><rect x="489.5" y="1139.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="492.5" y="1150.0"></text>
</g>
<g>
<title>nmethodLocker::lock_nmethod(CompiledMethod*, bool) (1 samples, 0.09%)</title><rect x="489.5" y="1123.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="492.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.09%)</title><rect x="490.5" y="1267.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="490.5" y="1251.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.5" y="1262.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.09%)</title><rect x="490.5" y="1235.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.5" y="1246.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="490.5" y="1219.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="493.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$475/789788181.apply (2 samples, 0.18%)</title><rect x="491.6" y="1315.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.6" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (2 samples, 0.18%)</title><rect x="491.6" y="1299.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.6" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (2 samples, 0.18%)</title><rect x="491.6" y="1283.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$580/1569986998.apply$mcV$sp (2 samples, 0.18%)</title><rect x="491.6" y="1267.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (2 samples, 0.18%)</title><rect x="491.6" y="1251.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$532/364615172.apply (2 samples, 0.18%)</title><rect x="491.6" y="1235.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (2 samples, 0.18%)</title><rect x="491.6" y="1219.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (2 samples, 0.18%)</title><rect x="491.6" y="1203.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (2 samples, 0.18%)</title><rect x="491.6" y="1187.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$583/672946945.apply (2 samples, 0.18%)</title><rect x="491.6" y="1171.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (2 samples, 0.18%)</title><rect x="491.6" y="1155.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (2 samples, 0.18%)</title><rect x="491.6" y="1139.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (2 samples, 0.18%)</title><rect x="491.6" y="1123.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (2 samples, 0.18%)</title><rect x="491.6" y="1107.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (2 samples, 0.18%)</title><rect x="491.6" y="1091.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (2 samples, 0.18%)</title><rect x="491.6" y="1075.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.18%)</title><rect x="491.6" y="1059.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="491.6" y="1043.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.6" y="1054.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="492.6" y="1043.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.6" y="1054.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="492.6" y="1027.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.6" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="492.6" y="1011.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.6" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="492.6" y="995.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.6" y="1006.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="492.6" y="979.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.6" y="990.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="492.6" y="963.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.6" y="974.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="492.6" y="947.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.6" y="958.0"></text>
</g>
<g>
<title>napi_gro_frags (1 samples, 0.09%)</title><rect x="492.6" y="931.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.6" y="942.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="492.6" y="915.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.6" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="492.6" y="899.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="495.6" y="910.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="492.6" y="883.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="495.6" y="894.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="492.6" y="867.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.6" y="878.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="492.6" y="851.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.6" y="862.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="492.6" y="835.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="495.6" y="846.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="492.6" y="819.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.6" y="830.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="492.6" y="803.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.6" y="814.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="492.6" y="787.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="495.6" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="492.6" y="771.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.6" y="782.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.09%)</title><rect x="492.6" y="755.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.6" y="766.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="492.6" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.6" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="492.6" y="723.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.6" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="492.6" y="707.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="492.6" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="495.6" y="702.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (3 samples, 0.27%)</title><rect x="493.7" y="1315.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (3 samples, 0.27%)</title><rect x="493.7" y="1299.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.postStop (1 samples, 0.09%)</title><rect x="493.7" y="1283.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/StreamTcpException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="493.7" y="1267.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.7" y="1278.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="493.7" y="1251.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.7" y="1262.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="493.7" y="1235.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.7" y="1246.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="493.7" y="1219.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.7" y="1230.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="493.7" y="1203.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.7" y="1214.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="493.7" y="1187.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="496.7" y="1198.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="493.7" y="1171.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.7" y="1182.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.09%)</title><rect x="493.7" y="1155.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.7" y="1166.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.09%)</title><rect x="493.7" y="1139.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (2 samples, 0.18%)</title><rect x="494.7" y="1283.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (2 samples, 0.18%)</title><rect x="494.7" y="1267.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (2 samples, 0.18%)</title><rect x="494.7" y="1251.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (2 samples, 0.18%)</title><rect x="494.7" y="1235.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (2 samples, 0.18%)</title><rect x="494.7" y="1219.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (2 samples, 0.18%)</title><rect x="494.7" y="1203.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (2 samples, 0.18%)</title><rect x="494.7" y="1187.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (2 samples, 0.18%)</title><rect x="494.7" y="1171.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (2 samples, 0.18%)</title><rect x="494.7" y="1155.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$683/1423291922.apply (2 samples, 0.18%)</title><rect x="494.7" y="1139.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (2 samples, 0.18%)</title><rect x="494.7" y="1123.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (2 samples, 0.18%)</title><rect x="494.7" y="1107.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (2 samples, 0.18%)</title><rect x="494.7" y="1091.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="494.7" y="1075.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.18%)</title><rect x="494.7" y="1059.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.18%)</title><rect x="494.7" y="1043.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.18%)</title><rect x="494.7" y="1027.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.18%)</title><rect x="494.7" y="1011.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="494.7" y="995.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="494.7" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.7" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="494.7" y="963.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="494.7" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.7" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="494.7" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="494.7" y="915.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="494.7" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.09%)</title><rect x="494.7" y="883.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="494.7" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="494.7" y="851.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.7" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1.systemEnqueue (1 samples, 0.09%)</title><rect x="495.8" y="995.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.8" y="1006.0"></text>
</g>
<g>
<title>akka/actor/DeadLetter.&lt;init&gt; (1 samples, 0.09%)</title><rect x="495.8" y="979.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.8" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (1 samples, 0.09%)</title><rect x="496.8" y="1315.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1026/625093395.apply (1 samples, 0.09%)</title><rect x="497.8" y="1315.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6$adapted (1 samples, 0.09%)</title><rect x="497.8" y="1299.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$futureCB$6 (1 samples, 0.09%)</title><rect x="497.8" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.futureCompleted (1 samples, 0.09%)</title><rect x="497.8" y="1267.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$537/436892572.apply (5 samples, 0.44%)</title><rect x="498.9" y="1315.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (5 samples, 0.44%)</title><rect x="498.9" y="1299.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (5 samples, 0.44%)</title><rect x="498.9" y="1283.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (5 samples, 0.44%)</title><rect x="498.9" y="1267.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$794/952766773.apply (1 samples, 0.09%)</title><rect x="498.9" y="1251.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (1 samples, 0.09%)</title><rect x="498.9" y="1235.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (1 samples, 0.09%)</title><rect x="498.9" y="1219.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (1 samples, 0.09%)</title><rect x="498.9" y="1203.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (1 samples, 0.09%)</title><rect x="498.9" y="1187.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow$.fromGraph (1 samples, 0.09%)</title><rect x="498.9" y="1171.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.09%)</title><rect x="498.9" y="1155.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.09%)</title><rect x="498.9" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.09%)</title><rect x="498.9" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.09%)</title><rect x="498.9" y="1107.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (1 samples, 0.09%)</title><rect x="498.9" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.9" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="498.9" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="498.9" y="1059.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.9" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (1 samples, 0.09%)</title><rect x="498.9" y="1043.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="498.9" y="1027.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.9" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (1 samples, 0.09%)</title><rect x="498.9" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$535/1273074539.apply (3 samples, 0.27%)</title><rect x="499.9" y="1251.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (3 samples, 0.27%)</title><rect x="499.9" y="1235.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (3 samples, 0.27%)</title><rect x="499.9" y="1219.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.9" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (3 samples, 0.27%)</title><rect x="499.9" y="1203.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.9" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (3 samples, 0.27%)</title><rect x="499.9" y="1187.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (3 samples, 0.27%)</title><rect x="499.9" y="1171.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (3 samples, 0.27%)</title><rect x="499.9" y="1155.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.9" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.27%)</title><rect x="499.9" y="1139.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.27%)</title><rect x="499.9" y="1123.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.27%)</title><rect x="499.9" y="1107.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.27%)</title><rect x="499.9" y="1091.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.09%)</title><rect x="499.9" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.09%)</title><rect x="499.9" y="1059.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.9" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.09%)</title><rect x="499.9" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.9" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Watch.unlinked (1 samples, 0.09%)</title><rect x="499.9" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="501.0" y="1075.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.0" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="501.0" y="1059.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.0" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="501.0" y="1043.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.0" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="501.0" y="1027.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.0" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="501.0" y="1011.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="501.0" y="995.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="501.0" y="979.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.18%)</title><rect x="501.0" y="963.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="501.0" y="947.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="501.0" y="931.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="502.0" y="915.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="502.0" y="899.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="505.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="502.0" y="883.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="502.0" y="867.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.0" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="502.0" y="851.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.0" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="502.0" y="835.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="505.0" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="502.0" y="819.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="505.0" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="502.0" y="803.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.0" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="503.1" y="1251.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="506.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$499/39350523.apply (3 samples, 0.27%)</title><rect x="504.1" y="1315.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (3 samples, 0.27%)</title><rect x="504.1" y="1299.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (3 samples, 0.27%)</title><rect x="504.1" y="1283.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (3 samples, 0.27%)</title><rect x="504.1" y="1267.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (1 samples, 0.09%)</title><rect x="505.1" y="1251.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.1" y="1262.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.09%)</title><rect x="505.1" y="1235.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="508.1" y="1246.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (1 samples, 0.09%)</title><rect x="506.2" y="1251.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (1 samples, 0.09%)</title><rect x="506.2" y="1235.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.2" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="506.2" y="1219.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.2" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="506.2" y="1203.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (146 samples, 12.90%)</title><rect x="507.2" y="1331.0" width="152.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.2" y="1342.0">akka/stream/impl/fu..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (144 samples, 12.72%)</title><rect x="508.3" y="1315.0" width="150.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.3" y="1326.0">akka/stream/impl/fu..</text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ProtocolSwitchStage$$anon$15$$anon$18.onPush (1 samples, 0.09%)</title><rect x="509.3" y="1299.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$3.onPull (1 samples, 0.09%)</title><rect x="510.4" y="1299.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (2 samples, 0.18%)</title><rect x="511.4" y="1299.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (2 samples, 0.18%)</title><rect x="511.4" y="1283.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (2 samples, 0.18%)</title><rect x="511.4" y="1267.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.4" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (2 samples, 0.18%)</title><rect x="511.4" y="1251.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="514.4" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (2 samples, 0.18%)</title><rect x="511.4" y="1235.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (2 samples, 0.18%)</title><rect x="511.4" y="1219.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (2 samples, 0.18%)</title><rect x="511.4" y="1203.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (2 samples, 0.18%)</title><rect x="511.4" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (2 samples, 0.18%)</title><rect x="511.4" y="1171.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (2 samples, 0.18%)</title><rect x="511.4" y="1155.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unsubscribeAddressTerminated (1 samples, 0.09%)</title><rect x="511.4" y="1139.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.4" y="1150.0"></text>
</g>
<g>
<title>akka/event/AddressTerminatedTopic$.apply (1 samples, 0.09%)</title><rect x="511.4" y="1123.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (1 samples, 0.09%)</title><rect x="511.4" y="1107.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (1 samples, 0.09%)</title><rect x="511.4" y="1091.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.4" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (1 samples, 0.09%)</title><rect x="511.4" y="1075.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.4" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.findExtension (1 samples, 0.09%)</title><rect x="511.4" y="1059.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.4" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (1 samples, 0.09%)</title><rect x="512.4" y="1139.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$683/1423291922.apply (1 samples, 0.09%)</title><rect x="512.4" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (1 samples, 0.09%)</title><rect x="512.4" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (1 samples, 0.09%)</title><rect x="512.4" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.4" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (1 samples, 0.09%)</title><rect x="512.4" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.4" y="1086.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (1 samples, 0.09%)</title><rect x="512.4" y="1059.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.4" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (1 samples, 0.09%)</title><rect x="512.4" y="1043.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.4" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (1 samples, 0.09%)</title><rect x="512.4" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.4" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (1 samples, 0.09%)</title><rect x="512.4" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (1 samples, 0.09%)</title><rect x="512.4" y="995.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.4" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="512.4" y="979.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.4" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="512.4" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.4" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="512.4" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.4" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="512.4" y="931.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.4" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="512.4" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="512.4" y="899.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="512.4" y="883.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="512.4" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="512.4" y="851.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="512.4" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="512.4" y="819.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="512.4" y="803.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="515.4" y="814.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (41 samples, 3.62%)</title><rect x="513.5" y="1299.0" width="42.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.5" y="1310.0">akka..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (26 samples, 2.30%)</title><rect x="514.5" y="1283.0" width="27.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.5" y="1294.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.onPush (1 samples, 0.09%)</title><rect x="514.5" y="1267.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.onPush (1 samples, 0.09%)</title><rect x="515.6" y="1267.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.isAvailable (1 samples, 0.09%)</title><rect x="515.6" y="1251.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="515.6" y="1235.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (23 samples, 2.03%)</title><rect x="516.6" y="1267.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.6" y="1278.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1024/931835661.apply (22 samples, 1.94%)</title><rect x="516.6" y="1251.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.6" y="1262.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (22 samples, 1.94%)</title><rect x="516.6" y="1235.0" width="22.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.6" y="1246.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (1 samples, 0.09%)</title><rect x="516.6" y="1219.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (1 samples, 0.09%)</title><rect x="516.6" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.wire (1 samples, 0.09%)</title><rect x="516.6" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.watchTermination (1 samples, 0.09%)</title><rect x="517.7" y="1219.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination$ (1 samples, 0.09%)</title><rect x="517.7" y="1203.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOpsMat.watchTermination (1 samples, 0.09%)</title><rect x="517.7" y="1187.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.09%)</title><rect x="517.7" y="1171.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.09%)</title><rect x="517.7" y="1155.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="517.7" y="1139.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="517.7" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.09%)</title><rect x="517.7" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.09%)</title><rect x="517.7" y="1091.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.7" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="517.7" y="1075.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="520.7" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (20 samples, 1.77%)</title><rect x="518.7" y="1219.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (20 samples, 1.77%)</title><rect x="518.7" y="1203.0" width="20.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (20 samples, 1.77%)</title><rect x="518.7" y="1187.0" width="20.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.7" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (20 samples, 1.77%)</title><rect x="518.7" y="1171.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.7" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (1 samples, 0.09%)</title><rect x="518.7" y="1155.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.7" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (1 samples, 0.09%)</title><rect x="518.7" y="1139.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.7" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.09%)</title><rect x="518.7" y="1123.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.7" y="1134.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="518.7" y="1107.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.7" y="1118.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="518.7" y="1091.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.7" y="1102.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="518.7" y="1075.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="521.7" y="1086.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="518.7" y="1059.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (5 samples, 0.44%)</title><rect x="519.7" y="1155.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.7" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.nameOrDefault (1 samples, 0.09%)</title><rect x="519.7" y="1139.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$2 (1 samples, 0.09%)</title><rect x="519.7" y="1123.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.7" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="519.7" y="1107.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/io/IncomingConnectionStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="520.8" y="1139.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (3 samples, 0.27%)</title><rect x="521.8" y="1139.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (3 samples, 0.27%)</title><rect x="521.8" y="1123.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser.createLogic (1 samples, 0.09%)</title><rect x="521.8" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests.createLogic (1 samples, 0.09%)</title><rect x="522.9" y="1107.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="522.9" y="1091.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.9" y="1102.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.09%)</title><rect x="522.9" y="1075.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="525.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher.createLogic (1 samples, 0.09%)</title><rect x="523.9" y="1107.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Detacher$$anon$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="523.9" y="1091.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.09%)</title><rect x="523.9" y="1075.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.9" y="1086.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="523.9" y="1059.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.9" y="1070.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="523.9" y="1043.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="526.9" y="1054.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="523.9" y="1027.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.9" y="1038.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="523.9" y="1011.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.9" y="1022.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="523.9" y="995.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.9" y="1006.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="523.9" y="979.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.9" y="990.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.09%)</title><rect x="523.9" y="963.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.9" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (7 samples, 0.62%)</title><rect x="524.9" y="1155.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (6 samples, 0.53%)</title><rect x="524.9" y="1139.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.9" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (6 samples, 0.53%)</title><rect x="524.9" y="1123.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.9" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (6 samples, 0.53%)</title><rect x="524.9" y="1107.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.9" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (6 samples, 0.53%)</title><rect x="524.9" y="1091.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.9" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (6 samples, 0.53%)</title><rect x="524.9" y="1075.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.9" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.18%)</title><rect x="524.9" y="1059.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.9" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.18%)</title><rect x="524.9" y="1043.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.9" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (2 samples, 0.18%)</title><rect x="524.9" y="1027.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (2 samples, 0.18%)</title><rect x="524.9" y="1011.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.9" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.18%)</title><rect x="524.9" y="995.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.9" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.18%)</title><rect x="524.9" y="979.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.9" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="963.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.9" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="947.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.9" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="931.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="915.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.9" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="899.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.9" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="883.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.9" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="867.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.9" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.18%)</title><rect x="524.9" y="851.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.9" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="524.9" y="835.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="527.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="524.9" y="819.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="527.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="524.9" y="803.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="527.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="524.9" y="787.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="527.9" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="526.0" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="526.0" y="819.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.0" y="830.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (1 samples, 0.09%)</title><rect x="527.0" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (1 samples, 0.09%)</title><rect x="527.0" y="1043.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.0" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (1 samples, 0.09%)</title><rect x="527.0" y="1027.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.0" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (1 samples, 0.09%)</title><rect x="527.0" y="1011.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (1 samples, 0.09%)</title><rect x="527.0" y="995.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (1 samples, 0.09%)</title><rect x="527.0" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.0" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="947.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.0" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.0" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.0" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="899.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.0" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="867.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.0" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (1 samples, 0.09%)</title><rect x="527.0" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.0" y="862.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (3 samples, 0.27%)</title><rect x="528.1" y="1059.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.1" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (1 samples, 0.09%)</title><rect x="528.1" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.1" y="1054.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (1 samples, 0.09%)</title><rect x="528.1" y="1027.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.1" y="1038.0"></text>
</g>
<g>
<title>akka/util/WildcardTree.findWithSingleWildcard (1 samples, 0.09%)</title><rect x="528.1" y="1011.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.09%)</title><rect x="528.1" y="995.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.get (1 samples, 0.09%)</title><rect x="528.1" y="979.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.1" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (1 samples, 0.09%)</title><rect x="528.1" y="963.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.1" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (1 samples, 0.09%)</title><rect x="528.1" y="947.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.1" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equalsCharObject (1 samples, 0.09%)</title><rect x="528.1" y="931.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.1" y="942.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (2 samples, 0.18%)</title><rect x="529.1" y="1043.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.1" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (2 samples, 0.18%)</title><rect x="529.1" y="1027.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="529.1" y="1011.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.18%)</title><rect x="529.1" y="995.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.18%)</title><rect x="529.1" y="979.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.18%)</title><rect x="529.1" y="963.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.18%)</title><rect x="529.1" y="947.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="529.1" y="931.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="529.1" y="915.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.1" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="529.1" y="899.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.1" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="529.1" y="883.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="529.1" y="867.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="529.1" y="851.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="529.1" y="835.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.18%)</title><rect x="529.1" y="819.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="529.1" y="803.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="529.1" y="787.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="529.1" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.18%)</title><rect x="529.1" y="755.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="532.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="529.1" y="739.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="529.1" y="723.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="532.1" y="734.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="529.1" y="707.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="532.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="529.1" y="691.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="532.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="529.1" y="675.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="532.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="529.1" y="659.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="532.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="529.1" y="643.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="532.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.18%)</title><rect x="529.1" y="627.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="532.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (1 samples, 0.09%)</title><rect x="531.2" y="1139.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.09%)</title><rect x="531.2" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (1 samples, 0.09%)</title><rect x="531.2" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (1 samples, 0.09%)</title><rect x="531.2" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (1 samples, 0.09%)</title><rect x="531.2" y="1075.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (1 samples, 0.09%)</title><rect x="531.2" y="1059.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (1 samples, 0.09%)</title><rect x="531.2" y="1043.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (1 samples, 0.09%)</title><rect x="531.2" y="1027.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (1 samples, 0.09%)</title><rect x="531.2" y="1011.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.09%)</title><rect x="531.2" y="995.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.2" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="531.2" y="979.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="534.2" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (1 samples, 0.09%)</title><rect x="532.2" y="1155.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.2" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (1 samples, 0.09%)</title><rect x="532.2" y="1139.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.2" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (1 samples, 0.09%)</title><rect x="532.2" y="1123.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.&lt;init&gt; (1 samples, 0.09%)</title><rect x="532.2" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.2" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (2 samples, 0.18%)</title><rect x="533.3" y="1155.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (1 samples, 0.09%)</title><rect x="533.3" y="1139.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="533.3" y="1123.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.3" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="533.3" y="1107.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.3" y="1118.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="534.3" y="1139.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="537.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (2 samples, 0.18%)</title><rect x="535.4" y="1155.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (2 samples, 0.18%)</title><rect x="535.4" y="1139.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.18%)</title><rect x="535.4" y="1123.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (2 samples, 0.18%)</title><rect x="535.4" y="1107.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.4" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (2 samples, 0.18%)</title><rect x="537.5" y="1155.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$1119/857208777.apply (2 samples, 0.18%)</title><rect x="537.5" y="1139.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (1 samples, 0.09%)</title><rect x="538.5" y="1123.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (1 samples, 0.09%)</title><rect x="538.5" y="1107.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (1 samples, 0.09%)</title><rect x="538.5" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (1 samples, 0.09%)</title><rect x="538.5" y="1075.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (1 samples, 0.09%)</title><rect x="538.5" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.09%)</title><rect x="538.5" y="1043.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (1 samples, 0.09%)</title><rect x="538.5" y="1027.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.5" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="538.5" y="1011.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.09%)</title><rect x="538.5" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.5" y="1006.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="538.5" y="979.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="541.5" y="990.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (1 samples, 0.09%)</title><rect x="539.5" y="1251.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (1 samples, 0.09%)</title><rect x="539.5" y="1235.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.5" y="1246.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="539.5" y="1219.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="542.5" y="1230.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="539.5" y="1203.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="542.5" y="1214.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="539.5" y="1187.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.5" y="1198.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="539.5" y="1171.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (1 samples, 0.09%)</title><rect x="540.6" y="1267.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="540.6" y="1251.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="540.6" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="540.6" y="1219.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="540.6" y="1203.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="540.6" y="1187.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="540.6" y="1171.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="540.6" y="1155.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="540.6" y="1139.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="540.6" y="1123.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="540.6" y="1107.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="540.6" y="1091.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="540.6" y="1075.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="540.6" y="1059.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="540.6" y="1043.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="540.6" y="1027.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="540.6" y="1011.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="540.6" y="995.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="540.6" y="979.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="540.6" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.6" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="540.6" y="947.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="543.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="540.6" y="931.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="543.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="540.6" y="915.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.6" y="926.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="540.6" y="899.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.6" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="540.6" y="883.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="540.6" y="867.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="540.6" y="851.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="540.6" y="835.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="540.6" y="819.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.6" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onDownstreamFinish (1 samples, 0.09%)</title><rect x="541.6" y="1283.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.09%)</title><rect x="541.6" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (1 samples, 0.09%)</title><rect x="541.6" y="1251.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.09%)</title><rect x="541.6" y="1235.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.09%)</title><rect x="541.6" y="1219.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFailure (1 samples, 0.09%)</title><rect x="542.7" y="1283.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (1 samples, 0.09%)</title><rect x="542.7" y="1267.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="545.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (1 samples, 0.09%)</title><rect x="542.7" y="1251.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (1 samples, 0.09%)</title><rect x="542.7" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (1 samples, 0.09%)</title><rect x="542.7" y="1219.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (1 samples, 0.09%)</title><rect x="542.7" y="1203.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (1 samples, 0.09%)</title><rect x="542.7" y="1187.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.09%)</title><rect x="542.7" y="1171.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.09%)</title><rect x="542.7" y="1155.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.09%)</title><rect x="542.7" y="1139.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.09%)</title><rect x="542.7" y="1123.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.09%)</title><rect x="542.7" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.09%)</title><rect x="542.7" y="1091.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.09%)</title><rect x="542.7" y="1075.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.09%)</title><rect x="542.7" y="1059.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.09%)</title><rect x="542.7" y="1043.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="542.7" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="542.7" y="1011.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="542.7" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="542.7" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="542.7" y="963.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="542.7" y="947.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.09%)</title><rect x="542.7" y="931.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="542.7" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="542.7" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="542.7" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="542.7" y="867.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="545.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="542.7" y="851.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="542.7" y="835.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.7" y="846.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="542.7" y="819.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.7" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="542.7" y="803.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="545.7" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="542.7" y="787.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="545.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="542.7" y="771.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="545.7" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="542.7" y="755.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.7" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="542.7" y="739.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.7" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (2 samples, 0.18%)</title><rect x="543.7" y="1283.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.7" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (2 samples, 0.18%)</title><rect x="543.7" y="1267.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (2 samples, 0.18%)</title><rect x="543.7" y="1251.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (2 samples, 0.18%)</title><rect x="543.7" y="1235.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (2 samples, 0.18%)</title><rect x="543.7" y="1219.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (2 samples, 0.18%)</title><rect x="543.7" y="1203.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (2 samples, 0.18%)</title><rect x="543.7" y="1187.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (2 samples, 0.18%)</title><rect x="543.7" y="1171.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.18%)</title><rect x="543.7" y="1155.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.18%)</title><rect x="543.7" y="1139.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.18%)</title><rect x="543.7" y="1123.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (2 samples, 0.18%)</title><rect x="543.7" y="1107.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.18%)</title><rect x="543.7" y="1091.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.18%)</title><rect x="543.7" y="1075.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (2 samples, 0.18%)</title><rect x="543.7" y="1059.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (2 samples, 0.18%)</title><rect x="543.7" y="1043.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (2 samples, 0.18%)</title><rect x="543.7" y="1027.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.7" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (2 samples, 0.18%)</title><rect x="543.7" y="1011.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.7" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1027/1196558961.apply (1 samples, 0.09%)</title><rect x="543.7" y="995.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (1 samples, 0.09%)</title><rect x="543.7" y="979.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (1 samples, 0.09%)</title><rect x="543.7" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.09%)</title><rect x="543.7" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.7" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.09%)</title><rect x="543.7" y="931.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="942.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.09%)</title><rect x="543.7" y="915.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.7" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (1 samples, 0.09%)</title><rect x="543.7" y="899.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.7" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.09%)</title><rect x="543.7" y="883.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.7" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.09%)</title><rect x="543.7" y="867.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="878.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (1 samples, 0.09%)</title><rect x="543.7" y="851.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.7" y="862.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="543.7" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.7" y="846.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="543.7" y="819.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.7" y="830.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="543.7" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.7" y="814.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="543.7" y="787.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.7" y="798.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="543.7" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.7" y="782.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="543.7" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="766.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="543.7" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.7" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="543.7" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.7" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="543.7" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.7" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="543.7" y="691.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.7" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="543.7" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.7" y="686.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="543.7" y="659.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="543.7" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="543.7" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.09%)</title><rect x="543.7" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="543.7" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="543.7" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="543.7" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.7" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="543.7" y="547.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="546.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="543.7" y="531.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="543.7" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="546.7" y="526.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="543.7" y="499.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="546.7" y="510.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="543.7" y="483.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="546.7" y="494.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="543.7" y="467.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.7" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="543.7" y="451.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.7" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="543.7" y="435.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="543.7" y="419.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="546.7" y="430.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.linkRootOf (1 samples, 0.09%)</title><rect x="544.8" y="995.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.8" y="1006.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.09%)</title><rect x="544.8" y="979.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.8" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (1 samples, 0.09%)</title><rect x="544.8" y="963.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.onDownstreamFinish (1 samples, 0.09%)</title><rect x="545.8" y="1283.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.09%)</title><rect x="545.8" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.09%)</title><rect x="545.8" y="1251.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.09%)</title><rect x="545.8" y="1235.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (1 samples, 0.09%)</title><rect x="545.8" y="1219.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.09%)</title><rect x="545.8" y="1203.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (1 samples, 0.09%)</title><rect x="546.8" y="1283.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="546.8" y="1267.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="546.8" y="1251.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="546.8" y="1235.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="546.8" y="1219.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="546.8" y="1203.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="546.8" y="1187.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="546.8" y="1171.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="546.8" y="1155.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="546.8" y="1139.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="546.8" y="1123.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="546.8" y="1107.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="546.8" y="1091.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="546.8" y="1075.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="546.8" y="1059.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="546.8" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="546.8" y="1027.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="546.8" y="1011.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="546.8" y="995.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="546.8" y="979.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.8" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="546.8" y="963.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="549.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="546.8" y="947.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="546.8" y="931.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="549.8" y="942.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="546.8" y="915.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.8" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="546.8" y="899.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="549.8" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="546.8" y="883.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="549.8" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="546.8" y="867.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="549.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="546.8" y="851.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="546.8" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.8" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (2 samples, 0.18%)</title><rect x="547.9" y="1283.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="547.9" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="547.9" y="1251.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="547.9" y="1235.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="547.9" y="1219.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="547.9" y="1203.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="547.9" y="1187.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="547.9" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="547.9" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="547.9" y="1139.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.9" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="547.9" y="1123.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="547.9" y="1107.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="547.9" y="1091.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="547.9" y="1075.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="547.9" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="547.9" y="1043.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="547.9" y="1027.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="547.9" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="547.9" y="995.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="547.9" y="979.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="547.9" y="963.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="550.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="547.9" y="947.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="547.9" y="931.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.9" y="942.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (1 samples, 0.09%)</title><rect x="548.9" y="1267.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.9" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (1 samples, 0.09%)</title><rect x="548.9" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.9" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (1 samples, 0.09%)</title><rect x="548.9" y="1235.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.9" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (1 samples, 0.09%)</title><rect x="548.9" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.9" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (1 samples, 0.09%)</title><rect x="548.9" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.9" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (1 samples, 0.09%)</title><rect x="548.9" y="1187.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.9" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (1 samples, 0.09%)</title><rect x="548.9" y="1171.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="548.9" y="1155.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.09%)</title><rect x="548.9" y="1139.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.9" y="1150.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (1 samples, 0.09%)</title><rect x="548.9" y="1123.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.9" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (1 samples, 0.09%)</title><rect x="548.9" y="1107.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.9" y="1118.0"></text>
</g>
<g>
<title>java/net/InetAddress.toString (1 samples, 0.09%)</title><rect x="548.9" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.onUpstreamFailure (1 samples, 0.09%)</title><rect x="550.0" y="1283.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (1 samples, 0.09%)</title><rect x="550.0" y="1267.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (1 samples, 0.09%)</title><rect x="550.0" y="1251.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (1 samples, 0.09%)</title><rect x="550.0" y="1235.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (1 samples, 0.09%)</title><rect x="550.0" y="1219.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (1 samples, 0.09%)</title><rect x="550.0" y="1203.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.09%)</title><rect x="550.0" y="1187.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.09%)</title><rect x="550.0" y="1171.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.09%)</title><rect x="550.0" y="1155.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.18%)</title><rect x="551.0" y="1283.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onDownstreamFinish (1 samples, 0.09%)</title><rect x="551.0" y="1267.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.09%)</title><rect x="551.0" y="1251.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (1 samples, 0.09%)</title><rect x="551.0" y="1235.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.09%)</title><rect x="551.0" y="1219.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.09%)</title><rect x="551.0" y="1203.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.09%)</title><rect x="551.0" y="1187.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.09%)</title><rect x="551.0" y="1171.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/GracefulTerminatorStage$$anon$1$$anon$5.onDownstreamFinish (1 samples, 0.09%)</title><rect x="552.0" y="1267.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (1 samples, 0.09%)</title><rect x="552.0" y="1251.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (1 samples, 0.09%)</title><rect x="552.0" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (1 samples, 0.09%)</title><rect x="552.0" y="1219.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (1 samples, 0.09%)</title><rect x="552.0" y="1203.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.0" y="1214.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.27%)</title><rect x="553.1" y="1283.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="556.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (6 samples, 0.53%)</title><rect x="556.2" y="1299.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (1 samples, 0.09%)</title><rect x="556.2" y="1283.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.09%)</title><rect x="556.2" y="1267.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="556.2" y="1251.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (1 samples, 0.09%)</title><rect x="557.3" y="1283.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.09%)</title><rect x="557.3" y="1267.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="557.3" y="1251.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (1 samples, 0.09%)</title><rect x="558.3" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="558.3" y="1267.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="558.3" y="1251.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="558.3" y="1235.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="558.3" y="1219.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="558.3" y="1203.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="558.3" y="1187.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="558.3" y="1171.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="558.3" y="1155.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="558.3" y="1139.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="558.3" y="1123.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="558.3" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="558.3" y="1091.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="558.3" y="1075.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="558.3" y="1059.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="558.3" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="558.3" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="558.3" y="1011.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="558.3" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="558.3" y="979.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.3" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="558.3" y="963.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="561.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="558.3" y="947.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="558.3" y="931.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="561.3" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="558.3" y="915.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="561.3" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="558.3" y="899.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.3" y="910.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="558.3" y="883.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.3" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="558.3" y="867.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.3" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (3 samples, 0.27%)</title><rect x="559.3" y="1283.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.27%)</title><rect x="559.3" y="1267.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="559.3" y="1251.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.27%)</title><rect x="559.3" y="1235.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.27%)</title><rect x="559.3" y="1219.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="559.3" y="1203.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.27%)</title><rect x="559.3" y="1187.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.27%)</title><rect x="559.3" y="1171.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.27%)</title><rect x="559.3" y="1155.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.3" y="1166.0"></text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.09%)</title><rect x="559.3" y="1139.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="562.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="559.3" y="1123.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="562.3" y="1134.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="559.3" y="1107.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="562.3" y="1118.0"></text>
</g>
<g>
<title>signalHandler(int, siginfo_t*, void*) (1 samples, 0.09%)</title><rect x="559.3" y="1091.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="562.3" y="1102.0"></text>
</g>
<g>
<title>JVM_handle_linux_signal (1 samples, 0.09%)</title><rect x="559.3" y="1075.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="562.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.mailbox (1 samples, 0.09%)</title><rect x="560.4" y="1139.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.mailbox$ (1 samples, 0.09%)</title><rect x="560.4" y="1123.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="561.4" y="1139.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.4" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="561.4" y="1123.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.4" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="561.4" y="1107.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.4" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="561.4" y="1091.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="561.4" y="1075.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="561.4" y="1059.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="561.4" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="561.4" y="1027.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="561.4" y="1011.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="561.4" y="995.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="561.4" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="561.4" y="963.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="564.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="561.4" y="947.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="564.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="561.4" y="931.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="564.4" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="561.4" y="915.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.4" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="561.4" y="899.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="564.4" y="910.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="561.4" y="883.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.4" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="561.4" y="867.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.4" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (85 samples, 7.51%)</title><rect x="562.5" y="1299.0" width="88.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.5" y="1310.0">akka/strea..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (20 samples, 1.77%)</title><rect x="562.5" y="1283.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.5" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (18 samples, 1.59%)</title><rect x="564.6" y="1267.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (18 samples, 1.59%)</title><rect x="564.6" y="1251.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (18 samples, 1.59%)</title><rect x="564.6" y="1235.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (18 samples, 1.59%)</title><rect x="564.6" y="1219.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (18 samples, 1.59%)</title><rect x="564.6" y="1203.0" width="18.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (18 samples, 1.59%)</title><rect x="564.6" y="1187.0" width="18.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (17 samples, 1.50%)</title><rect x="564.6" y="1171.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$591/1168806145.apply (17 samples, 1.50%)</title><rect x="564.6" y="1155.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (17 samples, 1.50%)</title><rect x="564.6" y="1139.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$590/648798295.apply (17 samples, 1.50%)</title><rect x="564.6" y="1123.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (17 samples, 1.50%)</title><rect x="564.6" y="1107.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (17 samples, 1.50%)</title><rect x="564.6" y="1091.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (17 samples, 1.50%)</title><rect x="564.6" y="1075.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (17 samples, 1.50%)</title><rect x="564.6" y="1059.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (17 samples, 1.50%)</title><rect x="564.6" y="1043.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (17 samples, 1.50%)</title><rect x="564.6" y="1027.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (17 samples, 1.50%)</title><rect x="564.6" y="1011.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (17 samples, 1.50%)</title><rect x="564.6" y="995.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (17 samples, 1.50%)</title><rect x="564.6" y="979.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (16 samples, 1.41%)</title><rect x="564.6" y="963.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (5 samples, 0.44%)</title><rect x="564.6" y="947.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (5 samples, 0.44%)</title><rect x="564.6" y="931.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (5 samples, 0.44%)</title><rect x="564.6" y="915.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.6" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1921698150.apply (5 samples, 0.44%)</title><rect x="564.6" y="899.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (5 samples, 0.44%)</title><rect x="564.6" y="883.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (5 samples, 0.44%)</title><rect x="564.6" y="867.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (5 samples, 0.44%)</title><rect x="564.6" y="851.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.success (1 samples, 0.09%)</title><rect x="564.6" y="835.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.success (1 samples, 0.09%)</title><rect x="564.6" y="819.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="830.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.27%)</title><rect x="565.6" y="835.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.6" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.27%)</title><rect x="565.6" y="819.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$594/2125078240.apply (3 samples, 0.27%)</title><rect x="565.6" y="803.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.6" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (3 samples, 0.27%)</title><rect x="565.6" y="787.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.6" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (3 samples, 0.27%)</title><rect x="565.6" y="771.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.6" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (3 samples, 0.27%)</title><rect x="565.6" y="755.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (3 samples, 0.27%)</title><rect x="565.6" y="739.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (3 samples, 0.27%)</title><rect x="565.6" y="723.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.6" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (3 samples, 0.27%)</title><rect x="565.6" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.6" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (3 samples, 0.27%)</title><rect x="565.6" y="691.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.6" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (3 samples, 0.27%)</title><rect x="565.6" y="675.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.6" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (3 samples, 0.27%)</title><rect x="565.6" y="659.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (3 samples, 0.27%)</title><rect x="565.6" y="643.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.6" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (1 samples, 0.09%)</title><rect x="565.6" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.6" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (1 samples, 0.09%)</title><rect x="565.6" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.6" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (1 samples, 0.09%)</title><rect x="565.6" y="595.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.6" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.year (1 samples, 0.09%)</title><rect x="565.6" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.6" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year$ (1 samples, 0.09%)</title><rect x="565.6" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.6" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year (1 samples, 0.09%)</title><rect x="565.6" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.6" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.digit4 (1 samples, 0.09%)</title><rect x="565.6" y="531.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.6" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4$ (1 samples, 0.09%)</title><rect x="565.6" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.6" y="526.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4 (1 samples, 0.09%)</title><rect x="565.6" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.6" y="510.0"></text>
</g>
<g>
<title>akka/parboiled2/CharPredicate$MaskBased.apply (1 samples, 0.09%)</title><rect x="565.6" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.6" y="494.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname$minusl (1 samples, 0.09%)</title><rect x="566.6" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.6" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl$ (1 samples, 0.09%)</title><rect x="566.6" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.6" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl (1 samples, 0.09%)</title><rect x="566.6" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.6" y="606.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__advance (1 samples, 0.09%)</title><rect x="566.6" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.6" y="590.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToInt (1 samples, 0.09%)</title><rect x="567.7" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.intValue (1 samples, 0.09%)</title><rect x="567.7" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="567.7" y="595.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="567.7" y="579.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="567.7" y="563.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.7" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="567.7" y="547.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.7" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="567.7" y="531.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="570.7" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="567.7" y="515.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="570.7" y="526.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.toHList (1 samples, 0.09%)</title><rect x="568.7" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.7" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="568.7" y="819.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="571.7" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (10 samples, 0.88%)</title><rect x="569.8" y="947.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (9 samples, 0.80%)</title><rect x="569.8" y="931.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.8" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1921698150.apply (9 samples, 0.80%)</title><rect x="569.8" y="915.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.8" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (9 samples, 0.80%)</title><rect x="569.8" y="899.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.8" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (4 samples, 0.35%)</title><rect x="569.8" y="883.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.8" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.35%)</title><rect x="569.8" y="867.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.8" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.success (1 samples, 0.09%)</title><rect x="569.8" y="851.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.8" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.success (1 samples, 0.09%)</title><rect x="569.8" y="835.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.8" y="846.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.18%)</title><rect x="570.8" y="851.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.8" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.18%)</title><rect x="570.8" y="835.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.8" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$601/1614199787.apply (2 samples, 0.18%)</title><rect x="570.8" y="819.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.8" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (2 samples, 0.18%)</title><rect x="570.8" y="803.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.8" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (2 samples, 0.18%)</title><rect x="570.8" y="787.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.8" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (2 samples, 0.18%)</title><rect x="570.8" y="771.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.8" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (2 samples, 0.18%)</title><rect x="570.8" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.8" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (2 samples, 0.18%)</title><rect x="570.8" y="739.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.8" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (2 samples, 0.18%)</title><rect x="570.8" y="723.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.8" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (2 samples, 0.18%)</title><rect x="570.8" y="707.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.8" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$22 (1 samples, 0.09%)</title><rect x="570.8" y="691.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.8" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.parameter (1 samples, 0.09%)</title><rect x="570.8" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.8" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.parameter$ (1 samples, 0.09%)</title><rect x="570.8" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.8" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.parameter (1 samples, 0.09%)</title><rect x="570.8" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.8" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.value (1 samples, 0.09%)</title><rect x="570.8" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.8" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.value$ (1 samples, 0.09%)</title><rect x="570.8" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.8" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.value (1 samples, 0.09%)</title><rect x="570.8" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.8" y="606.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.result (1 samples, 0.09%)</title><rect x="571.9" y="691.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.9" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="571.9" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.9" y="686.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="571.9" y="659.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.9" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initFrom (1 samples, 0.09%)</title><rect x="571.9" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.9" y="654.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="571.9" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.9" y="638.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="571.9" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.9" y="622.0"></text>
</g>
<g>
<title>akka/parboiled2/ValueStack.toHList (1 samples, 0.09%)</title><rect x="572.9" y="851.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.9" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$601/1614199787.apply (1 samples, 0.09%)</title><rect x="572.9" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (4 samples, 0.35%)</title><rect x="573.9" y="883.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.9" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.35%)</title><rect x="573.9" y="867.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.9" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.35%)</title><rect x="573.9" y="851.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.9" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.35%)</title><rect x="573.9" y="835.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.9" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$594/2125078240.apply (4 samples, 0.35%)</title><rect x="573.9" y="819.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.9" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (4 samples, 0.35%)</title><rect x="573.9" y="803.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.9" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (4 samples, 0.35%)</title><rect x="573.9" y="787.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.9" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (4 samples, 0.35%)</title><rect x="573.9" y="771.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.9" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (4 samples, 0.35%)</title><rect x="573.9" y="755.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.9" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (4 samples, 0.35%)</title><rect x="573.9" y="739.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.9" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (4 samples, 0.35%)</title><rect x="573.9" y="723.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.9" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (4 samples, 0.35%)</title><rect x="573.9" y="707.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.9" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (4 samples, 0.35%)</title><rect x="573.9" y="691.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.9" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (4 samples, 0.35%)</title><rect x="573.9" y="675.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.9" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (4 samples, 0.35%)</title><rect x="573.9" y="659.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.9" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date1 (2 samples, 0.18%)</title><rect x="573.9" y="643.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.9" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1$ (2 samples, 0.18%)</title><rect x="573.9" y="627.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.9" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.date1 (2 samples, 0.18%)</title><rect x="573.9" y="611.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.9" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.year (2 samples, 0.18%)</title><rect x="573.9" y="595.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.9" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year$ (2 samples, 0.18%)</title><rect x="573.9" y="579.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.9" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.year (2 samples, 0.18%)</title><rect x="573.9" y="563.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.9" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.digit4 (2 samples, 0.18%)</title><rect x="573.9" y="547.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.9" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4$ (2 samples, 0.18%)</title><rect x="573.9" y="531.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.9" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit4 (2 samples, 0.18%)</title><rect x="573.9" y="515.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.9" y="526.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.charAt (1 samples, 0.09%)</title><rect x="575.0" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="510.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname$minusl (1 samples, 0.09%)</title><rect x="576.0" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.0" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl$ (1 samples, 0.09%)</title><rect x="576.0" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.0" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl (1 samples, 0.09%)</title><rect x="576.0" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.0" y="622.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToInteger (1 samples, 0.09%)</title><rect x="576.0" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.0" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.time$minusof$minusday (1 samples, 0.09%)</title><rect x="577.1" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.1" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday$ (1 samples, 0.09%)</title><rect x="577.1" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.1" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.time$minusof$minusday (1 samples, 0.09%)</title><rect x="577.1" y="611.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.1" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.hour (1 samples, 0.09%)</title><rect x="577.1" y="595.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.1" y="606.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.hour$ (1 samples, 0.09%)</title><rect x="577.1" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.1" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.hour (1 samples, 0.09%)</title><rect x="577.1" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.1" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.digit2 (1 samples, 0.09%)</title><rect x="577.1" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.1" y="558.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit2$ (1 samples, 0.09%)</title><rect x="577.1" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.1" y="542.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.digit2 (1 samples, 0.09%)</title><rect x="577.1" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.1" y="526.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.charAt (1 samples, 0.09%)</title><rect x="577.1" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.1" y="510.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.apply (1 samples, 0.09%)</title><rect x="578.1" y="883.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.1" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.09%)</title><rect x="578.1" y="867.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.1" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.09%)</title><rect x="578.1" y="851.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.1" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.09%)</title><rect x="578.1" y="835.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.1" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46$$Lambda$592/717947816.apply (1 samples, 0.09%)</title><rect x="578.1" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.1" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$46.$anonfun$apply$46 (1 samples, 0.09%)</title><rect x="578.1" y="803.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.1" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.server (1 samples, 0.09%)</title><rect x="578.1" y="787.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.1" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server$ (1 samples, 0.09%)</title><rect x="578.1" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.1" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.server (1 samples, 0.09%)</title><rect x="578.1" y="755.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Server.&lt;init&gt; (1 samples, 0.09%)</title><rect x="578.1" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.1" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (1 samples, 0.09%)</title><rect x="579.2" y="931.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.2" y="942.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.apply (1 samples, 0.09%)</title><rect x="579.2" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.2" y="926.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="579.2" y="899.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="582.2" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="579.2" y="883.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="582.2" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="579.2" y="867.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.2" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="579.2" y="851.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.2" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="579.2" y="835.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.2" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="579.2" y="819.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="579.2" y="803.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="582.2" y="814.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="580.2" y="947.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.2" y="958.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="580.2" y="931.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.2" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="580.2" y="915.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.2" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="580.2" y="899.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.09%)</title><rect x="581.2" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.2" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.doPull (1 samples, 0.09%)</title><rect x="582.3" y="1171.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull$ (1 samples, 0.09%)</title><rect x="582.3" y="1155.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.doPull (1 samples, 0.09%)</title><rect x="582.3" y="1139.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.head (1 samples, 0.09%)</title><rect x="582.3" y="1123.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.head$ (1 samples, 0.09%)</title><rect x="582.3" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.head (1 samples, 0.09%)</title><rect x="582.3" y="1091.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.iterator (1 samples, 0.09%)</title><rect x="582.3" y="1075.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (1 samples, 0.09%)</title><rect x="582.3" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator$ (1 samples, 0.09%)</title><rect x="582.3" y="1043.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedLinearSeqOps.iterator (1 samples, 0.09%)</title><rect x="582.3" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (23 samples, 2.03%)</title><rect x="583.3" y="1283.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.3" y="1294.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (22 samples, 1.94%)</title><rect x="583.3" y="1267.0" width="23.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.3" y="1278.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (20 samples, 1.77%)</title><rect x="583.3" y="1251.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (20 samples, 1.77%)</title><rect x="583.3" y="1235.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (20 samples, 1.77%)</title><rect x="583.3" y="1219.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (20 samples, 1.77%)</title><rect x="583.3" y="1203.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$510/1256694122.apply (18 samples, 1.59%)</title><rect x="583.3" y="1187.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (18 samples, 1.59%)</title><rect x="583.3" y="1171.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (18 samples, 1.59%)</title><rect x="583.3" y="1155.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (18 samples, 1.59%)</title><rect x="583.3" y="1139.0" width="18.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (18 samples, 1.59%)</title><rect x="583.3" y="1123.0" width="18.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (18 samples, 1.59%)</title><rect x="583.3" y="1107.0" width="18.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (18 samples, 1.59%)</title><rect x="583.3" y="1091.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (14 samples, 1.24%)</title><rect x="583.3" y="1075.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (14 samples, 1.24%)</title><rect x="583.3" y="1059.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (14 samples, 1.24%)</title><rect x="583.3" y="1043.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (14 samples, 1.24%)</title><rect x="583.3" y="1027.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (5 samples, 0.44%)</title><rect x="583.3" y="1011.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/Attributes.nameOrDefault (2 samples, 0.18%)</title><rect x="583.3" y="995.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.3" y="1006.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$2 (2 samples, 0.18%)</title><rect x="583.3" y="979.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.3" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="585.4" y="995.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.4" y="1006.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (1 samples, 0.09%)</title><rect x="585.4" y="979.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.4" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (2 samples, 0.18%)</title><rect x="586.4" y="995.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (2 samples, 0.18%)</title><rect x="586.4" y="979.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.4" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError.createLogic (1 samples, 0.09%)</title><rect x="586.4" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.&lt;init&gt; (1 samples, 0.09%)</title><rect x="586.4" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.4" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.09%)</title><rect x="586.4" y="931.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.4" y="942.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (1 samples, 0.09%)</title><rect x="587.5" y="963.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (1 samples, 0.09%)</title><rect x="587.5" y="947.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.5" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.&lt;init&gt; (1 samples, 0.09%)</title><rect x="587.5" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.5" y="942.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.size (1 samples, 0.09%)</title><rect x="587.5" y="915.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.5" y="926.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size$ (1 samples, 0.09%)</title><rect x="587.5" y="899.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.5" y="910.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.size (1 samples, 0.09%)</title><rect x="587.5" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.5" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="587.5" y="867.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="590.5" y="878.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (1 samples, 0.09%)</title><rect x="588.5" y="1011.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl$$anon$1.apply (1 samples, 0.09%)</title><rect x="588.5" y="995.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.5" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (1 samples, 0.09%)</title><rect x="588.5" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (1 samples, 0.09%)</title><rect x="589.6" y="1011.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.6" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (1 samples, 0.09%)</title><rect x="589.6" y="995.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.09%)</title><rect x="589.6" y="979.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (2 samples, 0.18%)</title><rect x="590.6" y="1011.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (2 samples, 0.18%)</title><rect x="590.6" y="995.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="591.7" y="979.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.7" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="591.7" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.7" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (3 samples, 0.27%)</title><rect x="592.7" y="1011.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.7" y="1022.0"></text>
</g>
<g>
<title>akka/stream/FanInShape.outlets (1 samples, 0.09%)</title><rect x="593.7" y="995.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireOut (1 samples, 0.09%)</title><rect x="594.8" y="995.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.8" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="594.8" y="979.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.8" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (1 samples, 0.09%)</title><rect x="594.8" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (1 samples, 0.09%)</title><rect x="594.8" y="947.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.8" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (1 samples, 0.09%)</title><rect x="595.8" y="1011.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.8" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$$$Lambda$473/1738752170.apply (1 samples, 0.09%)</title><rect x="595.8" y="995.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.8" y="1006.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (1 samples, 0.09%)</title><rect x="595.8" y="979.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.8" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.09%)</title><rect x="596.9" y="1011.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (2 samples, 0.18%)</title><rect x="597.9" y="1075.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (1 samples, 0.09%)</title><rect x="597.9" y="1059.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.09%)</title><rect x="599.0" y="1059.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.initialAttributes (1 samples, 0.09%)</title><rect x="599.0" y="1043.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (1 samples, 0.09%)</title><rect x="599.0" y="1027.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.0" y="1038.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (1 samples, 0.09%)</title><rect x="600.0" y="1075.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.0" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (1 samples, 0.09%)</title><rect x="600.0" y="1059.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="600.0" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="600.0" y="1027.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (1 samples, 0.09%)</title><rect x="600.0" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.completeIfPossible (1 samples, 0.09%)</title><rect x="600.0" y="995.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="600.0" y="979.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="603.0" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.&lt;init&gt; (1 samples, 0.09%)</title><rect x="601.0" y="1075.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.0" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.09%)</title><rect x="601.0" y="1059.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="604.0" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.09%)</title><rect x="601.0" y="1043.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.0" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.09%)</title><rect x="601.0" y="1027.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="604.0" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.09%)</title><rect x="601.0" y="1011.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="604.0" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.09%)</title><rect x="601.0" y="995.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="604.0" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.09%)</title><rect x="601.0" y="979.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (1 samples, 0.09%)</title><rect x="602.1" y="1187.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="1198.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (1 samples, 0.09%)</title><rect x="602.1" y="1171.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.1" y="1182.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (1 samples, 0.09%)</title><rect x="602.1" y="1155.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.1" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.09%)</title><rect x="602.1" y="1139.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.1" y="1150.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (1 samples, 0.09%)</title><rect x="602.1" y="1123.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.1" y="1134.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (1 samples, 0.09%)</title><rect x="602.1" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.1" y="1118.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getLogger (1 samples, 0.09%)</title><rect x="602.1" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.pushRequest (1 samples, 0.09%)</title><rect x="603.1" y="1187.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.emitRequest (1 samples, 0.09%)</title><rect x="603.1" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$RichHttpRequest$.debugString$extension (1 samples, 0.09%)</title><rect x="604.2" y="1251.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.2" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/util/package$.akka$http$impl$util$package$$entityDebugInfo (1 samples, 0.09%)</title><rect x="604.2" y="1235.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.2" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.equals (1 samples, 0.09%)</title><rect x="604.2" y="1219.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.equals (1 samples, 0.09%)</title><rect x="604.2" y="1203.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.2" y="1214.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.find (1 samples, 0.09%)</title><rect x="605.2" y="1251.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.2" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find$ (1 samples, 0.09%)</title><rect x="605.2" y="1235.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.2" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.find (1 samples, 0.09%)</title><rect x="605.2" y="1219.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$503/1621557412.apply (1 samples, 0.09%)</title><rect x="605.2" y="1203.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$dispatchRequest$1$adapted (1 samples, 0.09%)</title><rect x="605.2" y="1187.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$dispatchRequest$1 (1 samples, 0.09%)</title><rect x="605.2" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.2" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.isIdle (1 samples, 0.09%)</title><rect x="605.2" y="1155.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (1 samples, 0.09%)</title><rect x="606.3" y="1267.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.3" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.09%)</title><rect x="606.3" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (1 samples, 0.09%)</title><rect x="606.3" y="1235.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (1 samples, 0.09%)</title><rect x="606.3" y="1219.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="606.3" y="1203.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="609.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (8 samples, 0.71%)</title><rect x="607.3" y="1283.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (8 samples, 0.71%)</title><rect x="607.3" y="1267.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (8 samples, 0.71%)</title><rect x="607.3" y="1251.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (8 samples, 0.71%)</title><rect x="607.3" y="1235.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (8 samples, 0.71%)</title><rect x="607.3" y="1219.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (8 samples, 0.71%)</title><rect x="607.3" y="1203.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (8 samples, 0.71%)</title><rect x="607.3" y="1187.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (8 samples, 0.71%)</title><rect x="607.3" y="1171.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1149/155701790.apply (1 samples, 0.09%)</title><rect x="607.3" y="1155.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (1 samples, 0.09%)</title><rect x="607.3" y="1139.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$1148/1437669706.apply (1 samples, 0.09%)</title><rect x="607.3" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (1 samples, 0.09%)</title><rect x="607.3" y="1107.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (1 samples, 0.09%)</title><rect x="607.3" y="1091.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (1 samples, 0.09%)</title><rect x="607.3" y="1075.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (1 samples, 0.09%)</title><rect x="607.3" y="1059.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (1 samples, 0.09%)</title><rect x="607.3" y="1043.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (1 samples, 0.09%)</title><rect x="607.3" y="1027.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (1 samples, 0.09%)</title><rect x="607.3" y="1011.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (1 samples, 0.09%)</title><rect x="607.3" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (1 samples, 0.09%)</title><rect x="607.3" y="979.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (1 samples, 0.09%)</title><rect x="607.3" y="963.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (1 samples, 0.09%)</title><rect x="607.3" y="947.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (1 samples, 0.09%)</title><rect x="607.3" y="931.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.3" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (1 samples, 0.09%)</title><rect x="607.3" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.3" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (1 samples, 0.09%)</title><rect x="607.3" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.3" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$436/108746394.apply (6 samples, 0.53%)</title><rect x="608.3" y="1155.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (6 samples, 0.53%)</title><rect x="608.3" y="1139.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (6 samples, 0.53%)</title><rect x="608.3" y="1123.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (6 samples, 0.53%)</title><rect x="608.3" y="1107.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (6 samples, 0.53%)</title><rect x="608.3" y="1091.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (6 samples, 0.53%)</title><rect x="608.3" y="1075.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (4 samples, 0.35%)</title><rect x="608.3" y="1059.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (4 samples, 0.35%)</title><rect x="608.3" y="1043.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (4 samples, 0.35%)</title><rect x="608.3" y="1027.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (4 samples, 0.35%)</title><rect x="608.3" y="1011.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (4 samples, 0.35%)</title><rect x="608.3" y="995.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (2 samples, 0.18%)</title><rect x="608.3" y="979.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.3" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$424/1921698150.apply (2 samples, 0.18%)</title><rect x="608.3" y="963.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.18%)</title><rect x="608.3" y="947.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.3" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (2 samples, 0.18%)</title><rect x="608.3" y="931.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.3" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.18%)</title><rect x="608.3" y="915.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.3" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.18%)</title><rect x="608.3" y="899.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.3" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.18%)</title><rect x="608.3" y="883.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$601/1614199787.apply (2 samples, 0.18%)</title><rect x="608.3" y="867.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (2 samples, 0.18%)</title><rect x="608.3" y="851.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (2 samples, 0.18%)</title><rect x="608.3" y="835.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.3" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (2 samples, 0.18%)</title><rect x="608.3" y="819.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.3" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (2 samples, 0.18%)</title><rect x="608.3" y="803.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.3" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (1 samples, 0.09%)</title><rect x="608.3" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.3" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (1 samples, 0.09%)</title><rect x="608.3" y="771.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.3" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (1 samples, 0.09%)</title><rect x="608.3" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.3" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (1 samples, 0.09%)</title><rect x="608.3" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.3" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/MediaTypes$.getForKey (1 samples, 0.09%)</title><rect x="608.3" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.3" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey$ (1 samples, 0.09%)</title><rect x="608.3" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.3" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/util/ObjectRegistry.getForKey (1 samples, 0.09%)</title><rect x="608.3" y="691.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.3" y="702.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (1 samples, 0.09%)</title><rect x="608.3" y="675.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.3" y="686.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (1 samples, 0.09%)</title><rect x="608.3" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.3" y="670.0"></text>
</g>
<g>
<title>scala/Tuple2.hashCode (1 samples, 0.09%)</title><rect x="608.3" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.3" y="654.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (1 samples, 0.09%)</title><rect x="608.3" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.3" y="638.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (1 samples, 0.09%)</title><rect x="608.3" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.3" y="622.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mix (1 samples, 0.09%)</title><rect x="608.3" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.3" y="606.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.mixLast (1 samples, 0.09%)</title><rect x="608.3" y="579.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.3" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minustype (1 samples, 0.09%)</title><rect x="609.4" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.4" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype$ (1 samples, 0.09%)</title><rect x="609.4" y="771.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.4" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.media$minustype (1 samples, 0.09%)</title><rect x="609.4" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.4" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.rec$22 (1 samples, 0.09%)</title><rect x="609.4" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.4" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.ws (1 samples, 0.09%)</title><rect x="609.4" y="723.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.4" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.ws$ (1 samples, 0.09%)</title><rect x="609.4" y="707.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.4" y="718.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="609.4" y="691.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="612.4" y="702.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="609.4" y="675.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="612.4" y="686.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="609.4" y="659.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="612.4" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="609.4" y="643.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.4" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="609.4" y="627.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.4" y="638.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="609.4" y="611.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="612.4" y="622.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="609.4" y="595.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.4" y="606.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="609.4" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.4" y="590.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="609.4" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.4" y="574.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (2 samples, 0.18%)</title><rect x="610.4" y="979.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (2 samples, 0.18%)</title><rect x="610.4" y="963.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.4" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="611.5" y="947.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="614.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMethod (1 samples, 0.09%)</title><rect x="612.5" y="1059.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMethod$1 (1 samples, 0.09%)</title><rect x="612.5" y="1043.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (1 samples, 0.09%)</title><rect x="613.6" y="1059.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (1 samples, 0.09%)</title><rect x="613.6" y="1043.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (1 samples, 0.09%)</title><rect x="613.6" y="1027.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.6" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (1 samples, 0.09%)</title><rect x="613.6" y="1011.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.6" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (1 samples, 0.09%)</title><rect x="613.6" y="995.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.6" y="1006.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (1 samples, 0.09%)</title><rect x="613.6" y="979.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.6" y="990.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="613.6" y="963.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.6" y="974.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="613.6" y="947.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.6" y="958.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="613.6" y="931.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.6" y="942.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="613.6" y="915.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.6" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="613.6" y="899.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.6" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="614.6" y="1155.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="617.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/One2OneBidiFlow$One2OneBidi$$anon$1$$anon$4.onPush (1 samples, 0.09%)</title><rect x="615.6" y="1283.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.09%)</title><rect x="615.6" y="1267.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="615.6" y="1251.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onPush (1 samples, 0.09%)</title><rect x="616.7" y="1283.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.09%)</title><rect x="616.7" y="1267.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="616.7" y="1251.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (3 samples, 0.27%)</title><rect x="617.7" y="1283.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$$$Lambda$1022/398797500.apply (2 samples, 0.18%)</title><rect x="617.7" y="1267.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.$anonfun$parsing$1 (2 samples, 0.18%)</title><rect x="617.7" y="1251.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$.establishAbsoluteUri$1 (2 samples, 0.18%)</title><rect x="617.7" y="1235.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/ParserOutput$RequestStart.copy (1 samples, 0.09%)</title><rect x="617.7" y="1219.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.7" y="1230.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="617.7" y="1203.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="620.7" y="1214.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="617.7" y="1187.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="620.7" y="1198.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="617.7" y="1171.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="620.7" y="1182.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="617.7" y="1155.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.7" y="1166.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="617.7" y="1139.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="620.7" y="1150.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="617.7" y="1123.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.7" y="1134.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="617.7" y="1107.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.7" y="1118.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="617.7" y="1091.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.7" y="1102.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="617.7" y="1075.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="620.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.effectiveUri (1 samples, 0.09%)</title><rect x="618.8" y="1219.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest$.findHostAndWsUpgrade$1 (1 samples, 0.09%)</title><rect x="618.8" y="1203.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.09%)</title><rect x="619.8" y="1267.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="619.8" y="1251.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.8" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="619.8" y="1235.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="622.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (28 samples, 2.47%)</title><rect x="620.8" y="1283.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.8" y="1294.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1020/370501748.apply (28 samples, 2.47%)</title><rect x="620.8" y="1267.0" width="29.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="1278.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (28 samples, 2.47%)</title><rect x="620.8" y="1251.0" width="29.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.8" y="1262.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$984/1333899436.apply (28 samples, 2.47%)</title><rect x="620.8" y="1235.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.8" y="1246.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (28 samples, 2.47%)</title><rect x="620.8" y="1219.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.8" y="1230.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1161/373180626.apply (26 samples, 2.30%)</title><rect x="620.8" y="1203.0" width="27.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.8" y="1214.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (26 samples, 2.30%)</title><rect x="620.8" y="1187.0" width="27.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.8" y="1198.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1159/863015594.apply (1 samples, 0.09%)</title><rect x="620.8" y="1171.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$2 (1 samples, 0.09%)</title><rect x="620.8" y="1155.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.8" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.09%)</title><rect x="620.8" y="1139.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.8" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$979/645480666.apply (1 samples, 0.09%)</title><rect x="620.8" y="1123.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.8" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$1 (1 samples, 0.09%)</title><rect x="620.8" y="1107.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.8" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.09%)</title><rect x="620.8" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.8" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$984/1333899436.apply (24 samples, 2.12%)</title><rect x="621.9" y="1171.0" width="25.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.9" y="1182.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (24 samples, 2.12%)</title><rect x="621.9" y="1155.0" width="25.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.9" y="1166.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$983/1936452520.apply (1 samples, 0.09%)</title><rect x="621.9" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (1 samples, 0.09%)</title><rect x="621.9" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$978/1159519458.apply (1 samples, 0.09%)</title><rect x="621.9" y="1107.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (1 samples, 0.09%)</title><rect x="621.9" y="1091.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1154/1217525299.apply (1 samples, 0.09%)</title><rect x="621.9" y="1075.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleRejections$1 (1 samples, 0.09%)</title><rect x="621.9" y="1059.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/735228558.linkToTargetMethod (1 samples, 0.09%)</title><rect x="621.9" y="1043.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2002174925.invokeStatic (1 samples, 0.09%)</title><rect x="621.9" y="1027.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$1164/1693879889.get$Lambda (1 samples, 0.09%)</title><rect x="621.9" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.apply (1 samples, 0.09%)</title><rect x="621.9" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1171/149152431.apply (23 samples, 2.03%)</title><rect x="622.9" y="1139.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="1150.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (23 samples, 2.03%)</title><rect x="622.9" y="1123.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.9" y="1134.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$984/1333899436.apply (23 samples, 2.03%)</title><rect x="622.9" y="1107.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.9" y="1118.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (23 samples, 2.03%)</title><rect x="622.9" y="1091.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.9" y="1102.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1186/526646268.apply (22 samples, 1.94%)</title><rect x="622.9" y="1075.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.9" y="1086.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (22 samples, 1.94%)</title><rect x="622.9" y="1059.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.9" y="1070.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$984/1333899436.apply (22 samples, 1.94%)</title><rect x="622.9" y="1043.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.9" y="1054.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (22 samples, 1.94%)</title><rect x="622.9" y="1027.0" width="23.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.9" y="1038.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1187/1876874898.apply (22 samples, 1.94%)</title><rect x="622.9" y="1011.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.9" y="1022.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (22 samples, 1.94%)</title><rect x="622.9" y="995.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.9" y="1006.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1162/612247304.apply (2 samples, 0.18%)</title><rect x="622.9" y="979.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (2 samples, 0.18%)</title><rect x="622.9" y="963.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$982/536352541.apply (2 samples, 0.18%)</title><rect x="622.9" y="947.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (2 samples, 0.18%)</title><rect x="622.9" y="931.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.9" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1185/1844546755.apply (2 samples, 0.18%)</title><rect x="622.9" y="915.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.9" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (2 samples, 0.18%)</title><rect x="622.9" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$980/1456296810.apply (2 samples, 0.18%)</title><rect x="622.9" y="883.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (2 samples, 0.18%)</title><rect x="622.9" y="867.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.9" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.18%)</title><rect x="622.9" y="851.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.9" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1177/1148905514.apply (2 samples, 0.18%)</title><rect x="622.9" y="835.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.9" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (2 samples, 0.18%)</title><rect x="622.9" y="819.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.9" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$982/536352541.apply (2 samples, 0.18%)</title><rect x="622.9" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.9" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (2 samples, 0.18%)</title><rect x="622.9" y="787.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.9" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1199/1432040903.apply (2 samples, 0.18%)</title><rect x="622.9" y="771.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.9" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (2 samples, 0.18%)</title><rect x="622.9" y="755.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.9" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (1 samples, 0.09%)</title><rect x="622.9" y="739.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.9" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (1 samples, 0.09%)</title><rect x="622.9" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.9" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (1 samples, 0.09%)</title><rect x="622.9" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.9" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (1 samples, 0.09%)</title><rect x="622.9" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.9" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.transform (1 samples, 0.09%)</title><rect x="622.9" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.9" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.transform$ (1 samples, 0.09%)</title><rect x="622.9" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.9" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.transform (1 samples, 0.09%)</title><rect x="622.9" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.9" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.withMaterializer (1 samples, 0.09%)</title><rect x="622.9" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.9" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="622.9" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.9" y="622.0"></text>
</g>
<g>
<title>akka/http/javadsl/unmarshalling/Unmarshaller.&lt;init&gt; (1 samples, 0.09%)</title><rect x="622.9" y="595.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.9" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.withMaterializer (1 samples, 0.09%)</title><rect x="622.9" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$1016/1964470056.apply (1 samples, 0.09%)</title><rect x="624.0" y="739.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addDirectiveApply$1 (1 samples, 0.09%)</title><rect x="624.0" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.09%)</title><rect x="624.0" y="707.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1156/1720360722.apply (1 samples, 0.09%)</title><rect x="624.0" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (1 samples, 0.09%)</title><rect x="624.0" y="675.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (1 samples, 0.09%)</title><rect x="624.0" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$979/645480666.apply (1 samples, 0.09%)</title><rect x="624.0" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.0" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="624.0" y="627.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="627.0" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1186/526646268.apply (20 samples, 1.77%)</title><rect x="625.0" y="979.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.0" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (20 samples, 1.77%)</title><rect x="625.0" y="963.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$984/1333899436.apply (19 samples, 1.68%)</title><rect x="625.0" y="947.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.0" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (19 samples, 1.68%)</title><rect x="625.0" y="931.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1209/2029199156.apply (19 samples, 1.68%)</title><rect x="625.0" y="915.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (19 samples, 1.68%)</title><rect x="625.0" y="899.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1206/103131832.apply (16 samples, 1.41%)</title><rect x="625.0" y="883.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (16 samples, 1.41%)</title><rect x="625.0" y="867.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (16 samples, 1.41%)</title><rect x="625.0" y="851.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1211/560824414.apply (16 samples, 1.41%)</title><rect x="625.0" y="835.0" width="16.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.0" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (16 samples, 1.41%)</title><rect x="625.0" y="819.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (16 samples, 1.41%)</title><rect x="625.0" y="803.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.0" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1056/1190963482.apply (1 samples, 0.09%)</title><rect x="625.0" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.0" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1057/1870591400.apply (15 samples, 1.33%)</title><rect x="626.1" y="787.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (15 samples, 1.33%)</title><rect x="626.1" y="771.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.1" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (15 samples, 1.33%)</title><rect x="626.1" y="755.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1057/1870591400.apply (15 samples, 1.33%)</title><rect x="626.1" y="739.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.1" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (15 samples, 1.33%)</title><rect x="626.1" y="723.0" width="15.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.1" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (14 samples, 1.24%)</title><rect x="626.1" y="707.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.1" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1061/901735187.apply (14 samples, 1.24%)</title><rect x="626.1" y="691.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.1" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (14 samples, 1.24%)</title><rect x="626.1" y="675.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.1" y="686.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (14 samples, 1.24%)</title><rect x="626.1" y="659.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.1" y="670.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (8 samples, 0.71%)</title><rect x="626.1" y="643.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.1" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (2 samples, 0.18%)</title><rect x="626.1" y="627.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (2 samples, 0.18%)</title><rect x="626.1" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (2 samples, 0.18%)</title><rect x="626.1" y="595.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.1" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.&lt;init&gt; (1 samples, 0.09%)</title><rect x="626.1" y="579.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/Inlet$.apply (1 samples, 0.09%)</title><rect x="626.1" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.09%)</title><rect x="627.1" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (1 samples, 0.09%)</title><rect x="627.1" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (1 samples, 0.09%)</title><rect x="627.1" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.1" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (1 samples, 0.09%)</title><rect x="628.1" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="628.1" y="611.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="628.1" y="595.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.1" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.addMatCompose (1 samples, 0.09%)</title><rect x="628.1" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.1" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (4 samples, 0.35%)</title><rect x="629.2" y="627.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (4 samples, 0.35%)</title><rect x="629.2" y="611.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.2" y="622.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.35%)</title><rect x="629.2" y="595.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.2" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (3 samples, 0.27%)</title><rect x="629.2" y="579.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.2" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.09%)</title><rect x="629.2" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.2" y="574.0"></text>
</g>
<g>
<title>akka/stream/SinkShape.inlets (1 samples, 0.09%)</title><rect x="629.2" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.2" y="558.0"></text>
</g>
<g>
<title>akka/util/Collections$EmptyImmutableSeq$.isEmpty (1 samples, 0.09%)</title><rect x="630.2" y="563.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.2" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="631.3" y="563.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="634.3" y="574.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="632.3" y="579.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="635.3" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (1 samples, 0.09%)</title><rect x="633.4" y="627.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (1 samples, 0.09%)</title><rect x="633.4" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.4" y="622.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.09%)</title><rect x="633.4" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (1 samples, 0.09%)</title><rect x="633.4" y="579.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (6 samples, 0.53%)</title><rect x="634.4" y="643.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.4" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (5 samples, 0.44%)</title><rect x="634.4" y="627.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.44%)</title><rect x="634.4" y="611.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.4" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.44%)</title><rect x="634.4" y="595.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.4" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (5 samples, 0.44%)</title><rect x="634.4" y="579.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.4" y="590.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (1 samples, 0.09%)</title><rect x="634.4" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (1 samples, 0.09%)</title><rect x="634.4" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.4" y="558.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (1 samples, 0.09%)</title><rect x="634.4" y="531.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.iterator (1 samples, 0.09%)</title><rect x="634.4" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (1 samples, 0.09%)</title><rect x="635.4" y="563.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="635.4" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (1 samples, 0.09%)</title><rect x="635.4" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.4" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (1 samples, 0.09%)</title><rect x="635.4" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (3 samples, 0.27%)</title><rect x="636.5" y="563.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.5" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (3 samples, 0.27%)</title><rect x="636.5" y="547.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="558.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (3 samples, 0.27%)</title><rect x="636.5" y="531.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.5" y="542.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (3 samples, 0.27%)</title><rect x="636.5" y="515.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="526.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (3 samples, 0.27%)</title><rect x="636.5" y="499.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.5" y="510.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (3 samples, 0.27%)</title><rect x="636.5" y="483.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.5" y="494.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (3 samples, 0.27%)</title><rect x="636.5" y="467.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.5" y="478.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (3 samples, 0.27%)</title><rect x="636.5" y="451.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.5" y="462.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (3 samples, 0.27%)</title><rect x="636.5" y="435.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.5" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (3 samples, 0.27%)</title><rect x="636.5" y="419.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.27%)</title><rect x="636.5" y="403.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.27%)</title><rect x="636.5" y="387.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.5" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.27%)</title><rect x="636.5" y="371.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.5" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.27%)</title><rect x="636.5" y="355.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.5" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.27%)</title><rect x="636.5" y="339.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.5" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.27%)</title><rect x="636.5" y="323.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.5" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.27%)</title><rect x="636.5" y="307.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.5" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.27%)</title><rect x="636.5" y="291.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.5" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.27%)</title><rect x="636.5" y="275.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.27%)</title><rect x="636.5" y="259.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.27%)</title><rect x="636.5" y="243.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.27%)</title><rect x="636.5" y="227.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.27%)</title><rect x="636.5" y="211.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.27%)</title><rect x="636.5" y="195.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.27%)</title><rect x="636.5" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.5" y="190.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.27%)</title><rect x="636.5" y="163.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="639.5" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="636.5" y="147.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.5" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="636.5" y="131.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.5" y="142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="636.5" y="115.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="639.5" y="126.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="636.5" y="99.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.5" y="110.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="636.5" y="83.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.5" y="94.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="636.5" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="639.5" y="78.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="637.5" y="115.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.5" y="126.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="637.5" y="99.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.5" y="110.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="637.5" y="83.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="640.5" y="94.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="637.5" y="67.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.5" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="637.5" y="51.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.18%)</title><rect x="637.5" y="35.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.5" y="46.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (1 samples, 0.09%)</title><rect x="639.6" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.6" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="639.6" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (1 samples, 0.09%)</title><rect x="639.6" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.6" y="606.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="639.6" y="579.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.6" y="590.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="639.6" y="563.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="639.6" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.6" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="639.6" y="531.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.6" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="639.6" y="515.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.6" y="526.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="639.6" y="499.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.6" y="510.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.09%)</title><rect x="639.6" y="483.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="642.6" y="494.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.09%)</title><rect x="639.6" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="642.6" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="640.7" y="707.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="643.7" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.27%)</title><rect x="641.7" y="883.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.7" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.27%)</title><rect x="641.7" y="867.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.7" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (3 samples, 0.27%)</title><rect x="641.7" y="851.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.7" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1213/1353272787.apply (3 samples, 0.27%)</title><rect x="641.7" y="835.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.7" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (3 samples, 0.27%)</title><rect x="641.7" y="819.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.7" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1212/809762384.apply (3 samples, 0.27%)</title><rect x="641.7" y="803.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.7" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (3 samples, 0.27%)</title><rect x="641.7" y="787.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.7" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$1187/1876874898.apply (3 samples, 0.27%)</title><rect x="641.7" y="771.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.7" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (3 samples, 0.27%)</title><rect x="641.7" y="755.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.7" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1209/2029199156.apply (3 samples, 0.27%)</title><rect x="641.7" y="739.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.7" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (3 samples, 0.27%)</title><rect x="641.7" y="723.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.7" y="734.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1215/250045874.apply (2 samples, 0.18%)</title><rect x="641.7" y="707.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.7" y="718.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (2 samples, 0.18%)</title><rect x="641.7" y="691.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.7" y="702.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (2 samples, 0.18%)</title><rect x="641.7" y="675.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.7" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (1 samples, 0.09%)</title><rect x="641.7" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.7" y="670.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (1 samples, 0.09%)</title><rect x="641.7" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (1 samples, 0.09%)</title><rect x="641.7" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="641.7" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.09%)</title><rect x="641.7" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.09%)</title><rect x="641.7" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="641.7" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="641.7" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="641.7" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="641.7" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="641.7" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="641.7" y="483.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="644.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="641.7" y="467.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="641.7" y="451.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="644.7" y="462.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="641.7" y="435.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.7" y="446.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="641.7" y="419.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.7" y="430.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="641.7" y="403.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.7" y="414.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="641.7" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.7" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="641.7" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="641.7" y="355.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="644.7" y="366.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.andThen (1 samples, 0.09%)</title><rect x="642.7" y="659.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="670.0"></text>
</g>
<g>
<title>scala/concurrent/Future.andThen$ (1 samples, 0.09%)</title><rect x="642.7" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.7" y="654.0"></text>
</g>
<g>
<title>scala/concurrent/Future.andThen (1 samples, 0.09%)</title><rect x="642.7" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.7" y="638.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.transform (1 samples, 0.09%)</title><rect x="642.7" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="622.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.dispatchOrAddCallbacks (1 samples, 0.09%)</title><rect x="642.7" y="595.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.7" y="606.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.09%)</title><rect x="642.7" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="590.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.09%)</title><rect x="642.7" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.09%)</title><rect x="642.7" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.09%)</title><rect x="642.7" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.09%)</title><rect x="642.7" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.09%)</title><rect x="642.7" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.7" y="510.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.09%)</title><rect x="642.7" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.7" y="494.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="642.7" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.7" y="478.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="642.7" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.7" y="462.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="642.7" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.7" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="642.7" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="642.7" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="642.7" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.09%)</title><rect x="642.7" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="642.7" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="642.7" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="642.7" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.7" y="334.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="642.7" y="307.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="645.7" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="642.7" y="291.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.7" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="642.7" y="275.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="642.7" y="259.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="645.7" y="270.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="642.7" y="243.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.7" y="254.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="642.7" y="227.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.7" y="238.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="642.7" y="211.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="645.7" y="222.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="642.7" y="195.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.7" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="642.7" y="179.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.7" y="190.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.09%)</title><rect x="643.8" y="707.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.8" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (1 samples, 0.09%)</title><rect x="643.8" y="691.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.8" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (1 samples, 0.09%)</title><rect x="643.8" y="675.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.8" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1213/1353272787.apply (1 samples, 0.09%)</title><rect x="643.8" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.8" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (1 samples, 0.09%)</title><rect x="643.8" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.8" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1212/809762384.apply (1 samples, 0.09%)</title><rect x="643.8" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.8" y="638.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (1 samples, 0.09%)</title><rect x="643.8" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.8" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (1 samples, 0.09%)</title><rect x="643.8" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.8" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (1 samples, 0.09%)</title><rect x="643.8" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.8" y="590.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$1219/93717299.apply (1 samples, 0.09%)</title><rect x="643.8" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.8" y="574.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (1 samples, 0.09%)</title><rect x="643.8" y="547.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.8" y="558.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (1 samples, 0.09%)</title><rect x="643.8" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.8" y="542.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (1 samples, 0.09%)</title><rect x="643.8" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.8" y="526.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (1 samples, 0.09%)</title><rect x="643.8" y="499.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.8" y="510.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (1 samples, 0.09%)</title><rect x="643.8" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.8" y="494.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (1 samples, 0.09%)</title><rect x="643.8" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.8" y="478.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (1 samples, 0.09%)</title><rect x="643.8" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.8" y="462.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1239/741121387.apply (1 samples, 0.09%)</title><rect x="643.8" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.8" y="446.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$1 (1 samples, 0.09%)</title><rect x="643.8" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="643.8" y="403.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="643.8" y="387.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.8" y="398.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1246/890084927.get$Lambda (1 samples, 0.09%)</title><rect x="643.8" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.8" y="382.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1246/890084927.&lt;init&gt; (1 samples, 0.09%)</title><rect x="643.8" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.8" y="366.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1198/451050822.apply (1 samples, 0.09%)</title><rect x="644.8" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.8" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (1 samples, 0.09%)</title><rect x="644.8" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.8" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (1 samples, 0.09%)</title><rect x="644.8" y="915.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1204/825503606.apply (1 samples, 0.09%)</title><rect x="644.8" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (1 samples, 0.09%)</title><rect x="644.8" y="883.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.8" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (1 samples, 0.09%)</title><rect x="644.8" y="867.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.8" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1205/1037847557.apply (1 samples, 0.09%)</title><rect x="644.8" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.8" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (1 samples, 0.09%)</title><rect x="644.8" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.8" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (1 samples, 0.09%)</title><rect x="644.8" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (1 samples, 0.09%)</title><rect x="644.8" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.8" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (1 samples, 0.09%)</title><rect x="644.8" y="787.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.8" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (1 samples, 0.09%)</title><rect x="644.8" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.8" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (1 samples, 0.09%)</title><rect x="644.8" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.8" y="766.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (1 samples, 0.09%)</title><rect x="644.8" y="739.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.8" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (1 samples, 0.09%)</title><rect x="644.8" y="723.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.8" y="734.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.setAttributes (1 samples, 0.09%)</title><rect x="644.8" y="707.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.8" y="718.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes$ (1 samples, 0.09%)</title><rect x="644.8" y="691.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.8" y="702.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes (1 samples, 0.09%)</title><rect x="644.8" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.8" y="686.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.09%)</title><rect x="644.8" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.8" y="670.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.09%)</title><rect x="644.8" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.8" y="654.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$964/1407942553.apply (1 samples, 0.09%)</title><rect x="645.9" y="1075.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (1 samples, 0.09%)</title><rect x="645.9" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.9" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$976/433926956.apply (1 samples, 0.09%)</title><rect x="645.9" y="1043.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.9" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (1 samples, 0.09%)</title><rect x="645.9" y="1027.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.9" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (1 samples, 0.09%)</title><rect x="645.9" y="1011.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (1 samples, 0.09%)</title><rect x="645.9" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$962/294255051.apply (1 samples, 0.09%)</title><rect x="645.9" y="979.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.9" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (1 samples, 0.09%)</title><rect x="645.9" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (1 samples, 0.09%)</title><rect x="645.9" y="947.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$1172/1205964894.apply (1 samples, 0.09%)</title><rect x="645.9" y="931.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (1 samples, 0.09%)</title><rect x="645.9" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (1 samples, 0.09%)</title><rect x="645.9" y="899.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (1 samples, 0.09%)</title><rect x="645.9" y="883.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$962/294255051.apply (1 samples, 0.09%)</title><rect x="645.9" y="867.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.9" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (1 samples, 0.09%)</title><rect x="645.9" y="851.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.9" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (1 samples, 0.09%)</title><rect x="645.9" y="835.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.9" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$1172/1205964894.apply (1 samples, 0.09%)</title><rect x="645.9" y="819.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.9" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (1 samples, 0.09%)</title><rect x="645.9" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.9" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.map (1 samples, 0.09%)</title><rect x="645.9" y="787.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.9" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.map (1 samples, 0.09%)</title><rect x="645.9" y="771.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.9" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.recoverWith$extension (1 samples, 0.09%)</title><rect x="646.9" y="1171.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1$$Lambda$1018/1308675953.apply (2 samples, 0.18%)</title><rect x="648.0" y="1203.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/util/ApplyConverterInstances$$anon$1.$anonfun$apply$1 (2 samples, 0.18%)</title><rect x="648.0" y="1187.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$1019/1792155696.apply (2 samples, 0.18%)</title><rect x="648.0" y="1171.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$seal$1 (2 samples, 0.18%)</title><rect x="648.0" y="1155.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.18%)</title><rect x="648.0" y="1139.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$1156/1720360722.apply (1 samples, 0.09%)</title><rect x="649.0" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.0" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="649.0" y="1107.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="652.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.onPush (1 samples, 0.09%)</title><rect x="650.0" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$524/1416653694.apply (1 samples, 0.09%)</title><rect x="650.0" y="1267.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$2$adapted (1 samples, 0.09%)</title><rect x="650.0" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$2 (1 samples, 0.09%)</title><rect x="650.0" y="1235.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (1 samples, 0.09%)</title><rect x="650.0" y="1219.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (1 samples, 0.09%)</title><rect x="650.0" y="1203.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (1 samples, 0.09%)</title><rect x="650.0" y="1187.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (1 samples, 0.09%)</title><rect x="650.0" y="1171.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (1 samples, 0.09%)</title><rect x="650.0" y="1155.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (1 samples, 0.09%)</title><rect x="650.0" y="1139.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$.currentInterpreterOrNull (1 samples, 0.09%)</title><rect x="650.0" y="1123.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="650.0" y="1107.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.09%)</title><rect x="650.0" y="1091.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onPull (1 samples, 0.09%)</title><rect x="651.1" y="1299.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.1" y="1310.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.53%)</title><rect x="652.1" y="1299.0" width="6.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="655.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (1 samples, 0.09%)</title><rect x="658.4" y="1315.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (1 samples, 0.09%)</title><rect x="658.4" y="1299.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (1 samples, 0.09%)</title><rect x="658.4" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (1 samples, 0.09%)</title><rect x="658.4" y="1267.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.4" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (1 samples, 0.09%)</title><rect x="658.4" y="1251.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.4" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (1 samples, 0.09%)</title><rect x="658.4" y="1235.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.4" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.09%)</title><rect x="658.4" y="1219.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.4" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (1 samples, 0.09%)</title><rect x="658.4" y="1203.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (1 samples, 0.09%)</title><rect x="658.4" y="1187.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringLength (1 samples, 0.09%)</title><rect x="658.4" y="1171.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.isSuspended (1 samples, 0.09%)</title><rect x="658.4" y="1155.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$1026/625093395.apply (1 samples, 0.09%)</title><rect x="659.4" y="1331.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (28 samples, 2.47%)</title><rect x="660.5" y="1379.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.5" y="1390.0">ak..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (21 samples, 1.86%)</title><rect x="662.5" y="1363.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.5" y="1374.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (21 samples, 1.86%)</title><rect x="662.5" y="1347.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.5" y="1358.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (21 samples, 1.86%)</title><rect x="662.5" y="1331.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.5" y="1342.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (6 samples, 0.53%)</title><rect x="662.5" y="1315.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$523/841116577.apply (6 samples, 0.53%)</title><rect x="662.5" y="1299.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (6 samples, 0.53%)</title><rect x="662.5" y="1283.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (6 samples, 0.53%)</title><rect x="662.5" y="1267.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (6 samples, 0.53%)</title><rect x="662.5" y="1251.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (6 samples, 0.53%)</title><rect x="662.5" y="1235.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$607/979450940.apply (6 samples, 0.53%)</title><rect x="662.5" y="1219.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (6 samples, 0.53%)</title><rect x="662.5" y="1203.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (6 samples, 0.53%)</title><rect x="662.5" y="1187.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (6 samples, 0.53%)</title><rect x="662.5" y="1171.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (5 samples, 0.44%)</title><rect x="662.5" y="1155.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (5 samples, 0.44%)</title><rect x="662.5" y="1139.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (5 samples, 0.44%)</title><rect x="662.5" y="1123.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$506/1367287725.apply (2 samples, 0.18%)</title><rect x="662.5" y="1107.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (2 samples, 0.18%)</title><rect x="662.5" y="1091.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$515/307122610.apply (1 samples, 0.09%)</title><rect x="662.5" y="1075.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseDispatchable$1 (1 samples, 0.09%)</title><rect x="662.5" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponseDispatch.onResponseDispatchable (1 samples, 0.09%)</title><rect x="662.5" y="1043.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.dispatchResponseResult (1 samples, 0.09%)</title><rect x="662.5" y="1027.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$517/925269224.apply (1 samples, 0.09%)</title><rect x="663.6" y="1075.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (1 samples, 0.09%)</title><rect x="663.6" y="1059.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (1 samples, 0.09%)</title><rect x="663.6" y="1043.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (1 samples, 0.09%)</title><rect x="663.6" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (1 samples, 0.09%)</title><rect x="663.6" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpResponse.header (1 samples, 0.09%)</title><rect x="663.6" y="995.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpMessage.header$ (1 samples, 0.09%)</title><rect x="663.6" y="979.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.6" y="990.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$.apply (1 samples, 0.09%)</title><rect x="663.6" y="963.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.onResponseEntitySubscribed (1 samples, 0.09%)</title><rect x="664.6" y="1107.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (1 samples, 0.09%)</title><rect x="665.7" y="1107.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (1 samples, 0.09%)</title><rect x="665.7" y="1091.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (1 samples, 0.09%)</title><rect x="665.7" y="1075.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (1 samples, 0.09%)</title><rect x="665.7" y="1059.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists (1 samples, 0.09%)</title><rect x="665.7" y="1043.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.7" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.iterator (1 samples, 0.09%)</title><rect x="665.7" y="1027.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.initIterator (1 samples, 0.09%)</title><rect x="665.7" y="1011.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="665.7" y="995.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="665.7" y="979.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.7" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorIterator.initFrom (1 samples, 0.09%)</title><rect x="665.7" y="963.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom$ (1 samples, 0.09%)</title><rect x="665.7" y="947.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorPointer.initFrom (1 samples, 0.09%)</title><rect x="665.7" y="931.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="666.7" y="1107.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.09%)</title><rect x="666.7" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$Event (1 samples, 0.09%)</title><rect x="667.8" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (15 samples, 1.33%)</title><rect x="668.8" y="1315.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (15 samples, 1.33%)</title><rect x="668.8" y="1299.0" width="15.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (1 samples, 0.09%)</title><rect x="668.8" y="1283.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (1 samples, 0.09%)</title><rect x="668.8" y="1267.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.8" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (1 samples, 0.09%)</title><rect x="668.8" y="1251.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (1 samples, 0.09%)</title><rect x="668.8" y="1235.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.8" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (1 samples, 0.09%)</title><rect x="668.8" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.8" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (1 samples, 0.09%)</title><rect x="668.8" y="1203.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.8" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (1 samples, 0.09%)</title><rect x="668.8" y="1187.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.8" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (1 samples, 0.09%)</title><rect x="668.8" y="1171.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (1 samples, 0.09%)</title><rect x="668.8" y="1155.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.8" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (1 samples, 0.09%)</title><rect x="668.8" y="1139.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (1 samples, 0.09%)</title><rect x="668.8" y="1123.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (1 samples, 0.09%)</title><rect x="668.8" y="1107.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (1 samples, 0.09%)</title><rect x="668.8" y="1091.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (1 samples, 0.09%)</title><rect x="668.8" y="1075.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (1 samples, 0.09%)</title><rect x="668.8" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.8" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="668.8" y="1043.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.8" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="668.8" y="1027.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.8" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="668.8" y="1011.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.8" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="668.8" y="995.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.8" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.&lt;init&gt; (1 samples, 0.09%)</title><rect x="668.8" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (1 samples, 0.09%)</title><rect x="668.8" y="963.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.8" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (1 samples, 0.09%)</title><rect x="669.8" y="1283.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onPull (1 samples, 0.09%)</title><rect x="669.8" y="1267.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.pull (1 samples, 0.09%)</title><rect x="669.8" y="1251.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.8" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="669.8" y="1235.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.8" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (12 samples, 1.06%)</title><rect x="670.9" y="1283.0" width="12.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (1 samples, 0.09%)</title><rect x="670.9" y="1267.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.09%)</title><rect x="670.9" y="1251.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="670.9" y="1235.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$2.onPush (1 samples, 0.09%)</title><rect x="671.9" y="1267.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.akka$stream$impl$fusing$FlattenMerge$$anon$$addSource (1 samples, 0.09%)</title><rect x="671.9" y="1251.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.getSingleSource (1 samples, 0.09%)</title><rect x="671.9" y="1235.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.09%)</title><rect x="671.9" y="1219.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.9" y="1230.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="671.9" y="1203.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="674.9" y="1214.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="671.9" y="1187.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.9" y="1198.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="671.9" y="1171.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.9" y="1182.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="671.9" y="1155.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="674.9" y="1166.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="671.9" y="1139.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.9" y="1150.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="671.9" y="1123.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="674.9" y="1134.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="671.9" y="1107.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.9" y="1118.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="671.9" y="1091.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.9" y="1102.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="671.9" y="1075.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.9" y="1086.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="671.9" y="1059.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="674.9" y="1070.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="671.9" y="1043.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.9" y="1054.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="671.9" y="1027.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="674.9" y="1038.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="671.9" y="1011.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.9" y="1022.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="671.9" y="995.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="674.9" y="1006.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="671.9" y="979.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="674.9" y="990.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="671.9" y="963.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.9" y="974.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.09%)</title><rect x="671.9" y="947.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="674.9" y="958.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.09%)</title><rect x="671.9" y="931.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.9" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (8 samples, 0.71%)</title><rect x="673.0" y="1267.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$417/1868879535.apply (7 samples, 0.62%)</title><rect x="673.0" y="1251.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (7 samples, 0.62%)</title><rect x="673.0" y="1235.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (7 samples, 0.62%)</title><rect x="673.0" y="1219.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (3 samples, 0.27%)</title><rect x="673.0" y="1203.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (3 samples, 0.27%)</title><rect x="673.0" y="1187.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (3 samples, 0.27%)</title><rect x="673.0" y="1171.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.0" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder$.fromBuilder (1 samples, 0.09%)</title><rect x="673.0" y="1155.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.18%)</title><rect x="674.0" y="1155.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.0" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.18%)</title><rect x="674.0" y="1139.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.0" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.setAttributes (1 samples, 0.09%)</title><rect x="674.0" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes$ (1 samples, 0.09%)</title><rect x="674.0" y="1107.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.0" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder.setAttributes (1 samples, 0.09%)</title><rect x="674.0" y="1091.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="1102.0"></text>
</g>
<g>
<title>akka/stream/Attributes.isAsync (1 samples, 0.09%)</title><rect x="674.0" y="1075.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.0" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.exists (1 samples, 0.09%)</title><rect x="674.0" y="1059.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.0" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="674.0" y="1043.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="677.0" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (1 samples, 0.09%)</title><rect x="675.1" y="1123.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/SourceShape.outlets (1 samples, 0.09%)</title><rect x="675.1" y="1107.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (4 samples, 0.35%)</title><rect x="676.1" y="1203.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (2 samples, 0.18%)</title><rect x="677.1" y="1187.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.18%)</title><rect x="677.1" y="1171.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.18%)</title><rect x="677.1" y="1155.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.18%)</title><rect x="677.1" y="1139.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.18%)</title><rect x="677.1" y="1123.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.18%)</title><rect x="677.1" y="1107.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.1" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (2 samples, 0.18%)</title><rect x="677.1" y="1091.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (2 samples, 0.18%)</title><rect x="677.1" y="1075.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (2 samples, 0.18%)</title><rect x="677.1" y="1059.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (2 samples, 0.18%)</title><rect x="677.1" y="1043.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.1" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.18%)</title><rect x="677.1" y="1027.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.18%)</title><rect x="677.1" y="1011.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.1" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.18%)</title><rect x="677.1" y="995.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (2 samples, 0.18%)</title><rect x="677.1" y="979.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (2 samples, 0.18%)</title><rect x="677.1" y="963.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (1 samples, 0.09%)</title><rect x="677.1" y="947.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.09%)</title><rect x="677.1" y="931.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.1" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (1 samples, 0.09%)</title><rect x="677.1" y="915.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.1" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ProductVersion.render (1 samples, 0.09%)</title><rect x="677.1" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.1" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="677.1" y="883.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="680.1" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.equals (1 samples, 0.09%)</title><rect x="678.2" y="947.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.&lt;init&gt; (1 samples, 0.09%)</title><rect x="679.2" y="1187.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (1 samples, 0.09%)</title><rect x="680.3" y="1251.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.conn (1 samples, 0.09%)</title><rect x="680.3" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.3" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="680.3" y="1219.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="683.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (2 samples, 0.18%)</title><rect x="681.3" y="1267.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (1 samples, 0.09%)</title><rect x="681.3" y="1251.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="681.3" y="1235.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (1 samples, 0.09%)</title><rect x="681.3" y="1219.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (1 samples, 0.09%)</title><rect x="681.3" y="1203.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (1 samples, 0.09%)</title><rect x="681.3" y="1187.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (1 samples, 0.09%)</title><rect x="681.3" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (1 samples, 0.09%)</title><rect x="681.3" y="1155.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (1 samples, 0.09%)</title><rect x="681.3" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="681.3" y="1123.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="681.3" y="1107.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="681.3" y="1091.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.3" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="681.3" y="1075.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.3" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="681.3" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="681.3" y="1043.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="681.3" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.09%)</title><rect x="681.3" y="1011.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="681.3" y="995.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="681.3" y="979.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="681.3" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.3" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="681.3" y="947.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="681.3" y="931.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="681.3" y="915.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="684.3" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="681.3" y="899.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.3" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="681.3" y="883.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.3" y="894.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="681.3" y="867.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.3" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="681.3" y="851.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.3" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C.$plus$plus (1 samples, 0.09%)</title><rect x="682.3" y="1251.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="1262.0"></text>
</g>
<g>
<title>akka/util/ByteString.isEmpty (1 samples, 0.09%)</title><rect x="682.3" y="1235.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty$ (1 samples, 0.09%)</title><rect x="682.3" y="1219.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.isEmpty (1 samples, 0.09%)</title><rect x="682.3" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.3" y="1214.0"></text>
</g>
<g>
<title>akka/util/ByteString.lengthCompare (1 samples, 0.09%)</title><rect x="682.3" y="1187.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare$ (1 samples, 0.09%)</title><rect x="682.3" y="1171.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IndexedSeqOps.lengthCompare (1 samples, 0.09%)</title><rect x="682.3" y="1155.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.3" y="1166.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="683.4" y="1283.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="686.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (4 samples, 0.35%)</title><rect x="684.4" y="1363.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (4 samples, 0.35%)</title><rect x="684.4" y="1347.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (4 samples, 0.35%)</title><rect x="684.4" y="1331.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (2 samples, 0.18%)</title><rect x="684.4" y="1315.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (2 samples, 0.18%)</title><rect x="684.4" y="1299.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (1 samples, 0.09%)</title><rect x="684.4" y="1283.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.4" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.second (1 samples, 0.09%)</title><rect x="684.4" y="1267.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.4" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second$ (1 samples, 0.09%)</title><rect x="684.4" y="1251.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.4" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.second (1 samples, 0.09%)</title><rect x="684.4" y="1235.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.4" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.seconds (1 samples, 0.09%)</title><rect x="684.4" y="1219.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.4" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds$ (1 samples, 0.09%)</title><rect x="684.4" y="1203.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.4" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/duration/DurationConversions.seconds (1 samples, 0.09%)</title><rect x="684.4" y="1187.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.4" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/duration/package$DurationInt.durationIn (1 samples, 0.09%)</title><rect x="684.4" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.4" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.&lt;init&gt; (1 samples, 0.09%)</title><rect x="684.4" y="1155.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.4" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.&lt;init&gt; (1 samples, 0.09%)</title><rect x="684.4" y="1139.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.4" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (1 samples, 0.09%)</title><rect x="685.5" y="1283.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (1 samples, 0.09%)</title><rect x="685.5" y="1267.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (1 samples, 0.09%)</title><rect x="685.5" y="1251.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay$ (1 samples, 0.09%)</title><rect x="685.5" y="1235.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleWithFixedDelay (1 samples, 0.09%)</title><rect x="685.5" y="1219.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1.&lt;init&gt; (1 samples, 0.09%)</title><rect x="685.5" y="1203.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (1 samples, 0.09%)</title><rect x="685.5" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (1 samples, 0.09%)</title><rect x="685.5" y="1171.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.5" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/duration/Duration.$less$eq (1 samples, 0.09%)</title><rect x="685.5" y="1155.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.5" y="1166.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq$ (1 samples, 0.09%)</title><rect x="685.5" y="1139.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.5" y="1150.0"></text>
</g>
<g>
<title>scala/math/Ordered.$less$eq (1 samples, 0.09%)</title><rect x="685.5" y="1123.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.5" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.09%)</title><rect x="685.5" y="1107.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.5" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/duration/FiniteDuration.compare (1 samples, 0.09%)</title><rect x="685.5" y="1091.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.5" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare$ (1 samples, 0.09%)</title><rect x="685.5" y="1075.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.5" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/OrderedProxy.compare (1 samples, 0.09%)</title><rect x="685.5" y="1059.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.5" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/RichLong.self (1 samples, 0.09%)</title><rect x="685.5" y="1043.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.5" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.boxToLong (1 samples, 0.09%)</title><rect x="685.5" y="1027.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.09%)</title><rect x="685.5" y="1011.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (2 samples, 0.18%)</title><rect x="686.5" y="1315.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (2 samples, 0.18%)</title><rect x="686.5" y="1299.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (1 samples, 0.09%)</title><rect x="686.5" y="1283.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (1 samples, 0.09%)</title><rect x="686.5" y="1267.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (1 samples, 0.09%)</title><rect x="686.5" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.&lt;init&gt; (1 samples, 0.09%)</title><rect x="687.6" y="1283.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.6" y="1294.0"></text>
</g>
<g>
<title>scala/Array$.tabulate (1 samples, 0.09%)</title><rect x="687.6" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.6" y="1278.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction1$mcII$sp.apply (1 samples, 0.09%)</title><rect x="687.6" y="1251.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.09%)</title><rect x="687.6" y="1235.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.6" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="688.6" y="1363.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="691.6" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (3 samples, 0.27%)</title><rect x="689.6" y="1475.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (3 samples, 0.27%)</title><rect x="689.6" y="1459.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.6" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (3 samples, 0.27%)</title><rect x="689.6" y="1443.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.6" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (3 samples, 0.27%)</title><rect x="689.6" y="1427.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (3 samples, 0.27%)</title><rect x="689.6" y="1411.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.6" y="1422.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="691.7" y="1395.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.7" y="1406.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="691.7" y="1379.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.7" y="1390.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="691.7" y="1363.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.7" y="1374.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="691.7" y="1347.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="694.7" y="1358.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="691.7" y="1331.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.7" y="1342.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="691.7" y="1315.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="694.7" y="1326.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="691.7" y="1299.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.7" y="1310.0"></text>
</g>
<g>
<title>napi_gro_frags (1 samples, 0.09%)</title><rect x="691.7" y="1283.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.7" y="1294.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="691.7" y="1267.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.7" y="1278.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="691.7" y="1251.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.7" y="1262.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="691.7" y="1235.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.7" y="1246.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="691.7" y="1219.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.7" y="1230.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="691.7" y="1203.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.7" y="1214.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="691.7" y="1187.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.7" y="1198.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="691.7" y="1171.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.7" y="1182.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="691.7" y="1155.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.7" y="1166.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="691.7" y="1139.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.7" y="1150.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="691.7" y="1123.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.7" y="1134.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.09%)</title><rect x="691.7" y="1107.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.7" y="1118.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.09%)</title><rect x="691.7" y="1091.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.7" y="1102.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (1 samples, 0.09%)</title><rect x="691.7" y="1075.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.7" y="1086.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.09%)</title><rect x="691.7" y="1059.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.7" y="1070.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.09%)</title><rect x="691.7" y="1043.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.7" y="1054.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.09%)</title><rect x="691.7" y="1027.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="694.7" y="1038.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.09%)</title><rect x="691.7" y="1011.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="694.7" y="1022.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.09%)</title><rect x="691.7" y="995.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.7" y="1006.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.09%)</title><rect x="691.7" y="979.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.7" y="990.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.09%)</title><rect x="691.7" y="963.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.7" y="974.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.09%)</title><rect x="691.7" y="947.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.7" y="958.0"></text>
</g>
<g>
<title>sch_direct_xmit (1 samples, 0.09%)</title><rect x="691.7" y="931.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.7" y="942.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.09%)</title><rect x="691.7" y="915.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.7" y="926.0"></text>
</g>
<g>
<title>ena_start_xmit?[ena] (1 samples, 0.09%)</title><rect x="691.7" y="899.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.7" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (11 samples, 0.97%)</title><rect x="692.8" y="1475.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.8" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (9 samples, 0.80%)</title><rect x="692.8" y="1459.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.8" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (9 samples, 0.80%)</title><rect x="692.8" y="1443.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (9 samples, 0.80%)</title><rect x="692.8" y="1427.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (9 samples, 0.80%)</title><rect x="692.8" y="1411.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (9 samples, 0.80%)</title><rect x="692.8" y="1395.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (9 samples, 0.80%)</title><rect x="692.8" y="1379.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.18%)</title><rect x="692.8" y="1363.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.18%)</title><rect x="692.8" y="1347.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.18%)</title><rect x="692.8" y="1331.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.18%)</title><rect x="692.8" y="1315.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.8" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.18%)</title><rect x="692.8" y="1299.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.8" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (1 samples, 0.09%)</title><rect x="692.8" y="1283.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (1 samples, 0.09%)</title><rect x="692.8" y="1267.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (1 samples, 0.09%)</title><rect x="692.8" y="1251.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (1 samples, 0.09%)</title><rect x="693.8" y="1283.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.8" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="693.8" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.8" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (1 samples, 0.09%)</title><rect x="693.8" y="1251.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (1 samples, 0.09%)</title><rect x="693.8" y="1235.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.8" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (1 samples, 0.09%)</title><rect x="693.8" y="1219.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.09%)</title><rect x="693.8" y="1203.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.09%)</title><rect x="693.8" y="1187.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.09%)</title><rect x="693.8" y="1171.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.09%)</title><rect x="693.8" y="1155.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="693.8" y="1139.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="693.8" y="1123.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.8" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="693.8" y="1107.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="696.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (1 samples, 0.09%)</title><rect x="694.9" y="1363.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (1 samples, 0.09%)</title><rect x="694.9" y="1347.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (1 samples, 0.09%)</title><rect x="694.9" y="1331.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (1 samples, 0.09%)</title><rect x="694.9" y="1315.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (1 samples, 0.09%)</title><rect x="694.9" y="1299.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (1 samples, 0.09%)</title><rect x="694.9" y="1283.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (5 samples, 0.44%)</title><rect x="695.9" y="1363.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (5 samples, 0.44%)</title><rect x="695.9" y="1347.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.9" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (5 samples, 0.44%)</title><rect x="695.9" y="1331.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (5 samples, 0.44%)</title><rect x="695.9" y="1315.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.9" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (3 samples, 0.27%)</title><rect x="695.9" y="1299.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.9" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (3 samples, 0.27%)</title><rect x="695.9" y="1283.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$673/958028281.apply (3 samples, 0.27%)</title><rect x="695.9" y="1267.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (3 samples, 0.27%)</title><rect x="695.9" y="1251.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.9" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (3 samples, 0.27%)</title><rect x="695.9" y="1235.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (3 samples, 0.27%)</title><rect x="695.9" y="1219.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.9" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1274/427335812.apply (3 samples, 0.27%)</title><rect x="695.9" y="1203.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.9" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (3 samples, 0.27%)</title><rect x="695.9" y="1187.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.9" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (3 samples, 0.27%)</title><rect x="695.9" y="1171.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (3 samples, 0.27%)</title><rect x="695.9" y="1155.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$538/376101767.apply (3 samples, 0.27%)</title><rect x="695.9" y="1139.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (3 samples, 0.27%)</title><rect x="695.9" y="1123.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (3 samples, 0.27%)</title><rect x="695.9" y="1107.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (3 samples, 0.27%)</title><rect x="695.9" y="1091.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (3 samples, 0.27%)</title><rect x="695.9" y="1075.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (3 samples, 0.27%)</title><rect x="695.9" y="1059.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$486/1467687001.apply (3 samples, 0.27%)</title><rect x="695.9" y="1043.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.9" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (3 samples, 0.27%)</title><rect x="695.9" y="1027.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (3 samples, 0.27%)</title><rect x="695.9" y="1011.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (3 samples, 0.27%)</title><rect x="695.9" y="995.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="695.9" y="979.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.27%)</title><rect x="695.9" y="963.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.27%)</title><rect x="695.9" y="947.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.9" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.27%)</title><rect x="695.9" y="931.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.9" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.27%)</title><rect x="695.9" y="915.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.9" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.27%)</title><rect x="695.9" y="899.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.9" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.18%)</title><rect x="696.9" y="883.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.18%)</title><rect x="696.9" y="867.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.9" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="696.9" y="851.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.9" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.18%)</title><rect x="696.9" y="835.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.9" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.18%)</title><rect x="696.9" y="819.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.9" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.18%)</title><rect x="696.9" y="803.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.18%)</title><rect x="696.9" y="787.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.18%)</title><rect x="696.9" y="771.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.18%)</title><rect x="696.9" y="755.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.18%)</title><rect x="696.9" y="739.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="696.9" y="723.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="696.9" y="707.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.9" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="696.9" y="691.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="699.9" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="696.9" y="675.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="699.9" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="698.0" y="691.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="701.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="698.0" y="675.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="698.0" y="659.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.0" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="698.0" y="643.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.0" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="698.0" y="627.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.0" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="698.0" y="611.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="701.0" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="698.0" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.0" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="698.0" y="579.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="698.0" y="563.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.0" y="574.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.$plus$plus (2 samples, 0.18%)</title><rect x="699.0" y="1299.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.0" y="1310.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus$ (2 samples, 0.18%)</title><rect x="699.0" y="1283.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.0" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.$plus$plus (2 samples, 0.18%)</title><rect x="699.0" y="1267.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.concat (2 samples, 0.18%)</title><rect x="699.0" y="1251.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.0" y="1262.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat$ (2 samples, 0.18%)</title><rect x="699.0" y="1235.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.0" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.concat (2 samples, 0.18%)</title><rect x="699.0" y="1219.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.0" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (2 samples, 0.18%)</title><rect x="699.0" y="1203.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.0" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$.from (2 samples, 0.18%)</title><rect x="699.0" y="1187.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetBuilderImpl.addAll (2 samples, 0.18%)</title><rect x="699.0" y="1171.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.0" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.18%)</title><rect x="699.0" y="1155.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.18%)</title><rect x="699.0" y="1139.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.0" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.09%)</title><rect x="699.0" y="1123.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="702.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.hasNext (1 samples, 0.09%)</title><rect x="700.1" y="1123.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/Iterator$ConcatIterator.advance (1 samples, 0.09%)</title><rect x="700.1" y="1107.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (1 samples, 0.09%)</title><rect x="701.1" y="1363.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (1 samples, 0.09%)</title><rect x="701.1" y="1347.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (1 samples, 0.09%)</title><rect x="701.1" y="1331.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.1" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (1 samples, 0.09%)</title><rect x="701.1" y="1315.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (1 samples, 0.09%)</title><rect x="701.1" y="1299.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="701.1" y="1283.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.09%)</title><rect x="701.1" y="1267.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (1 samples, 0.09%)</title><rect x="701.1" y="1251.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.09%)</title><rect x="701.1" y="1235.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.09%)</title><rect x="701.1" y="1219.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (2 samples, 0.18%)</title><rect x="702.2" y="1459.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (2 samples, 0.18%)</title><rect x="702.2" y="1443.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (2 samples, 0.18%)</title><rect x="702.2" y="1427.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (2 samples, 0.18%)</title><rect x="702.2" y="1411.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (2 samples, 0.18%)</title><rect x="702.2" y="1395.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.2" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Supervise.equals (1 samples, 0.09%)</title><rect x="702.2" y="1379.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.2" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/Terminate.equals (1 samples, 0.09%)</title><rect x="703.2" y="1379.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.setDone (5 samples, 0.44%)</title><rect x="704.2" y="1523.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.2" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (4 samples, 0.35%)</title><rect x="705.3" y="1507.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.3" y="1518.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="708.4" y="1491.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.4" y="1502.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="708.4" y="1475.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.4" y="1486.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="708.4" y="1459.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.80%)</title><rect x="709.5" y="1555.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.80%)</title><rect x="709.5" y="1539.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.80%)</title><rect x="709.5" y="1523.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.5" y="1534.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.80%)</title><rect x="709.5" y="1507.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="712.5" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.71%)</title><rect x="710.5" y="1491.0" width="8.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="713.5" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.62%)</title><rect x="710.5" y="1475.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.5" y="1486.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.44%)</title><rect x="712.6" y="1459.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.6" y="1470.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.44%)</title><rect x="712.6" y="1443.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.6" y="1454.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.44%)</title><rect x="712.6" y="1427.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.6" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.44%)</title><rect x="712.6" y="1411.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.6" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.44%)</title><rect x="712.6" y="1395.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.6" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.35%)</title><rect x="713.6" y="1379.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.6" y="1390.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="717.8" y="1475.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="720.8" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 8.13%)</title><rect x="718.8" y="1571.0" width="95.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.8" y="1582.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (91 samples, 8.04%)</title><rect x="719.9" y="1555.0" width="94.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.9" y="1566.0">jdk/interna..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.09%)</title><rect x="719.9" y="1539.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="722.9" y="1550.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 2.03%)</title><rect x="720.9" y="1539.0" width="24.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="723.9" y="1550.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.62%)</title><rect x="723.0" y="1523.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="726.0" y="1534.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.09%)</title><rect x="726.1" y="1507.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="729.1" y="1518.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.18%)</title><rect x="727.2" y="1507.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="730.2" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="729.3" y="1507.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="732.3" y="1518.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.18%)</title><rect x="730.3" y="1523.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="733.3" y="1534.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.09%)</title><rect x="731.3" y="1507.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="734.3" y="1518.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="731.3" y="1491.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="734.3" y="1502.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="731.3" y="1475.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.3" y="1486.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="731.3" y="1459.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.3" y="1470.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 1.06%)</title><rect x="732.4" y="1523.0" width="12.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="735.4" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.35%)</title><rect x="740.7" y="1507.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.7" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.35%)</title><rect x="740.7" y="1491.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.7" y="1502.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.18%)</title><rect x="742.8" y="1475.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="745.8" y="1486.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="742.8" y="1459.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.8" y="1470.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="742.8" y="1443.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.8" y="1454.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 5.92%)</title><rect x="744.9" y="1539.0" width="69.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="747.9" y="1550.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (66 samples, 5.83%)</title><rect x="744.9" y="1523.0" width="68.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="747.9" y="1534.0">__pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 4.95%)</title><rect x="755.3" y="1507.0" width="58.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.3" y="1518.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 4.95%)</title><rect x="755.3" y="1491.0" width="58.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="758.3" y="1502.0">do_sys..</text>
</g>
<g>
<title>sys_futex (56 samples, 4.95%)</title><rect x="755.3" y="1475.0" width="58.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="758.3" y="1486.0">sys_fu..</text>
</g>
<g>
<title>do_futex (55 samples, 4.86%)</title><rect x="756.4" y="1459.0" width="57.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.4" y="1470.0">do_futex</text>
</g>
<g>
<title>futex_wait (55 samples, 4.86%)</title><rect x="756.4" y="1443.0" width="57.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.4" y="1454.0">futex_..</text>
</g>
<g>
<title>futex_wait_queue_me (51 samples, 4.51%)</title><rect x="758.4" y="1427.0" width="53.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="761.4" y="1438.0">futex..</text>
</g>
<g>
<title>schedule (51 samples, 4.51%)</title><rect x="758.4" y="1411.0" width="53.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.4" y="1422.0">sched..</text>
</g>
<g>
<title>__schedule (50 samples, 4.42%)</title><rect x="759.5" y="1395.0" width="52.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.5" y="1406.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (50 samples, 4.42%)</title><rect x="759.5" y="1379.0" width="52.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.5" y="1390.0">finis..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.09%)</title><rect x="807.4" y="1363.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="810.4" y="1374.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="807.4" y="1347.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.4" y="1358.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="807.4" y="1331.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="810.4" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="807.4" y="1315.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="810.4" y="1326.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.09%)</title><rect x="807.4" y="1299.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="810.4" y="1310.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.09%)</title><rect x="807.4" y="1283.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="810.4" y="1294.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.09%)</title><rect x="807.4" y="1267.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.4" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="807.4" y="1251.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="810.4" y="1262.0"></text>
</g>
<g>
<title>ret_from_intr (3 samples, 0.27%)</title><rect x="808.5" y="1363.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="811.5" y="1374.0"></text>
</g>
<g>
<title>do_IRQ (3 samples, 0.27%)</title><rect x="808.5" y="1347.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="811.5" y="1358.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.27%)</title><rect x="808.5" y="1331.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="811.5" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.27%)</title><rect x="808.5" y="1315.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.5" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.27%)</title><rect x="808.5" y="1299.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="811.5" y="1310.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (3 samples, 0.27%)</title><rect x="808.5" y="1283.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.5" y="1294.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (3 samples, 0.27%)</title><rect x="808.5" y="1267.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.5" y="1278.0"></text>
</g>
<g>
<title>napi_gro_receive (3 samples, 0.27%)</title><rect x="808.5" y="1251.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="811.5" y="1262.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (3 samples, 0.27%)</title><rect x="808.5" y="1235.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="811.5" y="1246.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.27%)</title><rect x="808.5" y="1219.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="811.5" y="1230.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.27%)</title><rect x="808.5" y="1203.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.5" y="1214.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.27%)</title><rect x="808.5" y="1187.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="811.5" y="1198.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.27%)</title><rect x="808.5" y="1171.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="811.5" y="1182.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.27%)</title><rect x="808.5" y="1155.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.5" y="1166.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.27%)</title><rect x="808.5" y="1139.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="811.5" y="1150.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.18%)</title><rect x="809.5" y="1123.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="812.5" y="1134.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.18%)</title><rect x="809.5" y="1107.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="812.5" y="1118.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="810.6" y="1091.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.6" y="1102.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.09%)</title><rect x="810.6" y="1075.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.6" y="1086.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.09%)</title><rect x="810.6" y="1059.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.6" y="1070.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.39 (1 samples, 0.09%)</title><rect x="810.6" y="1043.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.6" y="1054.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.09%)</title><rect x="810.6" y="1027.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.6" y="1038.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.09%)</title><rect x="810.6" y="1011.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.6" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.09%)</title><rect x="810.6" y="995.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.6" y="1006.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.09%)</title><rect x="810.6" y="979.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="813.6" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.18%)</title><rect x="811.6" y="1427.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="814.6" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.09%)</title><rect x="812.7" y="1411.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.7" y="1422.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="813.7" y="1523.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="816.7" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (32 samples, 2.83%)</title><rect x="814.7" y="1571.0" width="33.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.7" y="1582.0">ja..</text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="815.8" y="1555.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="818.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (29 samples, 2.56%)</title><rect x="816.8" y="1555.0" width="30.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.8" y="1566.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.62%)</title><rect x="816.8" y="1539.0" width="7.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="819.8" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.09%)</title><rect x="816.8" y="1523.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="819.8" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.18%)</title><rect x="817.9" y="1523.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="820.9" y="1534.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="818.9" y="1507.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="821.9" y="1518.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.18%)</title><rect x="819.9" y="1523.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="822.9" y="1534.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.09%)</title><rect x="822.0" y="1523.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="825.0" y="1534.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.09%)</title><rect x="823.1" y="1523.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="826.1" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (21 samples, 1.86%)</title><rect x="824.1" y="1539.0" width="21.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="827.1" y="1550.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.41%)</title><rect x="829.3" y="1523.0" width="16.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.3" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 1.41%)</title><rect x="829.3" y="1507.0" width="16.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.3" y="1518.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 1.33%)</title><rect x="830.4" y="1491.0" width="15.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.4" y="1502.0"></text>
</g>
<g>
<title>do_futex (15 samples, 1.33%)</title><rect x="830.4" y="1475.0" width="15.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.4" y="1486.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 1.24%)</title><rect x="830.4" y="1459.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.4" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 1.15%)</title><rect x="830.4" y="1443.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="833.4" y="1454.0"></text>
</g>
<g>
<title>schedule (13 samples, 1.15%)</title><rect x="830.4" y="1427.0" width="13.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="833.4" y="1438.0"></text>
</g>
<g>
<title>__schedule (12 samples, 1.06%)</title><rect x="831.4" y="1411.0" width="12.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.4" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 1.06%)</title><rect x="831.4" y="1395.0" width="12.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.4" y="1406.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.09%)</title><rect x="843.9" y="1443.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.9" y="1454.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.09%)</title><rect x="843.9" y="1427.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.9" y="1438.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.09%)</title><rect x="845.0" y="1459.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.0" y="1470.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.09%)</title><rect x="846.0" y="1539.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="849.0" y="1550.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="847.0" y="1555.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="850.0" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="847.0" y="1539.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="850.0" y="1550.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="848.1" y="1603.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="851.1" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="848.1" y="1587.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="851.1" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="848.1" y="1571.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="851.1" y="1582.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="848.1" y="1555.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="851.1" y="1566.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="848.1" y="1539.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="851.1" y="1550.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="848.1" y="1523.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="851.1" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="848.1" y="1507.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="851.1" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="848.1" y="1491.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.1" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.09%)</title><rect x="848.1" y="1475.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="851.1" y="1486.0"></text>
</g>
<g>
<title>start_thread (327 samples, 28.89%)</title><rect x="849.1" y="1603.0" width="340.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="852.1" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (327 samples, 28.89%)</title><rect x="849.1" y="1587.0" width="340.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="852.1" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (327 samples, 28.89%)</title><rect x="849.1" y="1571.0" width="340.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="852.1" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (5 samples, 0.44%)</title><rect x="849.1" y="1555.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.1" y="1566.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (5 samples, 0.44%)</title><rect x="849.1" y="1539.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="852.1" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (4 samples, 0.35%)</title><rect x="849.1" y="1523.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="852.1" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (4 samples, 0.35%)</title><rect x="849.1" y="1507.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="852.1" y="1518.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (2 samples, 0.18%)</title><rect x="850.2" y="1491.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="853.2" y="1502.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.18%)</title><rect x="850.2" y="1475.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="853.2" y="1486.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="852.3" y="1491.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.3" y="1502.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="853.3" y="1523.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="856.3" y="1534.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="853.3" y="1507.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="856.3" y="1518.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="853.3" y="1491.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="856.3" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="853.3" y="1475.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="856.3" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="853.3" y="1459.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="856.3" y="1470.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="853.3" y="1443.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="856.3" y="1454.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="853.3" y="1427.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.3" y="1438.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="853.3" y="1411.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.3" y="1422.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 1.59%)</title><rect x="854.3" y="1555.0" width="18.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="857.3" y="1566.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 1.50%)</title><rect x="854.3" y="1539.0" width="17.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="857.3" y="1550.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.35%)</title><rect x="854.3" y="1523.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="857.3" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.35%)</title><rect x="854.3" y="1507.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.3" y="1518.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="854.3" y="1491.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="857.3" y="1502.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="854.3" y="1475.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="857.3" y="1486.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="854.3" y="1459.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="857.3" y="1470.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="854.3" y="1443.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="857.3" y="1454.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="854.3" y="1427.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="857.3" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.27%)</title><rect x="855.4" y="1491.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.4" y="1502.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.97%)</title><rect x="858.5" y="1523.0" width="11.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="861.5" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.97%)</title><rect x="858.5" y="1507.0" width="11.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.5" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (11 samples, 0.97%)</title><rect x="858.5" y="1491.0" width="11.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="861.5" y="1502.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (11 samples, 0.97%)</title><rect x="858.5" y="1475.0" width="11.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="861.5" y="1486.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (11 samples, 0.97%)</title><rect x="858.5" y="1459.0" width="11.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="861.5" y="1470.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (11 samples, 0.97%)</title><rect x="858.5" y="1443.0" width="11.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="861.5" y="1454.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.88%)</title><rect x="859.6" y="1427.0" width="10.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="862.6" y="1438.0"></text>
</g>
<g>
<title>async_page_fault (1 samples, 0.09%)</title><rect x="864.8" y="1411.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.8" y="1422.0"></text>
</g>
<g>
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="864.8" y="1395.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="867.8" y="1406.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="864.8" y="1379.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.8" y="1390.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="864.8" y="1363.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="867.8" y="1374.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.27%)</title><rect x="865.8" y="1411.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="868.8" y="1422.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="868.9" y="1411.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.9" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="870.0" y="1523.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="873.0" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.18%)</title><rect x="870.0" y="1507.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="873.0" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.18%)</title><rect x="870.0" y="1491.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="873.0" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.18%)</title><rect x="870.0" y="1475.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="873.0" y="1486.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (2 samples, 0.18%)</title><rect x="870.0" y="1459.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="873.0" y="1470.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.09%)</title><rect x="870.0" y="1443.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="873.0" y="1454.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.09%)</title><rect x="870.0" y="1427.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="873.0" y="1438.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="871.0" y="1443.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="874.0" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.09%)</title><rect x="871.0" y="1427.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="874.0" y="1438.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="872.1" y="1539.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="875.1" y="1550.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.09%)</title><rect x="872.1" y="1523.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="875.1" y="1534.0"></text>
</g>
<g>
<title>JavaThread::run() (304 samples, 26.86%)</title><rect x="873.1" y="1555.0" width="316.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="876.1" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (304 samples, 26.86%)</title><rect x="873.1" y="1539.0" width="316.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="876.1" y="1550.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (298 samples, 26.33%)</title><rect x="873.1" y="1523.0" width="310.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="876.1" y="1534.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (296 samples, 26.15%)</title><rect x="873.1" y="1507.0" width="308.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="876.1" y="1518.0">CompileBroker::invoke_compiler_on_method(C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (286 samples, 25.27%)</title><rect x="873.1" y="1491.0" width="298.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="876.1" y="1502.0">C2Compiler::compile_method(ciEnv*, ciMet..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (286 samples, 25.27%)</title><rect x="873.1" y="1475.0" width="298.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="876.1" y="1486.0">Compile::Compile(ciEnv*, C2Compiler*, ci..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.09%)</title><rect x="873.1" y="1459.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="876.1" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.09%)</title><rect x="873.1" y="1443.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="876.1" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="873.1" y="1427.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="876.1" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="873.1" y="1411.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="876.1" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="873.1" y="1395.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="876.1" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.09%)</title><rect x="873.1" y="1379.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="876.1" y="1390.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (165 samples, 14.58%)</title><rect x="874.2" y="1459.0" width="171.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="877.2" y="1470.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (9 samples, 0.80%)</title><rect x="874.2" y="1443.0" width="9.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="877.2" y="1454.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (8 samples, 0.71%)</title><rect x="874.2" y="1427.0" width="8.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="877.2" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (3 samples, 0.27%)</title><rect x="879.4" y="1411.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="882.4" y="1422.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.09%)</title><rect x="881.4" y="1395.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="884.4" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.09%)</title><rect x="882.5" y="1427.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.5" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.09%)</title><rect x="882.5" y="1411.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.5" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.09%)</title><rect x="882.5" y="1395.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="885.5" y="1406.0"></text>
</g>
<g>
<title>MachEpilogNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.09%)</title><rect x="882.5" y="1379.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="885.5" y="1390.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.35%)</title><rect x="883.5" y="1443.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="886.5" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.18%)</title><rect x="884.6" y="1427.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.6" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.09%)</title><rect x="884.6" y="1411.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="887.6" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.09%)</title><rect x="884.6" y="1395.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="887.6" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::dump_object_pool(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="885.6" y="1411.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.6" y="1422.0"></text>
</g>
<g>
<title>storeImmCM0Node::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.09%)</title><rect x="886.7" y="1427.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="889.7" y="1438.0"></text>
</g>
<g>
<title>Matcher::match() (15 samples, 1.33%)</title><rect x="887.7" y="1443.0" width="15.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="890.7" y="1454.0"></text>
</g>
<g>
<title>HaltNode::Opcode() const (1 samples, 0.09%)</title><rect x="887.7" y="1427.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="890.7" y="1438.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.09%)</title><rect x="888.7" y="1427.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="891.7" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (12 samples, 1.06%)</title><rect x="889.8" y="1427.0" width="12.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="892.8" y="1438.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (4 samples, 0.35%)</title><rect x="889.8" y="1411.0" width="4.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="892.8" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.44%)</title><rect x="894.0" y="1411.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="897.0" y="1422.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.35%)</title><rect x="894.0" y="1395.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="897.0" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.18%)</title><rect x="895.0" y="1379.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="898.0" y="1390.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.18%)</title><rect x="895.0" y="1363.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.0" y="1374.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.09%)</title><rect x="896.0" y="1347.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="899.0" y="1358.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="897.1" y="1379.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.1" y="1390.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="897.1" y="1363.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.1" y="1374.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="897.1" y="1347.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="900.1" y="1358.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.09%)</title><rect x="897.1" y="1331.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="900.1" y="1342.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.09%)</title><rect x="898.1" y="1395.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="901.1" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.09%)</title><rect x="898.1" y="1379.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="901.1" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.09%)</title><rect x="898.1" y="1363.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="901.1" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.09%)</title><rect x="898.1" y="1347.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="901.1" y="1358.0"></text>
</g>
<g>
<title>salL_rReg_immNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.09%)</title><rect x="898.1" y="1331.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="901.1" y="1342.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.18%)</title><rect x="899.2" y="1411.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="902.2" y="1422.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.09%)</title><rect x="900.2" y="1395.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="903.2" y="1406.0"></text>
</g>
<g>
<title>StartNode::match(ProjNode const*, Matcher const*) (1 samples, 0.09%)</title><rect x="901.3" y="1411.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="904.3" y="1422.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.09%)</title><rect x="902.3" y="1427.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="905.3" y="1438.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.18%)</title><rect x="903.3" y="1443.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="906.3" y="1454.0"></text>
</g>
<g>
<title>PhaseBlockLayout::merge_traces(bool) (1 samples, 0.09%)</title><rect x="903.3" y="1427.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="906.3" y="1438.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="903.3" y="1411.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="906.3" y="1422.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="903.3" y="1395.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.3" y="1406.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="903.3" y="1379.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="906.3" y="1390.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="903.3" y="1363.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.3" y="1374.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.09%)</title><rect x="904.4" y="1427.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="907.4" y="1438.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.09%)</title><rect x="904.4" y="1411.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="907.4" y="1422.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.09%)</title><rect x="904.4" y="1395.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="907.4" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (18 samples, 1.59%)</title><rect x="905.4" y="1443.0" width="18.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="908.4" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.09%)</title><rect x="905.4" y="1427.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.4" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.09%)</title><rect x="905.4" y="1411.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="908.4" y="1422.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="905.4" y="1395.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.4" y="1406.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="905.4" y="1379.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.4" y="1390.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="905.4" y="1363.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="908.4" y="1374.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="905.4" y="1347.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.4" y="1358.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="905.4" y="1331.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.4" y="1342.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="905.4" y="1315.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="908.4" y="1326.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="905.4" y="1299.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.4" y="1310.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="905.4" y="1283.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.4" y="1294.0"></text>
</g>
<g>
<title>dev_gro_receive (1 samples, 0.09%)</title><rect x="905.4" y="1267.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.4" y="1278.0"></text>
</g>
<g>
<title>inet_gro_receive (1 samples, 0.09%)</title><rect x="905.4" y="1251.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="908.4" y="1262.0"></text>
</g>
<g>
<title>__skb_gro_checksum_complete (1 samples, 0.09%)</title><rect x="905.4" y="1235.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="908.4" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (17 samples, 1.50%)</title><rect x="906.5" y="1427.0" width="17.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.5" y="1438.0"></text>
</g>
<g>
<title>MachCallNode::pinned() const (1 samples, 0.09%)</title><rect x="906.5" y="1411.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="909.5" y="1422.0"></text>
</g>
<g>
<title>PCTableNode::pinned() const (1 samples, 0.09%)</title><rect x="907.5" y="1411.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="910.5" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (1 samples, 0.09%)</title><rect x="908.6" y="1411.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="911.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.18%)</title><rect x="909.6" y="1411.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="912.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.35%)</title><rect x="911.7" y="1411.0" width="4.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="914.7" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.09%)</title><rect x="913.8" y="1395.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="916.8" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.09%)</title><rect x="914.8" y="1395.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="917.8" y="1406.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.09%)</title><rect x="914.8" y="1379.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="917.8" y="1390.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.240] (1 samples, 0.09%)</title><rect x="914.8" y="1363.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="917.8" y="1374.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.09%)</title><rect x="914.8" y="1347.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.8" y="1358.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_canonical_holder(int) (1 samples, 0.09%)</title><rect x="914.8" y="1331.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="917.8" y="1342.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.35%)</title><rect x="915.8" y="1411.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="918.8" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.09%)</title><rect x="915.8" y="1395.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="918.8" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::needed_for_next_call(Block*, Node*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="916.9" y="1395.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="919.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (2 samples, 0.18%)</title><rect x="917.9" y="1395.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="920.9" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.18%)</title><rect x="917.9" y="1379.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="920.9" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.18%)</title><rect x="920.0" y="1411.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="923.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.09%)</title><rect x="922.1" y="1411.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.1" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.09%)</title><rect x="923.1" y="1411.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.1" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="923.1" y="1395.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.1" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.09%)</title><rect x="924.2" y="1443.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.2" y="1454.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (116 samples, 10.25%)</title><rect x="925.2" y="1443.0" width="120.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.2" y="1454.0">PhaseChaitin::R..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="925.2" y="1427.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.2" y="1438.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.09%)</title><rect x="927.3" y="1427.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.3" y="1438.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.09%)</title><rect x="928.4" y="1427.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.4" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (6 samples, 0.53%)</title><rect x="929.4" y="1427.0" width="6.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="932.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (4 samples, 0.35%)</title><rect x="935.7" y="1427.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="938.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.09%)</title><rect x="936.7" y="1411.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="939.7" y="1422.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.09%)</title><rect x="936.7" y="1395.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="939.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.18%)</title><rect x="937.7" y="1411.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="940.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="938.8" y="1395.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="941.8" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.27%)</title><rect x="939.8" y="1427.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="942.8" y="1438.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.27%)</title><rect x="939.8" y="1411.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="942.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="940.9" y="1395.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="943.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (10 samples, 0.88%)</title><rect x="943.0" y="1427.0" width="10.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="946.0" y="1438.0"></text>
</g>
<g>
<title>decodeHeapOop_not_nullNode::rule() const (1 samples, 0.09%)</title><rect x="951.3" y="1411.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="954.3" y="1422.0"></text>
</g>
<g>
<title>tlsLoadPNode::rule() const (1 samples, 0.09%)</title><rect x="952.3" y="1411.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="955.3" y="1422.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="952.3" y="1395.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.3" y="1406.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="952.3" y="1379.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="955.3" y="1390.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="952.3" y="1363.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="955.3" y="1374.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="952.3" y="1347.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.3" y="1358.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="952.3" y="1331.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="955.3" y="1342.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (22 samples, 1.94%)</title><rect x="953.4" y="1427.0" width="22.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="956.4" y="1438.0">P..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.09%)</title><rect x="957.5" y="1411.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="960.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.18%)</title><rect x="958.6" y="1411.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="961.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (12 samples, 1.06%)</title><rect x="960.7" y="1411.0" width="12.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.44%)</title><rect x="968.0" y="1395.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="971.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.27%)</title><rect x="973.2" y="1411.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="975.3" y="1395.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="978.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (3 samples, 0.27%)</title><rect x="976.3" y="1427.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="979.3" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.27%)</title><rect x="976.3" y="1411.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="979.3" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (2 samples, 0.18%)</title><rect x="979.4" y="1427.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="982.4" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (11 samples, 0.97%)</title><rect x="981.5" y="1427.0" width="11.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="984.5" y="1438.0"></text>
</g>
<g>
<title>MachNode::operand_index(unsigned int) const (1 samples, 0.09%)</title><rect x="983.6" y="1411.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="986.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (8 samples, 0.71%)</title><rect x="984.6" y="1411.0" width="8.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="987.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (5 samples, 0.44%)</title><rect x="993.0" y="1427.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.0" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.18%)</title><rect x="996.1" y="1411.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="999.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.18%)</title><rect x="998.2" y="1427.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.2" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (20 samples, 1.77%)</title><rect x="1000.3" y="1427.0" width="20.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1003.3" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (8 samples, 0.71%)</title><rect x="1009.7" y="1411.0" width="8.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.7" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.27%)</title><rect x="1018.0" y="1411.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1021.0" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.09%)</title><rect x="1021.1" y="1427.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.1" y="1438.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.09%)</title><rect x="1021.1" y="1411.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.1" y="1422.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.09%)</title><rect x="1022.2" y="1427.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.2" y="1438.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.09%)</title><rect x="1022.2" y="1411.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.2" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.09%)</title><rect x="1022.2" y="1395.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1025.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.09%)</title><rect x="1023.2" y="1427.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1026.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (5 samples, 0.44%)</title><rect x="1024.3" y="1427.0" width="5.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1027.3" y="1438.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.18%)</title><rect x="1025.3" y="1411.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1028.3" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.18%)</title><rect x="1027.4" y="1411.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1030.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.09%)</title><rect x="1029.5" y="1427.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1032.5" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (12 samples, 1.06%)</title><rect x="1030.5" y="1427.0" width="12.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1033.5" y="1438.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (5 samples, 0.44%)</title><rect x="1037.8" y="1411.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1040.8" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="1043.0" y="1427.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1046.0" y="1438.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.09%)</title><rect x="1043.0" y="1411.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1046.0" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="1043.0" y="1395.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1046.0" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="1043.0" y="1379.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.0" y="1390.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="1043.0" y="1363.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1046.0" y="1374.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="1043.0" y="1347.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1046.0" y="1358.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="1043.0" y="1331.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1046.0" y="1342.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.09%)</title><rect x="1044.1" y="1427.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1047.1" y="1438.0"></text>
</g>
<g>
<title>indPosIndexScaleOffsetNarrowOper::in_RegMask(int) const (1 samples, 0.09%)</title><rect x="1045.1" y="1427.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.1" y="1438.0"></text>
</g>
<g>
<title>Compile::Init(int) (1 samples, 0.09%)</title><rect x="1046.1" y="1459.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.1" y="1470.0"></text>
</g>
<g>
<title>ciMethod::has_loops() const (1 samples, 0.09%)</title><rect x="1046.1" y="1443.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1049.1" y="1454.0"></text>
</g>
<g>
<title>Method::compute_has_loops_flag() (1 samples, 0.09%)</title><rect x="1046.1" y="1427.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.1" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (69 samples, 6.10%)</title><rect x="1047.2" y="1459.0" width="71.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.2" y="1470.0">Compile:..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="1047.2" y="1443.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1050.2" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (3 samples, 0.27%)</title><rect x="1048.2" y="1443.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1051.2" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.27%)</title><rect x="1048.2" y="1427.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.2" y="1438.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (1 samples, 0.09%)</title><rect x="1049.3" y="1411.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.3" y="1422.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.09%)</title><rect x="1050.3" y="1411.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.3" y="1422.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (2 samples, 0.18%)</title><rect x="1051.4" y="1443.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.4" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="1052.4" y="1427.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1055.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="1052.4" y="1411.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.4" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1052.4" y="1395.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.4" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.09%)</title><rect x="1052.4" y="1379.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.4" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1363.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.4" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1347.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.4" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1331.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.4" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1315.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.4" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1299.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1055.4" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1283.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.4" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1267.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1055.4" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1251.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.4" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1235.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.4" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1219.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1055.4" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1203.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.4" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1187.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.4" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1171.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.4" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1155.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1055.4" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1139.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.4" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1123.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.4" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1107.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.4" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1091.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1055.4" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1075.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.4" y="1086.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.09%)</title><rect x="1052.4" y="1059.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.4" y="1070.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1052.4" y="1043.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1055.4" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.27%)</title><rect x="1053.4" y="1443.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.4" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.27%)</title><rect x="1053.4" y="1427.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.4" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.09%)</title><rect x="1054.5" y="1411.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.5" y="1422.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.09%)</title><rect x="1054.5" y="1395.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1057.5" y="1406.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.09%)</title><rect x="1054.5" y="1379.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.5" y="1390.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.09%)</title><rect x="1054.5" y="1363.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.5" y="1374.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.09%)</title><rect x="1054.5" y="1347.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.5" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1055.5" y="1411.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1058.5" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="1055.5" y="1395.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.5" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::is_counted() [clone .part.105] (1 samples, 0.09%)</title><rect x="1056.6" y="1443.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.6" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.44%)</title><rect x="1057.6" y="1443.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1060.6" y="1454.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="1060.7" y="1427.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.7" y="1438.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.09%)</title><rect x="1060.7" y="1411.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.7" y="1422.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="1061.8" y="1427.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.8" y="1438.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1061.8" y="1411.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.8" y="1422.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1061.8" y="1395.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1064.8" y="1406.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.09%)</title><rect x="1061.8" y="1379.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.8" y="1390.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.09%)</title><rect x="1061.8" y="1363.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.8" y="1374.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.09%)</title><rect x="1062.8" y="1443.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1065.8" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.09%)</title><rect x="1062.8" y="1427.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1065.8" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.09%)</title><rect x="1062.8" y="1411.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.8" y="1422.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="1062.8" y="1395.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1065.8" y="1406.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="1062.8" y="1379.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1065.8" y="1390.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="1062.8" y="1363.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (40 samples, 3.53%)</title><rect x="1063.9" y="1443.0" width="41.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1066.9" y="1454.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.09%)</title><rect x="1063.9" y="1427.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.9" y="1438.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.09%)</title><rect x="1063.9" y="1411.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1066.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (1 samples, 0.09%)</title><rect x="1063.9" y="1395.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1066.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="1063.9" y="1379.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.9" y="1390.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (2 samples, 0.18%)</title><rect x="1064.9" y="1427.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1067.9" y="1438.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.09%)</title><rect x="1067.0" y="1427.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1070.0" y="1438.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.09%)</title><rect x="1068.0" y="1427.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1071.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.27%)</title><rect x="1069.1" y="1427.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.1" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.09%)</title><rect x="1071.2" y="1411.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1074.2" y="1422.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.09%)</title><rect x="1071.2" y="1395.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1074.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (8 samples, 0.71%)</title><rect x="1072.2" y="1427.0" width="8.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1075.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (3 samples, 0.27%)</title><rect x="1076.4" y="1411.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.4" y="1422.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.09%)</title><rect x="1079.5" y="1411.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.97%)</title><rect x="1080.5" y="1427.0" width="11.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1083.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (9 samples, 0.80%)</title><rect x="1082.6" y="1411.0" width="9.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (8 samples, 0.71%)</title><rect x="1083.7" y="1395.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1086.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.18%)</title><rect x="1084.7" y="1379.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1085.8" y="1363.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (5 samples, 0.44%)</title><rect x="1086.8" y="1379.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1089.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (5 samples, 0.44%)</title><rect x="1092.0" y="1427.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1095.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (3 samples, 0.27%)</title><rect x="1094.1" y="1411.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.09%)</title><rect x="1096.2" y="1395.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1099.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.44%)</title><rect x="1097.2" y="1427.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.27%)</title><rect x="1099.3" y="1411.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1102.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.09%)</title><rect x="1101.4" y="1395.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1104.4" y="1406.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.09%)</title><rect x="1101.4" y="1379.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.4" y="1390.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="1101.4" y="1363.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1104.4" y="1374.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="1101.4" y="1347.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1104.4" y="1358.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="1101.4" y="1331.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.4" y="1342.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.27%)</title><rect x="1102.4" y="1427.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.4" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.27%)</title><rect x="1102.4" y="1411.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.4" y="1422.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.09%)</title><rect x="1102.4" y="1395.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.4" y="1406.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1102.4" y="1379.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.4" y="1390.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1102.4" y="1363.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.4" y="1374.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1103.5" y="1395.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1106.5" y="1406.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1103.5" y="1379.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1106.5" y="1390.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1104.5" y="1395.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.5" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (1 samples, 0.09%)</title><rect x="1104.5" y="1379.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1107.5" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1363.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.5" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1347.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.5" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1331.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.5" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1315.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.5" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1299.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.5" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1283.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.5" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1267.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.5" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1251.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1107.5" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1235.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.5" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1219.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.5" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1203.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.5" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1187.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.5" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1171.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.5" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1155.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.5" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1139.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.5" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1123.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.5" y="1134.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.09%)</title><rect x="1104.5" y="1107.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.5" y="1118.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1104.5" y="1091.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1107.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (11 samples, 0.97%)</title><rect x="1105.6" y="1443.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.6" y="1454.0"></text>
</g>
<g>
<title>MergeMemNode::hash() const (1 samples, 0.09%)</title><rect x="1105.6" y="1427.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1108.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.88%)</title><rect x="1106.6" y="1427.0" width="10.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.6" y="1438.0"></text>
</g>
<g>
<title>AndINode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1106.6" y="1411.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.6" y="1422.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.09%)</title><rect x="1107.7" y="1411.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1110.7" y="1422.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.09%)</title><rect x="1107.7" y="1395.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::is_dominator(Node*, Node*) (1 samples, 0.09%)</title><rect x="1107.7" y="1379.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1110.7" y="1390.0"></text>
</g>
<g>
<title>IfNode::up_one_dom(Node*, bool) (1 samples, 0.09%)</title><rect x="1107.7" y="1363.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.7" y="1374.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1108.7" y="1411.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.7" y="1422.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (1 samples, 0.09%)</title><rect x="1108.7" y="1395.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1111.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="1108.7" y="1379.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.7" y="1390.0"></text>
</g>
<g>
<title>CProjNode::hash() const (1 samples, 0.09%)</title><rect x="1108.7" y="1363.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.7" y="1374.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1109.7" y="1411.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.7" y="1422.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1109.7" y="1395.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1110.8" y="1411.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="1110.8" y="1395.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1113.8" y="1406.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.09%)</title><rect x="1110.8" y="1379.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1113.8" y="1390.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.18%)</title><rect x="1111.8" y="1411.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1114.8" y="1422.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.09%)</title><rect x="1112.9" y="1395.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.9" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.18%)</title><rect x="1113.9" y="1411.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.9" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (2 samples, 0.18%)</title><rect x="1113.9" y="1395.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.9" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.18%)</title><rect x="1113.9" y="1379.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.9" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.18%)</title><rect x="1113.9" y="1363.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1116.9" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.18%)</title><rect x="1113.9" y="1347.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.9" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.18%)</title><rect x="1113.9" y="1331.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1116.9" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1315.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.9" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1299.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.9" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1283.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.9" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1267.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.9" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1251.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1116.9" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1235.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1116.9" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1219.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.9" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1203.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.9" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1187.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1116.9" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1171.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1116.9" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1155.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.9" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1139.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1116.9" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1123.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1116.9" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1107.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.9" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1091.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.9" y="1102.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.09%)</title><rect x="1113.9" y="1075.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.9" y="1086.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1113.9" y="1059.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.9" y="1070.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (1 samples, 0.09%)</title><rect x="1114.9" y="1315.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.9" y="1326.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.09%)</title><rect x="1114.9" y="1299.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.9" y="1310.0"></text>
</g>
<g>
<title>Type::is_nan() const (1 samples, 0.09%)</title><rect x="1116.0" y="1411.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.0" y="1422.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.09%)</title><rect x="1117.0" y="1443.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.0" y="1454.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.09%)</title><rect x="1117.0" y="1427.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1117.0" y="1411.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1120.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="1117.0" y="1395.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.0" y="1406.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.09%)</title><rect x="1117.0" y="1379.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.0" y="1390.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.09%)</title><rect x="1118.1" y="1443.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.1" y="1454.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (3 samples, 0.27%)</title><rect x="1119.1" y="1459.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.1" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (3 samples, 0.27%)</title><rect x="1119.1" y="1443.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1122.1" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1119.1" y="1427.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.1" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1119.1" y="1411.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.1" y="1422.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.09%)</title><rect x="1119.1" y="1395.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.1" y="1406.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1119.1" y="1379.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.1" y="1390.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1119.1" y="1363.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.1" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1119.1" y="1347.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.1" y="1358.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1119.1" y="1331.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.1" y="1342.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.09%)</title><rect x="1119.1" y="1315.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.1" y="1326.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.09%)</title><rect x="1119.1" y="1299.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.1" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.09%)</title><rect x="1119.1" y="1283.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.1" y="1294.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.09%)</title><rect x="1119.1" y="1267.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1120.2" y="1395.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1120.2" y="1379.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.2" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1120.2" y="1363.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.2" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1120.2" y="1347.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.2" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1120.2" y="1331.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.2" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1120.2" y="1315.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1120.2" y="1299.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1120.2" y="1283.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1120.2" y="1267.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1120.2" y="1251.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.2" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1120.2" y="1235.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.2" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1120.2" y="1219.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1120.2" y="1203.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.2" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1120.2" y="1187.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1120.2" y="1171.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.2" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1120.2" y="1155.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1123.2" y="1166.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.09%)</title><rect x="1120.2" y="1139.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.2" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1120.2" y="1123.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.2" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1120.2" y="1107.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.09%)</title><rect x="1121.2" y="1155.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.2" y="1166.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.09%)</title><rect x="1121.2" y="1139.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.2" y="1150.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1121.2" y="1123.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.2" y="1134.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1121.2" y="1107.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.2" y="1118.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1121.2" y="1091.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.2" y="1102.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.09%)</title><rect x="1121.2" y="1075.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.2" y="1086.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.09%)</title><rect x="1121.2" y="1059.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.2" y="1070.0"></text>
</g>
<g>
<title>Node::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1121.2" y="1043.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1124.2" y="1054.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (3 samples, 0.27%)</title><rect x="1122.2" y="1459.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.2" y="1470.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.09%)</title><rect x="1122.2" y="1443.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.2" y="1454.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (2 samples, 0.18%)</title><rect x="1123.3" y="1443.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1126.3" y="1454.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (2 samples, 0.18%)</title><rect x="1123.3" y="1427.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.3" y="1438.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.09%)</title><rect x="1124.3" y="1411.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.3" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (37 samples, 3.27%)</title><rect x="1125.4" y="1459.0" width="38.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.4" y="1470.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (37 samples, 3.27%)</title><rect x="1125.4" y="1443.0" width="38.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1128.4" y="1454.0">Par..</text>
</g>
<g>
<title>Parse::do_all_blocks() (37 samples, 3.27%)</title><rect x="1125.4" y="1427.0" width="38.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.4" y="1438.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (37 samples, 3.27%)</title><rect x="1125.4" y="1411.0" width="38.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.4" y="1422.0">Par..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (37 samples, 3.27%)</title><rect x="1125.4" y="1395.0" width="38.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1128.4" y="1406.0">Par..</text>
</g>
<g>
<title>Parse::do_call() (35 samples, 3.09%)</title><rect x="1125.4" y="1379.0" width="36.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.4" y="1390.0">Par..</text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.09%)</title><rect x="1126.4" y="1363.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.4" y="1374.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.09%)</title><rect x="1126.4" y="1347.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.4" y="1358.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.09%)</title><rect x="1126.4" y="1331.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.4" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (27 samples, 2.39%)</title><rect x="1127.5" y="1363.0" width="28.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.5" y="1374.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (27 samples, 2.39%)</title><rect x="1127.5" y="1347.0" width="28.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.5" y="1358.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (26 samples, 2.30%)</title><rect x="1127.5" y="1331.0" width="27.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.5" y="1342.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (26 samples, 2.30%)</title><rect x="1127.5" y="1315.0" width="27.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.5" y="1326.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (26 samples, 2.30%)</title><rect x="1127.5" y="1299.0" width="27.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.5" y="1310.0">P..</text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.09%)</title><rect x="1127.5" y="1283.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (24 samples, 2.12%)</title><rect x="1128.5" y="1283.0" width="25.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.5" y="1294.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.18%)</title><rect x="1128.5" y="1267.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.5" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.18%)</title><rect x="1128.5" y="1251.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.5" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.18%)</title><rect x="1128.5" y="1235.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.5" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.18%)</title><rect x="1128.5" y="1219.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.5" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.18%)</title><rect x="1128.5" y="1203.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.5" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.18%)</title><rect x="1128.5" y="1187.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.5" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::Block(ciTypeFlow*, ciBlock*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1128.5" y="1171.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.5" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1129.5" y="1171.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.5" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1129.5" y="1155.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.5" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1129.5" y="1139.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1132.5" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.09%)</title><rect x="1129.5" y="1123.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.5" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.09%)</title><rect x="1129.5" y="1107.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.5" y="1118.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.09%)</title><rect x="1129.5" y="1091.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1132.5" y="1102.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.09%)</title><rect x="1129.5" y="1075.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.5" y="1086.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.09%)</title><rect x="1130.6" y="1267.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.6" y="1278.0"></text>
</g>
<g>
<title>SafePointNode::set_local(JVMState*, unsigned int, Node*) (1 samples, 0.09%)</title><rect x="1130.6" y="1251.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1133.6" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 1.59%)</title><rect x="1131.6" y="1267.0" width="18.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.6" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 1.59%)</title><rect x="1131.6" y="1251.0" width="18.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.6" y="1262.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.09%)</title><rect x="1131.6" y="1235.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.6" y="1246.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.09%)</title><rect x="1131.6" y="1219.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.6" y="1230.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1131.6" y="1203.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 1.41%)</title><rect x="1132.7" y="1235.0" width="16.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.7" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 1.41%)</title><rect x="1132.7" y="1219.0" width="16.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1135.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 1.41%)</title><rect x="1132.7" y="1203.0" width="16.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 1.15%)</title><rect x="1132.7" y="1187.0" width="13.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.7" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1132.7" y="1171.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.7" y="1182.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.09%)</title><rect x="1132.7" y="1155.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.7" y="1166.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.09%)</title><rect x="1132.7" y="1139.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.7" y="1150.0"></text>
</g>
<g>
<title>ciMemberName::get_vmtarget() const (1 samples, 0.09%)</title><rect x="1132.7" y="1123.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.7" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1132.7" y="1107.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.7" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1132.7" y="1091.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.7" y="1102.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1132.7" y="1075.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1135.7" y="1086.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="1132.7" y="1059.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.7" y="1070.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.09%)</title><rect x="1132.7" y="1043.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.7" y="1054.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.09%)</title><rect x="1132.7" y="1027.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1135.7" y="1038.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.09%)</title><rect x="1132.7" y="1011.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1135.7" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.97%)</title><rect x="1133.7" y="1171.0" width="11.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.7" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.97%)</title><rect x="1133.7" y="1155.0" width="11.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.7" y="1166.0"></text>
</g>
<g>
<title>GraphKit::GraphKit() (1 samples, 0.09%)</title><rect x="1133.7" y="1139.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.7" y="1150.0"></text>
</g>
<g>
<title>Phase::Phase(Phase::PhaseNumber) (1 samples, 0.09%)</title><rect x="1133.7" y="1123.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.88%)</title><rect x="1134.8" y="1139.0" width="10.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.88%)</title><rect x="1134.8" y="1123.0" width="10.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.88%)</title><rect x="1134.8" y="1107.0" width="10.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.71%)</title><rect x="1134.8" y="1091.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.8" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1134.8" y="1075.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.8" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1134.8" y="1059.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.8" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1134.8" y="1043.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.8" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::map_blocks() (1 samples, 0.09%)</title><rect x="1134.8" y="1027.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.8" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.62%)</title><rect x="1135.8" y="1075.0" width="7.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.8" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.62%)</title><rect x="1135.8" y="1059.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.62%)</title><rect x="1135.8" y="1043.0" width="7.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.62%)</title><rect x="1135.8" y="1027.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.62%)</title><rect x="1135.8" y="1011.0" width="7.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.62%)</title><rect x="1135.8" y="995.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.8" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.62%)</title><rect x="1135.8" y="979.0" width="7.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.8" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.62%)</title><rect x="1135.8" y="963.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.62%)</title><rect x="1135.8" y="947.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.62%)</title><rect x="1135.8" y="931.0" width="7.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.62%)</title><rect x="1135.8" y="915.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.62%)</title><rect x="1135.8" y="899.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.8" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.53%)</title><rect x="1135.8" y="883.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.8" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.53%)</title><rect x="1135.8" y="867.0" width="6.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.8" y="878.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.09%)</title><rect x="1135.8" y="851.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.8" y="862.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1135.8" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.8" y="846.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1135.8" y="819.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.8" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1135.8" y="803.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.8" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1135.8" y="787.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.8" y="798.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.09%)</title><rect x="1135.8" y="771.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.44%)</title><rect x="1136.8" y="851.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.44%)</title><rect x="1136.8" y="835.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.44%)</title><rect x="1136.8" y="819.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.44%)</title><rect x="1136.8" y="803.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.44%)</title><rect x="1136.8" y="787.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.44%)</title><rect x="1136.8" y="771.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.44%)</title><rect x="1136.8" y="755.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.44%)</title><rect x="1136.8" y="739.0" width="5.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.44%)</title><rect x="1136.8" y="723.0" width="5.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.35%)</title><rect x="1136.8" y="707.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.8" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1136.8" y="691.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1136.8" y="675.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.8" y="686.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1136.8" y="659.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.8" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1136.8" y="643.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.8" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1136.8" y="627.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.8" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1136.8" y="611.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.8" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1136.8" y="595.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.8" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1136.8" y="579.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.8" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.09%)</title><rect x="1136.8" y="563.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.8" y="574.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1136.8" y="547.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.8" y="558.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1136.8" y="531.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.8" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1136.8" y="515.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.8" y="526.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.09%)</title><rect x="1136.8" y="499.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.8" y="510.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.09%)</title><rect x="1137.9" y="691.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.9" y="702.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.09%)</title><rect x="1137.9" y="675.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.9" y="686.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.09%)</title><rect x="1137.9" y="659.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1138.9" y="691.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.9" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1138.9" y="675.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1138.9" y="659.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1138.9" y="643.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1138.9" y="627.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1138.9" y="611.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.9" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1138.9" y="595.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.9" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1138.9" y="579.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1138.9" y="563.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1138.9" y="547.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1138.9" y="531.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.18%)</title><rect x="1138.9" y="515.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.18%)</title><rect x="1138.9" y="499.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.9" y="510.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.18%)</title><rect x="1138.9" y="483.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.9" y="494.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.18%)</title><rect x="1138.9" y="467.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.9" y="478.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.18%)</title><rect x="1138.9" y="451.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.9" y="462.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1138.9" y="435.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.9" y="446.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1138.9" y="419.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.9" y="430.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1138.9" y="403.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.9" y="414.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1138.9" y="387.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.9" y="398.0"></text>
</g>
<g>
<title>InitializeNode::capture_store(StoreNode*, long, PhaseTransform*, bool) (1 samples, 0.09%)</title><rect x="1138.9" y="371.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.9" y="382.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="1138.9" y="355.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.9" y="366.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.09%)</title><rect x="1140.0" y="435.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.0" y="446.0"></text>
</g>
<g>
<title>MergeMemNode::bottom_type() const (1 samples, 0.09%)</title><rect x="1140.0" y="419.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.09%)</title><rect x="1141.0" y="707.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.09%)</title><rect x="1141.0" y="691.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.0" y="702.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1141.0" y="675.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="686.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1141.0" y="659.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.0" y="670.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1141.0" y="643.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.0" y="654.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1141.0" y="627.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.0" y="638.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1141.0" y="611.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="622.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1141.0" y="595.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.0" y="606.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1141.0" y="579.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.0" y="590.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.09%)</title><rect x="1141.0" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.0" y="574.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.09%)</title><rect x="1141.0" y="547.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.0" y="558.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.09%)</title><rect x="1141.0" y="531.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.0" y="542.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.09%)</title><rect x="1142.0" y="883.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.0" y="894.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.09%)</title><rect x="1142.0" y="867.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.0" y="878.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.09%)</title><rect x="1142.0" y="851.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.0" y="862.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.09%)</title><rect x="1142.0" y="835.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1145.0" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.09%)</title><rect x="1142.0" y="819.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.0" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.09%)</title><rect x="1142.0" y="803.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.09%)</title><rect x="1143.1" y="1091.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.1" y="1102.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.09%)</title><rect x="1143.1" y="1075.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.1" y="1086.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1143.1" y="1059.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.1" y="1070.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="1143.1" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.09%)</title><rect x="1144.1" y="1091.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.1" y="1102.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.09%)</title><rect x="1144.1" y="1075.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.1" y="1086.0"></text>
</g>
<g>
<title>Phase::gen_subtype_check(Node*, Node*, Node**, MergeMemNode*, PhaseGVN*) (1 samples, 0.09%)</title><rect x="1144.1" y="1059.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.1" y="1070.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.09%)</title><rect x="1144.1" y="1043.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.1" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="1171.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.2" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="1155.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.2" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1145.2" y="1139.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.2" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1145.2" y="1123.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1145.2" y="1107.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1145.2" y="1091.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1145.2" y="1075.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.2" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="1059.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.2" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="1043.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.2" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1145.2" y="1027.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1145.2" y="1011.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1145.2" y="995.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1145.2" y="979.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1145.2" y="963.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.2" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="947.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.2" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1145.2" y="931.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1145.2" y="915.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1145.2" y="899.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1145.2" y="883.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1145.2" y="867.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1145.2" y="851.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.2" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1145.2" y="835.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1145.2" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1145.2" y="803.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1145.2" y="787.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1145.2" y="771.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.2" y="782.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1145.2" y="755.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.2" y="766.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1145.2" y="739.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.2" y="750.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1145.2" y="723.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.09%)</title><rect x="1146.2" y="1187.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.2" y="1198.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.09%)</title><rect x="1146.2" y="1171.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.2" y="1182.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.09%)</title><rect x="1146.2" y="1155.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.2" y="1166.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.09%)</title><rect x="1146.2" y="1139.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.2" y="1150.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.09%)</title><rect x="1146.2" y="1123.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.2" y="1134.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1146.2" y="1107.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.2" y="1118.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1146.2" y="1091.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.09%)</title><rect x="1147.3" y="1187.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.3" y="1198.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.09%)</title><rect x="1147.3" y="1171.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.3" y="1182.0"></text>
</g>
<g>
<title>Node::find_edge(Node*) (1 samples, 0.09%)</title><rect x="1147.3" y="1155.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.3" y="1166.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.09%)</title><rect x="1148.3" y="1187.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.09%)</title><rect x="1149.3" y="1235.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.3" y="1246.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.09%)</title><rect x="1149.3" y="1219.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.3" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1150.4" y="1267.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1150.4" y="1251.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.4" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1150.4" y="1235.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.4" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1150.4" y="1219.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1150.4" y="1203.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1150.4" y="1187.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1150.4" y="1171.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.4" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="1155.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.4" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="1139.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.4" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="1123.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="1107.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="1091.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="1075.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="1059.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1153.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="1043.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="1027.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="1011.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="995.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="979.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="963.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="947.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="931.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="915.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="899.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="883.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.4" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="867.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.4" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="851.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="835.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="819.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="803.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="787.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="771.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="755.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="739.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="723.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="707.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="691.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="675.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="659.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="643.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="627.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="611.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="595.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.4" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1150.4" y="579.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1150.4" y="563.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1150.4" y="547.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1150.4" y="531.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1150.4" y="515.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1150.4" y="499.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="510.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1150.4" y="483.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.4" y="494.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1150.4" y="467.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="478.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1150.4" y="451.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1150.4" y="435.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.4" y="446.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1150.4" y="419.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.4" y="430.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1150.4" y="403.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.4" y="414.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1150.4" y="387.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1150.4" y="371.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.4" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.09%)</title><rect x="1150.4" y="355.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="366.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1150.4" y="339.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.4" y="350.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1150.4" y="323.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="334.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1150.4" y="307.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.4" y="318.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1150.4" y="291.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="302.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1150.4" y="275.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.4" y="286.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1150.4" y="259.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="270.0"></text>
</g>
<g>
<title>ClassLoaderData::holder_phantom() const (1 samples, 0.09%)</title><rect x="1150.4" y="243.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.4" y="254.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1151.4" y="1155.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.4" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1151.4" y="1139.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.4" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1151.4" y="1123.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1151.4" y="1107.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1151.4" y="1091.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1151.4" y="1075.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1151.4" y="1059.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.4" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1151.4" y="1043.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.4" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1151.4" y="1027.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1151.4" y="1011.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1151.4" y="995.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1151.4" y="979.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1151.4" y="963.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.4" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1151.4" y="947.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.4" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1151.4" y="931.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1151.4" y="915.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1151.4" y="899.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1151.4" y="883.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1151.4" y="867.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.4" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1151.4" y="851.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.4" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1151.4" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1151.4" y="819.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1151.4" y="803.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1151.4" y="787.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1151.4" y="771.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.4" y="782.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1151.4" y="755.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.4" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="1043.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.5" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="1027.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1152.5" y="1011.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1152.5" y="995.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1152.5" y="979.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1152.5" y="963.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1152.5" y="947.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.5" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="931.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1152.5" y="915.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1152.5" y="899.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1152.5" y="883.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1152.5" y="867.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1152.5" y="851.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.5" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="835.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.5" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1152.5" y="819.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1152.5" y="803.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1152.5" y="787.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1152.5" y="771.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1152.5" y="755.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="739.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1152.5" y="723.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1152.5" y="707.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1152.5" y="691.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1152.5" y="675.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1152.5" y="659.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1152.5" y="643.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1152.5" y="627.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1152.5" y="611.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1152.5" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1152.5" y="579.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1152.5" y="563.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.5" y="574.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.09%)</title><rect x="1152.5" y="547.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.5" y="558.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.09%)</title><rect x="1152.5" y="531.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.5" y="542.0"></text>
</g>
<g>
<title>TypeTuple::make_range(ciSignature*) (1 samples, 0.09%)</title><rect x="1152.5" y="515.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.5" y="526.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1152.5" y="499.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.5" y="510.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1152.5" y="483.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.09%)</title><rect x="1153.5" y="1283.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.5" y="1294.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.09%)</title><rect x="1153.5" y="1267.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.5" y="1278.0"></text>
</g>
<g>
<title>GraphKit::builtin_throw(Deoptimization::DeoptReason, Node*) (1 samples, 0.09%)</title><rect x="1153.5" y="1251.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.5" y="1262.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1153.5" y="1235.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.5" y="1246.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1153.5" y="1219.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.5" y="1230.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.09%)</title><rect x="1153.5" y="1203.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.5" y="1214.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.09%)</title><rect x="1153.5" y="1187.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.5" y="1198.0"></text>
</g>
<g>
<title>IdealKit::load(Node*, Node*, Type const*, BasicType, int, bool) (1 samples, 0.09%)</title><rect x="1153.5" y="1171.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.5" y="1182.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1153.5" y="1155.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.5" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1153.5" y="1139.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.5" y="1150.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1153.5" y="1123.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.5" y="1134.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1153.5" y="1107.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.5" y="1118.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.09%)</title><rect x="1153.5" y="1091.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.5" y="1102.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.09%)</title><rect x="1153.5" y="1075.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.5" y="1086.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.09%)</title><rect x="1153.5" y="1059.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.5" y="1070.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.09%)</title><rect x="1153.5" y="1043.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.5" y="1054.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.09%)</title><rect x="1153.5" y="1027.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.5" y="1038.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.09%)</title><rect x="1153.5" y="1011.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.5" y="1022.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.09%)</title><rect x="1154.6" y="1331.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.6" y="1342.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.09%)</title><rect x="1154.6" y="1315.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.6" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.35%)</title><rect x="1155.6" y="1363.0" width="4.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.6" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1155.6" y="1347.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.6" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1155.6" y="1331.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.27%)</title><rect x="1155.6" y="1315.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.27%)</title><rect x="1155.6" y="1299.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.27%)</title><rect x="1155.6" y="1283.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.27%)</title><rect x="1155.6" y="1267.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.6" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1155.6" y="1251.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.6" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1155.6" y="1235.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.6" y="1246.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.09%)</title><rect x="1155.6" y="1219.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.6" y="1230.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="1155.6" y="1203.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.6" y="1214.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.09%)</title><rect x="1155.6" y="1187.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="1198.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.09%)</title><rect x="1155.6" y="1171.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="1219.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="1203.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="1187.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="1171.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1156.6" y="1155.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.6" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1156.6" y="1139.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="1123.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="1107.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="1091.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="1075.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.6" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1156.6" y="1059.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1156.6" y="1043.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="1027.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="1011.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.6" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="995.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="979.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1156.6" y="963.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.6" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1156.6" y="947.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="931.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="915.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="899.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="883.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.6" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1156.6" y="867.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1156.6" y="851.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="835.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="819.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="803.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="787.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="1156.6" y="771.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="1156.6" y="755.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1156.6" y="739.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1156.6" y="723.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1156.6" y="707.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1156.6" y="691.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1156.6" y="675.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="686.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1156.6" y="659.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.6" y="670.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1156.6" y="643.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.6" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1156.6" y="627.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.6" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1156.6" y="611.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.6" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1156.6" y="595.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1156.6" y="579.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.6" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1156.6" y="563.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.09%)</title><rect x="1156.6" y="547.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.6" y="558.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1156.6" y="531.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="542.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.09%)</title><rect x="1156.6" y="515.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.6" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1157.7" y="675.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.7" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1157.7" y="659.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1157.7" y="643.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1157.7" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1157.7" y="611.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1157.7" y="595.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1157.7" y="579.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.7" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1157.7" y="563.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1157.7" y="547.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.7" y="558.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.09%)</title><rect x="1157.7" y="531.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.7" y="542.0"></text>
</g>
<g>
<title>Parse::merge_memory_edges(MergeMemNode*, int, bool) (1 samples, 0.09%)</title><rect x="1157.7" y="515.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.7" y="526.0"></text>
</g>
<g>
<title>Parse::ensure_memory_phi(int, bool) (1 samples, 0.09%)</title><rect x="1157.7" y="499.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.7" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="1347.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="1331.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="1315.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="1299.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="1283.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="1267.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="1251.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="1235.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="1219.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="1203.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="1187.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="1171.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="1155.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="1139.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="1123.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="1107.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="1091.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="1075.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="1059.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="1043.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="1027.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="1011.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="995.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="979.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="963.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="947.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="931.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="915.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="899.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="883.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="867.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="851.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.7" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.7" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="819.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="803.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="787.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="771.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="755.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.7" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1158.7" y="739.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.7" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1158.7" y="723.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1158.7" y="707.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1158.7" y="691.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1158.7" y="675.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1158.7" y="659.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.7" y="670.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.09%)</title><rect x="1158.7" y="643.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.7" y="654.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.09%)</title><rect x="1158.7" y="627.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.7" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.09%)</title><rect x="1158.7" y="611.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.7" y="622.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.09%)</title><rect x="1158.7" y="595.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="606.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1159.8" y="1363.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1162.8" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1159.8" y="1347.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.8" y="1358.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1159.8" y="1331.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1342.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.09%)</title><rect x="1159.8" y="1315.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.8" y="1326.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.09%)</title><rect x="1159.8" y="1299.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.8" y="1310.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.09%)</title><rect x="1160.8" y="1363.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.8" y="1374.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.09%)</title><rect x="1160.8" y="1347.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.8" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.09%)</title><rect x="1160.8" y="1331.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.8" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.09%)</title><rect x="1160.8" y="1315.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.8" y="1326.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.09%)</title><rect x="1160.8" y="1299.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.8" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.09%)</title><rect x="1160.8" y="1283.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.8" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.09%)</title><rect x="1160.8" y="1267.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.8" y="1278.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.18%)</title><rect x="1161.9" y="1379.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.9" y="1390.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.09%)</title><rect x="1162.9" y="1363.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.9" y="1374.0"></text>
</g>
<g>
<title>CProjNode::hash() const (1 samples, 0.09%)</title><rect x="1162.9" y="1347.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.9" y="1358.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.35%)</title><rect x="1163.9" y="1459.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.9" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.09%)</title><rect x="1163.9" y="1443.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1166.9" y="1454.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.09%)</title><rect x="1165.0" y="1443.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.0" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.09%)</title><rect x="1166.0" y="1443.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.0" y="1454.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (1 samples, 0.09%)</title><rect x="1167.1" y="1443.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.1" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.27%)</title><rect x="1168.1" y="1459.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.1" y="1470.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.09%)</title><rect x="1168.1" y="1443.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.1" y="1454.0"></text>
</g>
<g>
<title>Dependencies::sort_all_deps() (1 samples, 0.09%)</title><rect x="1168.1" y="1427.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.1" y="1438.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.18%)</title><rect x="1169.2" y="1443.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.2" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (2 samples, 0.18%)</title><rect x="1169.2" y="1427.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.2" y="1438.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*, bool) (2 samples, 0.18%)</title><rect x="1169.2" y="1411.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.2" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (1 samples, 0.09%)</title><rect x="1171.2" y="1491.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.2" y="1502.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.71%)</title><rect x="1172.3" y="1491.0" width="8.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="1502.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (8 samples, 0.71%)</title><rect x="1172.3" y="1475.0" width="8.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="1486.0"></text>
</g>
<g>
<title>Compilation::compile_method() (8 samples, 0.71%)</title><rect x="1172.3" y="1459.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="1470.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 0.62%)</title><rect x="1172.3" y="1443.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="1454.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.18%)</title><rect x="1172.3" y="1427.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="1438.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.18%)</title><rect x="1172.3" y="1411.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.18%)</title><rect x="1172.3" y="1395.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.18%)</title><rect x="1172.3" y="1379.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="1390.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.09%)</title><rect x="1172.3" y="1363.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="1374.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.09%)</title><rect x="1172.3" y="1347.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="1358.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.09%)</title><rect x="1172.3" y="1331.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="1342.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.09%)</title><rect x="1172.3" y="1315.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.3" y="1326.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1172.3" y="1299.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.09%)</title><rect x="1173.3" y="1363.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.3" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.09%)</title><rect x="1173.3" y="1347.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.3" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.09%)</title><rect x="1173.3" y="1331.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.3" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1173.3" y="1315.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.3" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1173.3" y="1299.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.3" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1173.3" y="1283.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.3" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1173.3" y="1267.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.3" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1173.3" y="1251.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1173.3" y="1235.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.3" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="1173.3" y="1219.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.3" y="1230.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.09%)</title><rect x="1174.4" y="1427.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.4" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.09%)</title><rect x="1174.4" y="1411.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.4" y="1422.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (1 samples, 0.09%)</title><rect x="1174.4" y="1395.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.4" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.09%)</title><rect x="1174.4" y="1379.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.4" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.09%)</title><rect x="1174.4" y="1363.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.4" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="1174.4" y="1347.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.4" y="1358.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.09%)</title><rect x="1174.4" y="1331.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.4" y="1342.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.35%)</title><rect x="1175.4" y="1427.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.4" y="1438.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 0.35%)</title><rect x="1175.4" y="1411.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.4" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (3 samples, 0.27%)</title><rect x="1175.4" y="1395.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.4" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::next_interval() (1 samples, 0.09%)</title><rect x="1175.4" y="1379.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.4" y="1390.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (2 samples, 0.18%)</title><rect x="1176.4" y="1379.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.4" y="1390.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.09%)</title><rect x="1176.4" y="1363.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.4" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.09%)</title><rect x="1177.5" y="1363.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.5" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.09%)</title><rect x="1177.5" y="1347.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="1358.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.09%)</title><rect x="1178.5" y="1395.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.5" y="1406.0"></text>
</g>
<g>
<title>as_BasicType(LIR_OprDesc::OprType) (1 samples, 0.09%)</title><rect x="1178.5" y="1379.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.5" y="1390.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.09%)</title><rect x="1179.6" y="1443.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.6" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.09%)</title><rect x="1179.6" y="1427.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="1438.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::copy_values_to(nmethod*) (1 samples, 0.09%)</title><rect x="1179.6" y="1411.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.6" y="1422.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.09%)</title><rect x="1180.6" y="1491.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.6" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.09%)</title><rect x="1180.6" y="1475.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.6" y="1486.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.09%)</title><rect x="1180.6" y="1459.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.6" y="1470.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.09%)</title><rect x="1180.6" y="1443.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.6" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.09%)</title><rect x="1181.7" y="1507.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.7" y="1518.0"></text>
</g>
<g>
<title>Monitor::try_lock() (1 samples, 0.09%)</title><rect x="1181.7" y="1491.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.7" y="1502.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.09%)</title><rect x="1182.7" y="1507.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.7" y="1518.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="1182.7" y="1491.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.7" y="1502.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="1182.7" y="1475.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.7" y="1486.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="1182.7" y="1459.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1185.7" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1182.7" y="1443.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.7" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1182.7" y="1427.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.7" y="1438.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.09%)</title><rect x="1182.7" y="1411.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1185.7" y="1422.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="1182.7" y="1395.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.7" y="1406.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="1182.7" y="1379.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1185.7" y="1390.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.09%)</title><rect x="1182.7" y="1363.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.7" y="1374.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (3 samples, 0.27%)</title><rect x="1183.7" y="1523.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.7" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (3 samples, 0.27%)</title><rect x="1183.7" y="1507.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.7" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (3 samples, 0.27%)</title><rect x="1183.7" y="1491.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.7" y="1502.0"></text>
</g>
<g>
<title>CompiledMethod::state() const (1 samples, 0.09%)</title><rect x="1183.7" y="1475.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.7" y="1486.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (2 samples, 0.18%)</title><rect x="1184.8" y="1475.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.8" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (2 samples, 0.18%)</title><rect x="1184.8" y="1459.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.8" y="1470.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.09%)</title><rect x="1185.8" y="1443.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1188.8" y="1454.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.09%)</title><rect x="1185.8" y="1427.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.8" y="1438.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.09%)</title><rect x="1185.8" y="1411.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.8" y="1422.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="1185.8" y="1395.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.8" y="1406.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.09%)</title><rect x="1185.8" y="1379.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.8" y="1390.0"></text>
</g>
<g>
<title>ena_io_poll?[ena] (1 samples, 0.09%)</title><rect x="1185.8" y="1363.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.8" y="1374.0"></text>
</g>
<g>
<title>ena_clean_rx_irq?[ena] (1 samples, 0.09%)</title><rect x="1185.8" y="1347.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.8" y="1358.0"></text>
</g>
<g>
<title>napi_gro_receive (1 samples, 0.09%)</title><rect x="1185.8" y="1331.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1188.8" y="1342.0"></text>
</g>
<g>
<title>netif_receive_skb_internal (1 samples, 0.09%)</title><rect x="1185.8" y="1315.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.8" y="1326.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.09%)</title><rect x="1185.8" y="1299.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1188.8" y="1310.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="1185.8" y="1283.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.8" y="1294.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.09%)</title><rect x="1185.8" y="1267.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.8" y="1278.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.09%)</title><rect x="1185.8" y="1251.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.8" y="1262.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="1185.8" y="1235.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.8" y="1246.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="1185.8" y="1219.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.8" y="1230.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="1185.8" y="1203.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.8" y="1214.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="1185.8" y="1187.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.8" y="1198.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="1185.8" y="1171.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1188.8" y="1182.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.27%)</title><rect x="1186.9" y="1523.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.9" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.27%)</title><rect x="1186.9" y="1507.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.9" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 0.27%)</title><rect x="1186.9" y="1491.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="1502.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="1186.9" y="1475.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="1486.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.09%)</title><rect x="1186.9" y="1459.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.9" y="1470.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.09%)</title><rect x="1186.9" y="1443.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1189.9" y="1454.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.18%)</title><rect x="1187.9" y="1475.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1190.9" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.09%)</title><rect x="1189.0" y="1459.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.0" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.09%)</title><rect x="1189.0" y="1443.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.0" y="1454.0"></text>
</g>
</g>
</svg>
