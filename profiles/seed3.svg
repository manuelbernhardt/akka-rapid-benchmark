<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1653"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1653"> </text>
<g id="frames">
<g>
<title>all (5,985 samples, 100.00%)</title><rect x="10.0" y="1619.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1630.0">all</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (5 samples, 0.08%)</title><rect x="10.0" y="1603.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1614.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (9 samples, 0.15%)</title><rect x="11.0" y="1603.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1614.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (7 samples, 0.12%)</title><rect x="11.2" y="1587.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.2" y="1598.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (4 samples, 0.07%)</title><rect x="11.8" y="1571.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.8" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (2 samples, 0.03%)</title><rect x="12.2" y="1555.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.2" y="1566.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (2 samples, 0.03%)</title><rect x="12.2" y="1539.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.2" y="1550.0"></text>
</g>
<g>
<title>Method::load_signature_classes(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="12.2" y="1523.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.2" y="1534.0"></text>
</g>
<g>
<title>[deoptimization] (8 samples, 0.13%)</title><rect x="13.0" y="1603.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.0" y="1614.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (3 samples, 0.05%)</title><rect x="13.2" y="1587.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.2" y="1598.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (2 samples, 0.03%)</title><rect x="13.4" y="1571.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="1582.0"></text>
</g>
<g>
<title>vframeArrayElement::fill_in(compiledVFrame*, bool) (2 samples, 0.03%)</title><rect x="13.4" y="1555.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.4" y="1566.0"></text>
</g>
<g>
<title>compiledVFrame::locals() const (2 samples, 0.03%)</title><rect x="13.4" y="1539.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.4" y="1550.0"></text>
</g>
<g>
<title>ScopeDesc::decode_scope_values(int) (2 samples, 0.03%)</title><rect x="13.4" y="1523.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.4" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="13.9" y="1587.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="16.9" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="13.9" y="1571.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.9" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="13.9" y="1555.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.9" y="1566.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.05%)</title><rect x="14.5" y="1603.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.5" y="1614.0"></text>
</g>
<g>
<title>[not_walkable_Java] (46 samples, 0.77%)</title><rect x="15.1" y="1603.0" width="9.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.1" y="1614.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (2 samples, 0.03%)</title><rect x="15.1" y="1587.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.1" y="1598.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (2 samples, 0.03%)</title><rect x="15.1" y="1571.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.74%)</title><rect x="15.5" y="1587.0" width="8.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="18.5" y="1598.0"></text>
</g>
<g>
<title>__clock_gettime (43 samples, 0.72%)</title><rect x="15.7" y="1571.0" width="8.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.7" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (43 samples, 0.72%)</title><rect x="15.7" y="1555.0" width="8.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.7" y="1566.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.47%)</title><rect x="18.7" y="1539.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.7" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.47%)</title><rect x="18.7" y="1523.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="21.7" y="1534.0"></text>
</g>
<g>
<title>sys_clock_gettime (15 samples, 0.25%)</title><rect x="21.2" y="1507.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.2" y="1518.0"></text>
</g>
<g>
<title>posix_ktime_get_ts (8 samples, 0.13%)</title><rect x="21.8" y="1491.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.8" y="1502.0"></text>
</g>
<g>
<title>ktime_get_ts64 (6 samples, 0.10%)</title><rect x="22.0" y="1475.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.0" y="1486.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (4 samples, 0.07%)</title><rect x="22.4" y="1459.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.4" y="1470.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (3 samples, 0.05%)</title><rect x="22.6" y="1443.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.6" y="1454.0"></text>
</g>
<g>
<title>put_timespec64 (4 samples, 0.07%)</title><rect x="23.4" y="1491.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.4" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="23.4" y="1475.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.32%)</title><rect x="24.2" y="1603.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="24.2" y="1587.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="27.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="24.2" y="1571.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="27.2" y="1582.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.10%)</title><rect x="24.6" y="1587.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="27.6" y="1598.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.10%)</title><rect x="24.6" y="1571.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="27.6" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="25.2" y="1555.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.2" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="25.2" y="1539.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.2" y="1550.0"></text>
</g>
<g>
<title>__close_nocancel (2 samples, 0.03%)</title><rect x="25.8" y="1587.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.8" y="1598.0"></text>
</g>
<g>
<title>open64 (8 samples, 0.13%)</title><rect x="26.4" y="1587.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="29.4" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="26.4" y="1571.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="29.4" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="26.4" y="1555.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.4" y="1566.0"></text>
</g>
<g>
<title>sys_openat (8 samples, 0.13%)</title><rect x="26.4" y="1539.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.4" y="1550.0"></text>
</g>
<g>
<title>do_sys_open (8 samples, 0.13%)</title><rect x="26.4" y="1523.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.4" y="1534.0"></text>
</g>
<g>
<title>do_filp_open (7 samples, 0.12%)</title><rect x="26.4" y="1507.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.4" y="1518.0"></text>
</g>
<g>
<title>path_openat (7 samples, 0.12%)</title><rect x="26.4" y="1491.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.4" y="1502.0"></text>
</g>
<g>
<title>link_path_walk (3 samples, 0.05%)</title><rect x="26.8" y="1475.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.8" y="1486.0"></text>
</g>
<g>
<title>vfs_open (2 samples, 0.03%)</title><rect x="27.4" y="1475.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.4" y="1486.0"></text>
</g>
<g>
<title>do_dentry_open (2 samples, 0.03%)</title><rect x="27.4" y="1459.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.4" y="1470.0"></text>
</g>
<g>
<title>kernfs_fop_open (2 samples, 0.03%)</title><rect x="27.4" y="1443.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.4" y="1454.0"></text>
</g>
<g>
<title>kmem_cache_alloc_trace (2 samples, 0.03%)</title><rect x="27.4" y="1427.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="30.4" y="1438.0"></text>
</g>
<g>
<title>[unknown_Java] (144 samples, 2.41%)</title><rect x="27.9" y="1603.0" width="28.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="30.9" y="1614.0">[u..</text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (2 samples, 0.03%)</title><rect x="28.7" y="1587.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.7" y="1598.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (3 samples, 0.05%)</title><rect x="29.1" y="1587.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.1" y="1598.0"></text>
</g>
<g>
<title>Interpreter (18 samples, 0.30%)</title><rect x="29.9" y="1587.0" width="3.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.9" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.12%)</title><rect x="33.7" y="1587.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="36.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="33.7" y="1571.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="36.7" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="33.7" y="1555.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="36.7" y="1566.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="34.4" y="1571.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.4" y="1582.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="34.4" y="1555.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="37.4" y="1566.0"></text>
</g>
<g>
<title>akka/stream/FlowShape.inlets (3 samples, 0.05%)</title><rect x="35.6" y="1587.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.6" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (14 samples, 0.23%)</title><rect x="36.8" y="1587.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.8" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (4 samples, 0.07%)</title><rect x="39.6" y="1587.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.6" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (7 samples, 0.12%)</title><rect x="40.4" y="1587.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.4" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (4 samples, 0.07%)</title><rect x="41.7" y="1587.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.7" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.setKey (2 samples, 0.03%)</title><rect x="42.5" y="1587.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.5" y="1598.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap$MutatabilityAwareIterator.hasNext (8 samples, 0.13%)</title><rect x="43.1" y="1587.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.1" y="1598.0"></text>
</g>
<g>
<title>itable stub (33 samples, 0.55%)</title><rect x="45.1" y="1587.0" width="6.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="48.1" y="1598.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="51.8" y="1587.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="54.8" y="1598.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (2 samples, 0.03%)</title><rect x="52.8" y="1587.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.8" y="1598.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (5 samples, 0.08%)</title><rect x="53.6" y="1587.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.6" y="1598.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (4 samples, 0.07%)</title><rect x="54.6" y="1587.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="1598.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (2 samples, 0.03%)</title><rect x="55.3" y="1587.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="58.3" y="1598.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.05%)</title><rect x="55.7" y="1587.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="58.7" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase$Worker.run (28 samples, 0.47%)</title><rect x="57.7" y="1603.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.7" y="1614.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 0.37%)</title><rect x="58.1" y="1587.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.1" y="1598.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 0.37%)</title><rect x="58.1" y="1571.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.1" y="1582.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (22 samples, 0.37%)</title><rect x="58.1" y="1555.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.1" y="1566.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (22 samples, 0.37%)</title><rect x="58.1" y="1539.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.1" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (12 samples, 0.20%)</title><rect x="58.1" y="1523.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.1" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/core/recovery/ResilientOutputStreamBase.flush (12 samples, 0.20%)</title><rect x="58.1" y="1507.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.1" y="1518.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (11 samples, 0.18%)</title><rect x="58.3" y="1491.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.3" y="1502.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (11 samples, 0.18%)</title><rect x="58.3" y="1475.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.3" y="1486.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (11 samples, 0.18%)</title><rect x="58.3" y="1459.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.3" y="1470.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (11 samples, 0.18%)</title><rect x="58.3" y="1443.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.3" y="1454.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.03%)</title><rect x="58.3" y="1427.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="61.3" y="1438.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.03%)</title><rect x="58.3" y="1411.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="61.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="58.7" y="1427.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="61.7" y="1438.0"></text>
</g>
<g>
<title>__write (9 samples, 0.15%)</title><rect x="58.7" y="1411.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="61.7" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.15%)</title><rect x="58.7" y="1395.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.7" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.15%)</title><rect x="58.7" y="1379.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.7" y="1390.0"></text>
</g>
<g>
<title>sys_write (8 samples, 0.13%)</title><rect x="58.9" y="1363.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.9" y="1374.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.13%)</title><rect x="58.9" y="1347.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.9" y="1358.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.10%)</title><rect x="58.9" y="1331.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="1342.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.10%)</title><rect x="58.9" y="1315.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.9" y="1326.0"></text>
</g>
<g>
<title>ext4_file_write_iter (6 samples, 0.10%)</title><rect x="58.9" y="1299.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.9" y="1310.0"></text>
</g>
<g>
<title>__generic_file_write_iter (6 samples, 0.10%)</title><rect x="58.9" y="1283.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.9" y="1294.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.05%)</title><rect x="58.9" y="1267.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="1278.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.05%)</title><rect x="58.9" y="1251.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.9" y="1262.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.05%)</title><rect x="58.9" y="1235.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.9" y="1246.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.05%)</title><rect x="58.9" y="1219.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.9" y="1230.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.05%)</title><rect x="59.5" y="1267.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.5" y="1278.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.03%)</title><rect x="59.5" y="1251.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.5" y="1262.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.03%)</title><rect x="59.5" y="1235.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.5" y="1246.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="59.5" y="1219.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.5" y="1230.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="60.1" y="1331.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.1" y="1342.0"></text>
</g>
<g>
<title>inotify_handle_event (2 samples, 0.03%)</title><rect x="60.1" y="1315.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.1" y="1326.0"></text>
</g>
<g>
<title>fsnotify_add_event (2 samples, 0.03%)</title><rect x="60.1" y="1299.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.1" y="1310.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.03%)</title><rect x="60.1" y="1283.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.1" y="1294.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="60.1" y="1267.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.1" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="60.1" y="1251.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="63.1" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (10 samples, 0.17%)</title><rect x="60.5" y="1523.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.5" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.doLayout (10 samples, 0.17%)</title><rect x="60.5" y="1507.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.5" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.getStringFromFormatter (2 samples, 0.03%)</title><rect x="60.5" y="1491.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.5" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/jackson/JacksonJsonFormatter.toJsonString (2 samples, 0.03%)</title><rect x="60.5" y="1475.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.5" y="1486.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (2 samples, 0.03%)</title><rect x="60.5" y="1459.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.5" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (6 samples, 0.10%)</title><rect x="60.9" y="1491.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.9" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/classic/JsonLayout.toJsonMap (6 samples, 0.10%)</title><rect x="60.9" y="1475.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.9" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.addTimestamp (4 samples, 0.07%)</title><rect x="61.3" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.3" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.formatTimestamp (4 samples, 0.07%)</title><rect x="61.3" y="1443.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.3" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/contrib/json/JsonLayoutBase.createDateFormat (3 samples, 0.05%)</title><rect x="61.3" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.3" y="1438.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (3 samples, 0.05%)</title><rect x="61.3" y="1411.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="1422.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (3 samples, 0.05%)</title><rect x="61.3" y="1395.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.3" y="1406.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (3 samples, 0.05%)</title><rect x="61.3" y="1379.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.3" y="1390.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (3 samples, 0.05%)</title><rect x="61.3" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.3" y="1374.0"></text>
</g>
<g>
<title>java/util/Calendar.createCalendar (2 samples, 0.03%)</title><rect x="61.3" y="1347.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.07%)</title><rect x="62.4" y="1587.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.05%)</title><rect x="62.4" y="1571.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.4" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="62.6" y="1555.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="62.6" y="1539.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.6" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="62.6" y="1523.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="65.6" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="62.6" y="1507.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="65.6" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="62.6" y="1491.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.6" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="62.6" y="1475.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="65.6" y="1486.0"></text>
</g>
<g>
<title>free (3 samples, 0.05%)</title><rect x="63.2" y="1603.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="66.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.05%)</title><rect x="63.8" y="1603.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.05%)</title><rect x="63.8" y="1587.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.05%)</title><rect x="63.8" y="1571.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.8" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.05%)</title><rect x="63.8" y="1555.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.05%)</title><rect x="63.8" y="1539.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.8" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.03%)</title><rect x="63.8" y="1523.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.8" y="1534.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.03%)</title><rect x="63.8" y="1507.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.03%)</title><rect x="63.8" y="1491.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/Thread.run (426 samples, 7.12%)</title><rect x="64.4" y="1603.0" width="84.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.4" y="1614.0">java/lang..</text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.run (17 samples, 0.28%)</title><rect x="64.4" y="1587.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.4" y="1598.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.nextTick (17 samples, 0.28%)</title><rect x="64.4" y="1571.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.4" y="1582.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.checkQueue (3 samples, 0.05%)</title><rect x="64.4" y="1555.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.4" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.pollNode (2 samples, 0.03%)</title><rect x="64.6" y="1539.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.6" y="1550.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$$anon$3.executeBucket$1 (11 samples, 0.18%)</title><rect x="65.0" y="1555.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.0" y="1566.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler$TaskHolder.executeTask (9 samples, 0.15%)</title><rect x="65.2" y="1539.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.2" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (9 samples, 0.15%)</title><rect x="65.2" y="1523.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (9 samples, 0.15%)</title><rect x="65.2" y="1507.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.2" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (9 samples, 0.15%)</title><rect x="65.2" y="1491.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.2" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (9 samples, 0.15%)</title><rect x="65.2" y="1475.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (9 samples, 0.15%)</title><rect x="65.2" y="1459.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="65.2" y="1443.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.15%)</title><rect x="65.2" y="1427.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.2" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="65.2" y="1411.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.2" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="66.6" y="1395.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="66.6" y="1379.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="66.6" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="66.6" y="1347.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.6" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="66.6" y="1331.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="66.6" y="1315.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="66.6" y="1299.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.waitNanos (3 samples, 0.05%)</title><rect x="67.2" y="1555.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (3 samples, 0.05%)</title><rect x="67.2" y="1539.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="67.4" y="1523.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="70.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (409 samples, 6.83%)</title><rect x="67.8" y="1587.0" width="80.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.8" y="1598.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (409 samples, 6.83%)</title><rect x="67.8" y="1571.0" width="80.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.8" y="1582.0">java/util..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="69.3" y="1555.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.3" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (60 samples, 1.00%)</title><rect x="69.7" y="1555.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.7" y="1566.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.05%)</title><rect x="69.7" y="1539.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.7" y="1550.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="69.7" y="1523.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.7" y="1534.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="69.7" y="1507.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.7" y="1518.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="69.7" y="1491.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.7" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.05%)</title><rect x="69.7" y="1475.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="69.9" y="1459.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.03%)</title><rect x="69.9" y="1443.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="69.9" y="1427.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="69.9" y="1411.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="69.9" y="1395.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="69.9" y="1379.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="69.9" y="1363.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.9" y="1374.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="69.9" y="1347.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="72.9" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="69.9" y="1331.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.9" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="69.9" y="1315.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="72.9" y="1326.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="69.9" y="1299.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.9" y="1310.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="69.9" y="1283.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="72.9" y="1294.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="69.9" y="1267.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="72.9" y="1278.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="69.9" y="1251.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.9" y="1262.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="69.9" y="1235.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="72.9" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="69.9" y="1219.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="72.9" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (57 samples, 0.95%)</title><rect x="70.3" y="1539.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.3" y="1550.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (57 samples, 0.95%)</title><rect x="70.3" y="1523.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="1534.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (57 samples, 0.95%)</title><rect x="70.3" y="1507.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.3" y="1518.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver.aroundReceive (57 samples, 0.95%)</title><rect x="70.3" y="1491.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.3" y="1502.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (57 samples, 0.95%)</title><rect x="70.3" y="1475.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="1486.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (57 samples, 0.95%)</title><rect x="70.3" y="1459.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.3" y="1470.0"></text>
</g>
<g>
<title>akka/io/InetAddressDnsResolver$$anonfun$receive$1.applyOrElse (57 samples, 0.95%)</title><rect x="70.3" y="1443.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.05%)</title><rect x="70.3" y="1427.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="70.3" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.3" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="70.3" y="1395.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.3" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="70.3" y="1379.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="70.3" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.05%)</title><rect x="70.3" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.05%)</title><rect x="70.3" y="1331.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.05%)</title><rect x="70.3" y="1315.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="70.3" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="70.3" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="70.3" y="1267.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="70.3" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="70.3" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="70.3" y="1219.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="70.3" y="1203.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="70.3" y="1187.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="70.3" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="70.3" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="70.3" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="70.3" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="73.3" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="70.3" y="1107.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="73.3" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="70.3" y="1091.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="73.3" y="1102.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="70.3" y="1075.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.3" y="1086.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="70.3" y="1059.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.3" y="1070.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="70.3" y="1043.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="73.3" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="70.3" y="1027.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.3" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="70.3" y="1011.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.3" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="70.3" y="995.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="73.3" y="1006.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (54 samples, 0.90%)</title><rect x="70.9" y="1427.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.9" y="1438.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (54 samples, 0.90%)</title><rect x="70.9" y="1411.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.9" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (54 samples, 0.90%)</title><rect x="70.9" y="1395.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.9" y="1406.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (51 samples, 0.85%)</title><rect x="71.1" y="1379.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="1390.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (51 samples, 0.85%)</title><rect x="71.1" y="1363.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.1" y="1374.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (51 samples, 0.85%)</title><rect x="71.1" y="1347.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.1" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (51 samples, 0.85%)</title><rect x="71.1" y="1331.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.63%)</title><rect x="71.5" y="1315.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="74.5" y="1326.0"></text>
</g>
<g>
<title>__connect (3 samples, 0.05%)</title><rect x="71.7" y="1299.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="74.7" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="71.7" y="1283.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.7" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="71.7" y="1267.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.7" y="1278.0"></text>
</g>
<g>
<title>sys_connect (3 samples, 0.05%)</title><rect x="71.7" y="1251.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.7" y="1262.0"></text>
</g>
<g>
<title>SYSC_connect (3 samples, 0.05%)</title><rect x="71.7" y="1235.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.7" y="1246.0"></text>
</g>
<g>
<title>inet_dgram_connect (3 samples, 0.05%)</title><rect x="71.7" y="1219.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.7" y="1230.0"></text>
</g>
<g>
<title>ip4_datagram_connect (2 samples, 0.03%)</title><rect x="71.9" y="1203.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.9" y="1214.0"></text>
</g>
<g>
<title>__open_nocancel (2 samples, 0.03%)</title><rect x="72.5" y="1299.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.5" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="72.5" y="1283.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.5" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="72.5" y="1267.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="75.5" y="1278.0"></text>
</g>
<g>
<title>sys_openat (2 samples, 0.03%)</title><rect x="72.5" y="1251.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="75.5" y="1262.0"></text>
</g>
<g>
<title>do_sys_open (2 samples, 0.03%)</title><rect x="72.5" y="1235.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.5" y="1246.0"></text>
</g>
<g>
<title>do_filp_open (2 samples, 0.03%)</title><rect x="72.5" y="1219.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.5" y="1230.0"></text>
</g>
<g>
<title>path_openat (2 samples, 0.03%)</title><rect x="72.5" y="1203.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.5" y="1214.0"></text>
</g>
<g>
<title>__sendmmsg (30 samples, 0.50%)</title><rect x="72.9" y="1299.0" width="5.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="75.9" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.50%)</title><rect x="72.9" y="1283.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.9" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.50%)</title><rect x="72.9" y="1267.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.9" y="1278.0"></text>
</g>
<g>
<title>sys_sendmmsg (30 samples, 0.50%)</title><rect x="72.9" y="1251.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.9" y="1262.0"></text>
</g>
<g>
<title>__sys_sendmmsg (30 samples, 0.50%)</title><rect x="72.9" y="1235.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.9" y="1246.0"></text>
</g>
<g>
<title>___sys_sendmsg (30 samples, 0.50%)</title><rect x="72.9" y="1219.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.9" y="1230.0"></text>
</g>
<g>
<title>sock_sendmsg (27 samples, 0.45%)</title><rect x="73.5" y="1203.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.5" y="1214.0"></text>
</g>
<g>
<title>inet_sendmsg (26 samples, 0.43%)</title><rect x="73.5" y="1187.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.5" y="1198.0"></text>
</g>
<g>
<title>udp_sendmsg (26 samples, 0.43%)</title><rect x="73.5" y="1171.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.5" y="1182.0"></text>
</g>
<g>
<title>udp_send_skb (26 samples, 0.43%)</title><rect x="73.5" y="1155.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.5" y="1166.0"></text>
</g>
<g>
<title>ip_send_skb (25 samples, 0.42%)</title><rect x="73.7" y="1139.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.7" y="1150.0"></text>
</g>
<g>
<title>ip_local_out (24 samples, 0.40%)</title><rect x="73.9" y="1123.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="1134.0"></text>
</g>
<g>
<title>ip_output (24 samples, 0.40%)</title><rect x="73.9" y="1107.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.9" y="1118.0"></text>
</g>
<g>
<title>ip_finish_output (24 samples, 0.40%)</title><rect x="73.9" y="1091.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.9" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 0.40%)</title><rect x="73.9" y="1075.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (21 samples, 0.35%)</title><rect x="73.9" y="1059.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.9" y="1070.0"></text>
</g>
<g>
<title>do_softirq.part.17 (21 samples, 0.35%)</title><rect x="73.9" y="1043.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.9" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 0.33%)</title><rect x="74.1" y="1027.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="77.1" y="1038.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 0.33%)</title><rect x="74.1" y="1011.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.1" y="1022.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 0.30%)</title><rect x="74.3" y="995.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.3" y="1006.0"></text>
</g>
<g>
<title>process_backlog (18 samples, 0.30%)</title><rect x="74.3" y="979.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.3" y="990.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 0.28%)</title><rect x="74.5" y="963.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.5" y="974.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (17 samples, 0.28%)</title><rect x="74.5" y="947.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.5" y="958.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.28%)</title><rect x="74.5" y="931.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.5" y="942.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.28%)</title><rect x="74.5" y="915.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.5" y="926.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.28%)</title><rect x="74.5" y="899.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.5" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 0.28%)</title><rect x="74.5" y="883.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.5" y="894.0"></text>
</g>
<g>
<title>udp_rcv (17 samples, 0.28%)</title><rect x="74.5" y="867.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.5" y="878.0"></text>
</g>
<g>
<title>__udp4_lib_rcv (17 samples, 0.28%)</title><rect x="74.5" y="851.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.5" y="862.0"></text>
</g>
<g>
<title>udp_unicast_rcv_skb (17 samples, 0.28%)</title><rect x="74.5" y="835.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="77.5" y="846.0"></text>
</g>
<g>
<title>udp_queue_rcv_skb (17 samples, 0.28%)</title><rect x="74.5" y="819.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="77.5" y="830.0"></text>
</g>
<g>
<title>__udp_enqueue_schedule_skb (15 samples, 0.25%)</title><rect x="74.5" y="803.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.5" y="814.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.25%)</title><rect x="74.5" y="787.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.5" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.25%)</title><rect x="74.5" y="771.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.5" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.25%)</title><rect x="74.5" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.25%)</title><rect x="74.5" y="739.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.5" y="750.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="77.4" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.4" y="814.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="78.0" y="1059.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.0" y="1070.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="78.0" y="1043.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.0" y="1054.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="78.0" y="1027.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.0" y="1038.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="78.0" y="1011.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.0" y="1022.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="78.0" y="995.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.0" y="1006.0"></text>
</g>
<g>
<title>poll (6 samples, 0.10%)</title><rect x="79.2" y="1315.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="82.2" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="79.2" y="1299.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.2" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="79.2" y="1283.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.2" y="1294.0"></text>
</g>
<g>
<title>sys_poll (4 samples, 0.07%)</title><rect x="79.4" y="1267.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.4" y="1278.0"></text>
</g>
<g>
<title>do_sys_poll (4 samples, 0.07%)</title><rect x="79.4" y="1251.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="82.4" y="1262.0"></text>
</g>
<g>
<title>poll_schedule_timeout (2 samples, 0.03%)</title><rect x="79.6" y="1235.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="82.6" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="79.6" y="1219.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.6" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="79.6" y="1203.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.6" y="1214.0"></text>
</g>
<g>
<title>socket (4 samples, 0.07%)</title><rect x="80.4" y="1315.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="83.4" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="80.4" y="1299.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="83.4" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="80.4" y="1283.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.4" y="1294.0"></text>
</g>
<g>
<title>sys_socket (3 samples, 0.05%)</title><rect x="80.4" y="1267.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.4" y="1278.0"></text>
</g>
<g>
<title>__sock_create (2 samples, 0.03%)</title><rect x="80.4" y="1251.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.4" y="1262.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.03%)</title><rect x="80.4" y="1235.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (187 samples, 3.12%)</title><rect x="81.6" y="1555.0" width="36.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.6" y="1566.0">akk..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run (187 samples, 3.12%)</title><rect x="81.6" y="1539.0" width="36.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.6" y="1550.0">akk..</text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.run$1 (187 samples, 3.12%)</title><rect x="81.6" y="1523.0" width="36.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.6" y="1534.0">akk..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.run (145 samples, 2.42%)</title><rect x="82.2" y="1507.0" width="28.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.2" y="1518.0">ak..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (141 samples, 2.36%)</title><rect x="82.6" y="1491.0" width="27.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.6" y="1502.0">a..</text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$2.tryRun (140 samples, 2.34%)</title><rect x="82.8" y="1475.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.8" y="1486.0">a..</text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (32 samples, 0.53%)</title><rect x="82.9" y="1459.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (32 samples, 0.53%)</title><rect x="82.9" y="1443.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (32 samples, 0.53%)</title><rect x="82.9" y="1427.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (32 samples, 0.53%)</title><rect x="82.9" y="1411.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (32 samples, 0.53%)</title><rect x="82.9" y="1395.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (32 samples, 0.53%)</title><rect x="82.9" y="1379.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (31 samples, 0.52%)</title><rect x="83.1" y="1363.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.1" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (30 samples, 0.50%)</title><rect x="83.3" y="1347.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.3" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (30 samples, 0.50%)</title><rect x="83.3" y="1331.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.3" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (30 samples, 0.50%)</title><rect x="83.3" y="1315.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.3" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (30 samples, 0.50%)</title><rect x="83.3" y="1299.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (30 samples, 0.50%)</title><rect x="83.3" y="1283.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (29 samples, 0.48%)</title><rect x="83.3" y="1267.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (29 samples, 0.48%)</title><rect x="83.3" y="1251.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (29 samples, 0.48%)</title><rect x="83.3" y="1235.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (29 samples, 0.48%)</title><rect x="83.3" y="1219.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (29 samples, 0.48%)</title><rect x="83.3" y="1203.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.48%)</title><rect x="83.3" y="1187.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.45%)</title><rect x="83.7" y="1171.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.7" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="83.7" y="1155.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="86.7" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (25 samples, 0.42%)</title><rect x="84.1" y="1155.0" width="5.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="87.1" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.38%)</title><rect x="84.5" y="1139.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.38%)</title><rect x="84.5" y="1123.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.5" y="1134.0"></text>
</g>
<g>
<title>sys_futex (22 samples, 0.37%)</title><rect x="84.7" y="1107.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.7" y="1118.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.37%)</title><rect x="84.7" y="1091.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.7" y="1102.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.37%)</title><rect x="84.7" y="1075.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="87.7" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="85.1" y="1059.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.1" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.28%)</title><rect x="85.7" y="1059.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.7" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.28%)</title><rect x="85.7" y="1043.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.7" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.28%)</title><rect x="85.7" y="1027.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.7" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (105 samples, 1.75%)</title><rect x="89.5" y="1459.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.5" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (105 samples, 1.75%)</title><rect x="89.5" y="1443.0" width="20.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.5" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (105 samples, 1.75%)</title><rect x="89.5" y="1427.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.5" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (24 samples, 0.40%)</title><rect x="89.8" y="1411.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.38%)</title><rect x="90.0" y="1395.0" width="4.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="93.0" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (23 samples, 0.38%)</title><rect x="90.0" y="1379.0" width="4.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="93.0" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.35%)</title><rect x="90.4" y="1363.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.4" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.35%)</title><rect x="90.4" y="1347.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.4" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_wait (16 samples, 0.27%)</title><rect x="91.2" y="1331.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.2" y="1342.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.23%)</title><rect x="91.4" y="1315.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.4" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (2 samples, 0.03%)</title><rect x="91.4" y="1299.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.4" y="1310.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="91.4" y="1283.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.4" y="1294.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.03%)</title><rect x="92.0" y="1299.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="95.0" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.13%)</title><rect x="92.4" y="1299.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.4" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.13%)</title><rect x="92.4" y="1283.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="95.4" y="1294.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="92.6" y="1267.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.6" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="92.6" y="1251.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.6" y="1262.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="93.0" y="1267.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="96.0" y="1278.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.08%)</title><rect x="93.0" y="1251.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.0" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="93.2" y="1235.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (20 samples, 0.33%)</title><rect x="94.6" y="1411.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.6" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.08%)</title><rect x="94.6" y="1395.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.6" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.07%)</title><rect x="94.6" y="1379.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.6" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (12 samples, 0.20%)</title><rect x="95.8" y="1395.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.8" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (12 samples, 0.20%)</title><rect x="95.8" y="1379.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="96.0" y="1363.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="99.0" y="1374.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (3 samples, 0.05%)</title><rect x="96.0" y="1347.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="99.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="96.0" y="1331.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="99.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="96.0" y="1315.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="99.0" y="1326.0"></text>
</g>
<g>
<title>__read (3 samples, 0.05%)</title><rect x="96.0" y="1299.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="99.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="96.0" y="1283.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.0" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="96.0" y="1267.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.0" y="1278.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.05%)</title><rect x="96.0" y="1251.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.0" y="1262.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.05%)</title><rect x="96.0" y="1235.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.0" y="1246.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.05%)</title><rect x="96.0" y="1219.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.0" y="1230.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.05%)</title><rect x="96.0" y="1203.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.0" y="1214.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.05%)</title><rect x="96.0" y="1187.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.0" y="1198.0"></text>
</g>
<g>
<title>__read (5 samples, 0.08%)</title><rect x="96.8" y="1347.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="99.8" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="96.9" y="1331.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="99.9" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="96.9" y="1315.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.9" y="1326.0"></text>
</g>
<g>
<title>sys_read (4 samples, 0.07%)</title><rect x="96.9" y="1299.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.9" y="1310.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.07%)</title><rect x="96.9" y="1283.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.9" y="1294.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.03%)</title><rect x="96.9" y="1267.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.9" y="1278.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.03%)</title><rect x="96.9" y="1251.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.9" y="1262.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.03%)</title><rect x="96.9" y="1235.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.9" y="1246.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="97.3" y="1267.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="100.3" y="1278.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="97.3" y="1251.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.3" y="1262.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="97.3" y="1235.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.3" y="1246.0"></text>
</g>
<g>
<title>__read (2 samples, 0.03%)</title><rect x="97.7" y="1363.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="100.7" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="97.7" y="1347.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="100.7" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="97.7" y="1331.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="100.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.03%)</title><rect x="98.1" y="1395.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.1" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (40 samples, 0.67%)</title><rect x="98.5" y="1411.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.5" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (4 samples, 0.07%)</title><rect x="99.1" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.07%)</title><rect x="99.1" y="1379.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (33 samples, 0.55%)</title><rect x="99.9" y="1395.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.9" y="1406.0"></text>
</g>
<g>
<title>epoll_ctl (32 samples, 0.53%)</title><rect x="100.1" y="1379.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="103.1" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.47%)</title><rect x="100.9" y="1363.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.9" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.45%)</title><rect x="100.9" y="1347.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.9" y="1358.0"></text>
</g>
<g>
<title>sys_epoll_ctl (22 samples, 0.37%)</title><rect x="101.9" y="1331.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.9" y="1342.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="104.0" y="1315.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="107.0" y="1326.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="104.0" y="1299.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="107.0" y="1310.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="104.0" y="1283.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.0" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.12 (4 samples, 0.07%)</title><rect x="104.6" y="1315.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="107.6" y="1326.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="104.8" y="1299.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.8" y="1310.0"></text>
</g>
<g>
<title>ep_remove (2 samples, 0.03%)</title><rect x="105.4" y="1315.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.4" y="1326.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.10 (2 samples, 0.03%)</title><rect x="105.4" y="1299.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.4" y="1310.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="105.4" y="1283.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="108.4" y="1294.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="105.8" y="1315.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.8" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (19 samples, 0.32%)</title><rect x="106.4" y="1411.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.4" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.implDereg (3 samples, 0.05%)</title><rect x="107.4" y="1395.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.4" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (3 samples, 0.05%)</title><rect x="107.4" y="1379.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.4" y="1390.0"></text>
</g>
<g>
<title>epoll_ctl (3 samples, 0.05%)</title><rect x="107.4" y="1363.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="110.4" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="107.4" y="1347.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.4" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="107.4" y="1331.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.4" y="1342.0"></text>
</g>
<g>
<title>sys_epoll_ctl (3 samples, 0.05%)</title><rect x="107.4" y="1315.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (11 samples, 0.18%)</title><rect x="108.0" y="1395.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.0" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (11 samples, 0.18%)</title><rect x="108.0" y="1379.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.0" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (11 samples, 0.18%)</title><rect x="108.0" y="1363.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.0" y="1374.0"></text>
</g>
<g>
<title>close (11 samples, 0.18%)</title><rect x="108.0" y="1347.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="111.0" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="108.2" y="1331.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.2" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="108.2" y="1315.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.2" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.17%)</title><rect x="108.2" y="1299.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.2" y="1310.0"></text>
</g>
<g>
<title>task_work_run (10 samples, 0.17%)</title><rect x="108.2" y="1283.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="111.2" y="1294.0"></text>
</g>
<g>
<title>____fput (9 samples, 0.15%)</title><rect x="108.4" y="1267.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.4" y="1278.0"></text>
</g>
<g>
<title>__fput (8 samples, 0.13%)</title><rect x="108.4" y="1251.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.4" y="1262.0"></text>
</g>
<g>
<title>dput (2 samples, 0.03%)</title><rect x="108.4" y="1235.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.4" y="1246.0"></text>
</g>
<g>
<title>dput.part.26 (2 samples, 0.03%)</title><rect x="108.4" y="1219.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.4" y="1230.0"></text>
</g>
<g>
<title>__dentry_kill (2 samples, 0.03%)</title><rect x="108.4" y="1203.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.4" y="1214.0"></text>
</g>
<g>
<title>dentry_unlink_inode (2 samples, 0.03%)</title><rect x="108.4" y="1187.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="111.4" y="1198.0"></text>
</g>
<g>
<title>iput (2 samples, 0.03%)</title><rect x="108.4" y="1171.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.4" y="1182.0"></text>
</g>
<g>
<title>evict (2 samples, 0.03%)</title><rect x="108.4" y="1155.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.4" y="1166.0"></text>
</g>
<g>
<title>sock_close (6 samples, 0.10%)</title><rect x="108.8" y="1235.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.8" y="1246.0"></text>
</g>
<g>
<title>__sock_release (6 samples, 0.10%)</title><rect x="108.8" y="1219.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.8" y="1230.0"></text>
</g>
<g>
<title>inet6_release (6 samples, 0.10%)</title><rect x="108.8" y="1203.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.8" y="1214.0"></text>
</g>
<g>
<title>inet_release (6 samples, 0.10%)</title><rect x="108.8" y="1187.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.8" y="1198.0"></text>
</g>
<g>
<title>tcp_close (6 samples, 0.10%)</title><rect x="108.8" y="1171.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.8" y="1182.0"></text>
</g>
<g>
<title>inet_csk_destroy_sock (2 samples, 0.03%)</title><rect x="109.0" y="1155.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="112.0" y="1166.0"></text>
</g>
<g>
<title>tcp_disconnect (2 samples, 0.03%)</title><rect x="109.6" y="1155.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.6" y="1166.0"></text>
</g>
<g>
<title>tcp_send_active_reset (2 samples, 0.03%)</title><rect x="109.6" y="1139.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.6" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="109.6" y="1123.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.6" y="1134.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="109.6" y="1107.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="112.6" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="109.6" y="1091.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.6" y="1102.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="109.6" y="1075.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.6" y="1086.0"></text>
</g>
<g>
<title>akka/util/SerializedSuspendableExecutionContext.execute (2 samples, 0.03%)</title><rect x="110.4" y="1491.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.4" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/AbstractNodeQueue.add (2 samples, 0.03%)</title><rect x="110.4" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.4" y="1486.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$Task.run (39 samples, 0.65%)</title><rect x="110.7" y="1507.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.7" y="1518.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3.tryRun (12 samples, 0.20%)</title><rect x="110.9" y="1491.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.9" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (7 samples, 0.12%)</title><rect x="110.9" y="1475.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.9" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.12%)</title><rect x="110.9" y="1459.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.9" y="1470.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.12%)</title><rect x="110.9" y="1443.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.9" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.12%)</title><rect x="110.9" y="1427.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.9" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.12%)</title><rect x="110.9" y="1411.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.9" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.12%)</title><rect x="110.9" y="1395.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.9" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.12%)</title><rect x="110.9" y="1379.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.12%)</title><rect x="110.9" y="1363.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.12%)</title><rect x="110.9" y="1347.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="110.9" y="1331.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.9" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.12%)</title><rect x="110.9" y="1315.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.9" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="110.9" y="1299.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.9" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.12%)</title><rect x="110.9" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.12%)</title><rect x="110.9" y="1267.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.12%)</title><rect x="110.9" y="1251.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.12%)</title><rect x="110.9" y="1235.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.12%)</title><rect x="110.9" y="1219.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.12%)</title><rect x="110.9" y="1203.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.12%)</title><rect x="110.9" y="1187.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.9" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="110.9" y="1171.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="113.9" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="111.3" y="1171.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="114.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="111.5" y="1155.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.5" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="111.5" y="1139.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.5" y="1150.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.07%)</title><rect x="111.5" y="1123.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.5" y="1134.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="111.5" y="1107.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.5" y="1118.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="111.5" y="1091.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="114.5" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="111.5" y="1075.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="114.5" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="111.5" y="1059.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.5" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="111.5" y="1043.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (5 samples, 0.08%)</title><rect x="112.3" y="1475.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.3" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (4 samples, 0.07%)</title><rect x="112.5" y="1459.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.add (4 samples, 0.07%)</title><rect x="112.5" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.5" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (4 samples, 0.07%)</title><rect x="112.5" y="1427.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.5" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (2 samples, 0.03%)</title><rect x="112.7" y="1411.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.7" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (2 samples, 0.03%)</title><rect x="112.7" y="1395.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.tryRun (12 samples, 0.20%)</title><rect x="113.3" y="1491.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.3" y="1502.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (12 samples, 0.20%)</title><rect x="113.3" y="1475.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.3" y="1486.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (11 samples, 0.18%)</title><rect x="113.3" y="1459.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.3" y="1470.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1020/490258007.apply$mcV$sp (2 samples, 0.03%)</title><rect x="113.3" y="1443.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.3" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$1 (2 samples, 0.03%)</title><rect x="113.3" y="1427.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.3" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (2 samples, 0.03%)</title><rect x="113.3" y="1411.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.3" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7$$Lambda$1021/181835399.apply$mcV$sp (9 samples, 0.15%)</title><rect x="113.7" y="1443.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.7" y="1454.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$7.$anonfun$tryRun$2 (9 samples, 0.15%)</title><rect x="113.7" y="1427.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.7" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (9 samples, 0.15%)</title><rect x="113.7" y="1411.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.7" y="1422.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (9 samples, 0.15%)</title><rect x="113.7" y="1395.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.7" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (7 samples, 0.12%)</title><rect x="113.9" y="1379.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.9" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (5 samples, 0.08%)</title><rect x="114.1" y="1363.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (4 samples, 0.07%)</title><rect x="114.3" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.3" y="1358.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (3 samples, 0.05%)</title><rect x="114.3" y="1331.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="117.3" y="1342.0"></text>
</g>
<g>
<title>getsockopt (3 samples, 0.05%)</title><rect x="114.3" y="1315.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="117.3" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="114.3" y="1299.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.3" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="114.3" y="1283.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.3" y="1294.0"></text>
</g>
<g>
<title>sys_getsockopt (3 samples, 0.05%)</title><rect x="114.3" y="1267.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.3" y="1278.0"></text>
</g>
<g>
<title>security_socket_getsockopt (2 samples, 0.03%)</title><rect x="114.3" y="1251.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.3" y="1262.0"></text>
</g>
<g>
<title>apparmor_socket_getsockopt (2 samples, 0.03%)</title><rect x="114.3" y="1235.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.3" y="1246.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="114.3" y="1219.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.3" y="1230.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="114.3" y="1203.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.3" y="1214.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$8.tryRun (14 samples, 0.23%)</title><rect x="115.7" y="1491.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.7" y="1502.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1019/1414886507.apply$mcV$sp (14 samples, 0.23%)</title><rect x="115.7" y="1475.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.7" y="1486.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$stopWith$1 (14 samples, 0.23%)</title><rect x="115.7" y="1459.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.7" y="1470.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (13 samples, 0.22%)</title><rect x="115.7" y="1443.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.22%)</title><rect x="115.7" y="1427.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (13 samples, 0.22%)</title><rect x="115.7" y="1411.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.7" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (13 samples, 0.22%)</title><rect x="115.7" y="1395.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (13 samples, 0.22%)</title><rect x="115.7" y="1379.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (13 samples, 0.22%)</title><rect x="115.7" y="1363.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (13 samples, 0.22%)</title><rect x="115.7" y="1347.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (13 samples, 0.22%)</title><rect x="115.7" y="1331.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.7" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (12 samples, 0.20%)</title><rect x="115.7" y="1315.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.7" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (12 samples, 0.20%)</title><rect x="115.7" y="1299.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.7" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (12 samples, 0.20%)</title><rect x="115.7" y="1283.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.7" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (12 samples, 0.20%)</title><rect x="115.7" y="1267.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.7" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (12 samples, 0.20%)</title><rect x="115.7" y="1251.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.20%)</title><rect x="115.7" y="1235.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.20%)</title><rect x="115.7" y="1219.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (12 samples, 0.20%)</title><rect x="115.7" y="1203.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.20%)</title><rect x="115.7" y="1187.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.20%)</title><rect x="115.7" y="1171.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.20%)</title><rect x="115.7" y="1155.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.7" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.20%)</title><rect x="115.7" y="1139.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="118.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.20%)</title><rect x="115.7" y="1123.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.7" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.20%)</title><rect x="115.7" y="1107.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="118.7" y="1118.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.20%)</title><rect x="115.7" y="1091.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.7" y="1102.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.20%)</title><rect x="115.7" y="1075.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.7" y="1086.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.20%)</title><rect x="115.7" y="1059.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.7" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.18%)</title><rect x="115.9" y="1043.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.9" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.18%)</title><rect x="115.9" y="1027.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.9" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.18%)</title><rect x="115.9" y="1011.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.9" y="1022.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/Futures$4.run (6 samples, 0.10%)</title><rect x="118.4" y="1555.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="1566.0"></text>
</g>
<g>
<title>akka/cluster/rapid/package$$anon$1.onSuccess (5 samples, 0.08%)</title><rect x="118.4" y="1539.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.4" y="1550.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (5 samples, 0.08%)</title><rect x="118.4" y="1523.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.4" y="1534.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (5 samples, 0.08%)</title><rect x="118.4" y="1507.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.4" y="1518.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (5 samples, 0.08%)</title><rect x="118.4" y="1491.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="1502.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (5 samples, 0.08%)</title><rect x="118.4" y="1475.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.4" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (5 samples, 0.08%)</title><rect x="118.4" y="1459.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.4" y="1470.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (5 samples, 0.08%)</title><rect x="118.4" y="1443.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.4" y="1454.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (5 samples, 0.08%)</title><rect x="118.4" y="1427.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="1438.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (5 samples, 0.08%)</title><rect x="118.4" y="1411.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.4" y="1422.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (5 samples, 0.08%)</title><rect x="118.4" y="1395.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="1406.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (5 samples, 0.08%)</title><rect x="118.4" y="1379.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.4" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (5 samples, 0.08%)</title><rect x="118.4" y="1363.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.4" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (5 samples, 0.08%)</title><rect x="118.4" y="1347.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.4" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (5 samples, 0.08%)</title><rect x="118.4" y="1331.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.08%)</title><rect x="118.4" y="1315.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.4" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.08%)</title><rect x="118.4" y="1299.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.4" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="118.4" y="1283.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.4" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.08%)</title><rect x="118.4" y="1267.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="118.4" y="1251.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.08%)</title><rect x="118.4" y="1235.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.08%)</title><rect x="118.4" y="1219.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.08%)</title><rect x="118.4" y="1203.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.08%)</title><rect x="118.4" y="1187.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.08%)</title><rect x="118.4" y="1171.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="118.4" y="1155.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="118.4" y="1139.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="118.4" y="1123.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="121.4" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="118.8" y="1123.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="121.8" y="1134.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1142/1335081579.run (20 samples, 0.33%)</title><rect x="119.6" y="1555.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.6" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$3 (19 samples, 0.32%)</title><rect x="119.8" y="1539.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.8" y="1550.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (4 samples, 0.07%)</title><rect x="119.8" y="1523.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.8" y="1534.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (4 samples, 0.07%)</title><rect x="119.8" y="1507.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.8" y="1518.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 0.07%)</title><rect x="119.8" y="1491.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.8" y="1502.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.05%)</title><rect x="119.8" y="1475.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.8" y="1486.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.05%)</title><rect x="119.8" y="1459.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.8" y="1470.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.05%)</title><rect x="119.8" y="1443.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.8" y="1454.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.05%)</title><rect x="119.8" y="1427.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.8" y="1438.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (3 samples, 0.05%)</title><rect x="119.8" y="1411.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.8" y="1422.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (2 samples, 0.03%)</title><rect x="120.0" y="1395.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1406.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (2 samples, 0.03%)</title><rect x="120.0" y="1379.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (2 samples, 0.03%)</title><rect x="120.0" y="1363.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="120.0" y="1347.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="120.0" y="1331.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="120.0" y="1315.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="120.0" y="1299.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="120.0" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.0" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="120.0" y="1267.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="123.0" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="120.0" y="1251.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="123.0" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="120.0" y="1235.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.0" y="1246.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="120.0" y="1219.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.0" y="1230.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="120.0" y="1203.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.0" y="1214.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="120.0" y="1187.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="123.0" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="120.0" y="1171.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.0" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="120.0" y="1155.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="123.0" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="120.0" y="1139.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.0" y="1150.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (2 samples, 0.03%)</title><rect x="120.6" y="1523.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.6" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (2 samples, 0.03%)</title><rect x="120.6" y="1507.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.6" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (2 samples, 0.03%)</title><rect x="120.6" y="1491.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.6" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getExpectedObserversOf (11 samples, 0.18%)</title><rect x="121.2" y="1523.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.2" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.getPredecessorsOf (11 samples, 0.18%)</title><rect x="121.2" y="1507.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.2" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (11 samples, 0.18%)</title><rect x="121.2" y="1491.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.2" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (11 samples, 0.18%)</title><rect x="121.2" y="1475.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.2" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (11 samples, 0.18%)</title><rect x="121.2" y="1459.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.2" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (11 samples, 0.18%)</title><rect x="121.2" y="1443.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.2" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (10 samples, 0.17%)</title><rect x="121.4" y="1427.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.4" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (10 samples, 0.17%)</title><rect x="121.4" y="1411.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.4" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (8 samples, 0.13%)</title><rect x="121.8" y="1395.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$847/1209954571.apply (2 samples, 0.03%)</title><rect x="122.0" y="1379.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.0" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.computeHash (2 samples, 0.03%)</title><rect x="122.0" y="1363.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.0" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (2 samples, 0.03%)</title><rect x="122.4" y="1379.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.4" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (2 samples, 0.03%)</title><rect x="122.4" y="1363.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.4" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (2 samples, 0.03%)</title><rect x="122.4" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.4" y="1358.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (2 samples, 0.03%)</title><rect x="122.4" y="1331.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1224/604459669.run (7 samples, 0.12%)</title><rect x="123.6" y="1555.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.6" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$5 (7 samples, 0.12%)</title><rect x="123.6" y="1539.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.6" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager.getAllMetadata (3 samples, 0.05%)</title><rect x="124.0" y="1523.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.forEach (3 samples, 0.05%)</title><rect x="124.0" y="1507.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.0" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager$$Lambda$1388/1644208172.accept (3 samples, 0.05%)</title><rect x="124.0" y="1491.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.0" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/MetadataManager.lambda$getAllMetadata$0 (3 samples, 0.05%)</title><rect x="124.0" y="1475.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.0" y="1486.0"></text>
</g>
<g>
<title>com/google/common/collect/ImmutableMap$Builder.put (2 samples, 0.03%)</title><rect x="124.0" y="1459.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.0" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$Builder.build (2 samples, 0.03%)</title><rect x="124.5" y="1523.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.5" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage$Builder.buildPartial (2 samples, 0.03%)</title><rect x="124.5" y="1507.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.5" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1349/199328292.run (22 samples, 0.37%)</title><rect x="124.9" y="1555.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleMessage$8 (22 samples, 0.37%)</title><rect x="124.9" y="1539.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="1550.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (14 samples, 0.23%)</title><rect x="124.9" y="1523.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.9" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.propose (14 samples, 0.23%)</title><rect x="124.9" y="1507.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.9" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (13 samples, 0.22%)</title><rect x="124.9" y="1491.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.9" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (12 samples, 0.20%)</title><rect x="125.1" y="1475.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.1" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (12 samples, 0.20%)</title><rect x="125.1" y="1459.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.1" y="1470.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequest (2 samples, 0.03%)</title><rect x="125.3" y="1443.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.singleRequestImpl (2 samples, 0.03%)</title><rect x="125.3" y="1427.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.3" y="1438.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.sharedGateway (2 samples, 0.03%)</title><rect x="125.3" y="1411.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.3" y="1422.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (4 samples, 0.07%)</title><rect x="125.9" y="1443.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.9" y="1454.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.apply (4 samples, 0.07%)</title><rect x="125.9" y="1427.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.9" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseUriReference (4 samples, 0.07%)</title><rect x="125.9" y="1411.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.9" y="1422.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.07%)</title><rect x="125.9" y="1395.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.9" y="1406.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.07%)</title><rect x="125.9" y="1379.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.9" y="1390.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.07%)</title><rect x="125.9" y="1363.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.9" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$929/223752485.apply (4 samples, 0.07%)</title><rect x="125.9" y="1347.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.9" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseUriReference$1 (4 samples, 0.07%)</title><rect x="125.9" y="1331.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.9" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI$minusreference (4 samples, 0.07%)</title><rect x="125.9" y="1315.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.9" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.URI (4 samples, 0.07%)</title><rect x="125.9" y="1299.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.9" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.hier$minuspart (4 samples, 0.07%)</title><rect x="125.9" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.9" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.path$minusabempty (2 samples, 0.03%)</title><rect x="126.1" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.slashSegments (2 samples, 0.03%)</title><rect x="126.1" y="1251.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.rec$10 (2 samples, 0.03%)</title><rect x="126.1" y="1235.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/settings/ConnectionPoolSettings.withMaxRetries (3 samples, 0.05%)</title><rect x="126.7" y="1443.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.7" y="1454.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.copy (2 samples, 0.03%)</title><rect x="126.9" y="1427.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.9" y="1438.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="126.9" y="1411.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.9" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MultiNodeCutDetector.invalidateFailingEdges (2 samples, 0.03%)</title><rect x="127.9" y="1523.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.9" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (4 samples, 0.07%)</title><rect x="128.5" y="1523.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.5" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.07%)</title><rect x="128.5" y="1507.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.5" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.07%)</title><rect x="128.5" y="1491.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.5" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.07%)</title><rect x="128.5" y="1475.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.5" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.07%)</title><rect x="128.5" y="1459.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.5" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="128.5" y="1443.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.5" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.03%)</title><rect x="128.5" y="1427.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.5" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/SortedOps$SizedRefSortingSink.end (2 samples, 0.03%)</title><rect x="128.9" y="1443.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.9" y="1454.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (2 samples, 0.03%)</title><rect x="128.9" y="1427.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.9" y="1438.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (2 samples, 0.03%)</title><rect x="128.9" y="1411.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.9" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1368/771173854.run (79 samples, 1.32%)</title><rect x="129.3" y="1555.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.3" y="1566.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$handleConsensusMessages$9 (79 samples, 1.32%)</title><rect x="129.3" y="1539.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.3" y="1550.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/SettableFuture.set (4 samples, 0.07%)</title><rect x="129.3" y="1523.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.3" y="1534.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.set (4 samples, 0.07%)</title><rect x="129.3" y="1507.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.3" y="1518.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.complete (4 samples, 0.07%)</title><rect x="129.3" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.3" y="1502.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/AbstractFuture.executeListener (4 samples, 0.07%)</title><rect x="129.3" y="1475.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (4 samples, 0.07%)</title><rect x="129.3" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.07%)</title><rect x="129.3" y="1443.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.07%)</title><rect x="129.3" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.05%)</title><rect x="129.3" y="1411.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="129.3" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="129.3" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="129.3" y="1363.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="129.3" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="129.3" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.3" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="129.5" y="1315.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="132.5" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="129.5" y="1299.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="132.5" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="129.5" y="1283.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="132.5" y="1294.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="129.5" y="1267.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.5" y="1278.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="129.5" y="1251.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="132.5" y="1262.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="129.5" y="1235.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="132.5" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="129.5" y="1219.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.5" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="129.5" y="1203.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.5" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="129.5" y="1187.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.5" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleMessages (75 samples, 1.25%)</title><rect x="130.1" y="1523.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="1534.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.handleFastRoundProposal (75 samples, 1.25%)</title><rect x="130.1" y="1507.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.1" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos$$Lambda$853/520975014.accept (74 samples, 1.24%)</title><rect x="130.3" y="1491.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.3" y="1502.0"></text>
</g>
<g>
<title>com/vrg/rapid/FastPaxos.lambda$new$0 (74 samples, 1.24%)</title><rect x="130.3" y="1475.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.3" y="1486.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1376/75314296.accept (5 samples, 0.08%)</title><rect x="130.3" y="1459.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.3" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (5 samples, 0.08%)</title><rect x="130.3" y="1443.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.3" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.createFailureDetectorsForCurrentConfiguration (2 samples, 0.03%)</title><rect x="130.3" y="1427.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.3" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.03%)</title><rect x="130.3" y="1411.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.3" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="130.3" y="1395.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.3" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.03%)</title><rect x="130.3" y="1379.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.3" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="130.3" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.3" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="130.3" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.3" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="130.3" y="1331.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.3" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.03%)</title><rect x="130.3" y="1315.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.3" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$854/1387566262.apply (2 samples, 0.03%)</title><rect x="130.3" y="1299.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.3" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$createFailureDetectorsForCurrentConfiguration$16 (2 samples, 0.03%)</title><rect x="130.3" y="1283.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.3" y="1294.0"></text>
</g>
<g>
<title>akka/cluster/rapid/RapidFailureDetectorFactory.createInstance (2 samples, 0.03%)</title><rect x="130.3" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.3" y="1278.0"></text>
</g>
<g>
<title>akka/remote/FailureDetectorLoader$.load (2 samples, 0.03%)</title><rect x="130.3" y="1251.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (2 samples, 0.03%)</title><rect x="130.3" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.3" y="1246.0"></text>
</g>
<g>
<title>scala/util/Success.flatMap (2 samples, 0.03%)</title><rect x="130.3" y="1219.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$83/1752182275.apply (2 samples, 0.03%)</title><rect x="130.3" y="1203.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$5 (2 samples, 0.03%)</title><rect x="130.3" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.createInstanceFor (2 samples, 0.03%)</title><rect x="130.3" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.3" y="1182.0"></text>
</g>
<g>
<title>scala/util/Try$.apply (2 samples, 0.03%)</title><rect x="130.3" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.3" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess$$Lambda$84/2049051802.apply (2 samples, 0.03%)</title><rect x="130.3" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.3" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ReflectiveDynamicAccess.$anonfun$createInstanceFor$1 (2 samples, 0.03%)</title><rect x="130.3" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.03%)</title><rect x="130.3" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.03%)</title><rect x="130.3" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (2 samples, 0.03%)</title><rect x="130.9" y="1427.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.9" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeSet.lower (2 samples, 0.03%)</title><rect x="130.9" y="1411.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.9" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.lowerKey (2 samples, 0.03%)</title><rect x="130.9" y="1395.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.9" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLowerEntry (2 samples, 0.03%)</title><rect x="130.9" y="1379.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.9" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.03%)</title><rect x="130.9" y="1363.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.9" y="1374.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.03%)</title><rect x="130.9" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.9" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (2 samples, 0.03%)</title><rect x="130.9" y="1331.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.9" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.03%)</title><rect x="130.9" y="1315.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="1326.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$852/396317473.accept (69 samples, 1.15%)</title><rect x="131.3" y="1459.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.3" y="1470.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.decideViewChange (69 samples, 1.15%)</title><rect x="131.3" y="1443.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.respondToJoiners (3 samples, 0.05%)</title><rect x="131.5" y="1427.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.ringAdd (58 samples, 0.97%)</title><rect x="132.2" y="1427.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.2" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipView.computeObserversOf (49 samples, 0.82%)</title><rect x="132.2" y="1411.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.2" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.10%)</title><rect x="132.2" y="1395.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.2" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.10%)</title><rect x="132.2" y="1379.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.2" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.10%)</title><rect x="132.2" y="1363.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.2" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.10%)</title><rect x="132.2" y="1347.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.2" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (4 samples, 0.07%)</title><rect x="132.6" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.6" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (4 samples, 0.07%)</title><rect x="132.6" y="1315.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.6" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.07%)</title><rect x="132.6" y="1299.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.6" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeSet.higher (43 samples, 0.72%)</title><rect x="133.4" y="1395.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.higherKey (43 samples, 0.72%)</title><rect x="133.4" y="1379.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.4" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getHigherEntry (43 samples, 0.72%)</title><rect x="133.4" y="1363.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.4" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (42 samples, 0.70%)</title><rect x="133.6" y="1347.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.6" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (34 samples, 0.57%)</title><rect x="135.2" y="1331.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.2" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (34 samples, 0.57%)</title><rect x="135.2" y="1315.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Long.compare (2 samples, 0.03%)</title><rect x="135.8" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="136.2" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="136.2" y="1283.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.2" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator$$Lambda$848/499922590.get$Lambda (2 samples, 0.03%)</title><rect x="136.4" y="1267.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (26 samples, 0.43%)</title><rect x="136.8" y="1299.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.8" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (14 samples, 0.23%)</title><rect x="138.5" y="1283.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.5" y="1294.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equals (4 samples, 0.07%)</title><rect x="138.9" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.9" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.equalsRange (2 samples, 0.03%)</title><rect x="139.3" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.3" y="1262.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (7 samples, 0.12%)</title><rect x="139.7" y="1267.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.7" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (6 samples, 0.10%)</title><rect x="139.9" y="1251.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.9" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (6 samples, 0.10%)</title><rect x="139.9" y="1235.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.9" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="141.3" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.3" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.hashCode (3 samples, 0.05%)</title><rect x="141.3" y="1267.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="1278.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (3 samples, 0.05%)</title><rect x="141.3" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (3 samples, 0.05%)</title><rect x="141.3" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.3" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (3 samples, 0.05%)</title><rect x="141.3" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="141.9" y="1411.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="141.9" y="1395.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.9" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.10%)</title><rect x="142.3" y="1411.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="142.3" y="1395.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.3" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (4 samples, 0.07%)</title><rect x="142.7" y="1379.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.7" y="1390.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$AddressComparator.compare (4 samples, 0.07%)</title><rect x="142.7" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.07%)</title><rect x="142.7" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.7" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/Utils$ComparableEndpoint.equals (3 samples, 0.05%)</title><rect x="142.9" y="1331.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.9" y="1342.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (2 samples, 0.03%)</title><rect x="143.1" y="1315.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.1" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.08%)</title><rect x="143.7" y="1427.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.7" y="1438.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$$Lambda$1371/1907715618.accept (5 samples, 0.08%)</title><rect x="143.7" y="1411.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.7" y="1422.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.lambda$decideViewChange$10 (5 samples, 0.08%)</title><rect x="143.7" y="1395.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.7" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$Lambda$842/1970414303.accept (5 samples, 0.08%)</title><rect x="143.7" y="1379.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.7" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.$anonfun$join$1 (5 samples, 0.08%)</title><rect x="143.7" y="1363.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.7" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.onViewChange (5 samples, 0.08%)</title><rect x="143.7" y="1347.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.7" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractSet.$plus$plus (2 samples, 0.03%)</title><rect x="143.9" y="1331.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus$ (2 samples, 0.03%)</title><rect x="143.9" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/SetOps.$plus$plus (2 samples, 0.03%)</title><rect x="143.9" y="1299.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="143.9" y="1283.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.concat (2 samples, 0.03%)</title><rect x="143.9" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="143.9" y="1251.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="143.9" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.flatMap (2 samples, 0.03%)</title><rect x="144.3" y="1331.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.3" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon$$Lambda$859/1013945400.apply (2 samples, 0.03%)</title><rect x="144.3" y="1315.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.3" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/ClusterCoreDaemon.$anonfun$onViewChange$1 (2 samples, 0.03%)</title><rect x="144.3" y="1299.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (8 samples, 0.13%)</title><rect x="145.1" y="1555.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.03%)</title><rect x="145.1" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (5 samples, 0.08%)</title><rect x="145.4" y="1539.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.4" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (5 samples, 0.08%)</title><rect x="145.4" y="1523.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.4" y="1534.0"></text>
</g>
<g>
<title>akka/cluster/rapid/EdgeFailureDetector.run (2 samples, 0.03%)</title><rect x="145.4" y="1507.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.4" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService$AlertBatcher.run (3 samples, 0.05%)</title><rect x="145.8" y="1507.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.8" y="1518.0"></text>
</g>
<g>
<title>com/vrg/rapid/UnicastToAllBroadcaster.broadcast (3 samples, 0.05%)</title><rect x="145.8" y="1491.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.8" y="1502.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessageBestEffort (3 samples, 0.05%)</title><rect x="145.8" y="1475.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.8" y="1486.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.sendMessage (3 samples, 0.05%)</title><rect x="145.8" y="1459.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.8" y="1470.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (3 samples, 0.05%)</title><rect x="145.8" y="1443.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.8" y="1454.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.getSerializedSize (2 samples, 0.03%)</title><rect x="145.8" y="1427.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.8" y="1438.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (2 samples, 0.03%)</title><rect x="145.8" y="1411.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.8" y="1422.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (2 samples, 0.03%)</title><rect x="145.8" y="1395.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="1406.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.getSerializedSize (2 samples, 0.03%)</title><rect x="145.8" y="1379.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="1390.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (2 samples, 0.03%)</title><rect x="145.8" y="1363.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.8" y="1374.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (2 samples, 0.03%)</title><rect x="145.8" y="1347.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.8" y="1358.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/AlertMessage.getSerializedSize (2 samples, 0.03%)</title><rect x="145.8" y="1331.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.8" y="1342.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (2 samples, 0.03%)</title><rect x="145.8" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="1326.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (2 samples, 0.03%)</title><rect x="145.8" y="1299.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="1310.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (2 samples, 0.03%)</title><rect x="145.8" y="1283.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.15%)</title><rect x="146.6" y="1555.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.6" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.poll (2 samples, 0.03%)</title><rect x="146.8" y="1539.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.07%)</title><rect x="147.2" y="1539.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.07%)</title><rect x="147.2" y="1523.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (2 samples, 0.03%)</title><rect x="148.0" y="1539.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.0" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (2 samples, 0.03%)</title><rect x="148.0" y="1523.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,982 samples, 49.82%)</title><rect x="148.6" y="1603.0" width="587.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.6" y="1614.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,982 samples, 49.82%)</title><rect x="148.6" y="1587.0" width="587.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.6" y="1598.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,824 samples, 47.18%)</title><rect x="148.8" y="1571.0" width="556.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.8" y="1582.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,801 samples, 46.80%)</title><rect x="150.0" y="1555.0" width="552.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.0" y="1566.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (8 samples, 0.13%)</title><rect x="152.5" y="1539.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (9 samples, 0.15%)</title><rect x="154.1" y="1539.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,771 samples, 46.30%)</title><rect x="155.9" y="1539.0" width="546.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.9" y="1550.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec (802 samples, 13.40%)</title><rect x="155.9" y="1523.0" width="158.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.9" y="1534.0">akka/dispatch/ForkJo..</text>
</g>
<g>
<title>akka/dispatch/TaskInvocation.run (801 samples, 13.38%)</title><rect x="156.1" y="1507.0" width="157.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.1" y="1518.0">akka/dispatch/TaskIn..</text>
</g>
<g>
<title>akka/actor/Scheduler$$anon$1$$anon$2.run (37 samples, 0.62%)</title><rect x="156.5" y="1491.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.5" y="1502.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (2 samples, 0.03%)</title><rect x="156.5" y="1475.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.5" y="1486.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (2 samples, 0.03%)</title><rect x="156.5" y="1459.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.5" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$684/79452559.run (33 samples, 0.55%)</title><rect x="157.3" y="1475.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.3" y="1486.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$scheduleWithFixedDelay$1 (33 samples, 0.55%)</title><rect x="157.3" y="1459.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.3" y="1470.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (33 samples, 0.55%)</title><rect x="157.3" y="1443.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.3" y="1454.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (33 samples, 0.55%)</title><rect x="157.3" y="1427.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.3" y="1438.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized (6 samples, 0.10%)</title><rect x="158.1" y="1411.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.1" y="1422.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.Initialized$lzycompute$1 (6 samples, 0.10%)</title><rect x="158.1" y="1395.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.1" y="1406.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (23 samples, 0.38%)</title><rect x="159.2" y="1411.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.2" y="1422.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (22 samples, 0.37%)</title><rect x="159.4" y="1395.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.4" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (22 samples, 0.37%)</title><rect x="159.4" y="1379.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.4" y="1390.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (22 samples, 0.37%)</title><rect x="159.4" y="1363.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (21 samples, 0.35%)</title><rect x="159.4" y="1347.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (21 samples, 0.35%)</title><rect x="159.4" y="1331.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (21 samples, 0.35%)</title><rect x="159.4" y="1315.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (21 samples, 0.35%)</title><rect x="159.4" y="1299.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (21 samples, 0.35%)</title><rect x="159.4" y="1283.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (21 samples, 0.35%)</title><rect x="159.4" y="1267.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (21 samples, 0.35%)</title><rect x="159.4" y="1251.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (20 samples, 0.33%)</title><rect x="159.6" y="1235.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.6" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (16 samples, 0.27%)</title><rect x="159.6" y="1219.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="159.6" y="1203.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.27%)</title><rect x="159.6" y="1187.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="159.6" y="1171.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (14 samples, 0.23%)</title><rect x="159.6" y="1155.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 0.23%)</title><rect x="159.6" y="1139.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 0.23%)</title><rect x="159.6" y="1123.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.22%)</title><rect x="159.6" y="1107.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.22%)</title><rect x="159.6" y="1091.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.22%)</title><rect x="159.6" y="1075.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.18%)</title><rect x="160.0" y="1059.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.0" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 0.17%)</title><rect x="160.2" y="1043.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="163.2" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="160.2" y="1027.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="163.2" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="160.2" y="1011.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.2" y="1022.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.17%)</title><rect x="160.2" y="995.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="163.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.17%)</title><rect x="160.2" y="979.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="163.2" y="990.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.17%)</title><rect x="160.2" y="963.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="163.2" y="974.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.13%)</title><rect x="160.6" y="947.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.13%)</title><rect x="160.6" y="931.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.6" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.13%)</title><rect x="160.6" y="915.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="162.4" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.03%)</title><rect x="162.4" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="162.4" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="162.4" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="162.4" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.03%)</title><rect x="162.4" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.enqueue (4 samples, 0.07%)</title><rect x="162.8" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.enqueue (4 samples, 0.07%)</title><rect x="162.8" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue$ (4 samples, 0.07%)</title><rect x="162.8" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.enqueue (4 samples, 0.07%)</title><rect x="162.8" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (4 samples, 0.07%)</title><rect x="162.8" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (4 samples, 0.07%)</title><rect x="162.8" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.run (760 samples, 12.70%)</title><rect x="163.8" y="1491.0" width="149.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.8" y="1502.0">akka/dispatch/Batch..</text>
</g>
<g>
<title>scala/concurrent/BlockContext$.current (2 samples, 0.03%)</title><rect x="163.8" y="1475.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.8" y="1486.0"></text>
</g>
<g>
<title>scala/concurrent/BlockContext$.withBlockContext (758 samples, 12.66%)</title><rect x="164.2" y="1475.0" width="149.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.2" y="1486.0">scala/concurrent/Bl..</text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (758 samples, 12.66%)</title><rect x="164.2" y="1459.0" width="149.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.2" y="1470.0">scala/runtime/java8..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch$$Lambda$559/1790650339.apply$mcV$sp (758 samples, 12.66%)</title><rect x="164.2" y="1443.0" width="149.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.2" y="1454.0">akka/dispatch/Batch..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$BlockableBatch.$anonfun$run$1 (758 samples, 12.66%)</title><rect x="164.2" y="1427.0" width="149.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.2" y="1438.0">akka/dispatch/Batch..</text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (757 samples, 12.65%)</title><rect x="164.4" y="1411.0" width="149.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.4" y="1422.0">akka/dispatch/Batch..</text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (756 samples, 12.63%)</title><rect x="164.6" y="1395.0" width="149.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.6" y="1406.0">scala/concurrent/im..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1226/139145083.apply (122 samples, 2.04%)</title><rect x="164.8" y="1379.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.8" y="1390.0">a..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$sendMessage$1 (121 samples, 2.02%)</title><rect x="165.0" y="1363.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.0" y="1374.0">a..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.responseUnmarshaller (2 samples, 0.03%)</title><rect x="165.0" y="1347.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.0" y="1358.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (2 samples, 0.03%)</title><rect x="165.0" y="1331.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.0" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (2 samples, 0.03%)</title><rect x="165.0" y="1315.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (2 samples, 0.03%)</title><rect x="165.0" y="1299.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (2 samples, 0.03%)</title><rect x="165.0" y="1283.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (2 samples, 0.03%)</title><rect x="165.0" y="1267.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (2 samples, 0.03%)</title><rect x="165.0" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="165.0" y="1235.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="165.0" y="1219.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1078/563703253.get$Lambda (2 samples, 0.03%)</title><rect x="165.0" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (111 samples, 1.85%)</title><rect x="165.6" y="1347.0" width="21.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.6" y="1358.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1112/1559844901.apply (110 samples, 1.84%)</title><rect x="165.8" y="1331.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (110 samples, 1.84%)</title><rect x="165.8" y="1315.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.8" y="1326.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (110 samples, 1.84%)</title><rect x="165.8" y="1299.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="1310.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1112/1559844901.apply (106 samples, 1.77%)</title><rect x="166.0" y="1283.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (106 samples, 1.77%)</title><rect x="166.0" y="1267.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (106 samples, 1.77%)</title><rect x="166.0" y="1251.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1121/1977371250.apply (104 samples, 1.74%)</title><rect x="166.3" y="1235.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (104 samples, 1.74%)</title><rect x="166.3" y="1219.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.3" y="1230.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (104 samples, 1.74%)</title><rect x="166.3" y="1203.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.3" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (16 samples, 0.27%)</title><rect x="166.3" y="1187.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (4 samples, 0.07%)</title><rect x="166.5" y="1171.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.07%)</title><rect x="166.5" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (4 samples, 0.07%)</title><rect x="166.5" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (10 samples, 0.17%)</title><rect x="167.3" y="1171.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.&lt;init&gt; (3 samples, 0.05%)</title><rect x="167.3" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.3" y="1166.0"></text>
</g>
<g>
<title>akka/stream/SinkShape$.of (3 samples, 0.05%)</title><rect x="167.3" y="1139.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/SinkShape.&lt;init&gt; (3 samples, 0.05%)</title><rect x="167.3" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (3 samples, 0.05%)</title><rect x="167.3" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (3 samples, 0.05%)</title><rect x="167.3" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.3" y="1102.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (3 samples, 0.05%)</title><rect x="167.3" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="167.5" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.5" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (7 samples, 0.12%)</title><rect x="167.9" y="1155.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (5 samples, 0.08%)</title><rect x="168.3" y="1139.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (5 samples, 0.08%)</title><rect x="168.3" y="1123.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (4 samples, 0.07%)</title><rect x="168.5" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (4 samples, 0.07%)</title><rect x="168.5" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (4 samples, 0.07%)</title><rect x="168.5" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (2 samples, 0.03%)</title><rect x="168.5" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (2 samples, 0.03%)</title><rect x="168.5" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (2 samples, 0.03%)</title><rect x="168.9" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (88 samples, 1.47%)</title><rect x="169.5" y="1187.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (86 samples, 1.44%)</title><rect x="169.5" y="1171.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (86 samples, 1.44%)</title><rect x="169.5" y="1155.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (86 samples, 1.44%)</title><rect x="169.5" y="1139.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.5" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (86 samples, 1.44%)</title><rect x="169.5" y="1123.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (2 samples, 0.03%)</title><rect x="169.5" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (8 samples, 0.13%)</title><rect x="169.9" y="1107.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (7 samples, 0.12%)</title><rect x="169.9" y="1091.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (6 samples, 0.10%)</title><rect x="170.1" y="1075.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (3 samples, 0.05%)</title><rect x="170.3" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.&lt;init&gt; (2 samples, 0.03%)</title><rect x="170.5" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (64 samples, 1.07%)</title><rect x="171.5" y="1107.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (57 samples, 0.95%)</title><rect x="171.7" y="1091.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (57 samples, 0.95%)</title><rect x="171.7" y="1075.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (57 samples, 0.95%)</title><rect x="171.7" y="1059.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.7" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (57 samples, 0.95%)</title><rect x="171.7" y="1043.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (56 samples, 0.94%)</title><rect x="171.9" y="1027.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (3 samples, 0.05%)</title><rect x="172.1" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (3 samples, 0.05%)</title><rect x="172.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (3 samples, 0.05%)</title><rect x="172.1" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.add (2 samples, 0.03%)</title><rect x="172.3" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (2 samples, 0.03%)</title><rect x="172.3" y="947.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.3" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (2 samples, 0.03%)</title><rect x="172.3" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.3" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="172.3" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.3" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="172.3" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.3" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="172.3" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.3" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="172.3" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.3" y="878.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (8 samples, 0.13%)</title><rect x="172.7" y="1011.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.7" y="1022.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (8 samples, 0.13%)</title><rect x="172.7" y="995.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.7" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (8 samples, 0.13%)</title><rect x="172.7" y="979.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.7" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (8 samples, 0.13%)</title><rect x="172.7" y="963.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (2 samples, 0.03%)</title><rect x="172.7" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.7" y="958.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (2 samples, 0.03%)</title><rect x="172.7" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.7" y="942.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (2 samples, 0.03%)</title><rect x="172.7" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.7" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="172.7" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.7" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="172.7" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.7" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="172.7" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.7" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (6 samples, 0.10%)</title><rect x="173.1" y="947.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.1" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (6 samples, 0.10%)</title><rect x="173.1" y="931.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.1" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (6 samples, 0.10%)</title><rect x="173.1" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (5 samples, 0.08%)</title><rect x="173.1" y="899.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="173.2" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.2" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="173.4" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.4" y="878.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="173.4" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.4" y="862.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="173.4" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="846.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="173.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.4" y="830.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="173.4" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.4" y="814.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="173.4" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.4" y="798.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="173.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.4" y="782.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (43 samples, 0.72%)</title><rect x="174.4" y="1011.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.4" y="1022.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (36 samples, 0.60%)</title><rect x="174.8" y="995.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.8" y="1006.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (30 samples, 0.50%)</title><rect x="175.0" y="979.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.0" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (29 samples, 0.48%)</title><rect x="175.0" y="963.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.0" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (29 samples, 0.48%)</title><rect x="175.0" y="947.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.0" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (29 samples, 0.48%)</title><rect x="175.0" y="931.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (29 samples, 0.48%)</title><rect x="175.0" y="915.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.0" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (29 samples, 0.48%)</title><rect x="175.0" y="899.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.0" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (29 samples, 0.48%)</title><rect x="175.0" y="883.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.0" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (29 samples, 0.48%)</title><rect x="175.0" y="867.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.0" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (29 samples, 0.48%)</title><rect x="175.0" y="851.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.0" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (29 samples, 0.48%)</title><rect x="175.0" y="835.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.0" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (29 samples, 0.48%)</title><rect x="175.0" y="819.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (29 samples, 0.48%)</title><rect x="175.0" y="803.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (29 samples, 0.48%)</title><rect x="175.0" y="787.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (29 samples, 0.48%)</title><rect x="175.0" y="771.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (29 samples, 0.48%)</title><rect x="175.0" y="755.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.48%)</title><rect x="175.0" y="739.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 0.47%)</title><rect x="175.2" y="723.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="175.2" y="707.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="178.2" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="175.2" y="691.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="178.2" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.43%)</title><rect x="175.6" y="707.0" width="5.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="178.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.42%)</title><rect x="175.8" y="691.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.42%)</title><rect x="175.8" y="675.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="178.8" y="686.0"></text>
</g>
<g>
<title>sys_futex (23 samples, 0.38%)</title><rect x="176.2" y="659.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.2" y="670.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.38%)</title><rect x="176.2" y="643.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.2" y="654.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.37%)</title><rect x="176.2" y="627.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="179.2" y="638.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.33%)</title><rect x="176.6" y="611.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.33%)</title><rect x="176.6" y="595.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.33%)</title><rect x="176.6" y="579.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="179.6" y="590.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (5 samples, 0.08%)</title><rect x="180.9" y="979.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookup (2 samples, 0.03%)</title><rect x="181.1" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.lookupConfigurator (2 samples, 0.03%)</title><rect x="181.1" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="181.1" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatchers.hasDispatcher (2 samples, 0.03%)</title><rect x="181.9" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.containsKey (2 samples, 0.03%)</title><rect x="181.9" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="181.9" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="181.9" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="181.9" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.9" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (5 samples, 0.08%)</title><rect x="183.1" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (2 samples, 0.03%)</title><rect x="183.1" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (2 samples, 0.03%)</title><rect x="183.1" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.1" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (2 samples, 0.03%)</title><rect x="183.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.1" y="1054.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (2 samples, 0.03%)</title><rect x="183.1" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.1" y="1038.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (2 samples, 0.03%)</title><rect x="183.1" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.1" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (2 samples, 0.03%)</title><rect x="183.1" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.1" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (2 samples, 0.03%)</title><rect x="183.1" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="990.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (2 samples, 0.03%)</title><rect x="183.1" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.1" y="974.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.03%)</title><rect x="183.1" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.1" y="958.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (3 samples, 0.05%)</title><rect x="183.5" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.5" y="1086.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (3 samples, 0.05%)</title><rect x="183.5" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.5" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.05%)</title><rect x="183.5" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.5" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.05%)</title><rect x="183.5" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (3 samples, 0.05%)</title><rect x="183.5" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="1022.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (3 samples, 0.05%)</title><rect x="183.5" y="995.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="1006.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.05%)</title><rect x="183.5" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="990.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.05%)</title><rect x="183.5" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (2 samples, 0.03%)</title><rect x="184.1" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.createFlowName (3 samples, 0.05%)</title><rect x="184.7" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.7" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/SeqActorNameImpl.next (3 samples, 0.05%)</title><rect x="184.7" y="1091.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="184.7" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="184.7" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.7" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (2 samples, 0.03%)</title><rect x="185.5" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.5" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (2 samples, 0.03%)</title><rect x="186.5" y="1171.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="186.5" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (2 samples, 0.03%)</title><rect x="186.5" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.5" y="1150.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="186.9" y="1283.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="189.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/Materializer$.matFromSystem (2 samples, 0.03%)</title><rect x="187.6" y="1347.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.6" y="1358.0"></text>
</g>
<g>
<title>akka/stream/SystemMaterializer$.apply (2 samples, 0.03%)</title><rect x="187.6" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.6" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply$ (2 samples, 0.03%)</title><rect x="187.6" y="1315.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ExtensionId.apply (2 samples, 0.03%)</title><rect x="187.6" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.registerExtension (2 samples, 0.03%)</title><rect x="187.6" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorSystemImpl.findExtension (2 samples, 0.03%)</title><rect x="187.6" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="187.6" y="1251.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.6" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.onComplete (2 samples, 0.03%)</title><rect x="188.4" y="1347.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (2 samples, 0.03%)</title><rect x="188.4" y="1331.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.4" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.&lt;init&gt; (2 samples, 0.03%)</title><rect x="188.4" y="1315.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.4" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1128/354694973.apply (626 samples, 10.46%)</title><rect x="189.0" y="1379.0" width="123.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.0" y="1390.0">akka/http/scala..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$3 (626 samples, 10.46%)</title><rect x="189.0" y="1363.0" width="123.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.0" y="1374.0">akka/http/scala..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (618 samples, 10.33%)</title><rect x="189.0" y="1347.0" width="121.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.0" y="1358.0">akka/http/scala..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$1134/2048701336.apply (600 samples, 10.03%)</title><rect x="189.2" y="1331.0" width="118.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.2" y="1342.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$transformWith$1 (600 samples, 10.03%)</title><rect x="189.2" y="1315.0" width="118.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.2" y="1326.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1131/1123167884.apply (600 samples, 10.03%)</title><rect x="189.2" y="1299.0" width="118.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.2" y="1310.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$3 (600 samples, 10.03%)</title><rect x="189.2" y="1283.0" width="118.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.2" y="1294.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (585 samples, 9.77%)</title><rect x="189.6" y="1267.0" width="115.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.6" y="1278.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (585 samples, 9.77%)</title><rect x="189.6" y="1251.0" width="115.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.6" y="1262.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$969/2031275950.apply (585 samples, 9.77%)</title><rect x="189.6" y="1235.0" width="115.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.6" y="1246.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (585 samples, 9.77%)</title><rect x="189.6" y="1219.0" width="115.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.6" y="1230.0">akka/http/scal..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1146/839480712.apply (2 samples, 0.03%)</title><rect x="189.6" y="1203.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (583 samples, 9.74%)</title><rect x="190.0" y="1203.0" width="115.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.0" y="1214.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (583 samples, 9.74%)</title><rect x="190.0" y="1187.0" width="115.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="1198.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (583 samples, 9.74%)</title><rect x="190.0" y="1171.0" width="115.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="1182.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (583 samples, 9.74%)</title><rect x="190.0" y="1155.0" width="115.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.0" y="1166.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (583 samples, 9.74%)</title><rect x="190.0" y="1139.0" width="115.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="1150.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (2 samples, 0.03%)</title><rect x="190.0" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$Lambda$1167/1316243772.apply (2 samples, 0.03%)</title><rect x="190.0" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller.$anonfun$compose$2 (2 samples, 0.03%)</title><rect x="190.0" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$1.apply (2 samples, 0.03%)</title><rect x="190.0" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers$$Lambda$1170/163777278.apply (2 samples, 0.03%)</title><rect x="190.0" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToResponseMarshallers.$anonfun$fromStatusCodeAndHeadersAndValue$2 (2 samples, 0.03%)</title><rect x="190.0" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (580 samples, 9.69%)</title><rect x="190.6" y="1123.0" width="114.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.6" y="1134.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (580 samples, 9.69%)</title><rect x="190.6" y="1107.0" width="114.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.6" y="1118.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (580 samples, 9.69%)</title><rect x="190.6" y="1091.0" width="114.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.6" y="1102.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$939/1402029446.apply (580 samples, 9.69%)</title><rect x="190.6" y="1075.0" width="114.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.6" y="1086.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (580 samples, 9.69%)</title><rect x="190.6" y="1059.0" width="114.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="1070.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal$$Lambda$991/1739231483.apply (580 samples, 9.69%)</title><rect x="190.6" y="1043.0" width="114.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.6" y="1054.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.$anonfun$toResponseFor$1 (580 samples, 9.69%)</title><rect x="190.6" y="1027.0" width="114.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.6" y="1038.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType$$Lambda$1191/244810136.apply (578 samples, 9.66%)</title><rect x="190.6" y="1011.0" width="114.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.6" y="1022.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshalling$WithFixedContentType.$anonfun$map$5 (578 samples, 9.66%)</title><rect x="190.6" y="995.0" width="114.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.6" y="1006.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2$$Lambda$1174/2087890758.apply (578 samples, 9.66%)</title><rect x="190.6" y="979.0" width="114.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.6" y="990.0">akka/http/scal..</text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshaller$$anon$2.$anonfun$apply$1 (578 samples, 9.66%)</title><rect x="190.6" y="963.0" width="114.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.6" y="974.0">akka/http/scal..</text>
</g>
<g>
<title>scala/Function1$$Lambda$1153/1278678265.apply (578 samples, 9.66%)</title><rect x="190.6" y="947.0" width="114.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.6" y="958.0">scala/Function..</text>
</g>
<g>
<title>scala/Function1.$anonfun$compose$1 (578 samples, 9.66%)</title><rect x="190.6" y="931.0" width="114.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.6" y="942.0">scala/Function..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1150/377407890.apply (565 samples, 9.44%)</title><rect x="190.6" y="915.0" width="111.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.6" y="926.0">akka/cluster/..</text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$responseMarshaller$1 (565 samples, 9.44%)</title><rect x="190.6" y="899.0" width="111.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.6" y="910.0">akka/cluster/..</text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (565 samples, 9.44%)</title><rect x="190.6" y="883.0" width="111.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.6" y="894.0">com/google/pr..</text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (10 samples, 0.17%)</title><rect x="191.6" y="867.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="194.6" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.17%)</title><rect x="191.6" y="851.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="194.6" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.17%)</title><rect x="191.6" y="835.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="194.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.17%)</title><rect x="191.6" y="819.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="194.6" y="830.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (10 samples, 0.17%)</title><rect x="191.6" y="803.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="194.6" y="814.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.getSerializedSize (4 samples, 0.07%)</title><rect x="193.8" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.8" y="878.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (3 samples, 0.05%)</title><rect x="193.9" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.9" y="862.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (3 samples, 0.05%)</title><rect x="193.9" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.9" y="846.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.getSerializedSize (3 samples, 0.05%)</title><rect x="193.9" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.9" y="830.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidResponse.writeTo (545 samples, 9.11%)</title><rect x="194.5" y="867.0" width="107.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.5" y="878.0">com/vrg/rapid..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (544 samples, 9.09%)</title><rect x="194.7" y="851.0" width="107.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.7" y="862.0">com/google/pr..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (544 samples, 9.09%)</title><rect x="194.7" y="835.0" width="107.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.7" y="846.0">com/google/pr..</text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinResponse.writeTo (544 samples, 9.09%)</title><rect x="194.7" y="819.0" width="107.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.7" y="830.0">com/vrg/rapid..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (118 samples, 1.97%)</title><rect x="200.5" y="803.0" width="23.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.5" y="814.0">c..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (111 samples, 1.85%)</title><rect x="200.9" y="787.0" width="21.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.9" y="798.0">c..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (6 samples, 0.10%)</title><rect x="202.4" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.4" y="782.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getSerializedSize (17 samples, 0.28%)</title><rect x="203.6" y="771.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.6" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.computeStringSize (8 samples, 0.13%)</title><rect x="204.6" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.12%)</title><rect x="204.8" y="739.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="207.8" y="750.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (4 samples, 0.07%)</title><rect x="206.2" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.2" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (4 samples, 0.07%)</title><rect x="206.2" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.2" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (3 samples, 0.05%)</title><rect x="206.2" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.2" y="734.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.writeTo (51 samples, 0.85%)</title><rect x="207.0" y="771.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.0" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.isEmpty (3 samples, 0.05%)</title><rect x="207.0" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.0" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeInt32 (2 samples, 0.03%)</title><rect x="207.6" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.6" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeInt32NoTag (2 samples, 0.03%)</title><rect x="207.6" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.6" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.writeString (7 samples, 0.12%)</title><rect x="208.1" y="755.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.1" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytes (4 samples, 0.07%)</title><rect x="208.7" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.7" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytesNoTag (2 samples, 0.03%)</title><rect x="208.7" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.7" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (2 samples, 0.03%)</title><rect x="209.1" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.1" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet.writeTo (5 samples, 0.08%)</title><rect x="209.5" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.5" y="766.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Endpoint.getHostnameBytes (30 samples, 0.50%)</title><rect x="210.5" y="755.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.5" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (25 samples, 0.42%)</title><rect x="211.3" y="739.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.3" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.&lt;init&gt; (3 samples, 0.05%)</title><rect x="211.7" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.33%)</title><rect x="212.3" y="723.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.3" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (2 samples, 0.03%)</title><rect x="212.3" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.30%)</title><rect x="212.7" y="707.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.12%)</title><rect x="214.8" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.8" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (3 samples, 0.05%)</title><rect x="215.2" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.2" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="215.8" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="216.4" y="755.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="219.4" y="766.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/NodeId.writeTo (28 samples, 0.47%)</title><rect x="217.0" y="771.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.0" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.writeInt64 (21 samples, 0.35%)</title><rect x="218.2" y="755.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.2" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt64 (20 samples, 0.33%)</title><rect x="218.4" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.4" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (4 samples, 0.07%)</title><rect x="218.6" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.6" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt64NoTag (14 samples, 0.23%)</title><rect x="219.6" y="723.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.6" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (5 samples, 0.08%)</title><rect x="222.7" y="787.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (5 samples, 0.08%)</title><rect x="222.7" y="771.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.writeEnum (4 samples, 0.07%)</title><rect x="223.7" y="803.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.7" y="814.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeInt32 (4 samples, 0.07%)</title><rect x="223.7" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.7" y="798.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (4 samples, 0.07%)</title><rect x="223.7" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.7" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (384 samples, 6.42%)</title><rect x="224.7" y="803.0" width="75.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.7" y="814.0">com/goog..</text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (384 samples, 6.42%)</title><rect x="224.7" y="787.0" width="75.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.7" y="798.0">com/goog..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (336 samples, 5.61%)</title><rect x="225.1" y="771.0" width="66.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="782.0">com/goo..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (336 samples, 5.61%)</title><rect x="225.1" y="755.0" width="66.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.1" y="766.0">com/goo..</text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (15 samples, 0.25%)</title><rect x="225.5" y="739.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.5" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (15 samples, 0.25%)</title><rect x="225.5" y="723.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.5" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (15 samples, 0.25%)</title><rect x="225.5" y="707.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.5" y="718.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (15 samples, 0.25%)</title><rect x="225.5" y="691.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.5" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (13 samples, 0.22%)</title><rect x="225.7" y="675.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.7" y="686.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (13 samples, 0.22%)</title><rect x="225.7" y="659.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.7" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (9 samples, 0.15%)</title><rect x="225.7" y="643.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.7" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.buildPartial (9 samples, 0.15%)</title><rect x="225.7" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.7" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (9 samples, 0.15%)</title><rect x="225.7" y="611.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.7" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (9 samples, 0.15%)</title><rect x="225.7" y="595.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (2 samples, 0.03%)</title><rect x="227.9" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.9" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.entrySet (2 samples, 0.03%)</title><rect x="227.9" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (2 samples, 0.03%)</title><rect x="227.9" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.9" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.writeTo (319 samples, 5.33%)</title><rect x="228.5" y="739.0" width="62.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.5" y="750.0">com/go..</text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.writeTo (319 samples, 5.33%)</title><rect x="228.5" y="723.0" width="62.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.5" y="734.0">com/go..</text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElement (319 samples, 5.33%)</title><rect x="228.5" y="707.0" width="62.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.5" y="718.0">com/go..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (4 samples, 0.07%)</title><rect x="229.0" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.0" y="702.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (3 samples, 0.05%)</title><rect x="229.2" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.2" y="686.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (312 samples, 5.21%)</title><rect x="229.8" y="691.0" width="61.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.8" y="702.0">com/go..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (235 samples, 3.93%)</title><rect x="232.2" y="675.0" width="46.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.2" y="686.0">com/..</text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (3 samples, 0.05%)</title><rect x="232.6" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.6" y="670.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (8 samples, 0.13%)</title><rect x="233.2" y="659.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.2" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField.getMap (2 samples, 0.03%)</title><rect x="233.4" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.03%)</title><rect x="233.4" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.4" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="233.4" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.4" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (5 samples, 0.08%)</title><rect x="233.8" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.8" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.entrySet (5 samples, 0.08%)</title><rect x="233.8" y="627.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.8" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap$MutatabilityAwareSet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="233.8" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.8" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (2 samples, 0.03%)</title><rect x="234.4" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.4" y="622.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.writeTo (222 samples, 3.71%)</title><rect x="234.8" y="659.0" width="43.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.8" y="670.0">com/..</text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeStringMapTo (217 samples, 3.63%)</title><rect x="235.0" y="643.0" width="42.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.0" y="654.0">com/..</text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.serializeMapTo (213 samples, 3.56%)</title><rect x="235.7" y="627.0" width="42.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.7" y="638.0">com..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (119 samples, 1.99%)</title><rect x="236.7" y="611.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.7" y="622.0">c..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (113 samples, 1.89%)</title><rect x="236.7" y="595.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.7" y="606.0">c..</text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (3 samples, 0.05%)</title><rect x="238.3" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.3" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.getSerializedSize (12 samples, 0.20%)</title><rect x="238.9" y="579.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.9" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.computeSerializedSize (12 samples, 0.20%)</title><rect x="238.9" y="563.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.9" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSize (12 samples, 0.20%)</title><rect x="238.9" y="547.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.9" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.computeElementSizeNoTag (11 samples, 0.18%)</title><rect x="239.1" y="531.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.1" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (5 samples, 0.08%)</title><rect x="240.1" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.1" y="526.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (5 samples, 0.08%)</title><rect x="240.1" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.1" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (3 samples, 0.05%)</title><rect x="240.3" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.3" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.buildPartial (3 samples, 0.05%)</title><rect x="240.3" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.3" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="240.5" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.5" y="462.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="240.5" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.5" y="446.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.writeTo (90 samples, 1.50%)</title><rect x="241.3" y="579.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.3" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntryLite.writeTo (90 samples, 1.50%)</title><rect x="241.3" y="563.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.3" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElement (90 samples, 1.50%)</title><rect x="241.3" y="547.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.3" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (7 samples, 0.12%)</title><rect x="242.5" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.5" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (6 samples, 0.10%)</title><rect x="242.6" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.6" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/FieldSet.writeElementNoTag (77 samples, 1.29%)</title><rect x="243.8" y="531.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.8" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytesNoTag (4 samples, 0.07%)</title><rect x="248.4" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.4" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (3 samples, 0.05%)</title><rect x="248.6" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.6" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (13 samples, 0.22%)</title><rect x="249.2" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.2" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (4 samples, 0.07%)</title><rect x="249.2" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.2" y="510.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.getSerializedSize (9 samples, 0.15%)</title><rect x="249.9" y="499.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.9" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (2 samples, 0.03%)</title><rect x="249.9" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.9" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.buildPartial (2 samples, 0.03%)</title><rect x="249.9" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="249.9" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="462.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="249.9" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.9" y="446.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField.getMap (7 samples, 0.12%)</title><rect x="250.3" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (7 samples, 0.12%)</title><rect x="250.3" y="467.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.3" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (7 samples, 0.12%)</title><rect x="250.3" y="451.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.3" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="251.3" y="435.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="254.3" y="446.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeStringNoTag (32 samples, 0.53%)</title><rect x="251.7" y="515.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.7" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.spaceLeft (3 samples, 0.05%)</title><rect x="253.1" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (4 samples, 0.07%)</title><rect x="253.7" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.7" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.encode (15 samples, 0.25%)</title><rect x="254.5" y="499.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.5" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (14 samples, 0.23%)</title><rect x="254.7" y="483.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.05%)</title><rect x="257.4" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="257.6" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.6" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (4 samples, 0.07%)</title><rect x="258.0" y="515.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.0" y="526.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (6 samples, 0.10%)</title><rect x="259.0" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.0" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (5 samples, 0.08%)</title><rect x="259.2" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.2" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (21 samples, 0.35%)</title><rect x="260.2" y="611.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.2" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.buildPartial (19 samples, 0.32%)</title><rect x="260.4" y="595.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.4" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (17 samples, 0.28%)</title><rect x="260.8" y="579.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.8" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (17 samples, 0.28%)</title><rect x="260.8" y="563.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.8" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessage.&lt;init&gt; (3 samples, 0.05%)</title><rect x="263.4" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.4" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.setKey (6 samples, 0.10%)</title><rect x="264.3" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.3" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.newBuilderForType (10 samples, 0.17%)</title><rect x="265.5" y="611.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.5" y="622.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (5 samples, 0.08%)</title><rect x="265.5" y="595.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="268.5" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.07%)</title><rect x="265.7" y="579.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="268.7" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.07%)</title><rect x="265.7" y="563.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="268.7" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="265.7" y="547.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="268.7" y="558.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="265.7" y="531.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="268.7" y="542.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="265.7" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="268.7" y="526.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="265.7" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.7" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="265.7" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.7" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="266.5" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.5" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="266.5" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.5" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="266.5" y="563.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.12%)</title><rect x="267.7" y="611.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.12%)</title><rect x="267.7" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (5 samples, 0.08%)</title><rect x="268.1" y="579.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.1" y="590.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.03%)</title><rect x="268.7" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (12 samples, 0.20%)</title><rect x="269.3" y="611.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.3" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (12 samples, 0.20%)</title><rect x="269.3" y="595.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.3" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap$MutatabilityAwareSet.iterator (5 samples, 0.08%)</title><rect x="270.6" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.6" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.iterator (3 samples, 0.05%)</title><rect x="270.8" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.8" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntryIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="271.0" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="271.0" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.0" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (31 samples, 0.52%)</title><rect x="271.6" y="611.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.6" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.entrySet (22 samples, 0.37%)</title><rect x="272.6" y="595.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.6" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap$MutatabilityAwareSet.&lt;init&gt; (4 samples, 0.07%)</title><rect x="273.6" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.6" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (13 samples, 0.22%)</title><rect x="274.4" y="579.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.4" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedEntrySet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="276.0" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="276.0" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.0" y="558.0"></text>
</g>
<g>
<title>xen_hvm_callback_vector (2 samples, 0.03%)</title><rect x="276.6" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="279.6" y="574.0"></text>
</g>
<g>
<title>xen_evtchn_do_upcall (2 samples, 0.03%)</title><rect x="276.6" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="279.6" y="558.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="276.6" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.6" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="276.6" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="279.6" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.&lt;init&gt; (4 samples, 0.07%)</title><rect x="277.0" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.0" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.&lt;init&gt; (4 samples, 0.07%)</title><rect x="277.0" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (4 samples, 0.07%)</title><rect x="277.0" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.0" y="574.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/Metadata.internalGetMetadata (3 samples, 0.05%)</title><rect x="277.9" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.9" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeStringNoTag (64 samples, 1.07%)</title><rect x="278.5" y="675.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.5" y="686.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeUInt32NoTag (3 samples, 0.05%)</title><rect x="279.5" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.5" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/UnsafeUtil.putByte (2 samples, 0.03%)</title><rect x="279.7" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.7" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/UnsafeUtil$JvmMemoryAccessor.putByte (2 samples, 0.03%)</title><rect x="279.7" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.7" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.encode (50 samples, 0.84%)</title><rect x="280.3" y="659.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.3" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.encodeUtf8 (50 samples, 0.84%)</title><rect x="280.3" y="643.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.3" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/UnsafeUtil.putByte (11 samples, 0.18%)</title><rect x="287.0" y="627.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.0" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/UnsafeUtil$JvmMemoryAccessor.putByte (11 samples, 0.18%)</title><rect x="287.0" y="611.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.07%)</title><rect x="289.2" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="289.6" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.08%)</title><rect x="290.2" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.2" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.build (18 samples, 0.30%)</title><rect x="291.3" y="771.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.3" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.buildPartial (14 samples, 0.23%)</title><rect x="291.7" y="755.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.7" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (11 samples, 0.18%)</title><rect x="292.3" y="739.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.3" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.&lt;init&gt; (11 samples, 0.18%)</title><rect x="292.3" y="723.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.3" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.isInitialized (2 samples, 0.03%)</title><rect x="294.5" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.5" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.isInitialized (2 samples, 0.03%)</title><rect x="294.5" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.5" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.setValue (3 samples, 0.05%)</title><rect x="294.9" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.9" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry.newBuilderForType (3 samples, 0.05%)</title><rect x="295.5" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.5" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="295.5" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.5" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="295.5" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.5" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/MapEntry$Builder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="295.5" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="296.3" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="296.3" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.3" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.07%)</title><rect x="296.7" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.07%)</title><rect x="296.7" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (15 samples, 0.25%)</title><rect x="297.5" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.5" y="782.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap.entrySet (9 samples, 0.15%)</title><rect x="298.6" y="755.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.6" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/MapField$MutatabilityAwareMap$MutatabilityAwareSet.&lt;init&gt; (3 samples, 0.05%)</title><rect x="299.2" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.entrySet (3 samples, 0.05%)</title><rect x="299.8" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.8" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (2 samples, 0.03%)</title><rect x="300.4" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.4" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (6 samples, 0.10%)</title><rect x="300.8" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.8" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (2 samples, 0.03%)</title><rect x="301.6" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (2 samples, 0.03%)</title><rect x="301.6" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.6" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers$$Lambda$970/1423742613.apply (13 samples, 0.22%)</title><rect x="302.0" y="915.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.0" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers.$anonfun$byteArrayMarshaller$1 (13 samples, 0.22%)</title><rect x="302.0" y="899.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.0" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$.apply (13 samples, 0.22%)</title><rect x="302.0" y="883.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.0" y="894.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (13 samples, 0.22%)</title><rect x="302.0" y="867.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.0" y="878.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (13 samples, 0.22%)</title><rect x="302.0" y="851.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.0" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1C$.apply (13 samples, 0.22%)</title><rect x="302.0" y="835.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.0" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (13 samples, 0.22%)</title><rect x="302.0" y="819.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="305.0" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/782395258.apply (12 samples, 0.20%)</title><rect x="305.0" y="1267.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (12 samples, 0.20%)</title><rect x="305.0" y="1251.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1104/99611122.apply (10 samples, 0.17%)</title><rect x="305.3" y="1235.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (10 samples, 0.17%)</title><rect x="305.3" y="1219.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.3" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1138/244420702.apply (10 samples, 0.17%)</title><rect x="305.3" y="1203.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.3" y="1214.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$5 (10 samples, 0.17%)</title><rect x="305.3" y="1187.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.3" y="1198.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.handleRequest (10 samples, 0.17%)</title><rect x="305.3" y="1171.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.3" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (10 samples, 0.17%)</title><rect x="305.3" y="1155.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.3" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleConsensusMessages (6 samples, 0.10%)</title><rect x="305.3" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (6 samples, 0.10%)</title><rect x="305.3" y="1123.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.10%)</title><rect x="305.3" y="1107.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.10%)</title><rect x="305.3" y="1091.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.08%)</title><rect x="305.3" y="1075.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.08%)</title><rect x="305.3" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.08%)</title><rect x="305.3" y="1043.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.08%)</title><rect x="305.3" y="1027.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="305.3" y="1011.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="305.3" y="995.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.3" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="305.5" y="979.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="308.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="305.5" y="963.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="308.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="305.5" y="947.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="308.5" y="958.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.07%)</title><rect x="305.5" y="931.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.5" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="305.5" y="915.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="308.5" y="926.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="305.5" y="899.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.5" y="910.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="305.5" y="883.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.5" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="305.5" y="867.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="308.5" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="305.5" y="851.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.5" y="862.0"></text>
</g>
<g>
<title>com/vrg/rapid/MembershipService.handleMessage (4 samples, 0.07%)</title><rect x="306.5" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (4 samples, 0.07%)</title><rect x="306.5" y="1123.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.07%)</title><rect x="306.5" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.07%)</title><rect x="306.5" y="1091.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.05%)</title><rect x="306.5" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="306.5" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="306.5" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="306.5" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="306.5" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="306.5" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.5" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="306.7" y="979.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="309.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$939/1402029446.apply (17 samples, 0.28%)</title><rect x="307.5" y="1331.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.5" y="1342.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$map$1 (17 samples, 0.28%)</title><rect x="307.5" y="1315.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.5" y="1326.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1082/844305649.apply (12 samples, 0.20%)</title><rect x="307.5" y="1299.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.5" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$requestUnmarshaller$1 (11 samples, 0.18%)</title><rect x="307.7" y="1283.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.7" y="1294.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.parseFrom (11 samples, 0.18%)</title><rect x="307.7" y="1267.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.7" y="1278.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.18%)</title><rect x="307.7" y="1251.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.7" y="1262.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.18%)</title><rect x="307.7" y="1235.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.7" y="1246.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.18%)</title><rect x="307.7" y="1219.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.7" y="1230.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (11 samples, 0.18%)</title><rect x="307.7" y="1203.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.7" y="1214.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (11 samples, 0.18%)</title><rect x="307.7" y="1187.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.7" y="1198.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (10 samples, 0.17%)</title><rect x="307.9" y="1171.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.9" y="1182.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest$1.parsePartialFrom (10 samples, 0.17%)</title><rect x="307.9" y="1155.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.9" y="1166.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (10 samples, 0.17%)</title><rect x="307.9" y="1139.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.9" y="1150.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/RapidRequest.&lt;init&gt; (9 samples, 0.15%)</title><rect x="308.1" y="1123.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.1" y="1134.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (8 samples, 0.13%)</title><rect x="308.1" y="1107.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.1" y="1118.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="308.1" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.1" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="308.1" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.1" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="308.1" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/BatchedAlertMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="308.1" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.1" y="1054.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (3 samples, 0.05%)</title><rect x="308.5" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.5" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage$1.parsePartialFrom (3 samples, 0.05%)</title><rect x="308.5" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.5" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (3 samples, 0.05%)</title><rect x="308.5" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.5" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/FastRoundPhase2bMessage.&lt;init&gt; (3 samples, 0.05%)</title><rect x="308.5" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.5" y="1054.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="309.1" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.1" y="1102.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage$1.parsePartialFrom (2 samples, 0.03%)</title><rect x="309.1" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.1" y="1086.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="309.1" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.1" y="1070.0"></text>
</g>
<g>
<title>com/vrg/rapid/pb/JoinMessage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="309.1" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.1" y="1054.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.03%)</title><rect x="309.1" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.1" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$$$Lambda$936/1924341504.apply (3 samples, 0.05%)</title><rect x="310.3" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.3" y="1310.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.$anonfun$_successful$1 (3 samples, 0.05%)</title><rect x="310.3" y="1283.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.3" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (8 samples, 0.13%)</title><rect x="310.9" y="1347.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.9" y="1358.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.completeWith (7 samples, 0.12%)</title><rect x="311.1" y="1331.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="1342.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (7 samples, 0.12%)</title><rect x="311.1" y="1315.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.1" y="1326.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (7 samples, 0.12%)</title><rect x="311.1" y="1299.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.1" y="1310.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (7 samples, 0.12%)</title><rect x="311.1" y="1283.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (6 samples, 0.10%)</title><rect x="311.1" y="1267.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.10%)</title><rect x="311.1" y="1251.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.10%)</title><rect x="311.1" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.1" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (5 samples, 0.08%)</title><rect x="311.1" y="1219.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.1" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (5 samples, 0.08%)</title><rect x="311.1" y="1203.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.1" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (5 samples, 0.08%)</title><rect x="311.1" y="1187.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.1" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (5 samples, 0.08%)</title><rect x="311.1" y="1171.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$530/1564629011.apply (5 samples, 0.08%)</title><rect x="311.1" y="1155.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.1" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (5 samples, 0.08%)</title><rect x="311.1" y="1139.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (5 samples, 0.08%)</title><rect x="311.1" y="1123.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (5 samples, 0.08%)</title><rect x="311.1" y="1107.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (5 samples, 0.08%)</title><rect x="311.1" y="1091.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.1" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (5 samples, 0.08%)</title><rect x="311.1" y="1075.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (5 samples, 0.08%)</title><rect x="311.1" y="1059.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (5 samples, 0.08%)</title><rect x="311.1" y="1043.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (5 samples, 0.08%)</title><rect x="311.1" y="1027.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="1038.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (4 samples, 0.07%)</title><rect x="311.1" y="1011.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.1" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.07%)</title><rect x="311.1" y="995.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (4 samples, 0.07%)</title><rect x="311.1" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.1" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (4 samples, 0.07%)</title><rect x="311.1" y="963.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="974.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (4 samples, 0.07%)</title><rect x="311.1" y="947.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.1" y="958.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (4 samples, 0.07%)</title><rect x="311.1" y="931.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (4 samples, 0.07%)</title><rect x="311.1" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.1" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (4 samples, 0.07%)</title><rect x="311.1" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.07%)</title><rect x="311.1" y="883.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="311.1" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.1" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.07%)</title><rect x="311.1" y="851.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="311.1" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.1" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.07%)</title><rect x="311.1" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.07%)</title><rect x="311.1" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.07%)</title><rect x="311.1" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.07%)</title><rect x="311.1" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.07%)</title><rect x="311.1" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="311.1" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="311.1" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="311.1" y="707.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="314.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="311.1" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="314.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="311.1" y="675.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.1" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.07%)</title><rect x="311.1" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.1" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="311.1" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="314.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="311.1" y="627.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="311.1" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="314.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="311.1" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="311.1" y="579.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.1" y="590.0"></text>
</g>
<g>
<title>scala/concurrent/Future$$Lambda$123/872522004.apply (3 samples, 0.05%)</title><rect x="312.6" y="1379.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.6" y="1390.0"></text>
</g>
<g>
<title>scala/concurrent/Future.$anonfun$andThen$1 (3 samples, 0.05%)</title><rect x="312.6" y="1363.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.6" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (3 samples, 0.05%)</title><rect x="312.6" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.6" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$anonfun$handleRequest$1.applyOrElse (3 samples, 0.05%)</title><rect x="312.6" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.6" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.warn (3 samples, 0.05%)</title><rect x="312.6" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.6" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (3 samples, 0.05%)</title><rect x="312.6" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.6" y="1310.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.05%)</title><rect x="312.6" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.6" y="1294.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.05%)</title><rect x="312.6" y="1267.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.6" y="1278.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.05%)</title><rect x="312.6" y="1251.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.6" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.05%)</title><rect x="312.6" y="1235.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.6" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.05%)</title><rect x="312.6" y="1219.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.6" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (3 samples, 0.05%)</title><rect x="312.6" y="1203.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.6" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (2 samples, 0.03%)</title><rect x="312.8" y="1187.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.8" y="1198.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (2 samples, 0.03%)</title><rect x="312.8" y="1171.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (2 samples, 0.03%)</title><rect x="312.8" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.exec (1,969 samples, 32.90%)</title><rect x="314.0" y="1523.0" width="388.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.0" y="1534.0">akka/dispatch/Mailbox.exec</text>
</g>
<g>
<title>akka/dispatch/Mailbox.run (1,968 samples, 32.88%)</title><rect x="314.2" y="1507.0" width="388.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.2" y="1518.0">akka/dispatch/Mailbox.run</text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.12%)</title><rect x="314.2" y="1491.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.2" y="1502.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="314.2" y="1475.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.2" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="314.2" y="1459.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="314.2" y="1443.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="314.2" y="1427.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="314.2" y="1411.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="314.2" y="1395.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="314.2" y="1379.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="314.2" y="1363.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="314.2" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="314.2" y="1331.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.2" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="314.2" y="1315.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="317.2" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="314.2" y="1299.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="317.2" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="314.2" y="1283.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="317.2" y="1294.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="314.2" y="1267.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.2" y="1278.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="314.2" y="1251.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.2" y="1262.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="314.2" y="1235.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="317.2" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.canBeScheduledForExecution (4 samples, 0.07%)</title><rect x="314.8" y="1475.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.8" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.hasMessages (4 samples, 0.07%)</title><rect x="314.8" y="1459.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.8" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.hasMessages (4 samples, 0.07%)</title><rect x="314.8" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.8" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages$ (4 samples, 0.07%)</title><rect x="314.8" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.8" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.hasMessages (4 samples, 0.07%)</title><rect x="314.8" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.isEmpty (2 samples, 0.03%)</title><rect x="315.2" y="1395.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.first (2 samples, 0.03%)</title><rect x="315.2" y="1379.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.2" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (337 samples, 5.63%)</title><rect x="315.6" y="1491.0" width="66.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.6" y="1502.0">akka/di..</text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (328 samples, 5.48%)</title><rect x="315.8" y="1475.0" width="64.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.8" y="1486.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (325 samples, 5.43%)</title><rect x="316.2" y="1459.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.2" y="1470.0">akka/ac..</text>
</g>
<g>
<title>akka/actor/ActorCell.addWatcher (4 samples, 0.07%)</title><rect x="316.4" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.4" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher$ (4 samples, 0.07%)</title><rect x="316.4" y="1427.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.addWatcher (4 samples, 0.07%)</title><rect x="316.4" y="1411.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.4" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (3 samples, 0.05%)</title><rect x="316.6" y="1395.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.6" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (3 samples, 0.05%)</title><rect x="316.6" y="1379.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$137/351434363.apply$mcV$sp (3 samples, 0.05%)</title><rect x="316.6" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$addWatcher$1 (3 samples, 0.05%)</title><rect x="316.6" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.6" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (3 samples, 0.05%)</title><rect x="316.6" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.6" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (3 samples, 0.05%)</title><rect x="316.6" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.6" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (3 samples, 0.05%)</title><rect x="316.6" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.6" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.05%)</title><rect x="316.6" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (3 samples, 0.05%)</title><rect x="316.6" y="1267.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.6" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="316.6" y="1251.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (198 samples, 3.31%)</title><rect x="317.2" y="1443.0" width="39.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.2" y="1454.0">akk..</text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (3 samples, 0.05%)</title><rect x="317.2" y="1427.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (3 samples, 0.05%)</title><rect x="317.2" y="1411.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (3 samples, 0.05%)</title><rect x="317.2" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.2" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (2 samples, 0.03%)</title><rect x="317.4" y="1379.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (2 samples, 0.03%)</title><rect x="317.4" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (2 samples, 0.03%)</title><rect x="317.4" y="1347.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.4" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (2 samples, 0.03%)</title><rect x="317.4" y="1331.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.4" y="1342.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (2 samples, 0.03%)</title><rect x="317.4" y="1315.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (88 samples, 1.47%)</title><rect x="317.8" y="1427.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.behaviorStack_$eq (2 samples, 0.03%)</title><rect x="318.2" y="1411.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/Props.newActor (74 samples, 1.24%)</title><rect x="318.6" y="1411.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ArgsReflectConstructor.produce (71 samples, 1.19%)</title><rect x="318.6" y="1395.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.6" y="1406.0"></text>
</g>
<g>
<title>akka/util/Reflect$.instantiate (71 samples, 1.19%)</title><rect x="318.6" y="1379.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.6" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (67 samples, 1.12%)</title><rect x="318.6" y="1363.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (66 samples, 1.10%)</title><rect x="318.8" y="1347.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (47 samples, 0.79%)</title><rect x="318.9" y="1331.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.9" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection.&lt;init&gt; (47 samples, 0.79%)</title><rect x="318.9" y="1315.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.9" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (38 samples, 0.63%)</title><rect x="319.3" y="1299.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.3" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (38 samples, 0.63%)</title><rect x="319.3" y="1283.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (37 samples, 0.62%)</title><rect x="319.5" y="1267.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (37 samples, 0.62%)</title><rect x="319.5" y="1251.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.60%)</title><rect x="319.7" y="1235.0" width="7.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="322.7" y="1246.0"></text>
</g>
<g>
<title>__write (36 samples, 0.60%)</title><rect x="319.7" y="1219.0" width="7.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="322.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.55%)</title><rect x="320.3" y="1203.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="323.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.55%)</title><rect x="320.3" y="1187.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.3" y="1198.0"></text>
</g>
<g>
<title>sys_write (32 samples, 0.53%)</title><rect x="320.5" y="1171.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.5" y="1182.0"></text>
</g>
<g>
<title>vfs_write (32 samples, 0.53%)</title><rect x="320.5" y="1155.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.5" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (27 samples, 0.45%)</title><rect x="320.5" y="1139.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.5" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 0.45%)</title><rect x="320.5" y="1123.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.5" y="1134.0"></text>
</g>
<g>
<title>pipe_write (27 samples, 0.45%)</title><rect x="320.5" y="1107.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.5" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 0.38%)</title><rect x="320.9" y="1091.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.9" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.38%)</title><rect x="320.9" y="1075.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.38%)</title><rect x="320.9" y="1059.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.9" y="1070.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="325.8" y="1139.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.8" y="1150.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.05%)</title><rect x="326.2" y="1139.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="329.2" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.05%)</title><rect x="326.2" y="1123.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="329.2" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="326.4" y="1107.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.4" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="326.4" y="1091.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.4" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="326.8" y="1299.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/Actor.$init$ (2 samples, 0.03%)</title><rect x="326.8" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.8" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (5 samples, 0.08%)</title><rect x="327.2" y="1299.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.2" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (4 samples, 0.07%)</title><rect x="327.2" y="1283.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (4 samples, 0.07%)</title><rect x="327.2" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (4 samples, 0.07%)</title><rect x="327.2" y="1251.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (4 samples, 0.07%)</title><rect x="327.2" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.2" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (4 samples, 0.07%)</title><rect x="327.2" y="1219.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/1441994947.apply$mcV$sp (4 samples, 0.07%)</title><rect x="327.2" y="1203.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (4 samples, 0.07%)</title><rect x="327.2" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (4 samples, 0.07%)</title><rect x="327.2" y="1171.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.addWatcher (4 samples, 0.07%)</title><rect x="327.2" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.contains (2 samples, 0.03%)</title><rect x="327.6" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (18 samples, 0.30%)</title><rect x="328.2" y="1331.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.2" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.&lt;init&gt; (18 samples, 0.30%)</title><rect x="328.2" y="1315.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.2" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.register (5 samples, 0.08%)</title><rect x="328.4" y="1299.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.4" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (5 samples, 0.08%)</title><rect x="328.4" y="1283.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.4" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.08%)</title><rect x="328.4" y="1267.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.4" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.08%)</title><rect x="328.4" y="1251.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="328.4" y="1235.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="331.4" y="1246.0"></text>
</g>
<g>
<title>__write (5 samples, 0.08%)</title><rect x="328.4" y="1219.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="331.4" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="328.4" y="1203.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.4" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="328.4" y="1187.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="331.4" y="1198.0"></text>
</g>
<g>
<title>sys_write (5 samples, 0.08%)</title><rect x="328.4" y="1171.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.4" y="1182.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.08%)</title><rect x="328.4" y="1155.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.4" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.08%)</title><rect x="328.4" y="1139.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="331.4" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.08%)</title><rect x="328.4" y="1123.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.4" y="1134.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.08%)</title><rect x="328.4" y="1107.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.4" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.07%)</title><rect x="328.4" y="1091.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="331.4" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.07%)</title><rect x="328.4" y="1075.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="331.4" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="328.4" y="1059.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (8 samples, 0.13%)</title><rect x="329.8" y="1299.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.8" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (8 samples, 0.13%)</title><rect x="329.8" y="1283.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.8" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (8 samples, 0.13%)</title><rect x="329.8" y="1267.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (6 samples, 0.10%)</title><rect x="330.2" y="1251.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket (6 samples, 0.10%)</title><rect x="330.2" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.socket0 (6 samples, 0.10%)</title><rect x="330.2" y="1219.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.2" y="1230.0"></text>
</g>
<g>
<title>socket (3 samples, 0.05%)</title><rect x="330.8" y="1203.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="333.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="330.8" y="1187.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.8" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="330.8" y="1171.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.8" y="1182.0"></text>
</g>
<g>
<title>sys_socket (3 samples, 0.05%)</title><rect x="330.8" y="1155.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="333.8" y="1166.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toArray (3 samples, 0.05%)</title><rect x="332.0" y="1363.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.0" y="1374.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray$ (3 samples, 0.05%)</title><rect x="332.0" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.0" y="1358.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toArray (3 samples, 0.05%)</title><rect x="332.0" y="1331.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/mutable/ArrayBuilder.addAll (2 samples, 0.03%)</title><rect x="332.2" y="1315.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (2 samples, 0.03%)</title><rect x="332.2" y="1299.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.2" y="1310.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (2 samples, 0.03%)</title><rect x="332.2" y="1283.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.2" y="1294.0"></text>
</g>
<g>
<title>akka/actor/TypedCreatorFunctionConsumer.produce (3 samples, 0.05%)</title><rect x="332.6" y="1395.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.03%)</title><rect x="333.3" y="1411.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.3" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (5 samples, 0.08%)</title><rect x="334.1" y="1411.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.1" y="1422.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (3 samples, 0.05%)</title><rect x="334.1" y="1395.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.1" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.1" y="1379.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.1" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSeq.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.1" y="1363.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.1" y="1374.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.1" y="1347.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.1" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.1" y="1331.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="334.1" y="1315.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.1" y="1326.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="334.7" y="1395.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="337.7" y="1406.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPreStart (107 samples, 1.79%)</title><rect x="335.1" y="1427.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.1" y="1438.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart$ (107 samples, 1.79%)</title><rect x="335.1" y="1411.0" width="21.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.1" y="1422.0">a..</text>
</g>
<g>
<title>akka/actor/Actor.aroundPreStart (107 samples, 1.79%)</title><rect x="335.1" y="1395.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.1" y="1406.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.preStart (107 samples, 1.79%)</title><rect x="335.1" y="1379.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.1" y="1390.0">a..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (4 samples, 0.07%)</title><rect x="335.1" y="1363.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (4 samples, 0.07%)</title><rect x="335.1" y="1347.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (4 samples, 0.07%)</title><rect x="335.1" y="1331.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.1" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (3 samples, 0.05%)</title><rect x="335.3" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (4 samples, 0.07%)</title><rect x="335.9" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.9" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (4 samples, 0.07%)</title><rect x="335.9" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.9" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (4 samples, 0.07%)</title><rect x="335.9" y="1331.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.9" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (4 samples, 0.07%)</title><rect x="335.9" y="1315.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (4 samples, 0.07%)</title><rect x="335.9" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (4 samples, 0.07%)</title><rect x="335.9" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (3 samples, 0.05%)</title><rect x="335.9" y="1267.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (3 samples, 0.05%)</title><rect x="335.9" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.9" y="1262.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (3 samples, 0.05%)</title><rect x="335.9" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.9" y="1246.0"></text>
</g>
<g>
<title>akka/remote/artery/EnvelopeBufferPool.acquire (2 samples, 0.03%)</title><rect x="336.1" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (99 samples, 1.65%)</title><rect x="336.7" y="1363.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (98 samples, 1.64%)</title><rect x="336.7" y="1347.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.7" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (42 samples, 0.70%)</title><rect x="336.7" y="1331.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (7 samples, 0.12%)</title><rect x="337.9" y="1315.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleWithFixedDelay (7 samples, 0.12%)</title><rect x="337.9" y="1299.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.scheduleWithFixedDelay (3 samples, 0.05%)</title><rect x="338.1" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.1" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleWithFixedDelay (2 samples, 0.03%)</title><rect x="338.3" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.cancelTimer (2 samples, 0.03%)</title><rect x="338.7" y="1283.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (23 samples, 0.38%)</title><rect x="339.7" y="1315.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.05%)</title><rect x="339.8" y="1299.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="339.8" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="339.8" y="1267.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="339.8" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="339.8" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.05%)</title><rect x="339.8" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.05%)</title><rect x="339.8" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.05%)</title><rect x="339.8" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.8" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.05%)</title><rect x="339.8" y="1171.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="339.8" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="339.8" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="339.8" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.05%)</title><rect x="339.8" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.05%)</title><rect x="339.8" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.05%)</title><rect x="339.8" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.05%)</title><rect x="339.8" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.05%)</title><rect x="339.8" y="1043.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="339.8" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="339.8" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.8" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="339.8" y="995.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="342.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="339.8" y="979.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="342.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="339.8" y="963.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.8" y="974.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="339.8" y="947.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="342.8" y="958.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="339.8" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="342.8" y="942.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="339.8" y="915.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.8" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="339.8" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="342.8" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="339.8" y="883.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="339.8" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="342.8" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (12 samples, 0.20%)</title><rect x="340.4" y="1299.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (12 samples, 0.20%)</title><rect x="340.4" y="1283.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (11 samples, 0.18%)</title><rect x="340.6" y="1267.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (11 samples, 0.18%)</title><rect x="340.6" y="1251.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (11 samples, 0.18%)</title><rect x="340.6" y="1235.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (11 samples, 0.18%)</title><rect x="340.6" y="1219.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.6" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (11 samples, 0.18%)</title><rect x="340.6" y="1203.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.6" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (2 samples, 0.03%)</title><rect x="340.6" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.6" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="340.6" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="340.6" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.15%)</title><rect x="341.0" y="1187.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="341.0" y="1171.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.15%)</title><rect x="341.0" y="1155.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="344.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="341.0" y="1139.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.15%)</title><rect x="341.0" y="1123.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.15%)</title><rect x="341.0" y="1107.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.15%)</title><rect x="341.0" y="1091.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (9 samples, 0.15%)</title><rect x="341.0" y="1075.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.15%)</title><rect x="341.0" y="1059.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.15%)</title><rect x="341.0" y="1043.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.15%)</title><rect x="341.0" y="1027.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.0" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.15%)</title><rect x="341.0" y="1011.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="344.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="341.4" y="995.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.4" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="341.4" y="979.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.4" y="990.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.12%)</title><rect x="341.4" y="963.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="344.4" y="974.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="341.4" y="947.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.4" y="958.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.12%)</title><rect x="341.4" y="931.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.4" y="942.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="341.8" y="915.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="344.8" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="341.8" y="899.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.8" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="341.8" y="883.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="344.8" y="894.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (6 samples, 0.10%)</title><rect x="342.8" y="1299.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (6 samples, 0.10%)</title><rect x="342.8" y="1283.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (6 samples, 0.10%)</title><rect x="342.8" y="1267.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (4 samples, 0.07%)</title><rect x="342.8" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (4 samples, 0.07%)</title><rect x="342.8" y="1235.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (4 samples, 0.07%)</title><rect x="342.8" y="1219.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (4 samples, 0.07%)</title><rect x="342.8" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.07%)</title><rect x="342.8" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.8" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (4 samples, 0.07%)</title><rect x="342.8" y="1171.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.05%)</title><rect x="343.0" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.0" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.05%)</title><rect x="343.0" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.0" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (3 samples, 0.05%)</title><rect x="343.0" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.0" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="343.2" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="343.2" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.beforePreStart (3 samples, 0.05%)</title><rect x="344.2" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.foreach (3 samples, 0.05%)</title><rect x="344.2" y="1299.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$$Lambda$541/1397979757.apply (3 samples, 0.05%)</title><rect x="344.2" y="1283.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1$adapted (3 samples, 0.05%)</title><rect x="344.2" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.$anonfun$beforePreStart$1 (3 samples, 0.05%)</title><rect x="344.2" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (9 samples, 0.15%)</title><rect x="345.0" y="1331.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.0" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (9 samples, 0.15%)</title><rect x="345.0" y="1315.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (5 samples, 0.08%)</title><rect x="345.6" y="1299.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.6" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (5 samples, 0.08%)</title><rect x="345.6" y="1283.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.6" y="1294.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (3 samples, 0.05%)</title><rect x="346.0" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.0" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (3 samples, 0.05%)</title><rect x="346.0" y="1251.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.0" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.05%)</title><rect x="346.0" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.0" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.05%)</title><rect x="346.0" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (3 samples, 0.05%)</title><rect x="346.0" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (3 samples, 0.05%)</title><rect x="346.0" y="1187.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (3 samples, 0.05%)</title><rect x="346.0" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (3 samples, 0.05%)</title><rect x="346.0" y="1155.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (3 samples, 0.05%)</title><rect x="346.0" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.05%)</title><rect x="346.0" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.0" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="346.0" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.0" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="346.2" y="1091.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="349.2" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (47 samples, 0.79%)</title><rect x="346.7" y="1331.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (45 samples, 0.75%)</title><rect x="346.9" y="1315.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (4 samples, 0.07%)</title><rect x="347.1" y="1299.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (4 samples, 0.07%)</title><rect x="347.1" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.postStop (2 samples, 0.03%)</title><rect x="347.5" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (31 samples, 0.52%)</title><rect x="348.1" y="1299.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (3 samples, 0.05%)</title><rect x="348.3" y="1283.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (2 samples, 0.03%)</title><rect x="348.5" y="1267.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="348.5" y="1251.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="348.5" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="348.5" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="348.5" y="1203.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="348.5" y="1187.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="348.5" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="348.5" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.5" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="348.5" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="348.5" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.5" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (27 samples, 0.45%)</title><rect x="348.9" y="1283.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage$$anon$3.onPush (26 samples, 0.43%)</title><rect x="348.9" y="1267.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.grab (2 samples, 0.03%)</title><rect x="349.1" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter$Connection.slot_$eq (2 samples, 0.03%)</title><rect x="349.1" y="1235.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.1" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.trySuccess (23 samples, 0.38%)</title><rect x="349.5" y="1251.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.5" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess$ (23 samples, 0.38%)</title><rect x="349.5" y="1235.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.5" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.trySuccess (22 samples, 0.37%)</title><rect x="349.7" y="1219.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (22 samples, 0.37%)</title><rect x="349.7" y="1203.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (22 samples, 0.37%)</title><rect x="349.7" y="1187.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (22 samples, 0.37%)</title><rect x="349.7" y="1171.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (22 samples, 0.37%)</title><rect x="349.7" y="1155.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.7" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (22 samples, 0.37%)</title><rect x="349.7" y="1139.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (22 samples, 0.37%)</title><rect x="349.7" y="1123.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (22 samples, 0.37%)</title><rect x="349.7" y="1107.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (19 samples, 0.32%)</title><rect x="349.9" y="1091.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.9" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (19 samples, 0.32%)</title><rect x="349.9" y="1075.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.9" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (17 samples, 0.28%)</title><rect x="349.9" y="1059.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.9" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (17 samples, 0.28%)</title><rect x="349.9" y="1043.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.9" y="1054.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (16 samples, 0.27%)</title><rect x="350.1" y="1027.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.1" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (16 samples, 0.27%)</title><rect x="350.1" y="1011.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="1022.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (16 samples, 0.27%)</title><rect x="350.1" y="995.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (16 samples, 0.27%)</title><rect x="350.1" y="979.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.1" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (16 samples, 0.27%)</title><rect x="350.1" y="963.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.1" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (16 samples, 0.27%)</title><rect x="350.1" y="947.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.1" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (16 samples, 0.27%)</title><rect x="350.1" y="931.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.1" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (16 samples, 0.27%)</title><rect x="350.1" y="915.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.1" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="350.1" y="899.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.1" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.27%)</title><rect x="350.1" y="883.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.1" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="350.1" y="867.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.1" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (16 samples, 0.27%)</title><rect x="350.1" y="851.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.27%)</title><rect x="350.1" y="835.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.27%)</title><rect x="350.1" y="819.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (16 samples, 0.27%)</title><rect x="350.1" y="803.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.27%)</title><rect x="350.1" y="787.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.27%)</title><rect x="350.1" y="771.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.27%)</title><rect x="350.1" y="755.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.1" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 0.23%)</title><rect x="350.5" y="739.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="353.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="350.7" y="723.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.22%)</title><rect x="350.7" y="707.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="353.7" y="718.0"></text>
</g>
<g>
<title>sys_futex (11 samples, 0.18%)</title><rect x="351.1" y="691.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.1" y="702.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.17%)</title><rect x="351.1" y="675.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.17%)</title><rect x="351.1" y="659.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="354.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.17%)</title><rect x="351.1" y="643.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="354.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.17%)</title><rect x="351.1" y="627.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.17%)</title><rect x="351.1" y="611.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.03%)</title><rect x="353.3" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (6 samples, 0.10%)</title><rect x="354.2" y="1299.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.2" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$3.onPull (2 samples, 0.03%)</title><rect x="354.2" y="1283.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.2" y="1294.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="355.4" y="1299.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="358.4" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.remWatcher (2 samples, 0.03%)</title><rect x="356.2" y="1443.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher$ (2 samples, 0.03%)</title><rect x="356.2" y="1427.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.remWatcher (2 samples, 0.03%)</title><rect x="356.2" y="1411.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (40 samples, 0.67%)</title><rect x="356.6" y="1443.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleSupervise (39 samples, 0.65%)</title><rect x="356.6" y="1427.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.point (39 samples, 0.65%)</title><rect x="356.6" y="1411.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (36 samples, 0.60%)</title><rect x="356.6" y="1395.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (33 samples, 0.55%)</title><rect x="357.2" y="1379.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.2" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (33 samples, 0.55%)</title><rect x="357.2" y="1363.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (33 samples, 0.55%)</title><rect x="357.2" y="1347.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.2" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (33 samples, 0.55%)</title><rect x="357.2" y="1331.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.2" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (33 samples, 0.55%)</title><rect x="357.2" y="1315.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (33 samples, 0.55%)</title><rect x="357.2" y="1299.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (33 samples, 0.55%)</title><rect x="357.2" y="1283.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.2" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (33 samples, 0.55%)</title><rect x="357.2" y="1267.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.2" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (33 samples, 0.55%)</title><rect x="357.2" y="1251.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (33 samples, 0.55%)</title><rect x="357.2" y="1235.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (33 samples, 0.55%)</title><rect x="357.2" y="1219.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (32 samples, 0.53%)</title><rect x="357.2" y="1203.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (32 samples, 0.53%)</title><rect x="357.2" y="1187.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.53%)</title><rect x="357.2" y="1171.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.50%)</title><rect x="357.6" y="1155.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.6" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (27 samples, 0.45%)</title><rect x="358.2" y="1139.0" width="5.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="361.2" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.38%)</title><rect x="359.0" y="1123.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.38%)</title><rect x="359.0" y="1107.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.0" y="1118.0"></text>
</g>
<g>
<title>sys_futex (21 samples, 0.35%)</title><rect x="359.4" y="1091.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.4" y="1102.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.35%)</title><rect x="359.4" y="1075.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.4" y="1086.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.35%)</title><rect x="359.4" y="1059.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.4" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.33%)</title><rect x="359.6" y="1043.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.6" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.33%)</title><rect x="359.6" y="1027.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.6" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.33%)</title><rect x="359.6" y="1011.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.6" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.newCell (3 samples, 0.05%)</title><rect x="363.7" y="1395.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (2 samples, 0.03%)</title><rect x="363.9" y="1379.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (2 samples, 0.03%)</title><rect x="363.9" y="1363.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (44 samples, 0.74%)</title><rect x="364.5" y="1443.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (44 samples, 0.74%)</title><rect x="364.5" y="1427.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (44 samples, 0.74%)</title><rect x="364.5" y="1411.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.5" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (43 samples, 0.72%)</title><rect x="364.7" y="1395.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (5 samples, 0.08%)</title><rect x="364.7" y="1379.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="1390.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (5 samples, 0.08%)</title><rect x="364.7" y="1363.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.7" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (2 samples, 0.03%)</title><rect x="364.7" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (2 samples, 0.03%)</title><rect x="364.7" y="1331.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (3 samples, 0.05%)</title><rect x="365.1" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (2 samples, 0.03%)</title><rect x="365.3" y="1331.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (6 samples, 0.10%)</title><rect x="365.7" y="1379.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (6 samples, 0.10%)</title><rect x="365.7" y="1363.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.7" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (6 samples, 0.10%)</title><rect x="365.7" y="1347.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.7" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (2 samples, 0.03%)</title><rect x="365.7" y="1331.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.set (2 samples, 0.03%)</title><rect x="365.7" y="1315.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.set (2 samples, 0.03%)</title><rect x="365.7" y="1299.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UnsafeFieldAccessorImpl.ensureObj (2 samples, 0.03%)</title><rect x="365.7" y="1283.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (4 samples, 0.07%)</title><rect x="366.1" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (3 samples, 0.05%)</title><rect x="366.1" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (3 samples, 0.05%)</title><rect x="366.1" y="1299.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.langReflectAccess (2 samples, 0.03%)</title><rect x="366.3" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (23 samples, 0.38%)</title><rect x="367.1" y="1379.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (23 samples, 0.38%)</title><rect x="367.1" y="1363.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.1" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (23 samples, 0.38%)</title><rect x="367.1" y="1347.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (23 samples, 0.38%)</title><rect x="367.1" y="1331.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (23 samples, 0.38%)</title><rect x="367.1" y="1315.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (22 samples, 0.37%)</title><rect x="367.3" y="1299.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.3" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (22 samples, 0.37%)</title><rect x="367.3" y="1283.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (22 samples, 0.37%)</title><rect x="367.3" y="1267.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (22 samples, 0.37%)</title><rect x="367.3" y="1251.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (21 samples, 0.35%)</title><rect x="367.5" y="1235.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 0.35%)</title><rect x="367.5" y="1219.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 0.35%)</title><rect x="367.5" y="1203.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (21 samples, 0.35%)</title><rect x="367.5" y="1187.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (21 samples, 0.35%)</title><rect x="367.5" y="1171.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.35%)</title><rect x="367.5" y="1155.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.33%)</title><rect x="367.6" y="1139.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.6" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="367.8" y="1123.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="370.8" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="368.6" y="1123.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="371.6" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.23%)</title><rect x="368.8" y="1107.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.23%)</title><rect x="368.8" y="1091.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="371.8" y="1102.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.23%)</title><rect x="368.8" y="1075.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.8" y="1086.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.23%)</title><rect x="368.8" y="1059.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.8" y="1070.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.23%)</title><rect x="368.8" y="1043.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.8" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.23%)</title><rect x="368.8" y="1027.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.8" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.23%)</title><rect x="368.8" y="1011.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.8" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.23%)</title><rect x="368.8" y="995.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.8" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (2 samples, 0.03%)</title><rect x="371.6" y="1379.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.6" y="1390.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (2 samples, 0.03%)</title><rect x="371.6" y="1363.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (6 samples, 0.10%)</title><rect x="372.0" y="1379.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.0" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (4 samples, 0.07%)</title><rect x="372.4" y="1363.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (4 samples, 0.07%)</title><rect x="372.4" y="1347.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (4 samples, 0.07%)</title><rect x="372.4" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (4 samples, 0.07%)</title><rect x="372.4" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="372.4" y="1299.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.05%)</title><rect x="372.4" y="1283.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.4" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (3 samples, 0.05%)</title><rect x="372.4" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="372.4" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="372.4" y="1235.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (2 samples, 0.03%)</title><rect x="372.4" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.4" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (2 samples, 0.03%)</title><rect x="372.4" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="375.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (2 samples, 0.03%)</title><rect x="372.4" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (2 samples, 0.03%)</title><rect x="372.4" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="372.4" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.4" y="1166.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="372.4" y="1139.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="375.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watchedActorTerminated (35 samples, 0.58%)</title><rect x="373.2" y="1443.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated$ (35 samples, 0.58%)</title><rect x="373.2" y="1427.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watchedActorTerminated (35 samples, 0.58%)</title><rect x="373.2" y="1411.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.2" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.handleChildTerminated (21 samples, 0.35%)</title><rect x="373.4" y="1395.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.4" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated$ (21 samples, 0.35%)</title><rect x="373.4" y="1379.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.4" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.handleChildTerminated (21 samples, 0.35%)</title><rect x="373.4" y="1363.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.4" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeChildAndGetStateChange (15 samples, 0.25%)</title><rect x="373.8" y="1347.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.8" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange$ (15 samples, 0.25%)</title><rect x="373.8" y="1331.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChildAndGetStateChange (15 samples, 0.25%)</title><rect x="373.8" y="1315.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeChild$1 (15 samples, 0.25%)</title><rect x="373.8" y="1299.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.8" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.swapChildrenRefs (3 samples, 0.05%)</title><rect x="373.8" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.remove (12 samples, 0.20%)</title><rect x="374.4" y="1283.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.4" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (12 samples, 0.20%)</title><rect x="374.4" y="1267.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.4" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (12 samples, 0.20%)</title><rect x="374.4" y="1251.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.4" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (12 samples, 0.20%)</title><rect x="374.4" y="1235.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.4" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (11 samples, 0.18%)</title><rect x="374.5" y="1219.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.removed (11 samples, 0.18%)</title><rect x="374.5" y="1203.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delete (11 samples, 0.18%)</title><rect x="374.5" y="1187.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (9 samples, 0.15%)</title><rect x="374.7" y="1171.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.7" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (7 samples, 0.12%)</title><rect x="375.1" y="1155.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.1" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (6 samples, 0.10%)</title><rect x="375.1" y="1139.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (3 samples, 0.05%)</title><rect x="375.1" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.1" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.05%)</title><rect x="375.1" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.1" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (3 samples, 0.05%)</title><rect x="375.1" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.1" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balLeft (2 samples, 0.03%)</title><rect x="375.1" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.1" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delRight$1 (3 samples, 0.05%)</title><rect x="375.7" y="1123.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.7" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (3 samples, 0.05%)</title><rect x="375.7" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="375.7" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.7" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.del (2 samples, 0.03%)</title><rect x="375.7" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.7" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.delLeft$1 (2 samples, 0.03%)</title><rect x="375.7" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.7" y="1070.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (2 samples, 0.03%)</title><rect x="376.7" y="1347.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.supervisorStrategy (2 samples, 0.03%)</title><rect x="376.7" y="1331.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anon$10.&lt;init&gt; (2 samples, 0.03%)</title><rect x="376.7" y="1315.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/StreamSupervisor.supervisorStrategy (2 samples, 0.03%)</title><rect x="377.1" y="1347.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminatedQueuedFor (2 samples, 0.03%)</title><rect x="377.5" y="1395.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor$ (2 samples, 0.03%)</title><rect x="377.5" y="1379.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.terminatedQueuedFor (2 samples, 0.03%)</title><rect x="377.5" y="1363.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByRef (5 samples, 0.08%)</title><rect x="377.9" y="1395.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.9" y="1406.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="378.5" y="1379.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.5" y="1390.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="378.5" y="1363.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="378.5" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (2 samples, 0.03%)</title><rect x="378.9" y="1395.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.9" y="1406.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (2 samples, 0.03%)</title><rect x="378.9" y="1379.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.9" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1027/1157199671.apply$mcV$sp (2 samples, 0.03%)</title><rect x="378.9" y="1363.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.9" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watchedActorTerminated$1 (2 samples, 0.03%)</title><rect x="378.9" y="1347.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$EmptyMap$.get (2 samples, 0.03%)</title><rect x="379.7" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.7" y="1406.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (3 samples, 0.05%)</title><rect x="380.5" y="1475.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (3 samples, 0.05%)</title><rect x="380.5" y="1459.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.5" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (3 samples, 0.05%)</title><rect x="380.5" y="1443.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.5" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (3 samples, 0.05%)</title><rect x="380.5" y="1427.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.5" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (3 samples, 0.05%)</title><rect x="380.5" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.5" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/EarliestFirstSystemMessageList$.tail$extension (2 samples, 0.03%)</title><rect x="381.3" y="1475.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.3" y="1486.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="381.6" y="1475.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="384.6" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processMailbox (1,624 samples, 27.13%)</title><rect x="382.0" y="1491.0" width="320.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.0" y="1502.0">akka/dispatch/Mailbox.processMailbox</text>
</g>
<g>
<title>akka/actor/ActorCell.invoke (1,543 samples, 25.78%)</title><rect x="382.2" y="1475.0" width="304.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.2" y="1486.0">akka/actor/ActorCell.invoke</text>
</g>
<g>
<title>akka/actor/ActorCell.autoReceiveMessage (4 samples, 0.07%)</title><rect x="382.6" y="1459.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receivedTerminated (4 samples, 0.07%)</title><rect x="382.6" y="1443.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated$ (4 samples, 0.07%)</title><rect x="382.6" y="1427.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.receivedTerminated (4 samples, 0.07%)</title><rect x="382.6" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.6" y="1422.0"></text>
</g>
<g>
<title>scala/Option.foreach (3 samples, 0.05%)</title><rect x="382.8" y="1395.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$1039/438525135.apply (3 samples, 0.05%)</title><rect x="382.8" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1$adapted (3 samples, 0.05%)</title><rect x="382.8" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$receivedTerminated$1 (3 samples, 0.05%)</title><rect x="382.8" y="1347.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.8" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="383.0" y="1331.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.0" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (2 samples, 0.03%)</title><rect x="383.0" y="1315.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.0" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (2 samples, 0.03%)</title><rect x="383.0" y="1299.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeoutIfNeeded (10 samples, 0.17%)</title><rect x="383.6" y="1459.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded$ (10 samples, 0.17%)</title><rect x="383.6" y="1443.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeoutIfNeeded (10 samples, 0.17%)</title><rect x="383.6" y="1427.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.checkReceiveTimeout (10 samples, 0.17%)</title><rect x="383.6" y="1411.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.6" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout$ (10 samples, 0.17%)</title><rect x="383.6" y="1395.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="1406.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.checkReceiveTimeout (10 samples, 0.17%)</title><rect x="383.6" y="1379.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.6" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.cancelReceiveTimeout (4 samples, 0.07%)</title><rect x="384.0" y="1363.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout$ (4 samples, 0.07%)</title><rect x="384.0" y="1347.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.cancelReceiveTimeout (4 samples, 0.07%)</title><rect x="384.0" y="1331.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ReceiveTimeout.rescheduleReceiveTimeout (4 samples, 0.07%)</title><rect x="384.8" y="1363.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (3 samples, 0.05%)</title><rect x="385.0" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce$ (3 samples, 0.05%)</title><rect x="385.0" y="1331.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Scheduler.scheduleOnce (3 samples, 0.05%)</title><rect x="385.0" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.0" y="1326.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.scheduleOnce (3 samples, 0.05%)</title><rect x="385.0" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LightArrayRevolverScheduler.akka$actor$LightArrayRevolverScheduler$$schedule (3 samples, 0.05%)</title><rect x="385.0" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.receiveMessage (1,526 samples, 25.50%)</title><rect x="385.6" y="1459.0" width="300.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.6" y="1470.0">akka/actor/ActorCell.receiveMessage</text>
</g>
<g>
<title>akka/actor/ActorCell.actor (2 samples, 0.03%)</title><rect x="385.8" y="1443.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.8" y="1454.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.aroundReceive (8 samples, 0.13%)</title><rect x="386.2" y="1443.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.2" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (8 samples, 0.13%)</title><rect x="386.2" y="1427.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.2" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (8 samples, 0.13%)</title><rect x="386.2" y="1411.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.2" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher$$anonfun$receive$1.applyOrElse (8 samples, 0.13%)</title><rect x="386.2" y="1395.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.2" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishChanges (8 samples, 0.13%)</title><rect x="386.2" y="1379.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.2" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterDomainEventPublisher.publishDiff (8 samples, 0.13%)</title><rect x="386.2" y="1363.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.2" y="1374.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffMemberEvents (3 samples, 0.05%)</title><rect x="386.2" y="1347.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.2" y="1358.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.groupBy (2 samples, 0.03%)</title><rect x="386.2" y="1331.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.2" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy$ (2 samples, 0.03%)</title><rect x="386.2" y="1315.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.2" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOps.groupBy (2 samples, 0.03%)</title><rect x="386.2" y="1299.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.2" y="1310.0"></text>
</g>
<g>
<title>akka/cluster/ClusterEvent$.diffRolesLeader (2 samples, 0.03%)</title><rect x="386.8" y="1347.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.8" y="1358.0"></text>
</g>
<g>
<title>akka/cluster/Gossip.allRoles (2 samples, 0.03%)</title><rect x="386.8" y="1331.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.8" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.flatMap (2 samples, 0.03%)</title><rect x="386.8" y="1315.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.8" y="1326.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSortedSetOps.flatMap$ (2 samples, 0.03%)</title><rect x="386.8" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.8" y="1310.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedSortedSetOps.flatMap (2 samples, 0.03%)</title><rect x="386.8" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.8" y="1294.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1.aroundReceive (2 samples, 0.03%)</title><rect x="387.8" y="1443.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.8" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (2 samples, 0.03%)</title><rect x="387.8" y="1427.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (2 samples, 0.03%)</title><rect x="387.8" y="1411.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.8" y="1422.0"></text>
</g>
<g>
<title>akka/cluster/ClusterReadView$$anon$1$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="387.8" y="1395.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.8" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.aroundReceive (169 samples, 2.82%)</title><rect x="388.2" y="1443.0" width="33.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.2" y="1454.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (169 samples, 2.82%)</title><rect x="388.2" y="1427.0" width="33.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.2" y="1438.0">ak..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (169 samples, 2.82%)</title><rect x="388.2" y="1411.0" width="33.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.2" y="1422.0">ak..</text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (169 samples, 2.82%)</title><rect x="388.2" y="1395.0" width="33.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.2" y="1406.0">sc..</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender$$anonfun$dormant$1.applyOrElse (169 samples, 2.82%)</title><rect x="388.2" y="1379.0" width="33.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.2" y="1390.0">ak..</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatSender.addMember (169 samples, 2.82%)</title><rect x="388.2" y="1363.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.2" y="1374.0">ak..</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.addMember (169 samples, 2.82%)</title><rect x="388.2" y="1347.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.2" y="1358.0">ak..</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.copy (3 samples, 0.05%)</title><rect x="388.3" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.3" y="1342.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.&lt;init&gt; (3 samples, 0.05%)</title><rect x="388.3" y="1315.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.3" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterNot (165 samples, 2.76%)</title><rect x="388.9" y="1331.0" width="32.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.9" y="1342.0">sc..</text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot$ (165 samples, 2.76%)</title><rect x="388.9" y="1315.0" width="32.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.9" y="1326.0">sc..</text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterNot (165 samples, 2.76%)</title><rect x="388.9" y="1299.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.9" y="1310.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.filterImpl (165 samples, 2.76%)</title><rect x="388.9" y="1283.0" width="32.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.9" y="1294.0">sc..</text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl$ (165 samples, 2.76%)</title><rect x="388.9" y="1267.0" width="32.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="1278.0">sc..</text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.filterImpl (165 samples, 2.76%)</title><rect x="388.9" y="1251.0" width="32.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.9" y="1262.0">sc..</text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState$$Lambda$1384/1366845745.apply (2 samples, 0.03%)</title><rect x="388.9" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.9" y="1246.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.$anonfun$addMember$2$adapted (2 samples, 0.03%)</title><rect x="388.9" y="1219.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.9" y="1230.0"></text>
</g>
<g>
<title>akka/cluster/CrossDcHeartbeatingState.$anonfun$addMember$2 (2 samples, 0.03%)</title><rect x="388.9" y="1203.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.next (6 samples, 0.10%)</title><rect x="389.3" y="1235.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$Tree.right (2 samples, 0.03%)</title><rect x="389.3" y="1219.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.3" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$TreeIterator.findLeftMostOrPopOnEmpty (4 samples, 0.07%)</title><rect x="389.7" y="1219.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.7" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (157 samples, 2.62%)</title><rect x="390.5" y="1235.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.5" y="1246.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/TreeSet$$anon$1.addOne (157 samples, 2.62%)</title><rect x="390.5" y="1219.0" width="31.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.5" y="1230.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (157 samples, 2.62%)</title><rect x="390.5" y="1203.0" width="31.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.5" y="1214.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (155 samples, 2.59%)</title><rect x="390.9" y="1187.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.9" y="1198.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (148 samples, 2.47%)</title><rect x="391.1" y="1171.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.1" y="1182.0">sc..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (3 samples, 0.05%)</title><rect x="391.3" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (139 samples, 2.32%)</title><rect x="391.9" y="1155.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.9" y="1166.0">s..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (6 samples, 0.10%)</title><rect x="392.1" y="1139.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.1" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (121 samples, 2.02%)</title><rect x="393.3" y="1139.0" width="23.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.3" y="1150.0">s..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (109 samples, 1.82%)</title><rect x="394.5" y="1123.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.5" y="1134.0">s..</text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (96 samples, 1.60%)</title><rect x="394.7" y="1107.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.7" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (81 samples, 1.35%)</title><rect x="395.2" y="1091.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (3 samples, 0.05%)</title><rect x="395.6" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (70 samples, 1.17%)</title><rect x="396.2" y="1075.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (3 samples, 0.05%)</title><rect x="396.2" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (57 samples, 0.95%)</title><rect x="396.8" y="1059.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (4 samples, 0.07%)</title><rect x="397.0" y="1043.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.0" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (48 samples, 0.80%)</title><rect x="397.8" y="1043.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.8" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (2 samples, 0.03%)</title><rect x="397.8" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.8" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (33 samples, 0.55%)</title><rect x="398.4" y="1027.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.4" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (26 samples, 0.43%)</title><rect x="399.0" y="1011.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.0" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (21 samples, 0.35%)</title><rect x="399.4" y="995.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.4" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.balanceRight (3 samples, 0.05%)</title><rect x="399.4" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (14 samples, 0.23%)</title><rect x="400.0" y="979.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.0" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (7 samples, 0.12%)</title><rect x="400.8" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.8" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="401.0" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.0" y="958.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (2 samples, 0.03%)</title><rect x="401.8" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.8" y="958.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (2 samples, 0.03%)</title><rect x="402.3" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.3" y="974.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (4 samples, 0.07%)</title><rect x="402.7" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.7" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (3 samples, 0.05%)</title><rect x="402.9" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.9" y="974.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (3 samples, 0.05%)</title><rect x="403.5" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.5" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (2 samples, 0.03%)</title><rect x="403.5" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.5" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (2 samples, 0.03%)</title><rect x="403.5" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.5" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (2 samples, 0.03%)</title><rect x="403.5" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.5" y="958.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (2 samples, 0.03%)</title><rect x="403.5" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.5" y="942.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (2 samples, 0.03%)</title><rect x="403.5" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.5" y="926.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (2 samples, 0.03%)</title><rect x="403.5" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.5" y="910.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (3 samples, 0.05%)</title><rect x="404.3" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.3" y="1022.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (3 samples, 0.05%)</title><rect x="404.3" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.3" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (12 samples, 0.20%)</title><rect x="404.9" y="1027.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.9" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (7 samples, 0.12%)</title><rect x="404.9" y="1011.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.9" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (7 samples, 0.12%)</title><rect x="404.9" y="995.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.9" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (7 samples, 0.12%)</title><rect x="404.9" y="979.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.9" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (7 samples, 0.12%)</title><rect x="404.9" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.9" y="974.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (7 samples, 0.12%)</title><rect x="404.9" y="947.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.9" y="958.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (7 samples, 0.12%)</title><rect x="404.9" y="931.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.9" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.find (4 samples, 0.07%)</title><rect x="405.5" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.5" y="926.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (5 samples, 0.08%)</title><rect x="406.3" y="1011.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.3" y="1022.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="406.9" y="995.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="409.9" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (4 samples, 0.07%)</title><rect x="407.3" y="1043.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.3" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (2 samples, 0.03%)</title><rect x="407.3" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.3" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (2 samples, 0.03%)</title><rect x="407.7" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.7" y="1038.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="407.7" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="410.7" y="1022.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (9 samples, 0.15%)</title><rect x="408.3" y="1059.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (4 samples, 0.07%)</title><rect x="408.5" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.5" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (3 samples, 0.05%)</title><rect x="408.7" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.7" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (3 samples, 0.05%)</title><rect x="408.7" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.7" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (3 samples, 0.05%)</title><rect x="408.7" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.7" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (3 samples, 0.05%)</title><rect x="408.7" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.7" y="990.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (3 samples, 0.05%)</title><rect x="408.7" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.7" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.find (3 samples, 0.05%)</title><rect x="408.7" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.7" y="958.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (4 samples, 0.07%)</title><rect x="409.2" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.2" y="1054.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="409.4" y="1027.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="412.4" y="1038.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (6 samples, 0.10%)</title><rect x="410.0" y="1075.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.0" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (2 samples, 0.03%)</title><rect x="410.4" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.4" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (2 samples, 0.03%)</title><rect x="410.4" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.4" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (2 samples, 0.03%)</title><rect x="410.4" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.4" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (2 samples, 0.03%)</title><rect x="410.4" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.4" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (2 samples, 0.03%)</title><rect x="410.4" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.4" y="1006.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (2 samples, 0.03%)</title><rect x="410.4" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.4" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.find (2 samples, 0.03%)</title><rect x="410.4" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.4" y="974.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (2 samples, 0.03%)</title><rect x="410.8" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.8" y="1070.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="410.8" y="1043.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="413.8" y="1054.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (11 samples, 0.18%)</title><rect x="411.4" y="1091.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.4" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (8 samples, 0.13%)</title><rect x="411.4" y="1075.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.4" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (7 samples, 0.12%)</title><rect x="411.6" y="1059.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.6" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (7 samples, 0.12%)</title><rect x="411.6" y="1043.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.6" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (7 samples, 0.12%)</title><rect x="411.6" y="1027.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.6" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (7 samples, 0.12%)</title><rect x="411.6" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.6" y="1022.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (7 samples, 0.12%)</title><rect x="411.6" y="995.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.find (4 samples, 0.07%)</title><rect x="412.2" y="979.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.2" y="990.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (2 samples, 0.03%)</title><rect x="413.2" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.2" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="413.2" y="1059.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="416.2" y="1070.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (12 samples, 0.20%)</title><rect x="413.6" y="1107.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.6" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (8 samples, 0.13%)</title><rect x="413.8" y="1091.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.8" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (8 samples, 0.13%)</title><rect x="413.8" y="1075.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.8" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (8 samples, 0.13%)</title><rect x="413.8" y="1059.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.8" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (8 samples, 0.13%)</title><rect x="413.8" y="1043.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.8" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (8 samples, 0.13%)</title><rect x="413.8" y="1027.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.8" y="1038.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (8 samples, 0.13%)</title><rect x="413.8" y="1011.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="414.0" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.0" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.find (5 samples, 0.08%)</title><rect x="414.4" y="995.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.4" y="1006.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (3 samples, 0.05%)</title><rect x="415.4" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.4" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="415.6" y="1075.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="418.6" y="1086.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (6 samples, 0.10%)</title><rect x="416.0" y="1123.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.0" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (2 samples, 0.03%)</title><rect x="416.1" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.1" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (2 samples, 0.03%)</title><rect x="416.1" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.1" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (2 samples, 0.03%)</title><rect x="416.1" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.1" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (2 samples, 0.03%)</title><rect x="416.1" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.1" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (2 samples, 0.03%)</title><rect x="416.1" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.1" y="1054.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (2 samples, 0.03%)</title><rect x="416.1" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.1" y="1038.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (3 samples, 0.05%)</title><rect x="416.5" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.5" y="1118.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (11 samples, 0.18%)</title><rect x="417.1" y="1139.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.1" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (5 samples, 0.08%)</title><rect x="417.1" y="1123.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (5 samples, 0.08%)</title><rect x="417.1" y="1107.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.1" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (5 samples, 0.08%)</title><rect x="417.1" y="1091.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.1" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (5 samples, 0.08%)</title><rect x="417.1" y="1075.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (2 samples, 0.03%)</title><rect x="417.3" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="1070.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (2 samples, 0.03%)</title><rect x="417.3" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="417.7" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.7" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (6 samples, 0.10%)</title><rect x="418.1" y="1123.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.1" y="1134.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.07%)</title><rect x="418.5" y="1107.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="421.5" y="1118.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (5 samples, 0.08%)</title><rect x="419.3" y="1155.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.3" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (2 samples, 0.03%)</title><rect x="419.3" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.3" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (2 samples, 0.03%)</title><rect x="419.3" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.3" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (2 samples, 0.03%)</title><rect x="419.3" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.3" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (2 samples, 0.03%)</title><rect x="419.3" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.3" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (2 samples, 0.03%)</title><rect x="419.3" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.3" y="1086.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (2 samples, 0.03%)</title><rect x="419.3" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.3" y="1070.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (3 samples, 0.05%)</title><rect x="419.7" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.7" y="1150.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="419.7" y="1123.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="422.7" y="1134.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$4.compare (6 samples, 0.10%)</title><rect x="420.3" y="1171.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.3" y="1182.0"></text>
</g>
<g>
<title>akka/cluster/Member$$$Lambda$761/1697976702.apply (4 samples, 0.07%)</title><rect x="420.3" y="1155.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.3" y="1166.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1$adapted (4 samples, 0.07%)</title><rect x="420.3" y="1139.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.3" y="1150.0"></text>
</g>
<g>
<title>akka/cluster/Member$.$anonfun$ageOrdering$1 (4 samples, 0.07%)</title><rect x="420.3" y="1123.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.3" y="1134.0"></text>
</g>
<g>
<title>akka/cluster/Member.isOlderThan (4 samples, 0.07%)</title><rect x="420.3" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.3" y="1118.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter (3 samples, 0.05%)</title><rect x="420.3" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.3" y="1102.0"></text>
</g>
<g>
<title>akka/cluster/Member.dataCenter$lzycompute (3 samples, 0.05%)</title><rect x="420.3" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.3" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.unboxToBoolean (2 samples, 0.03%)</title><rect x="421.1" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.1" y="1166.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.aroundReceive (6 samples, 0.10%)</title><rect x="421.5" y="1443.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (6 samples, 0.10%)</title><rect x="421.5" y="1427.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (6 samples, 0.10%)</title><rect x="421.5" y="1411.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.5" y="1422.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.applyOrElse (6 samples, 0.10%)</title><rect x="421.5" y="1395.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.5" y="1406.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger.withMdc (5 samples, 0.08%)</title><rect x="421.5" y="1379.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.5" y="1390.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1$$Lambda$899/632752129.apply$mcV$sp (2 samples, 0.03%)</title><rect x="421.7" y="1363.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.7" y="1374.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLogger$$anonfun$receive$1.$anonfun$applyOrElse$3 (2 samples, 0.03%)</title><rect x="421.7" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.7" y="1358.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.03%)</title><rect x="421.7" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.7" y="1342.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.03%)</title><rect x="421.7" y="1315.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.7" y="1326.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.03%)</title><rect x="421.7" y="1299.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="1310.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.03%)</title><rect x="421.7" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.7" y="1294.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.03%)</title><rect x="421.7" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.7" y="1278.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.03%)</title><rect x="421.7" y="1251.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.7" y="1262.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.03%)</title><rect x="421.7" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="1246.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.append (2 samples, 0.03%)</title><rect x="421.7" y="1219.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.7" y="1230.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.put (2 samples, 0.03%)</title><rect x="421.7" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.7" y="1214.0"></text>
</g>
<g>
<title>ch/qos/logback/core/AsyncAppenderBase.putUninterruptibly (2 samples, 0.03%)</title><rect x="421.7" y="1187.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.put (2 samples, 0.03%)</title><rect x="421.7" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="421.7" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="421.7" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="421.7" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="421.7" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="421.7" y="1091.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.aroundReceive (192 samples, 3.21%)</title><rect x="422.7" y="1443.0" width="37.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.7" y="1454.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (192 samples, 3.21%)</title><rect x="422.7" y="1427.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.7" y="1438.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (192 samples, 3.21%)</title><rect x="422.7" y="1411.0" width="37.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.7" y="1422.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.applyOrElse (192 samples, 3.21%)</title><rect x="422.7" y="1395.0" width="37.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.7" y="1406.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.request (4 samples, 0.07%)</title><rect x="422.9" y="1379.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.9" y="1390.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithFeedback (2 samples, 0.03%)</title><rect x="423.0" y="1363.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.0" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor.akka$http$impl$engine$client$PoolMasterActor$$startPoolInterface (182 samples, 3.04%)</title><rect x="423.6" y="1379.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.6" y="1390.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$.apply (177 samples, 2.96%)</title><rect x="423.6" y="1363.0" width="34.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.6" y="1374.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.outgoingConnectionUsingContext (133 samples, 2.22%)</title><rect x="423.8" y="1347.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.8" y="1358.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingConnection (133 samples, 2.22%)</title><rect x="423.8" y="1331.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.8" y="1342.0">a..</text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt._outgoingTlsConnectionLayer (15 samples, 0.25%)</title><rect x="424.0" y="1315.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/ClientTransport$TCPTransport$.connectTo (14 samples, 0.23%)</title><rect x="424.0" y="1299.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Tcp.outgoingConnection (14 samples, 0.23%)</title><rect x="424.0" y="1283.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpIdleTimeout$.apply (7 samples, 0.12%)</title><rect x="424.0" y="1267.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (5 samples, 0.08%)</title><rect x="424.2" y="1251.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.2" y="1262.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (5 samples, 0.08%)</title><rect x="424.2" y="1235.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (3 samples, 0.05%)</title><rect x="424.6" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="424.6" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.join (5 samples, 0.08%)</title><rect x="425.6" y="1267.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.joinMat (5 samples, 0.08%)</title><rect x="425.6" y="1251.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (2 samples, 0.03%)</title><rect x="426.0" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="426.0" y="1219.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="426.0" y="1203.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.clientLayer (109 samples, 1.82%)</title><rect x="427.0" y="1315.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.0" y="1326.0">a..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.apply (109 samples, 1.82%)</title><rect x="427.0" y="1299.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.0" y="1310.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atop (8 samples, 0.13%)</title><rect x="427.2" y="1283.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.atopMat (8 samples, 0.13%)</title><rect x="427.2" y="1267.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.2" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (7 samples, 0.12%)</title><rect x="427.4" y="1251.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (5 samples, 0.08%)</title><rect x="427.4" y="1235.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="427.4" y="1219.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (3 samples, 0.05%)</title><rect x="427.8" y="1219.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="427.8" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$.create (100 samples, 1.67%)</title><rect x="428.8" y="1283.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create$ (100 samples, 1.67%)</title><rect x="428.8" y="1267.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphApply.create (100 samples, 1.67%)</title><rect x="428.8" y="1251.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.8" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1228/1806645740.apply (99 samples, 1.65%)</title><rect x="428.8" y="1235.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$1 (99 samples, 1.65%)</title><rect x="428.8" y="1219.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.apply (43 samples, 0.72%)</title><rect x="429.8" y="1203.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.8" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.prime (41 samples, 0.69%)</title><rect x="429.9" y="1187.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (25 samples, 0.42%)</title><rect x="429.9" y="1171.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (18 samples, 0.30%)</title><rect x="429.9" y="1155.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.9" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (8 samples, 0.13%)</title><rect x="429.9" y="1139.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.insertInGoodOrder$1 (2 samples, 0.03%)</title><rect x="430.1" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (3 samples, 0.05%)</title><rect x="430.5" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (3 samples, 0.05%)</title><rect x="430.5" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (3 samples, 0.05%)</title><rect x="430.5" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (3 samples, 0.05%)</title><rect x="430.5" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (3 samples, 0.05%)</title><rect x="430.5" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.apply (3 samples, 0.05%)</title><rect x="430.5" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.5" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.05%)</title><rect x="430.5" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.5" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.05%)</title><rect x="430.5" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.5" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.05%)</title><rect x="430.5" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14$$Lambda$484/1324165839.apply (3 samples, 0.05%)</title><rect x="430.5" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$14.$anonfun$apply$14 (3 samples, 0.05%)</title><rect x="430.5" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.accept (3 samples, 0.05%)</title><rect x="430.5" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept$ (3 samples, 0.05%)</title><rect x="430.5" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.5" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.accept (3 samples, 0.05%)</title><rect x="430.5" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.5" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.rec$2 (2 samples, 0.03%)</title><rect x="430.5" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.5" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.media$minusrange$minusdecl (2 samples, 0.03%)</title><rect x="430.5" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.5" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.media$minusrange$minusdecl$ (2 samples, 0.03%)</title><rect x="430.5" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.5" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/AcceptHeader.media$minusrange$minusdecl (2 samples, 0.03%)</title><rect x="430.5" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.5" y="862.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="431.1" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.1" y="1134.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="431.1" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.1" y="1118.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (2 samples, 0.03%)</title><rect x="431.1" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.1" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insert (2 samples, 0.03%)</title><rect x="431.5" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (2 samples, 0.03%)</title><rect x="431.5" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (2 samples, 0.03%)</title><rect x="431.5" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.5" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="431.5" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (7 samples, 0.12%)</title><rect x="431.9" y="1139.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.9" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (5 samples, 0.08%)</title><rect x="431.9" y="1123.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (5 samples, 0.08%)</title><rect x="431.9" y="1107.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (5 samples, 0.08%)</title><rect x="431.9" y="1091.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (4 samples, 0.07%)</title><rect x="432.1" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.1" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (4 samples, 0.07%)</title><rect x="432.1" y="1059.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.1" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (3 samples, 0.05%)</title><rect x="432.1" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.1" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.05%)</title><rect x="432.1" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.1" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.05%)</title><rect x="432.1" y="1011.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.1" y="1022.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.05%)</title><rect x="432.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.1" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$482/1298483237.apply (3 samples, 0.05%)</title><rect x="432.1" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.1" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (3 samples, 0.05%)</title><rect x="432.1" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.1" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (3 samples, 0.05%)</title><rect x="432.1" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.1" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (3 samples, 0.05%)</title><rect x="432.1" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.1" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (3 samples, 0.05%)</title><rect x="432.1" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.1" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.rec$2 (3 samples, 0.05%)</title><rect x="432.1" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minusdirective (2 samples, 0.03%)</title><rect x="432.3" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.3" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective$ (2 samples, 0.03%)</title><rect x="432.3" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.3" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective (2 samples, 0.03%)</title><rect x="432.3" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.3" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (2 samples, 0.03%)</title><rect x="432.9" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (2 samples, 0.03%)</title><rect x="432.9" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.9" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (2 samples, 0.03%)</title><rect x="432.9" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.9" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (2 samples, 0.03%)</title><rect x="432.9" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.9" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.apply (2 samples, 0.03%)</title><rect x="432.9" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.9" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="432.9" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.9" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="432.9" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.9" y="1038.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="432.9" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.9" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18$$Lambda$482/1298483237.apply (2 samples, 0.03%)</title><rect x="432.9" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.9" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$18.$anonfun$apply$18 (2 samples, 0.03%)</title><rect x="432.9" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minuscontrol (2 samples, 0.03%)</title><rect x="432.9" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.9" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol$ (2 samples, 0.03%)</title><rect x="432.9" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.9" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minuscontrol (2 samples, 0.03%)</title><rect x="432.9" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.9" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.rec$2 (2 samples, 0.03%)</title><rect x="432.9" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.9" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.cache$minusdirective (2 samples, 0.03%)</title><rect x="432.9" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.9" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective$ (2 samples, 0.03%)</title><rect x="432.9" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.9" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CacheControlHeader.cache$minusdirective (2 samples, 0.03%)</title><rect x="432.9" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.9" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (4 samples, 0.07%)</title><rect x="433.5" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (4 samples, 0.07%)</title><rect x="433.5" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (4 samples, 0.07%)</title><rect x="433.5" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (4 samples, 0.07%)</title><rect x="433.5" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (4 samples, 0.07%)</title><rect x="433.5" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.5" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.apply (3 samples, 0.05%)</title><rect x="433.5" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.5" y="1086.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (3 samples, 0.05%)</title><rect x="433.5" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.5" y="1070.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (3 samples, 0.05%)</title><rect x="433.5" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.5" y="1054.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (3 samples, 0.05%)</title><rect x="433.5" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.5" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19$$Lambda$480/1088818894.apply (3 samples, 0.05%)</title><rect x="433.5" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$19.$anonfun$apply$19 (3 samples, 0.05%)</title><rect x="433.5" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.5" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.connection (3 samples, 0.05%)</title><rect x="433.5" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.5" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection$ (3 samples, 0.05%)</title><rect x="433.5" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.5" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.connection (3 samples, 0.05%)</title><rect x="433.5" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.5" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.rec$16 (2 samples, 0.03%)</title><rect x="433.5" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.5" y="942.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="434.3" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.3" y="1166.0"></text>
</g>
<g>
<title>akka/util/ByteString$.apply (2 samples, 0.03%)</title><rect x="434.3" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.3" y="1150.0"></text>
</g>
<g>
<title>akka/util/CompactByteString$.apply (2 samples, 0.03%)</title><rect x="434.3" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.to (5 samples, 0.08%)</title><rect x="435.3" y="1171.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to$ (5 samples, 0.08%)</title><rect x="435.3" y="1155.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.to (5 samples, 0.08%)</title><rect x="435.3" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory$ToFactory.fromSpecific (5 samples, 0.08%)</title><rect x="435.3" y="1123.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (5 samples, 0.08%)</title><rect x="435.3" y="1107.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/IndexedSeq$.from (5 samples, 0.08%)</title><rect x="435.3" y="1091.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/SeqFactory$Delegate.from (5 samples, 0.08%)</title><rect x="435.3" y="1075.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (5 samples, 0.08%)</title><rect x="435.3" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (5 samples, 0.08%)</title><rect x="435.3" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.3" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/VectorBuilder.addAll (5 samples, 0.08%)</title><rect x="435.3" y="1027.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.3" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.copyToArray (5 samples, 0.08%)</title><rect x="435.3" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray$ (5 samples, 0.08%)</title><rect x="435.3" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.3" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.copyToArray (4 samples, 0.07%)</title><rect x="435.5" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (3 samples, 0.05%)</title><rect x="435.7" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$$$Lambda$475/40736485.apply (3 samples, 0.05%)</title><rect x="435.7" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.7" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$.$anonfun$prime$2 (3 samples, 0.05%)</title><rect x="435.7" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.7" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="435.7" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.7" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.lookupParser (2 samples, 0.03%)</title><rect x="435.7" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.7" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$62.lookup (2 samples, 0.03%)</title><rect x="435.7" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.7" y="894.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.get (2 samples, 0.03%)</title><rect x="435.7" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.7" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractSeq.sortBy (7 samples, 0.12%)</title><rect x="436.3" y="1171.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy$ (7 samples, 0.12%)</title><rect x="436.3" y="1155.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sortBy (7 samples, 0.12%)</title><rect x="436.3" y="1139.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.sorted (7 samples, 0.12%)</title><rect x="436.3" y="1123.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted$ (7 samples, 0.12%)</title><rect x="436.3" y="1107.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/StrictOptimizedSeqOps.sorted (7 samples, 0.12%)</title><rect x="436.3" y="1091.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.scala$collection$immutable$StrictOptimizedSeqOps$$super$sorted (7 samples, 0.12%)</title><rect x="436.3" y="1075.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.3" y="1086.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted$ (7 samples, 0.12%)</title><rect x="436.3" y="1059.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.3" y="1070.0"></text>
</g>
<g>
<title>scala/collection/SeqOps.sorted (7 samples, 0.12%)</title><rect x="436.3" y="1043.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (4 samples, 0.07%)</title><rect x="436.5" y="1027.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (4 samples, 0.07%)</title><rect x="436.5" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.5" y="1022.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (2 samples, 0.03%)</title><rect x="436.7" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.7" y="1006.0"></text>
</g>
<g>
<title>scala/math/Ordering$$anon$1.compare (2 samples, 0.03%)</title><rect x="436.7" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.7" y="990.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="436.7" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.7" y="974.0"></text>
</g>
<g>
<title>scala/math/Ordering$String$.compare (2 samples, 0.03%)</title><rect x="436.7" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.7" y="958.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare$ (2 samples, 0.03%)</title><rect x="436.7" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.7" y="942.0"></text>
</g>
<g>
<title>scala/math/Ordering$StringOrdering.compare (2 samples, 0.03%)</title><rect x="436.7" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.03%)</title><rect x="436.7" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.7" y="910.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$.apply (6 samples, 0.10%)</title><rect x="438.2" y="1203.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.2" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.&lt;init&gt; (5 samples, 0.08%)</title><rect x="438.4" y="1187.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape$.apply (4 samples, 0.07%)</title><rect x="438.4" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.&lt;init&gt; (4 samples, 0.07%)</title><rect x="438.4" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.4" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Range.foreach (2 samples, 0.03%)</title><rect x="438.8" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape$$Lambda$707/2051562038.apply (2 samples, 0.03%)</title><rect x="438.8" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.8" y="1134.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.$anonfun$new$1$adapted (2 samples, 0.03%)</title><rect x="438.8" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.8" y="1118.0"></text>
</g>
<g>
<title>akka/stream/UniformFanOutShape.$anonfun$new$1 (2 samples, 0.03%)</title><rect x="438.8" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="438.8" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.8" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.collect (2 samples, 0.03%)</title><rect x="439.4" y="1203.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.collect$ (2 samples, 0.03%)</title><rect x="439.4" y="1187.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.collect (2 samples, 0.03%)</title><rect x="439.4" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect.&lt;init&gt; (2 samples, 0.03%)</title><rect x="439.4" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.mapError (2 samples, 0.03%)</title><rect x="440.4" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.4" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError$ (2 samples, 0.03%)</title><rect x="440.4" y="1187.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.mapError (2 samples, 0.03%)</title><rect x="440.4" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.4" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (23 samples, 0.38%)</title><rect x="441.0" y="1203.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (3 samples, 0.05%)</title><rect x="441.2" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.2" y="1198.0"></text>
</g>
<g>
<title>akka/stream/FanInShape2.deepCopy (3 samples, 0.05%)</title><rect x="441.2" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.2" y="1182.0"></text>
</g>
<g>
<title>akka/stream/FanInShape.deepCopy (3 samples, 0.05%)</title><rect x="441.2" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector.map (2 samples, 0.03%)</title><rect x="441.4" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.4" y="1150.0"></text>
</g>
<g>
<title>scala/collection/StrictOptimizedIterableOps.map$ (2 samples, 0.03%)</title><rect x="441.4" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="1134.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (9 samples, 0.15%)</title><rect x="442.0" y="1187.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.0" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (3 samples, 0.05%)</title><rect x="442.2" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (3 samples, 0.05%)</title><rect x="442.2" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="442.2" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="442.2" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="442.2" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.copyAndSetNode (2 samples, 0.03%)</title><rect x="442.2" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (2 samples, 0.03%)</title><rect x="443.2" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$Map4.updated (2 samples, 0.03%)</title><rect x="443.2" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="443.2" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="443.2" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.2" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (2 samples, 0.03%)</title><rect x="443.9" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.9" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.03%)</title><rect x="443.9" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.9" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (2 samples, 0.03%)</title><rect x="443.9" y="1155.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Shape$.hasOnePort (2 samples, 0.03%)</title><rect x="443.9" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.9" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.nonEmpty (2 samples, 0.03%)</title><rect x="443.9" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.nonEmpty$ (2 samples, 0.03%)</title><rect x="443.9" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/AbstractSet.$plus$plus$eq (5 samples, 0.08%)</title><rect x="444.3" y="1187.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$plus$eq$ (5 samples, 0.08%)</title><rect x="444.3" y="1171.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.$plus$plus$eq (5 samples, 0.08%)</title><rect x="444.3" y="1155.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addAll (5 samples, 0.08%)</title><rect x="444.3" y="1139.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.3" y="1150.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addAll (5 samples, 0.08%)</title><rect x="444.3" y="1123.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.3" y="1134.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (5 samples, 0.08%)</title><rect x="444.3" y="1107.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.3" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (5 samples, 0.08%)</title><rect x="444.3" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.3" y="1102.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addOne (4 samples, 0.07%)</title><rect x="444.5" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.addOne (3 samples, 0.05%)</title><rect x="444.7" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashSet.add (3 samples, 0.05%)</title><rect x="444.7" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.7" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="444.9" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="447.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/InPort.hashCode (2 samples, 0.03%)</title><rect x="444.9" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.03%)</title><rect x="444.9" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$PortOpsImpl.$tilde$greater (13 samples, 0.22%)</title><rect x="445.5" y="1203.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater$ (13 samples, 0.22%)</title><rect x="445.5" y="1187.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.5" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Implicits$CombinerBase.$tilde$greater (13 samples, 0.22%)</title><rect x="445.5" y="1171.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.5" y="1182.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.add (2 samples, 0.03%)</title><rect x="445.5" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/GraphDSL$Builder.addEdge (11 samples, 0.18%)</title><rect x="445.9" y="1155.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.wire (10 samples, 0.17%)</title><rect x="445.9" y="1139.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (7 samples, 0.12%)</title><rect x="445.9" y="1123.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.9" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (2 samples, 0.03%)</title><rect x="447.5" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (2 samples, 0.03%)</title><rect x="447.5" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (2 samples, 0.03%)</title><rect x="447.5" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="447.5" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (2 samples, 0.03%)</title><rect x="447.5" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (2 samples, 0.03%)</title><rect x="447.5" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.5" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (6 samples, 0.10%)</title><rect x="448.5" y="1315.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.5" y="1326.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (6 samples, 0.10%)</title><rect x="448.5" y="1299.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.5" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (6 samples, 0.10%)</title><rect x="448.5" y="1283.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.5" y="1294.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (6 samples, 0.10%)</title><rect x="448.5" y="1267.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.5" y="1278.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (6 samples, 0.10%)</title><rect x="448.5" y="1251.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.5" y="1262.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (6 samples, 0.10%)</title><rect x="448.5" y="1235.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1227/1770612564.apply (6 samples, 0.10%)</title><rect x="448.5" y="1219.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (6 samples, 0.10%)</title><rect x="448.5" y="1203.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (6 samples, 0.10%)</title><rect x="448.5" y="1187.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (3 samples, 0.05%)</title><rect x="448.5" y="1171.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (3 samples, 0.05%)</title><rect x="448.5" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (3 samples, 0.05%)</title><rect x="448.5" y="1139.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (3 samples, 0.05%)</title><rect x="448.5" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.reg$minusname (3 samples, 0.05%)</title><rect x="449.1" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.clearSBForDecoding (3 samples, 0.05%)</title><rect x="449.1" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.setLength (3 samples, 0.05%)</title><rect x="449.1" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.setLength (3 samples, 0.05%)</title><rect x="449.1" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="449.1" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/BidiFlow.joinMat (2 samples, 0.03%)</title><rect x="449.7" y="1315.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/CompletedTraversalBuilder.add (2 samples, 0.03%)</title><rect x="449.7" y="1299.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.add (2 samples, 0.03%)</title><rect x="449.7" y="1283.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.buffer (2 samples, 0.03%)</title><rect x="450.1" y="1347.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer$ (2 samples, 0.03%)</title><rect x="450.1" y="1331.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.1" y="1342.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.buffer (2 samples, 0.03%)</title><rect x="450.1" y="1315.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.1" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$SimpleLinearGraphStage.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.1" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (39 samples, 0.65%)</title><rect x="450.8" y="1347.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.8" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.65%)</title><rect x="450.8" y="1331.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.8" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.65%)</title><rect x="450.8" y="1315.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.8" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (39 samples, 0.65%)</title><rect x="450.8" y="1299.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.8" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (34 samples, 0.57%)</title><rect x="451.0" y="1283.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$PoolInterfaceStage.createLogicAndMaterializedValue (28 samples, 0.47%)</title><rect x="451.0" y="1267.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.&lt;init&gt; (28 samples, 0.47%)</title><rect x="451.0" y="1251.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/BufferOverflowException.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.0" y="1235.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.0" y="1219.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.0" y="1203.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.05%)</title><rect x="451.0" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.05%)</title><rect x="451.0" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.05%)</title><rect x="451.0" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.0" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.05%)</title><rect x="451.0" y="1139.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="454.0" y="1150.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.05%)</title><rect x="451.0" y="1123.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="454.0" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.05%)</title><rect x="451.0" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="454.0" y="1118.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.05%)</title><rect x="451.0" y="1091.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="454.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (23 samples, 0.38%)</title><rect x="451.8" y="1235.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="451.8" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (21 samples, 0.35%)</title><rect x="452.2" y="1219.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.toString (21 samples, 0.35%)</title><rect x="452.2" y="1203.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.2" y="1214.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (21 samples, 0.35%)</title><rect x="452.2" y="1187.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (21 samples, 0.35%)</title><rect x="452.2" y="1171.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (21 samples, 0.35%)</title><rect x="452.2" y="1155.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (21 samples, 0.35%)</title><rect x="452.2" y="1139.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (21 samples, 0.35%)</title><rect x="452.2" y="1123.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (21 samples, 0.35%)</title><rect x="452.2" y="1107.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (21 samples, 0.35%)</title><rect x="452.2" y="1091.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.32%)</title><rect x="452.2" y="1075.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (19 samples, 0.32%)</title><rect x="452.2" y="1059.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.toString (19 samples, 0.32%)</title><rect x="452.2" y="1043.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.2" y="1054.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (19 samples, 0.32%)</title><rect x="452.2" y="1027.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (19 samples, 0.32%)</title><rect x="452.2" y="1011.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (19 samples, 0.32%)</title><rect x="452.2" y="995.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (19 samples, 0.32%)</title><rect x="452.2" y="979.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (19 samples, 0.32%)</title><rect x="452.2" y="963.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (19 samples, 0.32%)</title><rect x="452.2" y="947.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (19 samples, 0.32%)</title><rect x="452.2" y="931.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (19 samples, 0.32%)</title><rect x="452.2" y="915.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (18 samples, 0.30%)</title><rect x="452.4" y="899.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.4" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.toString (17 samples, 0.28%)</title><rect x="452.4" y="883.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.4" y="894.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (16 samples, 0.27%)</title><rect x="452.6" y="867.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.6" y="878.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (16 samples, 0.27%)</title><rect x="452.6" y="851.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.6" y="862.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (16 samples, 0.27%)</title><rect x="452.6" y="835.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.6" y="846.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (16 samples, 0.27%)</title><rect x="452.6" y="819.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.6" y="830.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (16 samples, 0.27%)</title><rect x="452.6" y="803.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.6" y="814.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (16 samples, 0.27%)</title><rect x="452.6" y="787.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.6" y="798.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (15 samples, 0.25%)</title><rect x="452.8" y="771.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.22%)</title><rect x="452.8" y="755.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (12 samples, 0.20%)</title><rect x="453.0" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.0" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.toString (11 samples, 0.18%)</title><rect x="453.0" y="723.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.0" y="734.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (11 samples, 0.18%)</title><rect x="453.0" y="707.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.0" y="718.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (11 samples, 0.18%)</title><rect x="453.0" y="691.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.0" y="702.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (11 samples, 0.18%)</title><rect x="453.0" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.0" y="686.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (11 samples, 0.18%)</title><rect x="453.0" y="659.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.0" y="670.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (11 samples, 0.18%)</title><rect x="453.0" y="643.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.0" y="654.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (11 samples, 0.18%)</title><rect x="453.0" y="627.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.0" y="638.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (11 samples, 0.18%)</title><rect x="453.0" y="611.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.18%)</title><rect x="453.0" y="595.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (10 samples, 0.17%)</title><rect x="453.2" y="579.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.2" y="590.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.toString (6 samples, 0.10%)</title><rect x="453.2" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.2" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (5 samples, 0.08%)</title><rect x="453.4" y="547.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.4" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (5 samples, 0.08%)</title><rect x="453.4" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.4" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (5 samples, 0.08%)</title><rect x="453.4" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.4" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (5 samples, 0.08%)</title><rect x="453.4" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.4" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (5 samples, 0.08%)</title><rect x="453.4" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.4" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (5 samples, 0.08%)</title><rect x="453.4" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.4" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (5 samples, 0.08%)</title><rect x="453.4" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.08%)</title><rect x="453.4" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.07%)</title><rect x="453.6" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.6" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.toString (3 samples, 0.05%)</title><rect x="453.6" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.6" y="414.0"></text>
</g>
<g>
<title>scala/collection/Map.toString$ (3 samples, 0.05%)</title><rect x="453.6" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.6" y="398.0"></text>
</g>
<g>
<title>scala/collection/Map.toString (3 samples, 0.05%)</title><rect x="453.6" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.6" y="382.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString$ (3 samples, 0.05%)</title><rect x="453.6" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.6" y="366.0"></text>
</g>
<g>
<title>scala/collection/Iterable.toString (3 samples, 0.05%)</title><rect x="453.6" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.6" y="350.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.mkString (3 samples, 0.05%)</title><rect x="453.6" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.6" y="334.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (3 samples, 0.05%)</title><rect x="453.6" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.6" y="318.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (3 samples, 0.05%)</title><rect x="453.6" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.6" y="302.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.addString (3 samples, 0.05%)</title><rect x="453.6" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.6" y="286.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString$ (3 samples, 0.05%)</title><rect x="453.6" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.6" y="270.0"></text>
</g>
<g>
<title>scala/collection/MapOps.addString (3 samples, 0.05%)</title><rect x="453.6" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.6" y="254.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (3 samples, 0.05%)</title><rect x="453.6" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.6" y="238.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (3 samples, 0.05%)</title><rect x="453.6" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.6" y="222.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (3 samples, 0.05%)</title><rect x="453.6" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.6" y="206.0"></text>
</g>
<g>
<title>scala/collection/Iterator$$anon$9.next (2 samples, 0.03%)</title><rect x="453.8" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.8" y="190.0"></text>
</g>
<g>
<title>scala/collection/MapOps$$Lambda$1239/77916789.apply (2 samples, 0.03%)</title><rect x="453.8" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.8" y="174.0"></text>
</g>
<g>
<title>scala/collection/MapOps.$anonfun$addString$1 (2 samples, 0.03%)</title><rect x="453.8" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="453.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="453.8" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.8" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="453.8" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.8" y="110.0"></text>
</g>
<g>
<title>scala/Some.toString (3 samples, 0.05%)</title><rect x="454.6" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.6" y="574.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._toString (3 samples, 0.05%)</title><rect x="454.6" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.6" y="558.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.mkString (3 samples, 0.05%)</title><rect x="454.6" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.6" y="542.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString$ (3 samples, 0.05%)</title><rect x="454.6" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.6" y="526.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.mkString (3 samples, 0.05%)</title><rect x="454.6" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.6" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.addString (3 samples, 0.05%)</title><rect x="454.6" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.6" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString$ (3 samples, 0.05%)</title><rect x="454.6" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.6" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.addString (3 samples, 0.05%)</title><rect x="454.6" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="454.6" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="454.6" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.6" y="430.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpHeader.toString (2 samples, 0.03%)</title><rect x="454.6" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.6" y="414.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString$ (2 samples, 0.03%)</title><rect x="454.6" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.6" y="398.0"></text>
</g>
<g>
<title>akka/http/impl/util/ToStringRenderable.toString (2 samples, 0.03%)</title><rect x="454.6" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.6" y="382.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (2 samples, 0.03%)</title><rect x="454.6" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.6" y="366.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (2 samples, 0.03%)</title><rect x="454.6" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.6" y="350.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (2 samples, 0.03%)</title><rect x="454.6" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.6" y="334.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$$anon$1.next (2 samples, 0.03%)</title><rect x="455.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.4" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.productElement (2 samples, 0.03%)</title><rect x="455.4" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.4" y="750.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$$anon$1.next (2 samples, 0.03%)</title><rect x="456.0" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.productElement (2 samples, 0.03%)</title><rect x="456.0" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.0" y="1070.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (5 samples, 0.08%)</title><rect x="456.6" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (5 samples, 0.08%)</title><rect x="456.6" y="1251.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage.createLogic (2 samples, 0.03%)</title><rect x="456.8" y="1235.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.8" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="456.8" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.8" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer.createLogic (2 samples, 0.03%)</title><rect x="457.2" y="1235.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.2" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Buffer$$anon$26.&lt;init&gt; (2 samples, 0.03%)</title><rect x="457.2" y="1219.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.2" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (4 samples, 0.07%)</title><rect x="457.7" y="1283.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (4 samples, 0.07%)</title><rect x="457.7" y="1267.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (4 samples, 0.07%)</title><rect x="457.7" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (4 samples, 0.07%)</title><rect x="457.7" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (4 samples, 0.07%)</title><rect x="457.7" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (4 samples, 0.07%)</title><rect x="457.7" y="1203.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="1214.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (4 samples, 0.07%)</title><rect x="457.7" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (4 samples, 0.07%)</title><rect x="457.7" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (4 samples, 0.07%)</title><rect x="457.7" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (4 samples, 0.07%)</title><rect x="457.7" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (4 samples, 0.07%)</title><rect x="457.7" y="1123.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (4 samples, 0.07%)</title><rect x="457.7" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (4 samples, 0.07%)</title><rect x="457.7" y="1091.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (4 samples, 0.07%)</title><rect x="457.7" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (4 samples, 0.07%)</title><rect x="457.7" y="1059.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="457.7" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.07%)</title><rect x="457.7" y="1027.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="457.7" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.07%)</title><rect x="457.7" y="995.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.07%)</title><rect x="457.7" y="979.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.07%)</title><rect x="457.7" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.07%)</title><rect x="457.7" y="947.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.07%)</title><rect x="457.7" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="457.7" y="915.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="457.7" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.7" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="457.9" y="883.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="460.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="457.9" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="457.9" y="851.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.9" y="862.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="457.9" y="835.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.9" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="457.9" y="819.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.9" y="830.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="457.9" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="460.9" y="814.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="457.9" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.9" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="457.9" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.9" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="457.9" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.9" y="766.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$plus (3 samples, 0.05%)</title><rect x="458.5" y="1363.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.5" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus$ (3 samples, 0.05%)</title><rect x="458.5" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.5" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$plus (3 samples, 0.05%)</title><rect x="458.5" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.5" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (3 samples, 0.05%)</title><rect x="458.5" y="1315.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.5" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (3 samples, 0.05%)</title><rect x="458.5" y="1299.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.5" y="1310.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1283.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1267.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1251.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.7" y="1262.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1235.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSetup.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1219.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/ScalaRunTime$._hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.7" y="1214.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3$.productHash (2 samples, 0.03%)</title><rect x="458.7" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.7" y="1198.0"></text>
</g>
<g>
<title>scala/util/hashing/MurmurHash3.productHash (2 samples, 0.03%)</title><rect x="458.7" y="1171.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.7" y="1182.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.7" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ConnectionPoolSettingsImpl.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.7" y="1150.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.7" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ClientConnectionSettingsImpl.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.7" y="1118.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/settings/ParserSettingsImpl.hashCode (2 samples, 0.03%)</title><rect x="458.7" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.7" y="1086.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="458.7" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.7" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.contains (2 samples, 0.03%)</title><rect x="459.1" y="1363.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.1" y="1374.0"></text>
</g>
<g>
<title>scala/runtime/Statics.anyHash (2 samples, 0.03%)</title><rect x="459.1" y="1347.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.1" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolGateway.hashCode (2 samples, 0.03%)</title><rect x="459.1" y="1331.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.1" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/settings/HostConnectionPoolSetup.hashCode (2 samples, 0.03%)</title><rect x="459.1" y="1315.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.1" y="1326.0"></text>
</g>
<g>
<title>scala/Option.foreach (3 samples, 0.05%)</title><rect x="459.7" y="1379.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.7" y="1390.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1$$Lambda$1469/432793345.apply (3 samples, 0.05%)</title><rect x="459.7" y="1363.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.7" y="1374.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.$anonfun$applyOrElse$7$adapted (3 samples, 0.05%)</title><rect x="459.7" y="1347.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.7" y="1358.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolMasterActor$$anonfun$receive$1.$anonfun$applyOrElse$7 (3 samples, 0.05%)</title><rect x="459.7" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager.aroundReceive (4 samples, 0.07%)</title><rect x="460.5" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.5" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (4 samples, 0.07%)</title><rect x="460.5" y="1427.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.5" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (4 samples, 0.07%)</title><rect x="460.5" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.5" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$SelectorBasedManager$$anonfun$workerForCommandHandler$1.applyOrElse (4 samples, 0.07%)</title><rect x="460.5" y="1395.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.5" y="1406.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.03%)</title><rect x="460.5" y="1379.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1363.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="460.5" y="1347.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1331.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.5" y="1342.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1315.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.5" y="1326.0"></text>
</g>
<g>
<title>akka/routing/Router.route (2 samples, 0.03%)</title><rect x="460.5" y="1299.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.5" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.send (2 samples, 0.03%)</title><rect x="460.5" y="1283.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.5" y="1294.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (2 samples, 0.03%)</title><rect x="460.5" y="1267.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.03%)</title><rect x="460.5" y="1251.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="460.5" y="1235.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.5" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1219.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.5" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="460.5" y="1203.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1187.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="460.5" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="460.5" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.5" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="460.5" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.5" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="460.5" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.5" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="460.5" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.5" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="460.5" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="460.5" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="460.5" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="460.5" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="460.5" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="460.5" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="460.5" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="460.5" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="460.5" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.5" y="958.0"></text>
</g>
<g>
<title>scala/runtime/AbstractPartialFunction.apply (2 samples, 0.03%)</title><rect x="460.9" y="1379.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="460.9" y="1363.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpManager$$anonfun$receive$1.applyOrElse (2 samples, 0.03%)</title><rect x="460.9" y="1347.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.aroundReceive (54 samples, 0.90%)</title><rect x="461.3" y="1443.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.3" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (54 samples, 0.90%)</title><rect x="461.3" y="1427.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.3" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (54 samples, 0.90%)</title><rect x="461.3" y="1411.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.3" y="1422.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$$anonfun$receive$1.applyOrElse (54 samples, 0.90%)</title><rect x="461.3" y="1395.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler.spawnChildWithCapacityProtection (54 samples, 0.90%)</title><rect x="461.3" y="1379.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.3" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.actorOf (39 samples, 0.65%)</title><rect x="461.3" y="1363.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.3" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf$ (39 samples, 0.65%)</title><rect x="461.3" y="1347.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.3" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.actorOf (39 samples, 0.65%)</title><rect x="461.3" y="1331.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.3" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (39 samples, 0.65%)</title><rect x="461.3" y="1315.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (3 samples, 0.05%)</title><rect x="461.3" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (3 samples, 0.05%)</title><rect x="461.3" y="1283.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (3 samples, 0.05%)</title><rect x="461.3" y="1267.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.getByName (2 samples, 0.03%)</title><rect x="461.5" y="1251.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="461.5" y="1235.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="461.5" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="461.5" y="1203.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.5" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (7 samples, 0.12%)</title><rect x="461.9" y="1299.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.9" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (7 samples, 0.12%)</title><rect x="461.9" y="1283.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.9" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (7 samples, 0.12%)</title><rect x="461.9" y="1267.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.9" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (7 samples, 0.12%)</title><rect x="461.9" y="1251.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (3 samples, 0.05%)</title><rect x="461.9" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (3 samples, 0.05%)</title><rect x="461.9" y="1219.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.9" y="1230.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (3 samples, 0.05%)</title><rect x="461.9" y="1203.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.9" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (3 samples, 0.05%)</title><rect x="461.9" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.9" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (3 samples, 0.05%)</title><rect x="461.9" y="1171.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (3 samples, 0.05%)</title><rect x="461.9" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.9" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (4 samples, 0.07%)</title><rect x="462.5" y="1235.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.5" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (4 samples, 0.07%)</title><rect x="462.5" y="1219.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.5" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.5" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1123.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.5" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="462.5" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.5" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="462.5" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.5" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="462.5" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.5" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="462.5" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.5" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="462.7" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.7" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="462.7" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.7" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="462.7" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.7" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="462.7" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.7" y="990.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.start (13 samples, 0.22%)</title><rect x="463.5" y="1299.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.start (13 samples, 0.22%)</title><rect x="463.5" y="1283.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start$ (13 samples, 0.22%)</title><rect x="463.5" y="1267.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.start (13 samples, 0.22%)</title><rect x="463.5" y="1251.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.attach (13 samples, 0.22%)</title><rect x="463.5" y="1235.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.5" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (13 samples, 0.22%)</title><rect x="463.5" y="1219.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.5" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.22%)</title><rect x="463.5" y="1203.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.5" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.22%)</title><rect x="463.5" y="1187.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.22%)</title><rect x="463.5" y="1171.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.22%)</title><rect x="463.5" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.22%)</title><rect x="463.5" y="1139.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.22%)</title><rect x="463.5" y="1123.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.22%)</title><rect x="463.5" y="1107.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.22%)</title><rect x="463.5" y="1091.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.22%)</title><rect x="463.5" y="1075.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.22%)</title><rect x="463.5" y="1059.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.5" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.22%)</title><rect x="463.5" y="1043.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="466.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="463.5" y="1027.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="466.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.22%)</title><rect x="463.5" y="1011.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.5" y="1022.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.20%)</title><rect x="463.7" y="995.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.7" y="1006.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.20%)</title><rect x="463.7" y="979.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.7" y="990.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.20%)</title><rect x="463.7" y="963.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.7" y="974.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.17%)</title><rect x="464.1" y="947.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="467.1" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.17%)</title><rect x="464.1" y="931.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="467.1" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.17%)</title><rect x="464.1" y="915.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.1" y="926.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (7 samples, 0.12%)</title><rect x="466.0" y="1299.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (5 samples, 0.08%)</title><rect x="466.4" y="1283.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.4" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getRequiredType (3 samples, 0.05%)</title><rect x="466.6" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.6" y="1278.0"></text>
</g>
<g>
<title>akka/util/Reflect$.findMarker (3 samples, 0.05%)</title><rect x="466.6" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.6" y="1262.0"></text>
</g>
<g>
<title>akka/util/Reflect$.rec$1 (3 samples, 0.05%)</title><rect x="466.6" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.6" y="1246.0"></text>
</g>
<g>
<title>scala/collection/ArrayOps$.collectFirst$extension (3 samples, 0.05%)</title><rect x="466.6" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.6" y="1230.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (7 samples, 0.12%)</title><rect x="467.6" y="1299.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (6 samples, 0.10%)</title><rect x="467.8" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.&lt;init&gt; (2 samples, 0.03%)</title><rect x="467.8" y="1267.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.init (2 samples, 0.03%)</title><rect x="467.8" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init$ (2 samples, 0.03%)</title><rect x="467.8" y="1235.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.init (2 samples, 0.03%)</title><rect x="467.8" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.8" y="1230.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (3 samples, 0.05%)</title><rect x="468.2" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="468.4" y="1251.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="468.4" y="1235.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.4" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.watch (11 samples, 0.18%)</title><rect x="469.0" y="1363.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch$ (11 samples, 0.18%)</title><rect x="469.0" y="1347.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.watch (11 samples, 0.18%)</title><rect x="469.0" y="1331.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.0" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (10 samples, 0.17%)</title><rect x="469.0" y="1315.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.0" y="1326.0"></text>
</g>
<g>
<title>scala/runtime/java8/JFunction0$mcV$sp.apply (10 samples, 0.17%)</title><rect x="469.0" y="1299.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.0" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch$$Lambda$130/1441994947.apply$mcV$sp (10 samples, 0.17%)</title><rect x="469.0" y="1283.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.$anonfun$watch$1 (10 samples, 0.17%)</title><rect x="469.0" y="1267.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (4 samples, 0.07%)</title><rect x="469.0" y="1251.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (4 samples, 0.07%)</title><rect x="469.0" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (4 samples, 0.07%)</title><rect x="469.0" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (4 samples, 0.07%)</title><rect x="469.0" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.0" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (4 samples, 0.07%)</title><rect x="469.0" y="1187.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.0" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemEnqueue (3 samples, 0.05%)</title><rect x="469.0" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue$ (2 samples, 0.03%)</title><rect x="469.2" y="1155.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemEnqueue (2 samples, 0.03%)</title><rect x="469.2" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.updateWatching (6 samples, 0.10%)</title><rect x="469.8" y="1251.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.8" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.10%)</title><rect x="469.8" y="1235.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.8" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (6 samples, 0.10%)</title><rect x="469.8" y="1219.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (4 samples, 0.07%)</title><rect x="469.8" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.8" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="470.6" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.6" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="470.6" y="1187.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.6" y="1198.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="470.6" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (2 samples, 0.03%)</title><rect x="471.2" y="1363.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (2 samples, 0.03%)</title><rect x="471.2" y="1347.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.2" y="1358.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.03%)</title><rect x="471.2" y="1331.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.2" y="1342.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.03%)</title><rect x="471.2" y="1315.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="1326.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (2 samples, 0.03%)</title><rect x="471.2" y="1299.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.2" y="1310.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (2 samples, 0.03%)</title><rect x="471.2" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="1294.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="471.2" y="1267.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="1278.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="471.2" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundReceive (205 samples, 3.43%)</title><rect x="472.1" y="1443.0" width="40.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.1" y="1454.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (205 samples, 3.43%)</title><rect x="472.1" y="1427.0" width="40.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.1" y="1438.0">akk..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (205 samples, 3.43%)</title><rect x="472.1" y="1411.0" width="40.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.1" y="1422.0">akk..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$waitingForRegistration$1.applyOrElse (4 samples, 0.07%)</title><rect x="472.3" y="1395.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.3" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.signDeathPact (2 samples, 0.03%)</title><rect x="472.7" y="1379.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.7" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpIncomingConnection$$anonfun$receive$1.applyOrElse (3 samples, 0.05%)</title><rect x="473.1" y="1395.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (3 samples, 0.05%)</title><rect x="473.1" y="1379.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="1390.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (2 samples, 0.03%)</title><rect x="473.1" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.1" y="1374.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/121983434.apply (2 samples, 0.03%)</title><rect x="473.1" y="1347.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1358.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (2 samples, 0.03%)</title><rect x="473.1" y="1331.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.1" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (2 samples, 0.03%)</title><rect x="473.1" y="1315.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.03%)</title><rect x="473.1" y="1299.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.03%)</title><rect x="473.1" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (2 samples, 0.03%)</title><rect x="473.1" y="1267.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (2 samples, 0.03%)</title><rect x="473.1" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (2 samples, 0.03%)</title><rect x="473.1" y="1235.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (2 samples, 0.03%)</title><rect x="473.1" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.1" y="1230.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (2 samples, 0.03%)</title><rect x="473.1" y="1203.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="473.1" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="473.1" y="1171.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="473.1" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="473.1" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="473.1" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="473.1" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.1" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="473.1" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="473.1" y="1075.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="473.1" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="473.1" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="473.1" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="473.1" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="473.1" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="473.1" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="473.1" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="473.1" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="473.1" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="473.1" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.1" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="473.1" y="899.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="476.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="473.1" y="883.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="473.1" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="476.1" y="878.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="473.1" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.1" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="473.1" y="835.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.1" y="846.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="473.1" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.1" y="830.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="473.1" y="803.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.1" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="473.1" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.1" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="473.1" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="476.1" y="782.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.applyOrElse (20 samples, 0.33%)</title><rect x="473.7" y="1395.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (19 samples, 0.32%)</title><rect x="473.9" y="1379.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1$$Lambda$1334/1665789949.apply$mcV$sp (19 samples, 0.32%)</title><rect x="473.9" y="1363.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$connecting$1.$anonfun$applyOrElse$3 (19 samples, 0.32%)</title><rect x="473.9" y="1347.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.completeConnect (10 samples, 0.17%)</title><rect x="473.9" y="1331.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.9" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.13%)</title><rect x="473.9" y="1315.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/121983434.apply (8 samples, 0.13%)</title><rect x="473.9" y="1299.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.13%)</title><rect x="473.9" y="1283.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.13%)</title><rect x="473.9" y="1267.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.13%)</title><rect x="473.9" y="1251.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.13%)</title><rect x="473.9" y="1235.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.9" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (7 samples, 0.12%)</title><rect x="474.1" y="1219.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (7 samples, 0.12%)</title><rect x="474.1" y="1203.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (7 samples, 0.12%)</title><rect x="474.1" y="1187.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (7 samples, 0.12%)</title><rect x="474.1" y="1171.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (7 samples, 0.12%)</title><rect x="474.1" y="1155.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.1" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.12%)</title><rect x="474.1" y="1139.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.1" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (7 samples, 0.12%)</title><rect x="474.1" y="1123.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.1" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (7 samples, 0.12%)</title><rect x="474.1" y="1107.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.1" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.12%)</title><rect x="474.1" y="1091.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.1" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.12%)</title><rect x="474.1" y="1075.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.1" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.12%)</title><rect x="474.1" y="1059.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.1" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.10%)</title><rect x="474.3" y="1043.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.3" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.08%)</title><rect x="474.5" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="474.5" y="1011.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.5" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.08%)</title><rect x="474.5" y="995.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.5" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="474.5" y="979.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.08%)</title><rect x="474.5" y="963.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.08%)</title><rect x="474.5" y="947.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.08%)</title><rect x="474.5" y="931.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.08%)</title><rect x="474.5" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.08%)</title><rect x="474.5" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="474.5" y="883.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="474.5" y="867.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.5" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="474.7" y="851.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="477.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="474.7" y="835.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="474.7" y="819.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.7" y="830.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.07%)</title><rect x="474.7" y="803.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.7" y="814.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="474.7" y="787.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.7" y="798.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="474.7" y="771.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.7" y="782.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="474.7" y="755.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.7" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="474.7" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="474.7" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (9 samples, 0.15%)</title><rect x="475.9" y="1331.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="476.1" y="1315.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="476.1" y="1299.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="476.1" y="1283.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="476.1" y="1267.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="476.1" y="1251.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="476.1" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="476.1" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.checkConnect (3 samples, 0.05%)</title><rect x="476.5" y="1315.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.5" y="1326.0"></text>
</g>
<g>
<title>getsockopt (3 samples, 0.05%)</title><rect x="476.5" y="1299.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="479.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (3 samples, 0.05%)</title><rect x="477.1" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (3 samples, 0.05%)</title><rect x="477.1" y="1299.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (3 samples, 0.05%)</title><rect x="477.1" y="1283.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.1" y="1294.0"></text>
</g>
<g>
<title>getsockname (2 samples, 0.03%)</title><rect x="477.3" y="1267.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="480.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.applyOrElse (17 samples, 0.28%)</title><rect x="477.7" y="1395.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.7" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (16 samples, 0.27%)</title><rect x="477.9" y="1379.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1$$Lambda$1284/1125697736.apply$mcV$sp (16 samples, 0.27%)</title><rect x="477.9" y="1363.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$receive$1.$anonfun$applyOrElse$1 (15 samples, 0.25%)</title><rect x="478.1" y="1347.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.1" y="1358.0"></text>
</g>
<g>
<title>akka/io/Dns$.resolve (7 samples, 0.12%)</title><rect x="478.1" y="1331.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.1" y="1342.0"></text>
</g>
<g>
<title>akka/io/Dns.resolve (6 samples, 0.10%)</title><rect x="478.3" y="1315.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (4 samples, 0.07%)</title><rect x="478.3" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.3" y="1310.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (4 samples, 0.07%)</title><rect x="478.3" y="1283.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="1294.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="478.3" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.3" y="1278.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="478.3" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="478.3" y="1235.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="478.3" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.05%)</title><rect x="478.3" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.05%)</title><rect x="478.3" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.3" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.05%)</title><rect x="478.3" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="478.3" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.3" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="478.3" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.3" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="478.3" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.3" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="478.3" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="478.3" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="478.3" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="478.3" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="478.3" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="478.3" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="478.3" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="478.3" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.3" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="478.3" y="979.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="481.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="478.3" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.3" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="478.3" y="947.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.3" y="958.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="478.3" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.3" y="942.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="478.3" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.3" y="926.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="478.3" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.3" y="910.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="478.3" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.3" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="478.3" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.3" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="478.3" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.3" y="862.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache.cached (2 samples, 0.03%)</title><rect x="479.0" y="1299.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.0" y="1310.0"></text>
</g>
<g>
<title>akka/io/SimpleDnsCache$Cache.get (2 samples, 0.03%)</title><rect x="479.0" y="1283.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.0" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (6 samples, 0.10%)</title><rect x="479.6" y="1331.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (6 samples, 0.10%)</title><rect x="479.6" y="1315.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.6" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1333/1617534416.apply$mcV$sp (6 samples, 0.10%)</title><rect x="479.6" y="1299.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.6" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (6 samples, 0.10%)</title><rect x="479.6" y="1283.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (6 samples, 0.10%)</title><rect x="479.6" y="1267.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (6 samples, 0.10%)</title><rect x="479.6" y="1251.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (6 samples, 0.10%)</title><rect x="479.6" y="1235.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (6 samples, 0.10%)</title><rect x="479.6" y="1219.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="479.6" y="1203.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="482.6" y="1214.0"></text>
</g>
<g>
<title>__connect (6 samples, 0.10%)</title><rect x="479.6" y="1187.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="482.6" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="479.6" y="1171.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="482.6" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="479.6" y="1155.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.6" y="1166.0"></text>
</g>
<g>
<title>sys_connect (6 samples, 0.10%)</title><rect x="479.6" y="1139.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.6" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (6 samples, 0.10%)</title><rect x="479.6" y="1123.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.6" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (5 samples, 0.08%)</title><rect x="479.6" y="1107.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.6" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (5 samples, 0.08%)</title><rect x="479.6" y="1091.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.6" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (5 samples, 0.08%)</title><rect x="479.6" y="1075.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.6" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (5 samples, 0.08%)</title><rect x="479.6" y="1059.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.6" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (3 samples, 0.05%)</title><rect x="480.0" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.0" y="1054.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.applyOrElse (15 samples, 0.25%)</title><rect x="481.0" y="1395.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.0" y="1406.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (15 samples, 0.25%)</title><rect x="481.0" y="1379.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.0" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1$$Lambda$1332/1909703412.apply$mcV$sp (14 samples, 0.23%)</title><rect x="481.0" y="1363.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$anonfun$resolving$1.$anonfun$applyOrElse$2 (14 samples, 0.23%)</title><rect x="481.0" y="1347.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.0" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.register (14 samples, 0.23%)</title><rect x="481.0" y="1331.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.0" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.akka$io$TcpOutgoingConnection$$reportConnectFailure (14 samples, 0.23%)</title><rect x="481.0" y="1315.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.0" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection$$Lambda$1333/1617534416.apply$mcV$sp (14 samples, 0.23%)</title><rect x="481.0" y="1299.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.0" y="1310.0"></text>
</g>
<g>
<title>akka/io/TcpOutgoingConnection.$anonfun$register$1 (14 samples, 0.23%)</title><rect x="481.0" y="1283.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.0" y="1294.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (4 samples, 0.07%)</title><rect x="481.2" y="1267.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.2" y="1278.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (4 samples, 0.07%)</title><rect x="481.2" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.2" y="1262.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (4 samples, 0.07%)</title><rect x="481.2" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.05%)</title><rect x="481.4" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.4" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.05%)</title><rect x="481.4" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="481.4" y="1187.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="484.4" y="1198.0"></text>
</g>
<g>
<title>__write (3 samples, 0.05%)</title><rect x="481.4" y="1171.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="484.4" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="481.4" y="1155.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.4" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="481.4" y="1139.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.4" y="1150.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.05%)</title><rect x="481.4" y="1123.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.4" y="1134.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.05%)</title><rect x="481.4" y="1107.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="484.4" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.05%)</title><rect x="481.4" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.4" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.05%)</title><rect x="481.4" y="1075.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.4" y="1086.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.05%)</title><rect x="481.4" y="1059.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.4" y="1070.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="481.4" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="484.4" y="1054.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="481.4" y="1027.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="484.4" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="481.4" y="1011.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (8 samples, 0.13%)</title><rect x="482.2" y="1267.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (7 samples, 0.12%)</title><rect x="482.4" y="1251.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (7 samples, 0.12%)</title><rect x="482.4" y="1235.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (7 samples, 0.12%)</title><rect x="482.4" y="1219.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.4" y="1230.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_connect0 (2 samples, 0.03%)</title><rect x="482.4" y="1203.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="485.4" y="1214.0"></text>
</g>
<g>
<title>NET_InetAddressToSockaddr (2 samples, 0.03%)</title><rect x="482.4" y="1187.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="485.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="482.8" y="1203.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="485.8" y="1214.0"></text>
</g>
<g>
<title>__connect (5 samples, 0.08%)</title><rect x="482.8" y="1187.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="485.8" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="482.8" y="1171.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.8" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="482.8" y="1155.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.8" y="1166.0"></text>
</g>
<g>
<title>sys_connect (3 samples, 0.05%)</title><rect x="483.0" y="1139.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.0" y="1150.0"></text>
</g>
<g>
<title>SYSC_connect (3 samples, 0.05%)</title><rect x="483.0" y="1123.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.0" y="1134.0"></text>
</g>
<g>
<title>inet_stream_connect (2 samples, 0.03%)</title><rect x="483.0" y="1107.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.0" y="1118.0"></text>
</g>
<g>
<title>__inet_stream_connect (2 samples, 0.03%)</title><rect x="483.0" y="1091.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.0" y="1102.0"></text>
</g>
<g>
<title>tcp_v6_connect (2 samples, 0.03%)</title><rect x="483.0" y="1075.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.0" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_connect (2 samples, 0.03%)</title><rect x="483.0" y="1059.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.0" y="1070.0"></text>
</g>
<g>
<title>tcp_connect (2 samples, 0.03%)</title><rect x="483.0" y="1043.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.0" y="1054.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (144 samples, 2.41%)</title><rect x="484.0" y="1395.0" width="28.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.0" y="1406.0">sc..</text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$connected$1.applyOrElse (81 samples, 1.35%)</title><rect x="484.0" y="1379.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.0" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doRead (60 samples, 1.00%)</title><rect x="484.0" y="1363.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.0" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleError (25 samples, 0.42%)</title><rect x="484.2" y="1347.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.2" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (2 samples, 0.03%)</title><rect x="484.2" y="1331.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.2" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (2 samples, 0.03%)</title><rect x="484.2" y="1315.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="484.2" y="1299.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="487.2" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.03%)</title><rect x="484.2" y="1283.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="487.2" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.log (5 samples, 0.08%)</title><rect x="484.8" y="1331.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="1342.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log$ (5 samples, 0.08%)</title><rect x="484.8" y="1315.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.8" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorLogging.log (4 samples, 0.07%)</title><rect x="485.0" y="1299.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.0" y="1310.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (4 samples, 0.07%)</title><rect x="485.0" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.0" y="1294.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (4 samples, 0.07%)</title><rect x="485.0" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.0" y="1278.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (4 samples, 0.07%)</title><rect x="485.0" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.0" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$3.genString (4 samples, 0.07%)</title><rect x="485.0" y="1235.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.0" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (4 samples, 0.07%)</title><rect x="485.0" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.0" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (4 samples, 0.07%)</title><rect x="485.0" y="1203.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toStringWithAddress (4 samples, 0.07%)</title><rect x="485.0" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (4 samples, 0.07%)</title><rect x="485.0" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (4 samples, 0.07%)</title><rect x="485.0" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.0" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath$$Lambda$527/1970831362.apply (2 samples, 0.03%)</title><rect x="485.2" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.$anonfun$toStringWithAddress$1 (2 samples, 0.03%)</title><rect x="485.2" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/RootActorPath.toStringWithAddress (2 samples, 0.03%)</title><rect x="485.2" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.2" y="1118.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (17 samples, 0.28%)</title><rect x="485.7" y="1331.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.cancelAndClose (12 samples, 0.20%)</title><rect x="485.7" y="1315.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$cancelKeyAndClose (12 samples, 0.20%)</title><rect x="485.7" y="1299.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.7" y="1310.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (12 samples, 0.20%)</title><rect x="485.7" y="1283.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12 samples, 0.20%)</title><rect x="485.7" y="1267.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.7" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.20%)</title><rect x="485.7" y="1251.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.20%)</title><rect x="485.7" y="1235.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="488.7" y="1246.0"></text>
</g>
<g>
<title>__write (12 samples, 0.20%)</title><rect x="485.7" y="1219.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="488.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.18%)</title><rect x="485.9" y="1203.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.9" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.18%)</title><rect x="485.9" y="1187.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.9" y="1198.0"></text>
</g>
<g>
<title>sys_write (11 samples, 0.18%)</title><rect x="485.9" y="1171.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="488.9" y="1182.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.18%)</title><rect x="485.9" y="1155.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.9" y="1166.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.18%)</title><rect x="485.9" y="1139.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.9" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.18%)</title><rect x="485.9" y="1123.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.9" y="1134.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.18%)</title><rect x="485.9" y="1107.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="488.9" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.18%)</title><rect x="485.9" y="1091.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.9" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.18%)</title><rect x="485.9" y="1075.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.18%)</title><rect x="485.9" y="1059.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.9" y="1070.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (3 samples, 0.05%)</title><rect x="488.5" y="1315.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.5" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (3 samples, 0.05%)</title><rect x="488.5" y="1299.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.5" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (3 samples, 0.05%)</title><rect x="488.5" y="1283.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.5" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (3 samples, 0.05%)</title><rect x="488.5" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.5" y="1278.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="488.5" y="1251.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.5" y="1262.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.remWatcher (2 samples, 0.03%)</title><rect x="488.5" y="1235.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.5" y="1246.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.innerRead$1 (34 samples, 0.57%)</title><rect x="489.1" y="1347.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.1" y="1358.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.13%)</title><rect x="489.5" y="1331.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.5" y="1342.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/121983434.apply (8 samples, 0.13%)</title><rect x="489.5" y="1315.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.13%)</title><rect x="489.5" y="1299.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.13%)</title><rect x="489.5" y="1283.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.13%)</title><rect x="489.5" y="1267.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.13%)</title><rect x="489.5" y="1251.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.5" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.13%)</title><rect x="489.5" y="1235.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (8 samples, 0.13%)</title><rect x="489.5" y="1219.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.5" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (8 samples, 0.13%)</title><rect x="489.5" y="1203.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.5" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (8 samples, 0.13%)</title><rect x="489.5" y="1187.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.5" y="1198.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.13%)</title><rect x="489.5" y="1171.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.5" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="489.5" y="1155.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.13%)</title><rect x="489.5" y="1139.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.13%)</title><rect x="489.5" y="1123.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="489.5" y="1107.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.13%)</title><rect x="489.5" y="1091.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.13%)</title><rect x="489.5" y="1075.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.5" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.13%)</title><rect x="489.5" y="1059.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.5" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (8 samples, 0.13%)</title><rect x="489.5" y="1043.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.5" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (8 samples, 0.13%)</title><rect x="489.5" y="1027.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.5" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (8 samples, 0.13%)</title><rect x="489.5" y="1011.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.5" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (8 samples, 0.13%)</title><rect x="489.5" y="995.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.5" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (8 samples, 0.13%)</title><rect x="489.5" y="979.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.13%)</title><rect x="489.5" y="963.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.13%)</title><rect x="489.5" y="947.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.13%)</title><rect x="489.5" y="931.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.13%)</title><rect x="489.5" y="915.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.13%)</title><rect x="489.5" y="899.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.13%)</title><rect x="489.5" y="883.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.5" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.13%)</title><rect x="489.5" y="867.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="489.9" y="851.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="489.9" y="835.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="492.9" y="846.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.10%)</title><rect x="489.9" y="819.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.9" y="830.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.10%)</title><rect x="489.9" y="803.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="489.9" y="787.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="490.1" y="771.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.1" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="490.1" y="755.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="493.1" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="490.1" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (23 samples, 0.38%)</title><rect x="491.3" y="1331.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.3" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (22 samples, 0.37%)</title><rect x="491.5" y="1315.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.5" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (22 samples, 0.37%)</title><rect x="491.5" y="1299.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (22 samples, 0.37%)</title><rect x="491.5" y="1283.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (22 samples, 0.37%)</title><rect x="491.5" y="1267.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (22 samples, 0.37%)</title><rect x="491.5" y="1251.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.17%)</title><rect x="491.5" y="1235.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="494.5" y="1246.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="491.5" y="1219.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="494.5" y="1230.0"></text>
</g>
<g>
<title>__read (5 samples, 0.08%)</title><rect x="491.9" y="1219.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="494.9" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="491.9" y="1203.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="494.9" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="491.9" y="1187.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.9" y="1198.0"></text>
</g>
<g>
<title>sys_read (5 samples, 0.08%)</title><rect x="491.9" y="1171.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.9" y="1182.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.08%)</title><rect x="491.9" y="1155.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.9" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.05%)</title><rect x="491.9" y="1139.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.9" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.05%)</title><rect x="491.9" y="1123.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.9" y="1134.0"></text>
</g>
<g>
<title>sock_read_iter (3 samples, 0.05%)</title><rect x="491.9" y="1107.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.9" y="1118.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.05%)</title><rect x="491.9" y="1091.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="494.9" y="1102.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="492.1" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.1" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="492.1" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.1" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="492.1" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.1" y="1054.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="492.4" y="1139.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.4" y="1150.0"></text>
</g>
<g>
<title>__strerror_r (2 samples, 0.03%)</title><rect x="492.8" y="1219.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="495.8" y="1230.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="492.8" y="1203.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="495.8" y="1214.0"></text>
</g>
<g>
<title>__vsnprintf_chk (3 samples, 0.05%)</title><rect x="493.4" y="1235.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="496.4" y="1246.0"></text>
</g>
<g>
<title>_IO_vfprintf (2 samples, 0.03%)</title><rect x="493.6" y="1219.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.6" y="1230.0"></text>
</g>
<g>
<title>convertReturnVal (5 samples, 0.08%)</title><rect x="494.0" y="1235.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="497.0" y="1246.0"></text>
</g>
<g>
<title>JNU_ThrowByNameWithLastError (5 samples, 0.08%)</title><rect x="494.0" y="1219.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="497.0" y="1230.0"></text>
</g>
<g>
<title>JNU_NewObjectByName (3 samples, 0.05%)</title><rect x="494.0" y="1203.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="497.0" y="1214.0"></text>
</g>
<g>
<title>jni_Throw (2 samples, 0.03%)</title><rect x="494.6" y="1203.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="497.6" y="1214.0"></text>
</g>
<g>
<title>Exceptions::_throw_oop(Thread*, char const*, int, oopDesc*) (2 samples, 0.03%)</title><rect x="494.6" y="1187.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="497.6" y="1198.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (3 samples, 0.05%)</title><rect x="495.0" y="1235.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.05%)</title><rect x="495.0" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.05%)</title><rect x="495.0" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.05%)</title><rect x="495.0" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.05%)</title><rect x="495.0" y="1171.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.0" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.05%)</title><rect x="495.0" y="1155.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="498.0" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.05%)</title><rect x="495.0" y="1139.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="498.0" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.05%)</title><rect x="495.0" y="1123.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="498.0" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="495.2" y="1107.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="498.2" y="1118.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="495.2" y="1091.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="498.2" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.handleClose (9 samples, 0.15%)</title><rect x="495.8" y="1363.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.8" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doCloseConnection (8 samples, 0.13%)</title><rect x="495.8" y="1347.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.8" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.stopWith (6 samples, 0.10%)</title><rect x="495.8" y="1331.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.8" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.prepareAbort (3 samples, 0.05%)</title><rect x="496.0" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setSoLinger (3 samples, 0.05%)</title><rect x="496.0" y="1299.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setIntOption (3 samples, 0.05%)</title><rect x="496.0" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (3 samples, 0.05%)</title><rect x="496.0" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (2 samples, 0.03%)</title><rect x="496.2" y="1251.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.2" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (2 samples, 0.03%)</title><rect x="496.2" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.2" y="1246.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (2 samples, 0.03%)</title><rect x="496.2" y="1219.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="499.2" y="1230.0"></text>
</g>
<g>
<title>setsockopt (2 samples, 0.03%)</title><rect x="496.2" y="1203.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="499.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="496.2" y="1187.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.2" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="496.2" y="1171.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.2" y="1182.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.03%)</title><rect x="496.2" y="1155.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="499.2" y="1166.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.unsignDeathPact (2 samples, 0.03%)</title><rect x="496.6" y="1315.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.6" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.unwatch (2 samples, 0.03%)</title><rect x="496.6" y="1299.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.6" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch$ (2 samples, 0.03%)</title><rect x="496.6" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.unwatch (2 samples, 0.03%)</title><rect x="496.6" y="1267.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.6" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.resumeReading (12 samples, 0.20%)</title><rect x="497.6" y="1363.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (12 samples, 0.20%)</title><rect x="497.6" y="1347.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.6" y="1358.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (12 samples, 0.20%)</title><rect x="497.6" y="1331.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.6" y="1342.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (12 samples, 0.20%)</title><rect x="497.6" y="1315.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12 samples, 0.20%)</title><rect x="497.6" y="1299.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.20%)</title><rect x="497.6" y="1283.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.20%)</title><rect x="497.6" y="1267.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="500.6" y="1278.0"></text>
</g>
<g>
<title>__write (12 samples, 0.20%)</title><rect x="497.6" y="1251.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="500.6" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.20%)</title><rect x="497.6" y="1235.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="500.6" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.20%)</title><rect x="497.6" y="1219.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.6" y="1230.0"></text>
</g>
<g>
<title>sys_write (12 samples, 0.20%)</title><rect x="497.6" y="1203.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="500.6" y="1214.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.18%)</title><rect x="497.8" y="1187.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="500.8" y="1198.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.18%)</title><rect x="497.8" y="1171.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.8" y="1182.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.18%)</title><rect x="497.8" y="1155.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.8" y="1166.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.18%)</title><rect x="497.8" y="1139.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.8" y="1150.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.15%)</title><rect x="497.8" y="1123.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.8" y="1134.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.15%)</title><rect x="497.8" y="1107.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="500.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.15%)</title><rect x="497.8" y="1091.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.8" y="1102.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$anonfun$handleWriteMessages$1.applyOrElse (63 samples, 1.05%)</title><rect x="499.9" y="1379.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.9" y="1390.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingWrite (4 samples, 0.07%)</title><rect x="499.9" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.9" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.create$1 (4 samples, 0.07%)</title><rect x="499.9" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.9" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.PendingBufferWrite (3 samples, 0.05%)</title><rect x="500.1" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.1" y="1342.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyToBuffer (2 samples, 0.03%)</title><rect x="500.3" y="1315.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.3" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.copyItToTheBuffer$1 (2 samples, 0.03%)</title><rect x="500.3" y="1299.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.3" y="1310.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (2 samples, 0.03%)</title><rect x="500.3" y="1283.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="500.3" y="1267.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.3" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.doWrite (59 samples, 0.99%)</title><rect x="500.7" y="1363.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.7" y="1374.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.doWrite (59 samples, 0.99%)</title><rect x="500.7" y="1347.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.7" y="1358.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$PendingBufferWrite.writeToChannel$1 (59 samples, 0.99%)</title><rect x="500.7" y="1331.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (16 samples, 0.27%)</title><rect x="501.1" y="1315.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.1" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/121983434.apply (16 samples, 0.27%)</title><rect x="501.1" y="1299.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.1" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (16 samples, 0.27%)</title><rect x="501.1" y="1283.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (16 samples, 0.27%)</title><rect x="501.1" y="1267.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (16 samples, 0.27%)</title><rect x="501.1" y="1251.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (16 samples, 0.27%)</title><rect x="501.1" y="1235.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (13 samples, 0.22%)</title><rect x="501.1" y="1219.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (13 samples, 0.22%)</title><rect x="501.1" y="1203.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (12 samples, 0.20%)</title><rect x="501.3" y="1187.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.3" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (12 samples, 0.20%)</title><rect x="501.3" y="1171.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.3" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.15%)</title><rect x="501.5" y="1155.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.5" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="501.7" y="1139.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.13%)</title><rect x="501.7" y="1123.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.7" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.13%)</title><rect x="501.7" y="1107.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.7" y="1118.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (7 samples, 0.12%)</title><rect x="501.7" y="1091.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.7" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (7 samples, 0.12%)</title><rect x="501.7" y="1075.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (7 samples, 0.12%)</title><rect x="501.7" y="1059.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.12%)</title><rect x="501.7" y="1043.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.10%)</title><rect x="501.9" y="1027.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.9" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="501.9" y="1011.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.9" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.10%)</title><rect x="501.9" y="995.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="501.9" y="979.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.10%)</title><rect x="501.9" y="963.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.10%)</title><rect x="501.9" y="947.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.10%)</title><rect x="501.9" y="931.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.10%)</title><rect x="501.9" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.10%)</title><rect x="501.9" y="899.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.10%)</title><rect x="501.9" y="883.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="502.1" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.1" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="502.1" y="851.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="505.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="502.1" y="835.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="502.1" y="819.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.1" y="830.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="502.1" y="803.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.1" y="814.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="502.1" y="787.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.1" y="798.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="502.1" y="771.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.1" y="782.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="502.1" y="755.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="505.1" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="502.1" y="739.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="505.1" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="502.1" y="723.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (3 samples, 0.05%)</title><rect x="503.7" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.7" y="1230.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.copyToBuffer (2 samples, 0.03%)</title><rect x="504.5" y="1315.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.5" y="1326.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.writeToBuffer (2 samples, 0.03%)</title><rect x="504.5" y="1299.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.5" y="1310.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="504.5" y="1283.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="504.5" y="1267.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory0 (2 samples, 0.03%)</title><rect x="504.5" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.5" y="1262.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="504.5" y="1235.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="507.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (38 samples, 0.63%)</title><rect x="504.9" y="1315.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (37 samples, 0.62%)</title><rect x="505.1" y="1299.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (37 samples, 0.62%)</title><rect x="505.1" y="1283.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.1" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (37 samples, 0.62%)</title><rect x="505.1" y="1267.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.1" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (37 samples, 0.62%)</title><rect x="505.1" y="1251.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.1" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (37 samples, 0.62%)</title><rect x="505.1" y="1235.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.55%)</title><rect x="505.5" y="1219.0" width="6.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="508.5" y="1230.0"></text>
</g>
<g>
<title>__write (33 samples, 0.55%)</title><rect x="505.5" y="1203.0" width="6.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="508.5" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.55%)</title><rect x="505.5" y="1187.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="508.5" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.55%)</title><rect x="505.5" y="1171.0" width="6.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.5" y="1182.0"></text>
</g>
<g>
<title>sys_write (32 samples, 0.53%)</title><rect x="505.7" y="1155.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.7" y="1166.0"></text>
</g>
<g>
<title>vfs_write (32 samples, 0.53%)</title><rect x="505.7" y="1139.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="508.7" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (32 samples, 0.53%)</title><rect x="505.7" y="1123.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="508.7" y="1134.0"></text>
</g>
<g>
<title>new_sync_write (32 samples, 0.53%)</title><rect x="505.7" y="1107.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.7" y="1118.0"></text>
</g>
<g>
<title>sock_write_iter (32 samples, 0.53%)</title><rect x="505.7" y="1091.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.7" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (32 samples, 0.53%)</title><rect x="505.7" y="1075.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="508.7" y="1086.0"></text>
</g>
<g>
<title>inet_sendmsg (31 samples, 0.52%)</title><rect x="505.7" y="1059.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.7" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (31 samples, 0.52%)</title><rect x="505.7" y="1043.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="508.7" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (30 samples, 0.50%)</title><rect x="505.9" y="1027.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.9" y="1038.0"></text>
</g>
<g>
<title>_copy_from_iter_full (17 samples, 0.28%)</title><rect x="506.1" y="1011.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="509.1" y="1022.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (17 samples, 0.28%)</title><rect x="506.1" y="995.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="509.1" y="1006.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.07%)</title><rect x="509.6" y="1011.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.6" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.07%)</title><rect x="509.6" y="995.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.6" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.03%)</title><rect x="509.8" y="979.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.8" y="990.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.08%)</title><rect x="510.6" y="1011.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="513.6" y="1022.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.08%)</title><rect x="510.6" y="995.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.6" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 0.08%)</title><rect x="510.6" y="979.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="513.6" y="990.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.07%)</title><rect x="510.6" y="963.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.6" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.07%)</title><rect x="510.6" y="947.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.6" y="958.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.07%)</title><rect x="510.6" y="931.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.6" y="942.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.07%)</title><rect x="510.6" y="915.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.6" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.07%)</title><rect x="510.6" y="899.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.6" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.05%)</title><rect x="510.8" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="513.8" y="894.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="510.8" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="513.8" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="510.8" y="851.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="513.8" y="862.0"></text>
</g>
<g>
<title>sch_direct_xmit (3 samples, 0.05%)</title><rect x="510.8" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.8" y="846.0"></text>
</g>
<g>
<title>akka/io/TcpListener.aroundReceive (23 samples, 0.38%)</title><rect x="512.6" y="1443.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (23 samples, 0.38%)</title><rect x="512.6" y="1427.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (23 samples, 0.38%)</title><rect x="512.6" y="1411.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.6" y="1422.0"></text>
</g>
<g>
<title>akka/io/TcpListener$$anonfun$bound$1.applyOrElse (23 samples, 0.38%)</title><rect x="512.6" y="1395.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.6" y="1406.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl$$anon$3$$anon$4.enableInterest (5 samples, 0.08%)</title><rect x="512.6" y="1379.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.6" y="1390.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.akka$io$SelectionHandler$ChannelRegistryImpl$$enableInterestOps (5 samples, 0.08%)</title><rect x="512.6" y="1363.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.6" y="1374.0"></text>
</g>
<g>
<title>akka/io/SelectionHandler$ChannelRegistryImpl.execute (5 samples, 0.08%)</title><rect x="512.6" y="1347.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.08%)</title><rect x="512.6" y="1331.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.08%)</title><rect x="512.6" y="1315.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="512.6" y="1299.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="515.6" y="1310.0"></text>
</g>
<g>
<title>__write (5 samples, 0.08%)</title><rect x="512.6" y="1283.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="515.6" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="512.6" y="1267.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.6" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="512.6" y="1251.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.6" y="1262.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.07%)</title><rect x="512.8" y="1235.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.8" y="1246.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.07%)</title><rect x="512.8" y="1219.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.8" y="1230.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.07%)</title><rect x="512.8" y="1203.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="515.8" y="1214.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.07%)</title><rect x="512.8" y="1187.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.8" y="1198.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.05%)</title><rect x="513.0" y="1171.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.0" y="1182.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="513.0" y="1155.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.0" y="1166.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="513.0" y="1139.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="516.0" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="513.0" y="1123.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.0" y="1134.0"></text>
</g>
<g>
<title>akka/io/TcpListener.acceptAllPending (18 samples, 0.30%)</title><rect x="513.5" y="1379.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.5" y="1390.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (3 samples, 0.05%)</title><rect x="513.5" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.5" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="513.5" y="1347.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="513.5" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.5" y="1342.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="513.5" y="1315.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.5" y="1326.0"></text>
</g>
<g>
<title>akka/routing/RoutedActorCell.sendMessage (2 samples, 0.03%)</title><rect x="513.7" y="1299.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.7" y="1310.0"></text>
</g>
<g>
<title>akka/routing/Router.route (2 samples, 0.03%)</title><rect x="513.7" y="1283.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.7" y="1294.0"></text>
</g>
<g>
<title>akka/routing/Router.send (2 samples, 0.03%)</title><rect x="513.7" y="1267.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.7" y="1278.0"></text>
</g>
<g>
<title>akka/routing/ActorRefRoutee.send (2 samples, 0.03%)</title><rect x="513.7" y="1251.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (2 samples, 0.03%)</title><rect x="513.7" y="1235.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (2 samples, 0.03%)</title><rect x="513.7" y="1219.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="513.7" y="1203.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (2 samples, 0.03%)</title><rect x="513.7" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (2 samples, 0.03%)</title><rect x="513.7" y="1171.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.7" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (2 samples, 0.03%)</title><rect x="513.7" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.7" y="1166.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (2 samples, 0.03%)</title><rect x="513.7" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.7" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (2 samples, 0.03%)</title><rect x="513.7" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (2 samples, 0.03%)</title><rect x="513.7" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (2 samples, 0.03%)</title><rect x="513.7" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="513.7" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="513.7" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="513.7" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="513.7" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="513.7" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="513.7" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="513.7" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="513.7" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="513.7" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="513.7" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.7" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="513.7" y="915.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="516.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="513.7" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="516.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="513.7" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="516.7" y="894.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="513.7" y="867.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.7" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="513.7" y="851.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="513.7" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.7" y="846.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="513.7" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.7" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="513.7" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="513.7" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (13 samples, 0.22%)</title><rect x="514.5" y="1363.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (7 samples, 0.12%)</title><rect x="514.5" y="1347.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (7 samples, 0.12%)</title><rect x="514.5" y="1331.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.5" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (3 samples, 0.05%)</title><rect x="514.5" y="1315.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="517.5" y="1326.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.03%)</title><rect x="514.7" y="1299.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="517.7" y="1310.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.207] (2 samples, 0.03%)</title><rect x="514.7" y="1283.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="517.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="515.1" y="1315.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="518.1" y="1326.0"></text>
</g>
<g>
<title>accept (2 samples, 0.03%)</title><rect x="515.5" y="1315.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="518.5" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="515.5" y="1299.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="518.5" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="515.5" y="1283.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.5" y="1294.0"></text>
</g>
<g>
<title>sys_accept (2 samples, 0.03%)</title><rect x="515.5" y="1267.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.5" y="1278.0"></text>
</g>
<g>
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="515.5" y="1251.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (5 samples, 0.08%)</title><rect x="516.1" y="1347.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.1" y="1358.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.&lt;init&gt; (2 samples, 0.03%)</title><rect x="516.1" y="1331.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.1" y="1342.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.&lt;init&gt; (2 samples, 0.03%)</title><rect x="516.1" y="1315.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (3 samples, 0.05%)</title><rect x="516.5" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (2 samples, 0.03%)</title><rect x="516.5" y="1315.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.5" y="1326.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (2 samples, 0.03%)</title><rect x="516.5" y="1299.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="519.5" y="1310.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (2 samples, 0.03%)</title><rect x="516.5" y="1283.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="519.5" y="1294.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.aroundReceive (9 samples, 0.15%)</title><rect x="517.1" y="1443.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.15%)</title><rect x="517.1" y="1427.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.1" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.15%)</title><rect x="517.1" y="1411.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="1422.0"></text>
</g>
<g>
<title>scala/PartialFunction$OrElse.applyOrElse (9 samples, 0.15%)</title><rect x="517.1" y="1395.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.1" y="1406.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher$$anonfun$receiveClusterEvent$1.applyOrElse (8 samples, 0.13%)</title><rect x="517.1" y="1379.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.1" y="1390.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.delayedQuarantine (3 samples, 0.05%)</title><rect x="517.1" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.1" y="1374.0"></text>
</g>
<g>
<title>akka/remote/RemoteWatcher.quarantine (3 samples, 0.05%)</title><rect x="517.1" y="1347.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.1" y="1358.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.quarantine (3 samples, 0.05%)</title><rect x="517.1" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.1" y="1342.0"></text>
</g>
<g>
<title>akka/remote/artery/ArteryTransport.association (2 samples, 0.03%)</title><rect x="517.3" y="1315.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.3" y="1326.0"></text>
</g>
<g>
<title>akka/remote/artery/AssociationRegistry.association (2 samples, 0.03%)</title><rect x="517.3" y="1299.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.3" y="1310.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.associate (2 samples, 0.03%)</title><rect x="517.3" y="1283.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.3" y="1294.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.runOutboundStreams (2 samples, 0.03%)</title><rect x="517.3" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.3" y="1278.0"></text>
</g>
<g>
<title>akka/remote/artery/Association.runOutboundControlStream (2 samples, 0.03%)</title><rect x="517.3" y="1251.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.3" y="1262.0"></text>
</g>
<g>
<title>akka/cluster/ClusterRemoteWatcher.memberUp (5 samples, 0.08%)</title><rect x="517.7" y="1363.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.7" y="1374.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (4 samples, 0.07%)</title><rect x="517.9" y="1347.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="1358.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (4 samples, 0.07%)</title><rect x="517.9" y="1331.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.9" y="1342.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (4 samples, 0.07%)</title><rect x="517.9" y="1315.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.9" y="1326.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (4 samples, 0.07%)</title><rect x="517.9" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.9" y="1310.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeSet.incl (4 samples, 0.07%)</title><rect x="517.9" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.9" y="1294.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (4 samples, 0.07%)</title><rect x="517.9" y="1267.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.9" y="1278.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="517.9" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.9" y="1262.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="517.9" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="518.1" y="1219.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.1" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="518.1" y="1203.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.1" y="1214.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="518.1" y="1187.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.1" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="518.1" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundReceive (841 samples, 14.05%)</title><rect x="518.9" y="1443.0" width="165.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.9" y="1454.0">akka/stream/impl/fusi..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (841 samples, 14.05%)</title><rect x="518.9" y="1427.0" width="165.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.9" y="1438.0">akka/actor/Actor.arou..</text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (841 samples, 14.05%)</title><rect x="518.9" y="1411.0" width="165.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.9" y="1422.0">akka/actor/Actor.arou..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$$anonfun$receive$1.applyOrElse (840 samples, 14.04%)</title><rect x="518.9" y="1395.0" width="165.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.9" y="1406.0">akka/stream/impl/fusi..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (725 samples, 12.11%)</title><rect x="519.3" y="1379.0" width="142.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.3" y="1390.0">akka/stream/impl/f..</text>
</g>
<g>
<title>akka/actor/ActorCell.stop (2 samples, 0.03%)</title><rect x="519.7" y="1363.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop$ (2 samples, 0.03%)</title><rect x="519.7" y="1347.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.stop (2 samples, 0.03%)</title><rect x="519.7" y="1331.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.7" y="1342.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.stop (2 samples, 0.03%)</title><rect x="519.7" y="1315.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.7" y="1326.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.stop (2 samples, 0.03%)</title><rect x="519.7" y="1299.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.7" y="1310.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop$ (2 samples, 0.03%)</title><rect x="519.7" y="1283.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.stop (2 samples, 0.03%)</title><rect x="519.7" y="1267.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (720 samples, 12.03%)</title><rect x="520.2" y="1363.0" width="142.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.2" y="1374.0">akka/stream/impl/f..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (720 samples, 12.03%)</title><rect x="520.2" y="1347.0" width="142.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.2" y="1358.0">akka/stream/impl/f..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (62 samples, 1.04%)</title><rect x="520.2" y="1331.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.2" y="1342.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic$$Lambda$1241/1082554215.apply (6 samples, 0.10%)</title><rect x="520.8" y="1315.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.8" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1$adapted (6 samples, 0.10%)</title><rect x="520.8" y="1299.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.8" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.$anonfun$requestCallback$1 (6 samples, 0.10%)</title><rect x="520.8" y="1283.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.8" y="1294.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host$.apply (2 samples, 0.03%)</title><rect x="521.6" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.6" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$Host$.apply (2 samples, 0.03%)</title><rect x="521.6" y="1251.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHost (2 samples, 0.03%)</title><rect x="521.6" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.6" y="1246.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="521.6" y="1219.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="1230.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="521.6" y="1203.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.6" y="1214.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="521.6" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser$$Lambda$1227/1770612564.apply (2 samples, 0.03%)</title><rect x="521.6" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.6" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.$anonfun$parseHost$1 (2 samples, 0.03%)</title><rect x="521.6" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.relaxedHost (2 samples, 0.03%)</title><rect x="521.6" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ipv6Host (2 samples, 0.03%)</title><rect x="521.6" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.ip$minusv6$minusaddress (2 samples, 0.03%)</title><rect x="521.6" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress$ (2 samples, 0.03%)</title><rect x="521.6" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/IpAddressParsing.ip$minusv6$minusaddress (2 samples, 0.03%)</title><rect x="521.6" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1237/194872807.apply (7 samples, 0.12%)</title><rect x="522.0" y="1315.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.0" y="1326.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1$adapted (7 samples, 0.12%)</title><rect x="522.0" y="1299.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.0" y="1310.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safeCallback$1 (7 samples, 0.12%)</title><rect x="522.0" y="1283.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1336/43073958.apply$mcV$sp (7 samples, 0.12%)</title><rect x="522.0" y="1267.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$safely$2 (7 samples, 0.12%)</title><rect x="522.0" y="1251.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1275/878459681.apply (7 samples, 0.12%)</title><rect x="522.0" y="1235.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1$adapted (7 samples, 0.12%)</title><rect x="522.0" y="1219.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$1 (7 samples, 0.12%)</title><rect x="522.0" y="1203.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (7 samples, 0.12%)</title><rect x="522.0" y="1187.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$$Lambda$1339/1536991005.apply (7 samples, 0.12%)</title><rect x="522.0" y="1171.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2$adapted (7 samples, 0.12%)</title><rect x="522.0" y="1155.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.$anonfun$openConnection$2 (7 samples, 0.12%)</title><rect x="522.0" y="1139.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionAttemptSucceeded (7 samples, 0.12%)</title><rect x="522.0" y="1123.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (6 samples, 0.10%)</title><rect x="522.2" y="1107.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.2" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (6 samples, 0.10%)</title><rect x="522.2" y="1091.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.2" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (6 samples, 0.10%)</title><rect x="522.2" y="1075.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="522.6" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="525.6" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (7 samples, 0.12%)</title><rect x="523.4" y="1315.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (7 samples, 0.12%)</title><rect x="523.4" y="1299.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (6 samples, 0.10%)</title><rect x="523.6" y="1283.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (6 samples, 0.10%)</title><rect x="523.6" y="1267.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (6 samples, 0.10%)</title><rect x="523.6" y="1251.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (6 samples, 0.10%)</title><rect x="523.6" y="1235.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (6 samples, 0.10%)</title><rect x="523.6" y="1219.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (6 samples, 0.10%)</title><rect x="523.6" y="1203.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (2 samples, 0.03%)</title><rect x="523.8" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (2 samples, 0.03%)</title><rect x="523.8" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.8" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (2 samples, 0.03%)</title><rect x="523.8" y="1155.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1031/1038639159.apply (2 samples, 0.03%)</title><rect x="523.8" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1$adapted (2 samples, 0.03%)</title><rect x="523.8" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$1 (2 samples, 0.03%)</title><rect x="523.8" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.8" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatchWatched$1 (2 samples, 0.03%)</title><rect x="523.8" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.8" y="1102.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="523.8" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.8" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="523.8" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.8" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="523.8" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.8" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="523.8" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.8" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="523.8" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.8" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractMap.$minus (3 samples, 0.05%)</title><rect x="524.2" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.2" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus$ (3 samples, 0.05%)</title><rect x="524.2" y="1171.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.2" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapOps.$minus (3 samples, 0.05%)</title><rect x="524.2" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (3 samples, 0.05%)</title><rect x="524.2" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.2" y="1150.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.removed (3 samples, 0.05%)</title><rect x="524.2" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.2" y="1134.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.2" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.2" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.2" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="979.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.2" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.2" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.2" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.2" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.2" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashCollisionMapNode.removed (3 samples, 0.05%)</title><rect x="524.2" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.2" y="910.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$544/1078450135.apply (23 samples, 0.38%)</title><rect x="525.0" y="1315.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.0" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1$adapted (23 samples, 0.38%)</title><rect x="525.0" y="1299.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.0" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$callback$1 (23 samples, 0.38%)</title><rect x="525.0" y="1283.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.0" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.internalReceive (23 samples, 0.38%)</title><rect x="525.0" y="1267.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$Lambda$542/1879900439.apply (2 samples, 0.03%)</title><rect x="525.0" y="1251.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1$adapted (2 samples, 0.03%)</title><rect x="525.0" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.$anonfun$preStart$1 (2 samples, 0.03%)</title><rect x="525.0" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.0" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.receive (2 samples, 0.03%)</title><rect x="525.0" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.0" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1.connectionFor (2 samples, 0.03%)</title><rect x="525.0" y="1187.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$Lambda$1278/1369617580.apply (20 samples, 0.33%)</title><rect x="525.4" y="1251.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.4" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3$adapted (20 samples, 0.33%)</title><rect x="525.4" y="1235.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.4" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.$anonfun$preStart$3 (20 samples, 0.33%)</title><rect x="525.4" y="1219.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.4" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.connecting (20 samples, 0.33%)</title><rect x="525.4" y="1203.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.4" y="1214.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.05%)</title><rect x="525.4" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.4" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="525.4" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.4" y="1182.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="525.4" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.4" y="1166.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="525.4" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.4" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="525.4" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.4" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.05%)</title><rect x="525.4" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.4" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.05%)</title><rect x="525.4" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.4" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.05%)</title><rect x="525.4" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.4" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.05%)</title><rect x="525.4" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.4" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="525.4" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.4" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="525.4" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.4" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="525.4" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.4" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.05%)</title><rect x="525.4" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.05%)</title><rect x="525.4" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.05%)</title><rect x="525.4" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.05%)</title><rect x="525.4" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.05%)</title><rect x="525.4" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="525.4" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="525.4" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.4" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="525.4" y="883.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="528.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="525.4" y="867.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="525.4" y="851.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.4" y="862.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="525.4" y="835.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.4" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="525.4" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="528.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="525.4" y="803.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="525.4" y="787.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.4" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="525.4" y="771.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="528.4" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="525.4" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="528.4" y="766.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.unwatch (4 samples, 0.07%)</title><rect x="526.0" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.unwatch (4 samples, 0.07%)</title><rect x="526.0" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="1182.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (3 samples, 0.05%)</title><rect x="526.2" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.2" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (3 samples, 0.05%)</title><rect x="526.2" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (3 samples, 0.05%)</title><rect x="526.2" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (3 samples, 0.05%)</title><rect x="526.2" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (3 samples, 0.05%)</title><rect x="526.2" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.05%)</title><rect x="526.2" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="526.2" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.2" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="526.2" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.2" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="526.2" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.2" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.05%)</title><rect x="526.2" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.05%)</title><rect x="526.2" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.05%)</title><rect x="526.2" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.05%)</title><rect x="526.2" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.05%)</title><rect x="526.2" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="526.2" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="526.2" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.2" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="526.4" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="529.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="526.4" y="883.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="526.4" y="867.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.4" y="878.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="526.4" y="851.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="529.4" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="526.4" y="835.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="529.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="526.4" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="529.4" y="830.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="526.4" y="803.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.4" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="526.4" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.4" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="526.4" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="529.4" y="782.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (6 samples, 0.10%)</title><rect x="526.8" y="1187.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (6 samples, 0.10%)</title><rect x="526.8" y="1171.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.8" y="1182.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (6 samples, 0.10%)</title><rect x="526.8" y="1155.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.8" y="1166.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (6 samples, 0.10%)</title><rect x="526.8" y="1139.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.8" y="1150.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (6 samples, 0.10%)</title><rect x="526.8" y="1123.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.8" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (6 samples, 0.10%)</title><rect x="526.8" y="1107.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (6 samples, 0.10%)</title><rect x="526.8" y="1091.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.10%)</title><rect x="526.8" y="1075.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.8" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="526.8" y="1059.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.8" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.10%)</title><rect x="526.8" y="1043.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.8" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="526.8" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.8" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.10%)</title><rect x="526.8" y="1011.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.10%)</title><rect x="526.8" y="995.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.10%)</title><rect x="526.8" y="979.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.10%)</title><rect x="526.8" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.10%)</title><rect x="526.8" y="947.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.10%)</title><rect x="526.8" y="931.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.10%)</title><rect x="526.8" y="915.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.8" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="527.0" y="899.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="530.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="527.0" y="883.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="530.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="527.0" y="867.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="530.0" y="878.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="527.0" y="851.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.0" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="527.0" y="835.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.0" y="846.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="527.0" y="819.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="530.0" y="830.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="527.0" y="803.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="530.0" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="527.0" y="787.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.0" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="527.0" y="771.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="530.0" y="782.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (7 samples, 0.12%)</title><rect x="527.9" y="1187.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.9" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (7 samples, 0.12%)</title><rect x="527.9" y="1171.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.9" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (7 samples, 0.12%)</title><rect x="527.9" y="1155.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.9" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (7 samples, 0.12%)</title><rect x="527.9" y="1139.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.9" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (7 samples, 0.12%)</title><rect x="527.9" y="1123.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.9" y="1134.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (7 samples, 0.12%)</title><rect x="527.9" y="1107.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.9" y="1118.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (7 samples, 0.12%)</title><rect x="527.9" y="1091.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.9" y="1102.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (6 samples, 0.10%)</title><rect x="528.1" y="1075.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.1" y="1086.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (6 samples, 0.10%)</title><rect x="528.1" y="1059.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.1" y="1070.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (6 samples, 0.10%)</title><rect x="528.1" y="1043.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.1" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (6 samples, 0.10%)</title><rect x="528.1" y="1027.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.1" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (6 samples, 0.10%)</title><rect x="528.1" y="1011.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.1" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (6 samples, 0.10%)</title><rect x="528.1" y="995.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.1" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (4 samples, 0.07%)</title><rect x="528.3" y="979.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.3" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (4 samples, 0.07%)</title><rect x="528.3" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.3" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (4 samples, 0.07%)</title><rect x="528.3" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.3" y="958.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (4 samples, 0.07%)</title><rect x="528.3" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.3" y="942.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="528.3" y="915.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="531.3" y="926.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (2 samples, 0.03%)</title><rect x="528.7" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="926.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (2 samples, 0.03%)</title><rect x="528.7" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.7" y="910.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (2 samples, 0.03%)</title><rect x="528.7" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.7" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (2 samples, 0.03%)</title><rect x="528.7" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (2 samples, 0.03%)</title><rect x="528.7" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.7" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (2 samples, 0.03%)</title><rect x="528.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (2 samples, 0.03%)</title><rect x="528.7" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.7" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (2 samples, 0.03%)</title><rect x="528.7" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.7" y="814.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="528.7" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.7" y="798.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (2 samples, 0.03%)</title><rect x="528.7" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="782.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (2 samples, 0.03%)</title><rect x="528.7" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.7" y="766.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (2 samples, 0.03%)</title><rect x="528.7" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="528.7" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="528.7" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="528.7" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="528.7" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="528.7" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.7" y="670.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic$$Lambda$683/730763550.apply (10 samples, 0.17%)</title><rect x="529.5" y="1315.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1$adapted (10 samples, 0.17%)</title><rect x="529.5" y="1299.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.$anonfun$getTimerAsyncCallback$1 (10 samples, 0.17%)</title><rect x="529.5" y="1283.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.5" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.onInternalTimer (10 samples, 0.17%)</title><rect x="529.5" y="1267.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.onTimer (5 samples, 0.08%)</title><rect x="529.5" y="1251.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeoutException.&lt;init&gt; (4 samples, 0.07%)</title><rect x="529.7" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.07%)</title><rect x="529.7" y="1219.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.07%)</title><rect x="529.7" y="1203.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.07%)</title><rect x="529.7" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.07%)</title><rect x="529.7" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.7" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.07%)</title><rect x="529.7" y="1155.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="532.7" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.07%)</title><rect x="529.7" y="1139.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="532.7" y="1150.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.05%)</title><rect x="529.9" y="1123.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="532.9" y="1134.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.05%)</title><rect x="529.9" y="1107.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="532.9" y="1118.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.get (5 samples, 0.08%)</title><rect x="530.5" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.5" y="1262.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap$Node.findNode (4 samples, 0.07%)</title><rect x="530.5" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.5" y="1246.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals (3 samples, 0.05%)</title><rect x="530.7" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.7" y="1230.0"></text>
</g>
<g>
<title>scala/runtime/BoxesRunTime.equals2 (3 samples, 0.05%)</title><rect x="530.7" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.7" y="1214.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="531.5" y="1315.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="534.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (658 samples, 10.99%)</title><rect x="532.5" y="1331.0" width="129.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.5" y="1342.0">akka/stream/impl..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (655 samples, 10.94%)</title><rect x="532.7" y="1315.0" width="129.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.7" y="1326.0">akka/stream/impl..</text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.afterStageHasRun (14 samples, 0.23%)</title><rect x="533.7" y="1299.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.finalizeStage (13 samples, 0.22%)</title><rect x="533.7" y="1283.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.afterPostStop (5 samples, 0.08%)</title><rect x="534.1" y="1267.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.stop (3 samples, 0.05%)</title><rect x="534.2" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.removeFunctionRef (3 samples, 0.05%)</title><rect x="534.2" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef$ (3 samples, 0.05%)</title><rect x="534.2" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.removeFunctionRef (3 samples, 0.05%)</title><rect x="534.2" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$2 (3 samples, 0.05%)</title><rect x="534.2" y="1187.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.stop (2 samples, 0.03%)</title><rect x="534.2" y="1171.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (2 samples, 0.03%)</title><rect x="534.2" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.2" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.foreach (2 samples, 0.03%)</title><rect x="534.2" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.2" y="1150.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef$$Lambda$1406/1318503919.apply (2 samples, 0.03%)</title><rect x="534.2" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$3$adapted (2 samples, 0.03%)</title><rect x="534.2" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$anonfun$sendTerminated$3 (2 samples, 0.03%)</title><rect x="534.2" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.2" y="1102.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.sendTerminated (2 samples, 0.03%)</title><rect x="534.2" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.2" y="1086.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (2 samples, 0.03%)</title><rect x="534.2" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.2" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (2 samples, 0.03%)</title><rect x="534.2" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.2" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (2 samples, 0.03%)</title><rect x="534.2" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.2" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (2 samples, 0.03%)</title><rect x="534.2" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.2" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (2 samples, 0.03%)</title><rect x="534.2" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.2" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.afterPostStop (4 samples, 0.07%)</title><rect x="535.0" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.0" y="1278.0"></text>
</g>
<g>
<title>scala/collection/mutable/HashMap.clear (3 samples, 0.05%)</title><rect x="535.2" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.2" y="1262.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (3 samples, 0.05%)</title><rect x="535.2" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.2" y="1246.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="535.8" y="1267.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="538.8" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.dequeue (3 samples, 0.05%)</title><rect x="536.4" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.4" y="1310.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="536.4" y="1283.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="539.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (190 samples, 3.17%)</title><rect x="537.0" y="1299.0" width="37.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.0" y="1310.0">akk..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onUpstreamFailure (2 samples, 0.03%)</title><rect x="537.6" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (2 samples, 0.03%)</title><rect x="537.6" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (2 samples, 0.03%)</title><rect x="537.6" y="1251.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (2 samples, 0.03%)</title><rect x="537.6" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage$$anon$11.onUpstreamFailure (2 samples, 0.03%)</title><rect x="538.2" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.2" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (3 samples, 0.05%)</title><rect x="538.6" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.05%)</title><rect x="538.6" y="1267.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.6" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.05%)</title><rect x="538.6" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.6" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Collect$$anon$6.onDownstreamFinish (3 samples, 0.05%)</title><rect x="538.6" y="1235.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.6" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.05%)</title><rect x="538.6" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.6" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.05%)</title><rect x="538.6" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.05%)</title><rect x="538.6" y="1187.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCancelStage (2 samples, 0.03%)</title><rect x="538.8" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.8" y="1182.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="538.8" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.8" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancel (2 samples, 0.03%)</title><rect x="538.8" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.8" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (7 samples, 0.12%)</title><rect x="539.4" y="1283.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (76 samples, 1.27%)</title><rect x="540.8" y="1283.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (66 samples, 1.10%)</title><rect x="541.5" y="1267.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.5" y="1278.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$524/638204510.apply (65 samples, 1.09%)</title><rect x="541.5" y="1251.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.5" y="1262.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$1 (65 samples, 1.09%)</title><rect x="541.5" y="1235.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.5" y="1246.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (61 samples, 1.02%)</title><rect x="542.1" y="1219.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (61 samples, 1.02%)</title><rect x="542.1" y="1203.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (61 samples, 1.02%)</title><rect x="542.1" y="1187.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (61 samples, 1.02%)</title><rect x="542.1" y="1171.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (5 samples, 0.08%)</title><rect x="542.5" y="1155.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (4 samples, 0.07%)</title><rect x="542.7" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.7" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (3 samples, 0.05%)</title><rect x="542.9" y="1123.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.9" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/StreamUtils$DelayCancellationStage.createLogic (2 samples, 0.03%)</title><rect x="543.1" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (45 samples, 0.75%)</title><rect x="543.5" y="1155.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="544.1" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.1" y="1150.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="544.1" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.1" y="1134.0"></text>
</g>
<g>
<title>akka/stream/Attributes.find$1 (2 samples, 0.03%)</title><rect x="544.1" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.1" y="1118.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (33 samples, 0.55%)</title><rect x="544.5" y="1139.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.5" y="1150.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (33 samples, 0.55%)</title><rect x="544.5" y="1123.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.5" y="1134.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (33 samples, 0.55%)</title><rect x="544.5" y="1107.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.5" y="1118.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (33 samples, 0.55%)</title><rect x="544.5" y="1091.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.5" y="1102.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (32 samples, 0.53%)</title><rect x="544.7" y="1075.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.7" y="1086.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.03%)</title><rect x="544.9" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.9" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.03%)</title><rect x="544.9" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.9" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (2 samples, 0.03%)</title><rect x="544.9" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.9" y="1038.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (4 samples, 0.07%)</title><rect x="545.3" y="1059.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (4 samples, 0.07%)</title><rect x="545.3" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (4 samples, 0.07%)</title><rect x="545.3" y="1027.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (4 samples, 0.07%)</title><rect x="545.3" y="1011.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.3" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (3 samples, 0.05%)</title><rect x="545.5" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.5" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (3 samples, 0.05%)</title><rect x="545.5" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.5" y="990.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.5" y="974.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.5" y="958.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.5" y="942.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="915.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.5" y="926.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.5" y="910.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="545.5" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.5" y="894.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (22 samples, 0.37%)</title><rect x="546.3" y="1059.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/Deployer.lookup (2 samples, 0.03%)</title><rect x="546.3" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.3" y="1054.0"></text>
</g>
<g>
<title>akka/util/WildcardIndex.find (2 samples, 0.03%)</title><rect x="546.3" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (19 samples, 0.32%)</title><rect x="546.7" y="1043.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.7" y="1054.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (15 samples, 0.25%)</title><rect x="546.7" y="1027.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.7" y="1038.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (15 samples, 0.25%)</title><rect x="546.7" y="1011.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.7" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (15 samples, 0.25%)</title><rect x="546.7" y="995.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.7" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (15 samples, 0.25%)</title><rect x="546.7" y="979.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.7" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (15 samples, 0.25%)</title><rect x="546.7" y="963.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.7" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (15 samples, 0.25%)</title><rect x="546.7" y="947.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.7" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (14 samples, 0.23%)</title><rect x="546.9" y="931.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.9" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (14 samples, 0.23%)</title><rect x="546.9" y="915.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.9" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (14 samples, 0.23%)</title><rect x="546.9" y="899.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.9" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (14 samples, 0.23%)</title><rect x="546.9" y="883.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (14 samples, 0.23%)</title><rect x="546.9" y="867.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (14 samples, 0.23%)</title><rect x="546.9" y="851.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (14 samples, 0.23%)</title><rect x="546.9" y="835.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (14 samples, 0.23%)</title><rect x="546.9" y="819.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.23%)</title><rect x="546.9" y="803.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.23%)</title><rect x="546.9" y="787.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.22%)</title><rect x="547.1" y="771.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.20%)</title><rect x="547.3" y="755.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="550.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="547.7" y="739.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="550.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="547.7" y="723.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.7" y="734.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.17%)</title><rect x="547.7" y="707.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.7" y="718.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.17%)</title><rect x="547.7" y="691.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.17%)</title><rect x="547.7" y="675.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.12%)</title><rect x="548.2" y="659.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="551.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.12%)</title><rect x="548.2" y="643.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="551.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="548.2" y="627.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="551.2" y="638.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (3 samples, 0.05%)</title><rect x="549.6" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.6" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (7 samples, 0.12%)</title><rect x="551.0" y="1139.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.0" y="1150.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (4 samples, 0.07%)</title><rect x="551.2" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.2" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (4 samples, 0.07%)</title><rect x="551.2" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.2" y="1118.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (4 samples, 0.07%)</title><rect x="551.2" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.2" y="1102.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (4 samples, 0.07%)</title><rect x="551.2" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.2" y="1086.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (4 samples, 0.07%)</title><rect x="551.2" y="1059.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.2" y="1070.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (4 samples, 0.07%)</title><rect x="551.2" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.2" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (4 samples, 0.07%)</title><rect x="551.2" y="1027.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.2" y="1038.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (2 samples, 0.03%)</title><rect x="551.4" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.4" y="1022.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (2 samples, 0.03%)</title><rect x="551.4" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.4" y="1006.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (2 samples, 0.03%)</title><rect x="552.0" y="1123.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.0" y="1134.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (2 samples, 0.03%)</title><rect x="552.0" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.0" y="1118.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.03%)</title><rect x="552.0" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.0" y="1102.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (2 samples, 0.03%)</title><rect x="552.0" y="1075.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.0" y="1086.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (2 samples, 0.03%)</title><rect x="552.0" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.0" y="1070.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (2 samples, 0.03%)</title><rect x="552.0" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.0" y="1054.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="552.0" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.0" y="1038.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (2 samples, 0.03%)</title><rect x="552.0" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (2 samples, 0.03%)</title><rect x="552.4" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.4" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (3 samples, 0.05%)</title><rect x="553.4" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt$$Lambda$910/456501389.apply (3 samples, 0.05%)</title><rect x="553.4" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/HttpExt.$anonfun$bindAndHandle$4 (3 samples, 0.05%)</title><rect x="553.4" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/MasterServerTerminator.registerConnection (2 samples, 0.03%)</title><rect x="553.6" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.6" y="1118.0"></text>
</g>
<g>
<title>scala/collection/immutable/AbstractSet.$plus (2 samples, 0.03%)</title><rect x="553.6" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.6" y="1102.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus$ (2 samples, 0.03%)</title><rect x="553.6" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.6" y="1086.0"></text>
</g>
<g>
<title>scala/collection/immutable/SetOps.$plus (2 samples, 0.03%)</title><rect x="553.6" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.6" y="1070.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="553.6" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.6" y="1054.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashSet.incl (2 samples, 0.03%)</title><rect x="553.6" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.6" y="1038.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="553.6" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.6" y="1022.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="553.6" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.6" y="1006.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedSetNode.updated (2 samples, 0.03%)</title><rect x="553.6" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.6" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (6 samples, 0.10%)</title><rect x="554.6" y="1267.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (6 samples, 0.10%)</title><rect x="554.6" y="1251.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="554.6" y="1235.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.10%)</title><rect x="554.6" y="1219.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.10%)</title><rect x="554.6" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="554.6" y="1187.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.10%)</title><rect x="554.6" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.6" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.10%)</title><rect x="554.6" y="1155.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.10%)</title><rect x="554.6" y="1139.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.10%)</title><rect x="554.6" y="1123.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="554.6" y="1107.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.10%)</title><rect x="554.6" y="1091.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="554.6" y="1075.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.6" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.10%)</title><rect x="554.6" y="1059.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.10%)</title><rect x="554.6" y="1043.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.10%)</title><rect x="554.6" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.10%)</title><rect x="554.6" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.10%)</title><rect x="554.6" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.10%)</title><rect x="554.6" y="979.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.10%)</title><rect x="554.6" y="963.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.6" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="554.6" y="947.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="554.6" y="931.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="554.6" y="915.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.6" y="926.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.10%)</title><rect x="554.6" y="899.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="557.6" y="910.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.10%)</title><rect x="554.6" y="883.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="554.6" y="867.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="554.9" y="851.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.9" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="554.9" y="835.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="554.9" y="819.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="557.9" y="830.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.05%)</title><rect x="556.1" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.05%)</title><rect x="556.1" y="1267.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.1" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.05%)</title><rect x="556.1" y="1251.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onDownstreamFinish (3 samples, 0.05%)</title><rect x="556.1" y="1235.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (3 samples, 0.05%)</title><rect x="556.1" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.05%)</title><rect x="556.1" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.1" y="1214.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.cancelStage (3 samples, 0.05%)</title><rect x="556.1" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.1" y="1198.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="556.1" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.1" y="1182.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$Identity$$anon$1.onUpstreamFailure (2 samples, 0.03%)</title><rect x="556.7" y="1283.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.7" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure$ (2 samples, 0.03%)</title><rect x="556.7" y="1267.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/InHandler.onUpstreamFailure (2 samples, 0.03%)</title><rect x="556.7" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.7" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.failStage (2 samples, 0.03%)</title><rect x="556.7" y="1235.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.7" y="1246.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.internalCompleteStage (2 samples, 0.03%)</title><rect x="556.7" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.7" y="1230.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onDownstreamFinish (2 samples, 0.03%)</title><rect x="557.1" y="1283.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFailure (5 samples, 0.08%)</title><rect x="557.5" y="1283.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.5" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.failure (4 samples, 0.07%)</title><rect x="557.7" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure$ (4 samples, 0.07%)</title><rect x="557.7" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.failure (4 samples, 0.07%)</title><rect x="557.7" y="1235.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (4 samples, 0.07%)</title><rect x="557.7" y="1219.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (4 samples, 0.07%)</title><rect x="557.7" y="1203.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (4 samples, 0.07%)</title><rect x="557.7" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (4 samples, 0.07%)</title><rect x="557.7" y="1171.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (4 samples, 0.07%)</title><rect x="557.7" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (4 samples, 0.07%)</title><rect x="557.7" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (4 samples, 0.07%)</title><rect x="557.7" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (4 samples, 0.07%)</title><rect x="557.7" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (4 samples, 0.07%)</title><rect x="557.7" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (4 samples, 0.07%)</title><rect x="557.7" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (4 samples, 0.07%)</title><rect x="557.7" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (4 samples, 0.07%)</title><rect x="557.7" y="1043.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="557.7" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (4 samples, 0.07%)</title><rect x="557.7" y="1011.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (4 samples, 0.07%)</title><rect x="557.7" y="995.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.7" y="1006.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (4 samples, 0.07%)</title><rect x="557.7" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.07%)</title><rect x="557.7" y="963.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.07%)</title><rect x="557.7" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.07%)</title><rect x="557.7" y="931.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.07%)</title><rect x="557.7" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.07%)</title><rect x="557.7" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.07%)</title><rect x="557.7" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="557.7" y="867.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="560.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="557.7" y="851.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="560.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="557.7" y="835.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="560.7" y="846.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.07%)</title><rect x="557.7" y="819.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="560.7" y="830.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="557.7" y="803.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.7" y="814.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="557.7" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="557.7" y="771.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.7" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="557.7" y="755.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.7" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="557.7" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="560.7" y="750.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphStages$TerminationWatcher$$anon$3.onUpstreamFinish (12 samples, 0.20%)</title><rect x="558.5" y="1283.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.5" y="1294.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.success (11 samples, 0.18%)</title><rect x="558.7" y="1267.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.7" y="1278.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success$ (11 samples, 0.18%)</title><rect x="558.7" y="1251.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.7" y="1262.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.success (11 samples, 0.18%)</title><rect x="558.7" y="1235.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (11 samples, 0.18%)</title><rect x="558.7" y="1219.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (11 samples, 0.18%)</title><rect x="558.7" y="1203.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (11 samples, 0.18%)</title><rect x="558.7" y="1187.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (11 samples, 0.18%)</title><rect x="558.7" y="1171.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (11 samples, 0.18%)</title><rect x="558.7" y="1155.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (11 samples, 0.18%)</title><rect x="558.7" y="1139.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.7" y="1150.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (11 samples, 0.18%)</title><rect x="558.7" y="1123.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.execute (11 samples, 0.18%)</title><rect x="558.7" y="1107.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (11 samples, 0.18%)</title><rect x="558.7" y="1091.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (11 samples, 0.18%)</title><rect x="558.7" y="1075.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutionContexts$sameThreadExecutionContext$.unbatchedExecute (10 samples, 0.17%)</title><rect x="558.7" y="1059.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$Batch.run (10 samples, 0.17%)</title><rect x="558.7" y="1043.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor$AbstractBatch.processBatch (10 samples, 0.17%)</title><rect x="558.7" y="1027.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.7" y="1038.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.run (9 samples, 0.15%)</title><rect x="558.9" y="1011.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.9" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31$$Lambda$530/1564629011.apply (9 samples, 0.15%)</title><rect x="558.9" y="995.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1$adapted (9 samples, 0.15%)</title><rect x="558.9" y="979.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.9" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.$anonfun$invokeFutureCB$1 (9 samples, 0.15%)</title><rect x="558.9" y="963.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.9" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (9 samples, 0.15%)</title><rect x="558.9" y="947.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.9" y="958.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (9 samples, 0.15%)</title><rect x="558.9" y="931.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.9" y="942.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.13%)</title><rect x="559.1" y="915.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.1" y="926.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (8 samples, 0.13%)</title><rect x="559.1" y="899.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.1" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (8 samples, 0.13%)</title><rect x="559.1" y="883.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.1" y="894.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (8 samples, 0.13%)</title><rect x="559.1" y="867.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.1" y="878.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.13%)</title><rect x="559.1" y="851.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.1" y="862.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="559.1" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.1" y="846.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.13%)</title><rect x="559.1" y="819.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.1" y="830.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.13%)</title><rect x="559.1" y="803.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.1" y="814.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="559.1" y="787.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.1" y="798.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.13%)</title><rect x="559.1" y="771.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.1" y="782.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.13%)</title><rect x="559.1" y="755.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.1" y="766.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (7 samples, 0.12%)</title><rect x="559.3" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.3" y="750.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.12%)</title><rect x="559.3" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.3" y="734.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="559.3" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.3" y="718.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.12%)</title><rect x="559.3" y="691.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.3" y="702.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="559.3" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.3" y="686.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.12%)</title><rect x="559.3" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.12%)</title><rect x="559.3" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.12%)</title><rect x="559.3" y="627.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.12%)</title><rect x="559.3" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.12%)</title><rect x="559.3" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.12%)</title><rect x="559.3" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.12%)</title><rect x="559.3" y="563.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.3" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.12%)</title><rect x="559.3" y="547.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="562.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="559.5" y="531.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="559.5" y="515.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.5" y="526.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="559.5" y="499.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.5" y="510.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="559.7" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="562.7" y="494.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="559.7" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.7" y="478.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="559.7" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.7" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="559.7" y="435.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="559.7" y="419.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="562.7" y="430.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onDownstreamFinish (2 samples, 0.03%)</title><rect x="560.9" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.03%)</title><rect x="560.9" y="1267.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.9" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.03%)</title><rect x="560.9" y="1251.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onDownstreamFinish (2 samples, 0.03%)</title><rect x="561.3" y="1283.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish$ (2 samples, 0.03%)</title><rect x="561.3" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (2 samples, 0.03%)</title><rect x="561.3" y="1251.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapError$$anon$8.onUpstreamFailure (3 samples, 0.05%)</title><rect x="561.8" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onDownstreamFinish (14 samples, 0.23%)</title><rect x="562.8" y="1283.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.8" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (10 samples, 0.17%)</title><rect x="563.0" y="1267.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.17%)</title><rect x="563.0" y="1251.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (10 samples, 0.17%)</title><rect x="563.0" y="1235.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (10 samples, 0.17%)</title><rect x="563.0" y="1219.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (10 samples, 0.17%)</title><rect x="563.0" y="1203.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (10 samples, 0.17%)</title><rect x="563.0" y="1187.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (10 samples, 0.17%)</title><rect x="563.0" y="1171.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.0" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (10 samples, 0.17%)</title><rect x="563.0" y="1155.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.0" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (10 samples, 0.17%)</title><rect x="563.0" y="1139.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.0" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (10 samples, 0.17%)</title><rect x="563.0" y="1123.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.0" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (10 samples, 0.17%)</title><rect x="563.0" y="1107.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.0" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (10 samples, 0.17%)</title><rect x="563.0" y="1091.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.0" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (10 samples, 0.17%)</title><rect x="563.0" y="1075.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.17%)</title><rect x="563.0" y="1059.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.17%)</title><rect x="563.0" y="1043.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.17%)</title><rect x="563.0" y="1027.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.17%)</title><rect x="563.0" y="1011.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.17%)</title><rect x="563.0" y="995.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.15%)</title><rect x="563.2" y="979.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.2" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.13%)</title><rect x="563.4" y="963.0" width="1.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="566.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="563.4" y="947.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="563.4" y="931.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.4" y="942.0"></text>
</g>
<g>
<title>sys_futex (8 samples, 0.13%)</title><rect x="563.4" y="915.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="566.4" y="926.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.13%)</title><rect x="563.4" y="899.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.13%)</title><rect x="563.4" y="883.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.12%)</title><rect x="563.6" y="867.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.6" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.12%)</title><rect x="563.6" y="851.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.6" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="563.6" y="835.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="566.6" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.log (3 samples, 0.05%)</title><rect x="565.0" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.0" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log$ (3 samples, 0.05%)</title><rect x="565.0" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="1262.0"></text>
</g>
<g>
<title>akka/stream/stage/StageLogging.log (3 samples, 0.05%)</title><rect x="565.0" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.0" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.makeLogger (2 samples, 0.03%)</title><rect x="565.0" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.0" y="1230.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (2 samples, 0.03%)</title><rect x="565.0" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="1214.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (2 samples, 0.03%)</title><rect x="565.0" y="1187.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.0" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onUpstreamFailure (37 samples, 0.62%)</title><rect x="565.6" y="1283.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.6" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (3 samples, 0.05%)</title><rect x="565.6" y="1267.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="565.6" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.6" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (3 samples, 0.05%)</title><rect x="565.6" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.6" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (3 samples, 0.05%)</title><rect x="565.6" y="1219.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.6" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (3 samples, 0.05%)</title><rect x="565.6" y="1203.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.6" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (3 samples, 0.05%)</title><rect x="565.6" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.6" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (3 samples, 0.05%)</title><rect x="565.6" y="1171.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (3 samples, 0.05%)</title><rect x="565.6" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.6" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (3 samples, 0.05%)</title><rect x="565.6" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.6" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="565.6" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.6" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (3 samples, 0.05%)</title><rect x="565.6" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.6" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (3 samples, 0.05%)</title><rect x="565.6" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.6" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (3 samples, 0.05%)</title><rect x="565.6" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.05%)</title><rect x="565.6" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.05%)</title><rect x="565.6" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.05%)</title><rect x="565.6" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.05%)</title><rect x="565.6" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="565.6" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="565.6" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="565.6" y="963.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="568.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="565.6" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="568.6" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="565.6" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="568.6" y="942.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="565.8" y="915.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="568.8" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="565.8" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="568.8" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="565.8" y="883.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="568.8" y="894.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="565.8" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="565.8" y="851.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="565.8" y="835.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="568.8" y="846.0"></text>
</g>
<g>
<title>akka/event/BusLogging.debug (30 samples, 0.50%)</title><rect x="566.2" y="1267.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.2" y="1278.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug$ (30 samples, 0.50%)</title><rect x="566.2" y="1251.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.2" y="1262.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.debug (30 samples, 0.50%)</title><rect x="566.2" y="1235.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.2" y="1246.0"></text>
</g>
<g>
<title>akka/event/BusLogging.format (8 samples, 0.13%)</title><rect x="566.2" y="1219.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.2" y="1230.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format$ (8 samples, 0.13%)</title><rect x="566.2" y="1203.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.2" y="1214.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.format (8 samples, 0.13%)</title><rect x="566.2" y="1187.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.2" y="1198.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.formatImpl (8 samples, 0.13%)</title><rect x="566.2" y="1171.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.08%)</title><rect x="566.6" y="1155.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (5 samples, 0.08%)</title><rect x="566.6" y="1139.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.6" y="1150.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (4 samples, 0.07%)</title><rect x="566.8" y="1123.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.8" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (4 samples, 0.07%)</title><rect x="566.8" y="1107.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="566.8" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="566.8" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.8" y="1086.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (5 samples, 0.08%)</title><rect x="567.8" y="1219.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isDebugEnabled (5 samples, 0.08%)</title><rect x="567.8" y="1203.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.8" y="1214.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (4 samples, 0.07%)</title><rect x="567.8" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.8" y="1198.0"></text>
</g>
<g>
<title>akka/event/slf4j/Logger$.apply (3 samples, 0.05%)</title><rect x="567.8" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.8" y="1182.0"></text>
</g>
<g>
<title>org/slf4j/LoggerFactory.getLogger (3 samples, 0.05%)</title><rect x="567.8" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.8" y="1166.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="567.8" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="570.8" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="567.8" y="1123.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="570.8" y="1134.0"></text>
</g>
<g>
<title>akka/event/BusLogging.notifyDebug (16 samples, 0.27%)</title><rect x="568.8" y="1219.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.8" y="1230.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (15 samples, 0.25%)</title><rect x="568.8" y="1203.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.8" y="1214.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish$ (14 samples, 0.23%)</title><rect x="568.9" y="1187.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.9" y="1198.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.publish (14 samples, 0.23%)</title><rect x="568.9" y="1171.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.9" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (12 samples, 0.20%)</title><rect x="569.3" y="1155.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.3" y="1166.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification$$Lambda$81/432430300.apply (11 samples, 0.18%)</title><rect x="569.3" y="1139.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.3" y="1150.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1$adapted (11 samples, 0.18%)</title><rect x="569.3" y="1123.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.3" y="1134.0"></text>
</g>
<g>
<title>akka/event/SubchannelClassification.$anonfun$publish$1 (11 samples, 0.18%)</title><rect x="569.3" y="1107.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.3" y="1118.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (11 samples, 0.18%)</title><rect x="569.3" y="1091.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.3" y="1102.0"></text>
</g>
<g>
<title>akka/event/EventStream.publish (11 samples, 0.18%)</title><rect x="569.3" y="1075.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.3" y="1086.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (9 samples, 0.15%)</title><rect x="569.3" y="1059.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.3" y="1070.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.15%)</title><rect x="569.3" y="1043.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.3" y="1054.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.15%)</title><rect x="569.3" y="1027.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.3" y="1038.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.15%)</title><rect x="569.3" y="1011.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.3" y="1022.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.15%)</title><rect x="569.3" y="995.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.3" y="1006.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.15%)</title><rect x="569.3" y="979.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.3" y="990.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.15%)</title><rect x="569.3" y="963.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.3" y="974.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.15%)</title><rect x="569.3" y="947.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.3" y="958.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.15%)</title><rect x="569.3" y="931.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.3" y="942.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="569.3" y="915.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.3" y="926.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.15%)</title><rect x="569.3" y="899.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.3" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="569.3" y="883.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.3" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.15%)</title><rect x="569.3" y="867.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.15%)</title><rect x="569.3" y="851.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.15%)</title><rect x="569.3" y="835.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (9 samples, 0.15%)</title><rect x="569.3" y="819.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.15%)</title><rect x="569.3" y="803.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.15%)</title><rect x="569.3" y="787.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.15%)</title><rect x="569.3" y="771.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="569.3" y="755.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="572.3" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="569.9" y="755.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="572.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="570.1" y="739.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="573.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="570.1" y="723.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.1" y="734.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="570.1" y="707.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="573.1" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="570.1" y="691.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="570.1" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="570.1" y="659.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="570.1" y="643.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="570.1" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="573.1" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="571.1" y="1059.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="574.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (2 samples, 0.03%)</title><rect x="572.5" y="1267.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/OutHandler.onDownstreamFinish (3 samples, 0.05%)</title><rect x="573.3" y="1283.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.3" y="1294.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="573.9" y="1283.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="576.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPull (30 samples, 0.50%)</title><rect x="574.5" y="1299.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.5" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource$$anon$13.onPull (2 samples, 0.03%)</title><rect x="575.3" y="1283.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (2 samples, 0.03%)</title><rect x="575.3" y="1267.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (2 samples, 0.03%)</title><rect x="575.3" y="1251.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.3" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/io/ConnectionSourceStage$$anon$1$$anon$3.onPull (7 samples, 0.12%)</title><rect x="575.7" y="1283.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (6 samples, 0.10%)</title><rect x="575.8" y="1267.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.8" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="575.8" y="1251.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.8" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.10%)</title><rect x="575.8" y="1235.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.8" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.10%)</title><rect x="575.8" y="1219.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.8" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="575.8" y="1203.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.10%)</title><rect x="575.8" y="1187.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.10%)</title><rect x="575.8" y="1171.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.8" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.10%)</title><rect x="575.8" y="1155.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.8" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (5 samples, 0.08%)</title><rect x="575.8" y="1139.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.8" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="575.8" y="1123.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.8" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.08%)</title><rect x="575.8" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.8" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="575.8" y="1091.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.8" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.08%)</title><rect x="575.8" y="1075.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.08%)</title><rect x="575.8" y="1059.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.08%)</title><rect x="575.8" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.08%)</title><rect x="575.8" y="1027.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.08%)</title><rect x="575.8" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="575.8" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="575.8" y="979.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="575.8" y="963.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="578.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="575.8" y="947.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="575.8" y="931.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.8" y="942.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="575.8" y="915.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="578.8" y="926.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="575.8" y="899.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.8" y="910.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="576.0" y="883.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.0" y="894.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="576.0" y="867.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.0" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="576.0" y="851.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="579.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="576.0" y="835.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.0" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$5.onPull (17 samples, 0.28%)</title><rect x="577.0" y="1283.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.0" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (17 samples, 0.28%)</title><rect x="577.0" y="1267.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.0" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.28%)</title><rect x="577.0" y="1251.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.0" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (17 samples, 0.28%)</title><rect x="577.0" y="1235.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.0" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (17 samples, 0.28%)</title><rect x="577.0" y="1219.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.0" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (17 samples, 0.28%)</title><rect x="577.0" y="1203.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.0" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (17 samples, 0.28%)</title><rect x="577.0" y="1187.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.0" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (16 samples, 0.27%)</title><rect x="577.2" y="1171.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.2" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (16 samples, 0.27%)</title><rect x="577.2" y="1155.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (16 samples, 0.27%)</title><rect x="577.2" y="1139.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="577.2" y="1123.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (16 samples, 0.27%)</title><rect x="577.2" y="1107.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (16 samples, 0.27%)</title><rect x="577.2" y="1091.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (16 samples, 0.27%)</title><rect x="577.2" y="1075.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.27%)</title><rect x="577.2" y="1059.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.27%)</title><rect x="577.2" y="1043.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (16 samples, 0.27%)</title><rect x="577.2" y="1027.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.27%)</title><rect x="577.2" y="1011.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.27%)</title><rect x="577.2" y="995.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.25%)</title><rect x="577.4" y="979.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.07%)</title><rect x="577.4" y="963.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="580.4" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="577.8" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="580.8" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.18%)</title><rect x="578.2" y="963.0" width="2.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="581.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.15%)</title><rect x="578.6" y="947.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.6" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.15%)</title><rect x="578.6" y="931.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="581.6" y="942.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.15%)</title><rect x="578.6" y="915.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.6" y="926.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.15%)</title><rect x="578.6" y="899.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="581.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.15%)</title><rect x="578.6" y="883.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.6" y="894.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.15%)</title><rect x="578.6" y="867.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.6" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.15%)</title><rect x="578.6" y="851.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.6" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.15%)</title><rect x="578.6" y="835.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.6" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (407 samples, 6.80%)</title><rect x="580.4" y="1299.0" width="80.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.4" y="1310.0">akka/stre..</text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$8.onPush (20 samples, 0.33%)</title><rect x="580.4" y="1283.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.4" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.akka$http$impl$engine$client$OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$$drainParser (3 samples, 0.05%)</title><rect x="580.4" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.e$1 (2 samples, 0.03%)</title><rect x="580.6" y="1251.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseSessionBytes (17 samples, 0.28%)</title><rect x="581.0" y="1267.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (17 samples, 0.28%)</title><rect x="581.0" y="1251.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (17 samples, 0.28%)</title><rect x="581.0" y="1235.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (17 samples, 0.28%)</title><rect x="581.0" y="1219.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (17 samples, 0.28%)</title><rect x="581.0" y="1203.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (17 samples, 0.28%)</title><rect x="581.0" y="1187.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (17 samples, 0.28%)</title><rect x="581.0" y="1171.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1344/1695273253.apply (17 samples, 0.28%)</title><rect x="581.0" y="1155.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$2 (17 samples, 0.28%)</title><rect x="581.0" y="1139.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$1343/1745046363.apply (17 samples, 0.28%)</title><rect x="581.0" y="1123.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1$adapted (17 samples, 0.28%)</title><rect x="581.0" y="1107.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$startNewMessage$1 (17 samples, 0.28%)</title><rect x="581.0" y="1091.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (17 samples, 0.28%)</title><rect x="581.0" y="1075.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (17 samples, 0.28%)</title><rect x="581.0" y="1059.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (17 samples, 0.28%)</title><rect x="581.0" y="1043.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseMessage (17 samples, 0.28%)</title><rect x="581.0" y="1027.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseHeaderLines (17 samples, 0.28%)</title><rect x="581.0" y="1011.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (17 samples, 0.28%)</title><rect x="581.0" y="995.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (17 samples, 0.28%)</title><rect x="581.0" y="979.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (14 samples, 0.23%)</title><rect x="581.0" y="963.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.0" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (13 samples, 0.22%)</title><rect x="581.2" y="947.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.2" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (10 samples, 0.17%)</title><rect x="581.2" y="931.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.2" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (9 samples, 0.15%)</title><rect x="581.2" y="915.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.2" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (9 samples, 0.15%)</title><rect x="581.2" y="899.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.2" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (4 samples, 0.07%)</title><rect x="581.2" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.2" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.07%)</title><rect x="581.2" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.2" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.07%)</title><rect x="581.2" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.2" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.07%)</title><rect x="581.2" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.2" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1045/1040666406.apply (4 samples, 0.07%)</title><rect x="581.2" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.2" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (4 samples, 0.07%)</title><rect x="581.2" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.2" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (4 samples, 0.07%)</title><rect x="581.2" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.2" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (4 samples, 0.07%)</title><rect x="581.2" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.2" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (4 samples, 0.07%)</title><rect x="581.2" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.2" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (3 samples, 0.05%)</title><rect x="581.2" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (2 samples, 0.03%)</title><rect x="581.2" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.2" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (2 samples, 0.03%)</title><rect x="581.2" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.2" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (2 samples, 0.03%)</title><rect x="581.2" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.2" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.apply (5 samples, 0.08%)</title><rect x="582.0" y="883.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.0" y="894.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (5 samples, 0.08%)</title><rect x="582.0" y="867.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.0" y="878.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (5 samples, 0.08%)</title><rect x="582.0" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.0" y="862.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (5 samples, 0.08%)</title><rect x="582.0" y="835.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.0" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27$$Lambda$1359/1360664390.apply (5 samples, 0.08%)</title><rect x="582.0" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.0" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$27.$anonfun$apply$27 (5 samples, 0.08%)</title><rect x="582.0" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.0" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.date (5 samples, 0.08%)</title><rect x="582.0" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.0" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date$ (5 samples, 0.08%)</title><rect x="582.0" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.0" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.date (5 samples, 0.08%)</title><rect x="582.0" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.0" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.HTTP$minusdate (4 samples, 0.07%)</title><rect x="582.2" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.2" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate$ (4 samples, 0.07%)</title><rect x="582.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.2" y="734.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.HTTP$minusdate (4 samples, 0.07%)</title><rect x="582.2" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.2" y="718.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.IMF$minusfixdate (4 samples, 0.07%)</title><rect x="582.2" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.2" y="702.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate$ (4 samples, 0.07%)</title><rect x="582.2" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.2" y="686.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.IMF$minusfixdate (4 samples, 0.07%)</title><rect x="582.2" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.2" y="670.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.day$minusname$minusl (2 samples, 0.03%)</title><rect x="582.4" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.4" y="654.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl$ (2 samples, 0.03%)</title><rect x="582.4" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.4" y="638.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.day$minusname$minusl (2 samples, 0.03%)</title><rect x="582.4" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.4" y="622.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.akka$http$impl$engine$parsing$HttpHeaderParser$$insertRemainingCharsAsNewNodes (2 samples, 0.03%)</title><rect x="583.1" y="931.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.1" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.newNodeIndex (2 samples, 0.03%)</title><rect x="583.1" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.1" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="583.1" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.1" y="910.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseEntity (3 samples, 0.05%)</title><rect x="583.7" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.7" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.onPush (96 samples, 1.60%)</title><rect x="584.3" y="1283.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$pullIfNeeded (3 samples, 0.05%)</title><rect x="584.3" y="1267.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.hasIdleSlots (3 samples, 0.05%)</title><rect x="584.3" y="1251.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.3" y="1262.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.exists (3 samples, 0.05%)</title><rect x="584.3" y="1235.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.3" y="1246.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (3 samples, 0.05%)</title><rect x="584.3" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.dispatchRequest (92 samples, 1.54%)</title><rect x="584.9" y="1267.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.9" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onNewRequest (90 samples, 1.50%)</title><rect x="585.1" y="1251.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (88 samples, 1.47%)</title><rect x="585.1" y="1235.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (88 samples, 1.47%)</title><rect x="585.1" y="1219.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (88 samples, 1.47%)</title><rect x="585.1" y="1203.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1255/274747943.apply (83 samples, 1.39%)</title><rect x="585.5" y="1187.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onNewRequest$1 (83 samples, 1.39%)</title><rect x="585.5" y="1171.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.5" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$Unconnected$.onNewRequest (83 samples, 1.39%)</title><rect x="585.5" y="1155.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.5" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest$ (83 samples, 1.39%)</title><rect x="585.5" y="1139.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$UnconnectedState.onNewRequest (83 samples, 1.39%)</title><rect x="585.5" y="1123.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.5" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.openConnection (83 samples, 1.39%)</title><rect x="585.5" y="1107.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.5" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$openConnection (83 samples, 1.39%)</title><rect x="585.5" y="1091.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.5" y="1102.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (61 samples, 1.02%)</title><rect x="586.1" y="1075.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.1" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (61 samples, 1.02%)</title><rect x="586.1" y="1059.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.1" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl.materialize (61 samples, 1.02%)</title><rect x="586.1" y="1043.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.1" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (61 samples, 1.02%)</title><rect x="586.1" y="1027.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.1" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (29 samples, 0.48%)</title><rect x="587.3" y="1011.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/io/OutgoingConnectionStage.createLogicAndMaterializedValue (6 samples, 0.10%)</title><rect x="587.7" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.7" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.&lt;init&gt; (3 samples, 0.05%)</title><rect x="588.1" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.1" y="990.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (19 samples, 0.32%)</title><rect x="588.9" y="995.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.9" y="1006.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (19 samples, 0.32%)</title><rect x="588.9" y="979.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.9" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge.createLogic (3 samples, 0.05%)</title><rect x="589.3" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.3" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.&lt;init&gt; (3 samples, 0.05%)</title><rect x="589.3" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="589.5" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="589.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.5" y="926.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$.createLogic (2 samples, 0.03%)</title><rect x="589.8" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$TerminationMerge$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="589.8" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.8" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi.createLogic (2 samples, 0.03%)</title><rect x="590.2" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.2" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge.createLogic (2 samples, 0.03%)</title><rect x="590.6" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.6" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.6" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSource.createLogic (2 samples, 0.03%)</title><rect x="591.6" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.6" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast.createLogic (3 samples, 0.05%)</title><rect x="592.0" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Broadcast$$anon$11.&lt;init&gt; (3 samples, 0.05%)</title><rect x="592.0" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.0" y="958.0"></text>
</g>
<g>
<title>scala/Array$.fill (2 samples, 0.03%)</title><rect x="592.2" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.2" y="942.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="592.6" y="995.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="595.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (2 samples, 0.03%)</title><rect x="593.0" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (3 samples, 0.05%)</title><rect x="593.4" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.4" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/SubFusingActorMaterializerImpl$$anon$1.apply (2 samples, 0.03%)</title><rect x="593.6" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.6" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (6 samples, 0.10%)</title><rect x="594.0" y="1011.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.0" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (5 samples, 0.08%)</title><rect x="594.0" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.0" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.concat (5 samples, 0.08%)</title><rect x="594.0" y="979.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.0" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat$ (5 samples, 0.08%)</title><rect x="594.0" y="963.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.0" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/Traversal.concat (5 samples, 0.08%)</title><rect x="594.0" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.0" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat$.normalizeConcat (5 samples, 0.08%)</title><rect x="594.0" y="931.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.0" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/Concat.&lt;init&gt; (5 samples, 0.08%)</title><rect x="594.0" y="915.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.0" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.isEmpty (2 samples, 0.03%)</title><rect x="594.6" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="910.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireInlets (7 samples, 0.12%)</title><rect x="595.2" y="1011.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.2" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.wireIn (4 samples, 0.07%)</title><rect x="595.4" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.4" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (4 samples, 0.07%)</title><rect x="595.4" y="979.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.4" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.assignPort (4 samples, 0.07%)</title><rect x="595.4" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.4" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.conn (3 samples, 0.05%)</title><rect x="595.6" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.6" y="958.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.connections_$eq (2 samples, 0.03%)</title><rect x="595.8" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.8" y="942.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (4 samples, 0.07%)</title><rect x="596.5" y="1011.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (4 samples, 0.07%)</title><rect x="597.3" y="1011.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.to (10 samples, 0.17%)</title><rect x="598.3" y="1075.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (10 samples, 0.17%)</title><rect x="598.3" y="1059.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.3" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (6 samples, 0.10%)</title><rect x="598.3" y="1043.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.3" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (6 samples, 0.10%)</title><rect x="598.3" y="1027.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.3" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.10%)</title><rect x="598.3" y="1011.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.3" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (6 samples, 0.10%)</title><rect x="598.3" y="995.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.3" y="1006.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.assign (4 samples, 0.07%)</title><rect x="598.5" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.5" y="990.0"></text>
</g>
<g>
<title>akka/stream/impl/AtomicTraversalBuilder.assign (2 samples, 0.03%)</title><rect x="598.5" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.5" y="974.0"></text>
</g>
<g>
<title>akka/stream/impl/CompositeTraversalBuilder.completeIfPossible (2 samples, 0.03%)</title><rect x="598.9" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.9" y="974.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.07%)</title><rect x="599.5" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.5" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (2 samples, 0.03%)</title><rect x="599.5" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.5" y="1038.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (2 samples, 0.03%)</title><rect x="599.5" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.5" y="1022.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink.initialAttributes (2 samples, 0.03%)</title><rect x="599.9" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/Attributes$.name (2 samples, 0.03%)</title><rect x="599.9" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.9" y="1022.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (2 samples, 0.03%)</title><rect x="599.9" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.9" y="1006.0"></text>
</g>
<g>
<title>java/net/URLEncoder.encode (2 samples, 0.03%)</title><rect x="599.9" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.9" y="990.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.viaMat (3 samples, 0.05%)</title><rect x="600.3" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="601.1" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="601.9" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.9" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$Event (2 samples, 0.03%)</title><rect x="602.5" y="1235.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.5" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.Event$lzycompute$1 (2 samples, 0.03%)</title><rect x="602.5" y="1219.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.5" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.&lt;init&gt; (2 samples, 0.03%)</title><rect x="602.5" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.5" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.event0 (2 samples, 0.03%)</title><rect x="602.5" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.5" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.onPush (24 samples, 0.40%)</title><rect x="603.3" y="1283.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.3" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseSessionBytes (24 samples, 0.40%)</title><rect x="603.3" y="1267.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.3" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes$ (24 samples, 0.40%)</title><rect x="603.3" y="1251.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseSessionBytes (24 samples, 0.40%)</title><rect x="603.3" y="1235.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseBytes (24 samples, 0.40%)</title><rect x="603.3" y="1219.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (24 samples, 0.40%)</title><rect x="603.3" y="1203.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (24 samples, 0.40%)</title><rect x="603.3" y="1187.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (24 samples, 0.40%)</title><rect x="603.3" y="1171.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$916/1297835521.apply (22 samples, 0.37%)</title><rect x="603.3" y="1155.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (22 samples, 0.37%)</title><rect x="603.3" y="1139.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (22 samples, 0.37%)</title><rect x="603.3" y="1123.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (22 samples, 0.37%)</title><rect x="603.3" y="1107.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (22 samples, 0.37%)</title><rect x="603.3" y="1091.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (22 samples, 0.37%)</title><rect x="603.3" y="1075.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseHeaderLines (22 samples, 0.37%)</title><rect x="603.3" y="1059.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines$ (22 samples, 0.37%)</title><rect x="603.3" y="1043.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseHeaderLines (22 samples, 0.37%)</title><rect x="603.3" y="1027.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderLine (14 samples, 0.23%)</title><rect x="603.6" y="1011.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseHeaderValue (3 samples, 0.05%)</title><rect x="603.6" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.parseAndInsertHeader$1 (3 samples, 0.05%)</title><rect x="603.6" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.apply (2 samples, 0.03%)</title><rect x="603.8" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.8" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/SpecializedHeaderValueParsers$ContentLengthParser$.recurse$1 (2 samples, 0.03%)</title><rect x="603.8" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.8" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser.startValueBranch$1 (11 samples, 0.18%)</title><rect x="604.2" y="995.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.2" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpHeaderParser$ModeledHeaderValueParser.apply (10 samples, 0.17%)</title><rect x="604.2" y="979.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.2" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$$Lambda$444/1931008760.apply (8 samples, 0.13%)</title><rect x="604.4" y="963.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.4" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$.$anonfun$lookupParser$2 (8 samples, 0.13%)</title><rect x="604.4" y="947.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.apply (4 samples, 0.07%)</title><rect x="604.4" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.4" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (4 samples, 0.07%)</title><rect x="604.4" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (4 samples, 0.07%)</title><rect x="604.4" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.4" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (4 samples, 0.07%)</title><rect x="604.4" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25$$Lambda$1045/1040666406.apply (4 samples, 0.07%)</title><rect x="604.4" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.4" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$25.$anonfun$apply$25 (4 samples, 0.07%)</title><rect x="604.4" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.4" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.content$minustype (4 samples, 0.07%)</title><rect x="604.4" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.4" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype$ (4 samples, 0.07%)</title><rect x="604.4" y="819.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.4" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.content$minustype (4 samples, 0.07%)</title><rect x="604.4" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.4" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/ContentTypeHeader.contentType (2 samples, 0.03%)</title><rect x="604.4" y="787.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.4" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.getMediaType (2 samples, 0.03%)</title><rect x="604.4" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.4" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType$ (2 samples, 0.03%)</title><rect x="604.4" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.4" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonActions.getMediaType (2 samples, 0.03%)</title><rect x="604.4" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="750.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$31.apply (2 samples, 0.03%)</title><rect x="605.2" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.2" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="605.2" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.2" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="605.2" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.2" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="605.2" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.2" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.apply (2 samples, 0.03%)</title><rect x="605.6" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.6" y="942.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="605.6" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.6" y="926.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="605.6" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.6" y="910.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="605.6" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.6" y="894.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56$$Lambda$931/884410657.apply (2 samples, 0.03%)</title><rect x="605.6" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.6" y="878.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser$$anon$56.$anonfun$apply$56 (2 samples, 0.03%)</title><rect x="605.6" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.6" y="862.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.user$minusagent (2 samples, 0.03%)</title><rect x="605.6" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.6" y="846.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent$ (2 samples, 0.03%)</title><rect x="605.6" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="830.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/SimpleHeaders.user$minusagent (2 samples, 0.03%)</title><rect x="605.6" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.6" y="814.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/HeaderParser.products (2 samples, 0.03%)</title><rect x="605.6" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.6" y="798.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products$ (2 samples, 0.03%)</title><rect x="605.6" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="782.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/CommonRules.products (2 samples, 0.03%)</title><rect x="605.6" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="766.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseEntity (5 samples, 0.08%)</title><rect x="606.4" y="1011.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.strictEntity (4 samples, 0.07%)</title><rect x="606.6" y="995.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity$ (4 samples, 0.07%)</title><rect x="606.6" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.6" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.strictEntity (4 samples, 0.07%)</title><rect x="606.6" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.6" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$933/1580282982.apply (2 samples, 0.03%)</title><rect x="607.6" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$continue$3 (2 samples, 0.03%)</title><rect x="607.6" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.6" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1$$Lambda$932/1717312051.apply (2 samples, 0.03%)</title><rect x="607.6" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.6" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1$adapted (2 samples, 0.03%)</title><rect x="607.6" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.6" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.$anonfun$parseMessage$1 (2 samples, 0.03%)</title><rect x="607.6" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.6" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.startNewMessage (2 samples, 0.03%)</title><rect x="607.6" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.6" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (2 samples, 0.03%)</title><rect x="607.6" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.6" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (2 samples, 0.03%)</title><rect x="607.6" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.6" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseMessage (2 samples, 0.03%)</title><rect x="607.6" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.6" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpRequestParser$$anon$1.parseRequestTarget (2 samples, 0.03%)</title><rect x="607.6" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.6" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/Uri$.parseHttpRequestTarget (2 samples, 0.03%)</title><rect x="607.6" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.6" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/model/parser/UriParser.parseHttpRequestTarget (2 samples, 0.03%)</title><rect x="607.6" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.6" y="990.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.__run (2 samples, 0.03%)</title><rect x="607.6" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.6" y="974.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.phase0_initialRun$1 (2 samples, 0.03%)</title><rect x="607.6" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.6" y="958.0"></text>
</g>
<g>
<title>akka/parboiled2/Parser.runRule$1 (2 samples, 0.03%)</title><rect x="607.6" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.6" y="942.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1$$anon$2.onPush (16 samples, 0.27%)</title><rect x="608.0" y="1283.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.0" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.akka$http$impl$engine$rendering$HttpResponseRendererFactory$HttpResponseRenderer$$anon$$render (16 samples, 0.27%)</title><rect x="608.0" y="1267.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.0" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.completeResponseRendering$1 (16 samples, 0.27%)</title><rect x="608.0" y="1251.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.0" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderContentLengthHeader$1 (3 samples, 0.05%)</title><rect x="608.0" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.0" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="608.2" y="1219.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.2" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="608.2" y="1203.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.2" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="608.2" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.2" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory$HttpResponseRenderer$$anon$1.renderHeaders$1 (4 samples, 0.07%)</title><rect x="608.6" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpResponseRendererFactory.akka$http$impl$engine$rendering$HttpResponseRendererFactory$$dateHeader (3 samples, 0.05%)</title><rect x="608.8" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.8" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/RenderSupport$.renderEntityContentType (2 samples, 0.03%)</title><rect x="609.4" y="1235.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.4" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteArrayRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="609.4" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="609.4" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="609.4" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="609.4" y="1171.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="609.4" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType$Binary.render (2 samples, 0.03%)</title><rect x="609.4" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/ContentType.render$ (2 samples, 0.03%)</title><rect x="609.4" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.4" y="1134.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteString1.$plus$plus (7 samples, 0.12%)</title><rect x="609.8" y="1235.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.8" y="1246.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings$.apply (6 samples, 0.10%)</title><rect x="609.8" y="1219.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.8" y="1230.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.apply (2 samples, 0.03%)</title><rect x="610.5" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.5" y="1214.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply$ (2 samples, 0.03%)</title><rect x="610.5" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.5" y="1198.0"></text>
</g>
<g>
<title>scala/collection/IterableFactory.apply (2 samples, 0.03%)</title><rect x="610.5" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.5" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.03%)</title><rect x="610.5" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.5" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/Vector$.from (2 samples, 0.03%)</title><rect x="610.5" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.5" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$ControllerStage$$anon$9$$anon$12.onPush (3 samples, 0.05%)</title><rect x="611.1" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.1" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/server/HttpServerBluePrint$PrepareRequests$$anon$1.onPush (2 samples, 0.03%)</title><rect x="611.7" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.7" y="1294.0"></text>
</g>
<g>
<title>akka/remote/artery/Encoder$$anon$1.onPush (4 samples, 0.07%)</title><rect x="612.9" y="1283.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.9" y="1294.0"></text>
</g>
<g>
<title>akka/remote/MessageSerializer$.serializeForArtery (3 samples, 0.05%)</title><rect x="612.9" y="1267.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.9" y="1278.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.toBinary (3 samples, 0.05%)</title><rect x="612.9" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.9" y="1262.0"></text>
</g>
<g>
<title>akka/remote/serialization/ArteryMessageSerializer.serializeHandshakeReq (2 samples, 0.03%)</title><rect x="613.1" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.1" y="1246.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/MapAsyncUnordered$$anon$31.onPush (224 samples, 3.74%)</title><rect x="614.1" y="1283.0" width="44.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.1" y="1294.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$$$Lambda$435/1997753864.apply (224 samples, 3.74%)</title><rect x="614.1" y="1267.0" width="44.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.1" y="1278.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Route$.$anonfun$asyncHandler$1 (224 samples, 3.74%)</title><rect x="614.1" y="1251.0" width="44.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.1" y="1262.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (223 samples, 3.73%)</title><rect x="614.1" y="1235.0" width="44.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.1" y="1246.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (223 samples, 3.73%)</title><rect x="614.1" y="1219.0" width="44.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.1" y="1230.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives$$Lambda$945/2111682007.apply (222 samples, 3.71%)</title><rect x="614.1" y="1203.0" width="43.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.1" y="1214.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.$anonfun$handleExceptions$2 (222 samples, 3.71%)</title><rect x="614.1" y="1187.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.1" y="1198.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (219 samples, 3.66%)</title><rect x="614.3" y="1171.0" width="43.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.3" y="1182.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (219 samples, 3.66%)</title><rect x="614.3" y="1155.0" width="43.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.3" y="1166.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (2 samples, 0.03%)</title><rect x="614.3" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (2 samples, 0.03%)</title><rect x="614.3" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$950/492991461.apply (217 samples, 3.63%)</title><rect x="614.7" y="1139.0" width="42.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.7" y="1150.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResultWith$2 (217 samples, 3.63%)</title><rect x="614.7" y="1123.0" width="42.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.7" y="1134.0">akka..</text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$272/14633842.apply (10 samples, 0.17%)</title><rect x="614.7" y="1107.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.7" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (10 samples, 0.17%)</title><rect x="614.7" y="1091.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.7" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$272/14633842.apply (3 samples, 0.05%)</title><rect x="614.7" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$1 (3 samples, 0.05%)</title><rect x="614.7" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (3 samples, 0.05%)</title><rect x="614.7" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (3 samples, 0.05%)</title><rect x="614.7" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (3 samples, 0.05%)</title><rect x="614.7" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$951/343676143.apply (3 samples, 0.05%)</title><rect x="614.7" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (3 samples, 0.05%)</title><rect x="614.7" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.7" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (2 samples, 0.03%)</title><rect x="614.7" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.7" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (2 samples, 0.03%)</title><rect x="614.7" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.7" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.flatMap$extension (7 samples, 0.12%)</title><rect x="615.3" y="1075.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (7 samples, 0.12%)</title><rect x="615.3" y="1059.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.strictTransform$1 (7 samples, 0.12%)</title><rect x="615.3" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation$$Lambda$951/343676143.apply (7 samples, 0.12%)</title><rect x="615.3" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RouteConcatenation$RouteWithConcatenation.$anonfun$$tilde$2 (7 samples, 0.12%)</title><rect x="615.3" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (7 samples, 0.12%)</title><rect x="615.3" y="995.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (7 samples, 0.12%)</title><rect x="615.3" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.3" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (3 samples, 0.05%)</title><rect x="615.3" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.3" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (3 samples, 0.05%)</title><rect x="615.3" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.3" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (3 samples, 0.05%)</title><rect x="615.3" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.3" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (2 samples, 0.03%)</title><rect x="615.5" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.5" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="615.5" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.5" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="615.5" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.5" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (2 samples, 0.03%)</title><rect x="615.5" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.5" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (2 samples, 0.03%)</title><rect x="615.5" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.5" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="615.5" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.5" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$952/2140466085.apply (2 samples, 0.03%)</title><rect x="615.5" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.5" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="615.5" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.5" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/741855836.apply (4 samples, 0.07%)</title><rect x="615.9" y="963.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.9" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (4 samples, 0.07%)</title><rect x="615.9" y="947.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.9" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (4 samples, 0.07%)</title><rect x="615.9" y="931.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.9" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (4 samples, 0.07%)</title><rect x="615.9" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/782395258.apply (4 samples, 0.07%)</title><rect x="615.9" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (4 samples, 0.07%)</title><rect x="615.9" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.9" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (3 samples, 0.05%)</title><rect x="616.1" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.1" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (3 samples, 0.05%)</title><rect x="616.1" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.1" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$969/2031275950.apply (3 samples, 0.05%)</title><rect x="616.1" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.1" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (3 samples, 0.05%)</title><rect x="616.1" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (3 samples, 0.05%)</title><rect x="616.1" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.1" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (3 samples, 0.05%)</title><rect x="616.1" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (3 samples, 0.05%)</title><rect x="616.1" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.1" y="782.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (3 samples, 0.05%)</title><rect x="616.1" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.1" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (3 samples, 0.05%)</title><rect x="616.1" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.1" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (206 samples, 3.44%)</title><rect x="616.7" y="1107.0" width="40.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.7" y="1118.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (206 samples, 3.44%)</title><rect x="616.7" y="1091.0" width="40.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.7" y="1102.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (3 samples, 0.05%)</title><rect x="616.7" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.7" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (3 samples, 0.05%)</title><rect x="616.7" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (3 samples, 0.05%)</title><rect x="616.7" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.7" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$942/107825792.apply (3 samples, 0.05%)</title><rect x="616.7" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.7" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$1 (2 samples, 0.03%)</title><rect x="616.7" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.7" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (2 samples, 0.03%)</title><rect x="616.7" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.7" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$234/1340051218.apply (2 samples, 0.03%)</title><rect x="617.3" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.3" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$extract$1 (2 samples, 0.03%)</title><rect x="617.3" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.3" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives$$Lambda$260/589309113.apply (2 samples, 0.03%)</title><rect x="617.3" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.3" y="1054.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/PathDirectives.$anonfun$rawPathPrefix$1 (2 samples, 0.03%)</title><rect x="617.3" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="1038.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="617.3" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="1022.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$anon$3.apply (2 samples, 0.03%)</title><rect x="617.3" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.3" y="1006.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$232/673384643.apply (2 samples, 0.03%)</title><rect x="617.3" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.3" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$1 (2 samples, 0.03%)</title><rect x="617.3" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.3" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$Matched.andThen (2 samples, 0.03%)</title><rect x="617.3" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher$$Lambda$952/2140466085.apply (2 samples, 0.03%)</title><rect x="617.3" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.3" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/PathMatcher.$anonfun$$tilde$2 (2 samples, 0.03%)</title><rect x="617.3" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/741855836.apply (201 samples, 3.36%)</title><rect x="617.6" y="1075.0" width="39.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.6" y="1086.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (201 samples, 3.36%)</title><rect x="617.6" y="1059.0" width="39.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.6" y="1070.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (201 samples, 3.36%)</title><rect x="617.6" y="1043.0" width="39.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.6" y="1054.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (201 samples, 3.36%)</title><rect x="617.6" y="1027.0" width="39.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.6" y="1038.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$967/782395258.apply (200 samples, 3.34%)</title><rect x="617.6" y="1011.0" width="39.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.6" y="1022.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRouteResult$2 (200 samples, 3.34%)</title><rect x="617.6" y="995.0" width="39.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.6" y="1006.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2$$Lambda$946/285792678.apply (13 samples, 0.22%)</title><rect x="617.6" y="979.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.6" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/ConjunctionMagnet$$anon$2.$anonfun$apply$3 (13 samples, 0.22%)</title><rect x="617.6" y="963.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.6" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$841/197364017.apply (13 samples, 0.22%)</title><rect x="617.6" y="947.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.6" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (13 samples, 0.22%)</title><rect x="617.6" y="931.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.6" y="942.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1046/1051951895.apply (13 samples, 0.22%)</title><rect x="617.6" y="915.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.6" y="926.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$2 (13 samples, 0.22%)</title><rect x="617.6" y="899.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.6" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$839/1426457860.apply (12 samples, 0.20%)</title><rect x="617.6" y="883.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.6" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$1 (12 samples, 0.20%)</title><rect x="617.6" y="867.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.6" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$anon$1.tapply (12 samples, 0.20%)</title><rect x="617.6" y="851.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.6" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$957/1874675283.apply (12 samples, 0.20%)</title><rect x="617.6" y="835.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapInnerRoute$1 (12 samples, 0.20%)</title><rect x="617.6" y="819.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.6" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$$Lambda$841/197364017.apply (12 samples, 0.20%)</title><rect x="617.6" y="803.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.6" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$.$anonfun$addByNameNullaryApply$2 (12 samples, 0.20%)</title><rect x="617.6" y="787.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.6" y="798.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer$$Lambda$1058/1299697664.apply (12 samples, 0.20%)</title><rect x="617.6" y="771.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.6" y="782.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.$anonfun$route$3 (12 samples, 0.20%)</title><rect x="617.6" y="755.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.6" y="766.0"></text>
</g>
<g>
<title>akka/cluster/rapid/AkkaHttpClientAndServer.requestUnmarshaller (5 samples, 0.08%)</title><rect x="617.8" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.8" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteArrayUnmarshaller (4 samples, 0.07%)</title><rect x="618.0" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller$ (4 samples, 0.07%)</title><rect x="618.0" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteArrayUnmarshaller (4 samples, 0.07%)</title><rect x="618.0" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.map (2 samples, 0.03%)</title><rect x="618.0" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map$ (2 samples, 0.03%)</title><rect x="618.0" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.map (2 samples, 0.03%)</title><rect x="618.0" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="618.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="618.0" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.0" y="622.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1078/563703253.get$Lambda (2 samples, 0.03%)</title><rect x="618.0" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$.byteStringUnmarshaller (2 samples, 0.03%)</title><rect x="618.4" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.4" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.byteStringUnmarshaller$ (2 samples, 0.03%)</title><rect x="618.4" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.4" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directives$.entity (3 samples, 0.05%)</title><rect x="619.0" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.0" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity$ (3 samples, 0.05%)</title><rect x="619.0" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.0" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.entity (2 samples, 0.03%)</title><rect x="619.2" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.2" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$.cancelRejections (2 samples, 0.03%)</title><rect x="619.2" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.2" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.cancelRejections$ (2 samples, 0.03%)</title><rect x="619.2" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.2" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (2 samples, 0.03%)</title><rect x="620.4" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.4" y="990.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/StandardRoute$$anon$1.apply (2 samples, 0.03%)</title><rect x="620.4" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives$$Lambda$969/2031275950.apply (2 samples, 0.03%)</title><rect x="620.4" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.4" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/RouteDirectives.$anonfun$complete$1 (2 samples, 0.03%)</title><rect x="620.4" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.4" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.complete (2 samples, 0.03%)</title><rect x="620.4" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.4" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable$$anon$1.apply (2 samples, 0.03%)</title><rect x="620.4" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.4" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply$ (2 samples, 0.03%)</title><rect x="620.4" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.4" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/ToResponseMarshallable.apply (2 samples, 0.03%)</title><rect x="620.4" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.4" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/marshalling/Marshal.toResponseFor (2 samples, 0.03%)</title><rect x="620.4" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="623.4" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$966/741855836.apply (184 samples, 3.07%)</title><rect x="620.8" y="979.0" width="36.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.8" y="990.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$mapRequestContext$2 (184 samples, 3.07%)</title><rect x="620.8" y="963.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.8" y="974.0">akk..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives$$Lambda$268/1222094219.apply (171 samples, 2.86%)</title><rect x="620.8" y="947.0" width="33.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="958.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/BasicDirectives.$anonfun$textract$2 (171 samples, 2.86%)</title><rect x="620.8" y="931.0" width="33.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="942.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$$Lambda$267/763610533.apply (7 samples, 0.12%)</title><rect x="620.8" y="915.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.8" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive.$anonfun$tflatMap$2 (7 samples, 0.12%)</title><rect x="620.8" y="899.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.8" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$$$Lambda$262/708926121.apply (6 samples, 0.10%)</title><rect x="621.0" y="883.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.0" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.$anonfun$flatMap$1 (6 samples, 0.10%)</title><rect x="621.0" y="867.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.0" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1086/1538523465.apply (6 samples, 0.10%)</title><rect x="621.0" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.0" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$1 (5 samples, 0.08%)</title><rect x="621.2" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.2" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/Directive$SingleValueTransformers$.flatMap$extension (2 samples, 0.03%)</title><rect x="621.2" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="621.6" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="621.6" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.6" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1098/313056677.get$Lambda (2 samples, 0.03%)</title><rect x="621.6" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.6" y="798.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives$$Lambda$1104/99611122.apply (161 samples, 2.69%)</title><rect x="622.2" y="915.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.2" y="926.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/FutureDirectives.$anonfun$onComplete$2 (160 samples, 2.67%)</title><rect x="622.4" y="899.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.4" y="910.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives$$Lambda$1098/313056677.apply (157 samples, 2.62%)</title><rect x="622.6" y="883.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.6" y="894.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MarshallingDirectives.$anonfun$entity$2 (157 samples, 2.62%)</title><rect x="622.6" y="867.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.6" y="878.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (157 samples, 2.62%)</title><rect x="622.6" y="851.0" width="30.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.6" y="862.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1084/1481519275.apply (2 samples, 0.03%)</title><rect x="622.6" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.6" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers$$Lambda$1108/788352065.apply (154 samples, 2.57%)</title><rect x="623.2" y="835.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.2" y="846.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/LowerPriorityGenericUnmarshallers.$anonfun$messageUnmarshallerFromEntityUnmarshaller$3 (154 samples, 2.57%)</title><rect x="623.2" y="819.0" width="30.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.2" y="830.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (154 samples, 2.57%)</title><rect x="623.2" y="803.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.2" y="814.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1112/1559844901.apply (152 samples, 2.54%)</title><rect x="623.4" y="787.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.4" y="798.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (151 samples, 2.52%)</title><rect x="623.6" y="771.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.6" y="782.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1116/764602927.apply (2 samples, 0.03%)</title><rect x="623.6" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.6" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (2 samples, 0.03%)</title><rect x="623.6" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.6" y="750.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="623.6" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.6" y="734.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (148 samples, 2.47%)</title><rect x="624.0" y="755.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.0" y="766.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1112/1559844901.apply (148 samples, 2.47%)</title><rect x="624.0" y="739.0" width="29.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.0" y="750.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$transform$3 (148 samples, 2.47%)</title><rect x="624.0" y="723.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.0" y="734.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$Lambda$1116/764602927.apply (2 samples, 0.03%)</title><rect x="624.0" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.0" y="718.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller.$anonfun$map$3 (2 samples, 0.03%)</title><rect x="624.0" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.0" y="702.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.map$extension (2 samples, 0.03%)</title><rect x="624.0" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="624.0" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="670.0"></text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/Unmarshaller$$anon$1.apply (146 samples, 2.44%)</title><rect x="624.3" y="707.0" width="28.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.3" y="718.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers$$Lambda$1121/1977371250.apply (143 samples, 2.39%)</title><rect x="624.7" y="691.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.7" y="702.0">ak..</text>
</g>
<g>
<title>akka/http/scaladsl/unmarshalling/PredefinedFromEntityUnmarshallers.$anonfun$byteStringUnmarshaller$3 (143 samples, 2.39%)</title><rect x="624.7" y="675.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.7" y="686.0">ak..</text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runFold (142 samples, 2.37%)</title><rect x="624.9" y="659.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.9" y="670.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fold (35 samples, 0.58%)</title><rect x="624.9" y="643.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.9" y="654.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.fold (8 samples, 0.13%)</title><rect x="624.9" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.9" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold$ (7 samples, 0.12%)</title><rect x="625.1" y="611.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/FlowOps.fold (6 samples, 0.10%)</title><rect x="625.3" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.3" y="606.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (5 samples, 0.08%)</title><rect x="625.5" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.5" y="590.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.via (5 samples, 0.08%)</title><rect x="625.5" y="563.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.viaMat (5 samples, 0.08%)</title><rect x="625.5" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (4 samples, 0.07%)</title><rect x="625.7" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (4 samples, 0.07%)</title><rect x="625.7" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.7" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.initShape (3 samples, 0.05%)</title><rect x="625.9" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Flow.toMat (3 samples, 0.05%)</title><rect x="626.5" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.5" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.05%)</title><rect x="626.5" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.5" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.05%)</title><rect x="626.5" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.traversal (2 samples, 0.03%)</title><rect x="626.7" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.7" y="590.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.applyIslandAndAttributes (2 samples, 0.03%)</title><rect x="626.7" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.7" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.head (22 samples, 0.37%)</title><rect x="627.1" y="627.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.1" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.&lt;init&gt; (8 samples, 0.13%)</title><rect x="627.1" y="611.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.1" y="622.0"></text>
</g>
<g>
<title>akka/stream/SinkShape$.of (6 samples, 0.10%)</title><rect x="627.5" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.5" y="606.0"></text>
</g>
<g>
<title>akka/stream/SinkShape.&lt;init&gt; (6 samples, 0.10%)</title><rect x="627.5" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.5" y="590.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon (5 samples, 0.08%)</title><rect x="627.7" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.7" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/$colon$colon.&lt;init&gt; (5 samples, 0.08%)</title><rect x="627.7" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.7" y="558.0"></text>
</g>
<g>
<title>scala/runtime/Statics.releaseFence (5 samples, 0.08%)</title><rect x="627.7" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.7" y="542.0"></text>
</g>
<g>
<title>akka/stream/Attributes.$anonfun$isAsync$1$adapted (2 samples, 0.03%)</title><rect x="627.7" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (2 samples, 0.03%)</title><rect x="628.1" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.1" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.fromGraph (13 samples, 0.22%)</title><rect x="628.7" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.7" y="622.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.traversalBuilder (11 samples, 0.18%)</title><rect x="628.9" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.9" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.atomic (11 samples, 0.18%)</title><rect x="628.9" y="579.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.9" y="590.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toMap (6 samples, 0.10%)</title><rect x="629.3" y="563.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.3" y="574.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap$ (6 samples, 0.10%)</title><rect x="629.3" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.3" y="558.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toMap (6 samples, 0.10%)</title><rect x="629.3" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.3" y="542.0"></text>
</g>
<g>
<title>scala/collection/immutable/Map$.from (6 samples, 0.10%)</title><rect x="629.3" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.3" y="526.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addAll (3 samples, 0.05%)</title><rect x="629.7" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.7" y="510.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll$ (3 samples, 0.05%)</title><rect x="629.7" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.7" y="494.0"></text>
</g>
<g>
<title>scala/collection/mutable/Growable.addAll (3 samples, 0.05%)</title><rect x="629.7" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.7" y="478.0"></text>
</g>
<g>
<title>scala/collection/immutable/MapBuilderImpl.addOne (2 samples, 0.03%)</title><rect x="629.9" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.9" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (3 samples, 0.05%)</title><rect x="630.5" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.5" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.map (3 samples, 0.05%)</title><rect x="630.5" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.5" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$$$Lambda$528/1289454852.apply (2 samples, 0.03%)</title><rect x="630.5" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.5" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/TraversalBuilder$.$anonfun$atomic$1 (2 samples, 0.03%)</title><rect x="630.5" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.5" y="526.0"></text>
</g>
<g>
<title>scala/Predef$ArrowAssoc$.$minus$greater$extension (2 samples, 0.03%)</title><rect x="630.5" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.5" y="510.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink.named (2 samples, 0.03%)</title><rect x="631.4" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.4" y="638.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.runWith (107 samples, 1.79%)</title><rect x="631.8" y="643.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.8" y="654.0">a..</text>
</g>
<g>
<title>akka/stream/scaladsl/RunnableGraph.run (104 samples, 1.74%)</title><rect x="631.8" y="627.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.8" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (104 samples, 1.74%)</title><rect x="631.8" y="611.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.8" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (104 samples, 1.74%)</title><rect x="631.8" y="595.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.8" y="606.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.materialize (104 samples, 1.74%)</title><rect x="631.8" y="579.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.8" y="590.0"></text>
</g>
<g>
<title>akka/stream/Attributes.and (5 samples, 0.08%)</title><rect x="632.4" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.4" y="574.0"></text>
</g>
<g>
<title>scala/collection/immutable/List.$colon$colon$colon (2 samples, 0.03%)</title><rect x="633.0" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.materializeAtomic (8 samples, 0.13%)</title><rect x="633.4" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageWithMaterializedValue.createLogicAndMaterializedValue (6 samples, 0.10%)</title><rect x="633.8" y="547.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.8" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/HeadOptionStage.createLogicAndMaterializedValue (3 samples, 0.05%)</title><rect x="633.8" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.8" y="542.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStage.createLogicAndMaterializedValue (3 samples, 0.05%)</title><rect x="634.4" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.4" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold.createLogic (2 samples, 0.03%)</title><rect x="634.4" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.4" y="526.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Fold$$anon$18.&lt;init&gt; (2 samples, 0.03%)</title><rect x="634.4" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.4" y="510.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.onIslandReady (73 samples, 1.22%)</title><rect x="635.0" y="563.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.0" y="574.0"></text>
</g>
<g>
<title>akka/stream/Attributes.mandatoryAttribute (2 samples, 0.03%)</title><rect x="635.4" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/Attributes.getMandatoryAttribute (2 samples, 0.03%)</title><rect x="635.4" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.4" y="542.0"></text>
</g>
<g>
<title>akka/stream/impl/ExtendedActorMaterializer.actorOf (55 samples, 0.92%)</title><rect x="635.8" y="547.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="558.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.attachChild (55 samples, 0.92%)</title><rect x="635.8" y="531.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="542.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild$ (55 samples, 0.92%)</title><rect x="635.8" y="515.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="526.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.attachChild (55 samples, 0.92%)</title><rect x="635.8" y="499.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.8" y="510.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.checkName (2 samples, 0.03%)</title><rect x="636.0" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.0" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (2 samples, 0.03%)</title><rect x="636.0" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="478.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validatePathElement (2 samples, 0.03%)</title><rect x="636.0" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.0" y="462.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.findInvalidPathElementCharPosition (2 samples, 0.03%)</title><rect x="636.0" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.0" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorPath$.validate$1 (2 samples, 0.03%)</title><rect x="636.0" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.0" y="430.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.makeChild (52 samples, 0.87%)</title><rect x="636.4" y="483.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.4" y="494.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.initChild (2 samples, 0.03%)</title><rect x="636.8" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.8" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild$ (2 samples, 0.03%)</title><rect x="636.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.8" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.initChild (2 samples, 0.03%)</title><rect x="636.8" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.8" y="446.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.reserveChild (8 samples, 0.13%)</title><rect x="637.2" y="467.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.2" y="478.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild$ (8 samples, 0.13%)</title><rect x="637.2" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.2" y="462.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.reserveChild (8 samples, 0.13%)</title><rect x="637.2" y="435.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.2" y="446.0"></text>
</g>
<g>
<title>akka/actor/dungeon/ChildrenContainer$NormalChildrenContainer.reserve (8 samples, 0.13%)</title><rect x="637.2" y="419.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/AbstractMap.contains (2 samples, 0.03%)</title><rect x="637.2" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.2" y="414.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains$ (2 samples, 0.03%)</title><rect x="637.2" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.2" y="398.0"></text>
</g>
<g>
<title>scala/collection/MapOps.contains (2 samples, 0.03%)</title><rect x="637.2" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.2" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.get (2 samples, 0.03%)</title><rect x="637.2" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.2" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.get (2 samples, 0.03%)</title><rect x="637.2" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.2" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.lookup (2 samples, 0.03%)</title><rect x="637.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.2" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/TreeMap.updated (5 samples, 0.08%)</title><rect x="637.8" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.8" y="414.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.update (5 samples, 0.08%)</title><rect x="637.8" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.8" y="398.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="638.0" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.0" y="382.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="638.0" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.0" y="366.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="638.0" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.0" y="350.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (4 samples, 0.07%)</title><rect x="638.0" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.0" y="334.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="638.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.2" y="318.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="638.2" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.2" y="302.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (3 samples, 0.05%)</title><rect x="638.2" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.2" y="286.0"></text>
</g>
<g>
<title>scala/collection/immutable/RedBlackTree$.upd (2 samples, 0.03%)</title><rect x="638.3" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.3" y="270.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider.actorOf (38 samples, 0.63%)</title><rect x="638.9" y="467.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.9" y="478.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.elements (2 samples, 0.03%)</title><rect x="639.3" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.3" y="462.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$1 (2 samples, 0.03%)</title><rect x="639.3" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.3" y="446.0"></text>
</g>
<g>
<title>akka/actor/Deploy$.unapply (2 samples, 0.03%)</title><rect x="639.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="462.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRefProvider.actorOf (28 samples, 0.47%)</title><rect x="640.3" y="451.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.3" y="462.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.initialize (21 samples, 0.35%)</title><rect x="640.3" y="435.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="446.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (18 samples, 0.30%)</title><rect x="640.5" y="419.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="430.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (18 samples, 0.30%)</title><rect x="640.5" y="403.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.5" y="414.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (18 samples, 0.30%)</title><rect x="640.5" y="387.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="398.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (18 samples, 0.30%)</title><rect x="640.5" y="371.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.5" y="382.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (18 samples, 0.30%)</title><rect x="640.5" y="355.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.5" y="366.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (17 samples, 0.28%)</title><rect x="640.7" y="339.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.7" y="350.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (17 samples, 0.28%)</title><rect x="640.7" y="323.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.7" y="334.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (17 samples, 0.28%)</title><rect x="640.7" y="307.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.7" y="318.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (17 samples, 0.28%)</title><rect x="640.7" y="291.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.7" y="302.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (17 samples, 0.28%)</title><rect x="640.7" y="275.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (17 samples, 0.28%)</title><rect x="640.7" y="259.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (17 samples, 0.28%)</title><rect x="640.7" y="243.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (17 samples, 0.28%)</title><rect x="640.7" y="227.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.28%)</title><rect x="640.7" y="211.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.28%)</title><rect x="640.7" y="195.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.27%)</title><rect x="640.9" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.9" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="640.9" y="163.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="643.9" y="174.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 0.23%)</title><rect x="641.3" y="163.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="644.3" y="174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="641.5" y="147.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.5" y="158.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.22%)</title><rect x="641.5" y="131.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.5" y="142.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.20%)</title><rect x="641.7" y="115.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.7" y="126.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.20%)</title><rect x="641.7" y="99.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.7" y="110.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.20%)</title><rect x="641.7" y="83.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="644.7" y="94.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.18%)</title><rect x="641.9" y="67.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.9" y="78.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.18%)</title><rect x="641.9" y="51.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.18%)</title><rect x="641.9" y="35.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.9" y="46.0"></text>
</g>
<g>
<title>akka/actor/UnstartedCell.&lt;init&gt; (2 samples, 0.03%)</title><rect x="644.1" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.1" y="430.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.getMailboxType (6 samples, 0.10%)</title><rect x="644.7" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.7" y="446.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes.verifyRequirements$1 (2 samples, 0.03%)</title><rect x="645.4" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.4" y="430.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter$.props (11 samples, 0.18%)</title><rect x="647.0" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="558.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (5 samples, 0.08%)</title><rect x="647.0" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.0" y="542.0"></text>
</g>
<g>
<title>akka/actor/Props$.mkProps (5 samples, 0.08%)</title><rect x="647.0" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.0" y="526.0"></text>
</g>
<g>
<title>akka/actor/Props$.apply (5 samples, 0.08%)</title><rect x="647.0" y="499.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.0" y="510.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.toList (5 samples, 0.08%)</title><rect x="647.0" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.0" y="494.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList$ (5 samples, 0.08%)</title><rect x="647.0" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.0" y="478.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.toList (5 samples, 0.08%)</title><rect x="647.0" y="451.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.0" y="462.0"></text>
</g>
<g>
<title>scala/collection/immutable/List$.from (4 samples, 0.07%)</title><rect x="647.2" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.2" y="446.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer$.from (4 samples, 0.07%)</title><rect x="647.2" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.2" y="430.0"></text>
</g>
<g>
<title>scala/collection/mutable/ListBuffer.addAll (3 samples, 0.05%)</title><rect x="647.4" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.4" y="414.0"></text>
</g>
<g>
<title>akka/actor/Props.withDeploy (6 samples, 0.10%)</title><rect x="648.0" y="531.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.0" y="542.0"></text>
</g>
<g>
<title>akka/actor/Deploy.withFallback (5 samples, 0.08%)</title><rect x="648.0" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.0" y="526.0"></text>
</g>
<g>
<title>akka/actor/Deploy$.apply (2 samples, 0.03%)</title><rect x="648.0" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.0" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.05%)</title><rect x="648.4" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.4" y="510.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfig.withFallback (3 samples, 0.05%)</title><rect x="648.4" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.4" y="494.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigObject.withFallback (3 samples, 0.05%)</title><rect x="648.4" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.4" y="478.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/AbstractConfigValue.withFallback (3 samples, 0.05%)</title><rect x="648.4" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.4" y="462.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.05%)</title><rect x="648.4" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.4" y="446.0"></text>
</g>
<g>
<title>com/typesafe/config/impl/SimpleConfigObject.mergedWithObject (3 samples, 0.05%)</title><rect x="648.4" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.4" y="430.0"></text>
</g>
<g>
<title>akka/stream/impl/IslandTracking.&lt;init&gt; (6 samples, 0.10%)</title><rect x="649.4" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.4" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer$$anon$1.apply (5 samples, 0.08%)</title><rect x="649.4" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.4" y="558.0"></text>
</g>
<g>
<title>akka/stream/impl/GraphStageIsland.&lt;init&gt; (5 samples, 0.08%)</title><rect x="649.4" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="649.4" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.4" y="526.0"></text>
</g>
<g>
<title>scala/Array$.empty (3 samples, 0.05%)</title><rect x="649.8" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.8" y="526.0"></text>
</g>
<g>
<title>scala/reflect/ClassTag$GenericClassTag.newArray (3 samples, 0.05%)</title><rect x="649.8" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (3 samples, 0.05%)</title><rect x="649.8" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (2 samples, 0.03%)</title><rect x="650.0" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.0" y="478.0"></text>
</g>
<g>
<title>akka/stream/impl/PhasedFusingActorMaterializer.wireOutlets (2 samples, 0.03%)</title><rect x="651.2" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.2" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/Transform.apply (2 samples, 0.03%)</title><rect x="651.6" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.6" y="574.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$$$Lambda$1125/63496823.apply (2 samples, 0.03%)</title><rect x="651.6" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="558.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Sink$.$anonfun$head$1 (2 samples, 0.03%)</title><rect x="651.6" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.6" y="542.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.map (2 samples, 0.03%)</title><rect x="651.6" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.6" y="526.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source.toMat (3 samples, 0.05%)</title><rect x="652.3" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.3" y="638.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.05%)</title><rect x="652.3" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.3" y="622.0"></text>
</g>
<g>
<title>akka/stream/impl/LinearTraversalBuilder.append (3 samples, 0.05%)</title><rect x="652.3" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.3" y="606.0"></text>
</g>
<g>
<title>akka/http/scaladsl/util/FastFuture$.transformWith$extension (2 samples, 0.03%)</title><rect x="653.5" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.5" y="894.0"></text>
</g>
<g>
<title>akka/util/ConstantFun$$$Lambda$249/1951500432.apply (2 samples, 0.03%)</title><rect x="653.9" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.9" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1057/991361721.apply (13 samples, 0.22%)</title><rect x="654.5" y="947.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.5" y="958.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$1 (12 samples, 0.20%)</title><rect x="654.7" y="931.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.7" y="942.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/RequestContextImpl.mapRequest (12 samples, 0.20%)</title><rect x="654.7" y="915.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.7" y="926.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1090/1085204909.apply (11 samples, 0.18%)</title><rect x="654.9" y="899.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.9" y="910.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$2 (10 samples, 0.17%)</title><rect x="655.1" y="883.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.1" y="894.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpRequest.mapEntity (10 samples, 0.17%)</title><rect x="655.1" y="867.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.1" y="878.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$$$Lambda$1092/1813633246.apply (8 samples, 0.13%)</title><rect x="655.5" y="851.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.5" y="862.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/MiscDirectives$.$anonfun$_withoutSizeLimit$3 (8 samples, 0.13%)</title><rect x="655.5" y="835.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.5" y="846.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (8 samples, 0.13%)</title><rect x="655.5" y="819.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.5" y="830.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withoutSizeLimit (8 samples, 0.13%)</title><rect x="655.5" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.5" y="814.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/HttpEntity$Strict.withSizeLimit (8 samples, 0.13%)</title><rect x="655.5" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.5" y="798.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (8 samples, 0.13%)</title><rect x="655.5" y="771.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.5" y="782.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (8 samples, 0.13%)</title><rect x="655.5" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.5" y="766.0"></text>
</g>
<g>
<title>akka/http/scaladsl/server/directives/ExecutionDirectives.handleException$1 (2 samples, 0.03%)</title><rect x="657.5" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="657.5" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.5" y="1166.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/SubSink$$anon$12.onPush (2 samples, 0.03%)</title><rect x="658.3" y="1283.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (9 samples, 0.15%)</title><rect x="658.7" y="1283.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (9 samples, 0.15%)</title><rect x="658.7" y="1267.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.15%)</title><rect x="658.7" y="1251.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.7" y="1262.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (9 samples, 0.15%)</title><rect x="658.7" y="1235.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.7" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (9 samples, 0.15%)</title><rect x="658.7" y="1219.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.7" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (9 samples, 0.15%)</title><rect x="658.7" y="1203.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.7" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (9 samples, 0.15%)</title><rect x="658.7" y="1187.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.7" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (9 samples, 0.15%)</title><rect x="658.7" y="1171.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.7" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (9 samples, 0.15%)</title><rect x="658.7" y="1155.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.7" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (9 samples, 0.15%)</title><rect x="658.7" y="1139.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="658.7" y="1123.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (9 samples, 0.15%)</title><rect x="658.7" y="1107.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (9 samples, 0.15%)</title><rect x="658.7" y="1091.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (9 samples, 0.15%)</title><rect x="658.7" y="1075.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.15%)</title><rect x="658.7" y="1059.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.15%)</title><rect x="658.7" y="1043.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (9 samples, 0.15%)</title><rect x="658.7" y="1027.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.15%)</title><rect x="658.7" y="1011.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.15%)</title><rect x="658.7" y="995.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.13%)</title><rect x="658.9" y="979.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.12%)</title><rect x="659.0" y="963.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="662.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="659.0" y="947.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="662.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="659.0" y="931.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.0" y="942.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.10%)</title><rect x="659.2" y="915.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.2" y="926.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.10%)</title><rect x="659.2" y="899.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="662.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="659.2" y="883.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.10%)</title><rect x="659.2" y="867.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.2" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.10%)</title><rect x="659.2" y="851.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.10%)</title><rect x="659.2" y="835.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.2" y="846.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPull (2 samples, 0.03%)</title><rect x="660.6" y="1299.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.6" y="1310.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="661.2" y="1299.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="664.2" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$shortCircuitBatch (113 samples, 1.89%)</title><rect x="662.2" y="1379.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.2" y="1390.0">a..</text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent (87 samples, 1.45%)</title><rect x="662.2" y="1363.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.2" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.processEvent (86 samples, 1.44%)</title><rect x="662.4" y="1347.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$AsyncInput.execute (86 samples, 1.44%)</title><rect x="662.4" y="1331.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.runAsyncInput (36 samples, 0.60%)</title><rect x="662.4" y="1315.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet$$Lambda$1268/912383200.apply (33 samples, 0.55%)</title><rect x="662.4" y="1299.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1$adapted (33 samples, 0.55%)</title><rect x="662.4" y="1283.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.4" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSinkInlet.$anonfun$_sink$1 (33 samples, 0.55%)</title><rect x="662.4" y="1267.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onPush (20 samples, 0.33%)</title><rect x="662.4" y="1251.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.4" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (18 samples, 0.30%)</title><rect x="662.6" y="1235.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1362/2061879073.apply (2 samples, 0.03%)</title><rect x="662.6" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1$adapted (2 samples, 0.03%)</title><rect x="662.6" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.6" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$1 (2 samples, 0.03%)</title><rect x="662.6" y="1187.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.6" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.debug (2 samples, 0.03%)</title><rect x="662.6" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.6" y="1182.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isDebugEnabled (2 samples, 0.03%)</title><rect x="662.6" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.6" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1363/1761963696.apply (16 samples, 0.27%)</title><rect x="663.0" y="1219.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.0" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2$adapted (16 samples, 0.27%)</title><rect x="663.0" y="1203.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.0" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onPush$2 (16 samples, 0.27%)</title><rect x="663.0" y="1187.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onResponseReceived (16 samples, 0.27%)</title><rect x="663.0" y="1171.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (15 samples, 0.25%)</title><rect x="663.2" y="1155.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.2" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (15 samples, 0.25%)</title><rect x="663.2" y="1139.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.2" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (15 samples, 0.25%)</title><rect x="663.2" y="1123.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.2" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1251/98569400.apply (7 samples, 0.12%)</title><rect x="663.4" y="1107.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$event0$1 (7 samples, 0.12%)</title><rect x="663.4" y="1091.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1260/1857655023.apply (2 samples, 0.03%)</title><rect x="663.4" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseDispatchable$1 (2 samples, 0.03%)</title><rect x="663.4" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForResponseDispatch.onResponseDispatchable (2 samples, 0.03%)</title><rect x="663.4" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$$$Lambda$1262/1885342451.apply (4 samples, 0.07%)</title><rect x="664.0" y="1075.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Event$.$anonfun$onResponseEntityCompleted$1 (3 samples, 0.05%)</title><rect x="664.2" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.2" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/SlotState$WaitingForEndOfResponseEntity.onResponseEntityCompleted (3 samples, 0.05%)</title><rect x="664.2" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.2" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.willCloseAfter (3 samples, 0.05%)</title><rect x="664.2" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.2" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1.akka$http$impl$engine$client$pool$NewHostConnectionPool$HostConnectionPoolStage$$anon$$willClose (2 samples, 0.03%)</title><rect x="664.4" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.onUpstreamFailure (13 samples, 0.22%)</title><rect x="666.3" y="1251.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.3" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.withSlot (12 samples, 0.20%)</title><rect x="666.3" y="1235.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1395/669116375.apply (12 samples, 0.20%)</title><rect x="666.3" y="1219.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.3" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1$adapted (12 samples, 0.20%)</title><rect x="666.3" y="1203.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.3" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$onUpstreamFailure$1 (12 samples, 0.20%)</title><rect x="666.3" y="1187.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.3" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.onConnectionFailed (12 samples, 0.20%)</title><rect x="666.3" y="1171.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.3" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.updateState (12 samples, 0.20%)</title><rect x="666.3" y="1155.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.3" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.loop$1 (12 samples, 0.20%)</title><rect x="666.3" y="1139.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.3" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.runOneTransition$1 (12 samples, 0.20%)</title><rect x="666.3" y="1123.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.3" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$Slot.closeConnection (9 samples, 0.15%)</title><rect x="666.3" y="1107.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.close (9 samples, 0.15%)</title><rect x="666.3" y="1091.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.3" y="1102.0"></text>
</g>
<g>
<title>scala/Option.getOrElse (8 samples, 0.13%)</title><rect x="666.5" y="1075.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.5" y="1086.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection$$Lambda$1396/1580329084.apply (8 samples, 0.13%)</title><rect x="666.5" y="1059.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.5" y="1070.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/pool/NewHostConnectionPool$HostConnectionPoolStage$$anon$1$SlotConnection.$anonfun$close$1 (8 samples, 0.13%)</title><rect x="666.5" y="1043.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (8 samples, 0.13%)</title><rect x="666.5" y="1027.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 0.13%)</title><rect x="666.5" y="1011.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.13%)</title><rect x="666.5" y="995.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (7 samples, 0.12%)</title><rect x="666.7" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.10%)</title><rect x="666.9" y="963.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.10%)</title><rect x="666.9" y="947.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.9" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 0.10%)</title><rect x="666.9" y="931.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="669.9" y="942.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 0.10%)</title><rect x="666.9" y="915.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="669.9" y="926.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (6 samples, 0.10%)</title><rect x="666.9" y="899.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="669.9" y="910.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (6 samples, 0.10%)</title><rect x="666.9" y="883.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="669.9" y="894.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.03%)</title><rect x="667.3" y="867.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="670.3" y="878.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.03%)</title><rect x="667.3" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="670.3" y="862.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="667.3" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="670.3" y="846.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="667.7" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="670.7" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$SubSourceOutlet$$Lambda$1267/1313240925.apply (2 samples, 0.03%)</title><rect x="668.9" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (50 samples, 0.84%)</title><rect x="669.5" y="1315.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.5" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (49 samples, 0.82%)</title><rect x="669.7" y="1299.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processEvent (9 samples, 0.15%)</title><rect x="669.9" y="1283.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.9" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (8 samples, 0.13%)</title><rect x="670.1" y="1267.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.1" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.onPush (8 samples, 0.13%)</title><rect x="670.1" y="1251.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.afterRequestFinished (3 samples, 0.05%)</title><rect x="670.1" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/PoolInterface$Logic.resetIdleTimer (3 samples, 0.05%)</title><rect x="670.1" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.1" y="1230.0"></text>
</g>
<g>
<title>akka/stream/stage/TimerGraphStageLogic.scheduleOnce (2 samples, 0.03%)</title><rect x="670.3" y="1203.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.3" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.complete (5 samples, 0.08%)</title><rect x="670.7" y="1235.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.7" y="1246.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete$ (5 samples, 0.08%)</title><rect x="670.7" y="1219.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="1230.0"></text>
</g>
<g>
<title>scala/concurrent/Promise.complete (5 samples, 0.08%)</title><rect x="670.7" y="1203.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.7" y="1214.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete (5 samples, 0.08%)</title><rect x="670.7" y="1187.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.7" y="1198.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.tryComplete0 (5 samples, 0.08%)</title><rect x="670.7" y="1171.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.7" y="1182.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$DefaultPromise.submitWithValue (5 samples, 0.08%)</title><rect x="670.7" y="1155.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.7" y="1166.0"></text>
</g>
<g>
<title>scala/concurrent/impl/Promise$Transformation.submitWithValue (5 samples, 0.08%)</title><rect x="670.7" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.7" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.execute (5 samples, 0.08%)</title><rect x="670.7" y="1123.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.7" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute$ (5 samples, 0.08%)</title><rect x="670.7" y="1107.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.7" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/BatchingExecutor.execute (5 samples, 0.08%)</title><rect x="670.7" y="1091.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.7" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unbatchedExecute (5 samples, 0.08%)</title><rect x="670.7" y="1075.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.7" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.executeTask (5 samples, 0.08%)</title><rect x="670.7" y="1059.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.7" y="1070.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="670.7" y="1043.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.7" y="1054.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (5 samples, 0.08%)</title><rect x="670.7" y="1027.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.7" y="1038.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (5 samples, 0.08%)</title><rect x="670.7" y="1011.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.7" y="1022.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (5 samples, 0.08%)</title><rect x="670.7" y="995.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.08%)</title><rect x="670.7" y="979.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.08%)</title><rect x="670.7" y="963.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.08%)</title><rect x="670.7" y="947.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.08%)</title><rect x="670.7" y="931.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.08%)</title><rect x="670.7" y="915.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.08%)</title><rect x="670.7" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.7" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="671.1" y="883.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="674.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="671.1" y="867.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="671.1" y="851.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.1" y="862.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="671.1" y="835.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="674.1" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="671.1" y="819.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="671.1" y="803.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.05%)</title><rect x="671.1" y="787.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="671.1" y="771.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="674.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="671.1" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.1" y="766.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.processPush (36 samples, 0.60%)</title><rect x="671.7" y="1283.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.7" y="1294.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$anon$7.onPush (5 samples, 0.08%)</title><rect x="671.7" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.7" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.akka$http$impl$engine$client$OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$$drainParser (2 samples, 0.03%)</title><rect x="671.7" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.7" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.e$1 (2 samples, 0.03%)</title><rect x="671.7" y="1235.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.7" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6$$Lambda$1272/462028492.apply$mcV$sp (2 samples, 0.03%)</title><rect x="671.7" y="1219.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.7" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$ResponseParsingMerge$$anon$6.$anonfun$getNextData$1 (2 samples, 0.03%)</title><rect x="671.7" y="1203.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.7" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.parseBytes (3 samples, 0.05%)</title><rect x="672.1" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.1" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes$ (3 samples, 0.05%)</title><rect x="672.1" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.1" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.parseBytes (3 samples, 0.05%)</title><rect x="672.1" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.1" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.run$1 (3 samples, 0.05%)</title><rect x="672.1" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.1" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser$$Lambda$916/1297835521.apply (3 samples, 0.05%)</title><rect x="672.1" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.1" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.$anonfun$state$1 (3 samples, 0.05%)</title><rect x="672.1" y="1171.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.1" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.startNewMessage (3 samples, 0.05%)</title><rect x="672.1" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.1" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage$ (3 samples, 0.05%)</title><rect x="672.1" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.1" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.startNewMessage (3 samples, 0.05%)</title><rect x="672.1" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.1" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpResponseParser.continue (2 samples, 0.03%)</title><rect x="672.3" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.3" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue$ (2 samples, 0.03%)</title><rect x="672.3" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.3" y="1102.0"></text>
</g>
<g>
<title>akka/http/impl/engine/parsing/HttpMessageParser.continue (2 samples, 0.03%)</title><rect x="672.3" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.3" y="1086.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1$$anon$2.onPush (3 samples, 0.05%)</title><rect x="672.7" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.7" y="1278.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/FlattenMerge$$anon$1.akka$stream$impl$fusing$FlattenMerge$$anon$$addSource (2 samples, 0.03%)</title><rect x="672.9" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.9" y="1262.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/Map$$anon$1.onPush (19 samples, 0.32%)</title><rect x="673.4" y="1267.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.4" y="1278.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$$$Lambda$1231/1663178888.apply (18 samples, 0.30%)</title><rect x="673.6" y="1251.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.6" y="1262.0"></text>
</g>
<g>
<title>akka/http/impl/engine/client/OutgoingConnectionBlueprint$.$anonfun$apply$3 (18 samples, 0.30%)</title><rect x="673.6" y="1235.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.6" y="1246.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderToSource (18 samples, 0.30%)</title><rect x="673.6" y="1219.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.6" y="1230.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory$RequestRenderingOutput$Strict.byteStream (4 samples, 0.07%)</title><rect x="673.6" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.6" y="1214.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.single (4 samples, 0.07%)</title><rect x="673.6" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.6" y="1198.0"></text>
</g>
<g>
<title>akka/stream/scaladsl/Source$.fromGraph (3 samples, 0.05%)</title><rect x="673.8" y="1171.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.8" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render (14 samples, 0.23%)</title><rect x="674.4" y="1203.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.4" y="1214.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.completeRequestRendering$1 (3 samples, 0.05%)</title><rect x="674.4" y="1187.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.4" y="1198.0"></text>
</g>
<g>
<title>akka/util/ByteString$ByteStrings.$plus$plus (3 samples, 0.05%)</title><rect x="674.4" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderHeaders$1 (7 samples, 0.12%)</title><rect x="675.0" y="1187.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.0" y="1198.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.render$1 (3 samples, 0.05%)</title><rect x="675.4" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.4" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (3 samples, 0.05%)</title><rect x="675.4" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.4" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (3 samples, 0.05%)</title><rect x="675.4" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.4" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (3 samples, 0.05%)</title><rect x="675.4" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.4" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (3 samples, 0.05%)</title><rect x="675.4" y="1107.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.4" y="1118.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (3 samples, 0.05%)</title><rect x="675.4" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.4" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/Host.render (3 samples, 0.05%)</title><rect x="675.4" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.4" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (3 samples, 0.05%)</title><rect x="675.4" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.4" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (3 samples, 0.05%)</title><rect x="675.4" y="1043.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.4" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="675.4" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.4" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="675.4" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.4" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="675.4" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.4" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="675.4" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.4" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="675.4" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.4" y="974.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledCompanion.render (2 samples, 0.03%)</title><rect x="675.4" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.4" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="676.0" y="1171.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="1182.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="676.0" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.0" y="1166.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="676.0" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="1150.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="676.0" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.0" y="1134.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$RenderableRenderer$.render (2 samples, 0.03%)</title><rect x="676.0" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="1118.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.render (2 samples, 0.03%)</title><rect x="676.0" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.0" y="1102.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render$ (2 samples, 0.03%)</title><rect x="676.0" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.0" y="1086.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/ModeledHeader.render (2 samples, 0.03%)</title><rect x="676.0" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="1070.0"></text>
</g>
<g>
<title>akka/http/scaladsl/model/headers/User$minusAgent.renderValue (2 samples, 0.03%)</title><rect x="676.0" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="1054.0"></text>
</g>
<g>
<title>akka/http/impl/util/ByteStringRendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="676.0" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.0" y="1038.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde$ (2 samples, 0.03%)</title><rect x="676.0" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="1022.0"></text>
</g>
<g>
<title>akka/http/impl/util/Rendering.$tilde$tilde (2 samples, 0.03%)</title><rect x="676.0" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.0" y="1006.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (2 samples, 0.03%)</title><rect x="676.0" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.0" y="990.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.render (2 samples, 0.03%)</title><rect x="676.0" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="974.0"></text>
</g>
<g>
<title>akka/http/impl/util/Renderer$$anon$2.recL$1 (2 samples, 0.03%)</title><rect x="676.0" y="947.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.0" y="958.0"></text>
</g>
<g>
<title>akka/http/impl/engine/rendering/HttpRequestRendererFactory.renderRequestLine$1 (2 samples, 0.03%)</title><rect x="676.4" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.4" y="1198.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic$$anon$6.onPush (7 samples, 0.12%)</title><rect x="677.2" y="1267.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.2" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.$bang (6 samples, 0.10%)</title><rect x="677.2" y="1251.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="677.2" y="1235.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.2" y="1246.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (6 samples, 0.10%)</title><rect x="677.2" y="1219.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.2" y="1230.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (6 samples, 0.10%)</title><rect x="677.2" y="1203.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.2" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (6 samples, 0.10%)</title><rect x="677.2" y="1187.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.2" y="1198.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (6 samples, 0.10%)</title><rect x="677.2" y="1171.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.2" y="1182.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (6 samples, 0.10%)</title><rect x="677.2" y="1155.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.2" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (6 samples, 0.10%)</title><rect x="677.2" y="1139.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.2" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (6 samples, 0.10%)</title><rect x="677.2" y="1123.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.2" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="677.2" y="1107.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.2" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (6 samples, 0.10%)</title><rect x="677.2" y="1091.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.2" y="1102.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (6 samples, 0.10%)</title><rect x="677.2" y="1075.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.2" y="1086.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (6 samples, 0.10%)</title><rect x="677.2" y="1059.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.10%)</title><rect x="677.2" y="1043.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.10%)</title><rect x="677.2" y="1027.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.10%)</title><rect x="677.2" y="1011.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.10%)</title><rect x="677.2" y="995.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.10%)</title><rect x="677.2" y="979.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.10%)</title><rect x="677.2" y="963.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.2" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="677.4" y="947.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="680.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="677.4" y="931.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="677.4" y="915.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.4" y="926.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="677.4" y="899.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="680.4" y="910.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="677.4" y="883.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="680.4" y="894.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="677.4" y="867.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.4" y="878.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="677.6" y="851.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="677.6" y="835.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="677.6" y="819.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.6" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.05%)</title><rect x="678.8" y="1283.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.8" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.finishShellRegistration (26 samples, 0.43%)</title><rect x="679.4" y="1363.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.4" y="1374.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.tryInit (26 samples, 0.43%)</title><rect x="679.4" y="1347.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.4" y="1358.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.init (25 samples, 0.42%)</title><rect x="679.4" y="1331.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.4" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.init (18 samples, 0.30%)</title><rect x="679.4" y="1315.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.4" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$IdleTimeoutBidi$$anon$5.preStart (4 samples, 0.07%)</title><rect x="679.4" y="1299.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.4" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/Timers$.timeoutCheckInterval (2 samples, 0.03%)</title><rect x="679.6" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.6" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/io/TcpConnectionStage$TcpStreamLogic.preStart (11 samples, 0.18%)</title><rect x="680.7" y="1299.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.7" y="1310.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.watch (8 samples, 0.13%)</title><rect x="680.7" y="1283.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.7" y="1294.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.watch (8 samples, 0.13%)</title><rect x="680.7" y="1267.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.sendSystemMessage (7 samples, 0.12%)</title><rect x="680.9" y="1251.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.9" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (7 samples, 0.12%)</title><rect x="680.9" y="1235.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (7 samples, 0.12%)</title><rect x="680.9" y="1219.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (7 samples, 0.12%)</title><rect x="680.9" y="1203.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.9" y="1214.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (7 samples, 0.12%)</title><rect x="680.9" y="1187.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.12%)</title><rect x="680.9" y="1171.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.9" y="1182.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="680.9" y="1155.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.9" y="1166.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.12%)</title><rect x="680.9" y="1139.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.9" y="1150.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="680.9" y="1123.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.9" y="1134.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.12%)</title><rect x="680.9" y="1107.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.12%)</title><rect x="680.9" y="1091.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.12%)</title><rect x="680.9" y="1075.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.12%)</title><rect x="680.9" y="1059.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.12%)</title><rect x="680.9" y="1043.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.12%)</title><rect x="680.9" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.12%)</title><rect x="680.9" y="1011.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.9" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="681.3" y="995.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="684.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="681.3" y="979.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="681.3" y="963.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.3" y="974.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.08%)</title><rect x="681.3" y="947.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.3" y="958.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="681.3" y="931.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="684.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="681.3" y="915.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.3" y="926.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="681.3" y="899.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.3" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="681.3" y="883.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.3" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="681.3" y="867.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.3" y="878.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getStageActor (3 samples, 0.05%)</title><rect x="682.3" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.3" y="1294.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic.getEagerStageActor (3 samples, 0.05%)</title><rect x="682.3" y="1267.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="1278.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.&lt;init&gt; (3 samples, 0.05%)</title><rect x="682.3" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.addFunctionRef (2 samples, 0.03%)</title><rect x="682.3" y="1235.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef$ (2 samples, 0.03%)</title><rect x="682.3" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="1230.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.addFunctionRef (2 samples, 0.03%)</title><rect x="682.3" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.3" y="1214.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.rec$1 (2 samples, 0.03%)</title><rect x="682.3" y="1187.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.3" y="1198.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="682.3" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.3" y="1182.0"></text>
</g>
<g>
<title>scala/collection/immutable/HashMap.updated (2 samples, 0.03%)</title><rect x="682.3" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.3" y="1166.0"></text>
</g>
<g>
<title>scala/collection/immutable/BitmapIndexedMapNode.updated (2 samples, 0.03%)</title><rect x="682.3" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.3" y="1150.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter (4 samples, 0.07%)</title><rect x="682.9" y="1315.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.9" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.interpreter$lzycompute (4 samples, 0.07%)</title><rect x="682.9" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.9" y="1310.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log (3 samples, 0.05%)</title><rect x="683.1" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.1" y="1294.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.log$lzycompute (3 samples, 0.05%)</title><rect x="683.1" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.1" y="1278.0"></text>
</g>
<g>
<title>akka/event/Logging$.apply (3 samples, 0.05%)</title><rect x="683.1" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.1" y="1262.0"></text>
</g>
<g>
<title>akka/event/LogSource$.apply (3 samples, 0.05%)</title><rect x="683.1" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.1" y="1246.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.05%)</title><rect x="683.1" y="1219.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.1" y="1230.0"></text>
</g>
<g>
<title>akka/event/LogSource$$anon$4.genString (3 samples, 0.05%)</title><rect x="683.1" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.1" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (3 samples, 0.05%)</title><rect x="683.1" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.1" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (3 samples, 0.05%)</title><rect x="683.1" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.1" y="1182.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (3 samples, 0.05%)</title><rect x="683.1" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (2 samples, 0.03%)</title><rect x="683.3" y="1139.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (2 samples, 0.03%)</title><rect x="683.3" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="683.3" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.3" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="683.3" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.3" y="1102.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.runBatch (3 samples, 0.05%)</title><rect x="683.7" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreter.execute (2 samples, 0.03%)</title><rect x="683.9" y="1299.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.9" y="1310.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.aroundReceive (9 samples, 0.15%)</title><rect x="684.7" y="1443.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="1454.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive$ (9 samples, 0.15%)</title><rect x="684.7" y="1427.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.7" y="1438.0"></text>
</g>
<g>
<title>akka/actor/Timers.aroundReceive (9 samples, 0.15%)</title><rect x="684.7" y="1411.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.7" y="1422.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder.akka$actor$Timers$$super$aroundReceive (9 samples, 0.15%)</title><rect x="684.7" y="1395.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.7" y="1406.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive$ (9 samples, 0.15%)</title><rect x="684.7" y="1379.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.7" y="1390.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundReceive (9 samples, 0.15%)</title><rect x="684.7" y="1363.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="1374.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1.applyOrElse (9 samples, 0.15%)</title><rect x="684.7" y="1347.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.7" y="1358.0"></text>
</g>
<g>
<title>akka/event/BusLogging.info (2 samples, 0.03%)</title><rect x="684.7" y="1331.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.7" y="1342.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info$ (2 samples, 0.03%)</title><rect x="684.7" y="1315.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.7" y="1326.0"></text>
</g>
<g>
<title>akka/event/LoggingAdapter.info (2 samples, 0.03%)</title><rect x="684.7" y="1299.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.7" y="1310.0"></text>
</g>
<g>
<title>akka/event/BusLogging.isInfoEnabled (2 samples, 0.03%)</title><rect x="684.7" y="1283.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.7" y="1294.0"></text>
</g>
<g>
<title>akka/event/slf4j/Slf4jLoggingFilter.isInfoEnabled (2 samples, 0.03%)</title><rect x="684.7" y="1267.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.7" y="1278.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterable.count (7 samples, 0.12%)</title><rect x="685.1" y="1331.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.1" y="1342.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count$ (7 samples, 0.12%)</title><rect x="685.1" y="1315.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.1" y="1326.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.count (7 samples, 0.12%)</title><rect x="685.1" y="1299.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.1" y="1310.0"></text>
</g>
<g>
<title>io/bernhardt/akka/rapid/MembershipRecorder$$anonfun$receive$1$$Lambda$898/1284795559.apply (4 samples, 0.07%)</title><rect x="685.3" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.3" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.dequeue (6 samples, 0.10%)</title><rect x="686.5" y="1475.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.5" y="1486.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (5 samples, 0.08%)</title><rect x="686.7" y="1459.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.7" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (5 samples, 0.08%)</title><rect x="686.7" y="1443.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.7" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (5 samples, 0.08%)</title><rect x="686.7" y="1427.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (5 samples, 0.08%)</title><rect x="686.7" y="1411.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.7" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.processAllSystemMessages (72 samples, 1.20%)</title><rect x="687.6" y="1475.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.6" y="1486.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.systemInvoke (68 samples, 1.14%)</title><rect x="687.6" y="1459.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.6" y="1470.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.invokeAll$1 (67 samples, 1.12%)</title><rect x="687.6" y="1443.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.6" y="1454.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.create (3 samples, 0.05%)</title><rect x="687.6" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.newActor (2 samples, 0.03%)</title><rect x="687.8" y="1411.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.supervise (2 samples, 0.03%)</title><rect x="688.4" y="1427.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.4" y="1438.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.terminate (61 samples, 1.02%)</title><rect x="688.8" y="1427.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.8" y="1438.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate$ (61 samples, 1.02%)</title><rect x="688.8" y="1411.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.8" y="1422.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.terminate (61 samples, 1.02%)</title><rect x="688.8" y="1395.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.8" y="1406.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.children (3 samples, 0.05%)</title><rect x="688.8" y="1379.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.children$ (3 samples, 0.05%)</title><rect x="688.8" y="1363.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.8" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Children.children (2 samples, 0.03%)</title><rect x="689.0" y="1347.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.0" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/FaultHandling.finishTerminate (55 samples, 0.92%)</title><rect x="689.8" y="1379.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.8" y="1390.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorCellFields (4 samples, 0.07%)</title><rect x="689.8" y="1363.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.8" y="1374.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (4 samples, 0.07%)</title><rect x="689.8" y="1347.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (4 samples, 0.07%)</title><rect x="689.8" y="1331.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (4 samples, 0.07%)</title><rect x="689.8" y="1315.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (3 samples, 0.05%)</title><rect x="690.0" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyField (3 samples, 0.05%)</title><rect x="690.0" y="1283.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.copy (3 samples, 0.05%)</title><rect x="690.0" y="1267.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.&lt;init&gt; (2 samples, 0.03%)</title><rect x="690.2" y="1251.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.2" y="1262.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.clearActorFields (7 samples, 0.12%)</title><rect x="690.6" y="1363.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.6" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.setActorFields (7 samples, 0.12%)</title><rect x="690.6" y="1347.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.6" y="1358.0"></text>
</g>
<g>
<title>akka/util/Reflect$.lookupAndSetField (6 samples, 0.10%)</title><rect x="690.6" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.6" y="1342.0"></text>
</g>
<g>
<title>akka/util/Reflect$.clearFirst$1 (3 samples, 0.05%)</title><rect x="690.6" y="1315.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (3 samples, 0.05%)</title><rect x="691.2" y="1315.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (3 samples, 0.05%)</title><rect x="691.2" y="1299.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyField (3 samples, 0.05%)</title><rect x="691.2" y="1283.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.langReflectAccess (2 samples, 0.03%)</title><rect x="691.4" y="1267.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.4" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.tellWatchersWeDied (5 samples, 0.08%)</title><rect x="692.2" y="1363.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied$ (5 samples, 0.08%)</title><rect x="692.2" y="1347.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.tellWatchersWeDied (5 samples, 0.08%)</title><rect x="692.2" y="1331.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.maintainAddressTerminatedSubscription (3 samples, 0.05%)</title><rect x="692.4" y="1315.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.4" y="1326.0"></text>
</g>
<g>
<title>akka/actor/dungeon/DeathWatch.hasNonLocalAddress$1 (3 samples, 0.05%)</title><rect x="692.4" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.4" y="1310.0"></text>
</g>
<g>
<title>scala/collection/AbstractIterator.exists (2 samples, 0.03%)</title><rect x="692.6" y="1283.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.6" y="1294.0"></text>
</g>
<g>
<title>scala/collection/IterableOnceOps.exists$ (2 samples, 0.03%)</title><rect x="692.6" y="1267.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.6" y="1278.0"></text>
</g>
<g>
<title>akka/actor/LocalActorRef.sendSystemMessage (14 samples, 0.23%)</title><rect x="693.2" y="1363.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.2" y="1374.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendSystemMessage (14 samples, 0.23%)</title><rect x="693.2" y="1347.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.2" y="1358.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage$ (14 samples, 0.23%)</title><rect x="693.2" y="1331.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.2" y="1342.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendSystemMessage (14 samples, 0.23%)</title><rect x="693.2" y="1315.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.2" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.systemDispatch (14 samples, 0.23%)</title><rect x="693.2" y="1299.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.2" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (13 samples, 0.22%)</title><rect x="693.4" y="1283.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.4" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (13 samples, 0.22%)</title><rect x="693.4" y="1267.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.4" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (13 samples, 0.22%)</title><rect x="693.4" y="1251.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.4" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (13 samples, 0.22%)</title><rect x="693.4" y="1235.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.4" y="1246.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (13 samples, 0.22%)</title><rect x="693.4" y="1219.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.22%)</title><rect x="693.4" y="1203.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.22%)</title><rect x="693.4" y="1187.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (13 samples, 0.22%)</title><rect x="693.4" y="1171.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.22%)</title><rect x="693.4" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.22%)</title><rect x="693.4" y="1139.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.22%)</title><rect x="693.4" y="1123.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.4" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.22%)</title><rect x="693.4" y="1107.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="696.4" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.20%)</title><rect x="693.6" y="1091.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="696.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.20%)</title><rect x="693.6" y="1075.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.6" y="1086.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.20%)</title><rect x="693.6" y="1059.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.6" y="1070.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.20%)</title><rect x="693.6" y="1043.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.6" y="1054.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.18%)</title><rect x="693.6" y="1027.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.6" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.15%)</title><rect x="693.9" y="1011.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="696.9" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.15%)</title><rect x="693.9" y="995.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.9" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.15%)</title><rect x="693.9" y="979.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.9" y="990.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.detach (9 samples, 0.15%)</title><rect x="695.9" y="1363.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.9" y="1374.0"></text>
</g>
<g>
<title>akka/dispatch/MessageDispatcher.unregister (9 samples, 0.15%)</title><rect x="695.9" y="1347.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.9" y="1358.0"></text>
</g>
<g>
<title>akka/dispatch/Mailbox.cleanUp (8 samples, 0.13%)</title><rect x="696.1" y="1331.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.1" y="1342.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.cleanUp (8 samples, 0.13%)</title><rect x="696.1" y="1315.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.1" y="1326.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp$ (8 samples, 0.13%)</title><rect x="696.1" y="1299.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.1" y="1310.0"></text>
</g>
<g>
<title>akka/dispatch/QueueBasedMessageQueue.cleanUp (8 samples, 0.13%)</title><rect x="696.1" y="1283.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.1" y="1294.0"></text>
</g>
<g>
<title>akka/dispatch/Mailboxes$$anon$1$$anon$2.enqueue (6 samples, 0.10%)</title><rect x="696.1" y="1267.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.1" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.tell (5 samples, 0.08%)</title><rect x="696.3" y="1251.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.3" y="1262.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (3 samples, 0.05%)</title><rect x="696.3" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.3" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (2 samples, 0.03%)</title><rect x="696.5" y="1219.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.5" y="1230.0"></text>
</g>
<g>
<title>akka/remote/RemoteActorRefProvider$RemoteDeadLetterActorRef.$bang (2 samples, 0.03%)</title><rect x="696.9" y="1235.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.9" y="1246.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.$bang (2 samples, 0.03%)</title><rect x="696.9" y="1219.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/DeadLetterActorRef.specialHandle (2 samples, 0.03%)</title><rect x="696.9" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/EmptyLocalActorRef.specialHandle (2 samples, 0.03%)</title><rect x="696.9" y="1187.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.9" y="1198.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedMailbox$MessageQueue.dequeue (2 samples, 0.03%)</title><rect x="697.3" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.3" y="1278.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue$ (2 samples, 0.03%)</title><rect x="697.3" y="1251.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.3" y="1262.0"></text>
</g>
<g>
<title>akka/dispatch/UnboundedQueueBasedMessageQueue.dequeue (2 samples, 0.03%)</title><rect x="697.3" y="1235.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (2 samples, 0.03%)</title><rect x="697.3" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.3" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.aroundPostStop (10 samples, 0.17%)</title><rect x="697.7" y="1363.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (10 samples, 0.17%)</title><rect x="697.7" y="1347.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (10 samples, 0.17%)</title><rect x="697.7" y="1331.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.7" y="1342.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.postStop (10 samples, 0.17%)</title><rect x="697.7" y="1315.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="1326.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.notifyInterested$1 (10 samples, 0.17%)</title><rect x="697.7" y="1299.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.7" y="1310.0"></text>
</g>
<g>
<title>scala/Option.foreach (9 samples, 0.15%)</title><rect x="697.9" y="1283.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="1294.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1024/117822847.apply (9 samples, 0.15%)</title><rect x="697.9" y="1267.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="1278.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3$adapted (9 samples, 0.15%)</title><rect x="697.9" y="1251.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.9" y="1262.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$3 (9 samples, 0.15%)</title><rect x="697.9" y="1235.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.9" y="1246.0"></text>
</g>
<g>
<title>scala/collection/immutable/Set$Set1.foreach (9 samples, 0.15%)</title><rect x="697.9" y="1219.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.9" y="1230.0"></text>
</g>
<g>
<title>akka/io/TcpConnection$$Lambda$1025/267831983.apply (9 samples, 0.15%)</title><rect x="697.9" y="1203.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="1214.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4$adapted (9 samples, 0.15%)</title><rect x="697.9" y="1187.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="1198.0"></text>
</g>
<g>
<title>akka/io/TcpConnection.$anonfun$postStop$4 (9 samples, 0.15%)</title><rect x="697.9" y="1171.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.9" y="1182.0"></text>
</g>
<g>
<title>akka/actor/FunctionRef.$bang (8 samples, 0.13%)</title><rect x="697.9" y="1155.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.9" y="1166.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor$$Lambda$545/121983434.apply (8 samples, 0.13%)</title><rect x="697.9" y="1139.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.9" y="1150.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1$adapted (8 samples, 0.13%)</title><rect x="697.9" y="1123.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.9" y="1134.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$StageActor.$anonfun$functionRef$1 (8 samples, 0.13%)</title><rect x="697.9" y="1107.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.9" y="1118.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invoke (8 samples, 0.13%)</title><rect x="697.9" y="1091.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.9" y="1102.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.invokeWithPromise (8 samples, 0.13%)</title><rect x="697.9" y="1075.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.9" y="1086.0"></text>
</g>
<g>
<title>akka/stream/stage/GraphStageLogic$ConcurrentAsyncCallback.onAsyncInput (8 samples, 0.13%)</title><rect x="697.9" y="1059.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.9" y="1070.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell$$Lambda$539/943841765.apply (8 samples, 0.13%)</title><rect x="697.9" y="1043.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="1054.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1$adapted (8 samples, 0.13%)</title><rect x="697.9" y="1027.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.9" y="1038.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/GraphInterpreterShell.$anonfun$interpreter$1 (8 samples, 0.13%)</title><rect x="697.9" y="1011.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.9" y="1022.0"></text>
</g>
<g>
<title>akka/actor/RepointableActorRef.$bang (8 samples, 0.13%)</title><rect x="697.9" y="995.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.9" y="1006.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="697.9" y="979.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.9" y="990.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage$ (8 samples, 0.13%)</title><rect x="697.9" y="963.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="974.0"></text>
</g>
<g>
<title>akka/actor/Cell.sendMessage (8 samples, 0.13%)</title><rect x="697.9" y="947.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.9" y="958.0"></text>
</g>
<g>
<title>akka/actor/ActorCell.sendMessage (8 samples, 0.13%)</title><rect x="697.9" y="931.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.9" y="942.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage$ (8 samples, 0.13%)</title><rect x="697.9" y="915.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="926.0"></text>
</g>
<g>
<title>akka/actor/dungeon/Dispatch.sendMessage (8 samples, 0.13%)</title><rect x="697.9" y="899.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.9" y="910.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.dispatch (8 samples, 0.13%)</title><rect x="697.9" y="883.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="894.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher.registerForExecution (7 samples, 0.12%)</title><rect x="697.9" y="867.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="878.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$LazyExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="697.9" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.9" y="862.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute$ (7 samples, 0.12%)</title><rect x="697.9" y="835.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.9" y="846.0"></text>
</g>
<g>
<title>akka/dispatch/ExecutorServiceDelegate.execute (7 samples, 0.12%)</title><rect x="697.9" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.9" y="830.0"></text>
</g>
<g>
<title>akka/dispatch/ForkJoinExecutorConfigurator$AkkaForkJoinPool.execute (7 samples, 0.12%)</title><rect x="697.9" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.12%)</title><rect x="697.9" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.12%)</title><rect x="697.9" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.12%)</title><rect x="697.9" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.12%)</title><rect x="697.9" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.12%)</title><rect x="697.9" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.12%)</title><rect x="697.9" y="707.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.12%)</title><rect x="697.9" y="691.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="700.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="697.9" y="675.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="700.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="697.9" y="659.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="700.9" y="670.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.12%)</title><rect x="697.9" y="643.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="700.9" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="697.9" y="627.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="700.9" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.12%)</title><rect x="697.9" y="611.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="700.9" y="622.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.12%)</title><rect x="697.9" y="595.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.9" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.10%)</title><rect x="698.1" y="579.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.10%)</title><rect x="698.1" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="701.1" y="574.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.aroundPostStop (5 samples, 0.08%)</title><rect x="699.7" y="1363.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.7" y="1374.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop$ (5 samples, 0.08%)</title><rect x="699.7" y="1347.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.7" y="1358.0"></text>
</g>
<g>
<title>akka/actor/Actor.aroundPostStop (5 samples, 0.08%)</title><rect x="699.7" y="1331.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.7" y="1342.0"></text>
</g>
<g>
<title>akka/stream/impl/fusing/ActorGraphInterpreter.postStop (5 samples, 0.08%)</title><rect x="699.7" y="1315.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.7" y="1326.0"></text>
</g>
<g>
<title>akka/stream/AbruptTerminationException.&lt;init&gt; (3 samples, 0.05%)</title><rect x="699.7" y="1299.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="699.7" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.05%)</title><rect x="699.7" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.7" y="1278.0"></text>
</g>
<g>
<title>akka/actor/ActorRef.toString (3 samples, 0.05%)</title><rect x="699.7" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.05%)</title><rect x="699.7" y="1235.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="699.9" y="1219.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.9" y="1230.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.toString (2 samples, 0.03%)</title><rect x="699.9" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.9" y="1214.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.buildToString (2 samples, 0.03%)</title><rect x="699.9" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.9" y="1198.0"></text>
</g>
<g>
<title>akka/actor/ChildActorPath.rec$3 (2 samples, 0.03%)</title><rect x="699.9" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.replace (2 samples, 0.03%)</title><rect x="699.9" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.replace (2 samples, 0.03%)</title><rect x="699.9" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="699.9" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="699.9" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.9" y="1118.0"></text>
</g>
<g>
<title>akka/dispatch/Dispatcher$$anon$1.systemDrain (4 samples, 0.07%)</title><rect x="701.0" y="1459.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.0" y="1470.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain$ (4 samples, 0.07%)</title><rect x="701.0" y="1443.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.0" y="1454.0"></text>
</g>
<g>
<title>akka/dispatch/DefaultSystemMessageQueue.systemDrain (4 samples, 0.07%)</title><rect x="701.0" y="1427.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.0" y="1438.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/LatestFirstSystemMessageList$.reverse$extension (2 samples, 0.03%)</title><rect x="701.4" y="1411.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="1422.0"></text>
</g>
<g>
<title>akka/dispatch/sysmsg/SystemMessageList$.reverseInner (2 samples, 0.03%)</title><rect x="701.4" y="1395.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.4" y="1406.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="701.4" y="1379.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="704.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (17 samples, 0.28%)</title><rect x="702.2" y="1555.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.2" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.28%)</title><rect x="702.2" y="1539.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.28%)</title><rect x="702.2" y="1523.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.2" y="1534.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="702.2" y="1507.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="705.2" y="1518.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="702.6" y="1507.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="705.6" y="1518.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.25%)</title><rect x="702.6" y="1491.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.6" y="1502.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.25%)</title><rect x="702.6" y="1475.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.6" y="1486.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.25%)</title><rect x="702.6" y="1459.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.6" y="1470.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.23%)</title><rect x="702.8" y="1443.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.8" y="1454.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.23%)</title><rect x="702.8" y="1427.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.8" y="1438.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.22%)</title><rect x="703.0" y="1411.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="706.0" y="1422.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.22%)</title><rect x="703.0" y="1395.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.0" y="1406.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.22%)</title><rect x="703.0" y="1379.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (82 samples, 1.37%)</title><rect x="705.6" y="1571.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.6" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (73 samples, 1.22%)</title><rect x="707.4" y="1555.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="1566.0"></text>
</g>
<g>
<title>Unsafe_Park (28 samples, 0.47%)</title><rect x="707.9" y="1539.0" width="5.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="710.9" y="1550.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="708.7" y="1523.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="711.7" y="1534.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.05%)</title><rect x="709.1" y="1523.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="712.1" y="1534.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="709.7" y="1523.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="712.7" y="1534.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.12%)</title><rect x="710.5" y="1523.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="713.5" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="710.9" y="1507.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.9" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="710.9" y="1491.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.9" y="1502.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.05%)</title><rect x="711.3" y="1475.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="714.3" y="1486.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="711.3" y="1459.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.3" y="1470.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="711.3" y="1443.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.3" y="1454.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="711.9" y="1523.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="714.9" y="1534.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.07%)</title><rect x="712.3" y="1523.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="715.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.70%)</title><rect x="713.5" y="1539.0" width="8.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="716.5" y="1550.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.03%)</title><rect x="713.5" y="1523.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="716.5" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_wait (36 samples, 0.60%)</title><rect x="713.9" y="1523.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="716.9" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.55%)</title><rect x="714.5" y="1507.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="717.5" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.55%)</title><rect x="714.5" y="1491.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="717.5" y="1502.0"></text>
</g>
<g>
<title>sys_futex (27 samples, 0.45%)</title><rect x="715.6" y="1475.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.6" y="1486.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.43%)</title><rect x="715.8" y="1459.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.8" y="1470.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.38%)</title><rect x="716.0" y="1443.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="719.0" y="1454.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.25%)</title><rect x="716.2" y="1427.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="719.2" y="1438.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.22%)</title><rect x="716.6" y="1411.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.6" y="1422.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.20%)</title><rect x="716.8" y="1395.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.8" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.15%)</title><rect x="717.4" y="1379.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="720.4" y="1390.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.08%)</title><rect x="719.2" y="1427.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.2" y="1438.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.05%)</title><rect x="719.6" y="1411.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.6" y="1422.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="720.2" y="1427.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.2" y="1438.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="721.0" y="1523.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="724.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (75 samples, 1.25%)</title><rect x="721.7" y="1571.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.7" y="1582.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="722.5" y="1555.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="725.5" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (50 samples, 0.84%)</title><rect x="723.1" y="1555.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.1" y="1566.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.40%)</title><rect x="723.5" y="1539.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="726.5" y="1550.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.18%)</title><rect x="723.9" y="1523.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="726.9" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (11 samples, 0.18%)</title><rect x="723.9" y="1507.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="726.9" y="1518.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.17%)</title><rect x="724.1" y="1491.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="727.1" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="725.5" y="1475.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.5" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="725.5" y="1459.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="728.5" y="1470.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="725.7" y="1443.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.7" y="1454.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.03%)</title><rect x="725.7" y="1427.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.7" y="1438.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="725.7" y="1411.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.7" y="1422.0"></text>
</g>
<g>
<title>xen_clocksource_get_cycles (2 samples, 0.03%)</title><rect x="725.7" y="1395.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="728.7" y="1406.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.03%)</title><rect x="725.7" y="1379.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="728.7" y="1390.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="726.1" y="1523.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="729.1" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.05%)</title><rect x="726.7" y="1523.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="729.7" y="1534.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="727.3" y="1523.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="730.3" y="1534.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.03%)</title><rect x="727.9" y="1523.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="730.9" y="1534.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (22 samples, 0.37%)</title><rect x="728.4" y="1539.0" width="4.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="731.4" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.32%)</title><rect x="729.0" y="1523.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.0" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.32%)</title><rect x="729.0" y="1507.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="732.0" y="1518.0"></text>
</g>
<g>
<title>sys_futex (18 samples, 0.30%)</title><rect x="729.2" y="1491.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.2" y="1502.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.28%)</title><rect x="729.2" y="1475.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.2" y="1486.0"></text>
</g>
<g>
<title>futex_wait (16 samples, 0.27%)</title><rect x="729.4" y="1459.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="732.4" y="1470.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.18%)</title><rect x="729.6" y="1443.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.6" y="1454.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.12%)</title><rect x="729.6" y="1427.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.6" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="729.6" y="1411.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.6" y="1422.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="731.2" y="1427.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.2" y="1438.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="731.2" y="1411.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.2" y="1422.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="731.2" y="1395.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.2" y="1406.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="731.8" y="1443.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="734.8" y="1454.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (18 samples, 0.30%)</title><rect x="733.0" y="1555.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="736.0" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (17 samples, 0.28%)</title><rect x="733.2" y="1539.0" width="3.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="736.2" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="735.5" y="1523.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.5" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="735.5" y="1507.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.5" y="1518.0"></text>
</g>
<g>
<title>sys_gettimeofday (2 samples, 0.03%)</title><rect x="736.1" y="1491.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.1" y="1502.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.03%)</title><rect x="736.1" y="1475.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.1" y="1486.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.18%)</title><rect x="736.5" y="1603.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="739.5" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="736.7" y="1587.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.7" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="736.7" y="1571.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.7" y="1582.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.17%)</title><rect x="736.7" y="1555.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.7" y="1566.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.17%)</title><rect x="736.7" y="1539.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.7" y="1550.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.17%)</title><rect x="736.7" y="1523.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.7" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.15%)</title><rect x="736.9" y="1507.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.9" y="1518.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.15%)</title><rect x="736.9" y="1491.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.9" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.15%)</title><rect x="736.9" y="1475.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.9" y="1486.0"></text>
</g>
<g>
<title>start_thread (2,287 samples, 38.21%)</title><rect x="738.9" y="1603.0" width="450.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="741.9" y="1614.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2,287 samples, 38.21%)</title><rect x="738.9" y="1587.0" width="450.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="741.9" y="1598.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (2,287 samples, 38.21%)</title><rect x="738.9" y="1571.0" width="450.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="741.9" y="1582.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (38 samples, 0.63%)</title><rect x="738.9" y="1555.0" width="7.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.9" y="1566.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (36 samples, 0.60%)</title><rect x="738.9" y="1539.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="741.9" y="1550.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (35 samples, 0.58%)</title><rect x="738.9" y="1523.0" width="6.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="741.9" y="1534.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (34 samples, 0.57%)</title><rect x="739.1" y="1507.0" width="6.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="742.1" y="1518.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (33 samples, 0.55%)</title><rect x="739.3" y="1491.0" width="6.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="742.3" y="1502.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (9 samples, 0.15%)</title><rect x="740.5" y="1475.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.5" y="1486.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (4 samples, 0.07%)</title><rect x="741.5" y="1459.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="744.5" y="1470.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.05%)</title><rect x="742.3" y="1475.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="745.3" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (11 samples, 0.18%)</title><rect x="743.2" y="1475.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="746.2" y="1486.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.03%)</title><rect x="746.0" y="1539.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="749.0" y="1550.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.03%)</title><rect x="746.0" y="1523.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="749.0" y="1534.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="746.0" y="1507.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="749.0" y="1518.0"></text>
</g>
<g>
<title>GangWorker::loop() (334 samples, 5.58%)</title><rect x="746.4" y="1555.0" width="65.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="749.4" y="1566.0">GangWor..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (12 samples, 0.20%)</title><rect x="746.6" y="1539.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.6" y="1550.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (10 samples, 0.17%)</title><rect x="747.0" y="1523.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="750.0" y="1534.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (9 samples, 0.15%)</title><rect x="747.2" y="1507.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="750.2" y="1518.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (3 samples, 0.05%)</title><rect x="747.4" y="1491.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="750.4" y="1502.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.03%)</title><rect x="747.6" y="1475.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="750.6" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="747.6" y="1459.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="750.6" y="1470.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.03%)</title><rect x="747.6" y="1443.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="750.6" y="1454.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.08%)</title><rect x="748.0" y="1491.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.0" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.07%)</title><rect x="748.2" y="1475.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="751.2" y="1486.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.03%)</title><rect x="748.4" y="1459.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="751.4" y="1470.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (5 samples, 0.08%)</title><rect x="749.0" y="1539.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="752.0" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (5 samples, 0.08%)</title><rect x="749.0" y="1523.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="752.0" y="1534.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (4 samples, 0.07%)</title><rect x="749.9" y="1539.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="752.9" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (4 samples, 0.07%)</title><rect x="749.9" y="1523.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="752.9" y="1534.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (4 samples, 0.07%)</title><rect x="749.9" y="1507.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="752.9" y="1518.0"></text>
</g>
<g>
<title>G1CMBitMap::clear_range(MemRegion) (4 samples, 0.07%)</title><rect x="749.9" y="1491.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="752.9" y="1502.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (4 samples, 0.07%)</title><rect x="749.9" y="1475.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="752.9" y="1486.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (297 samples, 4.96%)</title><rect x="750.7" y="1539.0" width="58.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="753.7" y="1550.0">G1ParT..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (46 samples, 0.77%)</title><rect x="750.7" y="1523.0" width="9.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="753.7" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (35 samples, 0.58%)</title><rect x="750.7" y="1507.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="753.7" y="1518.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (9 samples, 0.15%)</title><rect x="752.1" y="1491.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="755.1" y="1502.0"></text>
</g>
<g>
<title>page_fault (6 samples, 0.10%)</title><rect x="752.7" y="1475.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="755.7" y="1486.0"></text>
</g>
<g>
<title>do_page_fault (6 samples, 0.10%)</title><rect x="752.7" y="1459.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.7" y="1470.0"></text>
</g>
<g>
<title>__do_page_fault (6 samples, 0.10%)</title><rect x="752.7" y="1443.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.7" y="1454.0"></text>
</g>
<g>
<title>handle_mm_fault (5 samples, 0.08%)</title><rect x="752.9" y="1427.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="755.9" y="1438.0"></text>
</g>
<g>
<title>__handle_mm_fault (5 samples, 0.08%)</title><rect x="752.9" y="1411.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.9" y="1422.0"></text>
</g>
<g>
<title>alloc_pages_vma (3 samples, 0.05%)</title><rect x="753.1" y="1395.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.1" y="1406.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="753.1" y="1379.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.1" y="1390.0"></text>
</g>
<g>
<title>clear_page_erms (3 samples, 0.05%)</title><rect x="753.1" y="1363.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.1" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (19 samples, 0.32%)</title><rect x="753.9" y="1491.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="756.9" y="1502.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.08%)</title><rect x="756.6" y="1475.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="759.6" y="1486.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (4 samples, 0.07%)</title><rect x="757.6" y="1507.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="760.6" y="1518.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.12%)</title><rect x="758.4" y="1507.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="761.4" y="1518.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (141 samples, 2.36%)</title><rect x="759.8" y="1523.0" width="27.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.8" y="1534.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (141 samples, 2.36%)</title><rect x="759.8" y="1507.0" width="27.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="762.8" y="1518.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (122 samples, 2.04%)</title><rect x="759.8" y="1491.0" width="24.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="762.8" y="1502.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (122 samples, 2.04%)</title><rect x="759.8" y="1475.0" width="24.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="762.8" y="1486.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (122 samples, 2.04%)</title><rect x="759.8" y="1459.0" width="24.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="762.8" y="1470.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (109 samples, 1.82%)</title><rect x="759.8" y="1443.0" width="21.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="762.8" y="1454.0">G..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (41 samples, 0.69%)</title><rect x="764.1" y="1427.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="767.1" y="1438.0"></text>
</g>
<g>
<title>page_fault (16 samples, 0.27%)</title><rect x="769.1" y="1411.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.1" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (16 samples, 0.27%)</title><rect x="769.1" y="1395.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.1" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (16 samples, 0.27%)</title><rect x="769.1" y="1379.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="772.1" y="1390.0"></text>
</g>
<g>
<title>handle_mm_fault (11 samples, 0.18%)</title><rect x="769.9" y="1363.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.9" y="1374.0"></text>
</g>
<g>
<title>__handle_mm_fault (11 samples, 0.18%)</title><rect x="769.9" y="1347.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="772.9" y="1358.0"></text>
</g>
<g>
<title>alloc_pages_vma (7 samples, 0.12%)</title><rect x="769.9" y="1331.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.9" y="1342.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (7 samples, 0.12%)</title><rect x="769.9" y="1315.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.9" y="1326.0"></text>
</g>
<g>
<title>clear_page_erms (7 samples, 0.12%)</title><rect x="769.9" y="1299.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="772.9" y="1310.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="771.4" y="1331.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="774.4" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (46 samples, 0.77%)</title><rect x="772.2" y="1427.0" width="9.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="775.2" y="1438.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (2 samples, 0.03%)</title><rect x="777.1" y="1411.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="780.1" y="1422.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.07%)</title><rect x="777.9" y="1411.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="780.9" y="1422.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.07%)</title><rect x="777.9" y="1395.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.9" y="1406.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.07%)</title><rect x="777.9" y="1379.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.9" y="1390.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="778.1" y="1363.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.1" y="1374.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="778.1" y="1347.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.1" y="1358.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (11 samples, 0.18%)</title><rect x="778.7" y="1411.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="781.7" y="1422.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (13 samples, 0.22%)</title><rect x="781.3" y="1443.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="784.3" y="1454.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (13 samples, 0.22%)</title><rect x="781.3" y="1427.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.3" y="1438.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (4 samples, 0.07%)</title><rect x="782.1" y="1411.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="785.1" y="1422.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.05%)</title><rect x="782.3" y="1395.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="785.3" y="1406.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.05%)</title><rect x="783.3" y="1411.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="786.3" y="1422.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (19 samples, 0.32%)</title><rect x="783.9" y="1491.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="786.9" y="1502.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (19 samples, 0.32%)</title><rect x="783.9" y="1475.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="786.9" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (17 samples, 0.28%)</title><rect x="783.9" y="1459.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="786.9" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="785.4" y="1443.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="788.4" y="1454.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="785.4" y="1427.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.4" y="1438.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="785.4" y="1411.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.4" y="1422.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="785.4" y="1395.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.4" y="1406.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="785.4" y="1379.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.4" y="1390.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="785.4" y="1363.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.4" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.12%)</title><rect x="785.8" y="1443.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="788.8" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="786.8" y="1427.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="789.8" y="1438.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (2 samples, 0.03%)</title><rect x="787.2" y="1459.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="790.2" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.03%)</title><rect x="787.2" y="1443.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="790.2" y="1454.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (100 samples, 1.67%)</title><rect x="787.6" y="1523.0" width="19.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="790.6" y="1534.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (100 samples, 1.67%)</title><rect x="787.6" y="1507.0" width="19.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="790.6" y="1518.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (100 samples, 1.67%)</title><rect x="787.6" y="1491.0" width="19.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="790.6" y="1502.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (100 samples, 1.67%)</title><rect x="787.6" y="1475.0" width="19.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="790.6" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (74 samples, 1.24%)</title><rect x="787.8" y="1459.0" width="14.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="790.8" y="1470.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (56 samples, 0.94%)</title><rect x="788.8" y="1443.0" width="11.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="791.8" y="1454.0"></text>
</g>
<g>
<title>page_fault (35 samples, 0.58%)</title><rect x="792.9" y="1427.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="795.9" y="1438.0"></text>
</g>
<g>
<title>do_page_fault (35 samples, 0.58%)</title><rect x="792.9" y="1411.0" width="6.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.9" y="1422.0"></text>
</g>
<g>
<title>__do_page_fault (35 samples, 0.58%)</title><rect x="792.9" y="1395.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="795.9" y="1406.0"></text>
</g>
<g>
<title>handle_mm_fault (25 samples, 0.42%)</title><rect x="794.7" y="1379.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="797.7" y="1390.0"></text>
</g>
<g>
<title>__handle_mm_fault (24 samples, 0.40%)</title><rect x="794.9" y="1363.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.9" y="1374.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="794.9" y="1347.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.9" y="1358.0"></text>
</g>
<g>
<title>alloc_pages_vma (20 samples, 0.33%)</title><rect x="795.3" y="1347.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.3" y="1358.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (19 samples, 0.32%)</title><rect x="795.3" y="1331.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="798.3" y="1342.0"></text>
</g>
<g>
<title>clear_page_erms (17 samples, 0.28%)</title><rect x="795.3" y="1315.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="798.3" y="1326.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="798.6" y="1315.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="801.6" y="1326.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="799.2" y="1347.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="802.2" y="1358.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (13 samples, 0.22%)</title><rect x="799.8" y="1443.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="802.8" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.07%)</title><rect x="801.6" y="1427.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.6" y="1438.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (2 samples, 0.03%)</title><rect x="802.4" y="1459.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="805.4" y="1470.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (20 samples, 0.33%)</title><rect x="802.8" y="1459.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="805.8" y="1470.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.07%)</title><rect x="803.6" y="1443.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.6" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="804.4" y="1443.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="807.4" y="1454.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (7 samples, 0.12%)</title><rect x="804.9" y="1443.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="807.9" y="1454.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="805.7" y="1427.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="808.7" y="1438.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="806.9" y="1459.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="809.9" y="1470.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (10 samples, 0.17%)</title><rect x="807.3" y="1523.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.3" y="1534.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (7 samples, 0.12%)</title><rect x="807.5" y="1507.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="810.5" y="1518.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.10%)</title><rect x="807.7" y="1491.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="810.7" y="1502.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (6 samples, 0.10%)</title><rect x="807.7" y="1475.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="810.7" y="1486.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (4 samples, 0.07%)</title><rect x="807.7" y="1459.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="810.7" y="1470.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (3 samples, 0.05%)</title><rect x="807.9" y="1443.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="810.9" y="1454.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="807.9" y="1427.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.9" y="1438.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="807.9" y="1411.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="810.9" y="1422.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (6 samples, 0.10%)</title><rect x="809.3" y="1539.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="812.3" y="1550.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (2 samples, 0.03%)</title><rect x="809.3" y="1523.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="812.3" y="1534.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (2 samples, 0.03%)</title><rect x="809.3" y="1507.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="812.3" y="1518.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (6 samples, 0.10%)</title><rect x="810.5" y="1539.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="813.5" y="1550.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (6 samples, 0.10%)</title><rect x="810.5" y="1523.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="813.5" y="1534.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.08%)</title><rect x="810.5" y="1507.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="813.5" y="1518.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="811.1" y="1491.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="814.1" y="1502.0"></text>
</g>
<g>
<title>JavaThread::run() (1,910 samples, 31.91%)</title><rect x="812.2" y="1555.0" width="376.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="815.2" y="1566.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1,910 samples, 31.91%)</title><rect x="812.2" y="1539.0" width="376.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="815.2" y="1550.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1,854 samples, 30.98%)</title><rect x="812.2" y="1523.0" width="365.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="815.2" y="1534.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1,847 samples, 30.86%)</title><rect x="812.2" y="1507.0" width="364.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.2" y="1518.0">CompileBroker::invoke_compiler_on_method(CompileTa..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1,572 samples, 26.27%)</title><rect x="812.2" y="1491.0" width="310.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="815.2" y="1502.0">C2Compiler::compile_method(ciEnv*, ciMetho..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1,572 samples, 26.27%)</title><rect x="812.2" y="1475.0" width="310.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="815.2" y="1486.0">Compile::Compile(ciEnv*, C2Compiler*, ciMe..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (6 samples, 0.10%)</title><rect x="812.2" y="1459.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="815.2" y="1470.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (6 samples, 0.10%)</title><rect x="812.2" y="1443.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="815.2" y="1454.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (6 samples, 0.10%)</title><rect x="812.2" y="1427.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="815.2" y="1438.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (6 samples, 0.10%)</title><rect x="812.2" y="1411.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="815.2" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (6 samples, 0.10%)</title><rect x="812.2" y="1395.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="815.2" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.08%)</title><rect x="812.2" y="1379.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="815.2" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.08%)</title><rect x="812.2" y="1363.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="815.2" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.08%)</title><rect x="812.2" y="1347.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="815.2" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.07%)</title><rect x="812.4" y="1331.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="815.4" y="1342.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.07%)</title><rect x="812.4" y="1315.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="815.4" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.07%)</title><rect x="812.4" y="1299.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="815.4" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.05%)</title><rect x="812.6" y="1283.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="815.6" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="812.8" y="1267.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.8" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="812.8" y="1251.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="815.8" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="812.8" y="1235.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="815.8" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="812.8" y="1219.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="815.8" y="1230.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (918 samples, 15.34%)</title><rect x="813.4" y="1459.0" width="181.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="816.4" y="1470.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (31 samples, 0.52%)</title><rect x="813.6" y="1443.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="816.6" y="1454.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (5 samples, 0.08%)</title><rect x="813.6" y="1427.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="816.6" y="1438.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (18 samples, 0.30%)</title><rect x="814.6" y="1427.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="817.6" y="1438.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (9 samples, 0.15%)</title><rect x="816.2" y="1411.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="819.2" y="1422.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (8 samples, 0.13%)</title><rect x="816.4" y="1395.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="819.4" y="1406.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (8 samples, 0.13%)</title><rect x="818.2" y="1427.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="821.2" y="1438.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (7 samples, 0.12%)</title><rect x="818.4" y="1411.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="821.4" y="1422.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (5 samples, 0.08%)</title><rect x="818.6" y="1395.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="821.6" y="1406.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (19 samples, 0.32%)</title><rect x="819.7" y="1443.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="822.7" y="1454.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (4 samples, 0.07%)</title><rect x="820.3" y="1427.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="823.3" y="1438.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (9 samples, 0.15%)</title><rect x="821.3" y="1427.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="824.3" y="1438.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (8 samples, 0.13%)</title><rect x="821.3" y="1411.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="824.3" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (6 samples, 0.10%)</title><rect x="821.7" y="1395.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="824.7" y="1406.0"></text>
</g>
<g>
<title>Matcher::match() (77 samples, 1.29%)</title><rect x="823.9" y="1443.0" width="15.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="826.9" y="1454.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.05%)</title><rect x="823.9" y="1427.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="826.9" y="1438.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (11 samples, 0.18%)</title><rect x="824.7" y="1427.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="827.7" y="1438.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (57 samples, 0.95%)</title><rect x="827.0" y="1427.0" width="11.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="830.0" y="1438.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (3 samples, 0.05%)</title><rect x="828.8" y="1411.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="831.8" y="1422.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (13 samples, 0.22%)</title><rect x="829.4" y="1411.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="832.4" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.03%)</title><rect x="832.0" y="1411.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="835.0" y="1422.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="832.0" y="1395.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="835.0" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (28 samples, 0.47%)</title><rect x="832.4" y="1411.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="835.4" y="1422.0"></text>
</g>
<g>
<title>Arena::set_size_in_bytes(unsigned long) (2 samples, 0.03%)</title><rect x="832.5" y="1395.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="835.5" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (8 samples, 0.13%)</title><rect x="833.3" y="1395.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="836.3" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (6 samples, 0.10%)</title><rect x="833.3" y="1379.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.3" y="1390.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.07%)</title><rect x="833.5" y="1363.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.5" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (14 samples, 0.23%)</title><rect x="834.9" y="1395.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="837.9" y="1406.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (7 samples, 0.12%)</title><rect x="835.1" y="1379.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="838.1" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.05%)</title><rect x="835.3" y="1363.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.3" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.03%)</title><rect x="835.3" y="1347.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="838.3" y="1358.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (5 samples, 0.08%)</title><rect x="836.7" y="1379.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="839.7" y="1390.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.03%)</title><rect x="838.3" y="1427.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="841.3" y="1438.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (5 samples, 0.08%)</title><rect x="839.1" y="1443.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="842.1" y="1454.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (4 samples, 0.07%)</title><rect x="839.1" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="842.1" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (100 samples, 1.67%)</title><rect x="840.0" y="1443.0" width="19.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="843.0" y="1454.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (2 samples, 0.03%)</title><rect x="840.0" y="1427.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="843.0" y="1438.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (97 samples, 1.62%)</title><rect x="840.6" y="1427.0" width="19.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="843.6" y="1438.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="840.6" y="1411.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="843.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.05%)</title><rect x="842.2" y="1411.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="845.2" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (2 samples, 0.03%)</title><rect x="842.4" y="1395.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="845.4" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (18 samples, 0.30%)</title><rect x="842.8" y="1411.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="845.8" y="1422.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.03%)</title><rect x="843.4" y="1395.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="846.4" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (6 samples, 0.10%)</title><rect x="843.8" y="1395.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="846.8" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (6 samples, 0.10%)</title><rect x="845.0" y="1395.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="848.0" y="1406.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (2 samples, 0.03%)</title><rect x="845.4" y="1379.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="848.4" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (22 samples, 0.37%)</title><rect x="846.4" y="1411.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="849.4" y="1422.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (2 samples, 0.03%)</title><rect x="848.3" y="1395.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="851.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (5 samples, 0.08%)</title><rect x="848.7" y="1395.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="851.7" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (3 samples, 0.05%)</title><rect x="849.7" y="1395.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="852.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (2 samples, 0.03%)</title><rect x="850.3" y="1395.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="853.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (3 samples, 0.05%)</title><rect x="850.7" y="1411.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="853.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (9 samples, 0.15%)</title><rect x="851.5" y="1411.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="854.5" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.05%)</title><rect x="852.7" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="855.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (4 samples, 0.07%)</title><rect x="853.3" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="856.3" y="1422.0"></text>
</g>
<g>
<title>GrowableArray&lt;unsigned int&gt;::raw_at_put_grow(int, unsigned int const&amp;, unsigned int const&amp;) (2 samples, 0.03%)</title><rect x="853.6" y="1395.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="856.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (6 samples, 0.10%)</title><rect x="854.0" y="1411.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="857.0" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.03%)</title><rect x="854.8" y="1395.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="857.8" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (18 samples, 0.30%)</title><rect x="855.4" y="1411.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="858.4" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.05%)</title><rect x="857.0" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="860.0" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (5 samples, 0.08%)</title><rect x="857.6" y="1395.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="860.6" y="1406.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="858.0" y="1379.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="861.0" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (678 samples, 11.33%)</title><rect x="860.0" y="1443.0" width="133.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="863.0" y="1454.0">PhaseChaitin::Reg..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (7 samples, 0.12%)</title><rect x="860.3" y="1427.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="863.3" y="1438.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="862.1" y="1427.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="865.1" y="1438.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (18 samples, 0.30%)</title><rect x="862.7" y="1427.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="865.7" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (35 samples, 0.58%)</title><rect x="866.3" y="1427.0" width="6.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="869.3" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.10%)</title><rect x="868.2" y="1411.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="871.2" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.03%)</title><rect x="869.4" y="1411.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="872.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (14 samples, 0.23%)</title><rect x="869.8" y="1411.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="872.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="871.2" y="1395.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="874.2" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.08%)</title><rect x="871.6" y="1395.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="874.6" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (3 samples, 0.05%)</title><rect x="872.6" y="1411.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="875.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (24 samples, 0.40%)</title><rect x="873.2" y="1427.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="876.2" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="873.8" y="1411.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="876.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.07%)</title><rect x="874.2" y="1411.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="877.2" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (15 samples, 0.25%)</title><rect x="874.9" y="1411.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="877.9" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.13%)</title><rect x="876.3" y="1395.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="879.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (72 samples, 1.20%)</title><rect x="877.9" y="1427.0" width="14.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="880.9" y="1438.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.03%)</title><rect x="887.8" y="1411.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.8" y="1422.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.05%)</title><rect x="888.1" y="1411.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="891.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (2 samples, 0.03%)</title><rect x="889.7" y="1411.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="892.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::clone_projs(Block*, unsigned int, Node*, Node*, unsigned int&amp;) (2 samples, 0.03%)</title><rect x="889.7" y="1395.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="892.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (5 samples, 0.08%)</title><rect x="890.1" y="1411.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (3 samples, 0.05%)</title><rect x="890.3" y="1395.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="893.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (156 samples, 2.61%)</title><rect x="892.3" y="1427.0" width="30.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="895.3" y="1438.0">Ph..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (5 samples, 0.08%)</title><rect x="897.4" y="1411.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="900.4" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.08%)</title><rect x="898.4" y="1411.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="901.4" y="1422.0"></text>
</g>
<g>
<title>Node::jvms() const (3 samples, 0.05%)</title><rect x="899.4" y="1411.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (18 samples, 0.30%)</title><rect x="900.0" y="1411.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.0" y="1422.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.05%)</title><rect x="902.3" y="1395.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="905.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.03%)</title><rect x="902.9" y="1395.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="905.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.03%)</title><rect x="903.5" y="1411.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="906.5" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (55 samples, 0.92%)</title><rect x="904.1" y="1411.0" width="10.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="907.1" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (16 samples, 0.27%)</title><rect x="911.8" y="1395.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="914.8" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (33 samples, 0.55%)</title><rect x="915.0" y="1411.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="918.0" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="917.1" y="1395.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="920.1" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (7 samples, 0.12%)</title><rect x="917.5" y="1395.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="920.5" y="1406.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (13 samples, 0.22%)</title><rect x="918.9" y="1395.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="921.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_node_if_not_used(Block*, unsigned int, Node*, unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="921.5" y="1411.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.5" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (4 samples, 0.07%)</title><rect x="921.9" y="1411.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (16 samples, 0.27%)</title><rect x="923.0" y="1427.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (14 samples, 0.23%)</title><rect x="923.4" y="1411.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="926.4" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.10%)</title><rect x="925.0" y="1395.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="928.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (5 samples, 0.08%)</title><rect x="926.2" y="1427.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="929.2" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (3 samples, 0.05%)</title><rect x="927.2" y="1427.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.2" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (64 samples, 1.07%)</title><rect x="928.0" y="1427.0" width="12.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.0" y="1438.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (2 samples, 0.03%)</title><rect x="933.3" y="1411.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="936.3" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (25 samples, 0.42%)</title><rect x="934.1" y="1411.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="937.1" y="1422.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (4 samples, 0.07%)</title><rect x="939.0" y="1411.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="942.0" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.03%)</title><rect x="939.8" y="1411.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.8" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (18 samples, 0.30%)</title><rect x="940.6" y="1427.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="943.6" y="1438.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.08%)</title><rect x="942.2" y="1411.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="945.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.03%)</title><rect x="943.2" y="1411.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="946.2" y="1422.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (2 samples, 0.03%)</title><rect x="943.6" y="1411.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="946.6" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (16 samples, 0.27%)</title><rect x="944.1" y="1427.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="947.1" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (93 samples, 1.55%)</title><rect x="947.3" y="1427.0" width="18.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="950.3" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (34 samples, 0.57%)</title><rect x="957.4" y="1411.0" width="6.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="960.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (4 samples, 0.07%)</title><rect x="963.1" y="1395.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="966.1" y="1406.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (8 samples, 0.13%)</title><rect x="964.1" y="1411.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="967.1" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (7 samples, 0.12%)</title><rect x="965.6" y="1427.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.6" y="1438.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (25 samples, 0.42%)</title><rect x="967.0" y="1427.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="970.0" y="1438.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (23 samples, 0.38%)</title><rect x="967.4" y="1411.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="970.4" y="1422.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (9 samples, 0.15%)</title><rect x="968.0" y="1395.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="971.0" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.07%)</title><rect x="969.0" y="1379.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="972.0" y="1390.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (5 samples, 0.08%)</title><rect x="970.4" y="1395.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (2 samples, 0.03%)</title><rect x="971.4" y="1395.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (21 samples, 0.35%)</title><rect x="971.9" y="1427.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="974.9" y="1438.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="973.7" y="1411.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="976.7" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (10 samples, 0.17%)</title><rect x="974.1" y="1411.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (13 samples, 0.22%)</title><rect x="976.1" y="1427.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="979.1" y="1438.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="977.1" y="1411.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="980.1" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.08%)</title><rect x="977.7" y="1411.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="980.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (7 samples, 0.12%)</title><rect x="978.6" y="1427.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="981.6" y="1438.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.08%)</title><rect x="979.0" y="1411.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="982.0" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (58 samples, 0.97%)</title><rect x="980.0" y="1427.0" width="11.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="983.0" y="1438.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (2 samples, 0.03%)</title><rect x="986.3" y="1411.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.3" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (4 samples, 0.07%)</title><rect x="986.7" y="1411.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="989.7" y="1422.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (20 samples, 0.33%)</title><rect x="987.5" y="1411.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="990.5" y="1422.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="989.9" y="1395.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="992.9" y="1406.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (2 samples, 0.03%)</title><rect x="990.3" y="1395.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="993.3" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.07%)</title><rect x="990.7" y="1395.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="993.7" y="1406.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.03%)</title><rect x="991.7" y="1427.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="994.7" y="1438.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.05%)</title><rect x="992.6" y="1427.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="995.6" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (415 samples, 6.93%)</title><rect x="994.4" y="1459.0" width="81.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.4" y="1470.0">Compile::..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.08%)</title><rect x="994.4" y="1443.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="997.4" y="1454.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (5 samples, 0.08%)</title><rect x="994.4" y="1427.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.4" y="1438.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.253] (3 samples, 0.05%)</title><rect x="994.8" y="1411.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.8" y="1422.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (2 samples, 0.03%)</title><rect x="995.0" y="1395.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.0" y="1406.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.257] (12 samples, 0.20%)</title><rect x="995.6" y="1443.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="998.6" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.07%)</title><rect x="996.6" y="1427.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="999.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.07%)</title><rect x="996.6" y="1411.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="999.6" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="997.0" y="1395.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1000.0" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (2 samples, 0.03%)</title><rect x="997.0" y="1379.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.0" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="997.0" y="1363.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1000.0" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="997.0" y="1347.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.0" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="997.0" y="1331.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1000.0" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="997.0" y="1315.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.0" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (10 samples, 0.17%)</title><rect x="998.0" y="1443.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.0" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (8 samples, 0.13%)</title><rect x="998.4" y="1427.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1001.4" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (4 samples, 0.07%)</title><rect x="998.8" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.8" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (3 samples, 0.05%)</title><rect x="998.8" y="1395.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1001.8" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (2 samples, 0.03%)</title><rect x="999.0" y="1379.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.0" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1411.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.5" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1395.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.5" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1379.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.5" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1363.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.5" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1347.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.5" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="999.5" y="1331.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1002.5" y="1342.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (17 samples, 0.28%)</title><rect x="999.9" y="1443.0" width="3.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.9" y="1454.0"></text>
</g>
<g>
<title>CallNode::Value(PhaseGVN*) const (3 samples, 0.05%)</title><rect x="1001.5" y="1427.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1004.5" y="1438.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1002.1" y="1427.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.1" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (8 samples, 0.13%)</title><rect x="1003.3" y="1443.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.3" y="1454.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (8 samples, 0.13%)</title><rect x="1003.3" y="1427.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1006.3" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (4 samples, 0.07%)</title><rect x="1003.9" y="1411.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (260 samples, 4.34%)</title><rect x="1004.9" y="1443.0" width="51.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.9" y="1454.0">Phase..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (6 samples, 0.10%)</title><rect x="1005.5" y="1427.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1008.5" y="1438.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.05%)</title><rect x="1005.5" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.5" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.05%)</title><rect x="1005.5" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1008.5" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1006.1" y="1411.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1009.1" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unswitching(IdealLoopTree*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1006.1" y="1395.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.1" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (5 samples, 0.08%)</title><rect x="1006.6" y="1427.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (4 samples, 0.07%)</title><rect x="1006.8" y="1411.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (3 samples, 0.05%)</title><rect x="1007.0" y="1395.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1010.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.03%)</title><rect x="1007.0" y="1379.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.0" y="1390.0"></text>
</g>
<g>
<title>Node::is_CFG() const (2 samples, 0.03%)</title><rect x="1008.0" y="1427.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (20 samples, 0.33%)</title><rect x="1008.6" y="1427.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.6" y="1438.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (7 samples, 0.12%)</title><rect x="1011.0" y="1411.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1014.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (22 samples, 0.37%)</title><rect x="1012.6" y="1427.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (5 samples, 0.08%)</title><rect x="1015.9" y="1411.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1018.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (108 samples, 1.80%)</title><rect x="1016.9" y="1427.0" width="21.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1019.9" y="1438.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (83 samples, 1.39%)</title><rect x="1021.6" y="1411.0" width="16.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1024.6" y="1422.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (2 samples, 0.03%)</title><rect x="1024.2" y="1395.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1027.2" y="1406.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (2 samples, 0.03%)</title><rect x="1024.8" y="1395.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1027.8" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.05%)</title><rect x="1025.4" y="1395.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1028.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (59 samples, 0.99%)</title><rect x="1026.0" y="1395.0" width="11.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (4 samples, 0.07%)</title><rect x="1027.1" y="1379.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1030.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1027.3" y="1363.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1030.3" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (48 samples, 0.80%)</title><rect x="1028.1" y="1379.0" width="9.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1031.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1037.6" y="1395.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (22 samples, 0.37%)</title><rect x="1038.2" y="1427.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.2" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (4 samples, 0.07%)</title><rect x="1041.7" y="1411.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1044.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (34 samples, 0.57%)</title><rect x="1042.9" y="1427.0" width="6.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1045.9" y="1438.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (3 samples, 0.05%)</title><rect x="1044.7" y="1411.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1047.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1044.7" y="1395.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::spinup(Node*, Node*, Node*, Node*, Node*, small_cache*) [clone .part.41] (2 samples, 0.03%)</title><rect x="1044.7" y="1379.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1047.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (6 samples, 0.10%)</title><rect x="1045.3" y="1411.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.03%)</title><rect x="1046.1" y="1395.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (15 samples, 0.25%)</title><rect x="1046.5" y="1411.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.5" y="1422.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (3 samples, 0.05%)</title><rect x="1047.1" y="1395.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.1" y="1406.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (2 samples, 0.03%)</title><rect x="1047.3" y="1379.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.03%)</title><rect x="1048.2" y="1395.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1051.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1048.8" y="1395.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1051.8" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (26 samples, 0.43%)</title><rect x="1049.6" y="1427.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.6" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (23 samples, 0.38%)</title><rect x="1050.2" y="1411.0" width="4.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.2" y="1422.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1051.6" y="1395.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1054.6" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1052.2" y="1395.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1055.2" y="1406.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (4 samples, 0.07%)</title><rect x="1052.8" y="1395.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.8" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.05%)</title><rect x="1053.6" y="1395.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1056.6" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (3 samples, 0.05%)</title><rect x="1053.6" y="1379.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1056.6" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1363.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1056.6" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1347.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.6" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1331.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.6" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1315.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.6" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1299.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.6" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1283.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.6" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1053.6" y="1267.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.6" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1053.6" y="1251.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.6" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1053.6" y="1235.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.6" y="1246.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (2 samples, 0.03%)</title><rect x="1054.4" y="1395.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.4" y="1406.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (4 samples, 0.07%)</title><rect x="1054.7" y="1427.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1057.7" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.03%)</title><rect x="1056.1" y="1443.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1059.1" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (81 samples, 1.35%)</title><rect x="1056.5" y="1443.0" width="16.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1059.5" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (76 samples, 1.27%)</title><rect x="1056.9" y="1427.0" width="15.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1059.9" y="1438.0"></text>
</g>
<g>
<title>AddLNode::Identity(PhaseGVN*) (2 samples, 0.03%)</title><rect x="1057.9" y="1411.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.9" y="1422.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (9 samples, 0.15%)</title><rect x="1059.7" y="1411.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1062.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1060.5" y="1395.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1063.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1060.5" y="1379.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1063.5" y="1390.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (7 samples, 0.12%)</title><rect x="1061.8" y="1411.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.8" y="1422.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (4 samples, 0.07%)</title><rect x="1062.0" y="1395.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1065.0" y="1406.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (2 samples, 0.03%)</title><rect x="1062.2" y="1379.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1065.2" y="1390.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.03%)</title><rect x="1062.8" y="1395.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1065.8" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (6 samples, 0.10%)</title><rect x="1063.6" y="1411.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.6" y="1422.0"></text>
</g>
<g>
<title>NodeHash::grow() (3 samples, 0.05%)</title><rect x="1064.2" y="1395.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1067.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (6 samples, 0.10%)</title><rect x="1065.0" y="1411.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1068.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (3 samples, 0.05%)</title><rect x="1065.6" y="1395.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1068.6" y="1406.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.03%)</title><rect x="1065.8" y="1379.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1068.8" y="1390.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (5 samples, 0.08%)</title><rect x="1066.2" y="1411.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.2" y="1422.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (2 samples, 0.03%)</title><rect x="1066.6" y="1395.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.6" y="1406.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1067.4" y="1411.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.4" y="1422.0"></text>
</g>
<g>
<title>PhiNode::is_diamond_phi(bool) const (2 samples, 0.03%)</title><rect x="1068.0" y="1411.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1071.0" y="1422.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (6 samples, 0.10%)</title><rect x="1068.5" y="1411.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1071.5" y="1422.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (8 samples, 0.13%)</title><rect x="1069.7" y="1411.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.7" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.152] (6 samples, 0.10%)</title><rect x="1069.7" y="1395.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.7" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.10%)</title><rect x="1069.7" y="1379.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.7" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.10%)</title><rect x="1069.7" y="1363.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1072.7" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.10%)</title><rect x="1069.7" y="1347.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1072.7" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.10%)</title><rect x="1069.7" y="1331.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.7" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1315.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.7" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1299.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.7" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1283.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.7" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1267.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1072.7" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1251.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.7" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.08%)</title><rect x="1069.7" y="1235.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.7" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.07%)</title><rect x="1069.7" y="1219.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1072.7" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.07%)</title><rect x="1069.7" y="1203.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.7" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.07%)</title><rect x="1069.7" y="1187.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1072.7" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1069.7" y="1171.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1072.7" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.05%)</title><rect x="1069.7" y="1155.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1072.7" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1069.7" y="1139.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.7" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1069.7" y="1123.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.7" y="1134.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.144] (2 samples, 0.03%)</title><rect x="1069.7" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1072.7" y="1118.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1069.7" y="1091.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.7" y="1102.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1070.9" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1073.9" y="1406.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (2 samples, 0.03%)</title><rect x="1070.9" y="1379.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1073.9" y="1390.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (11 samples, 0.18%)</title><rect x="1072.5" y="1443.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.5" y="1454.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.13%)</title><rect x="1072.5" y="1427.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.5" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.10%)</title><rect x="1072.9" y="1411.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.9" y="1422.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (2 samples, 0.03%)</title><rect x="1074.1" y="1427.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1077.1" y="1438.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (8 samples, 0.13%)</title><rect x="1074.7" y="1443.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1077.7" y="1454.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (8 samples, 0.13%)</title><rect x="1074.7" y="1427.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.7" y="1438.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1074.7" y="1411.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.7" y="1422.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (6 samples, 0.10%)</title><rect x="1075.1" y="1411.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1078.1" y="1422.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (10 samples, 0.17%)</title><rect x="1076.4" y="1459.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1079.4" y="1470.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (9 samples, 0.15%)</title><rect x="1076.4" y="1443.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.4" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.15%)</title><rect x="1076.4" y="1427.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1079.4" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.15%)</title><rect x="1076.4" y="1411.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.15%)</title><rect x="1076.4" y="1395.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1079.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.15%)</title><rect x="1076.4" y="1379.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1079.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.15%)</title><rect x="1076.4" y="1363.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1079.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.13%)</title><rect x="1076.4" y="1347.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.4" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.13%)</title><rect x="1076.4" y="1331.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1079.4" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.13%)</title><rect x="1076.4" y="1315.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.13%)</title><rect x="1076.4" y="1299.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.13%)</title><rect x="1076.4" y="1283.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.13%)</title><rect x="1076.4" y="1267.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1079.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1076.4" y="1251.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1079.4" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.10%)</title><rect x="1076.4" y="1235.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1079.4" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.10%)</title><rect x="1076.4" y="1219.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.10%)</title><rect x="1076.4" y="1203.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1079.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.08%)</title><rect x="1076.4" y="1187.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.08%)</title><rect x="1076.4" y="1171.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1079.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1076.4" y="1155.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1079.4" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1076.6" y="1139.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.6" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1076.6" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1079.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1077.0" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.0" y="1166.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1077.0" y="1139.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.0" y="1150.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1077.0" y="1123.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1080.0" y="1134.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1077.0" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1080.0" y="1118.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1077.0" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.0" y="1102.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (2 samples, 0.03%)</title><rect x="1077.0" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_new() (2 samples, 0.03%)</title><rect x="1077.6" y="1251.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1080.6" y="1262.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (2 samples, 0.03%)</title><rect x="1077.6" y="1235.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.6" y="1246.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (2 samples, 0.03%)</title><rect x="1077.6" y="1219.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.6" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (204 samples, 3.41%)</title><rect x="1078.4" y="1459.0" width="40.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.4" y="1470.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (204 samples, 3.41%)</title><rect x="1078.4" y="1443.0" width="40.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.4" y="1454.0">Par..</text>
</g>
<g>
<title>Parse::do_all_blocks() (204 samples, 3.41%)</title><rect x="1078.4" y="1427.0" width="40.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.4" y="1438.0">Par..</text>
</g>
<g>
<title>Parse::do_one_block() (204 samples, 3.41%)</title><rect x="1078.4" y="1411.0" width="40.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.4" y="1422.0">Par..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (204 samples, 3.41%)</title><rect x="1078.4" y="1395.0" width="40.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.4" y="1406.0">Par..</text>
</g>
<g>
<title>Parse::do_call() (196 samples, 3.27%)</title><rect x="1079.0" y="1379.0" width="38.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1082.0" y="1390.0">Par..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.13%)</title><rect x="1079.0" y="1363.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1082.0" y="1374.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.12%)</title><rect x="1079.2" y="1347.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1082.2" y="1358.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.05%)</title><rect x="1079.2" y="1331.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1082.2" y="1342.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (2 samples, 0.03%)</title><rect x="1079.4" y="1315.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1082.4" y="1326.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1079.4" y="1299.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1082.4" y="1310.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.07%)</title><rect x="1079.8" y="1331.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1082.8" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.05%)</title><rect x="1080.0" y="1315.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.0" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.05%)</title><rect x="1080.0" y="1299.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1083.0" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.05%)</title><rect x="1080.0" y="1283.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.0" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.05%)</title><rect x="1080.0" y="1267.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1083.0" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.05%)</title><rect x="1080.0" y="1251.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1083.0" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="1080.0" y="1235.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1083.0" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1080.0" y="1219.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1083.0" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1080.0" y="1203.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.0" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1080.0" y="1187.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.0" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1080.0" y="1171.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.0" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1080.0" y="1155.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.0" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1080.0" y="1139.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1083.0" y="1150.0"></text>
</g>
<g>
<title>GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind) (2 samples, 0.03%)</title><rect x="1080.8" y="1363.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.8" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (135 samples, 2.26%)</title><rect x="1081.6" y="1363.0" width="26.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.6" y="1374.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (135 samples, 2.26%)</title><rect x="1081.6" y="1347.0" width="26.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.6" y="1358.0">P..</text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.03%)</title><rect x="1081.8" y="1331.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1084.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (128 samples, 2.14%)</title><rect x="1082.2" y="1331.0" width="25.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.2" y="1342.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (128 samples, 2.14%)</title><rect x="1082.2" y="1315.0" width="25.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1085.2" y="1326.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (128 samples, 2.14%)</title><rect x="1082.2" y="1299.0" width="25.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.2" y="1310.0">P..</text>
</g>
<g>
<title>Parse::do_call() (120 samples, 2.01%)</title><rect x="1082.9" y="1283.0" width="23.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1085.9" y="1294.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (8 samples, 0.13%)</title><rect x="1082.9" y="1267.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.9" y="1278.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (8 samples, 0.13%)</title><rect x="1082.9" y="1251.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1085.9" y="1262.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.05%)</title><rect x="1082.9" y="1235.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.9" y="1246.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (2 samples, 0.03%)</title><rect x="1083.1" y="1219.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.1" y="1230.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1083.1" y="1203.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1086.1" y="1214.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (2 samples, 0.03%)</title><rect x="1083.1" y="1187.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.1" y="1198.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (5 samples, 0.08%)</title><rect x="1083.5" y="1235.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.5" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.08%)</title><rect x="1083.5" y="1219.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1086.5" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.08%)</title><rect x="1083.5" y="1203.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.5" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.08%)</title><rect x="1083.5" y="1187.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.5" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.08%)</title><rect x="1083.5" y="1171.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1086.5" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (4 samples, 0.07%)</title><rect x="1083.7" y="1155.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.7" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1083.9" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1086.9" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1083.9" y="1123.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.9" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (89 samples, 1.49%)</title><rect x="1084.5" y="1267.0" width="17.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.5" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (88 samples, 1.47%)</title><rect x="1084.5" y="1251.0" width="17.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1087.5" y="1262.0"></text>
</g>
<g>
<title>Parse::build_exits() (2 samples, 0.03%)</title><rect x="1084.5" y="1235.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (82 samples, 1.37%)</title><rect x="1084.9" y="1235.0" width="16.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1087.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (81 samples, 1.35%)</title><rect x="1085.1" y="1219.0" width="16.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (80 samples, 1.34%)</title><rect x="1085.3" y="1203.0" width="15.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1088.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (72 samples, 1.20%)</title><rect x="1085.5" y="1187.0" width="14.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.5" y="1198.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.07%)</title><rect x="1085.5" y="1171.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.5" y="1182.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.05%)</title><rect x="1085.7" y="1155.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.7" y="1166.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.05%)</title><rect x="1085.7" y="1139.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.7" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.05%)</title><rect x="1085.7" y="1123.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.7" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.05%)</title><rect x="1085.7" y="1107.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.7" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.05%)</title><rect x="1085.7" y="1091.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.7" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.05%)</title><rect x="1085.7" y="1075.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.7" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.05%)</title><rect x="1085.7" y="1059.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.7" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="1085.9" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.9" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1085.9" y="1027.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.9" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1085.9" y="1011.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1088.9" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1085.9" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.9" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1085.9" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.9" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1085.9" y="963.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.9" y="974.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1085.9" y="947.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.9" y="958.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="1085.9" y="931.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.9" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.03%)</title><rect x="1085.9" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1088.9" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (56 samples, 0.94%)</title><rect x="1086.5" y="1171.0" width="11.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.5" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (56 samples, 0.94%)</title><rect x="1086.5" y="1155.0" width="11.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (55 samples, 0.92%)</title><rect x="1086.7" y="1139.0" width="10.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1089.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (55 samples, 0.92%)</title><rect x="1086.7" y="1123.0" width="10.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (55 samples, 0.92%)</title><rect x="1086.7" y="1107.0" width="10.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (49 samples, 0.82%)</title><rect x="1086.9" y="1091.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.9" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1086.9" y="1075.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.9" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1086.9" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.9" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (40 samples, 0.67%)</title><rect x="1087.5" y="1075.0" width="7.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.5" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (40 samples, 0.67%)</title><rect x="1087.5" y="1059.0" width="7.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (40 samples, 0.67%)</title><rect x="1087.5" y="1043.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1090.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (40 samples, 0.67%)</title><rect x="1087.5" y="1027.0" width="7.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (40 samples, 0.67%)</title><rect x="1087.5" y="1011.0" width="7.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (37 samples, 0.62%)</title><rect x="1087.7" y="995.0" width="7.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.7" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.05%)</title><rect x="1087.7" y="979.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.7" y="990.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (2 samples, 0.03%)</title><rect x="1087.7" y="963.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1090.7" y="974.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (2 samples, 0.03%)</title><rect x="1087.7" y="947.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1090.7" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (30 samples, 0.50%)</title><rect x="1088.3" y="979.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1091.3" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (30 samples, 0.50%)</title><rect x="1088.3" y="963.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1091.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (27 samples, 0.45%)</title><rect x="1088.9" y="947.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.40%)</title><rect x="1089.3" y="931.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.40%)</title><rect x="1089.3" y="915.0" width="4.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1092.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.35%)</title><rect x="1089.4" y="899.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.4" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.05%)</title><rect x="1089.4" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1092.4" y="894.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1089.6" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1092.6" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.03%)</title><rect x="1089.6" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1092.6" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.03%)</title><rect x="1089.6" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.6" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.03%)</title><rect x="1089.6" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.6" y="830.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1090.2" y="883.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1093.2" y="894.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (2 samples, 0.03%)</title><rect x="1090.2" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.22%)</title><rect x="1090.6" y="883.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.6" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.22%)</title><rect x="1090.6" y="867.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.22%)</title><rect x="1090.6" y="851.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.22%)</title><rect x="1090.6" y="835.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.22%)</title><rect x="1090.6" y="819.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.20%)</title><rect x="1090.6" y="803.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.6" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.17%)</title><rect x="1090.8" y="787.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.17%)</title><rect x="1090.8" y="771.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1093.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.15%)</title><rect x="1090.8" y="755.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1093.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.15%)</title><rect x="1090.8" y="739.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.13%)</title><rect x="1091.0" y="723.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1091.0" y="707.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1091.4" y="691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1091.4" y="675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1091.6" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1094.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (2 samples, 0.03%)</title><rect x="1093.6" y="899.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.6" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1094.2" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1097.2" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1094.2" y="963.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.2" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1094.2" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1094.2" y="931.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1094.2" y="915.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1094.2" y="899.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1097.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1094.2" y="883.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.2" y="894.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1095.4" y="1075.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1095.4" y="1059.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1098.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1095.4" y="1043.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1095.4" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1095.4" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1095.4" y="995.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1095.4" y="979.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1098.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1095.4" y="963.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1095.4" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1098.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1095.4" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1098.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1095.4" y="915.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1098.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1095.4" y="899.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1095.4" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.4" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1095.6" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1095.6" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1095.6" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1095.6" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1095.6" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1098.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1095.6" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.05%)</title><rect x="1096.7" y="1091.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1096.7" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.7" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.13%)</title><rect x="1097.5" y="1171.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.12%)</title><rect x="1097.5" y="1155.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.5" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.12%)</title><rect x="1097.5" y="1139.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1100.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.12%)</title><rect x="1097.5" y="1123.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.12%)</title><rect x="1097.5" y="1107.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1100.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.12%)</title><rect x="1097.5" y="1091.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1097.5" y="1075.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.10%)</title><rect x="1097.5" y="1059.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1100.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.10%)</title><rect x="1097.5" y="1043.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.08%)</title><rect x="1097.7" y="1027.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.08%)</title><rect x="1097.7" y="1011.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1100.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.08%)</title><rect x="1097.7" y="995.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1097.7" y="979.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.7" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1097.7" y="963.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.7" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1097.7" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1097.7" y="931.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1100.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1097.7" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1097.7" y="899.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1100.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1097.7" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1100.7" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1097.9" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1100.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1097.9" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1100.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1097.9" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1100.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1097.9" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1100.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1097.9" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1100.9" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1098.3" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1101.3" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1098.3" y="947.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.3" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1098.3" y="931.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1098.3" y="915.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1098.3" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1101.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1098.3" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1101.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1098.3" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.3" y="878.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1099.1" y="1171.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (4 samples, 0.07%)</title><rect x="1099.7" y="1187.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1102.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (3 samples, 0.05%)</title><rect x="1099.9" y="1171.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1102.9" y="1182.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (3 samples, 0.05%)</title><rect x="1099.9" y="1155.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1102.9" y="1166.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (3 samples, 0.05%)</title><rect x="1099.9" y="1139.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1102.9" y="1150.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (3 samples, 0.05%)</title><rect x="1099.9" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1102.9" y="1134.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (2 samples, 0.03%)</title><rect x="1099.9" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1102.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_new() (2 samples, 0.03%)</title><rect x="1100.7" y="1187.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_exits() (4 samples, 0.07%)</title><rect x="1101.1" y="1235.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1104.1" y="1246.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.03%)</title><rect x="1101.1" y="1219.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.1" y="1230.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (21 samples, 0.35%)</title><rect x="1102.1" y="1267.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.1" y="1278.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (2 samples, 0.03%)</title><rect x="1102.1" y="1251.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.1" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.25%)</title><rect x="1102.5" y="1251.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1105.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.25%)</title><rect x="1102.5" y="1235.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1105.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.25%)</title><rect x="1102.5" y="1219.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1105.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.25%)</title><rect x="1102.5" y="1203.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.25%)</title><rect x="1102.5" y="1187.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1105.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.22%)</title><rect x="1102.5" y="1171.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1105.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.18%)</title><rect x="1102.7" y="1155.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.7" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.18%)</title><rect x="1102.7" y="1139.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1105.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.18%)</title><rect x="1102.7" y="1123.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.18%)</title><rect x="1102.7" y="1107.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.18%)</title><rect x="1102.7" y="1091.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.18%)</title><rect x="1102.7" y="1075.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.17%)</title><rect x="1102.9" y="1059.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.9" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.17%)</title><rect x="1102.9" y="1043.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.17%)</title><rect x="1102.9" y="1027.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.17%)</title><rect x="1102.9" y="1011.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.17%)</title><rect x="1102.9" y="995.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.15%)</title><rect x="1102.9" y="979.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.9" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.12%)</title><rect x="1103.1" y="963.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.1" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.12%)</title><rect x="1103.1" y="947.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1106.1" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.12%)</title><rect x="1103.1" y="931.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.12%)</title><rect x="1103.1" y="915.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1106.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.12%)</title><rect x="1103.1" y="899.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.10%)</title><rect x="1103.1" y="883.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.1" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.08%)</title><rect x="1103.1" y="867.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.08%)</title><rect x="1103.1" y="851.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.08%)</title><rect x="1103.1" y="835.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.08%)</title><rect x="1103.1" y="819.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.08%)</title><rect x="1103.1" y="803.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1103.2" y="787.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1106.2" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1103.2" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.2" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1103.2" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1103.2" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1103.2" y="723.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1106.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1103.2" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1103.2" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.2" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1103.2" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1106.2" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1103.2" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1103.2" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1106.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1103.2" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.2" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1105.4" y="1251.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.4" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1105.4" y="1235.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.4" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1105.4" y="1219.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1108.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1105.4" y="1203.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1105.4" y="1187.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1108.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1105.4" y="1171.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1105.4" y="1155.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.4" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1105.4" y="1139.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.4" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1105.4" y="1123.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1105.4" y="1107.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1108.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1105.4" y="1091.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1105.4" y="1075.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1105.4" y="1059.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.4" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1105.4" y="1043.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1108.4" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1105.4" y="1027.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1105.4" y="1011.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1105.4" y="995.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1105.4" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1108.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1105.4" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.4" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1105.4" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1108.4" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1105.4" y="931.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1105.4" y="915.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1105.4" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1108.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1105.4" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1105.4" y="867.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1108.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (2 samples, 0.03%)</title><rect x="1106.6" y="1283.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1109.6" y="1294.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (2 samples, 0.03%)</title><rect x="1106.6" y="1267.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.6" y="1278.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1106.6" y="1251.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.6" y="1262.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (3 samples, 0.05%)</title><rect x="1107.6" y="1331.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.6" y="1342.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (2 samples, 0.03%)</title><rect x="1107.6" y="1315.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.6" y="1326.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (46 samples, 0.77%)</title><rect x="1108.2" y="1363.0" width="9.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.2" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (37 samples, 0.62%)</title><rect x="1108.2" y="1347.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.2" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (37 samples, 0.62%)</title><rect x="1108.2" y="1331.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (36 samples, 0.60%)</title><rect x="1108.2" y="1315.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (36 samples, 0.60%)</title><rect x="1108.2" y="1299.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (36 samples, 0.60%)</title><rect x="1108.2" y="1283.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (36 samples, 0.60%)</title><rect x="1108.2" y="1267.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.2" y="1278.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.05%)</title><rect x="1108.2" y="1251.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.2" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (29 samples, 0.48%)</title><rect x="1108.8" y="1251.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1111.8" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (29 samples, 0.48%)</title><rect x="1108.8" y="1235.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.8" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (29 samples, 0.48%)</title><rect x="1108.8" y="1219.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (29 samples, 0.48%)</title><rect x="1108.8" y="1203.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1111.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (29 samples, 0.48%)</title><rect x="1108.8" y="1187.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1111.8" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (29 samples, 0.48%)</title><rect x="1108.8" y="1171.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.8" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.42%)</title><rect x="1109.0" y="1155.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.0" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.42%)</title><rect x="1109.0" y="1139.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.0" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (23 samples, 0.38%)</title><rect x="1109.4" y="1123.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1112.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (23 samples, 0.38%)</title><rect x="1109.4" y="1107.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (23 samples, 0.38%)</title><rect x="1109.4" y="1091.0" width="4.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1112.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (23 samples, 0.38%)</title><rect x="1109.4" y="1075.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.33%)</title><rect x="1109.6" y="1059.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1112.6" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.33%)</title><rect x="1109.6" y="1043.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.6" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.33%)</title><rect x="1109.6" y="1027.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1112.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.33%)</title><rect x="1109.6" y="1011.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.6" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.33%)</title><rect x="1109.6" y="995.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1112.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.30%)</title><rect x="1109.6" y="979.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.6" y="990.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.05%)</title><rect x="1109.6" y="963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.6" y="974.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.05%)</title><rect x="1109.6" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.6" y="958.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.03%)</title><rect x="1109.8" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.8" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.03%)</title><rect x="1109.8" y="915.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.8" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.03%)</title><rect x="1109.8" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1112.8" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1109.8" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.8" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1109.8" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1112.8" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1109.8" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.8" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1109.8" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.8" y="846.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1109.8" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.17%)</title><rect x="1110.3" y="963.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.3" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.17%)</title><rect x="1110.3" y="947.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1113.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.15%)</title><rect x="1110.3" y="931.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1113.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.13%)</title><rect x="1110.5" y="915.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1113.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.13%)</title><rect x="1110.5" y="899.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1113.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.12%)</title><rect x="1110.5" y="883.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1113.5" y="894.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1110.5" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1113.5" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1111.1" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1111.1" y="851.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1114.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1111.1" y="835.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1114.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1111.1" y="819.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1111.1" y="803.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1111.1" y="787.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.1" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1111.1" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1114.1" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1111.1" y="755.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1111.1" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1114.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1111.1" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1111.1" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1114.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1111.3" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.3" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1112.3" y="963.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.3" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1113.5" y="1059.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1116.5" y="1070.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1113.9" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1116.9" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1113.9" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.9" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1113.9" y="1123.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1113.9" y="1107.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1116.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1113.9" y="1091.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1113.9" y="1075.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1116.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1113.9" y="1059.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.9" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1113.9" y="1043.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.9" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1113.9" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1113.9" y="1011.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1113.9" y="995.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1116.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1113.9" y="979.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1116.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1114.1" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.1" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1114.1" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.1" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1114.1" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.1" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1114.1" y="915.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1117.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1114.1" y="899.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1114.1" y="883.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1114.1" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.1" y="878.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1114.5" y="1251.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1114.5" y="1235.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1114.5" y="1219.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1114.5" y="1203.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1114.5" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1117.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1114.5" y="1171.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1117.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1114.5" y="1155.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.5" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1114.5" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.5" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1114.5" y="1123.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1114.5" y="1107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1117.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1114.5" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1114.5" y="1075.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1114.5" y="1059.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.5" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1114.5" y="1043.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.5" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1114.5" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1114.5" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1114.5" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1114.5" y="979.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1114.5" y="963.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.5" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (9 samples, 0.15%)</title><rect x="1115.5" y="1347.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.5" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.12%)</title><rect x="1115.5" y="1331.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.5" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.12%)</title><rect x="1115.5" y="1315.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.12%)</title><rect x="1115.5" y="1299.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.12%)</title><rect x="1115.5" y="1283.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.12%)</title><rect x="1115.5" y="1267.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.12%)</title><rect x="1115.5" y="1251.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.12%)</title><rect x="1115.5" y="1235.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.12%)</title><rect x="1115.5" y="1219.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.12%)</title><rect x="1115.5" y="1203.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.12%)</title><rect x="1115.5" y="1187.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.12%)</title><rect x="1115.5" y="1171.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.12%)</title><rect x="1115.5" y="1155.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.5" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.10%)</title><rect x="1115.5" y="1139.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.5" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.10%)</title><rect x="1115.5" y="1123.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.10%)</title><rect x="1115.5" y="1107.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.10%)</title><rect x="1115.5" y="1091.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.10%)</title><rect x="1115.5" y="1075.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1115.5" y="1059.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.5" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.08%)</title><rect x="1115.5" y="1043.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.5" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.08%)</title><rect x="1115.5" y="1027.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.08%)</title><rect x="1115.5" y="1011.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.08%)</title><rect x="1115.5" y="995.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.08%)</title><rect x="1115.5" y="979.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1115.5" y="963.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1118.5" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1115.5" y="947.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1118.5" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1115.5" y="931.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1115.5" y="915.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1118.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1115.5" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1118.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1115.5" y="883.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1115.5" y="867.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.5" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1115.7" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1115.7" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1115.7" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1115.7" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1115.7" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1118.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1115.7" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1115.7" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1115.7" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1115.7" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1115.7" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1118.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1115.7" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1115.7" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1118.0" y="1379.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.0" y="1390.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (12 samples, 0.20%)</title><rect x="1118.6" y="1459.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1121.6" y="1470.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (4 samples, 0.07%)</title><rect x="1118.6" y="1443.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1121.6" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (8 samples, 0.13%)</title><rect x="1119.4" y="1443.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.4" y="1454.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (5 samples, 0.08%)</title><rect x="1121.2" y="1459.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.2" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (4 samples, 0.07%)</title><rect x="1121.4" y="1443.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.4" y="1454.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1121.8" y="1427.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.8" y="1438.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (2 samples, 0.03%)</title><rect x="1121.8" y="1411.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.8" y="1422.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (265 samples, 4.43%)</title><rect x="1122.4" y="1491.0" width="52.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.4" y="1502.0">Compi..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (265 samples, 4.43%)</title><rect x="1122.4" y="1475.0" width="52.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.4" y="1486.0">Compi..</text>
</g>
<g>
<title>Compilation::compile_method() (265 samples, 4.43%)</title><rect x="1122.4" y="1459.0" width="52.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.4" y="1470.0">Compi..</text>
</g>
<g>
<title>Compilation::compile_java_method() (250 samples, 4.18%)</title><rect x="1122.4" y="1443.0" width="49.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1125.4" y="1454.0">Compi..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (111 samples, 1.85%)</title><rect x="1122.4" y="1427.0" width="21.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.4" y="1438.0">C..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (11 samples, 0.18%)</title><rect x="1122.4" y="1411.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.4" y="1422.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (8 samples, 0.13%)</title><rect x="1122.6" y="1395.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.6" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (8 samples, 0.13%)</title><rect x="1122.6" y="1379.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.6" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1122.6" y="1363.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.6" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1122.6" y="1347.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1125.6" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1122.6" y="1331.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.6" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1122.6" y="1315.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.6" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.03%)</title><rect x="1122.6" y="1299.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.6" y="1310.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (5 samples, 0.08%)</title><rect x="1123.2" y="1363.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.2" y="1374.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (89 samples, 1.49%)</title><rect x="1124.5" y="1411.0" width="17.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.5" y="1422.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (89 samples, 1.49%)</title><rect x="1124.5" y="1395.0" width="17.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.5" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (89 samples, 1.49%)</title><rect x="1124.5" y="1379.0" width="17.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.5" y="1390.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (4 samples, 0.07%)</title><rect x="1124.5" y="1363.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1127.5" y="1374.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (3 samples, 0.05%)</title><rect x="1124.7" y="1347.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.7" y="1358.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.03%)</title><rect x="1124.9" y="1331.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.9" y="1342.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.03%)</title><rect x="1124.9" y="1315.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.9" y="1326.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.03%)</title><rect x="1124.9" y="1299.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1127.9" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (84 samples, 1.40%)</title><rect x="1125.3" y="1363.0" width="16.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.3" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (83 samples, 1.39%)</title><rect x="1125.3" y="1347.0" width="16.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.3" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.05%)</title><rect x="1125.9" y="1331.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1128.9" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (73 samples, 1.22%)</title><rect x="1126.9" y="1331.0" width="14.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1129.9" y="1342.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (60 samples, 1.00%)</title><rect x="1126.9" y="1315.0" width="11.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.9" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (59 samples, 0.99%)</title><rect x="1127.1" y="1299.0" width="11.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.1" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (44 samples, 0.74%)</title><rect x="1127.3" y="1283.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.3" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (43 samples, 0.72%)</title><rect x="1127.3" y="1267.0" width="8.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.3" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (2 samples, 0.03%)</title><rect x="1127.3" y="1251.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1127.3" y="1235.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1130.3" y="1246.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (2 samples, 0.03%)</title><rect x="1127.3" y="1219.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.3" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1127.7" y="1251.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.7" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1127.7" y="1235.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.7" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.03%)</title><rect x="1127.7" y="1219.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.7" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (33 samples, 0.55%)</title><rect x="1128.3" y="1251.0" width="6.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.3" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (23 samples, 0.38%)</title><rect x="1128.7" y="1235.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.7" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (22 samples, 0.37%)</title><rect x="1128.7" y="1219.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.7" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (16 samples, 0.27%)</title><rect x="1129.3" y="1203.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.3" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (16 samples, 0.27%)</title><rect x="1129.3" y="1187.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.3" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (15 samples, 0.25%)</title><rect x="1129.3" y="1171.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.3" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (12 samples, 0.20%)</title><rect x="1129.3" y="1155.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.3" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (12 samples, 0.20%)</title><rect x="1129.3" y="1139.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.3" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.13%)</title><rect x="1129.3" y="1123.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1132.3" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.13%)</title><rect x="1129.3" y="1107.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.3" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.10%)</title><rect x="1129.5" y="1091.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.5" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.05%)</title><rect x="1129.7" y="1075.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1132.7" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.05%)</title><rect x="1129.7" y="1059.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.7" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1129.7" y="1043.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.7" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1129.7" y="1027.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.7" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1129.7" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.7" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1129.7" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.7" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1129.7" y="979.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.7" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.03%)</title><rect x="1129.7" y="963.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.7" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1130.3" y="1075.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.3" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1130.3" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.3" y="1070.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1130.3" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.3" y="1054.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.03%)</title><rect x="1130.3" y="1027.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (4 samples, 0.07%)</title><rect x="1130.9" y="1123.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.9" y="1134.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (3 samples, 0.05%)</title><rect x="1130.9" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.9" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (3 samples, 0.05%)</title><rect x="1132.4" y="1203.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.4" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.03%)</title><rect x="1132.4" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.4" y="1198.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (7 samples, 0.12%)</title><rect x="1133.2" y="1235.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.2" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.12%)</title><rect x="1133.2" y="1219.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.2" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (7 samples, 0.12%)</title><rect x="1133.2" y="1203.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.2" y="1214.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.03%)</title><rect x="1133.4" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.4" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (4 samples, 0.07%)</title><rect x="1133.8" y="1187.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.8" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.05%)</title><rect x="1134.0" y="1171.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1137.0" y="1182.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.05%)</title><rect x="1134.0" y="1155.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.0" y="1166.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (3 samples, 0.05%)</title><rect x="1134.0" y="1139.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.0" y="1150.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.03%)</title><rect x="1134.0" y="1123.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.0" y="1134.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1134.0" y="1107.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.0" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (3 samples, 0.05%)</title><rect x="1134.8" y="1251.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.8" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (5 samples, 0.08%)</title><rect x="1136.4" y="1283.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.4" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (4 samples, 0.07%)</title><rect x="1136.4" y="1267.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.4" y="1278.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (3 samples, 0.05%)</title><rect x="1136.6" y="1251.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.6" y="1262.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (3 samples, 0.05%)</title><rect x="1136.6" y="1235.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.6" y="1246.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (3 samples, 0.05%)</title><rect x="1136.6" y="1219.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.6" y="1230.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.03%)</title><rect x="1136.8" y="1203.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.8" y="1214.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (7 samples, 0.12%)</title><rect x="1137.4" y="1283.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.4" y="1294.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (7 samples, 0.12%)</title><rect x="1137.4" y="1267.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.4" y="1278.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (3 samples, 0.05%)</title><rect x="1137.6" y="1251.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.6" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1138.1" y="1251.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.1" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1138.1" y="1235.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.1" y="1246.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData(MethodData*) (2 samples, 0.03%)</title><rect x="1138.1" y="1219.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.1" y="1230.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (11 samples, 0.18%)</title><rect x="1138.7" y="1315.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.7" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (11 samples, 0.18%)</title><rect x="1138.7" y="1299.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.7" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (11 samples, 0.18%)</title><rect x="1138.7" y="1283.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.7" y="1294.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1138.7" y="1267.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.7" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (8 samples, 0.13%)</title><rect x="1139.3" y="1267.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.3" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (8 samples, 0.13%)</title><rect x="1139.3" y="1251.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.3" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (8 samples, 0.13%)</title><rect x="1139.3" y="1235.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.3" y="1246.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (6 samples, 0.10%)</title><rect x="1139.7" y="1219.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.7" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (4 samples, 0.07%)</title><rect x="1140.1" y="1203.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.1" y="1214.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.03%)</title><rect x="1140.5" y="1187.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.5" y="1198.0"></text>
</g>
<g>
<title>syscall (2 samples, 0.03%)</title><rect x="1140.5" y="1171.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1143.5" y="1182.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (2 samples, 0.03%)</title><rect x="1140.9" y="1315.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.9" y="1326.0"></text>
</g>
<g>
<title>IR::compute_code() (2 samples, 0.03%)</title><rect x="1142.1" y="1411.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.1" y="1422.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (2 samples, 0.03%)</title><rect x="1142.1" y="1395.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.1" y="1406.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (3 samples, 0.05%)</title><rect x="1142.5" y="1411.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.5" y="1422.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.03%)</title><rect x="1142.5" y="1395.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.5" y="1406.0"></text>
</g>
<g>
<title>ProfileCall::input_values_do(ValueVisitor*) (2 samples, 0.03%)</title><rect x="1142.5" y="1379.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1145.5" y="1390.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (5 samples, 0.08%)</title><rect x="1143.1" y="1411.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.1" y="1422.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (4 samples, 0.07%)</title><rect x="1143.1" y="1395.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.1" y="1406.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (2 samples, 0.03%)</title><rect x="1143.1" y="1379.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.1" y="1390.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (40 samples, 0.67%)</title><rect x="1144.3" y="1427.0" width="7.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.3" y="1438.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (22 samples, 0.37%)</title><rect x="1144.5" y="1411.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.5" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (4 samples, 0.07%)</title><rect x="1144.7" y="1395.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.7" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1144.7" y="1379.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.7" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.03%)</title><rect x="1144.7" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.7" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.03%)</title><rect x="1144.7" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.7" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (2 samples, 0.03%)</title><rect x="1145.0" y="1379.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.0" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1145.0" y="1363.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.0" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (3 samples, 0.05%)</title><rect x="1145.4" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.4" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::move_op(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1145.4" y="1379.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.4" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (3 samples, 0.05%)</title><rect x="1146.2" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.2" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (2 samples, 0.03%)</title><rect x="1146.2" y="1379.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.2" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (6 samples, 0.10%)</title><rect x="1146.8" y="1395.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.8" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (4 samples, 0.07%)</title><rect x="1147.2" y="1379.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.2" y="1390.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (4 samples, 0.07%)</title><rect x="1147.2" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.2" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (4 samples, 0.07%)</title><rect x="1147.2" y="1347.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.2" y="1358.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (3 samples, 0.05%)</title><rect x="1148.2" y="1395.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.2" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (3 samples, 0.05%)</title><rect x="1148.2" y="1379.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.2" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (3 samples, 0.05%)</title><rect x="1148.2" y="1363.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.2" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (15 samples, 0.25%)</title><rect x="1148.8" y="1411.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.8" y="1422.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (9 samples, 0.15%)</title><rect x="1149.2" y="1395.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.2" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (7 samples, 0.12%)</title><rect x="1149.2" y="1379.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.2" y="1390.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (6 samples, 0.10%)</title><rect x="1149.2" y="1363.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.2" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (4 samples, 0.07%)</title><rect x="1149.4" y="1347.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.4" y="1358.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (3 samples, 0.05%)</title><rect x="1149.6" y="1331.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.6" y="1342.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (2 samples, 0.03%)</title><rect x="1151.0" y="1395.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.0" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="1151.0" y="1379.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.0" y="1390.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (99 samples, 1.65%)</title><rect x="1152.1" y="1427.0" width="19.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.1" y="1438.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (20 samples, 0.33%)</title><rect x="1152.1" y="1411.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.1" y="1422.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (20 samples, 0.33%)</title><rect x="1152.1" y="1395.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.1" y="1406.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (3 samples, 0.05%)</title><rect x="1152.1" y="1379.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.1" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (5 samples, 0.08%)</title><rect x="1152.7" y="1379.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.7" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (4 samples, 0.07%)</title><rect x="1152.7" y="1363.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.7" y="1374.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (3 samples, 0.05%)</title><rect x="1152.9" y="1347.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.9" y="1358.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::grow(int) (2 samples, 0.03%)</title><rect x="1153.1" y="1331.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.1" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.03%)</title><rect x="1153.7" y="1379.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.7" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::rlock_result(Instruction*) (2 samples, 0.03%)</title><rect x="1153.7" y="1363.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.7" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (3 samples, 0.05%)</title><rect x="1154.9" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.9" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.03%)</title><rect x="1155.1" y="1363.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.1" y="1374.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.03%)</title><rect x="1155.1" y="1347.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.1" y="1358.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (2 samples, 0.03%)</title><rect x="1155.1" y="1331.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.1" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::do_StoreField(StoreField*) (3 samples, 0.05%)</title><rect x="1155.5" y="1379.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.5" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::access_store_at(unsigned long, BasicType, LIRItem&amp;, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (3 samples, 0.05%)</title><rect x="1155.5" y="1363.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.5" y="1374.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (79 samples, 1.32%)</title><rect x="1156.1" y="1411.0" width="15.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.1" y="1422.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (25 samples, 0.42%)</title><rect x="1156.5" y="1395.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.5" y="1406.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (22 samples, 0.37%)</title><rect x="1156.5" y="1379.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.5" y="1390.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (5 samples, 0.08%)</title><rect x="1156.7" y="1363.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.7" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (16 samples, 0.27%)</title><rect x="1157.7" y="1363.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.7" y="1374.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (9 samples, 0.15%)</title><rect x="1157.7" y="1347.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.7" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (2 samples, 0.03%)</title><rect x="1157.7" y="1331.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.7" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (5 samples, 0.08%)</title><rect x="1158.3" y="1331.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.3" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (5 samples, 0.08%)</title><rect x="1159.4" y="1347.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.4" y="1358.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (3 samples, 0.05%)</title><rect x="1159.4" y="1331.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.4" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::init_vars_for_alloc(Interval*) (2 samples, 0.03%)</title><rect x="1160.4" y="1347.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.4" y="1358.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (19 samples, 0.32%)</title><rect x="1161.4" y="1395.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.4" y="1406.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (19 samples, 0.32%)</title><rect x="1161.4" y="1379.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.4" y="1390.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.03%)</title><rect x="1161.6" y="1363.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.6" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (11 samples, 0.18%)</title><rect x="1162.2" y="1363.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.2" y="1374.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.03%)</title><rect x="1163.0" y="1347.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.0" y="1358.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (4 samples, 0.07%)</title><rect x="1163.4" y="1347.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.4" y="1358.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.05%)</title><rect x="1163.6" y="1331.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.6" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (4 samples, 0.07%)</title><rect x="1164.4" y="1363.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.4" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (4 samples, 0.07%)</title><rect x="1164.4" y="1347.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.4" y="1358.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (4 samples, 0.07%)</title><rect x="1164.4" y="1331.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.4" y="1342.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (20 samples, 0.33%)</title><rect x="1165.2" y="1395.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.2" y="1406.0"></text>
</g>
<g>
<title>Interval::add_use_pos(int, IntervalUseKind) (2 samples, 0.03%)</title><rect x="1166.1" y="1379.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.1" y="1390.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (3 samples, 0.05%)</title><rect x="1166.7" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.7" y="1390.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (3 samples, 0.05%)</title><rect x="1167.7" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.7" y="1390.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (2 samples, 0.03%)</title><rect x="1168.7" y="1379.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.7" y="1390.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (2 samples, 0.03%)</title><rect x="1169.1" y="1395.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.1" y="1406.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (4 samples, 0.07%)</title><rect x="1169.5" y="1395.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.5" y="1406.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (4 samples, 0.07%)</title><rect x="1170.5" y="1395.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.5" y="1406.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.03%)</title><rect x="1170.7" y="1379.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.7" y="1390.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.03%)</title><rect x="1170.7" y="1363.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.7" y="1374.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (14 samples, 0.23%)</title><rect x="1171.9" y="1443.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.9" y="1454.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (14 samples, 0.23%)</title><rect x="1171.9" y="1427.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.9" y="1438.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (3 samples, 0.05%)</title><rect x="1171.9" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.9" y="1422.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (4 samples, 0.07%)</title><rect x="1172.6" y="1411.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.6" y="1422.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (4 samples, 0.07%)</title><rect x="1172.6" y="1395.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="1406.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (6 samples, 0.10%)</title><rect x="1173.4" y="1411.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.4" y="1422.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (2 samples, 0.03%)</title><rect x="1173.4" y="1395.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.4" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (2 samples, 0.03%)</title><rect x="1173.8" y="1395.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="1406.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.03%)</title><rect x="1173.8" y="1379.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.8" y="1390.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (2 samples, 0.03%)</title><rect x="1173.8" y="1363.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.8" y="1374.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (2 samples, 0.03%)</title><rect x="1174.2" y="1395.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.2" y="1406.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.05%)</title><rect x="1174.6" y="1491.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.6" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (2 samples, 0.03%)</title><rect x="1174.8" y="1475.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.8" y="1486.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (2 samples, 0.03%)</title><rect x="1175.2" y="1491.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.2" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1175.2" y="1475.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.2" y="1486.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (3 samples, 0.05%)</title><rect x="1175.6" y="1491.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.6" y="1502.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (2 samples, 0.03%)</title><rect x="1175.8" y="1475.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.8" y="1486.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (3 samples, 0.05%)</title><rect x="1176.4" y="1507.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.4" y="1518.0"></text>
</g>
<g>
<title>sysinfo (2 samples, 0.03%)</title><rect x="1176.6" y="1491.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1179.6" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1176.6" y="1475.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.6" y="1486.0"></text>
</g>
<g>
<title>CompileQueue::get() (3 samples, 0.05%)</title><rect x="1177.2" y="1507.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.2" y="1518.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (2 samples, 0.03%)</title><rect x="1177.4" y="1491.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.4" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (14 samples, 0.23%)</title><rect x="1178.0" y="1523.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.0" y="1534.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (14 samples, 0.23%)</title><rect x="1178.0" y="1507.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.0" y="1518.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (13 samples, 0.22%)</title><rect x="1178.2" y="1491.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.2" y="1502.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (13 samples, 0.22%)</title><rect x="1178.2" y="1475.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.2" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (11 samples, 0.18%)</title><rect x="1178.2" y="1459.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.2" y="1470.0"></text>
</g>
<g>
<title>NativeCall::destination() const (3 samples, 0.05%)</title><rect x="1179.0" y="1443.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.0" y="1454.0"></text>
</g>
<g>
<title>bool clean_if_nmethod_is_unloaded&lt;CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool, bool) (3 samples, 0.05%)</title><rect x="1179.7" y="1443.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1182.7" y="1454.0"></text>
</g>
<g>
<title>nmethod::make_not_entrant_or_zombie(int) (2 samples, 0.03%)</title><rect x="1180.3" y="1459.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.3" y="1470.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (40 samples, 0.67%)</title><rect x="1180.7" y="1523.0" width="7.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.7" y="1534.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (39 samples, 0.65%)</title><rect x="1180.7" y="1507.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.7" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (38 samples, 0.63%)</title><rect x="1180.9" y="1491.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.9" y="1502.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (6 samples, 0.10%)</title><rect x="1180.9" y="1475.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.9" y="1486.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.07%)</title><rect x="1181.3" y="1459.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.3" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (3 samples, 0.05%)</title><rect x="1181.5" y="1443.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="1454.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (31 samples, 0.52%)</title><rect x="1182.1" y="1475.0" width="6.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1185.1" y="1486.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (5 samples, 0.08%)</title><rect x="1183.1" y="1459.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.1" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, int, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1183.3" y="1443.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.3" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (4 samples, 0.07%)</title><rect x="1184.1" y="1459.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.1" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (14 samples, 0.23%)</title><rect x="1184.9" y="1459.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (12 samples, 0.20%)</title><rect x="1185.1" y="1443.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.1" y="1454.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (6 samples, 0.10%)</title><rect x="1186.3" y="1427.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.3" y="1438.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.03%)</title><rect x="1187.6" y="1459.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="1470.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.08%)</title><rect x="1188.8" y="1555.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.8" y="1566.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.08%)</title><rect x="1188.8" y="1539.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.8" y="1550.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1188.8" y="1523.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="1534.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (2 samples, 0.03%)</title><rect x="1188.8" y="1507.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.8" y="1518.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (2 samples, 0.03%)</title><rect x="1188.8" y="1491.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.8" y="1502.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (2 samples, 0.03%)</title><rect x="1188.8" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="1486.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1188.8" y="1459.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.8" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1188.8" y="1443.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.8" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1188.8" y="1427.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.8" y="1438.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="1188.8" y="1411.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.8" y="1422.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1188.8" y="1395.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.8" y="1406.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1188.8" y="1379.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.8" y="1390.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (3 samples, 0.05%)</title><rect x="1189.2" y="1523.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.2" y="1534.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.05%)</title><rect x="1189.2" y="1507.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="1518.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.4" y="1491.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.4" y="1475.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="1486.0"></text>
</g>
</g>
</svg>
